
STM32F746G_DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001f890  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002070  0801fa60  0801fa60  00020a60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000078  08021ad0  08021ad0  00022ad0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08021b48  08021b48  00103ab8  2**0
                  CONTENTS
  5 .ARM          00000008  08021b48  08021b48  00022b48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  08021b50  08021b50  00103ab8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  08021b50  08021b50  00022b50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08021b68  08021b68  00022b68  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000124  20000000  08021b70  00023000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          00015bcc  20000124  08021c94  00023124  2**2
                  ALLOC
 11 ._user_heap_stack 00001400  20015cf0  08021c94  00023cf0  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00103ab8  2**0
                  CONTENTS, READONLY
 13 BufferSection 000bf400  c0000000  c0000000  00104000  2**2
                  ALLOC
 14 ExtFlashSection 000de4e0  90000000  90000000  00024000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 FontFlashSection 00001440  900de4e0  900de4e0  001024e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 00000198  900df920  900df920  00103920  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .debug_info   000e0e4b  00000000  00000000  00103ae8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 0001a0ce  00000000  00000000  001e4933  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003600  00000000  00000000  001fea08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 00003f8c  00000000  00000000  00202008  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  00039d3b  00000000  00000000  00205f94  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   00066471  00000000  00000000  0023fccf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    001273f5  00000000  00000000  002a6140  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000c2  00000000  00000000  003cd535  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00009204  00000000  00000000  003cd5f8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 0001c7a9  00000000  00000000  003d67fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000006c  00000000  00000000  003f2fa5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000124 	.word	0x20000124
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0801fa48 	.word	0x0801fa48

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000128 	.word	0x20000128
 800020c:	0801fa48 	.word	0x0801fa48

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_uldivmod>:
 80002b0:	b953      	cbnz	r3, 80002c8 <__aeabi_uldivmod+0x18>
 80002b2:	b94a      	cbnz	r2, 80002c8 <__aeabi_uldivmod+0x18>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bf08      	it	eq
 80002b8:	2800      	cmpeq	r0, #0
 80002ba:	bf1c      	itt	ne
 80002bc:	f04f 31ff 	movne.w	r1, #4294967295
 80002c0:	f04f 30ff 	movne.w	r0, #4294967295
 80002c4:	f000 b96a 	b.w	800059c <__aeabi_idiv0>
 80002c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d0:	f000 f806 	bl	80002e0 <__udivmoddi4>
 80002d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002dc:	b004      	add	sp, #16
 80002de:	4770      	bx	lr

080002e0 <__udivmoddi4>:
 80002e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002e4:	9d08      	ldr	r5, [sp, #32]
 80002e6:	460c      	mov	r4, r1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	d14e      	bne.n	800038a <__udivmoddi4+0xaa>
 80002ec:	4694      	mov	ip, r2
 80002ee:	458c      	cmp	ip, r1
 80002f0:	4686      	mov	lr, r0
 80002f2:	fab2 f282 	clz	r2, r2
 80002f6:	d962      	bls.n	80003be <__udivmoddi4+0xde>
 80002f8:	b14a      	cbz	r2, 800030e <__udivmoddi4+0x2e>
 80002fa:	f1c2 0320 	rsb	r3, r2, #32
 80002fe:	4091      	lsls	r1, r2
 8000300:	fa20 f303 	lsr.w	r3, r0, r3
 8000304:	fa0c fc02 	lsl.w	ip, ip, r2
 8000308:	4319      	orrs	r1, r3
 800030a:	fa00 fe02 	lsl.w	lr, r0, r2
 800030e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000312:	fa1f f68c 	uxth.w	r6, ip
 8000316:	fbb1 f4f7 	udiv	r4, r1, r7
 800031a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800031e:	fb07 1114 	mls	r1, r7, r4, r1
 8000322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000326:	fb04 f106 	mul.w	r1, r4, r6
 800032a:	4299      	cmp	r1, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x64>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f104 30ff 	add.w	r0, r4, #4294967295
 8000336:	f080 8112 	bcs.w	800055e <__udivmoddi4+0x27e>
 800033a:	4299      	cmp	r1, r3
 800033c:	f240 810f 	bls.w	800055e <__udivmoddi4+0x27e>
 8000340:	3c02      	subs	r4, #2
 8000342:	4463      	add	r3, ip
 8000344:	1a59      	subs	r1, r3, r1
 8000346:	fa1f f38e 	uxth.w	r3, lr
 800034a:	fbb1 f0f7 	udiv	r0, r1, r7
 800034e:	fb07 1110 	mls	r1, r7, r0, r1
 8000352:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000356:	fb00 f606 	mul.w	r6, r0, r6
 800035a:	429e      	cmp	r6, r3
 800035c:	d90a      	bls.n	8000374 <__udivmoddi4+0x94>
 800035e:	eb1c 0303 	adds.w	r3, ip, r3
 8000362:	f100 31ff 	add.w	r1, r0, #4294967295
 8000366:	f080 80fc 	bcs.w	8000562 <__udivmoddi4+0x282>
 800036a:	429e      	cmp	r6, r3
 800036c:	f240 80f9 	bls.w	8000562 <__udivmoddi4+0x282>
 8000370:	4463      	add	r3, ip
 8000372:	3802      	subs	r0, #2
 8000374:	1b9b      	subs	r3, r3, r6
 8000376:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800037a:	2100      	movs	r1, #0
 800037c:	b11d      	cbz	r5, 8000386 <__udivmoddi4+0xa6>
 800037e:	40d3      	lsrs	r3, r2
 8000380:	2200      	movs	r2, #0
 8000382:	e9c5 3200 	strd	r3, r2, [r5]
 8000386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800038a:	428b      	cmp	r3, r1
 800038c:	d905      	bls.n	800039a <__udivmoddi4+0xba>
 800038e:	b10d      	cbz	r5, 8000394 <__udivmoddi4+0xb4>
 8000390:	e9c5 0100 	strd	r0, r1, [r5]
 8000394:	2100      	movs	r1, #0
 8000396:	4608      	mov	r0, r1
 8000398:	e7f5      	b.n	8000386 <__udivmoddi4+0xa6>
 800039a:	fab3 f183 	clz	r1, r3
 800039e:	2900      	cmp	r1, #0
 80003a0:	d146      	bne.n	8000430 <__udivmoddi4+0x150>
 80003a2:	42a3      	cmp	r3, r4
 80003a4:	d302      	bcc.n	80003ac <__udivmoddi4+0xcc>
 80003a6:	4290      	cmp	r0, r2
 80003a8:	f0c0 80f0 	bcc.w	800058c <__udivmoddi4+0x2ac>
 80003ac:	1a86      	subs	r6, r0, r2
 80003ae:	eb64 0303 	sbc.w	r3, r4, r3
 80003b2:	2001      	movs	r0, #1
 80003b4:	2d00      	cmp	r5, #0
 80003b6:	d0e6      	beq.n	8000386 <__udivmoddi4+0xa6>
 80003b8:	e9c5 6300 	strd	r6, r3, [r5]
 80003bc:	e7e3      	b.n	8000386 <__udivmoddi4+0xa6>
 80003be:	2a00      	cmp	r2, #0
 80003c0:	f040 8090 	bne.w	80004e4 <__udivmoddi4+0x204>
 80003c4:	eba1 040c 	sub.w	r4, r1, ip
 80003c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003cc:	fa1f f78c 	uxth.w	r7, ip
 80003d0:	2101      	movs	r1, #1
 80003d2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003d6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003da:	fb08 4416 	mls	r4, r8, r6, r4
 80003de:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003e2:	fb07 f006 	mul.w	r0, r7, r6
 80003e6:	4298      	cmp	r0, r3
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x11c>
 80003ea:	eb1c 0303 	adds.w	r3, ip, r3
 80003ee:	f106 34ff 	add.w	r4, r6, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x11a>
 80003f4:	4298      	cmp	r0, r3
 80003f6:	f200 80cd 	bhi.w	8000594 <__udivmoddi4+0x2b4>
 80003fa:	4626      	mov	r6, r4
 80003fc:	1a1c      	subs	r4, r3, r0
 80003fe:	fa1f f38e 	uxth.w	r3, lr
 8000402:	fbb4 f0f8 	udiv	r0, r4, r8
 8000406:	fb08 4410 	mls	r4, r8, r0, r4
 800040a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800040e:	fb00 f707 	mul.w	r7, r0, r7
 8000412:	429f      	cmp	r7, r3
 8000414:	d908      	bls.n	8000428 <__udivmoddi4+0x148>
 8000416:	eb1c 0303 	adds.w	r3, ip, r3
 800041a:	f100 34ff 	add.w	r4, r0, #4294967295
 800041e:	d202      	bcs.n	8000426 <__udivmoddi4+0x146>
 8000420:	429f      	cmp	r7, r3
 8000422:	f200 80b0 	bhi.w	8000586 <__udivmoddi4+0x2a6>
 8000426:	4620      	mov	r0, r4
 8000428:	1bdb      	subs	r3, r3, r7
 800042a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800042e:	e7a5      	b.n	800037c <__udivmoddi4+0x9c>
 8000430:	f1c1 0620 	rsb	r6, r1, #32
 8000434:	408b      	lsls	r3, r1
 8000436:	fa22 f706 	lsr.w	r7, r2, r6
 800043a:	431f      	orrs	r7, r3
 800043c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000440:	fa04 f301 	lsl.w	r3, r4, r1
 8000444:	ea43 030c 	orr.w	r3, r3, ip
 8000448:	40f4      	lsrs	r4, r6
 800044a:	fa00 f801 	lsl.w	r8, r0, r1
 800044e:	0c38      	lsrs	r0, r7, #16
 8000450:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000454:	fbb4 fef0 	udiv	lr, r4, r0
 8000458:	fa1f fc87 	uxth.w	ip, r7
 800045c:	fb00 441e 	mls	r4, r0, lr, r4
 8000460:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000464:	fb0e f90c 	mul.w	r9, lr, ip
 8000468:	45a1      	cmp	r9, r4
 800046a:	fa02 f201 	lsl.w	r2, r2, r1
 800046e:	d90a      	bls.n	8000486 <__udivmoddi4+0x1a6>
 8000470:	193c      	adds	r4, r7, r4
 8000472:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000476:	f080 8084 	bcs.w	8000582 <__udivmoddi4+0x2a2>
 800047a:	45a1      	cmp	r9, r4
 800047c:	f240 8081 	bls.w	8000582 <__udivmoddi4+0x2a2>
 8000480:	f1ae 0e02 	sub.w	lr, lr, #2
 8000484:	443c      	add	r4, r7
 8000486:	eba4 0409 	sub.w	r4, r4, r9
 800048a:	fa1f f983 	uxth.w	r9, r3
 800048e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000492:	fb00 4413 	mls	r4, r0, r3, r4
 8000496:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800049a:	fb03 fc0c 	mul.w	ip, r3, ip
 800049e:	45a4      	cmp	ip, r4
 80004a0:	d907      	bls.n	80004b2 <__udivmoddi4+0x1d2>
 80004a2:	193c      	adds	r4, r7, r4
 80004a4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004a8:	d267      	bcs.n	800057a <__udivmoddi4+0x29a>
 80004aa:	45a4      	cmp	ip, r4
 80004ac:	d965      	bls.n	800057a <__udivmoddi4+0x29a>
 80004ae:	3b02      	subs	r3, #2
 80004b0:	443c      	add	r4, r7
 80004b2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004b6:	fba0 9302 	umull	r9, r3, r0, r2
 80004ba:	eba4 040c 	sub.w	r4, r4, ip
 80004be:	429c      	cmp	r4, r3
 80004c0:	46ce      	mov	lr, r9
 80004c2:	469c      	mov	ip, r3
 80004c4:	d351      	bcc.n	800056a <__udivmoddi4+0x28a>
 80004c6:	d04e      	beq.n	8000566 <__udivmoddi4+0x286>
 80004c8:	b155      	cbz	r5, 80004e0 <__udivmoddi4+0x200>
 80004ca:	ebb8 030e 	subs.w	r3, r8, lr
 80004ce:	eb64 040c 	sbc.w	r4, r4, ip
 80004d2:	fa04 f606 	lsl.w	r6, r4, r6
 80004d6:	40cb      	lsrs	r3, r1
 80004d8:	431e      	orrs	r6, r3
 80004da:	40cc      	lsrs	r4, r1
 80004dc:	e9c5 6400 	strd	r6, r4, [r5]
 80004e0:	2100      	movs	r1, #0
 80004e2:	e750      	b.n	8000386 <__udivmoddi4+0xa6>
 80004e4:	f1c2 0320 	rsb	r3, r2, #32
 80004e8:	fa20 f103 	lsr.w	r1, r0, r3
 80004ec:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f0:	fa24 f303 	lsr.w	r3, r4, r3
 80004f4:	4094      	lsls	r4, r2
 80004f6:	430c      	orrs	r4, r1
 80004f8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004fc:	fa00 fe02 	lsl.w	lr, r0, r2
 8000500:	fa1f f78c 	uxth.w	r7, ip
 8000504:	fbb3 f0f8 	udiv	r0, r3, r8
 8000508:	fb08 3110 	mls	r1, r8, r0, r3
 800050c:	0c23      	lsrs	r3, r4, #16
 800050e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000512:	fb00 f107 	mul.w	r1, r0, r7
 8000516:	4299      	cmp	r1, r3
 8000518:	d908      	bls.n	800052c <__udivmoddi4+0x24c>
 800051a:	eb1c 0303 	adds.w	r3, ip, r3
 800051e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000522:	d22c      	bcs.n	800057e <__udivmoddi4+0x29e>
 8000524:	4299      	cmp	r1, r3
 8000526:	d92a      	bls.n	800057e <__udivmoddi4+0x29e>
 8000528:	3802      	subs	r0, #2
 800052a:	4463      	add	r3, ip
 800052c:	1a5b      	subs	r3, r3, r1
 800052e:	b2a4      	uxth	r4, r4
 8000530:	fbb3 f1f8 	udiv	r1, r3, r8
 8000534:	fb08 3311 	mls	r3, r8, r1, r3
 8000538:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800053c:	fb01 f307 	mul.w	r3, r1, r7
 8000540:	42a3      	cmp	r3, r4
 8000542:	d908      	bls.n	8000556 <__udivmoddi4+0x276>
 8000544:	eb1c 0404 	adds.w	r4, ip, r4
 8000548:	f101 36ff 	add.w	r6, r1, #4294967295
 800054c:	d213      	bcs.n	8000576 <__udivmoddi4+0x296>
 800054e:	42a3      	cmp	r3, r4
 8000550:	d911      	bls.n	8000576 <__udivmoddi4+0x296>
 8000552:	3902      	subs	r1, #2
 8000554:	4464      	add	r4, ip
 8000556:	1ae4      	subs	r4, r4, r3
 8000558:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800055c:	e739      	b.n	80003d2 <__udivmoddi4+0xf2>
 800055e:	4604      	mov	r4, r0
 8000560:	e6f0      	b.n	8000344 <__udivmoddi4+0x64>
 8000562:	4608      	mov	r0, r1
 8000564:	e706      	b.n	8000374 <__udivmoddi4+0x94>
 8000566:	45c8      	cmp	r8, r9
 8000568:	d2ae      	bcs.n	80004c8 <__udivmoddi4+0x1e8>
 800056a:	ebb9 0e02 	subs.w	lr, r9, r2
 800056e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000572:	3801      	subs	r0, #1
 8000574:	e7a8      	b.n	80004c8 <__udivmoddi4+0x1e8>
 8000576:	4631      	mov	r1, r6
 8000578:	e7ed      	b.n	8000556 <__udivmoddi4+0x276>
 800057a:	4603      	mov	r3, r0
 800057c:	e799      	b.n	80004b2 <__udivmoddi4+0x1d2>
 800057e:	4630      	mov	r0, r6
 8000580:	e7d4      	b.n	800052c <__udivmoddi4+0x24c>
 8000582:	46d6      	mov	lr, sl
 8000584:	e77f      	b.n	8000486 <__udivmoddi4+0x1a6>
 8000586:	4463      	add	r3, ip
 8000588:	3802      	subs	r0, #2
 800058a:	e74d      	b.n	8000428 <__udivmoddi4+0x148>
 800058c:	4606      	mov	r6, r0
 800058e:	4623      	mov	r3, r4
 8000590:	4608      	mov	r0, r1
 8000592:	e70f      	b.n	80003b4 <__udivmoddi4+0xd4>
 8000594:	3e02      	subs	r6, #2
 8000596:	4463      	add	r3, ip
 8000598:	e730      	b.n	80003fc <__udivmoddi4+0x11c>
 800059a:	bf00      	nop

0800059c <__aeabi_idiv0>:
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop

080005a0 <vApplicationIdleHook>:
   specified, or call vTaskDelay()). If the application makes use of the
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
   vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80005a0:	4901      	ldr	r1, [pc, #4]	@ (80005a8 <vApplicationIdleHook+0x8>)
 80005a2:	2000      	movs	r0, #0
 80005a4:	f009 bb42 	b.w	8009c2c <vTaskSetApplicationTaskTag>
 80005a8:	080018e9 	.word	0x080018e9

080005ac <_Z26Bluetooth_Receive_CallbackPht>:
/* USER CODE END MX_GPIO_Init_2 */
}

/* USER CODE BEGIN 4 */
char rx_data[256];
void Bluetooth_Receive_Callback(uint8_t* data, uint16_t size) {
 80005ac:	b538      	push	{r3, r4, r5, lr}

	if(bt.rx_buffer[0]!= 'S'){
 80005ae:	4d0e      	ldr	r5, [pc, #56]	@ (80005e8 <_Z26Bluetooth_Receive_CallbackPht+0x3c>)
		rx_data[0]=bt.rx_buffer[size];
		strncpy(rx_data,(char*)bt.rx_buffer+1,9);
 80005b0:	2209      	movs	r2, #9
	}
	else
		strncpy(rx_data,(char*)bt.rx_buffer,9);
 80005b2:	480e      	ldr	r0, [pc, #56]	@ (80005ec <_Z26Bluetooth_Receive_CallbackPht+0x40>)
	if(bt.rx_buffer[0]!= 'S'){
 80005b4:	462c      	mov	r4, r5
 80005b6:	f814 3f04 	ldrb.w	r3, [r4, #4]!
 80005ba:	2b53      	cmp	r3, #83	@ 0x53
		strncpy(rx_data,(char*)bt.rx_buffer+1,9);
 80005bc:	bf14      	ite	ne
 80005be:	1d69      	addne	r1, r5, #5
		strncpy(rx_data,(char*)bt.rx_buffer,9);
 80005c0:	4621      	moveq	r1, r4
 80005c2:	f01e fcb1 	bl	801ef28 <strncpy>

	memset(bt.rx_buffer,0,256);
 80005c6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80005ca:	2100      	movs	r1, #0
 80005cc:	4808      	ldr	r0, [pc, #32]	@ (80005f0 <_Z26Bluetooth_Receive_CallbackPht+0x44>)
 80005ce:	f01e fc91 	bl	801eef4 <memset>
	bt.rx_index = 0;
 80005d2:	2300      	movs	r3, #0
	HAL_UART_Receive_IT(bt.huart, (uint8_t *)&bt.rx_buffer[bt.rx_index], 1);
 80005d4:	f854 0c04 	ldr.w	r0, [r4, #-4]
 80005d8:	2201      	movs	r2, #1
	bt.rx_index = 0;
 80005da:	f8a5 3104 	strh.w	r3, [r5, #260]	@ 0x104
	HAL_UART_Receive_IT(bt.huart, (uint8_t *)&bt.rx_buffer[bt.rx_index], 1);
 80005de:	4904      	ldr	r1, [pc, #16]	@ (80005f0 <_Z26Bluetooth_Receive_CallbackPht+0x44>)
}
 80005e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	HAL_UART_Receive_IT(bt.huart, (uint8_t *)&bt.rx_buffer[bt.rx_index], 1);
 80005e4:	f007 bc00 	b.w	8007de8 <HAL_UART_Receive_IT>
 80005e8:	20001d08 	.word	0x20001d08
 80005ec:	20000140 	.word	0x20000140
 80005f0:	20001d0c 	.word	0x20001d0c

080005f4 <_Z16StartDefaultTaskPv>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80005f4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
	  osDelay(100);
 80005f6:	2064      	movs	r0, #100	@ 0x64
 80005f8:	f007 fd2c 	bl	8008054 <osDelay>
  for(;;)
 80005fc:	e7fb      	b.n	80005f6 <_Z16StartDefaultTaskPv+0x2>
	...

08000600 <_Z8BLE_TaskPv>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_BLE_Task */
void BLE_Task(void *argument)
{
 8000600:	b508      	push	{r3, lr}
  /* USER CODE BEGIN BLE_Task */
  /* Infinite loop */
	Bluetooth_init(&bt, &huart7, Bluetooth_Receive_Callback, Bluetooth_Transmit_Callback);
 8000602:	4a05      	ldr	r2, [pc, #20]	@ (8000618 <_Z8BLE_TaskPv+0x18>)
 8000604:	4b05      	ldr	r3, [pc, #20]	@ (800061c <_Z8BLE_TaskPv+0x1c>)
 8000606:	4906      	ldr	r1, [pc, #24]	@ (8000620 <_Z8BLE_TaskPv+0x20>)
 8000608:	4806      	ldr	r0, [pc, #24]	@ (8000624 <_Z8BLE_TaskPv+0x24>)
 800060a:	f004 f831 	bl	8004670 <Bluetooth_init>

  for(;;)
  {

	//HAL_UART_Receive_IT(&huart7, (uint8_t *)&bt.rx_buffer[bt.rx_index], 1);
    osDelay(25);
 800060e:	2019      	movs	r0, #25
 8000610:	f007 fd20 	bl	8008054 <osDelay>
  for(;;)
 8000614:	e7fb      	b.n	800060e <_Z8BLE_TaskPv+0xe>
 8000616:	bf00      	nop
 8000618:	080005ad 	.word	0x080005ad
 800061c:	08000629 	.word	0x08000629
 8000620:	20000294 	.word	0x20000294
 8000624:	20001d08 	.word	0x20001d08

08000628 <_Z27Bluetooth_Transmit_Callbackv>:
void Bluetooth_Transmit_Callback(void) {
 8000628:	4770      	bx	lr
	...

0800062c <_Z18SystemClock_Configv>:
{
 800062c:	b510      	push	{r4, lr}
 800062e:	b094      	sub	sp, #80	@ 0x50
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000630:	2210      	movs	r2, #16
 8000632:	2100      	movs	r1, #0
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000634:	2402      	movs	r4, #2
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000636:	a80a      	add	r0, sp, #40	@ 0x28
 8000638:	f01e fc5c 	bl	801eef4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800063c:	2214      	movs	r2, #20
 800063e:	2100      	movs	r1, #0
 8000640:	a803      	add	r0, sp, #12
 8000642:	f01e fc57 	bl	801eef4 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8000646:	4b1d      	ldr	r3, [pc, #116]	@ (80006bc <_Z18SystemClock_Configv+0x90>)
  RCC_OscInitStruct.PLL.PLLN = 432;
 8000648:	2119      	movs	r1, #25
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800064a:	a808      	add	r0, sp, #32
  __HAL_RCC_PWR_CLK_ENABLE();
 800064c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800064e:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000652:	641a      	str	r2, [r3, #64]	@ 0x40
 8000654:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000656:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800065a:	9301      	str	r3, [sp, #4]
 800065c:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800065e:	4b18      	ldr	r3, [pc, #96]	@ (80006c0 <_Z18SystemClock_Configv+0x94>)
 8000660:	681a      	ldr	r2, [r3, #0]
 8000662:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8000666:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000668:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000670:	9302      	str	r3, [sp, #8]
 8000672:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000674:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000678:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800067c:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8000680:	e9cd 430e 	strd	r4, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 432;
 8000684:	f44f 73d8 	mov.w	r3, #432	@ 0x1b0
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000688:	e9cd 4412 	strd	r4, r4, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLN = 432;
 800068c:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000690:	f005 ff92 	bl	80065b8 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000694:	f005 fc2e 	bl	8005ef4 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000698:	230f      	movs	r3, #15
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800069a:	2000      	movs	r0, #0
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 800069c:	2107      	movs	r1, #7
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800069e:	e9cd 3403 	strd	r3, r4, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80006a2:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80006a6:	e9cd 0305 	strd	r0, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80006aa:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80006ae:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80006b0:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80006b2:	f006 f969 	bl	8006988 <HAL_RCC_ClockConfig>
}
 80006b6:	b014      	add	sp, #80	@ 0x50
 80006b8:	bd10      	pop	{r4, pc}
 80006ba:	bf00      	nop
 80006bc:	40023800 	.word	0x40023800
 80006c0:	40007000 	.word	0x40007000

080006c4 <main>:
{
 80006c4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80006c8:	b09b      	sub	sp, #108	@ 0x6c

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006ca:	2210      	movs	r2, #16
 80006cc:	2100      	movs	r1, #0
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80006ce:	2501      	movs	r5, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006d0:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006d2:	f04f 4a10 	mov.w	sl, #2415919104	@ 0x90000000
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006d6:	f01e fc0d 	bl	801eef4 <memset>
  MPU_InitStruct.SubRegionDisable = 0x0;
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 80006da:	2400      	movs	r4, #0
  HAL_MPU_Disable();
 80006dc:	f004 fb5e 	bl	8004d9c <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006e0:	4bc7      	ldr	r3, [pc, #796]	@ (8000a00 <main+0x33c>)
  MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006e2:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80006e4:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 80006e8:	9410      	str	r4, [sp, #64]	@ 0x40
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006ea:	e9cd a30e 	strd	sl, r3, [sp, #56]	@ 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006ee:	f004 fb73 	bl	8004dd8 <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 80006f2:	2317      	movs	r3, #23
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006f4:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 80006f6:	f88d 5035 	strb.w	r5, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 80006fa:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 80006fe:	f88d 5042 	strb.w	r5, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000702:	f004 fb69 	bl	8004dd8 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 8000706:	2004      	movs	r0, #4
 8000708:	f004 fb56 	bl	8004db8 <HAL_MPU_Enable>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800070c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000710:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000714:	4abb      	ldr	r2, [pc, #748]	@ (8000a04 <main+0x340>)
 8000716:	f8c2 4250 	str.w	r4, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800071a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800071e:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000722:	6953      	ldr	r3, [r2, #20]
 8000724:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000728:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800072a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800072e:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8000732:	f8c2 4084 	str.w	r4, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8000736:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 800073a:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800073e:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000742:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8000746:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800074a:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800074c:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000750:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000752:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8000756:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000758:	f8c2 5260 	str.w	r5, [r2, #608]	@ 0x260
      } while (ways-- != 0U);
 800075c:	d2f9      	bcs.n	8000752 <main+0x8e>
    } while(sets-- != 0U);
 800075e:	3b20      	subs	r3, #32
 8000760:	f113 0f20 	cmn.w	r3, #32
 8000764:	d1f2      	bne.n	800074c <main+0x88>
 8000766:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 800076a:	6953      	ldr	r3, [r2, #20]
 800076c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000770:	6153      	str	r3, [r2, #20]
 8000772:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000776:	f3bf 8f6f 	isb	sy
  HAL_Init();
 800077a:	f004 fa75 	bl	8004c68 <HAL_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800077e:	2400      	movs	r4, #0
  SystemClock_Config();
 8000780:	f7ff ff54 	bl	800062c <_Z18SystemClock_Configv>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000784:	2214      	movs	r2, #20
 8000786:	2100      	movs	r1, #0
 8000788:	a80d      	add	r0, sp, #52	@ 0x34
 800078a:	f01e fbb3 	bl	801eef4 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800078e:	4b9e      	ldr	r3, [pc, #632]	@ (8000a08 <main+0x344>)
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000790:	2110      	movs	r1, #16
 8000792:	489e      	ldr	r0, [pc, #632]	@ (8000a0c <main+0x348>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000794:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000796:	2701      	movs	r7, #1
 8000798:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800079c:	f04f 0b03 	mov.w	fp, #3
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007a0:	f042 0210 	orr.w	r2, r2, #16
  GPIO_InitStruct.Pin = LCD_DISP_Pin;
 80007a4:	f44f 5a80 	mov.w	sl, #4096	@ 0x1000
  hdma2d.Instance = DMA2D;
 80007a8:	4d99      	ldr	r5, [pc, #612]	@ (8000a10 <main+0x34c>)
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80007aa:	f04f 0904 	mov.w	r9, #4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007ae:	631a      	str	r2, [r3, #48]	@ 0x30
 80007b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80007b2:	4e98      	ldr	r6, [pc, #608]	@ (8000a14 <main+0x350>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007b4:	f002 0210 	and.w	r2, r2, #16
 80007b8:	9202      	str	r2, [sp, #8]
 80007ba:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80007bc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007be:	f042 0202 	orr.w	r2, r2, #2
 80007c2:	631a      	str	r2, [r3, #48]	@ 0x30
 80007c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007c6:	f002 0202 	and.w	r2, r2, #2
 80007ca:	9203      	str	r2, [sp, #12]
 80007cc:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80007ce:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007d0:	f042 0201 	orr.w	r2, r2, #1
 80007d4:	631a      	str	r2, [r3, #48]	@ 0x30
 80007d6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007d8:	f002 0201 	and.w	r2, r2, #1
 80007dc:	9204      	str	r2, [sp, #16]
 80007de:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80007e0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007e2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80007e6:	631a      	str	r2, [r3, #48]	@ 0x30
 80007e8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007ea:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80007ee:	9205      	str	r2, [sp, #20]
 80007f0:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80007f2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007f4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80007f8:	631a      	str	r2, [r3, #48]	@ 0x30
 80007fa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007fc:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 8000800:	9206      	str	r2, [sp, #24]
 8000802:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000804:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000806:	f042 0208 	orr.w	r2, r2, #8
 800080a:	631a      	str	r2, [r3, #48]	@ 0x30
 800080c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800080e:	f002 0208 	and.w	r2, r2, #8
 8000812:	9207      	str	r2, [sp, #28]
 8000814:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8000816:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000818:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800081c:	631a      	str	r2, [r3, #48]	@ 0x30
 800081e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000820:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
 8000824:	9208      	str	r2, [sp, #32]
 8000826:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000828:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800082a:	f042 0220 	orr.w	r2, r2, #32
 800082e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000830:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000832:	f002 0220 	and.w	r2, r2, #32
 8000836:	9209      	str	r2, [sp, #36]	@ 0x24
 8000838:	9a09      	ldr	r2, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800083a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800083c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000840:	631a      	str	r2, [r3, #48]	@ 0x30
 8000842:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000844:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8000848:	920a      	str	r2, [sp, #40]	@ 0x28
 800084a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800084c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800084e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000852:	631a      	str	r2, [r3, #48]	@ 0x30
 8000854:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000856:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 800085a:	920b      	str	r2, [sp, #44]	@ 0x2c
 800085c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800085e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000860:	f042 0204 	orr.w	r2, r2, #4
 8000864:	631a      	str	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000866:	2200      	movs	r2, #0
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000868:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800086a:	f003 0304 	and.w	r3, r3, #4
 800086e:	930c      	str	r3, [sp, #48]	@ 0x30
 8000870:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000872:	f004 fe0f 	bl	8005494 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000876:	2201      	movs	r2, #1
 8000878:	2108      	movs	r1, #8
 800087a:	4867      	ldr	r0, [pc, #412]	@ (8000a18 <main+0x354>)
 800087c:	f004 fe0a 	bl	8005494 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 8000880:	2201      	movs	r2, #1
 8000882:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000886:	4865      	ldr	r0, [pc, #404]	@ (8000a1c <main+0x358>)
 8000888:	f004 fe04 	bl	8005494 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 800088c:	2200      	movs	r2, #0
 800088e:	21c0      	movs	r1, #192	@ 0xc0
 8000890:	4863      	ldr	r0, [pc, #396]	@ (8000a20 <main+0x35c>)
 8000892:	f004 fdff 	bl	8005494 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000896:	2200      	movs	r2, #0
 8000898:	2140      	movs	r1, #64	@ 0x40
 800089a:	4862      	ldr	r0, [pc, #392]	@ (8000a24 <main+0x360>)
 800089c:	f004 fdfa 	bl	8005494 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80008a0:	a90d      	add	r1, sp, #52	@ 0x34
 80008a2:	485a      	ldr	r0, [pc, #360]	@ (8000a0c <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008a4:	e9cd 870d 	strd	r8, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008a8:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80008ac:	f004 fc6e 	bl	800518c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 80008b0:	2308      	movs	r3, #8
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80008b2:	a90d      	add	r1, sp, #52	@ 0x34
 80008b4:	4858      	ldr	r0, [pc, #352]	@ (8000a18 <main+0x354>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008b6:	e9cd 370d 	strd	r3, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008ba:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80008be:	f004 fc65 	bl	800518c <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 80008c2:	a90d      	add	r1, sp, #52	@ 0x34
 80008c4:	4855      	ldr	r0, [pc, #340]	@ (8000a1c <main+0x358>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008c6:	e9cd a70d 	strd	sl, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008ca:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 80008ce:	f004 fc5d 	bl	800518c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
 80008d2:	22c0      	movs	r2, #192	@ 0xc0
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80008d4:	a90d      	add	r1, sp, #52	@ 0x34
 80008d6:	4852      	ldr	r0, [pc, #328]	@ (8000a20 <main+0x35c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008d8:	e9cd 270d 	strd	r2, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008dc:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80008e0:	f004 fc54 	bl	800518c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
 80008e4:	2240      	movs	r2, #64	@ 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80008e6:	a90d      	add	r1, sp, #52	@ 0x34
 80008e8:	484e      	ldr	r0, [pc, #312]	@ (8000a24 <main+0x360>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008ea:	e9cd 270d 	strd	r2, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008ee:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80008f2:	f004 fc4b 	bl	800518c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80008f6:	484c      	ldr	r0, [pc, #304]	@ (8000a28 <main+0x364>)
 80008f8:	494c      	ldr	r1, [pc, #304]	@ (8000a2c <main+0x368>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 80008fa:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
 80008fc:	6001      	str	r1, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80008fe:	6207      	str	r7, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000900:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000904:	f004 fa94 	bl	8004e30 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8000908:	4949      	ldr	r1, [pc, #292]	@ (8000a30 <main+0x36c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800090a:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 800090c:	e9c5 1400 	strd	r1, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8000910:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8000914:	e9c5 440a 	strd	r4, r4, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000918:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800091c:	f004 fb37 	bl	8004f8e <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000920:	4639      	mov	r1, r7
 8000922:	4628      	mov	r0, r5
    Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8000924:	4d43      	ldr	r5, [pc, #268]	@ (8000a34 <main+0x370>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000926:	f004 fbeb 	bl	8005100 <HAL_DMA2D_ConfigLayer>
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800092a:	2340      	movs	r3, #64	@ 0x40
 800092c:	f44f 72c0 	mov.w	r2, #384	@ 0x180
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000930:	4941      	ldr	r1, [pc, #260]	@ (8000a38 <main+0x374>)
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000932:	4630      	mov	r0, r6
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000934:	60b4      	str	r4, [r6, #8]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000936:	61f4      	str	r4, [r6, #28]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 8000938:	62b4      	str	r4, [r6, #40]	@ 0x28
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800093a:	e9c6 3205 	strd	r3, r2, [r6, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800093e:	f44f 6200 	mov.w	r2, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8000942:	e9c6 2a08 	strd	r2, sl, [r6, #32]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000946:	f04f 0a02 	mov.w	sl, #2
 800094a:	2207      	movs	r2, #7
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 800094c:	e9c6 1400 	strd	r1, r4, [r6]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000950:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.RCDDelay = 2;
 8000952:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000956:	e9c6 9803 	strd	r9, r8, [r6, #12]
  SdramTiming.RowCycleDelay = 7;
 800095a:	e9cd 920f 	strd	r9, r2, [sp, #60]	@ 0x3c
  SdramTiming.ExitSelfRefreshDelay = 7;
 800095e:	e9cd a20d 	strd	sl, r2, [sp, #52]	@ 0x34
  SdramTiming.RPDelay = 2;
 8000962:	e9cd ba11 	strd	fp, sl, [sp, #68]	@ 0x44
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000966:	f006 fb75 	bl	8007054 <HAL_SDRAM_Init>
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800096a:	4629      	mov	r1, r5
 800096c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000970:	4630      	mov	r0, r6
  __IO uint32_t tmpmrd = 0;
 8000972:	9401      	str	r4, [sp, #4]
    Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK1;
 8000974:	e9c5 7800 	strd	r7, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 8000978:	e9c5 7402 	strd	r7, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800097c:	f006 fb8a 	bl	8007094 <HAL_SDRAM_SendCommand>
    HAL_Delay(1);
 8000980:	4638      	mov	r0, r7
 8000982:	f004 f995 	bl	8004cb0 <HAL_Delay>
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000986:	4629      	mov	r1, r5
 8000988:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800098c:	4630      	mov	r0, r6
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800098e:	e9c5 a800 	strd	sl, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 8000992:	e9c5 7402 	strd	r7, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000996:	f006 fb7d 	bl	8007094 <HAL_SDRAM_SendCommand>
    Command.AutoRefreshNumber      = 8;
 800099a:	2308      	movs	r3, #8
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800099c:	4629      	mov	r1, r5
 800099e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80009a2:	4630      	mov	r0, r6
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80009a4:	e9c5 b800 	strd	fp, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 80009a8:	e9c5 3402 	strd	r3, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009ac:	f006 fb72 	bl	8007094 <HAL_SDRAM_SendCommand>
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 80009b0:	f44f 730c 	mov.w	r3, #560	@ 0x230
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009b4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80009b8:	4629      	mov	r1, r5
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 80009ba:	9301      	str	r3, [sp, #4]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009bc:	4630      	mov	r0, r6
    Command.ModeRegisterDefinition = tmpmrd;
 80009be:	9b01      	ldr	r3, [sp, #4]
    Command.AutoRefreshNumber      = 1;
 80009c0:	60af      	str	r7, [r5, #8]
    Command.ModeRegisterDefinition = tmpmrd;
 80009c2:	60eb      	str	r3, [r5, #12]
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80009c4:	e9c5 9800 	strd	r9, r8, [r5]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009c8:	f006 fb64 	bl	8007094 <HAL_SDRAM_SendCommand>
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 80009cc:	f240 712b 	movw	r1, #1835	@ 0x72b
 80009d0:	4630      	mov	r0, r6
  hi2c3.Instance = I2C3;
 80009d2:	4d1a      	ldr	r5, [pc, #104]	@ (8000a3c <main+0x378>)
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 80009d4:	f006 fb7d 	bl	80070d2 <HAL_SDRAM_ProgramRefreshRate>
    FMC_Bank1->BTCR[0] = 0x000030D2;
 80009d8:	f04f 4320 	mov.w	r3, #2684354560	@ 0xa0000000
 80009dc:	f243 02d2 	movw	r2, #12498	@ 0x30d2
  HAL_Delay(100); //Delay to fix initialization issue on some boards 
 80009e0:	2064      	movs	r0, #100	@ 0x64
  hltdc.Init.AccumulatedActiveH = 283;
 80009e2:	f240 2615 	movw	r6, #533	@ 0x215
    FMC_Bank1->BTCR[0] = 0x000030D2;
 80009e6:	601a      	str	r2, [r3, #0]
  HAL_Delay(100); //Delay to fix initialization issue on some boards 
 80009e8:	f004 f962 	bl	8004cb0 <HAL_Delay>
  hi2c3.Init.Timing = 0x20404768;
 80009ec:	4b14      	ldr	r3, [pc, #80]	@ (8000a40 <main+0x37c>)
 80009ee:	4a15      	ldr	r2, [pc, #84]	@ (8000a44 <main+0x380>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80009f0:	4628      	mov	r0, r5
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80009f2:	622c      	str	r4, [r5, #32]
  hi2c3.Init.Timing = 0x20404768;
 80009f4:	e9c5 2300 	strd	r2, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80009f8:	e9c5 4702 	strd	r4, r7, [r5, #8]
 80009fc:	e024      	b.n	8000a48 <main+0x384>
 80009fe:	bf00      	nop
 8000a00:	0300001b 	.word	0x0300001b
 8000a04:	e000ed00 	.word	0xe000ed00
 8000a08:	40023800 	.word	0x40023800
 8000a0c:	40020400 	.word	0x40020400
 8000a10:	20000464 	.word	0x20000464
 8000a14:	20000260 	.word	0x20000260
 8000a18:	40022800 	.word	0x40022800
 8000a1c:	40022000 	.word	0x40022000
 8000a20:	40020800 	.word	0x40020800
 8000a24:	40021800 	.word	0x40021800
 8000a28:	200004a4 	.word	0x200004a4
 8000a2c:	40023000 	.word	0x40023000
 8000a30:	4002b000 	.word	0x4002b000
 8000a34:	20000240 	.word	0x20000240
 8000a38:	a0000140 	.word	0xa0000140
 8000a3c:	20000410 	.word	0x20000410
 8000a40:	20404768 	.word	0x20404768
 8000a44:	40005c00 	.word	0x40005c00
  hi2c3.Init.OwnAddress2 = 0;
 8000a48:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000a4c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000a50:	f004 fe48 	bl	80056e4 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000a54:	4621      	mov	r1, r4
 8000a56:	4628      	mov	r0, r5
 8000a58:	f005 f866 	bl	8005b28 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000a5c:	4621      	mov	r1, r4
 8000a5e:	4628      	mov	r0, r5
  hltdc.Instance = LTDC;
 8000a60:	4d4a      	ldr	r5, [pc, #296]	@ (8000b8c <main+0x4c8>)
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000a62:	f005 f887 	bl	8005b74 <HAL_I2CEx_ConfigDigitalFilter>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000a66:	2234      	movs	r2, #52	@ 0x34
 8000a68:	4621      	mov	r1, r4
 8000a6a:	eb0d 0002 	add.w	r0, sp, r2
 8000a6e:	f01e fa41 	bl	801eef4 <memset>
  hltdc.Instance = LTDC;
 8000a72:	4b47      	ldr	r3, [pc, #284]	@ (8000b90 <main+0x4cc>)
  hltdc.Init.VerticalSync = 9;
 8000a74:	2128      	movs	r1, #40	@ 0x28
  hltdc.Init.AccumulatedVBP = 11;
 8000a76:	2035      	movs	r0, #53	@ 0x35
  hltdc.Init.TotalHeigh = 285;
 8000a78:	f240 2c35 	movw	ip, #565	@ 0x235
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000a7c:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Blue = 0;
 8000a7e:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8000a80:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000a84:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.VerticalSync = 9;
 8000a88:	2309      	movs	r3, #9
 8000a8a:	e9c5 1305 	strd	r1, r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
 8000a8e:	230b      	movs	r3, #11
 8000a90:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
 8000a94:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000a98:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
 8000a9a:	e9c5 6309 	strd	r6, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
 8000a9e:	f240 131d 	movw	r3, #285	@ 0x11d
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000aa2:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.TotalHeigh = 285;
 8000aa6:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000aaa:	f005 f90f 	bl	8005ccc <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8000aae:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ab0:	f44f 6e80 	mov.w	lr, #1024	@ 0x400
  pLayerCfg.WindowX1 = 480;
 8000ab4:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  pLayerCfg.WindowY1 = 272;
 8000ab8:	f44f 7388 	mov.w	r3, #272	@ 0x110
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000abc:	4628      	mov	r0, r5
  pLayerCfg.WindowX0 = 0;
 8000abe:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.ImageHeight = 272;
 8000ac0:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000ac2:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8000ac6:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  pLayerCfg.Alpha0 = 0;
 8000aca:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ace:	2105      	movs	r1, #5
 8000ad0:	e9cd e114 	strd	lr, r1, [sp, #80]	@ 0x50
  pLayerCfg.FBStartAdress = 0xC0000000;
 8000ad4:	f04f 4140 	mov.w	r1, #3221225472	@ 0xc0000000
  pLayerCfg.WindowY0 = 0;
 8000ad8:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.ImageWidth = 480;
 8000adc:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ae0:	4622      	mov	r2, r4
 8000ae2:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000ae4:	e9cd 3a10 	strd	r3, sl, [sp, #64]	@ 0x40
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ae8:	f005 f9bb 	bl	8005e62 <HAL_LTDC_ConfigLayer>
  hqspi.Instance = QUADSPI;
 8000aec:	4829      	ldr	r0, [pc, #164]	@ (8000b94 <main+0x4d0>)
 8000aee:	4b2a      	ldr	r3, [pc, #168]	@ (8000b98 <main+0x4d4>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8000af0:	6204      	str	r4, [r0, #32]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8000af2:	e9c0 9802 	strd	r9, r8, [r0, #8]
  hqspi.Init.ClockPrescaler = 1;
 8000af6:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 8000afa:	f04f 0818 	mov.w	r8, #24
 8000afe:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
  huart7.Init.BaudRate = 115200;
 8000b02:	f8df 90c8 	ldr.w	r9, [pc, #200]	@ 8000bcc <main+0x508>
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 8000b06:	e9c0 8304 	strd	r8, r3, [r0, #16]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8000b0a:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8000b0e:	f005 fb0b 	bl	8006128 <HAL_QSPI_Init>
  BSP_QSPI_Init();
 8000b12:	f003 ff29 	bl	8004968 <BSP_QSPI_Init>
  BSP_QSPI_MemoryMappedMode();
 8000b16:	f003 fe6f 	bl	80047f8 <BSP_QSPI_EnableMemoryMappedMode>
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8000b1a:	205c      	movs	r0, #92	@ 0x5c
 8000b1c:	f004 f92c 	bl	8004d78 <HAL_NVIC_DisableIRQ>
  MX_LIBJPEG_Init();
 8000b20:	f000 fc62 	bl	80013e8 <MX_LIBJPEG_Init>
  huart7.Instance = UART7;
 8000b24:	481d      	ldr	r0, [pc, #116]	@ (8000b9c <main+0x4d8>)
  huart7.Init.BaudRate = 115200;
 8000b26:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
  huart7.Init.Parity = UART_PARITY_NONE;
 8000b2a:	6104      	str	r4, [r0, #16]
  huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000b2c:	6244      	str	r4, [r0, #36]	@ 0x24
  huart7.Init.BaudRate = 115200;
 8000b2e:	e9c0 9300 	strd	r9, r3, [r0]
  huart7.Init.Mode = UART_MODE_TX_RX;
 8000b32:	230c      	movs	r3, #12
  huart7.Init.StopBits = UART_STOPBITS_1;
 8000b34:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000b38:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000b3c:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_UART_Init(&huart7) != HAL_OK)
 8000b40:	f007 f8ca 	bl	8007cd8 <HAL_UART_Init>
  MX_TouchGFX_Init();
 8000b44:	f000 fc7c 	bl	8001440 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000b48:	f000 fc79 	bl	800143e <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8000b4c:	f007 f9f4 	bl	8007f38 <osKernelInitialize>
  bluMutexHandle = osMutexNew(&bluMutex_attributes);
 8000b50:	4813      	ldr	r0, [pc, #76]	@ (8000ba0 <main+0x4dc>)
 8000b52:	f007 fa97 	bl	8008084 <osMutexNew>
 8000b56:	4b13      	ldr	r3, [pc, #76]	@ (8000ba4 <main+0x4e0>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b58:	4a13      	ldr	r2, [pc, #76]	@ (8000ba8 <main+0x4e4>)
 8000b5a:	4621      	mov	r1, r4
  bluMutexHandle = osMutexNew(&bluMutex_attributes);
 8000b5c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b5e:	4813      	ldr	r0, [pc, #76]	@ (8000bac <main+0x4e8>)
 8000b60:	f007 fa24 	bl	8007fac <osThreadNew>
 8000b64:	4b12      	ldr	r3, [pc, #72]	@ (8000bb0 <main+0x4ec>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b66:	4a13      	ldr	r2, [pc, #76]	@ (8000bb4 <main+0x4f0>)
 8000b68:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b6a:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b6c:	4812      	ldr	r0, [pc, #72]	@ (8000bb8 <main+0x4f4>)
 8000b6e:	f007 fa1d 	bl	8007fac <osThreadNew>
 8000b72:	4b12      	ldr	r3, [pc, #72]	@ (8000bbc <main+0x4f8>)
  Bluethooth_taskHandle = osThreadNew(BLE_Task, NULL, &Bluethooth_task_attributes);
 8000b74:	4a12      	ldr	r2, [pc, #72]	@ (8000bc0 <main+0x4fc>)
 8000b76:	4621      	mov	r1, r4
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b78:	6018      	str	r0, [r3, #0]
  Bluethooth_taskHandle = osThreadNew(BLE_Task, NULL, &Bluethooth_task_attributes);
 8000b7a:	4812      	ldr	r0, [pc, #72]	@ (8000bc4 <main+0x500>)
 8000b7c:	f007 fa16 	bl	8007fac <osThreadNew>
 8000b80:	4b11      	ldr	r3, [pc, #68]	@ (8000bc8 <main+0x504>)
 8000b82:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8000b84:	f007 f9f2 	bl	8007f6c <osKernelStart>
  while (1)
 8000b88:	e7fe      	b.n	8000b88 <main+0x4c4>
 8000b8a:	bf00      	nop
 8000b8c:	20000368 	.word	0x20000368
 8000b90:	40016800 	.word	0x40016800
 8000b94:	2000031c 	.word	0x2000031c
 8000b98:	a0001000 	.word	0xa0001000
 8000b9c:	20000294 	.word	0x20000294
 8000ba0:	0801fb08 	.word	0x0801fb08
 8000ba4:	20000250 	.word	0x20000250
 8000ba8:	0801fb60 	.word	0x0801fb60
 8000bac:	080005f5 	.word	0x080005f5
 8000bb0:	2000025c 	.word	0x2000025c
 8000bb4:	0801fb3c 	.word	0x0801fb3c
 8000bb8:	0800144f 	.word	0x0800144f
 8000bbc:	20000258 	.word	0x20000258
 8000bc0:	0801fb18 	.word	0x0801fb18
 8000bc4:	08000601 	.word	0x08000601
 8000bc8:	20000254 	.word	0x20000254
 8000bcc:	40007800 	.word	0x40007800

08000bd0 <HAL_UART_TxCpltCallback>:
    if (huart->Instance == UART7) {
 8000bd0:	6802      	ldr	r2, [r0, #0]
 8000bd2:	4b06      	ldr	r3, [pc, #24]	@ (8000bec <HAL_UART_TxCpltCallback+0x1c>)
 8000bd4:	429a      	cmp	r2, r3
 8000bd6:	d107      	bne.n	8000be8 <HAL_UART_TxCpltCallback+0x18>
        bt.tx_complete = 1;
 8000bd8:	4b05      	ldr	r3, [pc, #20]	@ (8000bf0 <HAL_UART_TxCpltCallback+0x20>)
 8000bda:	2201      	movs	r2, #1
 8000bdc:	f883 2106 	strb.w	r2, [r3, #262]	@ 0x106
        if (bt.bluetooth_tx_callback) {
 8000be0:	f8d3 310c 	ldr.w	r3, [r3, #268]	@ 0x10c
 8000be4:	b103      	cbz	r3, 8000be8 <HAL_UART_TxCpltCallback+0x18>
            bt.bluetooth_tx_callback();
 8000be6:	4718      	bx	r3
}
 8000be8:	4770      	bx	lr
 8000bea:	bf00      	nop
 8000bec:	40007800 	.word	0x40007800
 8000bf0:	20001d08 	.word	0x20001d08

08000bf4 <HAL_UART_RxCpltCallback>:
    if (huart == bt.huart) {
 8000bf4:	4b03      	ldr	r3, [pc, #12]	@ (8000c04 <HAL_UART_RxCpltCallback+0x10>)
 8000bf6:	681a      	ldr	r2, [r3, #0]
 8000bf8:	4282      	cmp	r2, r0
 8000bfa:	d102      	bne.n	8000c02 <HAL_UART_RxCpltCallback+0xe>
        Bluetooth_handle_rx_interrupt(&bt);
 8000bfc:	4618      	mov	r0, r3
 8000bfe:	f003 bd73 	b.w	80046e8 <Bluetooth_handle_rx_interrupt>
}
 8000c02:	4770      	bx	lr
 8000c04:	20001d08 	.word	0x20001d08

08000c08 <_Z16send_turnoff_airv>:
{
 8000c08:	b513      	push	{r0, r1, r4, lr}
	osStatus_t mutex_status = osMutexAcquire(bluMutexHandle, osWaitForever);
 8000c0a:	4c0d      	ldr	r4, [pc, #52]	@ (8000c40 <_Z16send_turnoff_airv+0x38>)
 8000c0c:	f04f 31ff 	mov.w	r1, #4294967295
 8000c10:	6820      	ldr	r0, [r4, #0]
 8000c12:	f007 fa79 	bl	8008108 <osMutexAcquire>
	if (mutex_status == osOK){
 8000c16:	b980      	cbnz	r0, 8000c3a <_Z16send_turnoff_airv+0x32>
	uint8_t data_[] = "M10000";
 8000c18:	4b0a      	ldr	r3, [pc, #40]	@ (8000c44 <_Z16send_turnoff_airv+0x3c>)
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c1a:	4669      	mov	r1, sp
	uint8_t data_[] = "M10000";
 8000c1c:	6818      	ldr	r0, [r3, #0]
 8000c1e:	889a      	ldrh	r2, [r3, #4]
 8000c20:	799b      	ldrb	r3, [r3, #6]
 8000c22:	9000      	str	r0, [sp, #0]
 8000c24:	f8ad 2004 	strh.w	r2, [sp, #4]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c28:	2208      	movs	r2, #8
 8000c2a:	4807      	ldr	r0, [pc, #28]	@ (8000c48 <_Z16send_turnoff_airv+0x40>)
	uint8_t data_[] = "M10000";
 8000c2c:	f88d 3006 	strb.w	r3, [sp, #6]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c30:	f003 fd4e 	bl	80046d0 <Bluetooth_write_data>
	osMutexRelease(bluMutexHandle);
 8000c34:	6820      	ldr	r0, [r4, #0]
 8000c36:	f007 fa97 	bl	8008168 <osMutexRelease>
}
 8000c3a:	b002      	add	sp, #8
 8000c3c:	bd10      	pop	{r4, pc}
 8000c3e:	bf00      	nop
 8000c40:	20000250 	.word	0x20000250
 8000c44:	0801faa0 	.word	0x0801faa0
 8000c48:	20001d08 	.word	0x20001d08

08000c4c <_Z15send_turnon_airv>:
{
 8000c4c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	uint8_t data_[] = "M10001\r\n";
 8000c4e:	4a07      	ldr	r2, [pc, #28]	@ (8000c6c <_Z15send_turnon_airv+0x20>)
 8000c50:	ab01      	add	r3, sp, #4
 8000c52:	6810      	ldr	r0, [r2, #0]
 8000c54:	6851      	ldr	r1, [r2, #4]
 8000c56:	7a12      	ldrb	r2, [r2, #8]
 8000c58:	c303      	stmia	r3!, {r0, r1}
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c5a:	a901      	add	r1, sp, #4
	uint8_t data_[] = "M10001\r\n";
 8000c5c:	701a      	strb	r2, [r3, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c5e:	4804      	ldr	r0, [pc, #16]	@ (8000c70 <_Z15send_turnon_airv+0x24>)
 8000c60:	220a      	movs	r2, #10
 8000c62:	f003 fd35 	bl	80046d0 <Bluetooth_write_data>
}
 8000c66:	b005      	add	sp, #20
 8000c68:	f85d fb04 	ldr.w	pc, [sp], #4
 8000c6c:	0801faa7 	.word	0x0801faa7
 8000c70:	20001d08 	.word	0x20001d08

08000c74 <_Z18send_turnoff_waterv>:
{
 8000c74:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	uint8_t data_[] = "M20000\r\n";
 8000c76:	4a07      	ldr	r2, [pc, #28]	@ (8000c94 <_Z18send_turnoff_waterv+0x20>)
 8000c78:	ab01      	add	r3, sp, #4
 8000c7a:	6810      	ldr	r0, [r2, #0]
 8000c7c:	6851      	ldr	r1, [r2, #4]
 8000c7e:	7a12      	ldrb	r2, [r2, #8]
 8000c80:	c303      	stmia	r3!, {r0, r1}
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c82:	a901      	add	r1, sp, #4
	uint8_t data_[] = "M20000\r\n";
 8000c84:	701a      	strb	r2, [r3, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c86:	4804      	ldr	r0, [pc, #16]	@ (8000c98 <_Z18send_turnoff_waterv+0x24>)
 8000c88:	220a      	movs	r2, #10
 8000c8a:	f003 fd21 	bl	80046d0 <Bluetooth_write_data>
}
 8000c8e:	b005      	add	sp, #20
 8000c90:	f85d fb04 	ldr.w	pc, [sp], #4
 8000c94:	0801fab0 	.word	0x0801fab0
 8000c98:	20001d08 	.word	0x20001d08

08000c9c <_Z17send_turnon_waterv>:
{
 8000c9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	uint8_t data_[] = "M20001\r\n";
 8000c9e:	4a07      	ldr	r2, [pc, #28]	@ (8000cbc <_Z17send_turnon_waterv+0x20>)
 8000ca0:	ab01      	add	r3, sp, #4
 8000ca2:	6810      	ldr	r0, [r2, #0]
 8000ca4:	6851      	ldr	r1, [r2, #4]
 8000ca6:	7a12      	ldrb	r2, [r2, #8]
 8000ca8:	c303      	stmia	r3!, {r0, r1}
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000caa:	a901      	add	r1, sp, #4
	uint8_t data_[] = "M20001\r\n";
 8000cac:	701a      	strb	r2, [r3, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000cae:	4804      	ldr	r0, [pc, #16]	@ (8000cc0 <_Z17send_turnon_waterv+0x24>)
 8000cb0:	220a      	movs	r2, #10
 8000cb2:	f003 fd0d 	bl	80046d0 <Bluetooth_write_data>
}
 8000cb6:	b005      	add	sp, #20
 8000cb8:	f85d fb04 	ldr.w	pc, [sp], #4
 8000cbc:	0801fab9 	.word	0x0801fab9
 8000cc0:	20001d08 	.word	0x20001d08

08000cc4 <_Z16send_turnoff_ledv>:
{
 8000cc4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	uint8_t data_[] = "M30000\r\n";
 8000cc6:	4a07      	ldr	r2, [pc, #28]	@ (8000ce4 <_Z16send_turnoff_ledv+0x20>)
 8000cc8:	ab01      	add	r3, sp, #4
 8000cca:	6810      	ldr	r0, [r2, #0]
 8000ccc:	6851      	ldr	r1, [r2, #4]
 8000cce:	7a12      	ldrb	r2, [r2, #8]
 8000cd0:	c303      	stmia	r3!, {r0, r1}
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000cd2:	a901      	add	r1, sp, #4
	uint8_t data_[] = "M30000\r\n";
 8000cd4:	701a      	strb	r2, [r3, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000cd6:	4804      	ldr	r0, [pc, #16]	@ (8000ce8 <_Z16send_turnoff_ledv+0x24>)
 8000cd8:	220a      	movs	r2, #10
 8000cda:	f003 fcf9 	bl	80046d0 <Bluetooth_write_data>
}
 8000cde:	b005      	add	sp, #20
 8000ce0:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ce4:	0801fac2 	.word	0x0801fac2
 8000ce8:	20001d08 	.word	0x20001d08

08000cec <_Z15send_turnon_ledv>:
{
 8000cec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	uint8_t data_[] = "M30001\r\n";
 8000cee:	4a07      	ldr	r2, [pc, #28]	@ (8000d0c <_Z15send_turnon_ledv+0x20>)
 8000cf0:	ab01      	add	r3, sp, #4
 8000cf2:	6810      	ldr	r0, [r2, #0]
 8000cf4:	6851      	ldr	r1, [r2, #4]
 8000cf6:	7a12      	ldrb	r2, [r2, #8]
 8000cf8:	c303      	stmia	r3!, {r0, r1}
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000cfa:	a901      	add	r1, sp, #4
	uint8_t data_[] = "M30001\r\n";
 8000cfc:	701a      	strb	r2, [r3, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000cfe:	4804      	ldr	r0, [pc, #16]	@ (8000d10 <_Z15send_turnon_ledv+0x24>)
 8000d00:	220a      	movs	r2, #10
 8000d02:	f003 fce5 	bl	80046d0 <Bluetooth_write_data>
}
 8000d06:	b005      	add	sp, #20
 8000d08:	f85d fb04 	ldr.w	pc, [sp], #4
 8000d0c:	0801facb 	.word	0x0801facb
 8000d10:	20001d08 	.word	0x20001d08

08000d14 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8000d14:	6802      	ldr	r2, [r0, #0]
 8000d16:	4b03      	ldr	r3, [pc, #12]	@ (8000d24 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8000d18:	429a      	cmp	r2, r3
 8000d1a:	d101      	bne.n	8000d20 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8000d1c:	f003 bfb6 	b.w	8004c8c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000d20:	4770      	bx	lr
 8000d22:	bf00      	nop
 8000d24:	40001000 	.word	0x40001000

08000d28 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8000d28:	4770      	bx	lr
	...

08000d2c <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8000d2c:	4b0d      	ldr	r3, [pc, #52]	@ (8000d64 <HAL_MspInit+0x38>)
{
 8000d2e:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000d30:	210f      	movs	r1, #15
 8000d32:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 8000d36:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000d38:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000d3c:	641a      	str	r2, [r3, #64]	@ 0x40
 8000d3e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000d40:	f002 5280 	and.w	r2, r2, #268435456	@ 0x10000000
 8000d44:	9200      	str	r2, [sp, #0]
 8000d46:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d48:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000d4a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8000d4e:	645a      	str	r2, [r3, #68]	@ 0x44
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000d50:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d52:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000d54:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000d58:	9301      	str	r3, [sp, #4]
 8000d5a:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000d5c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000d5e:	f003 bfcb 	b.w	8004cf8 <HAL_NVIC_SetPriority>
 8000d62:	bf00      	nop
 8000d64:	40023800 	.word	0x40023800

08000d68 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000d68:	6802      	ldr	r2, [r0, #0]
{
 8000d6a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8000d6c:	4b08      	ldr	r3, [pc, #32]	@ (8000d90 <HAL_CRC_MspInit+0x28>)
 8000d6e:	429a      	cmp	r2, r3
 8000d70:	d10b      	bne.n	8000d8a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000d72:	f8d3 2830 	ldr.w	r2, [r3, #2096]	@ 0x830
 8000d76:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8000d7a:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8000d7e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000d80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d82:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000d86:	9301      	str	r3, [sp, #4]
 8000d88:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000d8a:	b002      	add	sp, #8
 8000d8c:	4770      	bx	lr
 8000d8e:	bf00      	nop
 8000d90:	40023000 	.word	0x40023000

08000d94 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8000d94:	4b0e      	ldr	r3, [pc, #56]	@ (8000dd0 <HAL_DMA2D_MspInit+0x3c>)
{
 8000d96:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8000d98:	6802      	ldr	r2, [r0, #0]
 8000d9a:	429a      	cmp	r2, r3
 8000d9c:	d115      	bne.n	8000dca <HAL_DMA2D_MspInit+0x36>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d9e:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000da2:	2105      	movs	r1, #5
 8000da4:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000da6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000da8:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000dac:	631a      	str	r2, [r3, #48]	@ 0x30
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000dae:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000db0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000db2:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000db6:	9301      	str	r3, [sp, #4]
 8000db8:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000dba:	f003 ff9d 	bl	8004cf8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000dbe:	205a      	movs	r0, #90	@ 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8000dc0:	b003      	add	sp, #12
 8000dc2:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000dc6:	f003 bfc9 	b.w	8004d5c <HAL_NVIC_EnableIRQ>
}
 8000dca:	b003      	add	sp, #12
 8000dcc:	f85d fb04 	ldr.w	pc, [sp], #4
 8000dd0:	4002b000 	.word	0x4002b000

08000dd4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000dd4:	b510      	push	{r4, lr}
 8000dd6:	b0a8      	sub	sp, #160	@ 0xa0
 8000dd8:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000dda:	2214      	movs	r2, #20
 8000ddc:	2100      	movs	r1, #0
 8000dde:	a802      	add	r0, sp, #8
 8000de0:	f01e f888 	bl	801eef4 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000de4:	2284      	movs	r2, #132	@ 0x84
 8000de6:	2100      	movs	r1, #0
 8000de8:	a807      	add	r0, sp, #28
 8000dea:	f01e f883 	bl	801eef4 <memset>
  if(hi2c->Instance==I2C3)
 8000dee:	6822      	ldr	r2, [r4, #0]
 8000df0:	4b17      	ldr	r3, [pc, #92]	@ (8000e50 <HAL_I2C_MspInit+0x7c>)
 8000df2:	429a      	cmp	r2, r3
 8000df4:	d12a      	bne.n	8000e4c <HAL_I2C_MspInit+0x78>

  /* USER CODE END I2C3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000df6:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000dfa:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000dfc:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000dfe:	f005 fe9f 	bl	8006b40 <HAL_RCCEx_PeriphCLKConfig>
 8000e02:	b108      	cbz	r0, 8000e08 <HAL_I2C_MspInit+0x34>
    {
      Error_Handler();
 8000e04:	f7ff ff90 	bl	8000d28 <Error_Handler>
    }

    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000e08:	4c12      	ldr	r4, [pc, #72]	@ (8000e54 <HAL_I2C_MspInit+0x80>)
    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000e0a:	f44f 72c0 	mov.w	r2, #384	@ 0x180
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e0e:	2101      	movs	r1, #1
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000e10:	4811      	ldr	r0, [pc, #68]	@ (8000e58 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000e12:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8000e14:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000e18:	6323      	str	r3, [r4, #48]	@ 0x30
 8000e1a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8000e1c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000e20:	9300      	str	r3, [sp, #0]
 8000e22:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000e24:	2312      	movs	r3, #18
 8000e26:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e2a:	2303      	movs	r3, #3
 8000e2c:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000e30:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000e32:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000e34:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000e36:	f004 f9a9 	bl	800518c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8000e3a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000e3c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000e40:	6423      	str	r3, [r4, #64]	@ 0x40
 8000e42:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000e44:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000e48:	9301      	str	r3, [sp, #4]
 8000e4a:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8000e4c:	b028      	add	sp, #160	@ 0xa0
 8000e4e:	bd10      	pop	{r4, pc}
 8000e50:	40005c00 	.word	0x40005c00
 8000e54:	40023800 	.word	0x40023800
 8000e58:	40021c00 	.word	0x40021c00

08000e5c <HAL_I2C_MspDeInit>:
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
  if(hi2c->Instance==I2C3)
 8000e5c:	6802      	ldr	r2, [r0, #0]
{
 8000e5e:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C3)
 8000e60:	4b09      	ldr	r3, [pc, #36]	@ (8000e88 <HAL_I2C_MspDeInit+0x2c>)
 8000e62:	429a      	cmp	r2, r3
 8000e64:	d10f      	bne.n	8000e86 <HAL_I2C_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN I2C3_MspDeInit 0 */

  /* USER CODE END I2C3_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000e66:	4a09      	ldr	r2, [pc, #36]	@ (8000e8c <HAL_I2C_MspDeInit+0x30>)

    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_7);
 8000e68:	2180      	movs	r1, #128	@ 0x80
 8000e6a:	4809      	ldr	r0, [pc, #36]	@ (8000e90 <HAL_I2C_MspDeInit+0x34>)
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000e6c:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8000e6e:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8000e72:	6413      	str	r3, [r2, #64]	@ 0x40
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_7);
 8000e74:	f004 fa6e 	bl	8005354 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_8);
 8000e78:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000e7c:	4804      	ldr	r0, [pc, #16]	@ (8000e90 <HAL_I2C_MspDeInit+0x34>)
  /* USER CODE BEGIN I2C3_MspDeInit 1 */

  /* USER CODE END I2C3_MspDeInit 1 */
  }

}
 8000e7e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_8);
 8000e82:	f004 ba67 	b.w	8005354 <HAL_GPIO_DeInit>
}
 8000e86:	bd08      	pop	{r3, pc}
 8000e88:	40005c00 	.word	0x40005c00
 8000e8c:	40023800 	.word	0x40023800
 8000e90:	40021c00 	.word	0x40021c00

08000e94 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000e94:	b570      	push	{r4, r5, r6, lr}
 8000e96:	b0ac      	sub	sp, #176	@ 0xb0
 8000e98:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e9a:	2214      	movs	r2, #20
 8000e9c:	2100      	movs	r1, #0
 8000e9e:	a806      	add	r0, sp, #24
 8000ea0:	f01e f828 	bl	801eef4 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000ea4:	2284      	movs	r2, #132	@ 0x84
 8000ea6:	2100      	movs	r1, #0
 8000ea8:	a80b      	add	r0, sp, #44	@ 0x2c
 8000eaa:	f01e f823 	bl	801eef4 <memset>
  if(hltdc->Instance==LTDC)
 8000eae:	6822      	ldr	r2, [r4, #0]
 8000eb0:	4b48      	ldr	r3, [pc, #288]	@ (8000fd4 <HAL_LTDC_MspInit+0x140>)
 8000eb2:	429a      	cmp	r2, r3
 8000eb4:	f040 808c 	bne.w	8000fd0 <HAL_LTDC_MspInit+0x13c>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000eb8:	2308      	movs	r3, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000eba:	2005      	movs	r0, #5
    PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV2;
    PeriphClkInitStruct.PLLSAIDivQ = 1;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000ebc:	2401      	movs	r4, #1
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000ebe:	930b      	str	r3, [sp, #44]	@ 0x2c
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
 8000ec0:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8000ec4:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000ec6:	2302      	movs	r3, #2
 8000ec8:	e9cd 3011 	strd	r3, r0, [sp, #68]	@ 0x44
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000ecc:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000ed0:	a80b      	add	r0, sp, #44	@ 0x2c
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000ed2:	e9cd 4315 	strd	r4, r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000ed6:	f005 fe33 	bl	8006b40 <HAL_RCCEx_PeriphCLKConfig>
 8000eda:	b108      	cbz	r0, 8000ee0 <HAL_LTDC_MspInit+0x4c>
    {
      Error_Handler();
 8000edc:	f7ff ff24 	bl	8000d28 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000ee0:	4b3d      	ldr	r3, [pc, #244]	@ (8000fd8 <HAL_LTDC_MspInit+0x144>)
    PJ0     ------> LTDC_R1
    PJ1     ------> LTDC_R2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ee2:	2400      	movs	r4, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ee4:	2502      	movs	r5, #2
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000ee6:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000ee8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000eea:	a906      	add	r1, sp, #24
 8000eec:	483b      	ldr	r0, [pc, #236]	@ (8000fdc <HAL_LTDC_MspInit+0x148>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000eee:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8000ef2:	645a      	str	r2, [r3, #68]	@ 0x44
 8000ef4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000ef6:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8000efa:	9200      	str	r2, [sp, #0]
 8000efc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000efe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f00:	f042 0210 	orr.w	r2, r2, #16
 8000f04:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f06:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f08:	f002 0210 	and.w	r2, r2, #16
 8000f0c:	9201      	str	r2, [sp, #4]
 8000f0e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000f10:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f12:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000f16:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f18:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f1a:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 8000f1e:	9202      	str	r2, [sp, #8]
 8000f20:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOK_CLK_ENABLE();
 8000f22:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f24:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8000f28:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f2a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f2c:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
 8000f30:	9203      	str	r2, [sp, #12]
 8000f32:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000f34:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f36:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8000f3a:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f3c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f3e:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8000f42:	9204      	str	r2, [sp, #16]
 8000f44:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000f46:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f48:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000f4c:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f50:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000f54:	9305      	str	r3, [sp, #20]
 8000f56:	9b05      	ldr	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f58:	2310      	movs	r3, #16
 8000f5a:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f5e:	e9cd 4408 	strd	r4, r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f62:	960a      	str	r6, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000f64:	f004 f912 	bl	800518c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_11
 8000f68:	f64e 73ff 	movw	r3, #61439	@ 0xefff
                          |GPIO_PIN_2|GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000f6c:	a906      	add	r1, sp, #24
 8000f6e:	481c      	ldr	r0, [pc, #112]	@ (8000fe0 <HAL_LTDC_MspInit+0x14c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f70:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f72:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f76:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000f7a:	f004 f907 	bl	800518c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4
 8000f7e:	23f7      	movs	r3, #247	@ 0xf7
                          |GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000f80:	a906      	add	r1, sp, #24
 8000f82:	4818      	ldr	r0, [pc, #96]	@ (8000fe4 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f84:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f86:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f8a:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000f8e:	f004 f8fd 	bl	800518c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000f92:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000f96:	a906      	add	r1, sp, #24
 8000f98:	4813      	ldr	r0, [pc, #76]	@ (8000fe8 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f9a:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000f9e:	2309      	movs	r3, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000fa0:	e9cd 4408 	strd	r4, r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000fa4:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000fa6:	f004 f8f1 	bl	800518c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_15|GPIO_PIN_14;
 8000faa:	f44f 4346 	mov.w	r3, #50688	@ 0xc600
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000fae:	a906      	add	r1, sp, #24
 8000fb0:	480e      	ldr	r0, [pc, #56]	@ (8000fec <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000fb2:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fb4:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000fb8:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000fbc:	f004 f8e6 	bl	800518c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000fc0:	2058      	movs	r0, #88	@ 0x58
 8000fc2:	4622      	mov	r2, r4
 8000fc4:	2105      	movs	r1, #5
 8000fc6:	f003 fe97 	bl	8004cf8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000fca:	2058      	movs	r0, #88	@ 0x58
 8000fcc:	f003 fec6 	bl	8004d5c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000fd0:	b02c      	add	sp, #176	@ 0xb0
 8000fd2:	bd70      	pop	{r4, r5, r6, pc}
 8000fd4:	40016800 	.word	0x40016800
 8000fd8:	40023800 	.word	0x40023800
 8000fdc:	40021000 	.word	0x40021000
 8000fe0:	40022400 	.word	0x40022400
 8000fe4:	40022800 	.word	0x40022800
 8000fe8:	40021800 	.word	0x40021800
 8000fec:	40022000 	.word	0x40022000

08000ff0 <HAL_QSPI_MspInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000ff0:	2214      	movs	r2, #20
 8000ff2:	2100      	movs	r1, #0
{
 8000ff4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ff8:	b08a      	sub	sp, #40	@ 0x28
 8000ffa:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000ffc:	eb0d 0002 	add.w	r0, sp, r2
 8001000:	f01d ff78 	bl	801eef4 <memset>
  if(hqspi->Instance==QUADSPI)
 8001004:	6822      	ldr	r2, [r4, #0]
 8001006:	4b2c      	ldr	r3, [pc, #176]	@ (80010b8 <HAL_QSPI_MspInit+0xc8>)
 8001008:	429a      	cmp	r2, r3
 800100a:	d151      	bne.n	80010b0 <HAL_QSPI_MspInit+0xc0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 800100c:	4b2b      	ldr	r3, [pc, #172]	@ (80010bc <HAL_QSPI_MspInit+0xcc>)
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800100e:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001010:	2403      	movs	r4, #3
 8001012:	2609      	movs	r6, #9
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001014:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001016:	f04f 0804 	mov.w	r8, #4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800101a:	a905      	add	r1, sp, #20
 800101c:	4828      	ldr	r0, [pc, #160]	@ (80010c0 <HAL_QSPI_MspInit+0xd0>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 800101e:	f042 0202 	orr.w	r2, r2, #2

    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001022:	2700      	movs	r7, #0
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001024:	639a      	str	r2, [r3, #56]	@ 0x38
 8001026:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8001028:	f002 0202 	and.w	r2, r2, #2
 800102c:	9201      	str	r2, [sp, #4]
 800102e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8001030:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001032:	f042 0210 	orr.w	r2, r2, #16
 8001036:	631a      	str	r2, [r3, #48]	@ 0x30
 8001038:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800103a:	f002 0210 	and.w	r2, r2, #16
 800103e:	9202      	str	r2, [sp, #8]
 8001040:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001042:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001044:	f042 0202 	orr.w	r2, r2, #2
 8001048:	631a      	str	r2, [r3, #48]	@ 0x30
 800104a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800104c:	f002 0202 	and.w	r2, r2, #2
 8001050:	9203      	str	r2, [sp, #12]
 8001052:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001054:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001056:	f042 0208 	orr.w	r2, r2, #8
 800105a:	631a      	str	r2, [r3, #48]	@ 0x30
 800105c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800105e:	f003 0308 	and.w	r3, r3, #8
 8001062:	9304      	str	r3, [sp, #16]
 8001064:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001066:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 800106a:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800106e:	f004 f88d 	bl	800518c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001072:	2340      	movs	r3, #64	@ 0x40
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001074:	a905      	add	r1, sp, #20
 8001076:	4813      	ldr	r0, [pc, #76]	@ (80010c4 <HAL_QSPI_MspInit+0xd4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001078:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 800107c:	230a      	movs	r3, #10
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800107e:	e9cd 7407 	strd	r7, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8001082:	9309      	str	r3, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001084:	f004 f882 	bl	800518c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001088:	a905      	add	r1, sp, #20
 800108a:	480e      	ldr	r0, [pc, #56]	@ (80010c4 <HAL_QSPI_MspInit+0xd4>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 800108c:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800108e:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001092:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001096:	f004 f879 	bl	800518c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11;
 800109a:	f44f 5360 	mov.w	r3, #14336	@ 0x3800
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800109e:	a905      	add	r1, sp, #20
 80010a0:	4809      	ldr	r0, [pc, #36]	@ (80010c8 <HAL_QSPI_MspInit+0xd8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 80010a2:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010a4:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010a8:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80010ac:	f004 f86e 	bl	800518c <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 80010b0:	b00a      	add	sp, #40	@ 0x28
 80010b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80010b6:	bf00      	nop
 80010b8:	a0001000 	.word	0xa0001000
 80010bc:	40023800 	.word	0x40023800
 80010c0:	40021000 	.word	0x40021000
 80010c4:	40020400 	.word	0x40020400
 80010c8:	40020c00 	.word	0x40020c00

080010cc <HAL_QSPI_MspDeInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
  if(hqspi->Instance==QUADSPI)
 80010cc:	6802      	ldr	r2, [r0, #0]
{
 80010ce:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 80010d0:	4b0b      	ldr	r3, [pc, #44]	@ (8001100 <HAL_QSPI_MspDeInit+0x34>)
 80010d2:	429a      	cmp	r2, r3
 80010d4:	d113      	bne.n	80010fe <HAL_QSPI_MspDeInit+0x32>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 80010d6:	4a0b      	ldr	r2, [pc, #44]	@ (8001104 <HAL_QSPI_MspDeInit+0x38>)
    PB2     ------> QUADSPI_CLK
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 80010d8:	2104      	movs	r1, #4
 80010da:	480b      	ldr	r0, [pc, #44]	@ (8001108 <HAL_QSPI_MspDeInit+0x3c>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 80010dc:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80010de:	f023 0302 	bic.w	r3, r3, #2
 80010e2:	6393      	str	r3, [r2, #56]	@ 0x38
    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 80010e4:	f004 f936 	bl	8005354 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_2);
 80010e8:	2144      	movs	r1, #68	@ 0x44
 80010ea:	4808      	ldr	r0, [pc, #32]	@ (800110c <HAL_QSPI_MspDeInit+0x40>)
 80010ec:	f004 f932 	bl	8005354 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11);
 80010f0:	f44f 5160 	mov.w	r1, #14336	@ 0x3800
 80010f4:	4806      	ldr	r0, [pc, #24]	@ (8001110 <HAL_QSPI_MspDeInit+0x44>)
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 80010f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11);
 80010fa:	f004 b92b 	b.w	8005354 <HAL_GPIO_DeInit>
}
 80010fe:	bd08      	pop	{r3, pc}
 8001100:	a0001000 	.word	0xa0001000
 8001104:	40023800 	.word	0x40023800
 8001108:	40021000 	.word	0x40021000
 800110c:	40020400 	.word	0x40020400
 8001110:	40020c00 	.word	0x40020c00

08001114 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001114:	b510      	push	{r4, lr}
 8001116:	b0a8      	sub	sp, #160	@ 0xa0
 8001118:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800111a:	2214      	movs	r2, #20
 800111c:	2100      	movs	r1, #0
 800111e:	a802      	add	r0, sp, #8
 8001120:	f01d fee8 	bl	801eef4 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001124:	2284      	movs	r2, #132	@ 0x84
 8001126:	2100      	movs	r1, #0
 8001128:	a807      	add	r0, sp, #28
 800112a:	f01d fee3 	bl	801eef4 <memset>
  if(huart->Instance==UART7)
 800112e:	6822      	ldr	r2, [r4, #0]
 8001130:	4b17      	ldr	r3, [pc, #92]	@ (8001190 <HAL_UART_MspInit+0x7c>)
 8001132:	429a      	cmp	r2, r3
 8001134:	d12a      	bne.n	800118c <HAL_UART_MspInit+0x78>

  /* USER CODE END UART7_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 8001136:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800113a:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 800113c:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800113e:	f005 fcff 	bl	8006b40 <HAL_RCCEx_PeriphCLKConfig>
 8001142:	b108      	cbz	r0, 8001148 <HAL_UART_MspInit+0x34>
    {
      Error_Handler();
 8001144:	f7ff fdf0 	bl	8000d28 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_UART7_CLK_ENABLE();
 8001148:	4b12      	ldr	r3, [pc, #72]	@ (8001194 <HAL_UART_MspInit+0x80>)
    PF6     ------> UART7_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800114a:	2100      	movs	r1, #0
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800114c:	4812      	ldr	r0, [pc, #72]	@ (8001198 <HAL_UART_MspInit+0x84>)
    __HAL_RCC_UART7_CLK_ENABLE();
 800114e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001150:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8001154:	641a      	str	r2, [r3, #64]	@ 0x40
 8001156:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001158:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 800115c:	9200      	str	r2, [sp, #0]
 800115e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001160:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001162:	f042 0220 	orr.w	r2, r2, #32
 8001166:	631a      	str	r2, [r3, #48]	@ 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001168:	22c0      	movs	r2, #192	@ 0xc0
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800116a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800116c:	f003 0320 	and.w	r3, r3, #32
 8001170:	9301      	str	r3, [sp, #4]
 8001172:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001174:	2302      	movs	r3, #2
 8001176:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800117a:	2303      	movs	r3, #3
 800117c:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 8001180:	2308      	movs	r3, #8
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001182:	eb0d 0103 	add.w	r1, sp, r3
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 8001186:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001188:	f004 f800 	bl	800518c <HAL_GPIO_Init>
  /* USER CODE BEGIN UART7_MspInit 1 */

  /* USER CODE END UART7_MspInit 1 */
  }

}
 800118c:	b028      	add	sp, #160	@ 0xa0
 800118e:	bd10      	pop	{r4, pc}
 8001190:	40007800 	.word	0x40007800
 8001194:	40023800 	.word	0x40023800
 8001198:	40021400 	.word	0x40021400

0800119c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800119c:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800119e:	2300      	movs	r3, #0
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80011a0:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80011a2:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80011a4:	4b29      	ldr	r3, [pc, #164]	@ (800124c <HAL_SDRAM_MspInit+0xb0>)
 80011a6:	681e      	ldr	r6, [r3, #0]
 80011a8:	2e00      	cmp	r6, #0
 80011aa:	d14d      	bne.n	8001248 <HAL_SDRAM_MspInit+0xac>
  FMC_Initialized = 1;
 80011ac:	2201      	movs	r2, #1
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011ae:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80011b0:	2503      	movs	r5, #3
 80011b2:	240c      	movs	r4, #12
  FMC_Initialized = 1;
 80011b4:	601a      	str	r2, [r3, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80011b6:	a901      	add	r1, sp, #4
  __HAL_RCC_FMC_CLK_ENABLE();
 80011b8:	4b25      	ldr	r3, [pc, #148]	@ (8001250 <HAL_SDRAM_MspInit+0xb4>)
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80011ba:	4826      	ldr	r0, [pc, #152]	@ (8001254 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80011bc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80011be:	f042 0201 	orr.w	r2, r2, #1
 80011c2:	639a      	str	r2, [r3, #56]	@ 0x38
 80011c4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80011c6:	f003 0301 	and.w	r3, r3, #1
 80011ca:	9300      	str	r3, [sp, #0]
 80011cc:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011ce:	f64f 7383 	movw	r3, #65411	@ 0xff83
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80011d2:	e9cd 5404 	strd	r5, r4, [sp, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011d6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80011da:	f003 ffd7 	bl	800518c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 80011de:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80011e2:	a901      	add	r1, sp, #4
 80011e4:	481c      	ldr	r0, [pc, #112]	@ (8001258 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80011e6:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011e8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80011ec:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80011f0:	f003 ffcc 	bl	800518c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 80011f4:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80011f8:	a901      	add	r1, sp, #4
 80011fa:	4818      	ldr	r0, [pc, #96]	@ (800125c <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80011fc:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011fe:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001202:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001206:	f003 ffc1 	bl	800518c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800120a:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800120e:	a901      	add	r1, sp, #4
 8001210:	4813      	ldr	r0, [pc, #76]	@ (8001260 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001212:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001214:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001218:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800121c:	f003 ffb6 	bl	800518c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_3;
 8001220:	2328      	movs	r3, #40	@ 0x28
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001222:	a901      	add	r1, sp, #4
 8001224:	480f      	ldr	r0, [pc, #60]	@ (8001264 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001226:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001228:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800122c:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001230:	f003 ffac 	bl	800518c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001234:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001236:	a901      	add	r1, sp, #4
 8001238:	480b      	ldr	r0, [pc, #44]	@ (8001268 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800123a:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800123c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001240:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001244:	f003 ffa2 	bl	800518c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001248:	b007      	add	sp, #28
 800124a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800124c:	200004c8 	.word	0x200004c8
 8001250:	40023800 	.word	0x40023800
 8001254:	40021000 	.word	0x40021000
 8001258:	40021800 	.word	0x40021800
 800125c:	40020c00 	.word	0x40020c00
 8001260:	40021400 	.word	0x40021400
 8001264:	40021c00 	.word	0x40021c00
 8001268:	40020800 	.word	0x40020800

0800126c <HAL_InitTick>:
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 800126c:	4b21      	ldr	r3, [pc, #132]	@ (80012f4 <HAL_InitTick+0x88>)
 800126e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001270:	f042 0210 	orr.w	r2, r2, #16
{
 8001274:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001276:	641a      	str	r2, [r3, #64]	@ 0x40
{
 8001278:	b088      	sub	sp, #32
  __HAL_RCC_TIM6_CLK_ENABLE();
 800127a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
{
 800127c:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800127e:	a901      	add	r1, sp, #4
 8001280:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001282:	f003 0310 	and.w	r3, r3, #16
 8001286:	9302      	str	r3, [sp, #8]
 8001288:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800128a:	f005 fc3b 	bl	8006b04 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800128e:	9b06      	ldr	r3, [sp, #24]
 8001290:	bb4b      	cbnz	r3, 80012e6 <HAL_InitTick+0x7a>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001292:	f005 fc17 	bl	8006ac4 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001296:	4e18      	ldr	r6, [pc, #96]	@ (80012f8 <HAL_InitTick+0x8c>)
 8001298:	4b18      	ldr	r3, [pc, #96]	@ (80012fc <HAL_InitTick+0x90>)
 800129a:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800129c:	f240 33e7 	movw	r3, #999	@ 0x3e7
 80012a0:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80012a2:	4b17      	ldr	r3, [pc, #92]	@ (8001300 <HAL_InitTick+0x94>)
 80012a4:	fbb0 f3f3 	udiv	r3, r0, r3
 80012a8:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80012aa:	4630      	mov	r0, r6
  htim6.Init.Prescaler = uwPrescalerValue;
 80012ac:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
 80012ae:	2300      	movs	r3, #0
 80012b0:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80012b2:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80012b4:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 80012b6:	f006 f87d 	bl	80073b4 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80012ba:	4604      	mov	r4, r0
 80012bc:	b980      	cbnz	r0, 80012e0 <HAL_InitTick+0x74>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 80012be:	4630      	mov	r0, r6
 80012c0:	f005 ff20 	bl	8007104 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80012c4:	4604      	mov	r4, r0
 80012c6:	b958      	cbnz	r0, 80012e0 <HAL_InitTick+0x74>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80012c8:	2036      	movs	r0, #54	@ 0x36
 80012ca:	f003 fd47 	bl	8004d5c <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80012ce:	2d0f      	cmp	r5, #15
 80012d0:	d80d      	bhi.n	80012ee <HAL_InitTick+0x82>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80012d2:	4622      	mov	r2, r4
 80012d4:	4629      	mov	r1, r5
 80012d6:	2036      	movs	r0, #54	@ 0x36
 80012d8:	f003 fd0e 	bl	8004cf8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80012dc:	4b09      	ldr	r3, [pc, #36]	@ (8001304 <HAL_InitTick+0x98>)
 80012de:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 80012e0:	4620      	mov	r0, r4
 80012e2:	b008      	add	sp, #32
 80012e4:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80012e6:	f005 fbed 	bl	8006ac4 <HAL_RCC_GetPCLK1Freq>
 80012ea:	0040      	lsls	r0, r0, #1
 80012ec:	e7d3      	b.n	8001296 <HAL_InitTick+0x2a>
        status = HAL_ERROR;
 80012ee:	2401      	movs	r4, #1
 80012f0:	e7f6      	b.n	80012e0 <HAL_InitTick+0x74>
 80012f2:	bf00      	nop
 80012f4:	40023800 	.word	0x40023800
 80012f8:	200004cc 	.word	0x200004cc
 80012fc:	40001000 	.word	0x40001000
 8001300:	000f4240 	.word	0x000f4240
 8001304:	2000003c 	.word	0x2000003c

08001308 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001308:	4770      	bx	lr

0800130a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800130a:	e7fe      	b.n	800130a <HardFault_Handler>

0800130c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800130c:	e7fe      	b.n	800130c <MemManage_Handler>

0800130e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800130e:	e7fe      	b.n	800130e <BusFault_Handler>

08001310 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001310:	e7fe      	b.n	8001310 <UsageFault_Handler>

08001312 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8001312:	4770      	bx	lr

08001314 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001314:	4801      	ldr	r0, [pc, #4]	@ (800131c <TIM6_DAC_IRQHandler+0x8>)
 8001316:	f005 bf37 	b.w	8007188 <HAL_TIM_IRQHandler>
 800131a:	bf00      	nop
 800131c:	200004cc 	.word	0x200004cc

08001320 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001320:	4801      	ldr	r0, [pc, #4]	@ (8001328 <LTDC_IRQHandler+0x8>)
 8001322:	f004 bd41 	b.w	8005da8 <HAL_LTDC_IRQHandler>
 8001326:	bf00      	nop
 8001328:	20000368 	.word	0x20000368

0800132c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800132c:	4801      	ldr	r0, [pc, #4]	@ (8001334 <DMA2D_IRQHandler+0x8>)
 800132e:	f003 be5c 	b.w	8004fea <HAL_DMA2D_IRQHandler>
 8001332:	bf00      	nop
 8001334:	20000464 	.word	0x20000464

08001338 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001338:	2001      	movs	r0, #1
 800133a:	4770      	bx	lr

0800133c <_kill>:

int _kill(int pid, int sig)
{
 800133c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800133e:	f01d fea1 	bl	801f084 <__errno>
 8001342:	2316      	movs	r3, #22
 8001344:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001346:	f04f 30ff 	mov.w	r0, #4294967295
 800134a:	bd08      	pop	{r3, pc}

0800134c <_exit>:

void _exit (int status)
{
 800134c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800134e:	f01d fe99 	bl	801f084 <__errno>
 8001352:	2316      	movs	r3, #22
 8001354:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001356:	e7fe      	b.n	8001356 <_exit+0xa>

08001358 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001358:	b570      	push	{r4, r5, r6, lr}
 800135a:	460d      	mov	r5, r1
 800135c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800135e:	460e      	mov	r6, r1
 8001360:	1b73      	subs	r3, r6, r5
 8001362:	429c      	cmp	r4, r3
 8001364:	dc01      	bgt.n	800136a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001366:	4620      	mov	r0, r4
 8001368:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800136a:	f3af 8000 	nop.w
 800136e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001372:	e7f5      	b.n	8001360 <_read+0x8>

08001374 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001374:	b570      	push	{r4, r5, r6, lr}
 8001376:	460d      	mov	r5, r1
 8001378:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800137a:	460e      	mov	r6, r1
 800137c:	1b73      	subs	r3, r6, r5
 800137e:	429c      	cmp	r4, r3
 8001380:	dc01      	bgt.n	8001386 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001382:	4620      	mov	r0, r4
 8001384:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001386:	f816 0b01 	ldrb.w	r0, [r6], #1
 800138a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800138e:	e7f5      	b.n	800137c <_write+0x8>

08001390 <_close>:

int _close(int file)
{
	return -1;
}
 8001390:	f04f 30ff 	mov.w	r0, #4294967295
 8001394:	4770      	bx	lr

08001396 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001396:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
 800139a:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 800139c:	604b      	str	r3, [r1, #4]
}
 800139e:	4770      	bx	lr

080013a0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80013a0:	2001      	movs	r0, #1
 80013a2:	4770      	bx	lr

080013a4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80013a4:	2000      	movs	r0, #0
 80013a6:	4770      	bx	lr

080013a8 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80013a8:	4a0b      	ldr	r2, [pc, #44]	@ (80013d8 <_sbrk+0x30>)
{
 80013aa:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 80013ac:	6811      	ldr	r1, [r2, #0]
{
 80013ae:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 80013b0:	b909      	cbnz	r1, 80013b6 <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 80013b2:	490a      	ldr	r1, [pc, #40]	@ (80013dc <_sbrk+0x34>)
 80013b4:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80013b6:	6810      	ldr	r0, [r2, #0]
 80013b8:	4909      	ldr	r1, [pc, #36]	@ (80013e0 <_sbrk+0x38>)
 80013ba:	4c0a      	ldr	r4, [pc, #40]	@ (80013e4 <_sbrk+0x3c>)
 80013bc:	4403      	add	r3, r0
 80013be:	1b09      	subs	r1, r1, r4
 80013c0:	428b      	cmp	r3, r1
 80013c2:	d906      	bls.n	80013d2 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 80013c4:	f01d fe5e 	bl	801f084 <__errno>
 80013c8:	230c      	movs	r3, #12
 80013ca:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80013cc:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 80013d0:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 80013d2:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 80013d4:	e7fc      	b.n	80013d0 <_sbrk+0x28>
 80013d6:	bf00      	nop
 80013d8:	20000518 	.word	0x20000518
 80013dc:	20015cf0 	.word	0x20015cf0
 80013e0:	20050000 	.word	0x20050000
 80013e4:	00000a00 	.word	0x00000a00

080013e8 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
 80013e8:	4770      	bx	lr
	...

080013ec <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80013ec:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001424 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80013f0:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80013f2:	e003      	b.n	80013fc <LoopCopyDataInit>

080013f4 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80013f4:	4b0c      	ldr	r3, [pc, #48]	@ (8001428 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80013f6:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80013f8:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80013fa:	3104      	adds	r1, #4

080013fc <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80013fc:	480b      	ldr	r0, [pc, #44]	@ (800142c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80013fe:	4b0c      	ldr	r3, [pc, #48]	@ (8001430 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8001400:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8001402:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001404:	d3f6      	bcc.n	80013f4 <CopyDataInit>
  ldr  r2, =_sbss
 8001406:	4a0b      	ldr	r2, [pc, #44]	@ (8001434 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001408:	e002      	b.n	8001410 <LoopFillZerobss>

0800140a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800140a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800140c:	f842 3b04 	str.w	r3, [r2], #4

08001410 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001410:	4b09      	ldr	r3, [pc, #36]	@ (8001438 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8001412:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001414:	d3f9      	bcc.n	800140a <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8001416:	f003 fb3f 	bl	8004a98 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800141a:	f01d fe39 	bl	801f090 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800141e:	f7ff f951 	bl	80006c4 <main>
  bx  lr    
 8001422:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001424:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8001428:	08021b70 	.word	0x08021b70
  ldr  r0, =_sdata
 800142c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001430:	20000124 	.word	0x20000124
  ldr  r2, =_sbss
 8001434:	20000124 	.word	0x20000124
  ldr  r3, = _ebss
 8001438:	20015cf0 	.word	0x20015cf0

0800143c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800143c:	e7fe      	b.n	800143c <ADC_IRQHandler>

0800143e <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 800143e:	4770      	bx	lr

08001440 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001440:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8001442:	f000 fd5f 	bl	8001f04 <touchgfx_components_init>
    touchgfx_init();
}
 8001446:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 800144a:	f000 bceb 	b.w	8001e24 <touchgfx_init>

0800144e <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 800144e:	f000 bd5b 	b.w	8001f08 <touchgfx_taskEntry>

08001452 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8001452:	6840      	ldr	r0, [r0, #4]
    }
 8001454:	4770      	bx	lr

08001456 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8001456:	6041      	str	r1, [r0, #4]
    }
 8001458:	4770      	bx	lr
	...

0800145c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 800145c:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8001460:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 8001464:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8001468:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 800146c:	4b05      	ldr	r3, [pc, #20]	@ (8001484 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 800146e:	4a06      	ldr	r2, [pc, #24]	@ (8001488 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 8001470:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
 8001474:	430a      	orrs	r2, r1
 8001476:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 800147a:	681a      	ldr	r2, [r3, #0]
 800147c:	f042 0201 	orr.w	r2, r2, #1
 8001480:	601a      	str	r2, [r3, #0]
}
 8001482:	4770      	bx	lr
 8001484:	e0001000 	.word	0xe0001000
 8001488:	c5acce55 	.word	0xc5acce55

0800148c <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 800148c:	1a52      	subs	r2, r2, r1
 800148e:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 8001492:	fbb2 f0f3 	udiv	r0, r2, r3
 8001496:	4770      	bx	lr

08001498 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8001498:	4b01      	ldr	r3, [pc, #4]	@ (80014a0 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 800149a:	6858      	ldr	r0, [r3, #4]
}
 800149c:	4770      	bx	lr
 800149e:	bf00      	nop
 80014a0:	e0001000 	.word	0xe0001000

080014a4 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 80014a4:	4770      	bx	lr

080014a6 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 80014a6:	b510      	push	{r4, lr}
 80014a8:	4604      	mov	r4, r0
 80014aa:	210c      	movs	r1, #12
 80014ac:	f01d fa57 	bl	801e95e <_ZdlPvj>
 80014b0:	4620      	mov	r0, r4
 80014b2:	bd10      	pop	{r4, pc}

080014b4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80014b4:	6803      	ldr	r3, [r0, #0]
{
 80014b6:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80014b8:	691b      	ldr	r3, [r3, #16]
{
 80014ba:	4604      	mov	r4, r0
    if (active) //idle task sched out
 80014bc:	b131      	cbz	r1, 80014cc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80014be:	4798      	blx	r3
 80014c0:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 80014c2:	6863      	ldr	r3, [r4, #4]
 80014c4:	1a9b      	subs	r3, r3, r2
 80014c6:	4403      	add	r3, r0
 80014c8:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 80014ca:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 80014cc:	4798      	blx	r3
 80014ce:	60a0      	str	r0, [r4, #8]
}
 80014d0:	e7fb      	b.n	80014ca <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>
	...

080014d4 <_ZN20STM32TouchController4initEv>:
extern I2C_HandleTypeDef hi2c3;

void STM32TouchController::init()
{
    /* Initialize the TS driver structure */
    tsDriver = &ft5336_ts_drv;
 80014d4:	4b02      	ldr	r3, [pc, #8]	@ (80014e0 <_ZN20STM32TouchController4initEv+0xc>)

    /* Initialize the TS driver */
    tsDriver->Start(TS_I2C_ADDRESS);
 80014d6:	2070      	movs	r0, #112	@ 0x70
    tsDriver = &ft5336_ts_drv;
 80014d8:	4a02      	ldr	r2, [pc, #8]	@ (80014e4 <_ZN20STM32TouchController4initEv+0x10>)
 80014da:	6013      	str	r3, [r2, #0]
    tsDriver->Start(TS_I2C_ADDRESS);
 80014dc:	68db      	ldr	r3, [r3, #12]
 80014de:	4718      	bx	r3
 80014e0:	20000010 	.word	0x20000010
 80014e4:	2000051c 	.word	0x2000051c

080014e8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80014e8:	4770      	bx	lr

080014ea <_ZN20STM32TouchControllerD0Ev>:
 80014ea:	b510      	push	{r4, lr}
 80014ec:	4604      	mov	r4, r0
 80014ee:	2104      	movs	r1, #4
 80014f0:	f01d fa35 	bl	801e95e <_ZdlPvj>
 80014f4:	4620      	mov	r0, r4
 80014f6:	bd10      	pop	{r4, pc}

080014f8 <_ZN20STM32TouchController11sampleTouchERlS0_>:
}

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 80014f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (tsDriver)
 80014fa:	4e0e      	ldr	r6, [pc, #56]	@ (8001534 <_ZN20STM32TouchController11sampleTouchERlS0_+0x3c>)
{
 80014fc:	460d      	mov	r5, r1
 80014fe:	4614      	mov	r4, r2
    if (tsDriver)
 8001500:	6833      	ldr	r3, [r6, #0]
 8001502:	b913      	cbnz	r3, 800150a <_ZN20STM32TouchController11sampleTouchERlS0_+0x12>
            x = (int32_t)_x;
            y = (int32_t)_y;
            return true;
        }
    }
    return false;
 8001504:	2000      	movs	r0, #0
}
 8001506:	b002      	add	sp, #8
 8001508:	bd70      	pop	{r4, r5, r6, pc}
        if (tsDriver->DetectTouch(TS_I2C_ADDRESS))
 800150a:	691b      	ldr	r3, [r3, #16]
 800150c:	2070      	movs	r0, #112	@ 0x70
 800150e:	4798      	blx	r3
 8001510:	2800      	cmp	r0, #0
 8001512:	d0f7      	beq.n	8001504 <_ZN20STM32TouchController11sampleTouchERlS0_+0xc>
            tsDriver->GetXY(TS_I2C_ADDRESS, &_y, &_x);
 8001514:	6833      	ldr	r3, [r6, #0]
 8001516:	2070      	movs	r0, #112	@ 0x70
 8001518:	aa01      	add	r2, sp, #4
 800151a:	f10d 0106 	add.w	r1, sp, #6
 800151e:	695b      	ldr	r3, [r3, #20]
 8001520:	4798      	blx	r3
            x = (int32_t)_x;
 8001522:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001526:	2001      	movs	r0, #1
 8001528:	602b      	str	r3, [r5, #0]
            y = (int32_t)_y;
 800152a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800152e:	6023      	str	r3, [r4, #0]
            return true;
 8001530:	e7e9      	b.n	8001506 <_ZN20STM32TouchController11sampleTouchERlS0_+0xe>
 8001532:	bf00      	nop
 8001534:	2000051c 	.word	0x2000051c

08001538 <TS_IO_Write>:
  * @param  Reg: Reg address
  * @param  Value: Data to be written
  * @retval None
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8001538:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 800153a:	2301      	movs	r3, #1
{
 800153c:	f88d 2017 	strb.w	r2, [sp, #23]
    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8001540:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8001544:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001548:	f10d 0217 	add.w	r2, sp, #23
 800154c:	9200      	str	r2, [sp, #0]
 800154e:	460a      	mov	r2, r1
 8001550:	4601      	mov	r1, r0
 8001552:	4805      	ldr	r0, [pc, #20]	@ (8001568 <TS_IO_Write+0x30>)
 8001554:	f004 f930 	bl	80057b8 <HAL_I2C_Mem_Write>
    if (status != HAL_OK)
 8001558:	b110      	cbz	r0, 8001560 <TS_IO_Write+0x28>
    HAL_I2C_DeInit(i2c_handler);
 800155a:	4803      	ldr	r0, [pc, #12]	@ (8001568 <TS_IO_Write+0x30>)
 800155c:	f004 f913 	bl	8005786 <HAL_I2C_DeInit>
    I2Cx_WriteMultiple(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&Value, 1);
}
 8001560:	b007      	add	sp, #28
 8001562:	f85d fb04 	ldr.w	pc, [sp], #4
 8001566:	bf00      	nop
 8001568:	20000410 	.word	0x20000410

0800156c <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Reg address
  * @retval Data to be read
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 800156c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    uint8_t read_value = 0;
 800156e:	2300      	movs	r3, #0
{
 8001570:	460a      	mov	r2, r1
    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8001572:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
    uint8_t read_value = 0;
 8001576:	f88d 3017 	strb.w	r3, [sp, #23]
    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 800157a:	2301      	movs	r3, #1
 800157c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8001580:	f10d 0117 	add.w	r1, sp, #23
 8001584:	9100      	str	r1, [sp, #0]
 8001586:	4601      	mov	r1, r0
 8001588:	4805      	ldr	r0, [pc, #20]	@ (80015a0 <TS_IO_Read+0x34>)
 800158a:	f004 f9ef 	bl	800596c <HAL_I2C_Mem_Read>
    if (status != HAL_OK)
 800158e:	b110      	cbz	r0, 8001596 <TS_IO_Read+0x2a>
    HAL_I2C_DeInit(i2c_handler);
 8001590:	4803      	ldr	r0, [pc, #12]	@ (80015a0 <TS_IO_Read+0x34>)
 8001592:	f004 f8f8 	bl	8005786 <HAL_I2C_DeInit>

    I2Cx_ReadMultiple(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&read_value, 1);

    return read_value;
}
 8001596:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800159a:	b007      	add	sp, #28
 800159c:	f85d fb04 	ldr.w	pc, [sp], #4
 80015a0:	20000410 	.word	0x20000410

080015a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 80015a4:	2803      	cmp	r0, #3
 80015a6:	d823      	bhi.n	80015f0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
 80015a8:	e8df f000 	tbb	[pc, r0]
 80015ac:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 80015b0:	4b10      	ldr	r3, [pc, #64]	@ (80015f4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80015b2:	2110      	movs	r1, #16
 80015b4:	4810      	ldr	r0, [pc, #64]	@ (80015f8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 80015b6:	681a      	ldr	r2, [r3, #0]
 80015b8:	fab2 f282 	clz	r2, r2
 80015bc:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80015be:	f003 bf69 	b.w	8005494 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 80015c2:	4b0c      	ldr	r3, [pc, #48]	@ (80015f4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80015c4:	2140      	movs	r1, #64	@ 0x40
 80015c6:	685a      	ldr	r2, [r3, #4]
 80015c8:	fab2 f282 	clz	r2, r2
 80015cc:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 80015ce:	480b      	ldr	r0, [pc, #44]	@ (80015fc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 80015d0:	e7f5      	b.n	80015be <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 80015d2:	4b08      	ldr	r3, [pc, #32]	@ (80015f4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80015d4:	2180      	movs	r1, #128	@ 0x80
 80015d6:	689a      	ldr	r2, [r3, #8]
 80015d8:	fab2 f282 	clz	r2, r2
 80015dc:	0952      	lsrs	r2, r2, #5
 80015de:	e7f6      	b.n	80015ce <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80015e0:	4b04      	ldr	r3, [pc, #16]	@ (80015f4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80015e2:	2140      	movs	r1, #64	@ 0x40
 80015e4:	4806      	ldr	r0, [pc, #24]	@ (8001600 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
 80015e6:	68da      	ldr	r2, [r3, #12]
 80015e8:	fab2 f282 	clz	r2, r2
 80015ec:	0952      	lsrs	r2, r2, #5
 80015ee:	e7e6      	b.n	80015be <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 80015f0:	4770      	bx	lr
 80015f2:	bf00      	nop
 80015f4:	20000520 	.word	0x20000520
 80015f8:	40020400 	.word	0x40020400
 80015fc:	40020800 	.word	0x40020800
 8001600:	40021800 	.word	0x40021800

08001604 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001604:	2803      	cmp	r0, #3
 8001606:	d823      	bhi.n	8001650 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
 8001608:	e8df f000 	tbb	[pc, r0]
 800160c:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001610:	4b10      	ldr	r3, [pc, #64]	@ (8001654 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001612:	2110      	movs	r1, #16
 8001614:	4810      	ldr	r0, [pc, #64]	@ (8001658 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 8001616:	681a      	ldr	r2, [r3, #0]
 8001618:	3a00      	subs	r2, #0
 800161a:	bf18      	it	ne
 800161c:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 800161e:	f003 bf39 	b.w	8005494 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8001622:	4b0c      	ldr	r3, [pc, #48]	@ (8001654 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001624:	2140      	movs	r1, #64	@ 0x40
 8001626:	685a      	ldr	r2, [r3, #4]
 8001628:	3a00      	subs	r2, #0
 800162a:	bf18      	it	ne
 800162c:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 800162e:	480b      	ldr	r0, [pc, #44]	@ (800165c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 8001630:	e7f5      	b.n	800161e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001632:	4b08      	ldr	r3, [pc, #32]	@ (8001654 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001634:	2180      	movs	r1, #128	@ 0x80
 8001636:	689a      	ldr	r2, [r3, #8]
 8001638:	3a00      	subs	r2, #0
 800163a:	bf18      	it	ne
 800163c:	2201      	movne	r2, #1
 800163e:	e7f6      	b.n	800162e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001640:	4b04      	ldr	r3, [pc, #16]	@ (8001654 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001642:	2140      	movs	r1, #64	@ 0x40
 8001644:	4806      	ldr	r0, [pc, #24]	@ (8001660 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
 8001646:	68da      	ldr	r2, [r3, #12]
 8001648:	3a00      	subs	r2, #0
 800164a:	bf18      	it	ne
 800164c:	2201      	movne	r2, #1
 800164e:	e7e6      	b.n	800161e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8001650:	4770      	bx	lr
 8001652:	bf00      	nop
 8001654:	20000520 	.word	0x20000520
 8001658:	40020400 	.word	0x40020400
 800165c:	40020800 	.word	0x40020800
 8001660:	40021800 	.word	0x40021800

08001664 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001664:	2803      	cmp	r0, #3
 8001666:	d80f      	bhi.n	8001688 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
 8001668:	e8df f000 	tbb	[pc, r0]
 800166c:	0b090602 	.word	0x0b090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001670:	2110      	movs	r1, #16
 8001672:	4806      	ldr	r0, [pc, #24]	@ (800168c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001674:	f003 bf13 	b.w	800549e <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001678:	2140      	movs	r1, #64	@ 0x40
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800167a:	4805      	ldr	r0, [pc, #20]	@ (8001690 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
 800167c:	e7fa      	b.n	8001674 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 800167e:	2180      	movs	r1, #128	@ 0x80
 8001680:	e7fb      	b.n	800167a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001682:	2140      	movs	r1, #64	@ 0x40
 8001684:	4803      	ldr	r0, [pc, #12]	@ (8001694 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
 8001686:	e7f5      	b.n	8001674 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 8001688:	4770      	bx	lr
 800168a:	bf00      	nop
 800168c:	40020400 	.word	0x40020400
 8001690:	40020800 	.word	0x40020800
 8001694:	40021800 	.word	0x40021800

08001698 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001698:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800169a:	2803      	cmp	r0, #3
 800169c:	d813      	bhi.n	80016c6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 800169e:	e8df f000 	tbb	[pc, r0]
 80016a2:	0a02      	.short	0x0a02
 80016a4:	0f0d      	.short	0x0f0d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80016a6:	2110      	movs	r1, #16
 80016a8:	4808      	ldr	r0, [pc, #32]	@ (80016cc <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80016aa:	f003 feed 	bl	8005488 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80016ae:	1e43      	subs	r3, r0, #1
 80016b0:	4258      	negs	r0, r3
 80016b2:	4158      	adcs	r0, r3
 80016b4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80016b6:	2140      	movs	r1, #64	@ 0x40
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80016b8:	4805      	ldr	r0, [pc, #20]	@ (80016d0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
 80016ba:	e7f6      	b.n	80016aa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80016bc:	2180      	movs	r1, #128	@ 0x80
 80016be:	e7fb      	b.n	80016b8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80016c0:	2140      	movs	r1, #64	@ 0x40
 80016c2:	4804      	ldr	r0, [pc, #16]	@ (80016d4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x3c>)
 80016c4:	e7f1      	b.n	80016aa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
    switch (id)
 80016c6:	2000      	movs	r0, #0
 80016c8:	e7f1      	b.n	80016ae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 80016ca:	bf00      	nop
 80016cc:	40020400 	.word	0x40020400
 80016d0:	40020800 	.word	0x40020800
 80016d4:	40021800 	.word	0x40021800

080016d8 <_ZN8touchgfx4GPIO4initEv>:
{
 80016d8:	b570      	push	{r4, r5, r6, lr}
 80016da:	4d08      	ldr	r5, [pc, #32]	@ (80016fc <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80016dc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80016de:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80016e0:	b2e0      	uxtb	r0, r4
 80016e2:	f7ff ffd9 	bl	8001698 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80016e6:	b118      	cbz	r0, 80016f0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80016e8:	682b      	ldr	r3, [r5, #0]
 80016ea:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80016ec:	bf18      	it	ne
 80016ee:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80016f0:	3401      	adds	r4, #1
 80016f2:	3504      	adds	r5, #4
 80016f4:	2c05      	cmp	r4, #5
 80016f6:	d1f3      	bne.n	80016e0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80016f8:	bd70      	pop	{r4, r5, r6, pc}
 80016fa:	bf00      	nop
 80016fc:	20000520 	.word	0x20000520

08001700 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001700:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001702:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8001706:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 800170a:	4770      	bx	lr

0800170c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800170c:	2000      	movs	r0, #0
 800170e:	4770      	bx	lr

08001710 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001710:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001712:	3900      	subs	r1, #0
 8001714:	4b02      	ldr	r3, [pc, #8]	@ (8001720 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 8001716:	bf18      	it	ne
 8001718:	2101      	movne	r1, #1
 800171a:	7019      	strb	r1, [r3, #0]
    }
 800171c:	4770      	bx	lr
 800171e:	bf00      	nop
 8001720:	200150bf 	.word	0x200150bf

08001724 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001724:	2000      	movs	r0, #0
 8001726:	4770      	bx	lr

08001728 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001728:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800172a:	b10b      	cbz	r3, 8001730 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800172c:	4608      	mov	r0, r1
 800172e:	4718      	bx	r3
        }
    }
 8001730:	4770      	bx	lr

08001732 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001732:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8001736:	4770      	bx	lr

08001738 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001738:	6840      	ldr	r0, [r0, #4]
 800173a:	6803      	ldr	r3, [r0, #0]
 800173c:	699b      	ldr	r3, [r3, #24]
 800173e:	4718      	bx	r3

08001740 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001740:	4770      	bx	lr
	...

08001744 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationBuffer[(480 * 272 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001744:	b538      	push	{r3, r4, r5, lr}
 8001746:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001748:	f000 fca6 	bl	8002098 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);  //enable the animation storage to allow slide animations
 800174c:	4908      	ldr	r1, [pc, #32]	@ (8001770 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
 800174e:	6823      	ldr	r3, [r4, #0]
 8001750:	4620      	mov	r0, r4
    lockDMAToFrontPorch(false);
    instrumentation.init();
 8001752:	4d08      	ldr	r5, [pc, #32]	@ (8001774 <_ZN11TouchGFXHAL10initializeEv+0x30>)
    setAnimationStorage((void*)animationBuffer);  //enable the animation storage to allow slide animations
 8001754:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001758:	4798      	blx	r3
        lockDMAToPorch = enableLock;
 800175a:	2300      	movs	r3, #0
    instrumentation.init();
 800175c:	4628      	mov	r0, r5
 800175e:	f884 304a 	strb.w	r3, [r4, #74]	@ 0x4a
 8001762:	f7ff fe7b 	bl	800145c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8001766:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 8001768:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 800176a:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
}
 800176e:	bd38      	pop	{r3, r4, r5, pc}
 8001770:	c0000000 	.word	0xc0000000
 8001774:	20000530 	.word	0x20000530

08001778 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001778:	f000 bc58 	b.w	800202c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800177c <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800177c:	f000 bc5c 	b.w	8002038 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001780 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8001780:	b570      	push	{r4, r5, r6, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001782:	f000 fca7 	bl	80020d4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8001786:	4910      	ldr	r1, [pc, #64]	@ (80017c8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x48>)
 8001788:	2300      	movs	r3, #0
 800178a:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800178e:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 8001792:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001796:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800179a:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800179e:	f3c3 334e 	ubfx	r3, r3, #13, #15
 80017a2:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80017a4:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80017a8:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80017aa:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 80017ae:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80017b0:	f8c1 5274 	str.w	r5, [r1, #628]	@ 0x274
      } while (ways-- != 0U);
 80017b4:	d2f9      	bcs.n	80017aa <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2a>
    } while(sets-- != 0U);
 80017b6:	3b20      	subs	r3, #32
 80017b8:	f113 0f20 	cmn.w	r3, #32
 80017bc:	d1f2      	bne.n	80017a4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x24>
 80017be:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80017c2:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
 80017c6:	bd70      	pop	{r4, r5, r6, pc}
 80017c8:	e000ed00 	.word	0xe000ed00

080017cc <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80017cc:	f000 bc84 	b.w	80020d8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

080017d0 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80017d0:	f000 bc08 	b.w	8001fe4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080017d4 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80017d4:	f000 bc82 	b.w	80020dc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080017d8 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80017d8:	f000 bc8a 	b.w	80020f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080017dc <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80017dc:	f000 bc0c 	b.w	8001ff8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080017e0 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80017e0:	b510      	push	{r4, lr}
 80017e2:	4604      	mov	r4, r0
        swapFrameBuffers();
 80017e4:	f009 fefe 	bl	800b5e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80017e8:	6823      	ldr	r3, [r4, #0]
 80017ea:	4620      	mov	r0, r4
 80017ec:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 80017f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80017f4:	4718      	bx	r3

080017f6 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80017f6:	f009 b953 	b.w	800aaa0 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080017fa <_ZN11TouchGFXHALD0Ev>:
 80017fa:	b510      	push	{r4, lr}
 80017fc:	4604      	mov	r4, r0
 80017fe:	217c      	movs	r1, #124	@ 0x7c
 8001800:	f01d f8ad 	bl	801e95e <_ZdlPvj>
 8001804:	4620      	mov	r0, r4
 8001806:	bd10      	pop	{r4, pc}

08001808 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8001808:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
 800180c:	4b0d      	ldr	r3, [pc, #52]	@ (8001844 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
 800180e:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001810:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001814:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001816:	428c      	cmp	r4, r1
 8001818:	d009      	beq.n	800182e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800181a:	b93a      	cbnz	r2, 800182c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800181c:	490a      	ldr	r1, [pc, #40]	@ (8001848 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800181e:	4a0b      	ldr	r2, [pc, #44]	@ (800184c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001820:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001822:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 8001824:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 8001826:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001828:	800c      	strh	r4, [r1, #0]
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
 800182a:	701a      	strb	r2, [r3, #0]
        }
    }
 800182c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800182e:	2a00      	cmp	r2, #0
 8001830:	d0fc      	beq.n	800182c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001832:	4a06      	ldr	r2, [pc, #24]	@ (800184c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001834:	4904      	ldr	r1, [pc, #16]	@ (8001848 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001836:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001838:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800183a:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800183c:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800183e:	2200      	movs	r2, #0
 8001840:	e7f3      	b.n	800182a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001842:	bf00      	nop
 8001844:	200150b8 	.word	0x200150b8
 8001848:	200150b6 	.word	0x200150b6
 800184c:	200150b4 	.word	0x200150b4

08001850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001850:	b570      	push	{r4, r5, r6, lr}
 8001852:	460d      	mov	r5, r1
 8001854:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001856:	b935      	cbnz	r5, 8001866 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001858:	4b09      	ldr	r3, [pc, #36]	@ (8001880 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800185a:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800185e:	4a09      	ldr	r2, [pc, #36]	@ (8001884 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001860:	4809      	ldr	r0, [pc, #36]	@ (8001888 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001862:	f01d f8ab 	bl	801e9bc <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001866:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800186a:	3a00      	subs	r2, #0
 800186c:	4b07      	ldr	r3, [pc, #28]	@ (800188c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 800186e:	bf18      	it	ne
 8001870:	2201      	movne	r2, #1
 8001872:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001874:	6803      	ldr	r3, [r0, #0]
    }
 8001876:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800187a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800187e:	4718      	bx	r3
 8001880:	0801fbc4 	.word	0x0801fbc4
 8001884:	0801fbfc 	.word	0x0801fbfc
 8001888:	0801fc4a 	.word	0x0801fc4a
 800188c:	200150be 	.word	0x200150be

08001890 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001890:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001892:	4b09      	ldr	r3, [pc, #36]	@ (80018b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001894:	881b      	ldrh	r3, [r3, #0]
 8001896:	428b      	cmp	r3, r1
 8001898:	d803      	bhi.n	80018a2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800189a:	4b08      	ldr	r3, [pc, #32]	@ (80018bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 800189c:	881b      	ldrh	r3, [r3, #0]
 800189e:	4293      	cmp	r3, r2
 80018a0:	d905      	bls.n	80018ae <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80018a2:	4b07      	ldr	r3, [pc, #28]	@ (80018c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80018a4:	219e      	movs	r1, #158	@ 0x9e
 80018a6:	4a07      	ldr	r2, [pc, #28]	@ (80018c4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80018a8:	4807      	ldr	r0, [pc, #28]	@ (80018c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80018aa:	f01d f887 	bl	801e9bc <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80018ae:	4b07      	ldr	r3, [pc, #28]	@ (80018cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80018b0:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80018b2:	4b07      	ldr	r3, [pc, #28]	@ (80018d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80018b4:	801a      	strh	r2, [r3, #0]
    }
 80018b6:	bd08      	pop	{r3, pc}
 80018b8:	200150b4 	.word	0x200150b4
 80018bc:	200150b6 	.word	0x200150b6
 80018c0:	0801fc8f 	.word	0x0801fc8f
 80018c4:	0801fcf2 	.word	0x0801fcf2
 80018c8:	0801fc4a 	.word	0x0801fc4a
 80018cc:	200150ba 	.word	0x200150ba
 80018d0:	200150bc 	.word	0x200150bc

080018d4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 80018d4:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 80018d6:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 80018da:	b118      	cbz	r0, 80018e4 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 80018dc:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 80018de:	6803      	ldr	r3, [r0, #0]
 80018e0:	681b      	ldr	r3, [r3, #0]
 80018e2:	4718      	bx	r3
    }
 80018e4:	4770      	bx	lr
	...

080018e8 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 80018e8:	4601      	mov	r1, r0
 80018ea:	b508      	push	{r3, lr}
        return instance;
 80018ec:	4b03      	ldr	r3, [pc, #12]	@ (80018fc <IdleTaskHook+0x14>)
 80018ee:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 80018f0:	b101      	cbz	r1, 80018f4 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 80018f2:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 80018f4:	f009 fe90 	bl	800b618 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 80018f8:	2001      	movs	r0, #1
 80018fa:	bd08      	pop	{r3, pc}
 80018fc:	200150c0 	.word	0x200150c0

08001900 <_GLOBAL__sub_I_instrumentation>:
        : cc_consumed(0),
 8001900:	4b03      	ldr	r3, [pc, #12]	@ (8001910 <_GLOBAL__sub_I_instrumentation+0x10>)
 8001902:	2200      	movs	r2, #0
 8001904:	605a      	str	r2, [r3, #4]
          cc_in(0)
 8001906:	609a      	str	r2, [r3, #8]
 8001908:	4a02      	ldr	r2, [pc, #8]	@ (8001914 <_GLOBAL__sub_I_instrumentation+0x14>)
 800190a:	601a      	str	r2, [r3, #0]
}
 800190c:	4770      	bx	lr
 800190e:	bf00      	nop
 8001910:	20000530 	.word	0x20000530
 8001914:	0801fb8c 	.word	0x0801fb8c

08001918 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001918:	2101      	movs	r1, #1
 800191a:	2200      	movs	r2, #0
{
 800191c:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800191e:	4608      	mov	r0, r1
 8001920:	f006 fc4e 	bl	80081c0 <osSemaphoreNew>
 8001924:	4b0a      	ldr	r3, [pc, #40]	@ (8001950 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001926:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001928:	b928      	cbnz	r0, 8001936 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800192a:	4b0a      	ldr	r3, [pc, #40]	@ (8001954 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 800192c:	2128      	movs	r1, #40	@ 0x28
 800192e:	4a0a      	ldr	r2, [pc, #40]	@ (8001958 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001930:	480a      	ldr	r0, [pc, #40]	@ (800195c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001932:	f01d f843 	bl	801e9bc <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001936:	2200      	movs	r2, #0
 8001938:	2104      	movs	r1, #4
 800193a:	2001      	movs	r0, #1
 800193c:	f006 fd0a 	bl	8008354 <osMessageQueueNew>
 8001940:	4b07      	ldr	r3, [pc, #28]	@ (8001960 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001942:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001944:	b918      	cbnz	r0, 800194e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001946:	4b07      	ldr	r3, [pc, #28]	@ (8001964 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001948:	212c      	movs	r1, #44	@ 0x2c
 800194a:	4a03      	ldr	r2, [pc, #12]	@ (8001958 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800194c:	e7f0      	b.n	8001930 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800194e:	bd08      	pop	{r3, pc}
 8001950:	20000540 	.word	0x20000540
 8001954:	0801fe10 	.word	0x0801fe10
 8001958:	0801fe59 	.word	0x0801fe59
 800195c:	0801fe88 	.word	0x0801fe88
 8001960:	2000053c 	.word	0x2000053c
 8001964:	0801fed6 	.word	0x0801fed6

08001968 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001968:	4b02      	ldr	r3, [pc, #8]	@ (8001974 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800196a:	f04f 31ff 	mov.w	r1, #4294967295
 800196e:	6818      	ldr	r0, [r3, #0]
 8001970:	f006 bc7e 	b.w	8008270 <osSemaphoreAcquire>
 8001974:	20000540 	.word	0x20000540

08001978 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001978:	4b01      	ldr	r3, [pc, #4]	@ (8001980 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800197a:	6818      	ldr	r0, [r3, #0]
 800197c:	f006 bcb4 	b.w	80082e8 <osSemaphoreRelease>
 8001980:	20000540 	.word	0x20000540

08001984 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001984:	4b02      	ldr	r3, [pc, #8]	@ (8001990 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001986:	2100      	movs	r1, #0
 8001988:	6818      	ldr	r0, [r3, #0]
 800198a:	f006 bc71 	b.w	8008270 <osSemaphoreAcquire>
 800198e:	bf00      	nop
 8001990:	20000540 	.word	0x20000540

08001994 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8001994:	f7ff bff0 	b.w	8001978 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001998 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001998:	2300      	movs	r3, #0
 800199a:	4803      	ldr	r0, [pc, #12]	@ (80019a8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800199c:	4903      	ldr	r1, [pc, #12]	@ (80019ac <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800199e:	461a      	mov	r2, r3
 80019a0:	6800      	ldr	r0, [r0, #0]
 80019a2:	f006 bd1d 	b.w	80083e0 <osMessageQueuePut>
 80019a6:	bf00      	nop
 80019a8:	2000053c 	.word	0x2000053c
 80019ac:	20000004 	.word	0x20000004

080019b0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80019b0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80019b2:	2300      	movs	r3, #0
 80019b4:	4c07      	ldr	r4, [pc, #28]	@ (80019d4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80019b6:	a901      	add	r1, sp, #4
 80019b8:	461a      	mov	r2, r3
 80019ba:	6820      	ldr	r0, [r4, #0]
 80019bc:	f006 fd52 	bl	8008464 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80019c0:	f04f 33ff 	mov.w	r3, #4294967295
 80019c4:	2200      	movs	r2, #0
 80019c6:	a901      	add	r1, sp, #4
 80019c8:	6820      	ldr	r0, [r4, #0]
 80019ca:	f006 fd4b 	bl	8008464 <osMessageQueueGet>
}
 80019ce:	b002      	add	sp, #8
 80019d0:	bd10      	pop	{r4, pc}
 80019d2:	bf00      	nop
 80019d4:	2000053c 	.word	0x2000053c

080019d8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80019d8:	6803      	ldr	r3, [r0, #0]
 80019da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80019dc:	4718      	bx	r3

080019de <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80019de:	2001      	movs	r0, #1
 80019e0:	4770      	bx	lr

080019e2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80019e2:	6803      	ldr	r3, [r0, #0]
 80019e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80019e6:	4718      	bx	r3

080019e8 <_ZN8STM32DMA10initializeEv>:
}

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80019e8:	4b0d      	ldr	r3, [pc, #52]	@ (8001a20 <_ZN8STM32DMA10initializeEv+0x38>)
{
 80019ea:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80019ec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019ee:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80019f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80019f4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019f6:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 80019fa:	9201      	str	r2, [sp, #4]
 80019fc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80019fe:	691a      	ldr	r2, [r3, #16]
 8001a00:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001a04:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001a06:	691a      	ldr	r2, [r3, #16]
 8001a08:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8001a0c:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001a0e:	4b05      	ldr	r3, [pc, #20]	@ (8001a24 <_ZN8STM32DMA10initializeEv+0x3c>)
 8001a10:	4a05      	ldr	r2, [pc, #20]	@ (8001a28 <_ZN8STM32DMA10initializeEv+0x40>)
 8001a12:	611a      	str	r2, [r3, #16]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001a14:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001a18:	4b04      	ldr	r3, [pc, #16]	@ (8001a2c <_ZN8STM32DMA10initializeEv+0x44>)
 8001a1a:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001a1c:	b002      	add	sp, #8
 8001a1e:	4770      	bx	lr
 8001a20:	40023800 	.word	0x40023800
 8001a24:	20000464 	.word	0x20000464
 8001a28:	08001cb9 	.word	0x08001cb9
 8001a2c:	e000e100 	.word	0xe000e100

08001a30 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001a30:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8001a34:	4770      	bx	lr
	...

08001a38 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001a38:	4b05      	ldr	r3, [pc, #20]	@ (8001a50 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001a3a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001a3e:	6003      	str	r3, [r0, #0]
 8001a40:	4b04      	ldr	r3, [pc, #16]	@ (8001a54 <_ZN8STM32DMAD1Ev+0x1c>)
 8001a42:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001a46:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001a4a:	f3bf 8f6f 	isb	sy
}
 8001a4e:	4770      	bx	lr
 8001a50:	08020074 	.word	0x08020074
 8001a54:	e000e100 	.word	0xe000e100

08001a58 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001a58:	b510      	push	{r4, lr}
 8001a5a:	4604      	mov	r4, r0
}
 8001a5c:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001a60:	f7ff ffea 	bl	8001a38 <_ZN8STM32DMAD1Ev>
 8001a64:	4620      	mov	r0, r4
 8001a66:	f01c ff7a 	bl	801e95e <_ZdlPvj>
 8001a6a:	4620      	mov	r0, r4
 8001a6c:	bd10      	pop	{r4, pc}
	...

08001a70 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8001a70:	b508      	push	{r3, lr}
    switch (format)
 8001a72:	280a      	cmp	r0, #10
 8001a74:	d809      	bhi.n	8001a8a <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8001a76:	e8df f000 	tbb	[pc, r0]
 8001a7a:	1006      	.short	0x1006
 8001a7c:	0808080e 	.word	0x0808080e
 8001a80:	10101008 	.word	0x10101008
 8001a84:	10          	.byte	0x10
 8001a85:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001a86:	2002      	movs	r0, #2
}
 8001a88:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001a8a:	4b05      	ldr	r3, [pc, #20]	@ (8001aa0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8001a8c:	2186      	movs	r1, #134	@ 0x86
 8001a8e:	4a05      	ldr	r2, [pc, #20]	@ (8001aa4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001a90:	4805      	ldr	r0, [pc, #20]	@ (8001aa8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001a92:	f01c ff93 	bl	801e9bc <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001a96:	2000      	movs	r0, #0
 8001a98:	e7f6      	b.n	8001a88 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001a9a:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001a9c:	e7f4      	b.n	8001a88 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001a9e:	bf00      	nop
 8001aa0:	0801ff18 	.word	0x0801ff18
 8001aa4:	0801ff33 	.word	0x0801ff33
 8001aa8:	0801ff7e 	.word	0x0801ff7e

08001aac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001aac:	b538      	push	{r3, r4, r5, lr}
 8001aae:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001ab0:	7f88      	ldrb	r0, [r1, #30]
 8001ab2:	f7ff ffdd 	bl	8001a70 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001ab6:	4b17      	ldr	r3, [pc, #92]	@ (8001b14 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ab8:	8aa5      	ldrh	r5, [r4, #20]
 8001aba:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001abc:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001abe:	ea42 4205 	orr.w	r2, r2, r5, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ac2:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ac4:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001ac6:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ac8:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001aca:	1b52      	subs	r2, r2, r5
 8001acc:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001ace:	6825      	ldr	r5, [r4, #0]
 8001ad0:	2d08      	cmp	r5, #8
 8001ad2:	d10e      	bne.n	8001af2 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001ad4:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001ad6:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001ad8:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001ada:	4a0f      	ldr	r2, [pc, #60]	@ (8001b18 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001adc:	7f20      	ldrb	r0, [r4, #28]
 8001ade:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001ae2:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001ae4:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001ae6:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001ae8:	4a0c      	ldr	r2, [pc, #48]	@ (8001b1c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001aea:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001aec:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001aee:	601a      	str	r2, [r3, #0]
    }
}
 8001af0:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001af2:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001af4:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001af6:	611a      	str	r2, [r3, #16]
 8001af8:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001afa:	0a0a      	lsrs	r2, r1, #8
 8001afc:	0948      	lsrs	r0, r1, #5
 8001afe:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001b02:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8001b06:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8001b0a:	4302      	orrs	r2, r0
 8001b0c:	430a      	orrs	r2, r1
 8001b0e:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001b10:	4a03      	ldr	r2, [pc, #12]	@ (8001b20 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001b12:	e7ec      	b.n	8001aee <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001b14:	4002b000 	.word	0x4002b000
 8001b18:	00010009 	.word	0x00010009
 8001b1c:	00020201 	.word	0x00020201
 8001b20:	00030201 	.word	0x00030201

08001b24 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8001b24:	b508      	push	{r3, lr}
    switch (format)
 8001b26:	280b      	cmp	r0, #11
 8001b28:	d80b      	bhi.n	8001b42 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8001b2a:	e8df f000 	tbb	[pc, r0]
 8001b2e:	1206      	.short	0x1206
 8001b30:	0a0a0a10 	.word	0x0a0a0a10
 8001b34:	0808080a 	.word	0x0808080a
 8001b38:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001b3a:	2002      	movs	r0, #2
}
 8001b3c:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001b3e:	2005      	movs	r0, #5
        break;
 8001b40:	e7fc      	b.n	8001b3c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8001b42:	4b05      	ldr	r3, [pc, #20]	@ (8001b58 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001b44:	2165      	movs	r1, #101	@ 0x65
 8001b46:	4a05      	ldr	r2, [pc, #20]	@ (8001b5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001b48:	4805      	ldr	r0, [pc, #20]	@ (8001b60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8001b4a:	f01c ff37 	bl	801e9bc <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001b4e:	2000      	movs	r0, #0
 8001b50:	e7f4      	b.n	8001b3c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001b52:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001b54:	e7f2      	b.n	8001b3c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001b56:	bf00      	nop
 8001b58:	0801ff18 	.word	0x0801ff18
 8001b5c:	0801ffca 	.word	0x0801ffca
 8001b60:	0801ff7e 	.word	0x0801ff7e

08001b64 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8001b64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001b68:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8001b6c:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001b6e:	4640      	mov	r0, r8
 8001b70:	f7ff ffd8 	bl	8001b24 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001b74:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001b76:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001b78:	4638      	mov	r0, r7
 8001b7a:	f7ff ffd3 	bl	8001b24 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8001b7e:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001b80:	4638      	mov	r0, r7
 8001b82:	f7ff ff75 	bl	8001a70 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001b86:	8aa1      	ldrh	r1, [r4, #20]
 8001b88:	8b62      	ldrh	r2, [r4, #26]
 8001b8a:	4b43      	ldr	r3, [pc, #268]	@ (8001c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001b8c:	1a52      	subs	r2, r2, r1
 8001b8e:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001b90:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001b92:	8b22      	ldrh	r2, [r4, #24]
 8001b94:	1a52      	subs	r2, r2, r1
 8001b96:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001b98:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001b9a:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001b9c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ba0:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ba2:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001ba4:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ba6:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001ba8:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8001baa:	6820      	ldr	r0, [r4, #0]
 8001bac:	2880      	cmp	r0, #128	@ 0x80
 8001bae:	d028      	beq.n	8001c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8001bb0:	7f22      	ldrb	r2, [r4, #28]
 8001bb2:	d80f      	bhi.n	8001bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8001bb4:	2820      	cmp	r0, #32
 8001bb6:	d066      	beq.n	8001c86 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
 8001bb8:	2840      	cmp	r0, #64	@ 0x40
 8001bba:	d064      	beq.n	8001c86 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
 8001bbc:	2804      	cmp	r0, #4
 8001bbe:	d01a      	beq.n	8001bf6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bc0:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001bc4:	4b34      	ldr	r3, [pc, #208]	@ (8001c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001bc6:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bc8:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001bcc:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001bce:	d060      	beq.n	8001c92 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12e>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001bd0:	4a32      	ldr	r2, [pc, #200]	@ (8001c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001bd2:	e044      	b.n	8001c5e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8001bd4:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8001bd8:	d004      	beq.n	8001be4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8001bda:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8001bde:	d1ef      	bne.n	8001bc0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001be0:	482f      	ldr	r0, [pc, #188]	@ (8001ca0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001be2:	e000      	b.n	8001be6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001be4:	482f      	ldr	r0, [pc, #188]	@ (8001ca4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001be6:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8001bea:	61da      	str	r2, [r3, #28]
 8001bec:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001bee:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001bf0:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001bf2:	6159      	str	r1, [r3, #20]
 8001bf4:	e032      	b.n	8001c5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bf6:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001bfa:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bfe:	61da      	str	r2, [r3, #28]
 8001c00:	e7f6      	b.n	8001bf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001c02:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001c04:	1d02      	adds	r2, r0, #4
 8001c06:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001c08:	7f22      	ldrb	r2, [r4, #28]
 8001c0a:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001c0e:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001c12:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001c14:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001c16:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001c18:	7801      	ldrb	r1, [r0, #0]
 8001c1a:	b141      	cbz	r1, 8001c2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8001c1c:	2901      	cmp	r1, #1
 8001c1e:	d021      	beq.n	8001c64 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8001c20:	4b21      	ldr	r3, [pc, #132]	@ (8001ca8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8001c22:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8001c26:	4a21      	ldr	r2, [pc, #132]	@ (8001cac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001c28:	4821      	ldr	r0, [pc, #132]	@ (8001cb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8001c2a:	f01c fec7 	bl	801e9bc <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001c2e:	69da      	ldr	r2, [r3, #28]
 8001c30:	8841      	ldrh	r1, [r0, #2]
 8001c32:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001c36:	3901      	subs	r1, #1
 8001c38:	f022 0210 	bic.w	r2, r2, #16
 8001c3c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 8001c40:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001c42:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001c44:	4b14      	ldr	r3, [pc, #80]	@ (8001c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001c46:	69da      	ldr	r2, [r3, #28]
 8001c48:	f042 0220 	orr.w	r2, r2, #32
 8001c4c:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001c4e:	69da      	ldr	r2, [r3, #28]
 8001c50:	0692      	lsls	r2, r2, #26
 8001c52:	d4fc      	bmi.n	8001c4e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001c54:	2210      	movs	r2, #16
 8001c56:	609a      	str	r2, [r3, #8]
            if (blend)
 8001c58:	2900      	cmp	r1, #0
 8001c5a:	d0b9      	beq.n	8001bd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001c5c:	4a15      	ldr	r2, [pc, #84]	@ (8001cb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001c5e:	601a      	str	r2, [r3, #0]
}
 8001c60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8001c64:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001c68:	69da      	ldr	r2, [r3, #28]
 8001c6a:	8840      	ldrh	r0, [r0, #2]
 8001c6c:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
                if (blitOp.alpha == 255)
 8001c70:	bf18      	it	ne
 8001c72:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001c74:	3801      	subs	r0, #1
 8001c76:	f022 0210 	bic.w	r2, r2, #16
 8001c7a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001c7e:	f042 0210 	orr.w	r2, r2, #16
 8001c82:	61da      	str	r2, [r3, #28]
                break;
 8001c84:	e7de      	b.n	8001c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001c86:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001c8a:	4b03      	ldr	r3, [pc, #12]	@ (8001c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001c8c:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001c90:	e7b5      	b.n	8001bfe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001c92:	f240 2201 	movw	r2, #513	@ 0x201
 8001c96:	e7e2      	b.n	8001c5e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8001c98:	4002b000 	.word	0x4002b000
 8001c9c:	00010201 	.word	0x00010201
 8001ca0:	00020009 	.word	0x00020009
 8001ca4:	0002000a 	.word	0x0002000a
 8001ca8:	08020014 	.word	0x08020014
 8001cac:	0802002e 	.word	0x0802002e
 8001cb0:	0801ff7e 	.word	0x0801ff7e
 8001cb4:	00020201 	.word	0x00020201

08001cb8 <DMA2D_XferCpltCallback>:
 8001cb8:	4b02      	ldr	r3, [pc, #8]	@ (8001cc4 <DMA2D_XferCpltCallback+0xc>)
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001cbe:	6803      	ldr	r3, [r0, #0]
 8001cc0:	695b      	ldr	r3, [r3, #20]
 8001cc2:	4718      	bx	r3
 8001cc4:	200150c0 	.word	0x200150c0

08001cc8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001cc8:	b570      	push	{r4, r5, r6, lr}
 8001cca:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001ccc:	4b0a      	ldr	r3, [pc, #40]	@ (8001cf8 <_ZN8STM32DMAC1Ev+0x30>)
 8001cce:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001cd0:	2600      	movs	r6, #0
 8001cd2:	4625      	mov	r5, r4
 8001cd4:	2260      	movs	r2, #96	@ 0x60
 8001cd6:	6060      	str	r0, [r4, #4]
 8001cd8:	7226      	strb	r6, [r4, #8]
 8001cda:	7266      	strb	r6, [r4, #9]
 8001cdc:	f845 3b20 	str.w	r3, [r5], #32
 8001ce0:	4629      	mov	r1, r5
 8001ce2:	f009 fdd5 	bl	800b890 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001ce6:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8001cea:	60ee      	str	r6, [r5, #12]
 8001cec:	3524      	adds	r5, #36	@ 0x24
 8001cee:	429d      	cmp	r5, r3
 8001cf0:	d1fb      	bne.n	8001cea <_ZN8STM32DMAC1Ev+0x22>
}
 8001cf2:	4620      	mov	r0, r4
 8001cf4:	bd70      	pop	{r4, r5, r6, pc}
 8001cf6:	bf00      	nop
 8001cf8:	08020074 	.word	0x08020074

08001cfc <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001cfc:	2001      	movs	r0, #1
 8001cfe:	4770      	bx	lr

08001d00 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001d00:	200c      	movs	r0, #12
 8001d02:	4770      	bx	lr

08001d04 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001d04:	230c      	movs	r3, #12
 8001d06:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001d0a:	3008      	adds	r0, #8
 8001d0c:	4770      	bx	lr

08001d0e <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001d0e:	230c      	movs	r3, #12
 8001d10:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001d14:	3008      	adds	r0, #8
 8001d16:	4770      	bx	lr

08001d18 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001d18:	2001      	movs	r0, #1
 8001d1a:	4770      	bx	lr

08001d1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001d1c:	f240 60bc 	movw	r0, #1724	@ 0x6bc
 8001d20:	4770      	bx	lr

08001d22 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001d22:	f240 63bc 	movw	r3, #1724	@ 0x6bc
 8001d26:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001d2a:	3008      	adds	r0, #8
 8001d2c:	4770      	bx	lr

08001d2e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001d2e:	f240 63bc 	movw	r3, #1724	@ 0x6bc
 8001d32:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001d36:	3008      	adds	r0, #8
 8001d38:	4770      	bx	lr

08001d3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001d3a:	2001      	movs	r0, #1
 8001d3c:	4770      	bx	lr

08001d3e <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001d3e:	2010      	movs	r0, #16
 8001d40:	4770      	bx	lr

08001d42 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001d42:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001d46:	3008      	adds	r0, #8
 8001d48:	4770      	bx	lr

08001d4a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001d4a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001d4e:	3008      	adds	r0, #8
 8001d50:	4770      	bx	lr

08001d52 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainScreenNoTransition();
 8001d52:	4608      	mov	r0, r1
 8001d54:	f000 bbcc 	b.w	80024f0 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>

08001d58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001d58:	4b03      	ldr	r3, [pc, #12]	@ (8001d68 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001d5a:	b510      	push	{r4, lr}
 8001d5c:	4604      	mov	r4, r0
 8001d5e:	6003      	str	r3, [r0, #0]
 8001d60:	f008 fbf7 	bl	800a552 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001d64:	4620      	mov	r0, r4
 8001d66:	bd10      	pop	{r4, pc}
 8001d68:	0802012c 	.word	0x0802012c

08001d6c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001d6c:	b510      	push	{r4, lr}
 8001d6e:	4604      	mov	r4, r0
 8001d70:	f7ff fff2 	bl	8001d58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d74:	2114      	movs	r1, #20
 8001d76:	4620      	mov	r0, r4
 8001d78:	f01c fdf1 	bl	801e95e <_ZdlPvj>
 8001d7c:	4620      	mov	r0, r4
 8001d7e:	bd10      	pop	{r4, pc}

08001d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001d80:	4b03      	ldr	r3, [pc, #12]	@ (8001d90 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001d82:	b510      	push	{r4, lr}
 8001d84:	4604      	mov	r4, r0
 8001d86:	6003      	str	r3, [r0, #0]
 8001d88:	f008 fbe3 	bl	800a552 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001d8c:	4620      	mov	r0, r4
 8001d8e:	bd10      	pop	{r4, pc}
 8001d90:	080200f8 	.word	0x080200f8

08001d94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001d94:	b510      	push	{r4, lr}
 8001d96:	4604      	mov	r4, r0
 8001d98:	f7ff fff2 	bl	8001d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d9c:	f240 61c4 	movw	r1, #1732	@ 0x6c4
 8001da0:	4620      	mov	r0, r4
 8001da2:	f01c fddc 	bl	801e95e <_ZdlPvj>
 8001da6:	4620      	mov	r0, r4
 8001da8:	bd10      	pop	{r4, pc}
	...

08001dac <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001dac:	4b03      	ldr	r3, [pc, #12]	@ (8001dbc <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001dae:	b510      	push	{r4, lr}
 8001db0:	4604      	mov	r4, r0
 8001db2:	6003      	str	r3, [r0, #0]
 8001db4:	f008 fbcd 	bl	800a552 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001db8:	4620      	mov	r0, r4
 8001dba:	bd10      	pop	{r4, pc}
 8001dbc:	080200c4 	.word	0x080200c4

08001dc0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001dc0:	b510      	push	{r4, lr}
 8001dc2:	4604      	mov	r4, r0
 8001dc4:	f7ff fff2 	bl	8001dac <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001dc8:	2118      	movs	r1, #24
 8001dca:	4620      	mov	r0, r4
 8001dcc:	f01c fdc7 	bl	801e95e <_ZdlPvj>
 8001dd0:	4620      	mov	r0, r4
 8001dd2:	bd10      	pop	{r4, pc}

08001dd4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001dd4:	4b08      	ldr	r3, [pc, #32]	@ (8001df8 <_ZN12FrontendHeapD1Ev+0x24>)
 8001dd6:	b510      	push	{r4, lr}
 8001dd8:	4604      	mov	r4, r0
 8001dda:	6003      	str	r3, [r0, #0]
 8001ddc:	f500 60de 	add.w	r0, r0, #1776	@ 0x6f0
 8001de0:	f7ff ffba 	bl	8001d58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001de4:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001de8:	f7ff ffca 	bl	8001d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001dec:	f104 0014 	add.w	r0, r4, #20
 8001df0:	f7ff ffdc 	bl	8001dac <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001df4:	4620      	mov	r0, r4
 8001df6:	bd10      	pop	{r4, pc}
 8001df8:	08020160 	.word	0x08020160

08001dfc <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001dfc:	b508      	push	{r3, lr}
 8001dfe:	4802      	ldr	r0, [pc, #8]	@ (8001e08 <__tcf_0+0xc>)
 8001e00:	f7ff ffe8 	bl	8001dd4 <_ZN12FrontendHeapD1Ev>
 8001e04:	bd08      	pop	{r3, pc}
 8001e06:	bf00      	nop
 8001e08:	200013f4 	.word	0x200013f4

08001e0c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001e0c:	b510      	push	{r4, lr}
 8001e0e:	4604      	mov	r4, r0
 8001e10:	f7ff ffe0 	bl	8001dd4 <_ZN12FrontendHeapD1Ev>
 8001e14:	f640 0164 	movw	r1, #2148	@ 0x864
 8001e18:	4620      	mov	r0, r4
 8001e1a:	f01c fda0 	bl	801e95e <_ZdlPvj>
 8001e1e:	4620      	mov	r0, r4
 8001e20:	bd10      	pop	{r4, pc}
	...

08001e24 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
 8001e24:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001e28:	f000 f9c4 	bl	80021b4 <_ZN14BitmapDatabase11getInstanceEv>
 8001e2c:	2400      	movs	r4, #0
 8001e2e:	4605      	mov	r5, r0
 8001e30:	f000 f9c4 	bl	80021bc <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001e34:	4623      	mov	r3, r4
 8001e36:	4601      	mov	r1, r0
 8001e38:	4622      	mov	r2, r4
 8001e3a:	4628      	mov	r0, r5
 8001e3c:	9400      	str	r4, [sp, #0]
 8001e3e:	f00f f929 	bl	8011094 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001e42:	4b25      	ldr	r3, [pc, #148]	@ (8001ed8 <touchgfx_init+0xb4>)
 8001e44:	4a25      	ldr	r2, [pc, #148]	@ (8001edc <touchgfx_init+0xb8>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001e46:	4620      	mov	r0, r4
        static FrontendHeap instance;
 8001e48:	4d25      	ldr	r5, [pc, #148]	@ (8001ee0 <touchgfx_init+0xbc>)
 8001e4a:	601a      	str	r2, [r3, #0]
 8001e4c:	f001 f99a 	bl	8003184 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001e50:	4824      	ldr	r0, [pc, #144]	@ (8001ee4 <touchgfx_init+0xc0>)
 8001e52:	f00f f887 	bl	8010f64 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001e56:	682b      	ldr	r3, [r5, #0]
 8001e58:	f3bf 8f5b 	dmb	ish
 8001e5c:	07db      	lsls	r3, r3, #31
 8001e5e:	d435      	bmi.n	8001ecc <touchgfx_init+0xa8>
 8001e60:	4628      	mov	r0, r5
 8001e62:	f01c fd7e 	bl	801e962 <__cxa_guard_acquire>
 8001e66:	b388      	cbz	r0, 8001ecc <touchgfx_init+0xa8>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001e68:	4c1f      	ldr	r4, [pc, #124]	@ (8001ee8 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
        app(model, *this)
 8001e6a:	4b20      	ldr	r3, [pc, #128]	@ (8001eec <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001e6c:	f504 66e1 	add.w	r6, r4, #1800	@ 0x708
        : presenterStorage(pres),
 8001e70:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8001e74:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 8001e78:	f504 67de 	add.w	r7, r4, #1776	@ 0x6f0
 8001e7c:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 8001e7e:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001e80:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001e84:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001e86:	6126      	str	r6, [r4, #16]
 8001e88:	f008 fb64 	bl	800a554 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001e8c:	4b18      	ldr	r3, [pc, #96]	@ (8001ef0 <touchgfx_init+0xcc>)
 8001e8e:	4640      	mov	r0, r8
 8001e90:	6163      	str	r3, [r4, #20]
 8001e92:	f008 fb5f 	bl	800a554 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001e96:	4b17      	ldr	r3, [pc, #92]	@ (8001ef4 <touchgfx_init+0xd0>)
 8001e98:	4638      	mov	r0, r7
 8001e9a:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001e9c:	f008 fb5a 	bl	800a554 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001ea0:	4b15      	ldr	r3, [pc, #84]	@ (8001ef8 <touchgfx_init+0xd4>)
 8001ea2:	f204 7004 	addw	r0, r4, #1796	@ 0x704
 8001ea6:	f8c4 36f0 	str.w	r3, [r4, #1776]	@ 0x6f0
 8001eaa:	f002 f9d5 	bl	8004258 <_ZN5ModelC1Ev>
 8001eae:	4622      	mov	r2, r4
 8001eb0:	f204 7104 	addw	r1, r4, #1796	@ 0x704
 8001eb4:	4630      	mov	r0, r6
 8001eb6:	f002 f97d 	bl	80041b4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001eba:	4630      	mov	r0, r6
 8001ebc:	f000 fb18 	bl	80024f0 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
        static FrontendHeap instance;
 8001ec0:	480e      	ldr	r0, [pc, #56]	@ (8001efc <touchgfx_init+0xd8>)
 8001ec2:	f01c fd99 	bl	801e9f8 <atexit>
 8001ec6:	4628      	mov	r0, r5
 8001ec8:	f01c fd57 	bl	801e97a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001ecc:	480c      	ldr	r0, [pc, #48]	@ (8001f00 <touchgfx_init+0xdc>)
}
 8001ece:	b002      	add	sp, #8
 8001ed0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001ed4:	f7ff bc36 	b.w	8001744 <_ZN11TouchGFXHAL10initializeEv>
 8001ed8:	2001511c 	.word	0x2001511c
 8001edc:	200005c0 	.word	0x200005c0
 8001ee0:	200013f0 	.word	0x200013f0
 8001ee4:	20000008 	.word	0x20000008
 8001ee8:	200013f4 	.word	0x200013f4
 8001eec:	08020160 	.word	0x08020160
 8001ef0:	080200c4 	.word	0x080200c4
 8001ef4:	080200f8 	.word	0x080200f8
 8001ef8:	0802012c 	.word	0x0802012c
 8001efc:	08001dfd 	.word	0x08001dfd
 8001f00:	20000544 	.word	0x20000544

08001f04 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001f04:	4770      	bx	lr
	...

08001f08 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001f08:	4801      	ldr	r0, [pc, #4]	@ (8001f10 <touchgfx_taskEntry+0x8>)
 8001f0a:	f008 be32 	b.w	800ab72 <_ZN8touchgfx3HAL9taskEntryEv>
 8001f0e:	bf00      	nop
 8001f10:	20000544 	.word	0x20000544

08001f14 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001f14:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001f16:	4e22      	ldr	r6, [pc, #136]	@ (8001fa0 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001f18:	4b22      	ldr	r3, [pc, #136]	@ (8001fa4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
 8001f1a:	4c23      	ldr	r4, [pc, #140]	@ (8001fa8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001f1c:	4630      	mov	r0, r6
static LCD16bpp display;
 8001f1e:	4d23      	ldr	r5, [pc, #140]	@ (8001fac <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001f20:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001f22:	f7ff fed1 	bl	8001cc8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001f26:	4628      	mov	r0, r5
 8001f28:	f013 fb8e 	bl	8015648 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8001f2c:	4b20      	ldr	r3, [pc, #128]	@ (8001fb0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
          mcuInstrumentation(0),
 8001f2e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001f30:	f44f 7180 	mov.w	r1, #256	@ 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001f34:	481f      	ldr	r0, [pc, #124]	@ (8001fb4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001f36:	861a      	strh	r2, [r3, #48]	@ 0x30
          useAuxiliaryLCD(false),
 8001f38:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
 8001f3c:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 8001f3e:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 8001f42:	675a      	str	r2, [r3, #116]	@ 0x74
          touchController(touchCtrl),
 8001f44:	60dc      	str	r4, [r3, #12]
          auxiliaryLCD(0),
 8001f46:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001f4a:	491b      	ldr	r1, [pc, #108]	@ (8001fb8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          vSyncCompensationEnabled(false),
 8001f4c:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001f50:	491a      	ldr	r1, [pc, #104]	@ (8001fbc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001f52:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 8001f54:	491a      	ldr	r1, [pc, #104]	@ (8001fc0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8001f56:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001f58:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8001f5c:	8001      	strh	r1, [r0, #0]
 8001f5e:	4819      	ldr	r0, [pc, #100]	@ (8001fc4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 8001f60:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001f62:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8001f66:	4818      	ldr	r0, [pc, #96]	@ (8001fc8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          buttonController(0),
 8001f68:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001f6c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001f70:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001f74:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8001f78:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8001f7c:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001f80:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 8001f84:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lcdRef(display),
 8001f88:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001f8c:	8001      	strh	r1, [r0, #0]
 8001f8e:	480f      	ldr	r0, [pc, #60]	@ (8001fcc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001f90:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001f94:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001f96:	490e      	ldr	r1, [pc, #56]	@ (8001fd0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001f98:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001f9a:	4a0e      	ldr	r2, [pc, #56]	@ (8001fd4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001f9c:	601a      	str	r2, [r3, #0]
}
 8001f9e:	bd70      	pop	{r4, r5, r6, pc}
 8001fa0:	2000064c 	.word	0x2000064c
 8001fa4:	0801fbb4 	.word	0x0801fbb4
 8001fa8:	200013ec 	.word	0x200013ec
 8001fac:	200005c4 	.word	0x200005c4
 8001fb0:	20000544 	.word	0x20000544
 8001fb4:	200150b4 	.word	0x200150b4
 8001fb8:	01000001 	.word	0x01000001
 8001fbc:	01010000 	.word	0x01010000
 8001fc0:	200150c0 	.word	0x200150c0
 8001fc4:	200150ba 	.word	0x200150ba
 8001fc8:	200150b6 	.word	0x200150b6
 8001fcc:	200150bc 	.word	0x200150bc
 8001fd0:	200150b8 	.word	0x200150b8
 8001fd4:	0801fd40 	.word	0x0801fd40

08001fd8 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001fd8:	4801      	ldr	r0, [pc, #4]	@ (8001fe0 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001fda:	f7ff bd2d 	b.w	8001a38 <_ZN8STM32DMAD1Ev>
 8001fde:	bf00      	nop
 8001fe0:	2000064c 	.word	0x2000064c

08001fe4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001fe4:	4b03      	ldr	r3, [pc, #12]	@ (8001ff4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001fe6:	2290      	movs	r2, #144	@ 0x90
 8001fe8:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8001fec:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001ff0:	4770      	bx	lr
 8001ff2:	bf00      	nop
 8001ff4:	e000e100 	.word	0xe000e100

08001ff8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001ff8:	4a09      	ldr	r2, [pc, #36]	@ (8002020 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001ffa:	490a      	ldr	r1, [pc, #40]	@ (8002024 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001ffc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001ffe:	480a      	ldr	r0, [pc, #40]	@ (8002028 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002000:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002004:	3b01      	subs	r3, #1
 8002006:	b29b      	uxth	r3, r3
 8002008:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800200a:	6911      	ldr	r1, [r2, #16]
 800200c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002010:	3901      	subs	r1, #1
 8002012:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002014:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002016:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8002018:	f043 0301 	orr.w	r3, r3, #1
 800201c:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800201e:	4770      	bx	lr
 8002020:	40016800 	.word	0x40016800
 8002024:	20001c5a 	.word	0x20001c5a
 8002028:	20001c58 	.word	0x20001c58

0800202c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800202c:	4b01      	ldr	r3, [pc, #4]	@ (8002034 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800202e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8002032:	4770      	bx	lr
 8002034:	40016800 	.word	0x40016800

08002038 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002038:	4b02      	ldr	r3, [pc, #8]	@ (8002044 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800203a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800203c:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002040:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8002042:	4770      	bx	lr
 8002044:	40016800 	.word	0x40016800

08002048 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8002048:	4a12      	ldr	r2, [pc, #72]	@ (8002094 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x4c>)
 800204a:	6953      	ldr	r3, [r2, #20]
 800204c:	03db      	lsls	r3, r3, #15
{
 800204e:	b570      	push	{r4, r5, r6, lr}
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8002050:	d51e      	bpl.n	8002090 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8002052:	2300      	movs	r3, #0
 8002054:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8002058:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 800205c:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002060:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8002064:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8002068:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800206c:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800206e:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8002072:	4601      	mov	r1, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002074:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
 8002078:	3901      	subs	r1, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800207a:	f8c2 5274 	str.w	r5, [r2, #628]	@ 0x274
      } while (ways-- != 0U);
 800207e:	d2f9      	bcs.n	8002074 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>
    } while(sets-- != 0U);
 8002080:	3b20      	subs	r3, #32
 8002082:	f113 0f20 	cmn.w	r3, #32
 8002086:	d1f2      	bne.n	800206e <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x26>
 8002088:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800208c:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
 8002090:	bd70      	pop	{r4, r5, r6, pc}
 8002092:	bf00      	nop
 8002094:	e000ed00 	.word	0xe000ed00

08002098 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002098:	b570      	push	{r4, r5, r6, lr}
 800209a:	4604      	mov	r4, r0
    HAL::initialize();
 800209c:	f008 fd55 	bl	800ab4a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80020a0:	6823      	ldr	r3, [r4, #0]
 80020a2:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 80020a4:	f00b ffac 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
 80020a8:	4601      	mov	r1, r0
 80020aa:	4620      	mov	r0, r4
 80020ac:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80020ae:	6823      	ldr	r3, [r4, #0]
 80020b0:	4a05      	ldr	r2, [pc, #20]	@ (80020c8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80020b2:	4620      	mov	r0, r4
 80020b4:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 80020b8:	2300      	movs	r3, #0
 80020ba:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
 80020be:	46ac      	mov	ip, r5
}
 80020c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80020c4:	4760      	bx	ip
 80020c6:	bf00      	nop
 80020c8:	c007f800 	.word	0xc007f800

080020cc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80020cc:	f008 bd24 	b.w	800ab18 <_ZN8touchgfx3HAL10beginFrameEv>

080020d0 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 80020d0:	f008 bd2e 	b.w	800ab30 <_ZN8touchgfx3HAL8endFrameEv>

080020d4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
    HAL::flushFrameBuffer(rect);
 80020d4:	f008 bcea 	b.w	800aaac <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080020d8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
    return HAL::blockCopy(dest, src, numBytes);
 80020d8:	f008 be59 	b.w	800ad8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080020dc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020dc:	4b03      	ldr	r3, [pc, #12]	@ (80020ec <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80020de:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80020e2:	609a      	str	r2, [r3, #8]
 80020e4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80020e8:	609a      	str	r2, [r3, #8]
}
 80020ea:	4770      	bx	lr
 80020ec:	e000e100 	.word	0xe000e100

080020f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020f0:	4b08      	ldr	r3, [pc, #32]	@ (8002114 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80020f2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80020f6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80020fa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80020fe:	f3bf 8f6f 	isb	sy
 8002102:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002106:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800210a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800210e:	f3bf 8f6f 	isb	sy
}
 8002112:	4770      	bx	lr
 8002114:	e000e100 	.word	0xe000e100

08002118 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002118:	b510      	push	{r4, lr}
        return instance;
 800211a:	4c14      	ldr	r4, [pc, #80]	@ (800216c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 800211c:	6823      	ldr	r3, [r4, #0]
 800211e:	b323      	cbz	r3, 800216a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002120:	4b13      	ldr	r3, [pc, #76]	@ (8002170 <HAL_LTDC_LineEventCallback+0x58>)
 8002122:	4a14      	ldr	r2, [pc, #80]	@ (8002174 <HAL_LTDC_LineEventCallback+0x5c>)
 8002124:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002126:	8811      	ldrh	r1, [r2, #0]
 8002128:	428b      	cmp	r3, r1
 800212a:	d113      	bne.n	8002154 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800212c:	4b12      	ldr	r3, [pc, #72]	@ (8002178 <HAL_LTDC_LineEventCallback+0x60>)
 800212e:	8819      	ldrh	r1, [r3, #0]
 8002130:	f003 fec4 	bl	8005ebc <HAL_LTDC_ProgramLineEvent>
 8002134:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002136:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 800213a:	3301      	adds	r3, #1
 800213c:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002140:	f7ff fc2a 	bl	8001998 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002144:	6820      	ldr	r0, [r4, #0]
 8002146:	f009 fa4d 	bl	800b5e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800214a:	2000      	movs	r0, #0

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800214c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002150:	f7ff ba28 	b.w	80015a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002154:	f003 feb2 	bl	8005ebc <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002158:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800215a:	6803      	ldr	r3, [r0, #0]
 800215c:	6a1b      	ldr	r3, [r3, #32]
 800215e:	4798      	blx	r3
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002160:	2000      	movs	r0, #0
    }
 8002162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002166:	f7ff ba4d 	b.w	8001604 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800216a:	bd10      	pop	{r4, pc}
 800216c:	200150c0 	.word	0x200150c0
 8002170:	40016800 	.word	0x40016800
 8002174:	20001c5a 	.word	0x20001c5a
 8002178:	20001c58 	.word	0x20001c58

0800217c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId T___SINGLEUSE_JOGG = 1; // verdana_18_4bpp
    static const touchgfx::FontId LARGE = 2;              // verdana_40_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800217c:	4770      	bx	lr

0800217e <_ZN23ApplicationFontProviderD0Ev>:
 800217e:	b510      	push	{r4, lr}
 8002180:	4604      	mov	r4, r0
 8002182:	2104      	movs	r1, #4
 8002184:	f01c fbeb 	bl	801e95e <_ZdlPvj>
 8002188:	4620      	mov	r0, r4
 800218a:	bd10      	pop	{r4, pc}

0800218c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 800218c:	2901      	cmp	r1, #1
{
 800218e:	b508      	push	{r3, lr}
    switch (typography)
 8002190:	d006      	beq.n	80021a0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002192:	2902      	cmp	r1, #2
 8002194:	d008      	beq.n	80021a8 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002196:	b959      	cbnz	r1, 80021b0 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::LABELS:
        // NotoSans_Regular_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002198:	f001 f840 	bl	800321c <_ZN17TypedTextDatabase8getFontsEv>
 800219c:	6800      	ldr	r0, [r0, #0]
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800219e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80021a0:	f001 f83c 	bl	800321c <_ZN17TypedTextDatabase8getFontsEv>
 80021a4:	6840      	ldr	r0, [r0, #4]
 80021a6:	e7fa      	b.n	800219e <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80021a8:	f001 f838 	bl	800321c <_ZN17TypedTextDatabase8getFontsEv>
 80021ac:	6880      	ldr	r0, [r0, #8]
 80021ae:	e7f6      	b.n	800219e <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 80021b0:	2000      	movs	r0, #0
 80021b2:	e7f4      	b.n	800219e <_ZN23ApplicationFontProvider7getFontEt+0x12>

080021b4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80021b4:	4800      	ldr	r0, [pc, #0]	@ (80021b8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80021b6:	4770      	bx	lr
 80021b8:	08020180 	.word	0x08020180

080021bc <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80021bc:	200c      	movs	r0, #12
 80021be:	4770      	bx	lr

080021c0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80021c0:	b513      	push	{r0, r1, r4, lr}
 80021c2:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80021c4:	b151      	cbz	r1, 80021dc <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021c6:	6803      	ldr	r3, [r0, #0]
 80021c8:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
 80021ca:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80021cc:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021d0:	689c      	ldr	r4, [r3, #8]
 80021d2:	f10d 0303 	add.w	r3, sp, #3
 80021d6:	47a0      	blx	r4
        return glyph;
    }
 80021d8:	b002      	add	sp, #8
 80021da:	bd10      	pop	{r4, pc}
            return 0;
 80021dc:	4608      	mov	r0, r1
 80021de:	e7fb      	b.n	80021d8 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080021e0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80021e0:	89c0      	ldrh	r0, [r0, #14]
 80021e2:	4770      	bx	lr

080021e4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80021e4:	8a00      	ldrh	r0, [r0, #16]
 80021e6:	4770      	bx	lr

080021e8 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80021e8:	88c0      	ldrh	r0, [r0, #6]
 80021ea:	4770      	bx	lr

080021ec <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80021ec:	8880      	ldrh	r0, [r0, #4]
 80021ee:	4770      	bx	lr

080021f0 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80021f0:	7a80      	ldrb	r0, [r0, #10]
    }
 80021f2:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 80021f6:	4770      	bx	lr

080021f8 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80021f8:	7a80      	ldrb	r0, [r0, #10]
    }
 80021fa:	09c0      	lsrs	r0, r0, #7
 80021fc:	4770      	bx	lr

080021fe <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 80021fe:	2000      	movs	r0, #0
 8002200:	4770      	bx	lr
	...

08002204 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002204:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 800220c <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002208:	4770      	bx	lr
 800220a:	bf00      	nop
 800220c:	00000000 	.word	0x00000000

08002210 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002210:	2000      	movs	r0, #0
 8002212:	4770      	bx	lr

08002214 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002214:	8081      	strh	r1, [r0, #4]
    }
 8002216:	4770      	bx	lr

08002218 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002218:	80c1      	strh	r1, [r0, #6]
    }
 800221a:	4770      	bx	lr

0800221c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800221c:	8101      	strh	r1, [r0, #8]
    }
 800221e:	4770      	bx	lr

08002220 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002220:	8141      	strh	r1, [r0, #10]
    }
 8002222:	4770      	bx	lr

08002224 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002224:	4770      	bx	lr

08002226 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002226:	4770      	bx	lr

08002228 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002228:	4770      	bx	lr

0800222a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800222a:	4770      	bx	lr

0800222c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800222c:	4770      	bx	lr

0800222e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800222e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002230:	88c4      	ldrh	r4, [r0, #6]
 8002232:	6803      	ldr	r3, [r0, #0]
 8002234:	1b12      	subs	r2, r2, r4
 8002236:	8884      	ldrh	r4, [r0, #4]
 8002238:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800223a:	1b09      	subs	r1, r1, r4
 800223c:	b212      	sxth	r2, r2
    }
 800223e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002242:	b209      	sxth	r1, r1
 8002244:	4718      	bx	r3

08002246 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002246:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800224a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800224c:	f04f 33ff 	mov.w	r3, #4294967295
 8002250:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002252:	6813      	ldr	r3, [r2, #0]
 8002254:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002256:	6010      	str	r0, [r2, #0]
    }
 8002258:	4770      	bx	lr

0800225a <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800225a:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800225c:	4770      	bx	lr

0800225e <_ZN20CustomContainer1BaseD1Ev>:
}

CustomContainer1Base::~CustomContainer1Base()
{

}
 800225e:	4770      	bx	lr

08002260 <_ZN20CustomContainer1Base10initializeEv>:

void CustomContainer1Base::initialize()
{

}
 8002260:	4770      	bx	lr

08002262 <_ZN20CustomContainer1BaseD0Ev>:
CustomContainer1Base::~CustomContainer1Base()
 8002262:	b510      	push	{r4, lr}
 8002264:	4604      	mov	r4, r0
}
 8002266:	2184      	movs	r1, #132	@ 0x84
 8002268:	f01c fb79 	bl	801e95e <_ZdlPvj>
 800226c:	4620      	mov	r0, r4
 800226e:	bd10      	pop	{r4, pc}

08002270 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002270:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002274:	b112      	cbz	r2, 800227c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002276:	6803      	ldr	r3, [r0, #0]
 8002278:	695b      	ldr	r3, [r3, #20]
 800227a:	4718      	bx	r3
    }
 800227c:	4770      	bx	lr

0800227e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800227e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002282:	b11a      	cbz	r2, 800228c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002284:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8002288:	b102      	cbz	r2, 800228c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800228a:	6018      	str	r0, [r3, #0]
        }
    }
 800228c:	4770      	bx	lr

0800228e <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
 800228e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002290:	b570      	push	{r4, r5, r6, lr}
 8002292:	4604      	mov	r4, r0
        setX(x);
 8002294:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8002296:	4615      	mov	r5, r2
        setX(x);
 8002298:	4798      	blx	r3
        setY(y);
 800229a:	6823      	ldr	r3, [r4, #0]
 800229c:	4620      	mov	r0, r4
 800229e:	4629      	mov	r1, r5
 80022a0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 80022a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80022a6:	4718      	bx	r3

080022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 80022a8:	2300      	movs	r3, #0
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 80022aa:	b510      	push	{r4, lr}
 80022ac:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80022b0:	e9c0 3303 	strd	r3, r3, [r0, #12]
          cachedAbsX(0),
 80022b4:	e9c0 3307 	strd	r3, r3, [r0, #28]
          nextSibling(0),
 80022b8:	e9c0 3305 	strd	r3, r3, [r0, #20]
          touchable(false),
 80022bc:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80022c0:	4604      	mov	r4, r0
 80022c2:	8483      	strh	r3, [r0, #36]	@ 0x24
        : Widget(), bitmap(bmp), alpha(255)
 80022c4:	4b05      	ldr	r3, [pc, #20]	@ (80022dc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x34>)
 80022c6:	6003      	str	r3, [r0, #0]
 80022c8:	880b      	ldrh	r3, [r1, #0]
 80022ca:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80022cc:	23ff      	movs	r3, #255	@ 0xff
 80022ce:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
    {
        Image::setBitmap(bmp);
 80022d2:	f00a f844 	bl	800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 80022d6:	4620      	mov	r0, r4
 80022d8:	bd10      	pop	{r4, pc}
 80022da:	bf00      	nop
 80022dc:	0802157c 	.word	0x0802157c

080022e0 <_ZN20CustomContainer1BaseC1Ev>:
 80022e0:	f44f 7380 	mov.w	r3, #256	@ 0x100
CustomContainer1Base::CustomContainer1Base()
 80022e4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80022e8:	4604      	mov	r4, r0
 80022ea:	2500      	movs	r5, #0
 80022ec:	4606      	mov	r6, r0
 80022ee:	8483      	strh	r3, [r0, #36]	@ 0x24
 80022f0:	4b24      	ldr	r3, [pc, #144]	@ (8002384 <_ZN20CustomContainer1BaseC1Ev+0xa4>)
 80022f2:	f104 0758 	add.w	r7, r4, #88	@ 0x58
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80022f6:	f64f 78ff 	movw	r8, #65535	@ 0xffff
          firstChild(0)
 80022fa:	6285      	str	r5, [r0, #40]	@ 0x28
 80022fc:	a901      	add	r1, sp, #4
 80022fe:	f04f 090a 	mov.w	r9, #10
 8002302:	f8ad 8004 	strh.w	r8, [sp, #4]
 8002306:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800230a:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 800230e:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 8002312:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002316:	f846 3b2c 	str.w	r3, [r6], #44
 800231a:	4630      	mov	r0, r6
 800231c:	f7ff ffc4 	bl	80022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002320:	a901      	add	r1, sp, #4
 8002322:	4638      	mov	r0, r7
 8002324:	f8ad 8004 	strh.w	r8, [sp, #4]
 8002328:	f7ff ffbe 	bl	80022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        rect.width = width;
 800232c:	4b16      	ldr	r3, [pc, #88]	@ (8002388 <_ZN20CustomContainer1BaseC1Ev+0xa8>)
    image2.setXY(0, 54);
 800232e:	2236      	movs	r2, #54	@ 0x36
 8002330:	4629      	mov	r1, r5
 8002332:	60a3      	str	r3, [r4, #8]
 8002334:	4630      	mov	r0, r6
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002336:	f04f 0896 	mov.w	r8, #150	@ 0x96
 800233a:	f7ff ffa8 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 800233e:	a901      	add	r1, sp, #4
 8002340:	4630      	mov	r0, r6
 8002342:	f8ad 9004 	strh.w	r9, [sp, #4]
 8002346:	f00a f80a 	bl	800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image2);
 800234a:	4631      	mov	r1, r6
 800234c:	4620      	mov	r0, r4
 800234e:	f884 8054 	strb.w	r8, [r4, #84]	@ 0x54
 8002352:	f008 f911 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, -2);
 8002356:	f06f 0201 	mvn.w	r2, #1
 800235a:	4629      	mov	r1, r5
 800235c:	4638      	mov	r0, r7
 800235e:	f7ff ff96 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 8002362:	a901      	add	r1, sp, #4
 8002364:	4638      	mov	r0, r7
 8002366:	f8ad 9004 	strh.w	r9, [sp, #4]
 800236a:	f009 fff8 	bl	800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image1);
 800236e:	4620      	mov	r0, r4
 8002370:	4639      	mov	r1, r7
 8002372:	f884 8080 	strb.w	r8, [r4, #128]	@ 0x80
 8002376:	f008 f8ff 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800237a:	4620      	mov	r0, r4
 800237c:	b003      	add	sp, #12
 800237e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002382:	bf00      	nop
 8002384:	08020278 	.word	0x08020278
 8002388:	006e0082 	.word	0x006e0082

0800238c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800238c:	4770      	bx	lr

0800238e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800238e:	b510      	push	{r4, lr}
 8002390:	4604      	mov	r4, r0
    }
 8002392:	2108      	movs	r1, #8
 8002394:	f01c fae3 	bl	801e95e <_ZdlPvj>
 8002398:	4620      	mov	r0, r4
 800239a:	bd10      	pop	{r4, pc}

0800239c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 800239c:	4770      	bx	lr

0800239e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800239e:	4770      	bx	lr

080023a0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80023a0:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 80023a4:	6808      	ldr	r0, [r1, #0]
 80023a6:	6849      	ldr	r1, [r1, #4]
 80023a8:	c303      	stmia	r3!, {r0, r1}
    }
 80023aa:	4770      	bx	lr

080023ac <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80023ac:	4770      	bx	lr

080023ae <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80023ae:	4770      	bx	lr

080023b0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80023b0:	6041      	str	r1, [r0, #4]
    }
 80023b2:	4770      	bx	lr

080023b4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80023b4:	4770      	bx	lr
	...

080023b8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80023b8:	4b06      	ldr	r3, [pc, #24]	@ (80023d4 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80023ba:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80023be:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80023c2:	2300      	movs	r3, #0
 80023c4:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80023c8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80023cc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoMainScreenNoTransition();
    }
 80023d0:	4770      	bx	lr
 80023d2:	bf00      	nop
 80023d4:	08002955 	.word	0x08002955

080023d8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80023d8:	2301      	movs	r3, #1
 80023da:	7203      	strb	r3, [r0, #8]
    }
 80023dc:	4770      	bx	lr

080023de <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80023de:	4770      	bx	lr

080023e0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80023e0:	4770      	bx	lr

080023e2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80023e2:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80023e4:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
 80023e6:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80023e8:	68c2      	ldr	r2, [r0, #12]
 80023ea:	689b      	ldr	r3, [r3, #8]
 80023ec:	1054      	asrs	r4, r2, #1
 80023ee:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80023f2:	07d2      	lsls	r2, r2, #31
 80023f4:	bf48      	it	mi
 80023f6:	590a      	ldrmi	r2, [r1, r4]
    }
 80023f8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80023fc:	bf48      	it	mi
 80023fe:	58d3      	ldrmi	r3, [r2, r3]
 8002400:	4718      	bx	r3

08002402 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002402:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002404:	6840      	ldr	r0, [r0, #4]
 8002406:	b130      	cbz	r0, 8002416 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002408:	689a      	ldr	r2, [r3, #8]
 800240a:	b91a      	cbnz	r2, 8002414 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 800240c:	68d8      	ldr	r0, [r3, #12]
 800240e:	f000 0001 	and.w	r0, r0, #1
 8002412:	4770      	bx	lr
 8002414:	2001      	movs	r0, #1
    }
 8002416:	4770      	bx	lr

08002418 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002418:	b510      	push	{r4, lr}
 800241a:	4604      	mov	r4, r0
 800241c:	210c      	movs	r1, #12
 800241e:	f01c fa9e 	bl	801e95e <_ZdlPvj>
 8002422:	4620      	mov	r0, r4
 8002424:	bd10      	pop	{r4, pc}

08002426 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002426:	b510      	push	{r4, lr}
 8002428:	4604      	mov	r4, r0
 800242a:	2110      	movs	r1, #16
 800242c:	f01c fa97 	bl	801e95e <_ZdlPvj>
 8002430:	4620      	mov	r0, r4
 8002432:	bd10      	pop	{r4, pc}

08002434 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002434:	b510      	push	{r4, lr}
 8002436:	4604      	mov	r4, r0
 8002438:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800243c:	f01c fa8f 	bl	801e95e <_ZdlPvj>
 8002440:	4620      	mov	r0, r4
 8002442:	bd10      	pop	{r4, pc}

08002444 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002444:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002446:	f00b fddb 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
 800244a:	6803      	ldr	r3, [r0, #0]
    }
 800244c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002450:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002452:	4718      	bx	r3

08002454 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002454:	b510      	push	{r4, lr}
 8002456:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002458:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 800245c:	b158      	cbz	r0, 8002476 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800245e:	6803      	ldr	r3, [r0, #0]
 8002460:	68db      	ldr	r3, [r3, #12]
 8002462:	4798      	blx	r3
 8002464:	b138      	cbz	r0, 8002476 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002466:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 800246a:	6803      	ldr	r3, [r0, #0]
 800246c:	689b      	ldr	r3, [r3, #8]
 800246e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002470:	2300      	movs	r3, #0
 8002472:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8002476:	bd10      	pop	{r4, pc}

08002478 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002478:	4b04      	ldr	r3, [pc, #16]	@ (800248c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002480:	b10a      	cbz	r2, 8002486 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002482:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8002484:	b900      	cbnz	r0, 8002488 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002486:	6898      	ldr	r0, [r3, #8]
    }
 8002488:	4770      	bx	lr
 800248a:	bf00      	nop
 800248c:	200150c0 	.word	0x200150c0

08002490 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002492:	4604      	mov	r4, r0
 8002494:	4617      	mov	r7, r2
 8002496:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002498:	f00b fe78 	bl	800e18c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 800249c:	4b10      	ldr	r3, [pc, #64]	@ (80024e0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
 800249e:	2500      	movs	r5, #0
        instance = this;
 80024a0:	601c      	str	r4, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024a2:	4629      	mov	r1, r5
      model(m)
 80024a4:	4b0f      	ldr	r3, [pc, #60]	@ (80024e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80024a6:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80024a8:	4b0f      	ldr	r3, [pc, #60]	@ (80024e8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80024aa:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 80024ae:	4b0f      	ldr	r3, [pc, #60]	@ (80024ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80024b0:	6818      	ldr	r0, [r3, #0]
 80024b2:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024b6:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 80024b8:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
 80024bc:	689b      	ldr	r3, [r3, #8]
      model(m)
 80024be:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024c2:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80024c4:	4628      	mov	r0, r5
 80024c6:	f000 fe5d 	bl	8003184 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80024ca:	f7ff ffd5 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 80024ce:	f014 feec 	bl	80172aa <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80024d2:	f7ff ffd1 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 80024d6:	f014 ff63 	bl	80173a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80024da:	4620      	mov	r0, r4
 80024dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80024de:	bf00      	nop
 80024e0:	2001510c 	.word	0x2001510c
 80024e4:	0802088c 	.word	0x0802088c
 80024e8:	08020874 	.word	0x08020874
 80024ec:	200150c0 	.word	0x200150c0

080024f0 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80024f0:	4b06      	ldr	r3, [pc, #24]	@ (800250c <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x1c>)
 80024f2:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80024f6:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80024fa:	2300      	movs	r3, #0
 80024fc:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002500:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002504:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002508:	4770      	bx	lr
 800250a:	bf00      	nop
 800250c:	08002955 	.word	0x08002955

08002510 <_ZN23FrontendApplicationBase28gotosensorScreenNoTransitionEv>:
 8002510:	4b06      	ldr	r3, [pc, #24]	@ (800252c <_ZN23FrontendApplicationBase28gotosensorScreenNoTransitionEv+0x1c>)
 8002512:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002516:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800251a:	2300      	movs	r3, #0
 800251c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// sensor

void FrontendApplicationBase::gotosensorScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotosensorScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002520:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002524:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002528:	4770      	bx	lr
 800252a:	bf00      	nop
 800252c:	08002809 	.word	0x08002809

08002530 <_ZN23FrontendApplicationBase27gotomotorScreenNoTransitionEv>:
 8002530:	4b06      	ldr	r3, [pc, #24]	@ (800254c <_ZN23FrontendApplicationBase27gotomotorScreenNoTransitionEv+0x1c>)
 8002532:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002536:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800253a:	2300      	movs	r3, #0
 800253c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// motor

void FrontendApplicationBase::gotomotorScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotomotorScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002540:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002544:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002548:	4770      	bx	lr
 800254a:	bf00      	nop
 800254c:	080026c1 	.word	0x080026c1

08002550 <_ZN23FrontendApplicationBase28gotoconfigScreenNoTransitionEv>:
 8002550:	4b06      	ldr	r3, [pc, #24]	@ (800256c <_ZN23FrontendApplicationBase28gotoconfigScreenNoTransitionEv+0x1c>)
 8002552:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002556:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800255a:	2300      	movs	r3, #0
 800255c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// config

void FrontendApplicationBase::gotoconfigScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoconfigScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002560:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002564:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002568:	4770      	bx	lr
 800256a:	bf00      	nop
 800256c:	08002579 	.word	0x08002579

08002570 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002570:	6803      	ldr	r3, [r0, #0]
 8002572:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002574:	4718      	bx	r3
	...

08002578 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoconfigScreenNoTransitionImpl()
{
 8002578:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<configView, configPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800257c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002580:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002582:	68b0      	ldr	r0, [r6, #8]
 8002584:	6803      	ldr	r3, [r0, #0]
 8002586:	6a1b      	ldr	r3, [r3, #32]
 8002588:	4798      	blx	r3
 800258a:	28db      	cmp	r0, #219	@ 0xdb
 800258c:	d805      	bhi.n	800259a <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x22>
 800258e:	4b44      	ldr	r3, [pc, #272]	@ (80026a0 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x128>)
 8002590:	21a3      	movs	r1, #163	@ 0xa3
 8002592:	4a44      	ldr	r2, [pc, #272]	@ (80026a4 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002594:	4844      	ldr	r0, [pc, #272]	@ (80026a8 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x130>)
 8002596:	f01c fa11 	bl	801e9bc <__assert_func>
 800259a:	6870      	ldr	r0, [r6, #4]
 800259c:	6803      	ldr	r3, [r0, #0]
 800259e:	6a1b      	ldr	r3, [r3, #32]
 80025a0:	4798      	blx	r3
 80025a2:	280f      	cmp	r0, #15
 80025a4:	d803      	bhi.n	80025ae <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x36>
 80025a6:	4b41      	ldr	r3, [pc, #260]	@ (80026ac <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x134>)
 80025a8:	21a4      	movs	r1, #164	@ 0xa4
 80025aa:	4a3e      	ldr	r2, [pc, #248]	@ (80026a4 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x12c>)
 80025ac:	e7f2      	b.n	8002594 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80025ae:	68f0      	ldr	r0, [r6, #12]
 80025b0:	6803      	ldr	r3, [r0, #0]
 80025b2:	6a1b      	ldr	r3, [r3, #32]
 80025b4:	4798      	blx	r3
 80025b6:	280b      	cmp	r0, #11
 80025b8:	d803      	bhi.n	80025c2 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x4a>
 80025ba:	4b3d      	ldr	r3, [pc, #244]	@ (80026b0 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x138>)
 80025bc:	21a5      	movs	r1, #165	@ 0xa5
 80025be:	4a39      	ldr	r2, [pc, #228]	@ (80026a4 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x12c>)
 80025c0:	e7e8      	b.n	8002594 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x1c>
    if (*currentTrans)
 80025c2:	f8df 90f4 	ldr.w	r9, [pc, #244]	@ 80026b8 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x140>
    Application::getInstance()->clearAllTimerWidgets();
 80025c6:	f00b fd1b 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80025ca:	3004      	adds	r0, #4
 80025cc:	f00b fd3d 	bl	800e04a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 80025d0:	f8d9 0000 	ldr.w	r0, [r9]
 80025d4:	b110      	cbz	r0, 80025dc <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80025d6:	6803      	ldr	r3, [r0, #0]
 80025d8:	68db      	ldr	r3, [r3, #12]
 80025da:	4798      	blx	r3
    if (*currentTrans)
 80025dc:	f8d9 0000 	ldr.w	r0, [r9]
 80025e0:	b110      	cbz	r0, 80025e8 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80025e2:	6803      	ldr	r3, [r0, #0]
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	4798      	blx	r3
    if (*currentScreen)
 80025e8:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80026bc <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x144>
 80025ec:	f8d8 0000 	ldr.w	r0, [r8]
 80025f0:	b110      	cbz	r0, 80025f8 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80025f2:	6803      	ldr	r3, [r0, #0]
 80025f4:	695b      	ldr	r3, [r3, #20]
 80025f6:	4798      	blx	r3
    if (*currentPresenter)
 80025f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80025fc:	b110      	cbz	r0, 8002604 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80025fe:	6803      	ldr	r3, [r0, #0]
 8002600:	685b      	ldr	r3, [r3, #4]
 8002602:	4798      	blx	r3
    if (*currentScreen)
 8002604:	f8d8 0000 	ldr.w	r0, [r8]
 8002608:	b110      	cbz	r0, 8002610 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800260a:	6803      	ldr	r3, [r0, #0]
 800260c:	681b      	ldr	r3, [r3, #0]
 800260e:	4798      	blx	r3
    if (*currentPresenter)
 8002610:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002614:	b110      	cbz	r0, 800261c <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002616:	6803      	ldr	r3, [r0, #0]
 8002618:	689b      	ldr	r3, [r3, #8]
 800261a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800261c:	2100      	movs	r1, #0
 800261e:	68f0      	ldr	r0, [r6, #12]
 8002620:	f7ff ffa6 	bl	8002570 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 8002624:	f04f 0b00 	mov.w	fp, #0
 8002628:	4b22      	ldr	r3, [pc, #136]	@ (80026b4 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x13c>)
 800262a:	4604      	mov	r4, r0
 800262c:	f8c0 b004 	str.w	fp, [r0, #4]
 8002630:	4659      	mov	r1, fp
 8002632:	f880 b008 	strb.w	fp, [r0, #8]
 8002636:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002638:	68b0      	ldr	r0, [r6, #8]
 800263a:	6803      	ldr	r3, [r0, #0]
 800263c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800263e:	4798      	blx	r3
 8002640:	4605      	mov	r5, r0
 8002642:	f001 fe47 	bl	80042d4 <_ZN10configViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002646:	6870      	ldr	r0, [r6, #4]
 8002648:	4659      	mov	r1, fp
 800264a:	6803      	ldr	r3, [r0, #0]
 800264c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800264e:	4798      	blx	r3
 8002650:	4606      	mov	r6, r0
 8002652:	4629      	mov	r1, r5
 8002654:	f001 fe1e 	bl	8004294 <_ZN15configPresenterC1ER10configView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002658:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800265a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 800265e:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 8002660:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002664:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002668:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800266c:	682b      	ldr	r3, [r5, #0]

    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800266e:	f8c6 a008 	str.w	sl, [r6, #8]
 8002672:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002674:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002676:	4798      	blx	r3
    newPresenter->activate();
 8002678:	6833      	ldr	r3, [r6, #0]
 800267a:	4630      	mov	r0, r6
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002680:	4621      	mov	r1, r4
 8002682:	4628      	mov	r0, r5
 8002684:	f00d f988 	bl	800f998 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002688:	6823      	ldr	r3, [r4, #0]
 800268a:	4620      	mov	r0, r4
 800268c:	691b      	ldr	r3, [r3, #16]
 800268e:	4798      	blx	r3
    newTransition->invalidate();
 8002690:	6823      	ldr	r3, [r4, #0]
 8002692:	4620      	mov	r0, r4
 8002694:	695b      	ldr	r3, [r3, #20]
}
 8002696:	b001      	add	sp, #4
 8002698:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800269c:	4718      	bx	r3
 800269e:	bf00      	nop
 80026a0:	08020314 	.word	0x08020314
 80026a4:	080203a2 	.word	0x080203a2
 80026a8:	08020472 	.word	0x08020472
 80026ac:	080204b9 	.word	0x080204b9
 80026b0:	0802055c 	.word	0x0802055c
 80026b4:	080208e0 	.word	0x080208e0
 80026b8:	20015100 	.word	0x20015100
 80026bc:	200150fc 	.word	0x200150fc

080026c0 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv>:
{
 80026c0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<motorView, motorPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80026c4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80026c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80026ca:	68b0      	ldr	r0, [r6, #8]
 80026cc:	6803      	ldr	r3, [r0, #0]
 80026ce:	6a1b      	ldr	r3, [r3, #32]
 80026d0:	4798      	blx	r3
 80026d2:	f5b0 7f38 	cmp.w	r0, #736	@ 0x2e0
 80026d6:	d205      	bcs.n	80026e4 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x24>
 80026d8:	4b43      	ldr	r3, [pc, #268]	@ (80027e8 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x128>)
 80026da:	21a3      	movs	r1, #163	@ 0xa3
 80026dc:	4a43      	ldr	r2, [pc, #268]	@ (80027ec <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80026de:	4844      	ldr	r0, [pc, #272]	@ (80027f0 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x130>)
 80026e0:	f01c f96c 	bl	801e9bc <__assert_func>
 80026e4:	6870      	ldr	r0, [r6, #4]
 80026e6:	6803      	ldr	r3, [r0, #0]
 80026e8:	6a1b      	ldr	r3, [r3, #32]
 80026ea:	4798      	blx	r3
 80026ec:	280f      	cmp	r0, #15
 80026ee:	d803      	bhi.n	80026f8 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x38>
 80026f0:	4b40      	ldr	r3, [pc, #256]	@ (80027f4 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x134>)
 80026f2:	21a4      	movs	r1, #164	@ 0xa4
 80026f4:	4a3d      	ldr	r2, [pc, #244]	@ (80027ec <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x12c>)
 80026f6:	e7f2      	b.n	80026de <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80026f8:	68f0      	ldr	r0, [r6, #12]
 80026fa:	6803      	ldr	r3, [r0, #0]
 80026fc:	6a1b      	ldr	r3, [r3, #32]
 80026fe:	4798      	blx	r3
 8002700:	280b      	cmp	r0, #11
 8002702:	d803      	bhi.n	800270c <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x4c>
 8002704:	4b3c      	ldr	r3, [pc, #240]	@ (80027f8 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x138>)
 8002706:	21a5      	movs	r1, #165	@ 0xa5
 8002708:	4a38      	ldr	r2, [pc, #224]	@ (80027ec <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x12c>)
 800270a:	e7e8      	b.n	80026de <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 800270c:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002800 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x140>
    Application::getInstance()->clearAllTimerWidgets();
 8002710:	f00b fc76 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
 8002714:	3004      	adds	r0, #4
 8002716:	f00b fc98 	bl	800e04a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 800271a:	f8d9 0000 	ldr.w	r0, [r9]
 800271e:	b110      	cbz	r0, 8002726 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002720:	6803      	ldr	r3, [r0, #0]
 8002722:	68db      	ldr	r3, [r3, #12]
 8002724:	4798      	blx	r3
    if (*currentTrans)
 8002726:	f8d9 0000 	ldr.w	r0, [r9]
 800272a:	b110      	cbz	r0, 8002732 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 800272c:	6803      	ldr	r3, [r0, #0]
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	4798      	blx	r3
    if (*currentScreen)
 8002732:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002804 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x144>
 8002736:	f8d8 0000 	ldr.w	r0, [r8]
 800273a:	b110      	cbz	r0, 8002742 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800273c:	6803      	ldr	r3, [r0, #0]
 800273e:	695b      	ldr	r3, [r3, #20]
 8002740:	4798      	blx	r3
    if (*currentPresenter)
 8002742:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002746:	b110      	cbz	r0, 800274e <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002748:	6803      	ldr	r3, [r0, #0]
 800274a:	685b      	ldr	r3, [r3, #4]
 800274c:	4798      	blx	r3
    if (*currentScreen)
 800274e:	f8d8 0000 	ldr.w	r0, [r8]
 8002752:	b110      	cbz	r0, 800275a <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002754:	6803      	ldr	r3, [r0, #0]
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	4798      	blx	r3
    if (*currentPresenter)
 800275a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800275e:	b110      	cbz	r0, 8002766 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002760:	6803      	ldr	r3, [r0, #0]
 8002762:	689b      	ldr	r3, [r3, #8]
 8002764:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002766:	2100      	movs	r1, #0
 8002768:	68f0      	ldr	r0, [r6, #12]
 800276a:	f7ff ff01 	bl	8002570 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800276e:	f04f 0b00 	mov.w	fp, #0
 8002772:	4b22      	ldr	r3, [pc, #136]	@ (80027fc <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x13c>)
 8002774:	4604      	mov	r4, r0
 8002776:	f8c0 b004 	str.w	fp, [r0, #4]
 800277a:	4659      	mov	r1, fp
 800277c:	f880 b008 	strb.w	fp, [r0, #8]
 8002780:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002782:	68b0      	ldr	r0, [r6, #8]
 8002784:	6803      	ldr	r3, [r0, #0]
 8002786:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002788:	4798      	blx	r3
 800278a:	4605      	mov	r5, r0
 800278c:	f001 fe3a 	bl	8004404 <_ZN9motorViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002790:	6870      	ldr	r0, [r6, #4]
 8002792:	4659      	mov	r1, fp
 8002794:	6803      	ldr	r3, [r0, #0]
 8002796:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002798:	4798      	blx	r3
 800279a:	4606      	mov	r6, r0
 800279c:	4629      	mov	r1, r5
 800279e:	f001 fdc5 	bl	800432c <_ZN14motorPresenterC1ER9motorView>
    model->bind(newPresenter);
 80027a2:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80027a4:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 80027a8:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 80027aa:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80027ae:	f8c8 5000 	str.w	r5, [r8]
 80027b2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80027b6:	682b      	ldr	r3, [r5, #0]
 80027b8:	f8c6 a008 	str.w	sl, [r6, #8]
 80027bc:	68db      	ldr	r3, [r3, #12]
 80027be:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80027c0:	4798      	blx	r3
    newPresenter->activate();
 80027c2:	6833      	ldr	r3, [r6, #0]
 80027c4:	4630      	mov	r0, r6
 80027c6:	681b      	ldr	r3, [r3, #0]
 80027c8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80027ca:	4621      	mov	r1, r4
 80027cc:	4628      	mov	r0, r5
 80027ce:	f00d f8e3 	bl	800f998 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80027d2:	6823      	ldr	r3, [r4, #0]
 80027d4:	4620      	mov	r0, r4
 80027d6:	691b      	ldr	r3, [r3, #16]
 80027d8:	4798      	blx	r3
    newTransition->invalidate();
 80027da:	6823      	ldr	r3, [r4, #0]
 80027dc:	4620      	mov	r0, r4
 80027de:	695b      	ldr	r3, [r3, #20]
}
 80027e0:	b001      	add	sp, #4
 80027e2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027e6:	4718      	bx	r3
 80027e8:	08020314 	.word	0x08020314
 80027ec:	080205ff 	.word	0x080205ff
 80027f0:	08020472 	.word	0x08020472
 80027f4:	080204b9 	.word	0x080204b9
 80027f8:	0802055c 	.word	0x0802055c
 80027fc:	080208e0 	.word	0x080208e0
 8002800:	20015100 	.word	0x20015100
 8002804:	200150fc 	.word	0x200150fc

08002808 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv>:
{
 8002808:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<sensorView, sensorPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800280c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002810:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002812:	68b0      	ldr	r0, [r6, #8]
 8002814:	6803      	ldr	r3, [r0, #0]
 8002816:	6a1b      	ldr	r3, [r3, #32]
 8002818:	4798      	blx	r3
 800281a:	f240 63bb 	movw	r3, #1723	@ 0x6bb
 800281e:	4298      	cmp	r0, r3
 8002820:	d805      	bhi.n	800282e <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x26>
 8002822:	4b44      	ldr	r3, [pc, #272]	@ (8002934 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x12c>)
 8002824:	21a3      	movs	r1, #163	@ 0xa3
 8002826:	4a44      	ldr	r2, [pc, #272]	@ (8002938 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x130>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002828:	4844      	ldr	r0, [pc, #272]	@ (800293c <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x134>)
 800282a:	f01c f8c7 	bl	801e9bc <__assert_func>
 800282e:	6870      	ldr	r0, [r6, #4]
 8002830:	6803      	ldr	r3, [r0, #0]
 8002832:	6a1b      	ldr	r3, [r3, #32]
 8002834:	4798      	blx	r3
 8002836:	280f      	cmp	r0, #15
 8002838:	d803      	bhi.n	8002842 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x3a>
 800283a:	4b41      	ldr	r3, [pc, #260]	@ (8002940 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x138>)
 800283c:	21a4      	movs	r1, #164	@ 0xa4
 800283e:	4a3e      	ldr	r2, [pc, #248]	@ (8002938 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x130>)
 8002840:	e7f2      	b.n	8002828 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002842:	68f0      	ldr	r0, [r6, #12]
 8002844:	6803      	ldr	r3, [r0, #0]
 8002846:	6a1b      	ldr	r3, [r3, #32]
 8002848:	4798      	blx	r3
 800284a:	280b      	cmp	r0, #11
 800284c:	d803      	bhi.n	8002856 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x4e>
 800284e:	4b3d      	ldr	r3, [pc, #244]	@ (8002944 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x13c>)
 8002850:	21a5      	movs	r1, #165	@ 0xa5
 8002852:	4a39      	ldr	r2, [pc, #228]	@ (8002938 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x130>)
 8002854:	e7e8      	b.n	8002828 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x20>
    if (*currentTrans)
 8002856:	f8df 90f4 	ldr.w	r9, [pc, #244]	@ 800294c <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 800285a:	f00b fbd1 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
 800285e:	3004      	adds	r0, #4
 8002860:	f00b fbf3 	bl	800e04a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 8002864:	f8d9 0000 	ldr.w	r0, [r9]
 8002868:	b110      	cbz	r0, 8002870 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800286a:	6803      	ldr	r3, [r0, #0]
 800286c:	68db      	ldr	r3, [r3, #12]
 800286e:	4798      	blx	r3
    if (*currentTrans)
 8002870:	f8d9 0000 	ldr.w	r0, [r9]
 8002874:	b110      	cbz	r0, 800287c <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002876:	6803      	ldr	r3, [r0, #0]
 8002878:	681b      	ldr	r3, [r3, #0]
 800287a:	4798      	blx	r3
    if (*currentScreen)
 800287c:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002950 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x148>
 8002880:	f8d8 0000 	ldr.w	r0, [r8]
 8002884:	b110      	cbz	r0, 800288c <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002886:	6803      	ldr	r3, [r0, #0]
 8002888:	695b      	ldr	r3, [r3, #20]
 800288a:	4798      	blx	r3
    if (*currentPresenter)
 800288c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002890:	b110      	cbz	r0, 8002898 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002892:	6803      	ldr	r3, [r0, #0]
 8002894:	685b      	ldr	r3, [r3, #4]
 8002896:	4798      	blx	r3
    if (*currentScreen)
 8002898:	f8d8 0000 	ldr.w	r0, [r8]
 800289c:	b110      	cbz	r0, 80028a4 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800289e:	6803      	ldr	r3, [r0, #0]
 80028a0:	681b      	ldr	r3, [r3, #0]
 80028a2:	4798      	blx	r3
    if (*currentPresenter)
 80028a4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80028a8:	b110      	cbz	r0, 80028b0 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80028aa:	6803      	ldr	r3, [r0, #0]
 80028ac:	689b      	ldr	r3, [r3, #8]
 80028ae:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80028b0:	2100      	movs	r1, #0
 80028b2:	68f0      	ldr	r0, [r6, #12]
 80028b4:	f7ff fe5c 	bl	8002570 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80028b8:	f04f 0b00 	mov.w	fp, #0
 80028bc:	4b22      	ldr	r3, [pc, #136]	@ (8002948 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x140>)
 80028be:	4604      	mov	r4, r0
 80028c0:	f8c0 b004 	str.w	fp, [r0, #4]
 80028c4:	4659      	mov	r1, fp
 80028c6:	f880 b008 	strb.w	fp, [r0, #8]
 80028ca:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80028cc:	68b0      	ldr	r0, [r6, #8]
 80028ce:	6803      	ldr	r3, [r0, #0]
 80028d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028d2:	4798      	blx	r3
 80028d4:	4605      	mov	r5, r0
 80028d6:	f001 fe5d 	bl	8004594 <_ZN10sensorViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80028da:	6870      	ldr	r0, [r6, #4]
 80028dc:	4659      	mov	r1, fp
 80028de:	6803      	ldr	r3, [r0, #0]
 80028e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028e2:	4798      	blx	r3
 80028e4:	4606      	mov	r6, r0
 80028e6:	4629      	mov	r1, r5
 80028e8:	f001 fe2a 	bl	8004540 <_ZN15sensorPresenterC1ER10sensorView>
    model->bind(newPresenter);
 80028ec:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80028ee:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 80028f2:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 80028f4:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80028f8:	f8c8 5000 	str.w	r5, [r8]
 80028fc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002900:	682b      	ldr	r3, [r5, #0]
 8002902:	f8c6 a008 	str.w	sl, [r6, #8]
 8002906:	68db      	ldr	r3, [r3, #12]
 8002908:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800290a:	4798      	blx	r3
    newPresenter->activate();
 800290c:	6833      	ldr	r3, [r6, #0]
 800290e:	4630      	mov	r0, r6
 8002910:	681b      	ldr	r3, [r3, #0]
 8002912:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002914:	4621      	mov	r1, r4
 8002916:	4628      	mov	r0, r5
 8002918:	f00d f83e 	bl	800f998 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800291c:	6823      	ldr	r3, [r4, #0]
 800291e:	4620      	mov	r0, r4
 8002920:	691b      	ldr	r3, [r3, #16]
 8002922:	4798      	blx	r3
    newTransition->invalidate();
 8002924:	6823      	ldr	r3, [r4, #0]
 8002926:	4620      	mov	r0, r4
 8002928:	695b      	ldr	r3, [r3, #20]
}
 800292a:	b001      	add	sp, #4
 800292c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002930:	4718      	bx	r3
 8002932:	bf00      	nop
 8002934:	08020314 	.word	0x08020314
 8002938:	080206cd 	.word	0x080206cd
 800293c:	08020472 	.word	0x08020472
 8002940:	080204b9 	.word	0x080204b9
 8002944:	0802055c 	.word	0x0802055c
 8002948:	080208e0 	.word	0x080208e0
 800294c:	20015100 	.word	0x20015100
 8002950:	200150fc 	.word	0x200150fc

08002954 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:
{
 8002954:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002958:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800295c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800295e:	68b0      	ldr	r0, [r6, #8]
 8002960:	6803      	ldr	r3, [r0, #0]
 8002962:	6a1b      	ldr	r3, [r3, #32]
 8002964:	4798      	blx	r3
 8002966:	f5b0 7fdc 	cmp.w	r0, #440	@ 0x1b8
 800296a:	d205      	bcs.n	8002978 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x24>
 800296c:	4b43      	ldr	r3, [pc, #268]	@ (8002a7c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x128>)
 800296e:	21a3      	movs	r1, #163	@ 0xa3
 8002970:	4a43      	ldr	r2, [pc, #268]	@ (8002a80 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002972:	4844      	ldr	r0, [pc, #272]	@ (8002a84 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
 8002974:	f01c f822 	bl	801e9bc <__assert_func>
 8002978:	6870      	ldr	r0, [r6, #4]
 800297a:	6803      	ldr	r3, [r0, #0]
 800297c:	6a1b      	ldr	r3, [r3, #32]
 800297e:	4798      	blx	r3
 8002980:	280f      	cmp	r0, #15
 8002982:	d803      	bhi.n	800298c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x38>
 8002984:	4b40      	ldr	r3, [pc, #256]	@ (8002a88 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x134>)
 8002986:	21a4      	movs	r1, #164	@ 0xa4
 8002988:	4a3d      	ldr	r2, [pc, #244]	@ (8002a80 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
 800298a:	e7f2      	b.n	8002972 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800298c:	68f0      	ldr	r0, [r6, #12]
 800298e:	6803      	ldr	r3, [r0, #0]
 8002990:	6a1b      	ldr	r3, [r3, #32]
 8002992:	4798      	blx	r3
 8002994:	280b      	cmp	r0, #11
 8002996:	d803      	bhi.n	80029a0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x4c>
 8002998:	4b3c      	ldr	r3, [pc, #240]	@ (8002a8c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>)
 800299a:	21a5      	movs	r1, #165	@ 0xa5
 800299c:	4a38      	ldr	r2, [pc, #224]	@ (8002a80 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
 800299e:	e7e8      	b.n	8002972 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80029a0:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002a94 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x140>
    Application::getInstance()->clearAllTimerWidgets();
 80029a4:	f00b fb2c 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
 80029a8:	3004      	adds	r0, #4
 80029aa:	f00b fb4e 	bl	800e04a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 80029ae:	f8d9 0000 	ldr.w	r0, [r9]
 80029b2:	b110      	cbz	r0, 80029ba <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80029b4:	6803      	ldr	r3, [r0, #0]
 80029b6:	68db      	ldr	r3, [r3, #12]
 80029b8:	4798      	blx	r3
    if (*currentTrans)
 80029ba:	f8d9 0000 	ldr.w	r0, [r9]
 80029be:	b110      	cbz	r0, 80029c6 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80029c0:	6803      	ldr	r3, [r0, #0]
 80029c2:	681b      	ldr	r3, [r3, #0]
 80029c4:	4798      	blx	r3
    if (*currentScreen)
 80029c6:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002a98 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x144>
 80029ca:	f8d8 0000 	ldr.w	r0, [r8]
 80029ce:	b110      	cbz	r0, 80029d6 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80029d0:	6803      	ldr	r3, [r0, #0]
 80029d2:	695b      	ldr	r3, [r3, #20]
 80029d4:	4798      	blx	r3
    if (*currentPresenter)
 80029d6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80029da:	b110      	cbz	r0, 80029e2 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80029dc:	6803      	ldr	r3, [r0, #0]
 80029de:	685b      	ldr	r3, [r3, #4]
 80029e0:	4798      	blx	r3
    if (*currentScreen)
 80029e2:	f8d8 0000 	ldr.w	r0, [r8]
 80029e6:	b110      	cbz	r0, 80029ee <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80029e8:	6803      	ldr	r3, [r0, #0]
 80029ea:	681b      	ldr	r3, [r3, #0]
 80029ec:	4798      	blx	r3
    if (*currentPresenter)
 80029ee:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80029f2:	b110      	cbz	r0, 80029fa <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80029f4:	6803      	ldr	r3, [r0, #0]
 80029f6:	689b      	ldr	r3, [r3, #8]
 80029f8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80029fa:	2100      	movs	r1, #0
 80029fc:	68f0      	ldr	r0, [r6, #12]
 80029fe:	f7ff fdb7 	bl	8002570 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8002a02:	f04f 0b00 	mov.w	fp, #0
 8002a06:	4b22      	ldr	r3, [pc, #136]	@ (8002a90 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x13c>)
 8002a08:	4604      	mov	r4, r0
 8002a0a:	f8c0 b004 	str.w	fp, [r0, #4]
 8002a0e:	4659      	mov	r1, fp
 8002a10:	f880 b008 	strb.w	fp, [r0, #8]
 8002a14:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002a16:	68b0      	ldr	r0, [r6, #8]
 8002a18:	6803      	ldr	r3, [r0, #0]
 8002a1a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a1c:	4798      	blx	r3
 8002a1e:	4605      	mov	r5, r0
 8002a20:	f001 fc0a 	bl	8004238 <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002a24:	6870      	ldr	r0, [r6, #4]
 8002a26:	4659      	mov	r1, fp
 8002a28:	6803      	ldr	r3, [r0, #0]
 8002a2a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a2c:	4798      	blx	r3
 8002a2e:	4606      	mov	r6, r0
 8002a30:	4629      	mov	r1, r5
 8002a32:	f001 fbd7 	bl	80041e4 <_ZN13MainPresenterC1ER8MainView>
    model->bind(newPresenter);
 8002a36:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002a38:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 8002a3c:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 8002a3e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002a42:	f8c8 5000 	str.w	r5, [r8]
 8002a46:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002a4a:	682b      	ldr	r3, [r5, #0]
 8002a4c:	f8c6 a008 	str.w	sl, [r6, #8]
 8002a50:	68db      	ldr	r3, [r3, #12]
 8002a52:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002a54:	4798      	blx	r3
    newPresenter->activate();
 8002a56:	6833      	ldr	r3, [r6, #0]
 8002a58:	4630      	mov	r0, r6
 8002a5a:	681b      	ldr	r3, [r3, #0]
 8002a5c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002a5e:	4621      	mov	r1, r4
 8002a60:	4628      	mov	r0, r5
 8002a62:	f00c ff99 	bl	800f998 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002a66:	6823      	ldr	r3, [r4, #0]
 8002a68:	4620      	mov	r0, r4
 8002a6a:	691b      	ldr	r3, [r3, #16]
 8002a6c:	4798      	blx	r3
    newTransition->invalidate();
 8002a6e:	6823      	ldr	r3, [r4, #0]
 8002a70:	4620      	mov	r0, r4
 8002a72:	695b      	ldr	r3, [r3, #20]
}
 8002a74:	b001      	add	sp, #4
 8002a76:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a7a:	4718      	bx	r3
 8002a7c:	08020314 	.word	0x08020314
 8002a80:	0802079d 	.word	0x0802079d
 8002a84:	08020472 	.word	0x08020472
 8002a88:	080204b9 	.word	0x080204b9
 8002a8c:	0802055c 	.word	0x0802055c
 8002a90:	080208e0 	.word	0x080208e0
 8002a94:	20015100 	.word	0x20015100
 8002a98:	200150fc 	.word	0x200150fc

08002a9c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002a9c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002a9e:	4770      	bx	lr

08002aa0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002aa0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002aa2:	4770      	bx	lr

08002aa4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002aa4:	4770      	bx	lr

08002aa6 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002aa6:	888b      	ldrh	r3, [r1, #4]
 8002aa8:	69c0      	ldr	r0, [r0, #28]
 8002aaa:	0adb      	lsrs	r3, r3, #11
 8002aac:	680a      	ldr	r2, [r1, #0]
 8002aae:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002ab2:	4410      	add	r0, r2
 8002ab4:	4770      	bx	lr

08002ab6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002ab6:	b510      	push	{r4, lr}
 8002ab8:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8002aba:	b1ba      	cbz	r2, 8002aec <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002abc:	7b10      	ldrb	r0, [r2, #12]
 8002abe:	b168      	cbz	r0, 8002adc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002ac0:	7b53      	ldrb	r3, [r2, #13]
 8002ac2:	7ad2      	ldrb	r2, [r2, #11]
 8002ac4:	021b      	lsls	r3, r3, #8
 8002ac6:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002aca:	431a      	orrs	r2, r3
 8002acc:	6a23      	ldr	r3, [r4, #32]
 8002ace:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002ad2:	881a      	ldrh	r2, [r3, #0]
 8002ad4:	428a      	cmp	r2, r1
 8002ad6:	d102      	bne.n	8002ade <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002ad8:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8002adc:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002ade:	d805      	bhi.n	8002aec <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002ae0:	3801      	subs	r0, #1
 8002ae2:	3304      	adds	r3, #4
 8002ae4:	b280      	uxth	r0, r0
 8002ae6:	2800      	cmp	r0, #0
 8002ae8:	d1f3      	bne.n	8002ad2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002aea:	e7f7      	b.n	8002adc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002aec:	2000      	movs	r0, #0
 8002aee:	e7f5      	b.n	8002adc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002af0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002af0:	b510      	push	{r4, lr}
 8002af2:	4604      	mov	r4, r0
 8002af4:	212c      	movs	r1, #44	@ 0x2c
 8002af6:	f01b ff32 	bl	801e95e <_ZdlPvj>
 8002afa:	4620      	mov	r0, r4
 8002afc:	bd10      	pop	{r4, pc}
	...

08002b00 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002b00:	b530      	push	{r4, r5, lr}
 8002b02:	b08b      	sub	sp, #44	@ 0x2c
 8002b04:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002b06:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8002b0a:	9508      	str	r5, [sp, #32]
 8002b0c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8002b10:	9507      	str	r5, [sp, #28]
 8002b12:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8002b16:	9506      	str	r5, [sp, #24]
 8002b18:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8002b1c:	9505      	str	r5, [sp, #20]
 8002b1e:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8002b22:	9504      	str	r5, [sp, #16]
 8002b24:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8002b28:	9503      	str	r5, [sp, #12]
 8002b2a:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8002b2e:	9502      	str	r5, [sp, #8]
 8002b30:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8002b34:	9501      	str	r5, [sp, #4]
 8002b36:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8002b3a:	9500      	str	r5, [sp, #0]
 8002b3c:	f00c fb86 	bl	800f24c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8002b40:	4b06      	ldr	r3, [pc, #24]	@ (8002b5c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
}
 8002b42:	4620      	mov	r0, r4
      arabicTable(formsTable)
 8002b44:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002b46:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002b48:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002b4a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002b4c:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8002b4e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002b50:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8002b52:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8002b54:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8002b56:	b00b      	add	sp, #44	@ 0x2c
 8002b58:	bd30      	pop	{r4, r5, pc}
 8002b5a:	bf00      	nop
 8002b5c:	08020904 	.word	0x08020904

08002b60 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002b60:	4770      	bx	lr

08002b62 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002b62:	4770      	bx	lr

08002b64 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002b64:	4770      	bx	lr

08002b66 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002b66:	4770      	bx	lr

08002b68 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002b68:	4770      	bx	lr

08002b6a <_ZN12MainViewBaseD1Ev>:
}

MainViewBase::~MainViewBase()
{

}
 8002b6a:	4770      	bx	lr

08002b6c <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{

}
 8002b6c:	4770      	bx	lr

08002b6e <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002b6e:	4770      	bx	lr

08002b70 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002b70:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b72:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 8002b74:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002b76:	68c2      	ldr	r2, [r0, #12]
 8002b78:	689b      	ldr	r3, [r3, #8]
 8002b7a:	1055      	asrs	r5, r2, #1
 8002b7c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002b80:	07d2      	lsls	r2, r2, #31
 8002b82:	bf48      	it	mi
 8002b84:	5962      	ldrmi	r2, [r4, r5]
    }
 8002b86:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b88:	bf48      	it	mi
 8002b8a:	58d3      	ldrmi	r3, [r2, r3]
 8002b8c:	4718      	bx	r3

08002b8e <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8002b8e:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8002b90:	6840      	ldr	r0, [r0, #4]
 8002b92:	b130      	cbz	r0, 8002ba2 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002b94:	689a      	ldr	r2, [r3, #8]
 8002b96:	b91a      	cbnz	r2, 8002ba0 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8002b98:	68d8      	ldr	r0, [r3, #12]
 8002b9a:	f000 0001 	and.w	r0, r0, #1
 8002b9e:	4770      	bx	lr
 8002ba0:	2001      	movs	r0, #1
    }
 8002ba2:	4770      	bx	lr

08002ba4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ba4:	b510      	push	{r4, lr}
 8002ba6:	4604      	mov	r4, r0
 8002ba8:	2110      	movs	r1, #16
 8002baa:	f01b fed8 	bl	801e95e <_ZdlPvj>
 8002bae:	4620      	mov	r0, r4
 8002bb0:	bd10      	pop	{r4, pc}

08002bb2 <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 8002bb2:	b510      	push	{r4, lr}
 8002bb4:	4604      	mov	r4, r0
}
 8002bb6:	f44f 71da 	mov.w	r1, #436	@ 0x1b4
 8002bba:	f01b fed0 	bl	801e95e <_ZdlPvj>
 8002bbe:	4620      	mov	r0, r4
 8002bc0:	bd10      	pop	{r4, pc}

08002bc2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002bc2:	b538      	push	{r3, r4, r5, lr}
    if (&src == &changescreen_motor_btn)
 8002bc4:	f500 7394 	add.w	r3, r0, #296	@ 0x128
{
 8002bc8:	4604      	mov	r4, r0
 8002bca:	460d      	mov	r5, r1
    if (&src == &changescreen_motor_btn)
 8002bcc:	4299      	cmp	r1, r3
 8002bce:	d103      	bne.n	8002bd8 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MainViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002bd0:	f00b fa16 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //changescreen_motor
        //When changescreen_motor_btn clicked change screen to motor
        //Go to motor with no screen transition
        application().gotomotorScreenNoTransition();
 8002bd4:	f7ff fcac 	bl	8002530 <_ZN23FrontendApplicationBase27gotomotorScreenNoTransitionEv>
    }
    if (&src == &changescreen_sensor_btn)
 8002bd8:	f104 03e0 	add.w	r3, r4, #224	@ 0xe0
 8002bdc:	429d      	cmp	r5, r3
 8002bde:	d103      	bne.n	8002be8 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8002be0:	f00b fa0e 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //changescreen_sensor
        //When changescreen_sensor_btn clicked change screen to sensor
        //Go to sensor with no screen transition
        application().gotosensorScreenNoTransition();
 8002be4:	f7ff fc94 	bl	8002510 <_ZN23FrontendApplicationBase28gotosensorScreenNoTransitionEv>
    }
    if (&src == &config_btn)
 8002be8:	f504 74b8 	add.w	r4, r4, #368	@ 0x170
 8002bec:	42a5      	cmp	r5, r4
 8002bee:	d105      	bne.n	8002bfc <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8002bf0:	f00b fa06 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
        //changescreen_config
        //When config_btn clicked change screen to config
        //Go to config with no screen transition
        application().gotoconfigScreenNoTransition();
    }
}
 8002bf4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoconfigScreenNoTransition();
 8002bf8:	f7ff bcaa 	b.w	8002550 <_ZN23FrontendApplicationBase28gotoconfigScreenNoTransitionEv>
}
 8002bfc:	bd38      	pop	{r3, r4, r5, pc}
	...

08002c00 <_ZN8touchgfx6WidgetC1Ev>:
 8002c00:	2200      	movs	r2, #0
 8002c02:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002c06:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002c0a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002c0e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002c12:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002c16:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8002c18:	4a01      	ldr	r2, [pc, #4]	@ (8002c20 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002c1a:	6002      	str	r2, [r0, #0]
 8002c1c:	4770      	bx	lr
 8002c1e:	bf00      	nop
 8002c20:	08020a30 	.word	0x08020a30

08002c24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002c24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        return typedTextId < numberOfTypedTexts;
 8002c26:	4b19      	ldr	r3, [pc, #100]	@ (8002c8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x68>)
 8002c28:	4606      	mov	r6, r0
 8002c2a:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
    {
        if (typedText.hasValidId())
 8002c2c:	881b      	ldrh	r3, [r3, #0]
 8002c2e:	428b      	cmp	r3, r1
 8002c30:	d92a      	bls.n	8002c88 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c32:	4b17      	ldr	r3, [pc, #92]	@ (8002c90 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
 8002c34:	681b      	ldr	r3, [r3, #0]
 8002c36:	b92b      	cbnz	r3, 8002c44 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002c38:	4b16      	ldr	r3, [pc, #88]	@ (8002c94 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002c3a:	216c      	movs	r1, #108	@ 0x6c
 8002c3c:	4a16      	ldr	r2, [pc, #88]	@ (8002c98 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002c3e:	4817      	ldr	r0, [pc, #92]	@ (8002c9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002c40:	f01b febc 	bl	801e9bc <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002c44:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002c48:	4b15      	ldr	r3, [pc, #84]	@ (8002ca0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002c50:	4b14      	ldr	r3, [pc, #80]	@ (8002ca4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002c52:	6818      	ldr	r0, [r3, #0]
 8002c54:	f000 fad2 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002c58:	682b      	ldr	r3, [r5, #0]
 8002c5a:	4607      	mov	r7, r0
 8002c5c:	4628      	mov	r0, r5
 8002c5e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002c60:	4798      	blx	r3
 8002c62:	682b      	ldr	r3, [r5, #0]
 8002c64:	4604      	mov	r4, r0
 8002c66:	4639      	mov	r1, r7
 8002c68:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002c6a:	4628      	mov	r0, r5
 8002c6c:	4798      	blx	r3
 8002c6e:	fb14 f400 	smulbb	r4, r4, r0
 8002c72:	682b      	ldr	r3, [r5, #0]
 8002c74:	4639      	mov	r1, r7
 8002c76:	b2a4      	uxth	r4, r4
 8002c78:	4628      	mov	r0, r5
 8002c7a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c7c:	4798      	blx	r3
 8002c7e:	1823      	adds	r3, r4, r0
 8002c80:	b21b      	sxth	r3, r3
 8002c82:	f8a6 3046 	strh.w	r3, [r6, #70]	@ 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002c86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002c88:	2300      	movs	r3, #0
 8002c8a:	e7fa      	b.n	8002c82 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002c8c:	20015114 	.word	0x20015114
 8002c90:	20015110 	.word	0x20015110
 8002c94:	08020964 	.word	0x08020964
 8002c98:	080209a6 	.word	0x080209a6
 8002c9c:	080209e1 	.word	0x080209e1
 8002ca0:	20015118 	.word	0x20015118
 8002ca4:	2001511c 	.word	0x2001511c

08002ca8 <_ZN12MainViewBaseC1Ev>:
MainViewBase::MainViewBase() :
 8002ca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cac:	4604      	mov	r4, r0
 8002cae:	b08b      	sub	sp, #44	@ 0x2c
        : presenter(0)
 8002cb0:	2500      	movs	r5, #0
 8002cb2:	f00c fcc5 	bl	800f640 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 8002cb6:	4626      	mov	r6, r4
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002cb8:	f04f 0826 	mov.w	r8, #38	@ 0x26
 8002cbc:	4b92      	ldr	r3, [pc, #584]	@ (8002f08 <_ZN12MainViewBaseC1Ev+0x260>)
 8002cbe:	4629      	mov	r1, r5
 8002cc0:	4642      	mov	r2, r8
 8002cc2:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002cc4:	f846 3b40 	str.w	r3, [r6], #64
 8002cc8:	4630      	mov	r0, r6
 8002cca:	f01c f913 	bl	801eef4 <memset>
 8002cce:	4630      	mov	r0, r6
 8002cd0:	f7ff ff96 	bl	8002c00 <_ZN8touchgfx6WidgetC1Ev>
 8002cd4:	4b8d      	ldr	r3, [pc, #564]	@ (8002f0c <_ZN12MainViewBaseC1Ev+0x264>)
 8002cd6:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 8002cda:	27ff      	movs	r7, #255	@ 0xff
 8002cdc:	6423      	str	r3, [r4, #64]	@ 0x40
 8002cde:	f64f 73ff 	movw	r3, #65535	@ 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8002ce2:	4642      	mov	r2, r8
 8002ce4:	4629      	mov	r1, r5
 8002ce6:	f884 7066 	strb.w	r7, [r4, #102]	@ 0x66
 8002cea:	4650      	mov	r0, sl
        : color(col)
 8002cec:	66a5      	str	r5, [r4, #104]	@ 0x68
 8002cee:	f104 0998 	add.w	r9, r4, #152	@ 0x98
 8002cf2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002cf6:	f01c f8fd 	bl	801eef4 <memset>
 8002cfa:	4650      	mov	r0, sl
 8002cfc:	f104 0be0 	add.w	fp, r4, #224	@ 0xe0
 8002d00:	f7ff ff7e 	bl	8002c00 <_ZN8touchgfx6WidgetC1Ev>
 8002d04:	4a82      	ldr	r2, [pc, #520]	@ (8002f10 <_ZN12MainViewBaseC1Ev+0x268>)
        Image::setBitmap(bmp);
 8002d06:	a908      	add	r1, sp, #32
 8002d08:	4650      	mov	r0, sl
        : Widget(), bitmap(bmp), alpha(255)
 8002d0a:	66e2      	str	r2, [r4, #108]	@ 0x6c
 8002d0c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8002d10:	f884 7094 	strb.w	r7, [r4, #148]	@ 0x94
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d14:	f04f 37ff 	mov.w	r7, #4294967295
 8002d18:	f8a4 2092 	strh.w	r2, [r4, #146]	@ 0x92
        Image::setBitmap(bmp);
 8002d1c:	f009 fb1f 	bl	800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d20:	4629      	mov	r1, r5
 8002d22:	4642      	mov	r2, r8
 8002d24:	4648      	mov	r0, r9
 8002d26:	f01c f8e5 	bl	801eef4 <memset>
 8002d2a:	4648      	mov	r0, r9
 8002d2c:	f7ff ff68 	bl	8002c00 <_ZN8touchgfx6WidgetC1Ev>
 8002d30:	4a78      	ldr	r2, [pc, #480]	@ (8002f14 <_ZN12MainViewBaseC1Ev+0x26c>)
        : typedTextId(id)
 8002d32:	4b79      	ldr	r3, [pc, #484]	@ (8002f18 <_ZN12MainViewBaseC1Ev+0x270>)
 8002d34:	4658      	mov	r0, fp
 8002d36:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
 8002d3a:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
 8002d3e:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8002d42:	f64f 73ff 	movw	r3, #65535	@ 0xffff
        : color(col)
 8002d46:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
 8002d4a:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
 8002d4e:	f8c4 20cc 	str.w	r2, [r4, #204]	@ 0xcc
 8002d52:	f8a4 50d0 	strh.w	r5, [r4, #208]	@ 0xd0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d56:	f8c4 50d4 	str.w	r5, [r4, #212]	@ 0xd4
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8002d5a:	e9c4 7536 	strd	r7, r5, [r4, #216]	@ 0xd8
 8002d5e:	f009 fc3f 	bl	800c5e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002d62:	f504 7294 	add.w	r2, r4, #296	@ 0x128
 8002d66:	4610      	mov	r0, r2
 8002d68:	9200      	str	r2, [sp, #0]
 8002d6a:	f009 fc39 	bl	800c5e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002d6e:	f504 72b8 	add.w	r2, r4, #368	@ 0x170
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8002d72:	4629      	mov	r1, r5
 8002d74:	9201      	str	r2, [sp, #4]
 8002d76:	4642      	mov	r2, r8
 8002d78:	9801      	ldr	r0, [sp, #4]
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002d7a:	f104 0804 	add.w	r8, r4, #4
 8002d7e:	f01c f8b9 	bl	801eef4 <memset>
 8002d82:	9801      	ldr	r0, [sp, #4]
 8002d84:	f7ff ff3c 	bl	8002c00 <_ZN8touchgfx6WidgetC1Ev>
 8002d88:	f64f 73ff 	movw	r3, #65535	@ 0xffff
        touchable = touch;
 8002d8c:	2201      	movs	r2, #1
        setXY(x, y);
 8002d8e:	4629      	mov	r1, r5
 8002d90:	f8a4 31a0 	strh.w	r3, [r4, #416]	@ 0x1a0
 8002d94:	4630      	mov	r0, r6
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8002d96:	f884 31a2 	strb.w	r3, [r4, #418]	@ 0x1a2
        : pobject(pObject), pmemfun(pmemfun_1)
 8002d9a:	4b60      	ldr	r3, [pc, #384]	@ (8002f1c <_ZN12MainViewBaseC1Ev+0x274>)
        touchable = touch;
 8002d9c:	f884 2194 	strb.w	r2, [r4, #404]	@ 0x194
 8002da0:	4a5f      	ldr	r2, [pc, #380]	@ (8002f20 <_ZN12MainViewBaseC1Ev+0x278>)
 8002da2:	f8c4 5198 	str.w	r5, [r4, #408]	@ 0x198
 8002da6:	f884 519c 	strb.w	r5, [r4, #412]	@ 0x19c
 8002daa:	f8c4 2170 	str.w	r2, [r4, #368]	@ 0x170
        setXY(x, y);
 8002dae:	462a      	mov	r2, r5
 8002db0:	f8a4 719e 	strh.w	r7, [r4, #414]	@ 0x19e
 8002db4:	e9c4 3469 	strd	r3, r4, [r4, #420]	@ 0x1a4
 8002db8:	4b5a      	ldr	r3, [pc, #360]	@ (8002f24 <_ZN12MainViewBaseC1Ev+0x27c>)
 8002dba:	e9c4 356b 	strd	r3, r5, [r4, #428]	@ 0x1ac
 8002dbe:	f7ff fa66 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002dc2:	4630      	mov	r0, r6
 8002dc4:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8002dc8:	f7ff fa28 	bl	800221c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002dcc:	4630      	mov	r0, r6
 8002dce:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8002dd2:	f7ff fa25 	bl	8002220 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002dd6:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002dda:	4631      	mov	r1, r6
 8002ddc:	4640      	mov	r0, r8
 8002dde:	66a3      	str	r3, [r4, #104]	@ 0x68
    changescreen_sensor_btn.setAction(buttonCallback);
 8002de0:	f504 76d2 	add.w	r6, r4, #420	@ 0x1a4
 8002de4:	f007 fbc8 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 8002de8:	462a      	mov	r2, r5
 8002dea:	4629      	mov	r1, r5
 8002dec:	4650      	mov	r0, sl
 8002dee:	f7ff fa4e 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_DARK_ID));
 8002df2:	a908      	add	r1, sp, #32
 8002df4:	4650      	mov	r0, sl
 8002df6:	f8ad 5020 	strh.w	r5, [sp, #32]
 8002dfa:	f009 fab0 	bl	800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002dfe:	4651      	mov	r1, sl
 8002e00:	4640      	mov	r0, r8
 8002e02:	f04f 0a0a 	mov.w	sl, #10
 8002e06:	f007 fbb7 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    title.setXY(84, 87);
 8002e0a:	2257      	movs	r2, #87	@ 0x57
 8002e0c:	4648      	mov	r0, r9
 8002e0e:	2154      	movs	r1, #84	@ 0x54
 8002e10:	f7ff fa3d 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 8002e14:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        boundingArea = calculateBoundingArea();
 8002e18:	ad02      	add	r5, sp, #8
 8002e1a:	4649      	mov	r1, r9
        color = newColor;
 8002e1c:	f8c4 70c8 	str.w	r7, [r4, #200]	@ 0xc8
        boundingArea = calculateBoundingArea();
 8002e20:	4628      	mov	r0, r5
 8002e22:	f008 fe7b 	bl	800bb1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002e26:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
 8002e2a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002e2e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002e32:	4b39      	ldr	r3, [pc, #228]	@ (8002f18 <_ZN12MainViewBaseC1Ev+0x270>)
        alpha = newAlpha;
 8002e34:	2596      	movs	r5, #150	@ 0x96
    title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5Q27));
 8002e36:	a908      	add	r1, sp, #32
 8002e38:	4648      	mov	r0, r9
 8002e3a:	9308      	str	r3, [sp, #32]
 8002e3c:	2303      	movs	r3, #3
 8002e3e:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8002e42:	f009 f913 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002e46:	4649      	mov	r1, r9
 8002e48:	4640      	mov	r0, r8
 8002e4a:	f884 50ce 	strb.w	r5, [r4, #206]	@ 0xce
 8002e4e:	f04f 0909 	mov.w	r9, #9
 8002e52:	f007 fb91 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    changescreen_sensor_btn.setXY(90, 175);
 8002e56:	4658      	mov	r0, fp
 8002e58:	22af      	movs	r2, #175	@ 0xaf
 8002e5a:	215a      	movs	r1, #90	@ 0x5a
 8002e5c:	f7ff fa17 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    changescreen_sensor_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_ID));
 8002e60:	aa08      	add	r2, sp, #32
 8002e62:	a907      	add	r1, sp, #28
 8002e64:	4658      	mov	r0, fp
 8002e66:	f8ad a01c 	strh.w	sl, [sp, #28]
 8002e6a:	f8ad 9020 	strh.w	r9, [sp, #32]
 8002e6e:	f009 f958 	bl	800c122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002e72:	2315      	movs	r3, #21
        updateTextPosition();
 8002e74:	4658      	mov	r0, fp
 8002e76:	f8a4 3118 	strh.w	r3, [r4, #280]	@ 0x118
 8002e7a:	f7ff fed3 	bl	8002c24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002e7e:	4659      	mov	r1, fp
 8002e80:	4640      	mov	r0, r8
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002e82:	f884 5112 	strb.w	r5, [r4, #274]	@ 0x112
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002e86:	f8c4 6108 	str.w	r6, [r4, #264]	@ 0x108
        colorPressed = col;
 8002e8a:	e9c4 7747 	strd	r7, r7, [r4, #284]	@ 0x11c
 8002e8e:	f007 fb73 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    changescreen_motor_btn.setXY(270, 175);
 8002e92:	9800      	ldr	r0, [sp, #0]
 8002e94:	22af      	movs	r2, #175	@ 0xaf
 8002e96:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 8002e9a:	f7ff f9f8 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    changescreen_motor_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_ID));
 8002e9e:	aa08      	add	r2, sp, #32
 8002ea0:	a907      	add	r1, sp, #28
 8002ea2:	9800      	ldr	r0, [sp, #0]
 8002ea4:	f8ad a01c 	strh.w	sl, [sp, #28]
 8002ea8:	f8ad 9020 	strh.w	r9, [sp, #32]
 8002eac:	f009 f939 	bl	800c122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002eb0:	2304      	movs	r3, #4
        updateTextPosition();
 8002eb2:	9800      	ldr	r0, [sp, #0]
 8002eb4:	f8a4 3160 	strh.w	r3, [r4, #352]	@ 0x160
 8002eb8:	f7ff feb4 	bl	8002c24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002ebc:	9900      	ldr	r1, [sp, #0]
 8002ebe:	4640      	mov	r0, r8
 8002ec0:	f884 515a 	strb.w	r5, [r4, #346]	@ 0x15a
 8002ec4:	f8c4 6150 	str.w	r6, [r4, #336]	@ 0x150
        colorPressed = col;
 8002ec8:	e9c4 7759 	strd	r7, r7, [r4, #356]	@ 0x164
 8002ecc:	f007 fb54 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    config_btn.setXY(425, 5);
 8002ed0:	9801      	ldr	r0, [sp, #4]
 8002ed2:	2205      	movs	r2, #5
 8002ed4:	f240 11a9 	movw	r1, #425	@ 0x1a9
 8002ed8:	f7ff f9d9 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8002edc:	230b      	movs	r3, #11
    config_btn.setBitmaps(touchgfx::Bitmap(BITMAP_CONFIGURATION_ID), touchgfx::Bitmap(BITMAP_CONFIGURATION_ID));
 8002ede:	aa08      	add	r2, sp, #32
 8002ee0:	a907      	add	r1, sp, #28
 8002ee2:	9801      	ldr	r0, [sp, #4]
 8002ee4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002ee8:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002eec:	f009 f919 	bl	800c122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002ef0:	4640      	mov	r0, r8
 8002ef2:	9901      	ldr	r1, [sp, #4]
 8002ef4:	f884 51a2 	strb.w	r5, [r4, #418]	@ 0x1a2
 8002ef8:	f8c4 6198 	str.w	r6, [r4, #408]	@ 0x198
 8002efc:	f007 fb3c 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002f00:	4620      	mov	r0, r4
 8002f02:	b00b      	add	sp, #44	@ 0x2c
 8002f04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f08:	08020ab0 	.word	0x08020ab0
 8002f0c:	080214a0 	.word	0x080214a0
 8002f10:	0802157c 	.word	0x0802157c
 8002f14:	08021410 	.word	0x08021410
 8002f18:	0802030c 	.word	0x0802030c
 8002f1c:	08020a98 	.word	0x08020a98
 8002f20:	08021508 	.word	0x08021508
 8002f24:	08002bc3 	.word	0x08002bc3

08002f28 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_NotoSans_Regular_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_NotoSans_Regular_12_4bpp();

touchgfx::GeneratedFont& getFont_NotoSans_Regular_12_4bpp()
{
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 1, 12, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 8002f28:	4770      	bx	lr
	...

08002f2c <_Z32getFont_NotoSans_Regular_12_4bppv>:
{
 8002f2c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 1, 12, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 8002f2e:	4d16      	ldr	r5, [pc, #88]	@ (8002f88 <_Z32getFont_NotoSans_Regular_12_4bppv+0x5c>)
{
 8002f30:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 1, 12, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 8002f32:	682c      	ldr	r4, [r5, #0]
 8002f34:	f3bf 8f5b 	dmb	ish
 8002f38:	f014 0401 	ands.w	r4, r4, #1
 8002f3c:	d120      	bne.n	8002f80 <_Z32getFont_NotoSans_Regular_12_4bppv+0x54>
 8002f3e:	4628      	mov	r0, r5
 8002f40:	f01b fd0f 	bl	801e962 <__cxa_guard_acquire>
 8002f44:	b1e0      	cbz	r0, 8002f80 <_Z32getFont_NotoSans_Regular_12_4bppv+0x54>
 8002f46:	233f      	movs	r3, #63	@ 0x3f
 8002f48:	2201      	movs	r2, #1
 8002f4a:	4910      	ldr	r1, [pc, #64]	@ (8002f8c <_Z32getFont_NotoSans_Regular_12_4bppv+0x60>)
 8002f4c:	9309      	str	r3, [sp, #36]	@ 0x24
 8002f4e:	4b10      	ldr	r3, [pc, #64]	@ (8002f90 <_Z32getFont_NotoSans_Regular_12_4bppv+0x64>)
 8002f50:	4810      	ldr	r0, [pc, #64]	@ (8002f94 <_Z32getFont_NotoSans_Regular_12_4bppv+0x68>)
 8002f52:	9308      	str	r3, [sp, #32]
 8002f54:	4b10      	ldr	r3, [pc, #64]	@ (8002f98 <_Z32getFont_NotoSans_Regular_12_4bppv+0x6c>)
 8002f56:	940a      	str	r4, [sp, #40]	@ 0x28
 8002f58:	9405      	str	r4, [sp, #20]
 8002f5a:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002f5e:	2304      	movs	r3, #4
 8002f60:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002f64:	230c      	movs	r3, #12
 8002f66:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002f6a:	9300      	str	r3, [sp, #0]
 8002f6c:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002f70:	f7ff fdc6 	bl	8002b00 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002f74:	4809      	ldr	r0, [pc, #36]	@ (8002f9c <_Z32getFont_NotoSans_Regular_12_4bppv+0x70>)
 8002f76:	f01b fd3f 	bl	801e9f8 <atexit>
 8002f7a:	4628      	mov	r0, r5
 8002f7c:	f01b fcfd 	bl	801e97a <__cxa_guard_release>
    return NotoSans_Regular_12_4bpp;
}
 8002f80:	4804      	ldr	r0, [pc, #16]	@ (8002f94 <_Z32getFont_NotoSans_Regular_12_4bppv+0x68>)
 8002f82:	b00f      	add	sp, #60	@ 0x3c
 8002f84:	bd30      	pop	{r4, r5, pc}
 8002f86:	bf00      	nop
 8002f88:	20001c5c 	.word	0x20001c5c
 8002f8c:	900df688 	.word	0x900df688
 8002f90:	08021ad0 	.word	0x08021ad0
 8002f94:	20001c60 	.word	0x20001c60
 8002f98:	08021b3c 	.word	0x08021b3c
 8002f9c:	08002f29 	.word	0x08002f29

08002fa0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_18_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_18_4bpp();

touchgfx::GeneratedFont& getFont_verdana_18_4bpp()
{
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 35, 22, 18, 0, 0, 4, 1, 0, 1, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 8002fa0:	4770      	bx	lr
	...

08002fa4 <_Z23getFont_verdana_18_4bppv>:
{
 8002fa4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 35, 22, 18, 0, 0, 4, 1, 0, 1, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 8002fa6:	4d17      	ldr	r5, [pc, #92]	@ (8003004 <_Z23getFont_verdana_18_4bppv+0x60>)
{
 8002fa8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 35, 22, 18, 0, 0, 4, 1, 0, 1, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 8002faa:	682c      	ldr	r4, [r5, #0]
 8002fac:	f3bf 8f5b 	dmb	ish
 8002fb0:	f014 0401 	ands.w	r4, r4, #1
 8002fb4:	d122      	bne.n	8002ffc <_Z23getFont_verdana_18_4bppv+0x58>
 8002fb6:	4628      	mov	r0, r5
 8002fb8:	f01b fcd3 	bl	801e962 <__cxa_guard_acquire>
 8002fbc:	b1f0      	cbz	r0, 8002ffc <_Z23getFont_verdana_18_4bppv+0x58>
 8002fbe:	233f      	movs	r3, #63	@ 0x3f
 8002fc0:	2223      	movs	r2, #35	@ 0x23
 8002fc2:	4911      	ldr	r1, [pc, #68]	@ (8003008 <_Z23getFont_verdana_18_4bppv+0x64>)
 8002fc4:	9309      	str	r3, [sp, #36]	@ 0x24
 8002fc6:	4b11      	ldr	r3, [pc, #68]	@ (800300c <_Z23getFont_verdana_18_4bppv+0x68>)
 8002fc8:	4811      	ldr	r0, [pc, #68]	@ (8003010 <_Z23getFont_verdana_18_4bppv+0x6c>)
 8002fca:	9308      	str	r3, [sp, #32]
 8002fcc:	4b11      	ldr	r3, [pc, #68]	@ (8003014 <_Z23getFont_verdana_18_4bppv+0x70>)
 8002fce:	940a      	str	r4, [sp, #40]	@ 0x28
 8002fd0:	9307      	str	r3, [sp, #28]
 8002fd2:	2301      	movs	r3, #1
 8002fd4:	9401      	str	r4, [sp, #4]
 8002fd6:	9304      	str	r3, [sp, #16]
 8002fd8:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8002fdc:	2304      	movs	r3, #4
 8002fde:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8002fe2:	2312      	movs	r3, #18
 8002fe4:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002fe8:	9300      	str	r3, [sp, #0]
 8002fea:	2316      	movs	r3, #22
 8002fec:	f7ff fd88 	bl	8002b00 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002ff0:	4809      	ldr	r0, [pc, #36]	@ (8003018 <_Z23getFont_verdana_18_4bppv+0x74>)
 8002ff2:	f01b fd01 	bl	801e9f8 <atexit>
 8002ff6:	4628      	mov	r0, r5
 8002ff8:	f01b fcbf 	bl	801e97a <__cxa_guard_release>
    return verdana_18_4bpp;
}
 8002ffc:	4804      	ldr	r0, [pc, #16]	@ (8003010 <_Z23getFont_verdana_18_4bppv+0x6c>)
 8002ffe:	b00f      	add	sp, #60	@ 0x3c
 8003000:	bd30      	pop	{r4, r5, pc}
 8003002:	bf00      	nop
 8003004:	20001c8c 	.word	0x20001c8c
 8003008:	900df698 	.word	0x900df698
 800300c:	08021ad4 	.word	0x08021ad4
 8003010:	20001c90 	.word	0x20001c90
 8003014:	08021b40 	.word	0x08021b40
 8003018:	08002fa1 	.word	0x08002fa1

0800301c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 46, 40, 0, 0, 4, 1, 1, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800301c:	4770      	bx	lr
	...

08003020 <_Z23getFont_verdana_40_4bppv>:
{
 8003020:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 46, 40, 0, 0, 4, 1, 1, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003022:	4d17      	ldr	r5, [pc, #92]	@ (8003080 <_Z23getFont_verdana_40_4bppv+0x60>)
{
 8003024:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 46, 40, 0, 0, 4, 1, 1, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003026:	682c      	ldr	r4, [r5, #0]
 8003028:	f3bf 8f5b 	dmb	ish
 800302c:	f014 0401 	ands.w	r4, r4, #1
 8003030:	d122      	bne.n	8003078 <_Z23getFont_verdana_40_4bppv+0x58>
 8003032:	4628      	mov	r0, r5
 8003034:	f01b fc95 	bl	801e962 <__cxa_guard_acquire>
 8003038:	b1f0      	cbz	r0, 8003078 <_Z23getFont_verdana_40_4bppv+0x58>
 800303a:	233f      	movs	r3, #63	@ 0x3f
 800303c:	220b      	movs	r2, #11
 800303e:	4911      	ldr	r1, [pc, #68]	@ (8003084 <_Z23getFont_verdana_40_4bppv+0x64>)
 8003040:	9309      	str	r3, [sp, #36]	@ 0x24
 8003042:	4b11      	ldr	r3, [pc, #68]	@ (8003088 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003044:	4811      	ldr	r0, [pc, #68]	@ (800308c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003046:	9308      	str	r3, [sp, #32]
 8003048:	4b11      	ldr	r3, [pc, #68]	@ (8003090 <_Z23getFont_verdana_40_4bppv+0x70>)
 800304a:	940a      	str	r4, [sp, #40]	@ 0x28
 800304c:	9307      	str	r3, [sp, #28]
 800304e:	2301      	movs	r3, #1
 8003050:	9401      	str	r4, [sp, #4]
 8003052:	9304      	str	r3, [sp, #16]
 8003054:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8003058:	2304      	movs	r3, #4
 800305a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800305e:	2328      	movs	r3, #40	@ 0x28
 8003060:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003064:	9300      	str	r3, [sp, #0]
 8003066:	232e      	movs	r3, #46	@ 0x2e
 8003068:	f7ff fd4a 	bl	8002b00 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800306c:	4809      	ldr	r0, [pc, #36]	@ (8003094 <_Z23getFont_verdana_40_4bppv+0x74>)
 800306e:	f01b fcc3 	bl	801e9f8 <atexit>
 8003072:	4628      	mov	r0, r5
 8003074:	f01b fc81 	bl	801e97a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003078:	4804      	ldr	r0, [pc, #16]	@ (800308c <_Z23getFont_verdana_40_4bppv+0x6c>)
 800307a:	b00f      	add	sp, #60	@ 0x3c
 800307c:	bd30      	pop	{r4, r5, pc}
 800307e:	bf00      	nop
 8003080:	20001cbc 	.word	0x20001cbc
 8003084:	900df884 	.word	0x900df884
 8003088:	08021b2c 	.word	0x08021b2c
 800308c:	20001cc0 	.word	0x20001cc0
 8003090:	08021b44 	.word	0x08021b44
 8003094:	0800301d 	.word	0x0800301d

08003098 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8003098:	2000      	movs	r0, #0
 800309a:	4770      	bx	lr

0800309c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 800309c:	2000      	movs	r0, #0
 800309e:	4770      	bx	lr

080030a0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80030a0:	b40e      	push	{r1, r2, r3}
 80030a2:	b503      	push	{r0, r1, lr}
 80030a4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80030a6:	2100      	movs	r1, #0
{
 80030a8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80030ac:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80030ae:	f00b fef5 	bl	800ee9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80030b2:	b002      	add	sp, #8
 80030b4:	f85d eb04 	ldr.w	lr, [sp], #4
 80030b8:	b003      	add	sp, #12
 80030ba:	4770      	bx	lr

080030bc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80030bc:	b40c      	push	{r2, r3}
 80030be:	b507      	push	{r0, r1, r2, lr}
 80030c0:	ab04      	add	r3, sp, #16
 80030c2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80030c6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80030c8:	f00b fee8 	bl	800ee9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80030cc:	b003      	add	sp, #12
 80030ce:	f85d eb04 	ldr.w	lr, [sp], #4
 80030d2:	b002      	add	sp, #8
 80030d4:	4770      	bx	lr
	...

080030d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80030d8:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 80030da:	b510      	push	{r4, lr}
 80030dc:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80030de:	b373      	cbz	r3, 800313e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80030e0:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 80030e2:	b92b      	cbnz	r3, 80030f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80030e4:	4b18      	ldr	r3, [pc, #96]	@ (8003148 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80030e6:	21c5      	movs	r1, #197	@ 0xc5
 80030e8:	4a18      	ldr	r2, [pc, #96]	@ (800314c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80030ea:	4819      	ldr	r0, [pc, #100]	@ (8003150 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80030ec:	f01b fc66 	bl	801e9bc <__assert_func>
            return buffer[pos];
 80030f0:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80030f2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80030f6:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 80030f8:	b30b      	cbz	r3, 800313e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80030fa:	f00d f97d 	bl	80103f8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80030fe:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8003100:	2b01      	cmp	r3, #1
 8003102:	d803      	bhi.n	800310c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003104:	4b13      	ldr	r3, [pc, #76]	@ (8003154 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8003106:	21cb      	movs	r1, #203	@ 0xcb
 8003108:	4a13      	ldr	r2, [pc, #76]	@ (8003158 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800310a:	e7ee      	b.n	80030ea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800310c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800310e:	f640 103f 	movw	r0, #2367	@ 0x93f
 8003112:	1c53      	adds	r3, r2, #1
 8003114:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8003116:	2b09      	cmp	r3, #9
 8003118:	4619      	mov	r1, r3
 800311a:	bf88      	it	hi
 800311c:	f1a3 010a 	subhi.w	r1, r3, #10
 8003120:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8003124:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8003126:	4281      	cmp	r1, r0
 8003128:	d109      	bne.n	800313e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800312a:	2b0a      	cmp	r3, #10
 800312c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003130:	bf28      	it	cs
 8003132:	2300      	movcs	r3, #0
            return buffer[pos];
 8003134:	8c50      	ldrh	r0, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003136:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800313a:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 800313c:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800313e:	4620      	mov	r0, r4
}
 8003140:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003144:	f00d b85a 	b.w	80101fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003148:	08020adc 	.word	0x08020adc
 800314c:	08020ae5 	.word	0x08020ae5
 8003150:	08020b90 	.word	0x08020b90
 8003154:	08020bda 	.word	0x08020bda
 8003158:	08020be8 	.word	0x08020be8

0800315c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800315c:	f00d b817 	b.w	801018e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003160 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003160:	b510      	push	{r4, lr}
 8003162:	b086      	sub	sp, #24
 8003164:	ac02      	add	r4, sp, #8
 8003166:	e884 0006 	stmia.w	r4, {r1, r2}
 800316a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800316c:	ab0a      	add	r3, sp, #40	@ 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800316e:	4621      	mov	r1, r4
    va_start(pArg, format);
 8003170:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003172:	9301      	str	r3, [sp, #4]
 8003174:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003176:	9300      	str	r3, [sp, #0]
 8003178:	9b08      	ldr	r3, [sp, #32]
 800317a:	f00a fadf 	bl	800d73c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800317e:	b006      	add	sp, #24
 8003180:	bd10      	pop	{r4, pc}
	...

08003184 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003184:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003186:	bb18      	cbnz	r0, 80031d0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003188:	4b12      	ldr	r3, [pc, #72]	@ (80031d4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800318a:	4813      	ldr	r0, [pc, #76]	@ (80031d8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800318c:	681c      	ldr	r4, [r3, #0]
 800318e:	4913      	ldr	r1, [pc, #76]	@ (80031dc <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003190:	b1b4      	cbz	r4, 80031c0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003192:	6822      	ldr	r2, [r4, #0]
 8003194:	4422      	add	r2, r4
 8003196:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003198:	6862      	ldr	r2, [r4, #4]
 800319a:	4422      	add	r2, r4
 800319c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800319e:	68a2      	ldr	r2, [r4, #8]
 80031a0:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80031a2:	4b0f      	ldr	r3, [pc, #60]	@ (80031e0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80031a4:	2200      	movs	r2, #0
 80031a6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80031a8:	f000 f838 	bl	800321c <_ZN17TypedTextDatabase8getFontsEv>
 80031ac:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80031ae:	f000 f833 	bl	8003218 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80031b2:	4b0c      	ldr	r3, [pc, #48]	@ (80031e4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80031b4:	601c      	str	r4, [r3, #0]
        fonts = f;
 80031b6:	4b0c      	ldr	r3, [pc, #48]	@ (80031e8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80031b8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80031ba:	4b0c      	ldr	r3, [pc, #48]	@ (80031ec <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80031bc:	8018      	strh	r0, [r3, #0]
    }
}
 80031be:	e007      	b.n	80031d0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80031c0:	4b0b      	ldr	r3, [pc, #44]	@ (80031f0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80031c2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80031c4:	4b0b      	ldr	r3, [pc, #44]	@ (80031f4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80031c6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80031c8:	4b0b      	ldr	r3, [pc, #44]	@ (80031f8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80031ca:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80031cc:	2c00      	cmp	r4, #0
 80031ce:	d1e8      	bne.n	80031a2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80031d0:	bd38      	pop	{r3, r4, r5, pc}
 80031d2:	bf00      	nop
 80031d4:	20001cf8 	.word	0x20001cf8
 80031d8:	20001cf0 	.word	0x20001cf0
 80031dc:	20001cec 	.word	0x20001cec
 80031e0:	20001cf4 	.word	0x20001cf4
 80031e4:	20015110 	.word	0x20015110
 80031e8:	20015118 	.word	0x20015118
 80031ec:	20015114 	.word	0x20015114
 80031f0:	900df978 	.word	0x900df978
 80031f4:	900df920 	.word	0x900df920
 80031f8:	900dfa88 	.word	0x900dfa88

080031fc <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80031fc:	4b04      	ldr	r3, [pc, #16]	@ (8003210 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8003204:	4b03      	ldr	r3, [pc, #12]	@ (8003214 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8003206:	681b      	ldr	r3, [r3, #0]
}
 8003208:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800320c:	4770      	bx	lr
 800320e:	bf00      	nop
 8003210:	20001cec 	.word	0x20001cec
 8003214:	20001cf0 	.word	0x20001cf0

08003218 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003218:	2016      	movs	r0, #22
 800321a:	4770      	bx	lr

0800321c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800321c:	4800      	ldr	r0, [pc, #0]	@ (8003220 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800321e:	4770      	bx	lr
 8003220:	20001cfc 	.word	0x20001cfc

08003224 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_40_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003224:	b510      	push	{r4, lr}
};
 8003226:	4c05      	ldr	r4, [pc, #20]	@ (800323c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_NotoSans_Regular_12_4bpp()),
 8003228:	f7ff fe80 	bl	8002f2c <_Z32getFont_NotoSans_Regular_12_4bppv>
};
 800322c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_18_4bpp()),
 800322e:	f7ff feb9 	bl	8002fa4 <_Z23getFont_verdana_18_4bppv>
};
 8003232:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_40_4bpp())
 8003234:	f7ff fef4 	bl	8003020 <_Z23getFont_verdana_40_4bppv>
};
 8003238:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 800323a:	bd10      	pop	{r4, pc}
 800323c:	20001cfc 	.word	0x20001cfc

08003240 <_ZN14configViewBaseD1Ev>:
}

configViewBase::~configViewBase()
{

}
 8003240:	4770      	bx	lr

08003242 <_ZN14configViewBase11setupScreenEv>:

void configViewBase::setupScreen()
{

}
 8003242:	4770      	bx	lr

08003244 <_ZN8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003244:	4770      	bx	lr

08003246 <_ZN8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003246:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003248:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 800324a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800324c:	68c2      	ldr	r2, [r0, #12]
 800324e:	689b      	ldr	r3, [r3, #8]
 8003250:	1055      	asrs	r5, r2, #1
 8003252:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003256:	07d2      	lsls	r2, r2, #31
 8003258:	bf48      	it	mi
 800325a:	5962      	ldrmi	r2, [r4, r5]
    }
 800325c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800325e:	bf48      	it	mi
 8003260:	58d3      	ldrmi	r3, [r2, r3]
 8003262:	4718      	bx	r3

08003264 <_ZNK8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8003264:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003266:	6840      	ldr	r0, [r0, #4]
 8003268:	b130      	cbz	r0, 8003278 <_ZNK8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800326a:	689a      	ldr	r2, [r3, #8]
 800326c:	b91a      	cbnz	r2, 8003276 <_ZNK8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 800326e:	68d8      	ldr	r0, [r3, #12]
 8003270:	f000 0001 	and.w	r0, r0, #1
 8003274:	4770      	bx	lr
 8003276:	2001      	movs	r0, #1
    }
 8003278:	4770      	bx	lr

0800327a <_ZN8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800327a:	b510      	push	{r4, lr}
 800327c:	4604      	mov	r4, r0
 800327e:	2110      	movs	r1, #16
 8003280:	f01b fb6d 	bl	801e95e <_ZdlPvj>
 8003284:	4620      	mov	r0, r4
 8003286:	bd10      	pop	{r4, pc}

08003288 <_ZN14configViewBaseD0Ev>:
configViewBase::~configViewBase()
 8003288:	b510      	push	{r4, lr}
 800328a:	4604      	mov	r4, r0
}
 800328c:	21dc      	movs	r1, #220	@ 0xdc
 800328e:	f01b fb66 	bl	801e95e <_ZdlPvj>
 8003292:	4620      	mov	r0, r4
 8003294:	bd10      	pop	{r4, pc}

08003296 <_ZN14configViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void configViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back_main_btn)
 8003296:	3098      	adds	r0, #152	@ 0x98
 8003298:	4288      	cmp	r0, r1
{
 800329a:	b508      	push	{r3, lr}
    if (&src == &back_main_btn)
 800329c:	d105      	bne.n	80032aa <_ZN14configViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~configViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800329e:	f00a feaf 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
        //back_main
        //When back_main_btn clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    }
}
 80032a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMainScreenNoTransition();
 80032a6:	f7ff b923 	b.w	80024f0 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
}
 80032aa:	bd08      	pop	{r3, pc}

080032ac <_ZN14configViewBaseC1Ev>:
configViewBase::configViewBase() :
 80032ac:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80032b0:	4604      	mov	r4, r0
 80032b2:	2500      	movs	r5, #0
 80032b4:	f00c f9c4 	bl	800f640 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
 80032b8:	f04f 0a26 	mov.w	sl, #38	@ 0x26
    buttonCallback(this, &configViewBase::buttonCallbackHandler)
 80032bc:	4626      	mov	r6, r4
 80032be:	4b4a      	ldr	r3, [pc, #296]	@ (80033e8 <_ZN14configViewBaseC1Ev+0x13c>)
 80032c0:	4652      	mov	r2, sl
 80032c2:	4629      	mov	r1, r5
 80032c4:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80032c6:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 80032ca:	f846 3b40 	str.w	r3, [r6], #64
 80032ce:	4630      	mov	r0, r6
 80032d0:	f01b fe10 	bl	801eef4 <memset>
 80032d4:	4630      	mov	r0, r6
 80032d6:	f7ff fc93 	bl	8002c00 <_ZN8touchgfx6WidgetC1Ev>
 80032da:	f04f 08ff 	mov.w	r8, #255	@ 0xff
 80032de:	4b43      	ldr	r3, [pc, #268]	@ (80033ec <_ZN14configViewBaseC1Ev+0x140>)
 80032e0:	f64f 79ff 	movw	r9, #65535	@ 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 80032e4:	4652      	mov	r2, sl
 80032e6:	4629      	mov	r1, r5
 80032e8:	6423      	str	r3, [r4, #64]	@ 0x40
 80032ea:	4638      	mov	r0, r7
 80032ec:	f884 8066 	strb.w	r8, [r4, #102]	@ 0x66
        : color(col)
 80032f0:	66a5      	str	r5, [r4, #104]	@ 0x68
 80032f2:	f8ad 9004 	strh.w	r9, [sp, #4]
 80032f6:	f01b fdfd 	bl	801eef4 <memset>
 80032fa:	4638      	mov	r0, r7
 80032fc:	f7ff fc80 	bl	8002c00 <_ZN8touchgfx6WidgetC1Ev>
 8003300:	4b3b      	ldr	r3, [pc, #236]	@ (80033f0 <_ZN14configViewBaseC1Ev+0x144>)
 8003302:	f884 8094 	strb.w	r8, [r4, #148]	@ 0x94
 8003306:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 800330a:	66e3      	str	r3, [r4, #108]	@ 0x6c
        Image::setBitmap(bmp);
 800330c:	a901      	add	r1, sp, #4
        : Widget(), bitmap(bmp), alpha(255)
 800330e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
        Image::setBitmap(bmp);
 8003312:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8003314:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
        Image::setBitmap(bmp);
 8003318:	f009 f821 	bl	800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), action(), pressed(false)
 800331c:	4652      	mov	r2, sl
 800331e:	4629      	mov	r1, r5
 8003320:	4640      	mov	r0, r8
 8003322:	f01b fde7 	bl	801eef4 <memset>
 8003326:	4640      	mov	r0, r8
 8003328:	f7ff fc6a 	bl	8002c00 <_ZN8touchgfx6WidgetC1Ev>
        touchable = touch;
 800332c:	2301      	movs	r3, #1
        setXY(x, y);
 800332e:	462a      	mov	r2, r5
 8003330:	4629      	mov	r1, r5
        touchable = touch;
 8003332:	f884 30bc 	strb.w	r3, [r4, #188]	@ 0xbc
        setXY(x, y);
 8003336:	4630      	mov	r0, r6
        : AbstractButton(), up(), down(), alpha(255)
 8003338:	4b2e      	ldr	r3, [pc, #184]	@ (80033f4 <_ZN14configViewBaseC1Ev+0x148>)
 800333a:	f8a4 90c6 	strh.w	r9, [r4, #198]	@ 0xc6
 800333e:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
        : pobject(pObject), pmemfun(pmemfun_1)
 8003342:	4b2d      	ldr	r3, [pc, #180]	@ (80033f8 <_ZN14configViewBaseC1Ev+0x14c>)
 8003344:	f8a4 90c8 	strh.w	r9, [r4, #200]	@ 0xc8
 8003348:	f884 90ca 	strb.w	r9, [r4, #202]	@ 0xca
 800334c:	f104 0904 	add.w	r9, r4, #4
 8003350:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
 8003354:	f884 50c4 	strb.w	r5, [r4, #196]	@ 0xc4
 8003358:	e9c4 3433 	strd	r3, r4, [r4, #204]	@ 0xcc
 800335c:	4b27      	ldr	r3, [pc, #156]	@ (80033fc <_ZN14configViewBaseC1Ev+0x150>)
 800335e:	e9c4 3535 	strd	r3, r5, [r4, #212]	@ 0xd4
 8003362:	f7fe ff94 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003366:	4630      	mov	r0, r6
 8003368:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 800336c:	f7fe ff56 	bl	800221c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003370:	4630      	mov	r0, r6
 8003372:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8003376:	f7fe ff53 	bl	8002220 <_ZN8touchgfx8Drawable9setHeightEs>
        color = newColor;
 800337a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800337e:	4631      	mov	r1, r6
 8003380:	4648      	mov	r0, r9
 8003382:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003384:	f007 f8f8 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 8003388:	462a      	mov	r2, r5
 800338a:	4629      	mov	r1, r5
 800338c:	4638      	mov	r0, r7
 800338e:	f7fe ff7e 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_DARK_ID));
 8003392:	a901      	add	r1, sp, #4
 8003394:	4638      	mov	r0, r7
 8003396:	f8ad 5004 	strh.w	r5, [sp, #4]
 800339a:	f008 ffe0 	bl	800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800339e:	4639      	mov	r1, r7
 80033a0:	4648      	mov	r0, r9
 80033a2:	f007 f8e9 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    back_main_btn.setXY(425, 5);
 80033a6:	4640      	mov	r0, r8
 80033a8:	2205      	movs	r2, #5
 80033aa:	f240 11a9 	movw	r1, #425	@ 0x1a9
 80033ae:	f7fe ff6e 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 80033b2:	2304      	movs	r3, #4
    back_main_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BACK50_ID), touchgfx::Bitmap(BITMAP_BACK50_ID));
 80033b4:	4669      	mov	r1, sp
 80033b6:	4640      	mov	r0, r8
 80033b8:	eb0d 0203 	add.w	r2, sp, r3
 80033bc:	f8ad 3000 	strh.w	r3, [sp]
 80033c0:	f8ad 3004 	strh.w	r3, [sp, #4]
 80033c4:	f008 fead 	bl	800c122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        alpha = newAlpha;
 80033c8:	2396      	movs	r3, #150	@ 0x96
 80033ca:	4648      	mov	r0, r9
 80033cc:	4641      	mov	r1, r8
 80033ce:	f884 30ca 	strb.w	r3, [r4, #202]	@ 0xca
    back_main_btn.setAction(buttonCallback);
 80033d2:	f104 03cc 	add.w	r3, r4, #204	@ 0xcc
        action = &callback;
 80033d6:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80033da:	f007 f8cd 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80033de:	4620      	mov	r0, r4
 80033e0:	b002      	add	sp, #8
 80033e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80033e6:	bf00      	nop
 80033e8:	08020cdc 	.word	0x08020cdc
 80033ec:	080214a0 	.word	0x080214a0
 80033f0:	0802157c 	.word	0x0802157c
 80033f4:	08021508 	.word	0x08021508
 80033f8:	08020cc4 	.word	0x08020cc4
 80033fc:	08003297 	.word	0x08003297

08003400 <_ZN13motorViewBase16air_button_clickEv>:
     * Virtual Action Handlers
     */
    virtual void air_button_click()
    {
        // Override and implement this function in motor
    }
 8003400:	4770      	bx	lr

08003402 <_ZN13motorViewBase18water_button_clickEv>:
    virtual void water_button_click()
    {
        // Override and implement this function in motor
    }
 8003402:	4770      	bx	lr

08003404 <_ZN13motorViewBase16led_button_clickEv>:
    virtual void led_button_click()
    {
        // Override and implement this function in motor
    }
 8003404:	4770      	bx	lr

08003406 <_ZN13motorViewBaseD1Ev>:
}

motorViewBase::~motorViewBase()
{

}
 8003406:	4770      	bx	lr

08003408 <_ZN13motorViewBase11setupScreenEv>:

void motorViewBase::setupScreen()
{

}
 8003408:	4770      	bx	lr

0800340a <_ZN8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800340a:	4770      	bx	lr

0800340c <_ZN8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800340c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800340e:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 8003410:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003412:	68c2      	ldr	r2, [r0, #12]
 8003414:	689b      	ldr	r3, [r3, #8]
 8003416:	1055      	asrs	r5, r2, #1
 8003418:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800341c:	07d2      	lsls	r2, r2, #31
 800341e:	bf48      	it	mi
 8003420:	5962      	ldrmi	r2, [r4, r5]
    }
 8003422:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003424:	bf48      	it	mi
 8003426:	58d3      	ldrmi	r3, [r2, r3]
 8003428:	4718      	bx	r3

0800342a <_ZNK8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800342a:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 800342c:	6840      	ldr	r0, [r0, #4]
 800342e:	b130      	cbz	r0, 800343e <_ZNK8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003430:	689a      	ldr	r2, [r3, #8]
 8003432:	b91a      	cbnz	r2, 800343c <_ZNK8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8003434:	68d8      	ldr	r0, [r3, #12]
 8003436:	f000 0001 	and.w	r0, r0, #1
 800343a:	4770      	bx	lr
 800343c:	2001      	movs	r0, #1
    }
 800343e:	4770      	bx	lr

08003440 <_ZN8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003440:	b510      	push	{r4, lr}
 8003442:	4604      	mov	r4, r0
 8003444:	2110      	movs	r1, #16
 8003446:	f01b fa8a 	bl	801e95e <_ZdlPvj>
 800344a:	4620      	mov	r0, r4
 800344c:	bd10      	pop	{r4, pc}

0800344e <_ZN13motorViewBaseD0Ev>:
motorViewBase::~motorViewBase()
 800344e:	b510      	push	{r4, lr}
 8003450:	4604      	mov	r4, r0
}
 8003452:	f44f 7138 	mov.w	r1, #736	@ 0x2e0
 8003456:	f01b fa82 	bl	801e95e <_ZdlPvj>
 800345a:	4620      	mov	r0, r4
 800345c:	bd10      	pop	{r4, pc}

0800345e <_ZN13motorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void motorViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back_main_btn)
 800345e:	f100 0398 	add.w	r3, r0, #152	@ 0x98
 8003462:	4299      	cmp	r1, r3
{
 8003464:	b570      	push	{r4, r5, r6, lr}
 8003466:	4604      	mov	r4, r0
 8003468:	460d      	mov	r5, r1
    if (&src == &back_main_btn)
 800346a:	d103      	bne.n	8003474 <_ZN13motorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800346c:	f00a fdc8 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //back_main
        //When back_main_btn clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
 8003470:	f7ff f83e 	bl	80024f0 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
    if (&src == &air_button)
 8003474:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 8003478:	429d      	cmp	r5, r3
 800347a:	d103      	bne.n	8003484 <_ZN13motorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
    {
        //Interaction1
        //When air_button clicked call virtual function
        //Call air_button_click
        air_button_click();
 800347c:	6823      	ldr	r3, [r4, #0]
 800347e:	4620      	mov	r0, r4
 8003480:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003482:	4798      	blx	r3
    }
    if (&src == &water_button)
 8003484:	f504 7318 	add.w	r3, r4, #608	@ 0x260
 8003488:	429d      	cmp	r5, r3
 800348a:	d103      	bne.n	8003494 <_ZN13motorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
    {
        //Interaction2
        //When water_button clicked call virtual function
        //Call water_button_click
        water_button_click();
 800348c:	6823      	ldr	r3, [r4, #0]
 800348e:	4620      	mov	r0, r4
 8003490:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003492:	4798      	blx	r3
    }
    if (&src == &led_button)
 8003494:	f504 7326 	add.w	r3, r4, #664	@ 0x298
 8003498:	429d      	cmp	r5, r3
 800349a:	d105      	bne.n	80034a8 <_ZN13motorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4a>
    {
        //Interaction3
        //When led_button clicked call virtual function
        //Call led_button_click
        led_button_click();
 800349c:	6823      	ldr	r3, [r4, #0]
 800349e:	4620      	mov	r0, r4
 80034a0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
}
 80034a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        led_button_click();
 80034a6:	4718      	bx	r3
}
 80034a8:	bd70      	pop	{r4, r5, r6, pc}
	...

080034ac <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 80034ac:	b510      	push	{r4, lr}
 80034ae:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 80034b0:	2226      	movs	r2, #38	@ 0x26
 80034b2:	2100      	movs	r1, #0
 80034b4:	f01b fd1e 	bl	801eef4 <memset>
 80034b8:	4620      	mov	r0, r4
 80034ba:	f7ff fba1 	bl	8002c00 <_ZN8touchgfx6WidgetC1Ev>
 80034be:	4b05      	ldr	r3, [pc, #20]	@ (80034d4 <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
    }
 80034c0:	4620      	mov	r0, r4
        : Widget(), action(), pressed(false)
 80034c2:	6023      	str	r3, [r4, #0]
 80034c4:	2300      	movs	r3, #0
 80034c6:	62a3      	str	r3, [r4, #40]	@ 0x28
 80034c8:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
        touchable = touch;
 80034cc:	2301      	movs	r3, #1
 80034ce:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
    }
 80034d2:	bd10      	pop	{r4, pc}
 80034d4:	0802132c 	.word	0x0802132c

080034d8 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80034d8:	b510      	push	{r4, lr}
 80034da:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80034dc:	2226      	movs	r2, #38	@ 0x26
 80034de:	2100      	movs	r1, #0
 80034e0:	f01b fd08 	bl	801eef4 <memset>
 80034e4:	4620      	mov	r0, r4
 80034e6:	f7ff fb8b 	bl	8002c00 <_ZN8touchgfx6WidgetC1Ev>
 80034ea:	4b0a      	ldr	r3, [pc, #40]	@ (8003514 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80034ec:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
    }
 80034f0:	4620      	mov	r0, r4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80034f2:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80034f4:	4b08      	ldr	r3, [pc, #32]	@ (8003518 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80034f6:	62a3      	str	r3, [r4, #40]	@ 0x28
 80034f8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80034fc:	85a3      	strh	r3, [r4, #44]	@ 0x2c
 80034fe:	2300      	movs	r3, #0
 8003500:	e9c4 320c 	strd	r3, r2, [r4, #48]	@ 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003504:	f04f 32ff 	mov.w	r2, #4294967295
 8003508:	8723      	strh	r3, [r4, #56]	@ 0x38
 800350a:	63e3      	str	r3, [r4, #60]	@ 0x3c
              text(0)
 800350c:	e9c4 2310 	strd	r2, r3, [r4, #64]	@ 0x40
    }
 8003510:	bd10      	pop	{r4, pc}
 8003512:	bf00      	nop
 8003514:	08021410 	.word	0x08021410
 8003518:	0802030c 	.word	0x0802030c

0800351c <_ZN8touchgfx12ToggleButtonC1Ev>:
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 800351c:	b510      	push	{r4, lr}
 800351e:	4604      	mov	r4, r0
        : AbstractButton(), up(), down(), alpha(255)
 8003520:	f7ff ffc4 	bl	80034ac <_ZN8touchgfx14AbstractButtonC1Ev>
 8003524:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003528:	4a04      	ldr	r2, [pc, #16]	@ (800353c <_ZN8touchgfx12ToggleButtonC1Ev+0x20>)
 800352a:	4620      	mov	r0, r4
 800352c:	85e3      	strh	r3, [r4, #46]	@ 0x2e
 800352e:	8623      	strh	r3, [r4, #48]	@ 0x30
 8003530:	f884 3032 	strb.w	r3, [r4, #50]	@ 0x32
 8003534:	6022      	str	r2, [r4, #0]
 8003536:	86a3      	strh	r3, [r4, #52]	@ 0x34
 8003538:	bd10      	pop	{r4, pc}
 800353a:	bf00      	nop
 800353c:	0802139c 	.word	0x0802139c

08003540 <_ZN13motorViewBaseC1Ev>:
motorViewBase::motorViewBase() :
 8003540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003544:	4604      	mov	r4, r0
 8003546:	b091      	sub	sp, #68	@ 0x44
 8003548:	2600      	movs	r6, #0
 800354a:	f00c f879 	bl	800f640 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &motorViewBase::buttonCallbackHandler)
 800354e:	4627      	mov	r7, r4
 8003550:	4bce      	ldr	r3, [pc, #824]	@ (800388c <_ZN13motorViewBaseC1Ev+0x34c>)
        : Widget(), alpha(255), color(0)
 8003552:	2226      	movs	r2, #38	@ 0x26
 8003554:	4631      	mov	r1, r6
 8003556:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8003558:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 800355c:	f847 3b40 	str.w	r3, [r7], #64
 8003560:	4638      	mov	r0, r7
 8003562:	f01b fcc7 	bl	801eef4 <memset>
 8003566:	4638      	mov	r0, r7
 8003568:	f7ff fb4a 	bl	8002c00 <_ZN8touchgfx6WidgetC1Ev>
 800356c:	4bc8      	ldr	r3, [pc, #800]	@ (8003890 <_ZN13motorViewBaseC1Ev+0x350>)
 800356e:	f64f 75ff 	movw	r5, #65535	@ 0xffff
 8003572:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 8003576:	6423      	str	r3, [r4, #64]	@ 0x40
 8003578:	23ff      	movs	r3, #255	@ 0xff
 800357a:	a90e      	add	r1, sp, #56	@ 0x38
        : color(col)
 800357c:	66a6      	str	r6, [r4, #104]	@ 0x68
 800357e:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 8003582:	4658      	mov	r0, fp
 8003584:	f8ad 5038 	strh.w	r5, [sp, #56]	@ 0x38
 8003588:	f7fe fe8e 	bl	80022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800358c:	4650      	mov	r0, sl
 800358e:	f104 09cc 	add.w	r9, r4, #204	@ 0xcc
 8003592:	f7ff ff8b 	bl	80034ac <_ZN8touchgfx14AbstractButtonC1Ev>
 8003596:	4bbf      	ldr	r3, [pc, #764]	@ (8003894 <_ZN13motorViewBaseC1Ev+0x354>)
 8003598:	f104 08f8 	add.w	r8, r4, #248	@ 0xf8
 800359c:	a90e      	add	r1, sp, #56	@ 0x38
 800359e:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80035a2:	4648      	mov	r0, r9
 80035a4:	f8a4 50c6 	strh.w	r5, [r4, #198]	@ 0xc6
 80035a8:	f8a4 50c8 	strh.w	r5, [r4, #200]	@ 0xc8
 80035ac:	f884 50ca 	strb.w	r5, [r4, #202]	@ 0xca
 80035b0:	f8ad 5038 	strh.w	r5, [sp, #56]	@ 0x38
 80035b4:	f7fe fe78 	bl	80022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80035b8:	a90e      	add	r1, sp, #56	@ 0x38
 80035ba:	4640      	mov	r0, r8
 80035bc:	f8ad 5038 	strh.w	r5, [sp, #56]	@ 0x38
 80035c0:	f7fe fe72 	bl	80022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80035c4:	f504 7392 	add.w	r3, r4, #292	@ 0x124
 80035c8:	a90e      	add	r1, sp, #56	@ 0x38
 80035ca:	f8ad 5038 	strh.w	r5, [sp, #56]	@ 0x38
 80035ce:	1d25      	adds	r5, r4, #4
 80035d0:	4618      	mov	r0, r3
 80035d2:	9304      	str	r3, [sp, #16]
 80035d4:	f7fe fe68 	bl	80022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80035d8:	f504 73a8 	add.w	r3, r4, #336	@ 0x150
 80035dc:	4618      	mov	r0, r3
 80035de:	9301      	str	r3, [sp, #4]
 80035e0:	f7ff ff7a 	bl	80034d8 <_ZN8touchgfx8TextAreaC1Ev>
 80035e4:	f504 73cc 	add.w	r3, r4, #408	@ 0x198
 80035e8:	4618      	mov	r0, r3
 80035ea:	9302      	str	r3, [sp, #8]
 80035ec:	f7ff ff74 	bl	80034d8 <_ZN8touchgfx8TextAreaC1Ev>
 80035f0:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
 80035f4:	4618      	mov	r0, r3
 80035f6:	9303      	str	r3, [sp, #12]
 80035f8:	f7ff ff6e 	bl	80034d8 <_ZN8touchgfx8TextAreaC1Ev>
 80035fc:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 8003600:	4618      	mov	r0, r3
 8003602:	9305      	str	r3, [sp, #20]
 8003604:	f7ff ff8a 	bl	800351c <_ZN8touchgfx12ToggleButtonC1Ev>
 8003608:	f504 7318 	add.w	r3, r4, #608	@ 0x260
 800360c:	4618      	mov	r0, r3
 800360e:	9306      	str	r3, [sp, #24]
 8003610:	f7ff ff84 	bl	800351c <_ZN8touchgfx12ToggleButtonC1Ev>
 8003614:	f504 7326 	add.w	r3, r4, #664	@ 0x298
 8003618:	4618      	mov	r0, r3
 800361a:	9307      	str	r3, [sp, #28]
 800361c:	f7ff ff7e 	bl	800351c <_ZN8touchgfx12ToggleButtonC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003620:	4b9d      	ldr	r3, [pc, #628]	@ (8003898 <_ZN13motorViewBaseC1Ev+0x358>)
        setXY(x, y);
 8003622:	4632      	mov	r2, r6
 8003624:	4631      	mov	r1, r6
 8003626:	4638      	mov	r0, r7
 8003628:	e9c4 34b4 	strd	r3, r4, [r4, #720]	@ 0x2d0
 800362c:	4b9b      	ldr	r3, [pc, #620]	@ (800389c <_ZN13motorViewBaseC1Ev+0x35c>)
 800362e:	e9c4 36b6 	strd	r3, r6, [r4, #728]	@ 0x2d8
 8003632:	f7fe fe2c 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003636:	4638      	mov	r0, r7
 8003638:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 800363c:	f7fe fdee 	bl	800221c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003640:	4638      	mov	r0, r7
 8003642:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8003646:	f7fe fdeb 	bl	8002220 <_ZN8touchgfx8Drawable9setHeightEs>
        color = newColor;
 800364a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800364e:	4639      	mov	r1, r7
 8003650:	4628      	mov	r0, r5
 8003652:	66a3      	str	r3, [r4, #104]	@ 0x68
        alpha = newAlpha;
 8003654:	2796      	movs	r7, #150	@ 0x96
 8003656:	f006 ff8f 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 800365a:	4632      	mov	r2, r6
 800365c:	4631      	mov	r1, r6
 800365e:	4658      	mov	r0, fp
 8003660:	f7fe fe15 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003664:	2301      	movs	r3, #1
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_LIGHT_ID));
 8003666:	a90e      	add	r1, sp, #56	@ 0x38
 8003668:	4658      	mov	r0, fp
 800366a:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800366e:	f008 fe76 	bl	800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003672:	4659      	mov	r1, fp
 8003674:	4628      	mov	r0, r5
 8003676:	f006 ff7f 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    back_main_btn.setXY(425, 5);
 800367a:	4650      	mov	r0, sl
 800367c:	2205      	movs	r2, #5
 800367e:	f240 11a9 	movw	r1, #425	@ 0x1a9
 8003682:	f7fe fe04 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003686:	2204      	movs	r2, #4
    back_main_btn.setAction(buttonCallback);
 8003688:	f504 7b34 	add.w	fp, r4, #720	@ 0x2d0
    back_main_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BACK50_ID), touchgfx::Bitmap(BITMAP_BACK50_ID));
 800368c:	a90d      	add	r1, sp, #52	@ 0x34
 800368e:	4650      	mov	r0, sl
 8003690:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8003694:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8003698:	aa0e      	add	r2, sp, #56	@ 0x38
 800369a:	f008 fd42 	bl	800c122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800369e:	4651      	mov	r1, sl
 80036a0:	4628      	mov	r0, r5
 80036a2:	f884 70ca 	strb.w	r7, [r4, #202]	@ 0xca
        action = &callback;
 80036a6:	f8c4 b0c0 	str.w	fp, [r4, #192]	@ 0xc0
 80036aa:	f04f 0a0a 	mov.w	sl, #10
 80036ae:	f006 ff63 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    air_back.setXY(85, 25);
 80036b2:	2219      	movs	r2, #25
 80036b4:	4648      	mov	r0, r9
 80036b6:	2155      	movs	r1, #85	@ 0x55
 80036b8:	f7fe fde9 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    air_back.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 80036bc:	a90e      	add	r1, sp, #56	@ 0x38
 80036be:	4648      	mov	r0, r9
 80036c0:	f8ad a038 	strh.w	sl, [sp, #56]	@ 0x38
 80036c4:	f008 fe4b 	bl	800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80036c8:	4649      	mov	r1, r9
 80036ca:	4628      	mov	r0, r5
        alpha = newAlpha;
 80036cc:	f884 70f4 	strb.w	r7, [r4, #244]	@ 0xf4
 80036d0:	f006 ff52 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    water_back.setXY(85, 105);
 80036d4:	2269      	movs	r2, #105	@ 0x69
 80036d6:	4640      	mov	r0, r8
 80036d8:	2155      	movs	r1, #85	@ 0x55
 80036da:	f7fe fdd8 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    water_back.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 80036de:	a90e      	add	r1, sp, #56	@ 0x38
 80036e0:	4640      	mov	r0, r8
 80036e2:	f8ad a038 	strh.w	sl, [sp, #56]	@ 0x38
 80036e6:	f008 fe3a 	bl	800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80036ea:	4641      	mov	r1, r8
 80036ec:	4628      	mov	r0, r5
 80036ee:	f884 7120 	strb.w	r7, [r4, #288]	@ 0x120
 80036f2:	f006 ff41 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    led_back.setXY(85, 185);
 80036f6:	22b9      	movs	r2, #185	@ 0xb9
 80036f8:	9804      	ldr	r0, [sp, #16]
 80036fa:	2155      	movs	r1, #85	@ 0x55
 80036fc:	f7fe fdc7 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    led_back.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 8003700:	a90e      	add	r1, sp, #56	@ 0x38
 8003702:	9804      	ldr	r0, [sp, #16]
        boundingArea = calculateBoundingArea();
 8003704:	f10d 0820 	add.w	r8, sp, #32
 8003708:	f8ad a038 	strh.w	sl, [sp, #56]	@ 0x38
 800370c:	f008 fe27 	bl	800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003710:	9904      	ldr	r1, [sp, #16]
 8003712:	4628      	mov	r0, r5
 8003714:	f884 714c 	strb.w	r7, [r4, #332]	@ 0x14c
 8003718:	f04f 0902 	mov.w	r9, #2
 800371c:	f006 ff2c 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    air_motor.setXY(108, 40);
 8003720:	2228      	movs	r2, #40	@ 0x28
 8003722:	9801      	ldr	r0, [sp, #4]
 8003724:	216c      	movs	r1, #108	@ 0x6c
 8003726:	f7fe fdb2 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800372a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 800372e:	9901      	ldr	r1, [sp, #4]
 8003730:	4640      	mov	r0, r8
        color = newColor;
 8003732:	f8c4 3180 	str.w	r3, [r4, #384]	@ 0x180
        linespace = space;
 8003736:	f8a4 6184 	strh.w	r6, [r4, #388]	@ 0x184
        boundingArea = calculateBoundingArea();
 800373a:	f008 f9ef 	bl	800bb1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800373e:	f504 7cc6 	add.w	ip, r4, #396	@ 0x18c
 8003742:	f8df a15c 	ldr.w	sl, [pc, #348]	@ 80038a0 <_ZN13motorViewBaseC1Ev+0x360>
 8003746:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800374a:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    air_motor.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VK8P));
 800374e:	a90e      	add	r1, sp, #56	@ 0x38
 8003750:	9801      	ldr	r0, [sp, #4]
 8003752:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
 8003756:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 800375a:	f008 fc87 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800375e:	9901      	ldr	r1, [sp, #4]
 8003760:	4628      	mov	r0, r5
        alpha = newAlpha;
 8003762:	f884 7186 	strb.w	r7, [r4, #390]	@ 0x186
 8003766:	f006 ff07 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    led.setXY(138, 202);
 800376a:	22ca      	movs	r2, #202	@ 0xca
 800376c:	9802      	ldr	r0, [sp, #8]
 800376e:	218a      	movs	r1, #138	@ 0x8a
 8003770:	f7fe fd8d 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003774:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 8003778:	9902      	ldr	r1, [sp, #8]
 800377a:	4640      	mov	r0, r8
        color = newColor;
 800377c:	f8c4 31c8 	str.w	r3, [r4, #456]	@ 0x1c8
        linespace = space;
 8003780:	f8a4 61cc 	strh.w	r6, [r4, #460]	@ 0x1cc
        boundingArea = calculateBoundingArea();
 8003784:	f008 f9ca 	bl	800bb1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003788:	f504 7cea 	add.w	ip, r4, #468	@ 0x1d4
 800378c:	2301      	movs	r3, #1
 800378e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003792:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    led.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3XZ2));
 8003796:	a90e      	add	r1, sp, #56	@ 0x38
 8003798:	9802      	ldr	r0, [sp, #8]
 800379a:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 800379e:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
 80037a2:	f008 fc63 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80037a6:	9902      	ldr	r1, [sp, #8]
 80037a8:	4628      	mov	r0, r5
        alpha = newAlpha;
 80037aa:	f884 71ce 	strb.w	r7, [r4, #462]	@ 0x1ce
 80037ae:	f006 fee3 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    water_motor.setXY(94, 121);
 80037b2:	2279      	movs	r2, #121	@ 0x79
 80037b4:	9803      	ldr	r0, [sp, #12]
 80037b6:	215e      	movs	r1, #94	@ 0x5e
 80037b8:	f7fe fd69 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80037bc:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 80037c0:	9903      	ldr	r1, [sp, #12]
 80037c2:	4640      	mov	r0, r8
        color = newColor;
 80037c4:	f8c4 3210 	str.w	r3, [r4, #528]	@ 0x210
        linespace = space;
 80037c8:	f8a4 6214 	strh.w	r6, [r4, #532]	@ 0x214
        boundingArea = calculateBoundingArea();
 80037cc:	f008 f9a6 	bl	800bb1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80037d0:	f504 7307 	add.w	r3, r4, #540	@ 0x21c
 80037d4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80037d8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    water_motor.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CHE4));
 80037dc:	a90e      	add	r1, sp, #56	@ 0x38
 80037de:	9803      	ldr	r0, [sp, #12]
 80037e0:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 80037e4:	2603      	movs	r6, #3
 80037e6:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
 80037ea:	f008 fc3f 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80037ee:	9903      	ldr	r1, [sp, #12]
 80037f0:	4628      	mov	r0, r5
        alpha = newAlpha;
 80037f2:	f884 7216 	strb.w	r7, [r4, #534]	@ 0x216
 80037f6:	f006 febf 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    air_button.setXY(274, 28);
 80037fa:	9805      	ldr	r0, [sp, #20]
 80037fc:	221c      	movs	r2, #28
 80037fe:	f44f 7189 	mov.w	r1, #274	@ 0x112
 8003802:	f7fe fd44 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8003806:	aa0e      	add	r2, sp, #56	@ 0x38
 8003808:	a90d      	add	r1, sp, #52	@ 0x34
 800380a:	9805      	ldr	r0, [sp, #20]
        originalPressed = bitmapPressed;
 800380c:	f8a4 925c 	strh.w	r9, [r4, #604]	@ 0x25c
 8003810:	f8ad 6034 	strh.w	r6, [sp, #52]	@ 0x34
 8003814:	f8ad 9038 	strh.w	r9, [sp, #56]	@ 0x38
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8003818:	f008 fc83 	bl	800c122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800381c:	9905      	ldr	r1, [sp, #20]
 800381e:	4628      	mov	r0, r5
 8003820:	f8c4 b250 	str.w	fp, [r4, #592]	@ 0x250
 8003824:	f006 fea8 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    water_button.setXY(274, 105);
 8003828:	9806      	ldr	r0, [sp, #24]
 800382a:	2269      	movs	r2, #105	@ 0x69
 800382c:	f44f 7189 	mov.w	r1, #274	@ 0x112
 8003830:	f7fe fd2d 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003834:	aa0e      	add	r2, sp, #56	@ 0x38
 8003836:	a90d      	add	r1, sp, #52	@ 0x34
 8003838:	9806      	ldr	r0, [sp, #24]
        originalPressed = bitmapPressed;
 800383a:	f8a4 9294 	strh.w	r9, [r4, #660]	@ 0x294
 800383e:	f8ad 6034 	strh.w	r6, [sp, #52]	@ 0x34
 8003842:	f8ad 9038 	strh.w	r9, [sp, #56]	@ 0x38
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8003846:	f008 fc6c 	bl	800c122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800384a:	9906      	ldr	r1, [sp, #24]
 800384c:	4628      	mov	r0, r5
 800384e:	f8c4 b288 	str.w	fp, [r4, #648]	@ 0x288
 8003852:	f006 fe91 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    led_button.setXY(274, 188);
 8003856:	9807      	ldr	r0, [sp, #28]
 8003858:	22bc      	movs	r2, #188	@ 0xbc
 800385a:	f44f 7189 	mov.w	r1, #274	@ 0x112
 800385e:	f7fe fd16 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003862:	aa0e      	add	r2, sp, #56	@ 0x38
 8003864:	a90d      	add	r1, sp, #52	@ 0x34
 8003866:	9807      	ldr	r0, [sp, #28]
        originalPressed = bitmapPressed;
 8003868:	f8a4 92cc 	strh.w	r9, [r4, #716]	@ 0x2cc
 800386c:	f8ad 6034 	strh.w	r6, [sp, #52]	@ 0x34
 8003870:	f8ad 9038 	strh.w	r9, [sp, #56]	@ 0x38
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8003874:	f008 fc55 	bl	800c122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003878:	4628      	mov	r0, r5
 800387a:	9907      	ldr	r1, [sp, #28]
 800387c:	f8c4 b2c0 	str.w	fp, [r4, #704]	@ 0x2c0
 8003880:	f006 fe7a 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003884:	4620      	mov	r0, r4
 8003886:	b011      	add	sp, #68	@ 0x44
 8003888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800388c:	08020d28 	.word	0x08020d28
 8003890:	080214a0 	.word	0x080214a0
 8003894:	08021508 	.word	0x08021508
 8003898:	08020d10 	.word	0x08020d10
 800389c:	0800345f 	.word	0x0800345f
 80038a0:	0802030c 	.word	0x0802030c

080038a4 <_ZN8touchgfx8TextArea8setWidthEs>:
    virtual void setWidth(int16_t width)
 80038a4:	b530      	push	{r4, r5, lr}
 80038a6:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80038a8:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 80038aa:	4604      	mov	r4, r0
        rect.width = width;
 80038ac:	8101      	strh	r1, [r0, #8]
        boundingArea = calculateBoundingArea();
 80038ae:	466d      	mov	r5, sp
 80038b0:	4601      	mov	r1, r0
 80038b2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80038b6:	343c      	adds	r4, #60	@ 0x3c
 80038b8:	4628      	mov	r0, r5
 80038ba:	4798      	blx	r3
 80038bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80038c0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80038c4:	b005      	add	sp, #20
 80038c6:	bd30      	pop	{r4, r5, pc}

080038c8 <_ZN8touchgfx8TextArea9setHeightEs>:
    virtual void setHeight(int16_t height)
 80038c8:	b530      	push	{r4, r5, lr}
 80038ca:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80038cc:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 80038ce:	4604      	mov	r4, r0
        rect.height = height;
 80038d0:	8141      	strh	r1, [r0, #10]
        boundingArea = calculateBoundingArea();
 80038d2:	466d      	mov	r5, sp
 80038d4:	4601      	mov	r1, r0
 80038d6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80038da:	343c      	adds	r4, #60	@ 0x3c
 80038dc:	4628      	mov	r0, r5
 80038de:	4798      	blx	r3
 80038e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80038e4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80038e8:	b005      	add	sp, #20
 80038ea:	bd30      	pop	{r4, r5, pc}

080038ec <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80038ec:	2200      	movs	r2, #0
 80038ee:	8002      	strh	r2, [r0, #0]
 80038f0:	8042      	strh	r2, [r0, #2]
 80038f2:	8082      	strh	r2, [r0, #4]
 80038f4:	80c2      	strh	r2, [r0, #6]
    }
 80038f6:	4770      	bx	lr

080038f8 <_ZN8touchgfx8TextArea8setAlphaEh>:
        alpha = newAlpha;
 80038f8:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 80038fc:	4770      	bx	lr

080038fe <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
 80038fe:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003900:	b570      	push	{r4, r5, r6, lr}
 8003902:	4604      	mov	r4, r0
        setX(x);
 8003904:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003906:	4615      	mov	r5, r2
        setX(x);
 8003908:	4798      	blx	r3
        setBaselineY(baselineY);
 800390a:	6823      	ldr	r3, [r4, #0]
 800390c:	4620      	mov	r0, r4
 800390e:	4629      	mov	r1, r5
 8003910:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 8003912:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8003916:	4718      	bx	r3

08003918 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
    }
 8003918:	2000      	movs	r0, #0
 800391a:	4770      	bx	lr

0800391c <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800391c:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 800391e:	4770      	bx	lr

08003920 <_ZN8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003920:	4770      	bx	lr

08003922 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8003922:	4770      	bx	lr

08003924 <_ZN8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003924:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003926:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 8003928:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800392a:	68c2      	ldr	r2, [r0, #12]
 800392c:	689b      	ldr	r3, [r3, #8]
 800392e:	1055      	asrs	r5, r2, #1
 8003930:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003934:	07d2      	lsls	r2, r2, #31
 8003936:	bf48      	it	mi
 8003938:	5962      	ldrmi	r2, [r4, r5]
    }
 800393a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800393c:	bf48      	it	mi
 800393e:	58d3      	ldrmi	r3, [r2, r3]
 8003940:	4718      	bx	r3

08003942 <_ZNK8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8003942:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003944:	6840      	ldr	r0, [r0, #4]
 8003946:	b130      	cbz	r0, 8003956 <_ZNK8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003948:	689a      	ldr	r2, [r3, #8]
 800394a:	b91a      	cbnz	r2, 8003954 <_ZNK8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 800394c:	68d8      	ldr	r0, [r3, #12]
 800394e:	f000 0001 	and.w	r0, r0, #1
 8003952:	4770      	bx	lr
 8003954:	2001      	movs	r0, #1
    }
 8003956:	4770      	bx	lr

08003958 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8003958:	b510      	push	{r4, lr}
 800395a:	4604      	mov	r4, r0
 800395c:	214c      	movs	r1, #76	@ 0x4c
 800395e:	f01a fffe 	bl	801e95e <_ZdlPvj>
 8003962:	4620      	mov	r0, r4
 8003964:	bd10      	pop	{r4, pc}

08003966 <_ZN8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003966:	b510      	push	{r4, lr}
 8003968:	4604      	mov	r4, r0
 800396a:	2110      	movs	r1, #16
 800396c:	f01a fff7 	bl	801e95e <_ZdlPvj>
 8003970:	4620      	mov	r0, r4
 8003972:	bd10      	pop	{r4, pc}

08003974 <_ZN14sensorViewBase11setupScreenEv>:
{

}

void sensorViewBase::setupScreen()
{
 8003974:	b510      	push	{r4, lr}
 8003976:	4604      	mov	r4, r0
    ex1.initialize();
 8003978:	3098      	adds	r0, #152	@ 0x98
 800397a:	f000 fc05 	bl	8004188 <_ZN16CustomContainer110initializeEv>
    ex2.initialize();
 800397e:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 8003982:	f000 fc01 	bl	8004188 <_ZN16CustomContainer110initializeEv>
    ex3.initialize();
 8003986:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800398a:	f000 fbfd 	bl	8004188 <_ZN16CustomContainer110initializeEv>
    ex4.initialize();
 800398e:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 8003992:	f000 fbf9 	bl	8004188 <_ZN16CustomContainer110initializeEv>
    ex5.initialize();
 8003996:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
}
 800399a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ex5.initialize();
 800399e:	f000 bbf3 	b.w	8004188 <_ZN16CustomContainer110initializeEv>

080039a2 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80039a2:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80039a4:	f7fe fc64 	bl	8002270 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80039a8:	bd08      	pop	{r3, pc}
	...

080039ac <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80039ac:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80039ae:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80039b0:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
    virtual void setBaselineY(int16_t baselineY)
 80039b2:	4604      	mov	r4, r0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80039b4:	4b11      	ldr	r3, [pc, #68]	@ (80039fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80039b6:	b28d      	uxth	r5, r1
 80039b8:	681b      	ldr	r3, [r3, #0]
 80039ba:	b92b      	cbnz	r3, 80039c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80039bc:	4b10      	ldr	r3, [pc, #64]	@ (8003a00 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80039be:	216c      	movs	r1, #108	@ 0x6c
 80039c0:	4a10      	ldr	r2, [pc, #64]	@ (8003a04 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80039c2:	4811      	ldr	r0, [pc, #68]	@ (8003a08 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80039c4:	f01a fffa 	bl	801e9bc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80039c8:	4910      	ldr	r1, [pc, #64]	@ (8003a0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80039ca:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80039cc:	8809      	ldrh	r1, [r1, #0]
 80039ce:	4291      	cmp	r1, r2
 80039d0:	d803      	bhi.n	80039da <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80039d2:	4b0f      	ldr	r3, [pc, #60]	@ (8003a10 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80039d4:	216d      	movs	r1, #109	@ 0x6d
 80039d6:	4a0b      	ldr	r2, [pc, #44]	@ (8003a04 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80039d8:	e7f3      	b.n	80039c2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80039da:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80039de:	4b0d      	ldr	r3, [pc, #52]	@ (8003a14 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80039e0:	681b      	ldr	r3, [r3, #0]
 80039e2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80039e6:	6803      	ldr	r3, [r0, #0]
 80039e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80039ea:	4798      	blx	r3
 80039ec:	1a29      	subs	r1, r5, r0
 80039ee:	4633      	mov	r3, r6
 80039f0:	4620      	mov	r0, r4
 80039f2:	b209      	sxth	r1, r1
    }
 80039f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80039f8:	4718      	bx	r3
 80039fa:	bf00      	nop
 80039fc:	20015110 	.word	0x20015110
 8003a00:	08020964 	.word	0x08020964
 8003a04:	080209a6 	.word	0x080209a6
 8003a08:	080209e1 	.word	0x080209e1
 8003a0c:	20015114 	.word	0x20015114
 8003a10:	08020d60 	.word	0x08020d60
 8003a14:	20015118 	.word	0x20015118

08003a18 <_ZN14sensorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void sensorViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back_main_btn)
 8003a18:	f500 60c2 	add.w	r0, r0, #1552	@ 0x610
 8003a1c:	4288      	cmp	r0, r1
{
 8003a1e:	b508      	push	{r3, lr}
    if (&src == &back_main_btn)
 8003a20:	d105      	bne.n	8003a2e <_ZN14sensorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~sensorViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003a22:	f00a faed 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
        //back_main
        //When back_main_btn clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    }
}
 8003a26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMainScreenNoTransition();
 8003a2a:	f7fe bd61 	b.w	80024f0 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
}
 8003a2e:	bd08      	pop	{r3, pc}

08003a30 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003a30:	2200      	movs	r2, #0
 8003a32:	f04f 31ff 	mov.w	r1, #4294967295
              text(0)
 8003a36:	6082      	str	r2, [r0, #8]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003a38:	e9c0 2100 	strd	r2, r1, [r0]
    }
 8003a3c:	4770      	bx	lr

08003a3e <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003a3e:	b570      	push	{r4, r5, r6, lr}
 8003a40:	4604      	mov	r4, r0
 8003a42:	461d      	mov	r5, r3
 8003a44:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003a48:	f7fe fc21 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003a4c:	6823      	ldr	r3, [r4, #0]
 8003a4e:	4629      	mov	r1, r5
 8003a50:	4620      	mov	r0, r4
 8003a52:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003a54:	4798      	blx	r3
        setHeight(height);
 8003a56:	6823      	ldr	r3, [r4, #0]
 8003a58:	4631      	mov	r1, r6
 8003a5a:	4620      	mov	r0, r4
 8003a5c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8003a5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8003a62:	4718      	bx	r3

08003a64 <_ZN16CustomContainer1D1Ev>:

class CustomContainer1 : public CustomContainer1Base
{
public:
    CustomContainer1();
    virtual ~CustomContainer1() {}
 8003a64:	4b03      	ldr	r3, [pc, #12]	@ (8003a74 <_ZN16CustomContainer1D1Ev+0x10>)
 8003a66:	b510      	push	{r4, lr}
 8003a68:	4604      	mov	r4, r0
 8003a6a:	6003      	str	r3, [r0, #0]
 8003a6c:	f7fe fbf7 	bl	800225e <_ZN20CustomContainer1BaseD1Ev>
 8003a70:	4620      	mov	r0, r4
 8003a72:	bd10      	pop	{r4, pc}
 8003a74:	08020ed0 	.word	0x08020ed0

08003a78 <_ZN14sensorViewBaseD1Ev>:
sensorViewBase::~sensorViewBase()
 8003a78:	4b0c      	ldr	r3, [pc, #48]	@ (8003aac <_ZN14sensorViewBaseD1Ev+0x34>)
 8003a7a:	b510      	push	{r4, lr}
 8003a7c:	4604      	mov	r4, r0
 8003a7e:	6003      	str	r3, [r0, #0]
}
 8003a80:	f500 702a 	add.w	r0, r0, #680	@ 0x2a8
 8003a84:	f7ff ffee 	bl	8003a64 <_ZN16CustomContainer1D1Ev>
 8003a88:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 8003a8c:	f7ff ffea 	bl	8003a64 <_ZN16CustomContainer1D1Ev>
 8003a90:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 8003a94:	f7ff ffe6 	bl	8003a64 <_ZN16CustomContainer1D1Ev>
 8003a98:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 8003a9c:	f7ff ffe2 	bl	8003a64 <_ZN16CustomContainer1D1Ev>
 8003aa0:	f104 0098 	add.w	r0, r4, #152	@ 0x98
 8003aa4:	f7ff ffde 	bl	8003a64 <_ZN16CustomContainer1D1Ev>
 8003aa8:	4620      	mov	r0, r4
 8003aaa:	bd10      	pop	{r4, pc}
 8003aac:	08020e9c 	.word	0x08020e9c

08003ab0 <_ZN14sensorViewBaseD0Ev>:
sensorViewBase::~sensorViewBase()
 8003ab0:	b510      	push	{r4, lr}
 8003ab2:	4604      	mov	r4, r0
}
 8003ab4:	f7ff ffe0 	bl	8003a78 <_ZN14sensorViewBaseD1Ev>
 8003ab8:	f44f 61d7 	mov.w	r1, #1720	@ 0x6b8
 8003abc:	4620      	mov	r0, r4
 8003abe:	f01a ff4e 	bl	801e95e <_ZdlPvj>
 8003ac2:	4620      	mov	r0, r4
 8003ac4:	bd10      	pop	{r4, pc}

08003ac6 <_ZN16CustomContainer1D0Ev>:
 8003ac6:	b510      	push	{r4, lr}
 8003ac8:	4604      	mov	r4, r0
 8003aca:	f7ff ffcb 	bl	8003a64 <_ZN16CustomContainer1D1Ev>
 8003ace:	2184      	movs	r1, #132	@ 0x84
 8003ad0:	4620      	mov	r0, r4
 8003ad2:	f01a ff44 	bl	801e95e <_ZdlPvj>
 8003ad6:	4620      	mov	r0, r4
 8003ad8:	bd10      	pop	{r4, pc}
	...

08003adc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003adc:	b510      	push	{r4, lr}
 8003ade:	4604      	mov	r4, r0
        : TextArea()
 8003ae0:	f7ff fcfa 	bl	80034d8 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003ae4:	4b02      	ldr	r3, [pc, #8]	@ (8003af0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
    }
 8003ae6:	4620      	mov	r0, r4
        : TextAreaWithWildcardBase(), wc1(0)
 8003ae8:	6023      	str	r3, [r4, #0]
 8003aea:	2300      	movs	r3, #0
 8003aec:	64a3      	str	r3, [r4, #72]	@ 0x48
    }
 8003aee:	bd10      	pop	{r4, pc}
 8003af0:	08020df4 	.word	0x08020df4

08003af4 <_ZN14sensorViewBaseC1Ev>:
sensorViewBase::sensorViewBase() :
 8003af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003af8:	4604      	mov	r4, r0
 8003afa:	b099      	sub	sp, #100	@ 0x64
 8003afc:	2600      	movs	r6, #0
 8003afe:	f00b fd9f 	bl	800f640 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &sensorViewBase::buttonCallbackHandler)
 8003b02:	46a0      	mov	r8, r4
 8003b04:	4be0      	ldr	r3, [pc, #896]	@ (8003e88 <_ZN14sensorViewBaseC1Ev+0x394>)
        : Widget(), alpha(255), color(0)
 8003b06:	2226      	movs	r2, #38	@ 0x26
 8003b08:	4631      	mov	r1, r6
 8003b0a:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8003b0c:	f104 056c 	add.w	r5, r4, #108	@ 0x6c
 8003b10:	f848 3b40 	str.w	r3, [r8], #64
 8003b14:	4640      	mov	r0, r8
 8003b16:	f01b f9ed 	bl	801eef4 <memset>
 8003b1a:	4640      	mov	r0, r8
 8003b1c:	f7ff f870 	bl	8002c00 <_ZN8touchgfx6WidgetC1Ev>
 8003b20:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 8003b24:	4bd9      	ldr	r3, [pc, #868]	@ (8003e8c <_ZN14sensorViewBaseC1Ev+0x398>)
 8003b26:	f64f 77ff 	movw	r7, #65535	@ 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8003b2a:	2226      	movs	r2, #38	@ 0x26
 8003b2c:	4631      	mov	r1, r6
 8003b2e:	6423      	str	r3, [r4, #64]	@ 0x40
 8003b30:	4628      	mov	r0, r5
 8003b32:	f884 9066 	strb.w	r9, [r4, #102]	@ 0x66
 8003b36:	f104 0b98 	add.w	fp, r4, #152	@ 0x98
        : color(col)
 8003b3a:	66a6      	str	r6, [r4, #104]	@ 0x68
 8003b3c:	f504 7a8e 	add.w	sl, r4, #284	@ 0x11c
 8003b40:	f8ad 7058 	strh.w	r7, [sp, #88]	@ 0x58
 8003b44:	f01b f9d6 	bl	801eef4 <memset>
 8003b48:	4628      	mov	r0, r5
 8003b4a:	f7ff f859 	bl	8002c00 <_ZN8touchgfx6WidgetC1Ev>
 8003b4e:	4bd0      	ldr	r3, [pc, #832]	@ (8003e90 <_ZN14sensorViewBaseC1Ev+0x39c>)
        Image::setBitmap(bmp);
 8003b50:	a916      	add	r1, sp, #88	@ 0x58
 8003b52:	4628      	mov	r0, r5
        : Widget(), bitmap(bmp), alpha(255)
 8003b54:	66e3      	str	r3, [r4, #108]	@ 0x6c
 8003b56:	f8bd 3058 	ldrh.w	r3, [sp, #88]	@ 0x58
 8003b5a:	f884 9094 	strb.w	r9, [r4, #148]	@ 0x94
 8003b5e:	f504 79d0 	add.w	r9, r4, #416	@ 0x1a0
 8003b62:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
        Image::setBitmap(bmp);
 8003b66:	f008 fbfa 	bl	800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003b6a:	4658      	mov	r0, fp
 8003b6c:	f000 fb02 	bl	8004174 <_ZN16CustomContainer1C1Ev>
 8003b70:	4650      	mov	r0, sl
 8003b72:	f000 faff 	bl	8004174 <_ZN16CustomContainer1C1Ev>
 8003b76:	4648      	mov	r0, r9
 8003b78:	f000 fafc 	bl	8004174 <_ZN16CustomContainer1C1Ev>
 8003b7c:	f504 7309 	add.w	r3, r4, #548	@ 0x224
 8003b80:	4618      	mov	r0, r3
 8003b82:	930e      	str	r3, [sp, #56]	@ 0x38
 8003b84:	f000 faf6 	bl	8004174 <_ZN16CustomContainer1C1Ev>
 8003b88:	f504 732a 	add.w	r3, r4, #680	@ 0x2a8
 8003b8c:	4618      	mov	r0, r3
 8003b8e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8003b90:	f000 faf0 	bl	8004174 <_ZN16CustomContainer1C1Ev>
 8003b94:	f504 734b 	add.w	r3, r4, #812	@ 0x32c
 8003b98:	4618      	mov	r0, r3
 8003b9a:	9303      	str	r3, [sp, #12]
 8003b9c:	f7ff fc9c 	bl	80034d8 <_ZN8touchgfx8TextAreaC1Ev>
 8003ba0:	f504 735d 	add.w	r3, r4, #884	@ 0x374
 8003ba4:	4618      	mov	r0, r3
 8003ba6:	9304      	str	r3, [sp, #16]
 8003ba8:	f7ff fc96 	bl	80034d8 <_ZN8touchgfx8TextAreaC1Ev>
 8003bac:	f504 736f 	add.w	r3, r4, #956	@ 0x3bc
 8003bb0:	4618      	mov	r0, r3
 8003bb2:	9305      	str	r3, [sp, #20]
 8003bb4:	f7ff fc90 	bl	80034d8 <_ZN8touchgfx8TextAreaC1Ev>
 8003bb8:	f204 4304 	addw	r3, r4, #1028	@ 0x404
 8003bbc:	4618      	mov	r0, r3
 8003bbe:	9306      	str	r3, [sp, #24]
 8003bc0:	f7ff fc8a 	bl	80034d8 <_ZN8touchgfx8TextAreaC1Ev>
 8003bc4:	f204 434c 	addw	r3, r4, #1100	@ 0x44c
 8003bc8:	4618      	mov	r0, r3
 8003bca:	9307      	str	r3, [sp, #28]
 8003bcc:	f7ff fc84 	bl	80034d8 <_ZN8touchgfx8TextAreaC1Ev>
 8003bd0:	f204 4394 	addw	r3, r4, #1172	@ 0x494
 8003bd4:	4618      	mov	r0, r3
 8003bd6:	9308      	str	r3, [sp, #32]
 8003bd8:	f7ff ff80 	bl	8003adc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003bdc:	f504 639c 	add.w	r3, r4, #1248	@ 0x4e0
 8003be0:	4618      	mov	r0, r3
 8003be2:	9309      	str	r3, [sp, #36]	@ 0x24
 8003be4:	f7ff ff7a 	bl	8003adc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003be8:	f204 532c 	addw	r3, r4, #1324	@ 0x52c
 8003bec:	4618      	mov	r0, r3
 8003bee:	930a      	str	r3, [sp, #40]	@ 0x28
 8003bf0:	f7ff ff74 	bl	8003adc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003bf4:	f504 63af 	add.w	r3, r4, #1400	@ 0x578
 8003bf8:	4618      	mov	r0, r3
 8003bfa:	930c      	str	r3, [sp, #48]	@ 0x30
 8003bfc:	f7ff ff6e 	bl	8003adc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c00:	f204 53c4 	addw	r3, r4, #1476	@ 0x5c4
 8003c04:	4618      	mov	r0, r3
 8003c06:	930d      	str	r3, [sp, #52]	@ 0x34
 8003c08:	f7ff ff68 	bl	8003adc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c0c:	f504 63c2 	add.w	r3, r4, #1552	@ 0x610
        : Widget(), action(), pressed(false)
 8003c10:	2226      	movs	r2, #38	@ 0x26
 8003c12:	4631      	mov	r1, r6
 8003c14:	4618      	mov	r0, r3
 8003c16:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003c18:	f01b f96c 	bl	801eef4 <memset>
 8003c1c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8003c1e:	f7fe ffef 	bl	8002c00 <_ZN8touchgfx6WidgetC1Ev>
        touchable = touch;
 8003c22:	2301      	movs	r3, #1
    __background.setPosition(0, 0, 480, 272);
 8003c24:	4632      	mov	r2, r6
 8003c26:	4640      	mov	r0, r8
 8003c28:	f884 3634 	strb.w	r3, [r4, #1588]	@ 0x634
 8003c2c:	4631      	mov	r1, r6
        : AbstractButton(), up(), down(), alpha(255)
 8003c2e:	4b99      	ldr	r3, [pc, #612]	@ (8003e94 <_ZN14sensorViewBaseC1Ev+0x3a0>)
 8003c30:	f8a4 763e 	strh.w	r7, [r4, #1598]	@ 0x63e
 8003c34:	f8c4 3610 	str.w	r3, [r4, #1552]	@ 0x610
        : pobject(pObject), pmemfun(pmemfun_1)
 8003c38:	4b97      	ldr	r3, [pc, #604]	@ (8003e98 <_ZN14sensorViewBaseC1Ev+0x3a4>)
 8003c3a:	f8a4 7640 	strh.w	r7, [r4, #1600]	@ 0x640
 8003c3e:	f8c4 36a8 	str.w	r3, [r4, #1704]	@ 0x6a8
 8003c42:	4b96      	ldr	r3, [pc, #600]	@ (8003e9c <_ZN14sensorViewBaseC1Ev+0x3a8>)
 8003c44:	f884 7642 	strb.w	r7, [r4, #1602]	@ 0x642
 8003c48:	1d27      	adds	r7, r4, #4
 8003c4a:	f8c4 36b0 	str.w	r3, [r4, #1712]	@ 0x6b0
 8003c4e:	f44f 7388 	mov.w	r3, #272	@ 0x110
 8003c52:	f8c4 6638 	str.w	r6, [r4, #1592]	@ 0x638
 8003c56:	f884 663c 	strb.w	r6, [r4, #1596]	@ 0x63c
 8003c5a:	f8c4 46ac 	str.w	r4, [r4, #1708]	@ 0x6ac
 8003c5e:	f8c4 66b4 	str.w	r6, [r4, #1716]	@ 0x6b4
 8003c62:	9300      	str	r3, [sp, #0]
 8003c64:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8003c68:	f7ff fee9 	bl	8003a3e <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003c6c:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003c70:	4641      	mov	r1, r8
 8003c72:	4638      	mov	r0, r7
 8003c74:	66a3      	str	r3, [r4, #104]	@ 0x68
        color = newColor;
 8003c76:	f04f 38ff 	mov.w	r8, #4294967295
 8003c7a:	f006 fc7d 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 8003c7e:	4632      	mov	r2, r6
 8003c80:	4628      	mov	r0, r5
 8003c82:	4631      	mov	r1, r6
 8003c84:	f7fe fb03 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_DARK_ID));
 8003c88:	4628      	mov	r0, r5
 8003c8a:	a916      	add	r1, sp, #88	@ 0x58
 8003c8c:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
 8003c90:	f008 fb65 	bl	800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003c94:	4629      	mov	r1, r5
 8003c96:	4638      	mov	r0, r7
        boundingArea = calculateBoundingArea();
 8003c98:	ad10      	add	r5, sp, #64	@ 0x40
 8003c9a:	f006 fc6d 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex1.setXY(100, 15);
 8003c9e:	220f      	movs	r2, #15
 8003ca0:	4658      	mov	r0, fp
 8003ca2:	2164      	movs	r1, #100	@ 0x64
 8003ca4:	f7fe faf3 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003ca8:	4659      	mov	r1, fp
 8003caa:	4638      	mov	r0, r7
        : typedTextId(id)
 8003cac:	f8df b1f0 	ldr.w	fp, [pc, #496]	@ 8003ea0 <_ZN14sensorViewBaseC1Ev+0x3ac>
 8003cb0:	f006 fc62 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex2.setXY(250, 15);
 8003cb4:	220f      	movs	r2, #15
 8003cb6:	4650      	mov	r0, sl
 8003cb8:	21fa      	movs	r1, #250	@ 0xfa
 8003cba:	f7fe fae8 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003cbe:	4651      	mov	r1, sl
 8003cc0:	4638      	mov	r0, r7
    temperature.setPosition(106, 19, 120, 40);
 8003cc2:	f04f 0a28 	mov.w	sl, #40	@ 0x28
 8003cc6:	f006 fc57 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex3.setXY(25, 145);
 8003cca:	2291      	movs	r2, #145	@ 0x91
 8003ccc:	4648      	mov	r0, r9
 8003cce:	2119      	movs	r1, #25
 8003cd0:	f7fe fadd 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003cd4:	4649      	mov	r1, r9
 8003cd6:	4638      	mov	r0, r7
        alpha = newAlpha;
 8003cd8:	f04f 0996 	mov.w	r9, #150	@ 0x96
 8003cdc:	f006 fc4c 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex4.setXY(175, 145);
 8003ce0:	2291      	movs	r2, #145	@ 0x91
 8003ce2:	21af      	movs	r1, #175	@ 0xaf
 8003ce4:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8003ce6:	f7fe fad2 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003cea:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8003cec:	4638      	mov	r0, r7
 8003cee:	f006 fc43 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex5.setXY(325, 145);
 8003cf2:	2291      	movs	r2, #145	@ 0x91
 8003cf4:	f240 1145 	movw	r1, #325	@ 0x145
 8003cf8:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8003cfa:	f7fe fac8 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003cfe:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8003d00:	4638      	mov	r0, r7
 8003d02:	f006 fc39 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temperature.setPosition(106, 19, 120, 40);
 8003d06:	2378      	movs	r3, #120	@ 0x78
 8003d08:	2213      	movs	r2, #19
 8003d0a:	216a      	movs	r1, #106	@ 0x6a
 8003d0c:	9803      	ldr	r0, [sp, #12]
 8003d0e:	f8cd a000 	str.w	sl, [sp]
 8003d12:	f7ff fe94 	bl	8003a3e <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003d16:	9903      	ldr	r1, [sp, #12]
 8003d18:	4628      	mov	r0, r5
        color = newColor;
 8003d1a:	f8c4 835c 	str.w	r8, [r4, #860]	@ 0x35c
        linespace = space;
 8003d1e:	f8a4 6360 	strh.w	r6, [r4, #864]	@ 0x360
        boundingArea = calculateBoundingArea();
 8003d22:	f007 fefb 	bl	800bb1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003d26:	f504 735a 	add.w	r3, r4, #872	@ 0x368
 8003d2a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d2e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003d32:	2312      	movs	r3, #18
    temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NNZ2));
 8003d34:	a916      	add	r1, sp, #88	@ 0x58
 8003d36:	9803      	ldr	r0, [sp, #12]
 8003d38:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003d3c:	f8cd b058 	str.w	fp, [sp, #88]	@ 0x58
 8003d40:	f008 f994 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003d44:	9903      	ldr	r1, [sp, #12]
 8003d46:	4638      	mov	r0, r7
        alpha = newAlpha;
 8003d48:	f884 9362 	strb.w	r9, [r4, #866]	@ 0x362
 8003d4c:	f006 fc14 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    humidity.setPosition(256, 19, 120, 40);
 8003d50:	2378      	movs	r3, #120	@ 0x78
 8003d52:	2213      	movs	r2, #19
 8003d54:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003d58:	9804      	ldr	r0, [sp, #16]
 8003d5a:	f8cd a000 	str.w	sl, [sp]
 8003d5e:	f7ff fe6e 	bl	8003a3e <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003d62:	9904      	ldr	r1, [sp, #16]
 8003d64:	4628      	mov	r0, r5
        color = newColor;
 8003d66:	f8c4 83a4 	str.w	r8, [r4, #932]	@ 0x3a4
        linespace = space;
 8003d6a:	f8a4 63a8 	strh.w	r6, [r4, #936]	@ 0x3a8
        boundingArea = calculateBoundingArea();
 8003d6e:	f007 fed5 	bl	800bb1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003d72:	f504 736c 	add.w	r3, r4, #944	@ 0x3b0
 8003d76:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d7a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003d7e:	2311      	movs	r3, #17
    humidity.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JSNQ));
 8003d80:	a916      	add	r1, sp, #88	@ 0x58
 8003d82:	9804      	ldr	r0, [sp, #16]
 8003d84:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003d88:	f8cd b058 	str.w	fp, [sp, #88]	@ 0x58
 8003d8c:	f008 f96e 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003d90:	9904      	ldr	r1, [sp, #16]
 8003d92:	4638      	mov	r0, r7
        alpha = newAlpha;
 8003d94:	f884 93aa 	strb.w	r9, [r4, #938]	@ 0x3aa
 8003d98:	f006 fbee 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ph.setPosition(29, 149, 120, 40);
 8003d9c:	2378      	movs	r3, #120	@ 0x78
 8003d9e:	2295      	movs	r2, #149	@ 0x95
 8003da0:	211d      	movs	r1, #29
 8003da2:	9805      	ldr	r0, [sp, #20]
 8003da4:	f8cd a000 	str.w	sl, [sp]
 8003da8:	f7ff fe49 	bl	8003a3e <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003dac:	9905      	ldr	r1, [sp, #20]
 8003dae:	4628      	mov	r0, r5
        color = newColor;
 8003db0:	f8c4 83ec 	str.w	r8, [r4, #1004]	@ 0x3ec
        linespace = space;
 8003db4:	f8a4 63f0 	strh.w	r6, [r4, #1008]	@ 0x3f0
        boundingArea = calculateBoundingArea();
 8003db8:	f007 feb0 	bl	800bb1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003dbc:	f504 737e 	add.w	r3, r4, #1016	@ 0x3f8
 8003dc0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003dc4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003dc8:	2310      	movs	r3, #16
    ph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HHCR));
 8003dca:	a916      	add	r1, sp, #88	@ 0x58
 8003dcc:	9805      	ldr	r0, [sp, #20]
 8003dce:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003dd2:	f8cd b058 	str.w	fp, [sp, #88]	@ 0x58
 8003dd6:	f008 f949 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003dda:	9905      	ldr	r1, [sp, #20]
 8003ddc:	4638      	mov	r0, r7
        alpha = newAlpha;
 8003dde:	f884 93f2 	strb.w	r9, [r4, #1010]	@ 0x3f2
 8003de2:	f006 fbc9 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tds.setPosition(181, 149, 120, 40);
 8003de6:	2378      	movs	r3, #120	@ 0x78
 8003de8:	2295      	movs	r2, #149	@ 0x95
 8003dea:	21b5      	movs	r1, #181	@ 0xb5
 8003dec:	9806      	ldr	r0, [sp, #24]
 8003dee:	f8cd a000 	str.w	sl, [sp]
 8003df2:	f7ff fe24 	bl	8003a3e <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003df6:	9906      	ldr	r1, [sp, #24]
 8003df8:	4628      	mov	r0, r5
        color = newColor;
 8003dfa:	f8c4 8434 	str.w	r8, [r4, #1076]	@ 0x434
        linespace = space;
 8003dfe:	f8a4 6438 	strh.w	r6, [r4, #1080]	@ 0x438
        boundingArea = calculateBoundingArea();
 8003e02:	f007 fe8b 	bl	800bb1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003e06:	f504 6388 	add.w	r3, r4, #1088	@ 0x440
 8003e0a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003e0e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003e12:	230f      	movs	r3, #15
    tds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_44AS));
 8003e14:	a916      	add	r1, sp, #88	@ 0x58
 8003e16:	9806      	ldr	r0, [sp, #24]
 8003e18:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003e1c:	f8cd b058 	str.w	fp, [sp, #88]	@ 0x58
 8003e20:	f008 f924 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e24:	9906      	ldr	r1, [sp, #24]
 8003e26:	4638      	mov	r0, r7
        alpha = newAlpha;
 8003e28:	f884 943a 	strb.w	r9, [r4, #1082]	@ 0x43a
 8003e2c:	f006 fba4 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    level.setPosition(331, 149, 120, 40);
 8003e30:	2378      	movs	r3, #120	@ 0x78
 8003e32:	2295      	movs	r2, #149	@ 0x95
 8003e34:	f240 114b 	movw	r1, #331	@ 0x14b
 8003e38:	9807      	ldr	r0, [sp, #28]
 8003e3a:	f8cd a000 	str.w	sl, [sp]
 8003e3e:	f7ff fdfe 	bl	8003a3e <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003e42:	9907      	ldr	r1, [sp, #28]
 8003e44:	4628      	mov	r0, r5
        color = newColor;
 8003e46:	f8c4 847c 	str.w	r8, [r4, #1148]	@ 0x47c
        linespace = space;
 8003e4a:	f8a4 6480 	strh.w	r6, [r4, #1152]	@ 0x480
        boundingArea = calculateBoundingArea();
 8003e4e:	f007 fe65 	bl	800bb1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003e52:	f504 6391 	add.w	r3, r4, #1160	@ 0x488
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e56:	f8df a04c 	ldr.w	sl, [pc, #76]	@ 8003ea4 <_ZN14sensorViewBaseC1Ev+0x3b0>
 8003e5a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003e5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003e62:	230e      	movs	r3, #14
    level.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1AZS));
 8003e64:	a916      	add	r1, sp, #88	@ 0x58
 8003e66:	9807      	ldr	r0, [sp, #28]
 8003e68:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003e6c:	f8cd b058 	str.w	fp, [sp, #88]	@ 0x58
 8003e70:	f008 f8fc 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e74:	9907      	ldr	r1, [sp, #28]
 8003e76:	4638      	mov	r0, r7
        alpha = newAlpha;
 8003e78:	f884 9482 	strb.w	r9, [r4, #1154]	@ 0x482
 8003e7c:	f006 fb7c 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_temperature.setPosition(104, 85, 122, 25);
 8003e80:	2319      	movs	r3, #25
 8003e82:	2255      	movs	r2, #85	@ 0x55
 8003e84:	2168      	movs	r1, #104	@ 0x68
 8003e86:	e00f      	b.n	8003ea8 <_ZN14sensorViewBaseC1Ev+0x3b4>
 8003e88:	08020e9c 	.word	0x08020e9c
 8003e8c:	080214a0 	.word	0x080214a0
 8003e90:	0802157c 	.word	0x0802157c
 8003e94:	08021508 	.word	0x08021508
 8003e98:	08020e84 	.word	0x08020e84
 8003e9c:	08003a19 	.word	0x08003a19
 8003ea0:	0802030c 	.word	0x0802030c
 8003ea4:	20015110 	.word	0x20015110
 8003ea8:	9808      	ldr	r0, [sp, #32]
 8003eaa:	9300      	str	r3, [sp, #0]
 8003eac:	237a      	movs	r3, #122	@ 0x7a
 8003eae:	f7ff fdc6 	bl	8003a3e <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003eb2:	f8d4 3494 	ldr.w	r3, [r4, #1172]	@ 0x494
 8003eb6:	9908      	ldr	r1, [sp, #32]
 8003eb8:	4628      	mov	r0, r5
 8003eba:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8003ebe:	f8c4 84c4 	str.w	r8, [r4, #1220]	@ 0x4c4
        linespace = space;
 8003ec2:	f8a4 64c8 	strh.w	r6, [r4, #1224]	@ 0x4c8
        boundingArea = calculateBoundingArea();
 8003ec6:	4798      	blx	r3
 8003ec8:	f504 639a 	add.w	r3, r4, #1232	@ 0x4d0
 8003ecc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ed0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(text_temperatureBuffer, TEXT_TEMPERATURE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7798).getText());
 8003ed4:	f204 6344 	addw	r3, r4, #1604	@ 0x644
 8003ed8:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003eda:	f8da 3000 	ldr.w	r3, [sl]
 8003ede:	b92b      	cbnz	r3, 8003eec <_ZN14sensorViewBaseC1Ev+0x3f8>
 8003ee0:	4b9c      	ldr	r3, [pc, #624]	@ (8004154 <_ZN14sensorViewBaseC1Ev+0x660>)
 8003ee2:	2160      	movs	r1, #96	@ 0x60
 8003ee4:	4a9c      	ldr	r2, [pc, #624]	@ (8004158 <_ZN14sensorViewBaseC1Ev+0x664>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ee6:	489d      	ldr	r0, [pc, #628]	@ (800415c <_ZN14sensorViewBaseC1Ev+0x668>)
 8003ee8:	f01a fd68 	bl	801e9bc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003eec:	f8df 9280 	ldr.w	r9, [pc, #640]	@ 8004170 <_ZN14sensorViewBaseC1Ev+0x67c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ef0:	f8b9 3000 	ldrh.w	r3, [r9]
 8003ef4:	2b09      	cmp	r3, #9
 8003ef6:	d803      	bhi.n	8003f00 <_ZN14sensorViewBaseC1Ev+0x40c>
 8003ef8:	4b99      	ldr	r3, [pc, #612]	@ (8004160 <_ZN14sensorViewBaseC1Ev+0x66c>)
 8003efa:	2161      	movs	r1, #97	@ 0x61
 8003efc:	4a96      	ldr	r2, [pc, #600]	@ (8004158 <_ZN14sensorViewBaseC1Ev+0x664>)
 8003efe:	e7f2      	b.n	8003ee6 <_ZN14sensorViewBaseC1Ev+0x3f2>
        return texts->getText(typedTextId);
 8003f00:	4b98      	ldr	r3, [pc, #608]	@ (8004164 <_ZN14sensorViewBaseC1Ev+0x670>)
 8003f02:	2109      	movs	r1, #9
 8003f04:	6818      	ldr	r0, [r3, #0]
 8003f06:	f7ff f979 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
 8003f0a:	4a97      	ldr	r2, [pc, #604]	@ (8004168 <_ZN14sensorViewBaseC1Ev+0x674>)
 8003f0c:	4603      	mov	r3, r0
 8003f0e:	210a      	movs	r1, #10
 8003f10:	9803      	ldr	r0, [sp, #12]
 8003f12:	f00d f819 	bl	8010f48 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003f16:	9a03      	ldr	r2, [sp, #12]
        : typedTextId(id)
 8003f18:	2314      	movs	r3, #20
    text_temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MTPN));
 8003f1a:	a916      	add	r1, sp, #88	@ 0x58
 8003f1c:	f8c4 24dc 	str.w	r2, [r4, #1244]	@ 0x4dc
 8003f20:	9808      	ldr	r0, [sp, #32]
 8003f22:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003f26:	f8cd b058 	str.w	fp, [sp, #88]	@ 0x58
 8003f2a:	f008 f89f 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003f2e:	9908      	ldr	r1, [sp, #32]
 8003f30:	4638      	mov	r0, r7
 8003f32:	f006 fb21 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_humidity.setPosition(250, 85, 126, 25);
 8003f36:	2219      	movs	r2, #25
 8003f38:	237e      	movs	r3, #126	@ 0x7e
 8003f3a:	21fa      	movs	r1, #250	@ 0xfa
 8003f3c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003f3e:	9200      	str	r2, [sp, #0]
 8003f40:	2255      	movs	r2, #85	@ 0x55
 8003f42:	f7ff fd7c 	bl	8003a3e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f46:	f8d4 34e0 	ldr.w	r3, [r4, #1248]	@ 0x4e0
 8003f4a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003f4c:	4628      	mov	r0, r5
 8003f4e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8003f52:	f8c4 8510 	str.w	r8, [r4, #1296]	@ 0x510
        linespace = space;
 8003f56:	f8a4 6514 	strh.w	r6, [r4, #1300]	@ 0x514
        boundingArea = calculateBoundingArea();
 8003f5a:	4798      	blx	r3
 8003f5c:	f204 531c 	addw	r3, r4, #1308	@ 0x51c
 8003f60:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003f64:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(text_humidityBuffer, TEXT_HUMIDITY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_F69V).getText());
 8003f68:	f504 62cb 	add.w	r2, r4, #1624	@ 0x658
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003f6c:	f8da 3000 	ldr.w	r3, [sl]
 8003f70:	9203      	str	r2, [sp, #12]
 8003f72:	2b00      	cmp	r3, #0
 8003f74:	d0b4      	beq.n	8003ee0 <_ZN14sensorViewBaseC1Ev+0x3ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003f76:	f8b9 3000 	ldrh.w	r3, [r9]
 8003f7a:	2b08      	cmp	r3, #8
 8003f7c:	d9bc      	bls.n	8003ef8 <_ZN14sensorViewBaseC1Ev+0x404>
        return texts->getText(typedTextId);
 8003f7e:	4b79      	ldr	r3, [pc, #484]	@ (8004164 <_ZN14sensorViewBaseC1Ev+0x670>)
 8003f80:	2108      	movs	r1, #8
 8003f82:	6818      	ldr	r0, [r3, #0]
 8003f84:	f7ff f93a 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
 8003f88:	4a77      	ldr	r2, [pc, #476]	@ (8004168 <_ZN14sensorViewBaseC1Ev+0x674>)
 8003f8a:	4603      	mov	r3, r0
 8003f8c:	210a      	movs	r1, #10
 8003f8e:	9803      	ldr	r0, [sp, #12]
 8003f90:	f00c ffda 	bl	8010f48 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003f94:	9a03      	ldr	r2, [sp, #12]
        : typedTextId(id)
 8003f96:	230d      	movs	r3, #13
    text_humidity.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D9RX));
 8003f98:	a916      	add	r1, sp, #88	@ 0x58
 8003f9a:	f8c4 2528 	str.w	r2, [r4, #1320]	@ 0x528
 8003f9e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003fa0:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003fa4:	f8cd b058 	str.w	fp, [sp, #88]	@ 0x58
 8003fa8:	f008 f860 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003fac:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003fae:	4638      	mov	r0, r7
 8003fb0:	f006 fae2 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_ph.setPosition(29, 215, 126, 25);
 8003fb4:	2219      	movs	r2, #25
 8003fb6:	237e      	movs	r3, #126	@ 0x7e
 8003fb8:	211d      	movs	r1, #29
 8003fba:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003fbc:	9200      	str	r2, [sp, #0]
 8003fbe:	22d7      	movs	r2, #215	@ 0xd7
 8003fc0:	f7ff fd3d 	bl	8003a3e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003fc4:	f8d4 352c 	ldr.w	r3, [r4, #1324]	@ 0x52c
 8003fc8:	4628      	mov	r0, r5
 8003fca:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003fcc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8003fd0:	f8c4 855c 	str.w	r8, [r4, #1372]	@ 0x55c
        linespace = space;
 8003fd4:	f8a4 6560 	strh.w	r6, [r4, #1376]	@ 0x560
        boundingArea = calculateBoundingArea();
 8003fd8:	4798      	blx	r3
 8003fda:	f504 63ad 	add.w	r3, r4, #1384	@ 0x568
 8003fde:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003fe2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003fe6:	f8da 3000 	ldr.w	r3, [sl]
    Unicode::snprintf(text_phBuffer, TEXT_PH_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LXQ5).getText());
 8003fea:	f204 656c 	addw	r5, r4, #1644	@ 0x66c
 8003fee:	2b00      	cmp	r3, #0
 8003ff0:	f43f af76 	beq.w	8003ee0 <_ZN14sensorViewBaseC1Ev+0x3ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ff4:	f8b9 3000 	ldrh.w	r3, [r9]
 8003ff8:	2b07      	cmp	r3, #7
 8003ffa:	f67f af7d 	bls.w	8003ef8 <_ZN14sensorViewBaseC1Ev+0x404>
        return texts->getText(typedTextId);
 8003ffe:	4b59      	ldr	r3, [pc, #356]	@ (8004164 <_ZN14sensorViewBaseC1Ev+0x670>)
 8004000:	2107      	movs	r1, #7
 8004002:	6818      	ldr	r0, [r3, #0]
 8004004:	f7ff f8fa 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
 8004008:	4a57      	ldr	r2, [pc, #348]	@ (8004168 <_ZN14sensorViewBaseC1Ev+0x674>)
 800400a:	4603      	mov	r3, r0
 800400c:	210a      	movs	r1, #10
 800400e:	4628      	mov	r0, r5
 8004010:	f00c ff9a 	bl	8010f48 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004014:	230c      	movs	r3, #12
    text_ph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WQQ5));
 8004016:	a916      	add	r1, sp, #88	@ 0x58
 8004018:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800401a:	f8c4 5574 	str.w	r5, [r4, #1396]	@ 0x574
    Unicode::snprintf(text_tdsBuffer, TEXT_TDS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PYMH).getText());
 800401e:	f504 65d0 	add.w	r5, r4, #1664	@ 0x680
 8004022:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8004026:	f8cd b058 	str.w	fp, [sp, #88]	@ 0x58
    text_ph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WQQ5));
 800402a:	f008 f81f 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800402e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004030:	4638      	mov	r0, r7
 8004032:	f006 faa1 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_tds.setPosition(181, 215, 120, 25);
 8004036:	2219      	movs	r2, #25
 8004038:	2378      	movs	r3, #120	@ 0x78
 800403a:	21b5      	movs	r1, #181	@ 0xb5
 800403c:	9200      	str	r2, [sp, #0]
 800403e:	22d7      	movs	r2, #215	@ 0xd7
 8004040:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8004042:	f7ff fcfc 	bl	8003a3e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004046:	f8da 3000 	ldr.w	r3, [sl]
        color = newColor;
 800404a:	f8c4 85a8 	str.w	r8, [r4, #1448]	@ 0x5a8
        linespace = space;
 800404e:	f8a4 65ac 	strh.w	r6, [r4, #1452]	@ 0x5ac
        boundingArea = calculateBoundingArea();
 8004052:	f8c4 65b4 	str.w	r6, [r4, #1460]	@ 0x5b4
 8004056:	f8c4 85b8 	str.w	r8, [r4, #1464]	@ 0x5b8
 800405a:	f8c4 65bc 	str.w	r6, [r4, #1468]	@ 0x5bc
 800405e:	2b00      	cmp	r3, #0
 8004060:	f43f af3e 	beq.w	8003ee0 <_ZN14sensorViewBaseC1Ev+0x3ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004064:	f8b9 3000 	ldrh.w	r3, [r9]
 8004068:	2b06      	cmp	r3, #6
 800406a:	f67f af45 	bls.w	8003ef8 <_ZN14sensorViewBaseC1Ev+0x404>
        return texts->getText(typedTextId);
 800406e:	4b3d      	ldr	r3, [pc, #244]	@ (8004164 <_ZN14sensorViewBaseC1Ev+0x670>)
 8004070:	2106      	movs	r1, #6
 8004072:	6818      	ldr	r0, [r3, #0]
 8004074:	f7ff f8c2 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(text_tdsBuffer, TEXT_TDS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PYMH).getText());
 8004078:	4a3b      	ldr	r2, [pc, #236]	@ (8004168 <_ZN14sensorViewBaseC1Ev+0x674>)
 800407a:	4603      	mov	r3, r0
 800407c:	210a      	movs	r1, #10
 800407e:	4628      	mov	r0, r5
 8004080:	f00c ff62 	bl	8010f48 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004084:	230b      	movs	r3, #11
    text_tds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EHW8));
 8004086:	a916      	add	r1, sp, #88	@ 0x58
 8004088:	980c      	ldr	r0, [sp, #48]	@ 0x30
 800408a:	f8c4 55c0 	str.w	r5, [r4, #1472]	@ 0x5c0
    Unicode::snprintf(text_levelBuffer, TEXT_LEVEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Z25Q).getText());
 800408e:	f204 6594 	addw	r5, r4, #1684	@ 0x694
 8004092:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8004096:	f8cd b058 	str.w	fp, [sp, #88]	@ 0x58
    text_tds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EHW8));
 800409a:	f007 ffe7 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800409e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80040a0:	4638      	mov	r0, r7
 80040a2:	f006 fa69 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_level.setPosition(331, 215, 119, 25);
 80040a6:	2319      	movs	r3, #25
 80040a8:	22d7      	movs	r2, #215	@ 0xd7
 80040aa:	f240 114b 	movw	r1, #331	@ 0x14b
 80040ae:	9300      	str	r3, [sp, #0]
 80040b0:	2377      	movs	r3, #119	@ 0x77
 80040b2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80040b4:	f7ff fcc3 	bl	8003a3e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80040b8:	f8da 3000 	ldr.w	r3, [sl]
        color = newColor;
 80040bc:	f8c4 85f4 	str.w	r8, [r4, #1524]	@ 0x5f4
        linespace = space;
 80040c0:	f8a4 65f8 	strh.w	r6, [r4, #1528]	@ 0x5f8
        boundingArea = calculateBoundingArea();
 80040c4:	f8c4 6600 	str.w	r6, [r4, #1536]	@ 0x600
 80040c8:	f8c4 8604 	str.w	r8, [r4, #1540]	@ 0x604
 80040cc:	f8c4 6608 	str.w	r6, [r4, #1544]	@ 0x608
 80040d0:	2b00      	cmp	r3, #0
 80040d2:	f43f af05 	beq.w	8003ee0 <_ZN14sensorViewBaseC1Ev+0x3ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80040d6:	f8b9 3000 	ldrh.w	r3, [r9]
 80040da:	2b05      	cmp	r3, #5
 80040dc:	f67f af0c 	bls.w	8003ef8 <_ZN14sensorViewBaseC1Ev+0x404>
        return texts->getText(typedTextId);
 80040e0:	4b20      	ldr	r3, [pc, #128]	@ (8004164 <_ZN14sensorViewBaseC1Ev+0x670>)
 80040e2:	2105      	movs	r1, #5
 80040e4:	6818      	ldr	r0, [r3, #0]
 80040e6:	f7ff f889 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(text_levelBuffer, TEXT_LEVEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Z25Q).getText());
 80040ea:	4a1f      	ldr	r2, [pc, #124]	@ (8004168 <_ZN14sensorViewBaseC1Ev+0x674>)
 80040ec:	4603      	mov	r3, r0
 80040ee:	210a      	movs	r1, #10
 80040f0:	4628      	mov	r0, r5
 80040f2:	f00c ff29 	bl	8010f48 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80040f6:	4b1d      	ldr	r3, [pc, #116]	@ (800416c <_ZN14sensorViewBaseC1Ev+0x678>)
    text_level.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I690));
 80040f8:	a916      	add	r1, sp, #88	@ 0x58
 80040fa:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80040fc:	9316      	str	r3, [sp, #88]	@ 0x58
 80040fe:	230a      	movs	r3, #10
 8004100:	f8c4 560c 	str.w	r5, [r4, #1548]	@ 0x60c
 8004104:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8004108:	f007 ffb0 	bl	800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800410c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800410e:	4638      	mov	r0, r7
 8004110:	f006 fa32 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    back_main_btn.setXY(425, 5);
 8004114:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8004116:	2205      	movs	r2, #5
 8004118:	f240 11a9 	movw	r1, #425	@ 0x1a9
 800411c:	f7fe f8b7 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8004120:	2304      	movs	r3, #4
    back_main_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BACK50_ID), touchgfx::Bitmap(BITMAP_BACK50_ID));
 8004122:	aa16      	add	r2, sp, #88	@ 0x58
 8004124:	a915      	add	r1, sp, #84	@ 0x54
 8004126:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8004128:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 800412c:	f8ad 3058 	strh.w	r3, [sp, #88]	@ 0x58
 8004130:	f007 fff7 	bl	800c122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        alpha = newAlpha;
 8004134:	2396      	movs	r3, #150	@ 0x96
 8004136:	4638      	mov	r0, r7
 8004138:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800413a:	f884 3642 	strb.w	r3, [r4, #1602]	@ 0x642
    back_main_btn.setAction(buttonCallback);
 800413e:	f504 63d5 	add.w	r3, r4, #1704	@ 0x6a8
        action = &callback;
 8004142:	f8c4 3638 	str.w	r3, [r4, #1592]	@ 0x638
 8004146:	f006 fa17 	bl	800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800414a:	4620      	mov	r0, r4
 800414c:	b019      	add	sp, #100	@ 0x64
 800414e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004152:	bf00      	nop
 8004154:	08020964 	.word	0x08020964
 8004158:	08020d9e 	.word	0x08020d9e
 800415c:	080209e1 	.word	0x080209e1
 8004160:	08020d60 	.word	0x08020d60
 8004164:	2001511c 	.word	0x2001511c
 8004168:	08020de9 	.word	0x08020de9
 800416c:	0802030c 	.word	0x0802030c
 8004170:	20015114 	.word	0x20015114

08004174 <_ZN16CustomContainer1C1Ev>:
#include <gui/containers/CustomContainer1.hpp>

CustomContainer1::CustomContainer1()
 8004174:	b510      	push	{r4, lr}
 8004176:	4604      	mov	r4, r0
 8004178:	f7fe f8b2 	bl	80022e0 <_ZN20CustomContainer1BaseC1Ev>
 800417c:	4b01      	ldr	r3, [pc, #4]	@ (8004184 <_ZN16CustomContainer1C1Ev+0x10>)
{

}
 800417e:	4620      	mov	r0, r4
CustomContainer1::CustomContainer1()
 8004180:	6023      	str	r3, [r4, #0]
}
 8004182:	bd10      	pop	{r4, pc}
 8004184:	08020ed0 	.word	0x08020ed0

08004188 <_ZN16CustomContainer110initializeEv>:

void CustomContainer1::initialize()
{
    CustomContainer1Base::initialize();
 8004188:	f7fe b86a 	b.w	8002260 <_ZN20CustomContainer1Base10initializeEv>

0800418c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800418c:	4770      	bx	lr

0800418e <_ZN19FrontendApplicationD0Ev>:
 800418e:	b510      	push	{r4, lr}
 8004190:	4604      	mov	r4, r0
 8004192:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8004196:	f01a fbe2 	bl	801e95e <_ZdlPvj>
 800419a:	4620      	mov	r0, r4
 800419c:	bd10      	pop	{r4, pc}

0800419e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800419e:	b510      	push	{r4, lr}
 80041a0:	4604      	mov	r4, r0
    {
        model.tick();
 80041a2:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 80041a6:	f000 f85a 	bl	800425e <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80041aa:	4620      	mov	r0, r4
    }
 80041ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80041b0:	f009 bfa8 	b.w	800e104 <_ZN8touchgfx11Application15handleTickEventEv>

080041b4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80041b4:	b510      	push	{r4, lr}
 80041b6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80041b8:	f7fe f96a 	bl	8002490 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80041bc:	4b01      	ldr	r3, [pc, #4]	@ (80041c4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 80041be:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 80041c0:	6023      	str	r3, [r4, #0]
}
 80041c2:	bd10      	pop	{r4, pc}
 80041c4:	08020f64 	.word	0x08020f64

080041c8 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 80041c8:	4770      	bx	lr

080041ca <_ZThn4_N13MainPresenterD1Ev>:
 80041ca:	3804      	subs	r0, #4
 80041cc:	4770      	bx	lr

080041ce <_ZN13MainPresenter10deactivateEv>:
}

void MainPresenter::activate()
{

}
 80041ce:	4770      	bx	lr

080041d0 <_ZN13MainPresenterD0Ev>:
 80041d0:	b510      	push	{r4, lr}
 80041d2:	4604      	mov	r4, r0
 80041d4:	2110      	movs	r1, #16
 80041d6:	f01a fbc2 	bl	801e95e <_ZdlPvj>
 80041da:	4620      	mov	r0, r4
 80041dc:	bd10      	pop	{r4, pc}

080041de <_ZThn4_N13MainPresenterD0Ev>:
 80041de:	f1a0 0004 	sub.w	r0, r0, #4
 80041e2:	e7f5      	b.n	80041d0 <_ZN13MainPresenterD0Ev>

080041e4 <_ZN13MainPresenterC1ER8MainView>:
    ModelListener() : model(0) {}
 80041e4:	2200      	movs	r2, #0
    : view(v)
 80041e6:	60c1      	str	r1, [r0, #12]
 80041e8:	6082      	str	r2, [r0, #8]
 80041ea:	4a02      	ldr	r2, [pc, #8]	@ (80041f4 <_ZN13MainPresenterC1ER8MainView+0x10>)
 80041ec:	6002      	str	r2, [r0, #0]
 80041ee:	321c      	adds	r2, #28
 80041f0:	6042      	str	r2, [r0, #4]
}
 80041f2:	4770      	bx	lr
 80041f4:	08020fb8 	.word	0x08020fb8

080041f8 <_ZN8MainView14tearDownScreenEv>:
}

void MainView::tearDownScreen()
{
    MainViewBase::tearDownScreen();
}
 80041f8:	4770      	bx	lr

080041fa <_ZN8MainView15handleTickEventEv>:

void MainView::handleTickEvent()
{
    tickCounter++;
 80041fa:	f8d0 31b4 	ldr.w	r3, [r0, #436]	@ 0x1b4
 80041fe:	3301      	adds	r3, #1
 8004200:	f8c0 31b4 	str.w	r3, [r0, #436]	@ 0x1b4
    presenter->tick();
 8004204:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8004206:	6803      	ldr	r3, [r0, #0]
 8004208:	691b      	ldr	r3, [r3, #16]
 800420a:	4718      	bx	r3

0800420c <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    virtual ~MainView() {}
 800420c:	4b03      	ldr	r3, [pc, #12]	@ (800421c <_ZN8MainViewD1Ev+0x10>)
 800420e:	b510      	push	{r4, lr}
 8004210:	4604      	mov	r4, r0
 8004212:	6003      	str	r3, [r0, #0]
 8004214:	f7fe fca9 	bl	8002b6a <_ZN12MainViewBaseD1Ev>
 8004218:	4620      	mov	r0, r4
 800421a:	bd10      	pop	{r4, pc}
 800421c:	08020fe4 	.word	0x08020fe4

08004220 <_ZN8MainViewD0Ev>:
 8004220:	b510      	push	{r4, lr}
 8004222:	4604      	mov	r4, r0
 8004224:	f7ff fff2 	bl	800420c <_ZN8MainViewD1Ev>
 8004228:	f44f 71dc 	mov.w	r1, #440	@ 0x1b8
 800422c:	4620      	mov	r0, r4
 800422e:	f01a fb96 	bl	801e95e <_ZdlPvj>
 8004232:	4620      	mov	r0, r4
 8004234:	bd10      	pop	{r4, pc}
	...

08004238 <_ZN8MainViewC1Ev>:
MainView::MainView()
 8004238:	b510      	push	{r4, lr}
 800423a:	4604      	mov	r4, r0
 800423c:	f7fe fd34 	bl	8002ca8 <_ZN12MainViewBaseC1Ev>
 8004240:	4b03      	ldr	r3, [pc, #12]	@ (8004250 <_ZN8MainViewC1Ev+0x18>)
}
 8004242:	4620      	mov	r0, r4
MainView::MainView()
 8004244:	6023      	str	r3, [r4, #0]
    tickCounter = 0;
 8004246:	2300      	movs	r3, #0
 8004248:	f8c4 31b4 	str.w	r3, [r4, #436]	@ 0x1b4
}
 800424c:	bd10      	pop	{r4, pc}
 800424e:	bf00      	nop
 8004250:	08020fe4 	.word	0x08020fe4

08004254 <_ZN8MainView11setupScreenEv>:
    MainViewBase::setupScreen();
 8004254:	f7fe bc8a 	b.w	8002b6c <_ZN12MainViewBase11setupScreenEv>

08004258 <_ZN5ModelC1Ev>:
extern void send_turnoff_water(void);
extern void send_turnon_water(void);
extern void send_turnoff_led(void);
extern void send_turnon_led(void);

Model::Model() : modelListener(0)
 8004258:	2200      	movs	r2, #0
 800425a:	6002      	str	r2, [r0, #0]
{

}
 800425c:	4770      	bx	lr

0800425e <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800425e:	4770      	bx	lr

08004260 <_ZN5Model18send_blue_wateroffEv>:


void Model::send_blue_wateroff()
{
	send_turnoff_water();
 8004260:	f7fc bd08 	b.w	8000c74 <_Z18send_turnoff_waterv>

08004264 <_ZN5Model17send_blue_wateronEv>:
}
void Model::send_blue_wateron()
{
	send_turnon_water();
 8004264:	f7fc bd1a 	b.w	8000c9c <_Z17send_turnon_waterv>

08004268 <_ZN5Model16send_blue_airoffEv>:
}
void Model::send_blue_airoff()
{
	send_turnoff_air();
 8004268:	f7fc bcce 	b.w	8000c08 <_Z16send_turnoff_airv>

0800426c <_ZN5Model15send_blue_aironEv>:
}
void Model::send_blue_airon()
{
	send_turnon_air();
 800426c:	f7fc bcee 	b.w	8000c4c <_Z15send_turnon_airv>

08004270 <_ZN5Model16send_blue_ledoffEv>:
}
void Model::send_blue_ledoff()
{
	send_turnoff_led();
 8004270:	f7fc bd28 	b.w	8000cc4 <_Z16send_turnoff_ledv>

08004274 <_ZN5Model15send_blue_ledonEv>:
}
void Model::send_blue_ledon()
{
	send_turnon_led();
 8004274:	f7fc bd3a 	b.w	8000cec <_Z15send_turnon_ledv>

08004278 <_ZN15configPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~configPresenter() {}
 8004278:	4770      	bx	lr

0800427a <_ZThn4_N15configPresenterD1Ev>:
 800427a:	3804      	subs	r0, #4
 800427c:	4770      	bx	lr

0800427e <_ZN15configPresenter10deactivateEv>:
}

void configPresenter::activate()
{

}
 800427e:	4770      	bx	lr

08004280 <_ZN15configPresenterD0Ev>:
 8004280:	b510      	push	{r4, lr}
 8004282:	4604      	mov	r4, r0
 8004284:	2110      	movs	r1, #16
 8004286:	f01a fb6a 	bl	801e95e <_ZdlPvj>
 800428a:	4620      	mov	r0, r4
 800428c:	bd10      	pop	{r4, pc}

0800428e <_ZThn4_N15configPresenterD0Ev>:
 800428e:	f1a0 0004 	sub.w	r0, r0, #4
 8004292:	e7f5      	b.n	8004280 <_ZN15configPresenterD0Ev>

08004294 <_ZN15configPresenterC1ER10configView>:
 8004294:	2200      	movs	r2, #0
    : view(v)
 8004296:	60c1      	str	r1, [r0, #12]
 8004298:	6082      	str	r2, [r0, #8]
 800429a:	4a02      	ldr	r2, [pc, #8]	@ (80042a4 <_ZN15configPresenterC1ER10configView+0x10>)
 800429c:	6002      	str	r2, [r0, #0]
 800429e:	3218      	adds	r2, #24
 80042a0:	6042      	str	r2, [r0, #4]
}
 80042a2:	4770      	bx	lr
 80042a4:	08021018 	.word	0x08021018

080042a8 <_ZN10configView14tearDownScreenEv>:
}

void configView::tearDownScreen()
{
    configViewBase::tearDownScreen();
}
 80042a8:	4770      	bx	lr
	...

080042ac <_ZN10configViewD1Ev>:

class configView : public configViewBase
{
public:
    configView();
    virtual ~configView() {}
 80042ac:	4b03      	ldr	r3, [pc, #12]	@ (80042bc <_ZN10configViewD1Ev+0x10>)
 80042ae:	b510      	push	{r4, lr}
 80042b0:	4604      	mov	r4, r0
 80042b2:	6003      	str	r3, [r0, #0]
 80042b4:	f7fe ffc4 	bl	8003240 <_ZN14configViewBaseD1Ev>
 80042b8:	4620      	mov	r0, r4
 80042ba:	bd10      	pop	{r4, pc}
 80042bc:	08021040 	.word	0x08021040

080042c0 <_ZN10configViewD0Ev>:
 80042c0:	b510      	push	{r4, lr}
 80042c2:	4604      	mov	r4, r0
 80042c4:	f7ff fff2 	bl	80042ac <_ZN10configViewD1Ev>
 80042c8:	21dc      	movs	r1, #220	@ 0xdc
 80042ca:	4620      	mov	r0, r4
 80042cc:	f01a fb47 	bl	801e95e <_ZdlPvj>
 80042d0:	4620      	mov	r0, r4
 80042d2:	bd10      	pop	{r4, pc}

080042d4 <_ZN10configViewC1Ev>:
configView::configView()
 80042d4:	b510      	push	{r4, lr}
 80042d6:	4604      	mov	r4, r0
 80042d8:	f7fe ffe8 	bl	80032ac <_ZN14configViewBaseC1Ev>
 80042dc:	4b01      	ldr	r3, [pc, #4]	@ (80042e4 <_ZN10configViewC1Ev+0x10>)
}
 80042de:	4620      	mov	r0, r4
configView::configView()
 80042e0:	6023      	str	r3, [r4, #0]
}
 80042e2:	bd10      	pop	{r4, pc}
 80042e4:	08021040 	.word	0x08021040

080042e8 <_ZN10configView11setupScreenEv>:
    configViewBase::setupScreen();
 80042e8:	f7fe bfab 	b.w	8003242 <_ZN14configViewBase11setupScreenEv>

080042ec <_ZN14motorPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~motorPresenter() {}
 80042ec:	4770      	bx	lr

080042ee <_ZThn4_N14motorPresenterD1Ev>:
 80042ee:	3804      	subs	r0, #4
 80042f0:	4770      	bx	lr

080042f2 <_ZN14motorPresenter10deactivateEv>:
}

void motorPresenter::activate()
{

}
 80042f2:	4770      	bx	lr

080042f4 <_ZN14motorPresenterD0Ev>:
 80042f4:	b510      	push	{r4, lr}
 80042f6:	4604      	mov	r4, r0
 80042f8:	2110      	movs	r1, #16
 80042fa:	f01a fb30 	bl	801e95e <_ZdlPvj>
 80042fe:	4620      	mov	r0, r4
 8004300:	bd10      	pop	{r4, pc}

08004302 <_ZThn4_N14motorPresenterD0Ev>:
 8004302:	f1a0 0004 	sub.w	r0, r0, #4
 8004306:	e7f5      	b.n	80042f4 <_ZN14motorPresenterD0Ev>

08004308 <_ZN14motorPresenter12led_setstateEb>:
	}
}

void motorPresenter::led_setstate(bool state)
{
	if(state == 1)
 8004308:	6880      	ldr	r0, [r0, #8]
 800430a:	b109      	cbz	r1, 8004310 <_ZN14motorPresenter12led_setstateEb+0x8>
	{
		model->send_blue_ledoff();
 800430c:	f7ff bfb0 	b.w	8004270 <_ZN5Model16send_blue_ledoffEv>
	}
	else
	{
		model->send_blue_ledon();
 8004310:	f7ff bfb0 	b.w	8004274 <_ZN5Model15send_blue_ledonEv>

08004314 <_ZN14motorPresenter14water_setstateEb>:
	if(state == 1)
 8004314:	6880      	ldr	r0, [r0, #8]
 8004316:	b109      	cbz	r1, 800431c <_ZN14motorPresenter14water_setstateEb+0x8>
		model->send_blue_wateroff();
 8004318:	f7ff bfa2 	b.w	8004260 <_ZN5Model18send_blue_wateroffEv>
		model->send_blue_wateron();
 800431c:	f7ff bfa2 	b.w	8004264 <_ZN5Model17send_blue_wateronEv>

08004320 <_ZN14motorPresenter12air_setstateEb>:
	if(state == 1)
 8004320:	6880      	ldr	r0, [r0, #8]
 8004322:	b109      	cbz	r1, 8004328 <_ZN14motorPresenter12air_setstateEb+0x8>
		model->send_blue_airoff();
 8004324:	f7ff bfa0 	b.w	8004268 <_ZN5Model16send_blue_airoffEv>
		model->send_blue_airon();
 8004328:	f7ff bfa0 	b.w	800426c <_ZN5Model15send_blue_aironEv>

0800432c <_ZN14motorPresenterC1ER9motorView>:
 800432c:	2200      	movs	r2, #0
    : view(v)
 800432e:	60c1      	str	r1, [r0, #12]
 8004330:	6082      	str	r2, [r0, #8]
 8004332:	4a02      	ldr	r2, [pc, #8]	@ (800433c <_ZN14motorPresenterC1ER9motorView+0x10>)
 8004334:	6002      	str	r2, [r0, #0]
 8004336:	3224      	adds	r2, #36	@ 0x24
 8004338:	6042      	str	r2, [r0, #4]
}
 800433a:	4770      	bx	lr
 800433c:	08021074 	.word	0x08021074

08004340 <_ZN9motorView14tearDownScreenEv>:
}

void motorView::tearDownScreen()
{
    motorViewBase::tearDownScreen();
}
 8004340:	4770      	bx	lr
	...

08004344 <_ZN9motorViewD1Ev>:

class motorView : public motorViewBase
{
public:
    motorView();
    virtual ~motorView() {}
 8004344:	4b03      	ldr	r3, [pc, #12]	@ (8004354 <_ZN9motorViewD1Ev+0x10>)
 8004346:	b510      	push	{r4, lr}
 8004348:	4604      	mov	r4, r0
 800434a:	6003      	str	r3, [r0, #0]
 800434c:	f7ff f85b 	bl	8003406 <_ZN13motorViewBaseD1Ev>
 8004350:	4620      	mov	r0, r4
 8004352:	bd10      	pop	{r4, pc}
 8004354:	0802115c 	.word	0x0802115c

08004358 <_ZN9motorViewD0Ev>:
 8004358:	b510      	push	{r4, lr}
 800435a:	4604      	mov	r4, r0
 800435c:	f7ff fff2 	bl	8004344 <_ZN9motorViewD1Ev>
 8004360:	f44f 7138 	mov.w	r1, #736	@ 0x2e0
 8004364:	4620      	mov	r0, r4
 8004366:	f01a fafa 	bl	801e95e <_ZdlPvj>
 800436a:	4620      	mov	r0, r4
 800436c:	bd10      	pop	{r4, pc}
	...

08004370 <_ZNK8touchgfx6Bitmap5getIdEv>:
    /**
     * Gets the id of this Bitmap.
     *
     * @return The id of this Bitmap.
     */
    BitmapId getId() const
 8004370:	b508      	push	{r3, lr}
    {
        assert(bitmaps != 0 && "Bitmap database has not been initialized.");
 8004372:	4b05      	ldr	r3, [pc, #20]	@ (8004388 <_ZNK8touchgfx6Bitmap5getIdEv+0x18>)
 8004374:	681b      	ldr	r3, [r3, #0]
 8004376:	b92b      	cbnz	r3, 8004384 <_ZNK8touchgfx6Bitmap5getIdEv+0x14>
 8004378:	4b04      	ldr	r3, [pc, #16]	@ (800438c <_ZNK8touchgfx6Bitmap5getIdEv+0x1c>)
 800437a:	2190      	movs	r1, #144	@ 0x90
 800437c:	4a04      	ldr	r2, [pc, #16]	@ (8004390 <_ZNK8touchgfx6Bitmap5getIdEv+0x20>)
 800437e:	4805      	ldr	r0, [pc, #20]	@ (8004394 <_ZNK8touchgfx6Bitmap5getIdEv+0x24>)
 8004380:	f01a fb1c 	bl	801e9bc <__assert_func>
        return bitmapId;
    }
 8004384:	8800      	ldrh	r0, [r0, #0]
 8004386:	bd08      	pop	{r3, pc}
 8004388:	20015148 	.word	0x20015148
 800438c:	080210a0 	.word	0x080210a0
 8004390:	080210dc 	.word	0x080210dc
 8004394:	0802110f 	.word	0x0802110f

08004398 <_ZNK8touchgfx12ToggleButton8getStateEv>:
     * Gets the state of the ToggleButton as set with forceState.
     *
     * @return True if the button has been toggled, i.e. the pressed state is shown when the
     *         button is not pressed.
     */
    bool getState() const
 8004398:	b538      	push	{r3, r4, r5, lr}
 800439a:	4604      	mov	r4, r0
    {
        return up.getId() == originalPressed.getId();
 800439c:	302e      	adds	r0, #46	@ 0x2e
 800439e:	f7ff ffe7 	bl	8004370 <_ZNK8touchgfx6Bitmap5getIdEv>
 80043a2:	4605      	mov	r5, r0
 80043a4:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 80043a8:	f7ff ffe2 	bl	8004370 <_ZNK8touchgfx6Bitmap5getIdEv>
    }
 80043ac:	1a2b      	subs	r3, r5, r0
 80043ae:	4258      	negs	r0, r3
 80043b0:	4158      	adcs	r0, r3
 80043b2:	bd38      	pop	{r3, r4, r5, pc}

080043b4 <_ZN9motorView16air_button_clickEv>:

void motorView::air_button_click()
{
 80043b4:	b510      	push	{r4, lr}
 80043b6:	4604      	mov	r4, r0
    bool airOn = air_button.getState(); // 토글 버튼 상태 가져오기
 80043b8:	f500 700a 	add.w	r0, r0, #552	@ 0x228
 80043bc:	f7ff ffec 	bl	8004398 <_ZNK8touchgfx12ToggleButton8getStateEv>
 80043c0:	4601      	mov	r1, r0
    presenter->air_setstate(airOn);
 80043c2:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 80043c4:	6802      	ldr	r2, [r0, #0]
}
 80043c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    presenter->air_setstate(airOn);
 80043ca:	6912      	ldr	r2, [r2, #16]
 80043cc:	4710      	bx	r2

080043ce <_ZN9motorView18water_button_clickEv>:

void motorView::water_button_click()
{
 80043ce:	b510      	push	{r4, lr}
 80043d0:	4604      	mov	r4, r0
    bool waterOn = water_button.getState(); // 토글 버튼 상태 가져오기
 80043d2:	f500 7018 	add.w	r0, r0, #608	@ 0x260
 80043d6:	f7ff ffdf 	bl	8004398 <_ZNK8touchgfx12ToggleButton8getStateEv>
 80043da:	4601      	mov	r1, r0
    presenter->water_setstate(waterOn);
 80043dc:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 80043de:	6802      	ldr	r2, [r0, #0]
}
 80043e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    presenter->water_setstate(waterOn);
 80043e4:	6952      	ldr	r2, [r2, #20]
 80043e6:	4710      	bx	r2

080043e8 <_ZN9motorView16led_button_clickEv>:

void motorView::led_button_click()
{
 80043e8:	b510      	push	{r4, lr}
 80043ea:	4604      	mov	r4, r0
    bool ledOn = led_button.getState(); // 토글 버튼 상태 가져오기
 80043ec:	f500 7026 	add.w	r0, r0, #664	@ 0x298
 80043f0:	f7ff ffd2 	bl	8004398 <_ZNK8touchgfx12ToggleButton8getStateEv>
 80043f4:	4601      	mov	r1, r0
    presenter->led_setstate(ledOn);
 80043f6:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 80043f8:	6802      	ldr	r2, [r0, #0]
}
 80043fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    presenter->led_setstate(ledOn);
 80043fe:	6992      	ldr	r2, [r2, #24]
 8004400:	4710      	bx	r2
	...

08004404 <_ZN9motorViewC1Ev>:
motorView::motorView()
 8004404:	b510      	push	{r4, lr}
 8004406:	4604      	mov	r4, r0
 8004408:	f7ff f89a 	bl	8003540 <_ZN13motorViewBaseC1Ev>
 800440c:	4b01      	ldr	r3, [pc, #4]	@ (8004414 <_ZN9motorViewC1Ev+0x10>)
}
 800440e:	4620      	mov	r0, r4
motorView::motorView()
 8004410:	6023      	str	r3, [r4, #0]
}
 8004412:	bd10      	pop	{r4, pc}
 8004414:	0802115c 	.word	0x0802115c

08004418 <_ZN9motorView11setupScreenEv>:
    motorViewBase::setupScreen();
 8004418:	f7fe bff6 	b.w	8003408 <_ZN13motorViewBase11setupScreenEv>

0800441c <_ZN15sensorPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();
    virtual void tick();
    virtual ~sensorPresenter() {}
 800441c:	4770      	bx	lr

0800441e <_ZThn4_N15sensorPresenterD1Ev>:
 800441e:	3804      	subs	r0, #4
 8004420:	4770      	bx	lr

08004422 <_ZN15sensorPresenter10deactivateEv>:
}

void sensorPresenter::activate()
{

}
 8004422:	4770      	bx	lr

08004424 <_ZN15sensorPresenterD0Ev>:
 8004424:	b510      	push	{r4, lr}
 8004426:	4604      	mov	r4, r0
 8004428:	2110      	movs	r1, #16
 800442a:	f01a fa98 	bl	801e95e <_ZdlPvj>
 800442e:	4620      	mov	r0, r4
 8004430:	bd10      	pop	{r4, pc}

08004432 <_ZThn4_N15sensorPresenterD0Ev>:
 8004432:	f1a0 0004 	sub.w	r0, r0, #4
 8004436:	e7f5      	b.n	8004424 <_ZN15sensorPresenterD0Ev>

08004438 <_ZN15sensorPresenter4tickEv>:
{

}

void sensorPresenter::tick()
{
 8004438:	b530      	push	{r4, r5, lr}
	if(strncmp(rx_data,"S1",2)==0){
 800443a:	2202      	movs	r2, #2
{
 800443c:	b085      	sub	sp, #20
 800443e:	4604      	mov	r4, r0
	if(strncmp(rx_data,"S1",2)==0){
 8004440:	4939      	ldr	r1, [pc, #228]	@ (8004528 <_ZN15sensorPresenter4tickEv+0xf0>)
 8004442:	483a      	ldr	r0, [pc, #232]	@ (800452c <_ZN15sensorPresenter4tickEv+0xf4>)
 8004444:	f01a fd5e 	bl	801ef04 <strncmp>
 8004448:	b988      	cbnz	r0, 800446e <_ZN15sensorPresenter4tickEv+0x36>
 800444a:	aa01      	add	r2, sp, #4
 800444c:	4b37      	ldr	r3, [pc, #220]	@ (800452c <_ZN15sensorPresenter4tickEv+0xf4>)
 800444e:	4611      	mov	r1, r2
		char change_data[10];
		int i =0;
		while(rx_data[i] != '\r')
 8004450:	f813 5b01 	ldrb.w	r5, [r3], #1
 8004454:	2d0d      	cmp	r5, #13
 8004456:	d105      	bne.n	8004464 <_ZN15sensorPresenter4tickEv+0x2c>
		{
			change_data[i] = rx_data[i+2];
			i++;
		}

		view.s1_update_text(change_data, i);
 8004458:	b282      	uxth	r2, r0
 800445a:	68e0      	ldr	r0, [r4, #12]
 800445c:	f000 f8aa 	bl	80045b4 <_ZN10sensorView14s1_update_textEPKct>
			change_data[i] = rx_data[i+2];
			i++;
		}
			view.s5_update_text(change_data, i);
		}
}
 8004460:	b005      	add	sp, #20
 8004462:	bd30      	pop	{r4, r5, pc}
			change_data[i] = rx_data[i+2];
 8004464:	785d      	ldrb	r5, [r3, #1]
			i++;
 8004466:	3001      	adds	r0, #1
			change_data[i] = rx_data[i+2];
 8004468:	f802 5b01 	strb.w	r5, [r2], #1
			i++;
 800446c:	e7f0      	b.n	8004450 <_ZN15sensorPresenter4tickEv+0x18>
	else if(strncmp(rx_data,"S2",2)==0){
 800446e:	2202      	movs	r2, #2
 8004470:	492f      	ldr	r1, [pc, #188]	@ (8004530 <_ZN15sensorPresenter4tickEv+0xf8>)
 8004472:	482e      	ldr	r0, [pc, #184]	@ (800452c <_ZN15sensorPresenter4tickEv+0xf4>)
 8004474:	f01a fd46 	bl	801ef04 <strncmp>
 8004478:	b980      	cbnz	r0, 800449c <_ZN15sensorPresenter4tickEv+0x64>
 800447a:	aa01      	add	r2, sp, #4
 800447c:	4b2b      	ldr	r3, [pc, #172]	@ (800452c <_ZN15sensorPresenter4tickEv+0xf4>)
 800447e:	4611      	mov	r1, r2
		while(rx_data[i] != '\r')
 8004480:	f813 5b01 	ldrb.w	r5, [r3], #1
 8004484:	2d0d      	cmp	r5, #13
 8004486:	d104      	bne.n	8004492 <_ZN15sensorPresenter4tickEv+0x5a>
			view.s2_update_text(change_data, i);
 8004488:	b282      	uxth	r2, r0
 800448a:	68e0      	ldr	r0, [r4, #12]
 800448c:	f000 f8a5 	bl	80045da <_ZN10sensorView14s2_update_textEPKct>
 8004490:	e7e6      	b.n	8004460 <_ZN15sensorPresenter4tickEv+0x28>
			change_data[i] = rx_data[i+2];
 8004492:	785d      	ldrb	r5, [r3, #1]
			i++;
 8004494:	3001      	adds	r0, #1
			change_data[i] = rx_data[i+2];
 8004496:	f802 5b01 	strb.w	r5, [r2], #1
			i++;
 800449a:	e7f1      	b.n	8004480 <_ZN15sensorPresenter4tickEv+0x48>
	else if(strncmp(rx_data,"S3",2)==0){
 800449c:	2202      	movs	r2, #2
 800449e:	4925      	ldr	r1, [pc, #148]	@ (8004534 <_ZN15sensorPresenter4tickEv+0xfc>)
 80044a0:	4822      	ldr	r0, [pc, #136]	@ (800452c <_ZN15sensorPresenter4tickEv+0xf4>)
 80044a2:	f01a fd2f 	bl	801ef04 <strncmp>
 80044a6:	b980      	cbnz	r0, 80044ca <_ZN15sensorPresenter4tickEv+0x92>
 80044a8:	aa01      	add	r2, sp, #4
 80044aa:	4b20      	ldr	r3, [pc, #128]	@ (800452c <_ZN15sensorPresenter4tickEv+0xf4>)
 80044ac:	4611      	mov	r1, r2
		while(rx_data[i] != '\r')
 80044ae:	f813 5b01 	ldrb.w	r5, [r3], #1
 80044b2:	2d0d      	cmp	r5, #13
 80044b4:	d104      	bne.n	80044c0 <_ZN15sensorPresenter4tickEv+0x88>
			view.s3_update_text(change_data, i);
 80044b6:	b282      	uxth	r2, r0
 80044b8:	68e0      	ldr	r0, [r4, #12]
 80044ba:	f000 f8a0 	bl	80045fe <_ZN10sensorView14s3_update_textEPKct>
 80044be:	e7cf      	b.n	8004460 <_ZN15sensorPresenter4tickEv+0x28>
			change_data[i] = rx_data[i+2];
 80044c0:	785d      	ldrb	r5, [r3, #1]
			i++;
 80044c2:	3001      	adds	r0, #1
			change_data[i] = rx_data[i+2];
 80044c4:	f802 5b01 	strb.w	r5, [r2], #1
			i++;
 80044c8:	e7f1      	b.n	80044ae <_ZN15sensorPresenter4tickEv+0x76>
	else if(strncmp(rx_data,"S4",2)==0){
 80044ca:	2202      	movs	r2, #2
 80044cc:	491a      	ldr	r1, [pc, #104]	@ (8004538 <_ZN15sensorPresenter4tickEv+0x100>)
 80044ce:	4817      	ldr	r0, [pc, #92]	@ (800452c <_ZN15sensorPresenter4tickEv+0xf4>)
 80044d0:	f01a fd18 	bl	801ef04 <strncmp>
 80044d4:	b980      	cbnz	r0, 80044f8 <_ZN15sensorPresenter4tickEv+0xc0>
 80044d6:	aa01      	add	r2, sp, #4
 80044d8:	4b14      	ldr	r3, [pc, #80]	@ (800452c <_ZN15sensorPresenter4tickEv+0xf4>)
 80044da:	4611      	mov	r1, r2
		while(rx_data[i] != '\r')
 80044dc:	f813 5b01 	ldrb.w	r5, [r3], #1
 80044e0:	2d0d      	cmp	r5, #13
 80044e2:	d104      	bne.n	80044ee <_ZN15sensorPresenter4tickEv+0xb6>
			view.s4_update_text(change_data, i);
 80044e4:	b282      	uxth	r2, r0
 80044e6:	68e0      	ldr	r0, [r4, #12]
 80044e8:	f000 f89c 	bl	8004624 <_ZN10sensorView14s4_update_textEPKct>
 80044ec:	e7b8      	b.n	8004460 <_ZN15sensorPresenter4tickEv+0x28>
			change_data[i] = rx_data[i+2];
 80044ee:	785d      	ldrb	r5, [r3, #1]
			i++;
 80044f0:	3001      	adds	r0, #1
			change_data[i] = rx_data[i+2];
 80044f2:	f802 5b01 	strb.w	r5, [r2], #1
			i++;
 80044f6:	e7f1      	b.n	80044dc <_ZN15sensorPresenter4tickEv+0xa4>
	else if(strncmp(rx_data,"S5",2)==0){
 80044f8:	2202      	movs	r2, #2
 80044fa:	4910      	ldr	r1, [pc, #64]	@ (800453c <_ZN15sensorPresenter4tickEv+0x104>)
 80044fc:	480b      	ldr	r0, [pc, #44]	@ (800452c <_ZN15sensorPresenter4tickEv+0xf4>)
 80044fe:	f01a fd01 	bl	801ef04 <strncmp>
 8004502:	2800      	cmp	r0, #0
 8004504:	d1ac      	bne.n	8004460 <_ZN15sensorPresenter4tickEv+0x28>
 8004506:	aa01      	add	r2, sp, #4
 8004508:	4b08      	ldr	r3, [pc, #32]	@ (800452c <_ZN15sensorPresenter4tickEv+0xf4>)
 800450a:	4611      	mov	r1, r2
		while(rx_data[i] != '\r')
 800450c:	f813 5b01 	ldrb.w	r5, [r3], #1
 8004510:	2d0d      	cmp	r5, #13
 8004512:	d104      	bne.n	800451e <_ZN15sensorPresenter4tickEv+0xe6>
			view.s5_update_text(change_data, i);
 8004514:	b282      	uxth	r2, r0
 8004516:	68e0      	ldr	r0, [r4, #12]
 8004518:	f000 f896 	bl	8004648 <_ZN10sensorView14s5_update_textEPKct>
}
 800451c:	e7a0      	b.n	8004460 <_ZN15sensorPresenter4tickEv+0x28>
			change_data[i] = rx_data[i+2];
 800451e:	785d      	ldrb	r5, [r3, #1]
			i++;
 8004520:	3001      	adds	r0, #1
			change_data[i] = rx_data[i+2];
 8004522:	f802 5b01 	strb.w	r5, [r2], #1
			i++;
 8004526:	e7f1      	b.n	800450c <_ZN15sensorPresenter4tickEv+0xd4>
 8004528:	08021194 	.word	0x08021194
 800452c:	20000140 	.word	0x20000140
 8004530:	08021197 	.word	0x08021197
 8004534:	0802119a 	.word	0x0802119a
 8004538:	0802119d 	.word	0x0802119d
 800453c:	080211a0 	.word	0x080211a0

08004540 <_ZN15sensorPresenterC1ER10sensorView>:
 8004540:	2200      	movs	r2, #0
    : view(v)
 8004542:	60c1      	str	r1, [r0, #12]
 8004544:	6082      	str	r2, [r0, #8]
 8004546:	4a02      	ldr	r2, [pc, #8]	@ (8004550 <_ZN15sensorPresenterC1ER10sensorView+0x10>)
 8004548:	6002      	str	r2, [r0, #0]
 800454a:	321c      	adds	r2, #28
 800454c:	6042      	str	r2, [r0, #4]
}
 800454e:	4770      	bx	lr
 8004550:	080211ac 	.word	0x080211ac

08004554 <_ZN10sensorView15handleTickEventEv>:
    sensorViewBase::setupScreen();
}

void sensorView::handleTickEvent()
{
    tickCounter++;
 8004554:	f8d0 36b8 	ldr.w	r3, [r0, #1720]	@ 0x6b8
 8004558:	3301      	adds	r3, #1
 800455a:	f8c0 36b8 	str.w	r3, [r0, #1720]	@ 0x6b8
    presenter->tick();
 800455e:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8004560:	6803      	ldr	r3, [r0, #0]
 8004562:	691b      	ldr	r3, [r3, #16]
 8004564:	4718      	bx	r3

08004566 <_ZN10sensorView14tearDownScreenEv>:
}
void sensorView::tearDownScreen()
{
    sensorViewBase::tearDownScreen();
}
 8004566:	4770      	bx	lr

08004568 <_ZN10sensorViewD1Ev>:

class sensorView : public sensorViewBase
{
public:
    sensorView();
    virtual ~sensorView() {}
 8004568:	4b03      	ldr	r3, [pc, #12]	@ (8004578 <_ZN10sensorViewD1Ev+0x10>)
 800456a:	b510      	push	{r4, lr}
 800456c:	4604      	mov	r4, r0
 800456e:	6003      	str	r3, [r0, #0]
 8004570:	f7ff fa82 	bl	8003a78 <_ZN14sensorViewBaseD1Ev>
 8004574:	4620      	mov	r0, r4
 8004576:	bd10      	pop	{r4, pc}
 8004578:	080211d8 	.word	0x080211d8

0800457c <_ZN10sensorViewD0Ev>:
 800457c:	b510      	push	{r4, lr}
 800457e:	4604      	mov	r4, r0
 8004580:	f7ff fff2 	bl	8004568 <_ZN10sensorViewD1Ev>
 8004584:	f240 61bc 	movw	r1, #1724	@ 0x6bc
 8004588:	4620      	mov	r0, r4
 800458a:	f01a f9e8 	bl	801e95e <_ZdlPvj>
 800458e:	4620      	mov	r0, r4
 8004590:	bd10      	pop	{r4, pc}
	...

08004594 <_ZN10sensorViewC1Ev>:
sensorView::sensorView()
 8004594:	b510      	push	{r4, lr}
 8004596:	4604      	mov	r4, r0
 8004598:	f7ff faac 	bl	8003af4 <_ZN14sensorViewBaseC1Ev>
 800459c:	4b03      	ldr	r3, [pc, #12]	@ (80045ac <_ZN10sensorViewC1Ev+0x18>)
}
 800459e:	4620      	mov	r0, r4
sensorView::sensorView()
 80045a0:	6023      	str	r3, [r4, #0]
	tickCounter = 0;
 80045a2:	2300      	movs	r3, #0
 80045a4:	f8c4 36b8 	str.w	r3, [r4, #1720]	@ 0x6b8
}
 80045a8:	bd10      	pop	{r4, pc}
 80045aa:	bf00      	nop
 80045ac:	080211d8 	.word	0x080211d8

080045b0 <_ZN10sensorView11setupScreenEv>:
    sensorViewBase::setupScreen();
 80045b0:	f7ff b9e0 	b.w	8003974 <_ZN14sensorViewBase11setupScreenEv>

080045b4 <_ZN10sensorView14s1_update_textEPKct>:

void sensorView::s1_update_text(const char* data, uint16_t size)
{
 80045b4:	b538      	push	{r3, r4, r5, lr}
 80045b6:	4614      	mov	r4, r2
 80045b8:	4605      	mov	r5, r0
    Unicode::strncpy(text_temperatureBuffer, data, size);
 80045ba:	f200 6044 	addw	r0, r0, #1604	@ 0x644
    text_temperatureBuffer[size-2]= '\0';
 80045be:	f204 341e 	addw	r4, r4, #798	@ 0x31e
    Unicode::strncpy(text_temperatureBuffer, data, size);
 80045c2:	f00c f962 	bl	801088a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
    text_temperatureBuffer[size-2]= '\0';
 80045c6:	2300      	movs	r3, #0
    text_temperature.invalidate(); // 화면 갱신
 80045c8:	f205 4094 	addw	r0, r5, #1172	@ 0x494
    text_temperatureBuffer[size-2]= '\0';
 80045cc:	eb05 0444 	add.w	r4, r5, r4, lsl #1
 80045d0:	80a3      	strh	r3, [r4, #4]
}
 80045d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    text_temperature.invalidate(); // 화면 갱신
 80045d6:	f00a bd8c 	b.w	800f0f2 <_ZNK8touchgfx8Drawable10invalidateEv>

080045da <_ZN10sensorView14s2_update_textEPKct>:

void sensorView::s2_update_text(const char* data, uint16_t size)
{
 80045da:	b538      	push	{r3, r4, r5, lr}
 80045dc:	4615      	mov	r5, r2
 80045de:	4604      	mov	r4, r0
    Unicode::strncpy(text_humidityBuffer, data, size);
 80045e0:	f500 60cb 	add.w	r0, r0, #1624	@ 0x658
 80045e4:	f00c f951 	bl	801088a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
    text_humidityBuffer[size-2]= '\0';
 80045e8:	f205 352a 	addw	r5, r5, #810	@ 0x32a
 80045ec:	2300      	movs	r3, #0
    text_humidity.invalidate(); // 화면 갱신
 80045ee:	f504 609c 	add.w	r0, r4, #1248	@ 0x4e0
    text_humidityBuffer[size-2]= '\0';
 80045f2:	f824 3015 	strh.w	r3, [r4, r5, lsl #1]
}
 80045f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    text_humidity.invalidate(); // 화면 갱신
 80045fa:	f00a bd7a 	b.w	800f0f2 <_ZNK8touchgfx8Drawable10invalidateEv>

080045fe <_ZN10sensorView14s3_update_textEPKct>:

void sensorView::s3_update_text(const char* data, uint16_t size)
{
 80045fe:	b538      	push	{r3, r4, r5, lr}
 8004600:	4614      	mov	r4, r2
 8004602:	4605      	mov	r5, r0
    Unicode::strncpy(text_phBuffer, data, size);
 8004604:	f200 606c 	addw	r0, r0, #1644	@ 0x66c
    text_phBuffer[size-2]= '\0';
 8004608:	f204 3432 	addw	r4, r4, #818	@ 0x332
    Unicode::strncpy(text_phBuffer, data, size);
 800460c:	f00c f93d 	bl	801088a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
    text_phBuffer[size-2]= '\0';
 8004610:	2300      	movs	r3, #0
    text_ph.invalidate(); // 화면 갱신
 8004612:	f205 502c 	addw	r0, r5, #1324	@ 0x52c
    text_phBuffer[size-2]= '\0';
 8004616:	eb05 0444 	add.w	r4, r5, r4, lsl #1
 800461a:	80a3      	strh	r3, [r4, #4]
}
 800461c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    text_ph.invalidate(); // 화면 갱신
 8004620:	f00a bd67 	b.w	800f0f2 <_ZNK8touchgfx8Drawable10invalidateEv>

08004624 <_ZN10sensorView14s4_update_textEPKct>:

void sensorView::s4_update_text(const char* data, uint16_t size)
{
 8004624:	b538      	push	{r3, r4, r5, lr}
 8004626:	4615      	mov	r5, r2
 8004628:	4604      	mov	r4, r0
    Unicode::strncpy(text_tdsBuffer, data, size);
 800462a:	f500 60d0 	add.w	r0, r0, #1664	@ 0x680
 800462e:	f00c f92c 	bl	801088a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
    text_tdsBuffer[size-2]= '\0';
 8004632:	f205 353e 	addw	r5, r5, #830	@ 0x33e
 8004636:	2300      	movs	r3, #0
    text_tds.invalidate(); // 화면 갱신
 8004638:	f504 60af 	add.w	r0, r4, #1400	@ 0x578
    text_tdsBuffer[size-2]= '\0';
 800463c:	f824 3015 	strh.w	r3, [r4, r5, lsl #1]
}
 8004640:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    text_tds.invalidate(); // 화면 갱신
 8004644:	f00a bd55 	b.w	800f0f2 <_ZNK8touchgfx8Drawable10invalidateEv>

08004648 <_ZN10sensorView14s5_update_textEPKct>:

void sensorView::s5_update_text(const char* data, uint16_t size)
{
 8004648:	b538      	push	{r3, r4, r5, lr}
 800464a:	4614      	mov	r4, r2
 800464c:	4605      	mov	r5, r0
    Unicode::strncpy(text_levelBuffer, data, size);
 800464e:	f200 6094 	addw	r0, r0, #1684	@ 0x694
    text_levelBuffer[size-2]= '\0';
 8004652:	f204 3446 	addw	r4, r4, #838	@ 0x346
    Unicode::strncpy(text_levelBuffer, data, size);
 8004656:	f00c f918 	bl	801088a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
    text_levelBuffer[size-2]= '\0';
 800465a:	2300      	movs	r3, #0
    text_level.invalidate(); // 화면 갱신
 800465c:	f205 50c4 	addw	r0, r5, #1476	@ 0x5c4
    text_levelBuffer[size-2]= '\0';
 8004660:	eb05 0444 	add.w	r4, r5, r4, lsl #1
 8004664:	80a3      	strh	r3, [r4, #4]
}
 8004666:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    text_level.invalidate(); // 화면 갱신
 800466a:	f00a bd42 	b.w	800f0f2 <_ZNK8touchgfx8Drawable10invalidateEv>
	...

08004670 <Bluetooth_init>:
#include "cmsis_os.h"
#include <stdlib.h> // malloc과 free를 사용하기 위한 헤더 파일

Bluetooth bt;

void Bluetooth_init(Bluetooth* bt, UART_HandleTypeDef* huart, void (*rx_callback)(uint8_t* data, uint16_t size), void (*tx_callback)(void)) {
 8004670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    bt->rx_index = 0;
    bt->huart = huart;
    bt->bluetooth_rx_callback = rx_callback;
    bt->bluetooth_tx_callback = tx_callback;
 8004672:	e9c0 2342 	strd	r2, r3, [r0, #264]	@ 0x108
    bt->rx_index = 0;
 8004676:	2600      	movs	r6, #0
    bt->tx_complete = 1; // 전송 완료 플래그 초기화
 8004678:	2701      	movs	r7, #1

    // UART 초기화 코드
    huart->Instance = UART7;
    huart->Init.BaudRate = 9600;
 800467a:	4a14      	ldr	r2, [pc, #80]	@ (80046cc <Bluetooth_init+0x5c>)
 800467c:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
    bt->rx_index = 0;
 8004680:	f8a0 6104 	strh.w	r6, [r0, #260]	@ 0x104
void Bluetooth_init(Bluetooth* bt, UART_HandleTypeDef* huart, void (*rx_callback)(uint8_t* data, uint16_t size), void (*tx_callback)(void)) {
 8004684:	4605      	mov	r5, r0
    bt->huart = huart;
 8004686:	6001      	str	r1, [r0, #0]
void Bluetooth_init(Bluetooth* bt, UART_HandleTypeDef* huart, void (*rx_callback)(uint8_t* data, uint16_t size), void (*tx_callback)(void)) {
 8004688:	460c      	mov	r4, r1
    bt->tx_complete = 1; // 전송 완료 플래그 초기화
 800468a:	f880 7106 	strb.w	r7, [r0, #262]	@ 0x106
    huart->Init.StopBits = UART_STOPBITS_1;
    huart->Init.Parity = UART_PARITY_NONE;
    huart->Init.Mode = UART_MODE_TX_RX;
    huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
    huart->Init.OverSampling = UART_OVERSAMPLING_16;
    if (HAL_UART_Init(huart) != HAL_OK) {
 800468e:	4608      	mov	r0, r1
    huart->Init.Parity = UART_PARITY_NONE;
 8004690:	610e      	str	r6, [r1, #16]
    huart->Init.OverSampling = UART_OVERSAMPLING_16;
 8004692:	61ce      	str	r6, [r1, #28]
    huart->Init.BaudRate = 9600;
 8004694:	e9c1 2300 	strd	r2, r3, [r1]
    huart->Init.Mode = UART_MODE_TX_RX;
 8004698:	230c      	movs	r3, #12
    huart->Init.StopBits = UART_STOPBITS_1;
 800469a:	e9c1 6602 	strd	r6, r6, [r1, #8]
    huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800469e:	e9c1 3605 	strd	r3, r6, [r1, #20]
    if (HAL_UART_Init(huart) != HAL_OK) {
 80046a2:	f003 fb19 	bl	8007cd8 <HAL_UART_Init>
        // 초기화 오류 처리
    }
    // UART 인터럽트 활성화
    HAL_NVIC_SetPriority(UART7_IRQn, 0, 1);
 80046a6:	463a      	mov	r2, r7
 80046a8:	4631      	mov	r1, r6
 80046aa:	2052      	movs	r0, #82	@ 0x52
 80046ac:	f000 fb24 	bl	8004cf8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART7_IRQn);
 80046b0:	2052      	movs	r0, #82	@ 0x52
 80046b2:	f000 fb53 	bl	8004d5c <HAL_NVIC_EnableIRQ>

    // 첫 수신 인터럽트 시작
    HAL_UART_Receive_IT(huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
 80046b6:	f8b5 1104 	ldrh.w	r1, [r5, #260]	@ 0x104
 80046ba:	463a      	mov	r2, r7
 80046bc:	4620      	mov	r0, r4
 80046be:	3104      	adds	r1, #4
 80046c0:	4429      	add	r1, r5
}
 80046c2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    HAL_UART_Receive_IT(huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
 80046c6:	f003 bb8f 	b.w	8007de8 <HAL_UART_Receive_IT>
 80046ca:	bf00      	nop
 80046cc:	40007800 	.word	0x40007800

080046d0 <Bluetooth_write_data>:


void Bluetooth_write_data(Bluetooth* bt, uint8_t* data, uint16_t size) {
 80046d0:	b508      	push	{r3, lr}
    bt->tx_complete = 0; // 전송 완료 플래그 초기화
 80046d2:	2300      	movs	r3, #0
 80046d4:	f880 3106 	strb.w	r3, [r0, #262]	@ 0x106
    if (HAL_UART_Transmit(bt->huart, data, size, -1) != HAL_OK) {
 80046d8:	f04f 33ff 	mov.w	r3, #4294967295
 80046dc:	6800      	ldr	r0, [r0, #0]
 80046de:	f003 fa88 	bl	8007bf2 <HAL_UART_Transmit>
 80046e2:	b100      	cbz	r0, 80046e6 <Bluetooth_write_data+0x16>
        // 전송 오류 처리
        	while(1){
 80046e4:	e7fe      	b.n	80046e4 <Bluetooth_write_data+0x14>
            // 오류 처리 루프
        	}
    }
}
 80046e6:	bd08      	pop	{r3, pc}

080046e8 <Bluetooth_handle_rx_interrupt>:

// 전송 완료 콜백 함수
void Bluetooth_handle_rx_interrupt(Bluetooth* bt) {
    // 버퍼 오버플로 방지
    if (bt->rx_index >= sizeof(bt->rx_buffer)) {
 80046e8:	f8b0 3104 	ldrh.w	r3, [r0, #260]	@ 0x104
 80046ec:	2bff      	cmp	r3, #255	@ 0xff
        bt->rx_index = 0;
 80046ee:	bf84      	itt	hi
 80046f0:	2300      	movhi	r3, #0
 80046f2:	f8a0 3104 	strhhi.w	r3, [r0, #260]	@ 0x104
    }
    if (bt->rx_buffer[bt->rx_index]  == '\n' && bt->rx_buffer[bt->rx_index - 1] == '\r') {
 80046f6:	f8b0 1104 	ldrh.w	r1, [r0, #260]	@ 0x104
 80046fa:	1843      	adds	r3, r0, r1
 80046fc:	791a      	ldrb	r2, [r3, #4]
 80046fe:	2a0a      	cmp	r2, #10
 8004700:	d107      	bne.n	8004712 <Bluetooth_handle_rx_interrupt+0x2a>
 8004702:	78db      	ldrb	r3, [r3, #3]
 8004704:	2b0d      	cmp	r3, #13
 8004706:	d104      	bne.n	8004712 <Bluetooth_handle_rx_interrupt+0x2a>
        // 수신된 데이터를 콜백으로 전달
        if (bt->bluetooth_rx_callback) {
 8004708:	f8d0 3108 	ldr.w	r3, [r0, #264]	@ 0x108
 800470c:	b15b      	cbz	r3, 8004726 <Bluetooth_handle_rx_interrupt+0x3e>
            bt->bluetooth_rx_callback(bt->rx_buffer, bt->rx_index);
 800470e:	3004      	adds	r0, #4
 8004710:	4718      	bx	r3
        }
    }
    else
    {
        bt->rx_index++;
 8004712:	3101      	adds	r1, #1
        // 다음 수신을 위한 인터럽트 설정
        HAL_UART_Receive_IT(bt->huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
 8004714:	2201      	movs	r2, #1
        bt->rx_index++;
 8004716:	b289      	uxth	r1, r1
 8004718:	f8a0 1104 	strh.w	r1, [r0, #260]	@ 0x104
        HAL_UART_Receive_IT(bt->huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
 800471c:	3104      	adds	r1, #4
 800471e:	4401      	add	r1, r0
 8004720:	6800      	ldr	r0, [r0, #0]
 8004722:	f003 bb61 	b.w	8007de8 <HAL_UART_Receive_IT>
    }
}
 8004726:	4770      	bx	lr

08004728 <UART7_IRQHandler>:

void UART7_IRQHandler(void) {
    HAL_UART_IRQHandler(bt.huart);
 8004728:	4b01      	ldr	r3, [pc, #4]	@ (8004730 <UART7_IRQHandler+0x8>)
 800472a:	6818      	ldr	r0, [r3, #0]
 800472c:	f002 beaa 	b.w	8007484 <HAL_UART_IRQHandler>
 8004730:	20001d08 	.word	0x20001d08

08004734 <QSPI_AutoPollingMemReady.constprop.0>:
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout
  * @retval None
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8004734:	b500      	push	{lr}
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004736:	f44f 7280 	mov.w	r2, #256	@ 0x100
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800473a:	b095      	sub	sp, #84	@ 0x54
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800473c:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8004740:	4603      	mov	r3, r0
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004742:	920c      	str	r2, [sp, #48]	@ 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8004744:	2205      	movs	r2, #5
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8004746:	910f      	str	r1, [sp, #60]	@ 0x3c
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8004748:	2101      	movs	r1, #1
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800474a:	9206      	str	r2, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800474c:	2200      	movs	r2, #0
  s_config.Mask            = N25Q128A_SR_WIP;
 800474e:	9101      	str	r1, [sp, #4]
  s_command.DummyCycles       = 0;
 8004750:	920b      	str	r2, [sp, #44]	@ 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004752:	9213      	str	r2, [sp, #76]	@ 0x4c
  s_config.Match           = 0;
 8004754:	9200      	str	r2, [sp, #0]
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
  s_config.Interval        = 0x10;
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8004756:	480b      	ldr	r0, [pc, #44]	@ (8004784 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
  s_config.StatusBytesSize = 1;
 8004758:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800475c:	e9cd 220d 	strd	r2, r2, [sp, #52]	@ 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004760:	e9cd 2211 	strd	r2, r2, [sp, #68]	@ 0x44
  s_config.Interval        = 0x10;
 8004764:	2210      	movs	r2, #16
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8004766:	a906      	add	r1, sp, #24
  s_config.Interval        = 0x10;
 8004768:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800476a:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 800476e:	9205      	str	r2, [sp, #20]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8004770:	466a      	mov	r2, sp
 8004772:	f001 fd83 	bl	800627c <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8004776:	3800      	subs	r0, #0
 8004778:	bf18      	it	ne
 800477a:	2001      	movne	r0, #1
 800477c:	b015      	add	sp, #84	@ 0x54
 800477e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004782:	bf00      	nop
 8004784:	20001e18 	.word	0x20001e18

08004788 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8004788:	b500      	push	{lr}
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800478a:	f44f 7380 	mov.w	r3, #256	@ 0x100
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 800478e:	b095      	sub	sp, #84	@ 0x54
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004790:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004794:	4817      	ldr	r0, [pc, #92]	@ (80047f4 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004796:	930c      	str	r3, [sp, #48]	@ 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8004798:	2306      	movs	r3, #6
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800479a:	a906      	add	r1, sp, #24
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800479c:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800479e:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80047a0:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
  s_command.DataMode          = QSPI_DATA_NONE;
 80047a4:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.DummyCycles       = 0;
 80047a6:	930b      	str	r3, [sp, #44]	@ 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80047a8:	9313      	str	r3, [sp, #76]	@ 0x4c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80047aa:	e9cd 3311 	strd	r3, r3, [sp, #68]	@ 0x44
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047ae:	f001 fd20 	bl	80061f2 <HAL_QSPI_Command>
 80047b2:	b9e0      	cbnz	r0, 80047ee <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 80047b4:	2302      	movs	r3, #2
  s_config.Interval        = 0x10;
 80047b6:	2201      	movs	r2, #1
  s_command.Instruction    = READ_STATUS_REG_CMD;
 80047b8:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 80047bc:	9004      	str	r0, [sp, #16]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047be:	480d      	ldr	r0, [pc, #52]	@ (80047f4 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_config.Mask            = N25Q128A_SR_WREN;
 80047c0:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 80047c4:	2310      	movs	r3, #16
 80047c6:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 80047ca:	2305      	movs	r3, #5
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047cc:	466a      	mov	r2, sp
  s_command.Instruction    = READ_STATUS_REG_CMD;
 80047ce:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80047d2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047d6:	a906      	add	r1, sp, #24
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80047d8:	930f      	str	r3, [sp, #60]	@ 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047da:	f241 3388 	movw	r3, #5000	@ 0x1388
 80047de:	f001 fd4d 	bl	800627c <HAL_QSPI_AutoPolling>
 80047e2:	3800      	subs	r0, #0
 80047e4:	bf18      	it	ne
 80047e6:	2001      	movne	r0, #1
}
 80047e8:	b015      	add	sp, #84	@ 0x54
 80047ea:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 80047ee:	2001      	movs	r0, #1
 80047f0:	e7fa      	b.n	80047e8 <QSPI_WriteEnable.constprop.0+0x60>
 80047f2:	bf00      	nop
 80047f4:	20001e18 	.word	0x20001e18

080047f8 <BSP_QSPI_EnableMemoryMappedMode>:
{
 80047f8:	b500      	push	{lr}
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80047fa:	f44f 7380 	mov.w	r3, #256	@ 0x100
{
 80047fe:	b091      	sub	sp, #68	@ 0x44
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8004800:	f04f 7240 	mov.w	r2, #50331648	@ 0x3000000
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004804:	480e      	ldr	r0, [pc, #56]	@ (8004840 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004806:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8004808:	23eb      	movs	r3, #235	@ 0xeb
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800480a:	a902      	add	r1, sp, #8
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 800480c:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 800480e:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8004812:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8004814:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8004818:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800481a:	2300      	movs	r3, #0
 800481c:	e9cd 320a 	strd	r3, r2, [sp, #40]	@ 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8004820:	220a      	movs	r2, #10
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004822:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8004824:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004826:	466a      	mov	r2, sp
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004828:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 800482c:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004830:	f001 fd75 	bl	800631e <HAL_QSPI_MemoryMapped>
}
 8004834:	3800      	subs	r0, #0
 8004836:	bf18      	it	ne
 8004838:	2001      	movne	r0, #1
 800483a:	b011      	add	sp, #68	@ 0x44
 800483c:	f85d fb04 	ldr.w	pc, [sp], #4
 8004840:	20001e18 	.word	0x20001e18

08004844 <BSP_QSPI_MspInit>:
  QSPI_CLK_ENABLE();
 8004844:	4b45      	ldr	r3, [pc, #276]	@ (800495c <BSP_QSPI_MspInit+0x118>)
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8004846:	2101      	movs	r1, #1
  QSPI_CLK_ENABLE();
 8004848:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800484a:	f042 0202 	orr.w	r2, r2, #2
{
 800484e:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPI_CLK_ENABLE();
 8004850:	639a      	str	r2, [r3, #56]	@ 0x38
{
 8004852:	b08d      	sub	sp, #52	@ 0x34
  QSPI_CLK_ENABLE();
 8004854:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004856:	2409      	movs	r4, #9
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004858:	4d41      	ldr	r5, [pc, #260]	@ (8004960 <BSP_QSPI_MspInit+0x11c>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800485a:	2704      	movs	r7, #4
  QSPI_CLK_ENABLE();
 800485c:	f002 0202 	and.w	r2, r2, #2
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8004860:	2600      	movs	r6, #0
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004862:	4628      	mov	r0, r5
  QSPI_CLK_ENABLE();
 8004864:	9200      	str	r2, [sp, #0]
 8004866:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8004868:	699a      	ldr	r2, [r3, #24]
 800486a:	f042 0202 	orr.w	r2, r2, #2
 800486e:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8004870:	699a      	ldr	r2, [r3, #24]
 8004872:	f022 0202 	bic.w	r2, r2, #2
 8004876:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8004878:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800487a:	f042 0202 	orr.w	r2, r2, #2
 800487e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004880:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004882:	f002 0202 	and.w	r2, r2, #2
 8004886:	9201      	str	r2, [sp, #4]
 8004888:	9a01      	ldr	r2, [sp, #4]
  QSPI_CLK_GPIO_CLK_ENABLE();
 800488a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800488c:	f042 0202 	orr.w	r2, r2, #2
 8004890:	631a      	str	r2, [r3, #48]	@ 0x30
 8004892:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004894:	f002 0202 	and.w	r2, r2, #2
 8004898:	9202      	str	r2, [sp, #8]
 800489a:	9a02      	ldr	r2, [sp, #8]
  QSPI_D0_GPIO_CLK_ENABLE();
 800489c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800489e:	f042 0208 	orr.w	r2, r2, #8
 80048a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80048a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80048a6:	f002 0208 	and.w	r2, r2, #8
 80048aa:	9203      	str	r2, [sp, #12]
 80048ac:	9a03      	ldr	r2, [sp, #12]
  QSPI_D1_GPIO_CLK_ENABLE();
 80048ae:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80048b0:	f042 0208 	orr.w	r2, r2, #8
 80048b4:	631a      	str	r2, [r3, #48]	@ 0x30
 80048b6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80048b8:	f002 0208 	and.w	r2, r2, #8
 80048bc:	9204      	str	r2, [sp, #16]
 80048be:	9a04      	ldr	r2, [sp, #16]
  QSPI_D2_GPIO_CLK_ENABLE();
 80048c0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80048c2:	f042 0210 	orr.w	r2, r2, #16
 80048c6:	631a      	str	r2, [r3, #48]	@ 0x30
 80048c8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80048ca:	f002 0210 	and.w	r2, r2, #16
 80048ce:	9205      	str	r2, [sp, #20]
 80048d0:	9a05      	ldr	r2, [sp, #20]
  QSPI_D3_GPIO_CLK_ENABLE();
 80048d2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80048d4:	f042 0208 	orr.w	r2, r2, #8
 80048d8:	631a      	str	r2, [r3, #48]	@ 0x30
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80048da:	2240      	movs	r2, #64	@ 0x40
  QSPI_D3_GPIO_CLK_ENABLE();
 80048dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80048de:	f003 0308 	and.w	r3, r3, #8
 80048e2:	9306      	str	r3, [sp, #24]
 80048e4:	9b06      	ldr	r3, [sp, #24]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80048e6:	2302      	movs	r3, #2
 80048e8:	e9cd 2307 	strd	r2, r3, [sp, #28]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 80048ec:	2303      	movs	r3, #3
 80048ee:	e9cd 1309 	strd	r1, r3, [sp, #36]	@ 0x24
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 80048f2:	230a      	movs	r3, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80048f4:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 80048f6:	930b      	str	r3, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80048f8:	f000 fc48 	bl	800518c <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80048fc:	a907      	add	r1, sp, #28
 80048fe:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8004900:	9707      	str	r7, [sp, #28]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8004902:	9609      	str	r6, [sp, #36]	@ 0x24
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004904:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004906:	f000 fc41 	bl	800518c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D0_PIN;
 800490a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 800490e:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004910:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 8004912:	441d      	add	r5, r3
  gpio_init_structure.Pin       = QSPI_D0_PIN;
 8004914:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 8004916:	4628      	mov	r0, r5
 8004918:	f000 fc38 	bl	800518c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D1_PIN;
 800491c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  HAL_GPIO_Init(QSPI_D1_GPIO_PORT, &gpio_init_structure);
 8004920:	a907      	add	r1, sp, #28
 8004922:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = QSPI_D1_PIN;
 8004924:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004926:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D1_GPIO_PORT, &gpio_init_structure);
 8004928:	f000 fc30 	bl	800518c <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_D2_GPIO_PORT, &gpio_init_structure);
 800492c:	a907      	add	r1, sp, #28
 800492e:	480d      	ldr	r0, [pc, #52]	@ (8004964 <BSP_QSPI_MspInit+0x120>)
  gpio_init_structure.Pin       = QSPI_D2_PIN;
 8004930:	9707      	str	r7, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004932:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D2_GPIO_PORT, &gpio_init_structure);
 8004934:	f000 fc2a 	bl	800518c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D3_PIN;
 8004938:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(QSPI_D3_GPIO_PORT, &gpio_init_structure);
 800493c:	a907      	add	r1, sp, #28
 800493e:	4628      	mov	r0, r5
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004940:	940b      	str	r4, [sp, #44]	@ 0x2c
  gpio_init_structure.Pin       = QSPI_D3_PIN;
 8004942:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(QSPI_D3_GPIO_PORT, &gpio_init_structure);
 8004944:	f000 fc22 	bl	800518c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8004948:	4632      	mov	r2, r6
 800494a:	210f      	movs	r1, #15
 800494c:	205c      	movs	r0, #92	@ 0x5c
 800494e:	f000 f9d3 	bl	8004cf8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8004952:	205c      	movs	r0, #92	@ 0x5c
 8004954:	f000 fa02 	bl	8004d5c <HAL_NVIC_EnableIRQ>
}
 8004958:	b00d      	add	sp, #52	@ 0x34
 800495a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800495c:	40023800 	.word	0x40023800
 8004960:	40020400 	.word	0x40020400
 8004964:	40021000 	.word	0x40021000

08004968 <BSP_QSPI_Init>:
{ 
 8004968:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 800496a:	4c49      	ldr	r4, [pc, #292]	@ (8004a90 <BSP_QSPI_Init+0x128>)
{ 
 800496c:	b091      	sub	sp, #68	@ 0x44
  QSPIHandle.Instance = QUADSPI;
 800496e:	4b49      	ldr	r3, [pc, #292]	@ (8004a94 <BSP_QSPI_Init+0x12c>)
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8004970:	4620      	mov	r0, r4
  QSPIHandle.Instance = QUADSPI;
 8004972:	6023      	str	r3, [r4, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8004974:	f001 fc2a 	bl	80061cc <HAL_QSPI_DeInit>
 8004978:	4605      	mov	r5, r0
 800497a:	b110      	cbz	r0, 8004982 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 800497c:	2001      	movs	r0, #1
}
 800497e:	b011      	add	sp, #68	@ 0x44
 8004980:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8004982:	4601      	mov	r1, r0
 8004984:	4620      	mov	r0, r4
 8004986:	f7ff ff5d 	bl	8004844 <BSP_QSPI_MspInit>
  QSPIHandle.Init.FifoThreshold      = 4;
 800498a:	2601      	movs	r6, #1
 800498c:	2304      	movs	r3, #4
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800498e:	f04f 7780 	mov.w	r7, #16777216	@ 0x1000000
 8004992:	e9c4 6301 	strd	r6, r3, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8004996:	2310      	movs	r3, #16
 8004998:	60e3      	str	r3, [r4, #12]
 800499a:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 800499e:	fab3 f383 	clz	r3, r3
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 80049a2:	4620      	mov	r0, r4
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 80049a4:	3b01      	subs	r3, #1
 80049a6:	6123      	str	r3, [r4, #16]
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE; /* Min 50ns for nonRead */
 80049a8:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 80049ac:	e9c4 5507 	strd	r5, r5, [r4, #28]
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 80049b0:	e9c4 3505 	strd	r3, r5, [r4, #20]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 80049b4:	f001 fbb8 	bl	8006128 <HAL_QSPI_Init>
 80049b8:	2800      	cmp	r0, #0
 80049ba:	d1df      	bne.n	800497c <BSP_QSPI_Init+0x14>
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80049bc:	f44f 7580 	mov.w	r5, #256	@ 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 80049c0:	2366      	movs	r3, #102	@ 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 80049c2:	900b      	str	r0, [sp, #44]	@ 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80049c4:	f241 3288 	movw	r2, #5000	@ 0x1388
  s_command.DummyCycles       = 0;
 80049c8:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80049ca:	a902      	add	r1, sp, #8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80049cc:	900f      	str	r0, [sp, #60]	@ 0x3c
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80049ce:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 80049d0:	9302      	str	r3, [sp, #8]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80049d2:	e9cd 0009 	strd	r0, r0, [sp, #36]	@ 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80049d6:	e9cd 000d 	strd	r0, r0, [sp, #52]	@ 0x34
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80049da:	4620      	mov	r0, r4
 80049dc:	f001 fc09 	bl	80061f2 <HAL_QSPI_Command>
 80049e0:	b108      	cbz	r0, 80049e6 <BSP_QSPI_Init+0x7e>
    return QSPI_NOT_SUPPORTED;
 80049e2:	2004      	movs	r0, #4
 80049e4:	e7cb      	b.n	800497e <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 80049e6:	2399      	movs	r3, #153	@ 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80049e8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80049ec:	a902      	add	r1, sp, #8
 80049ee:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 80049f0:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80049f2:	f001 fbfe 	bl	80061f2 <HAL_QSPI_Command>
 80049f6:	2800      	cmp	r0, #0
 80049f8:	d1f3      	bne.n	80049e2 <BSP_QSPI_Init+0x7a>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 80049fa:	f241 3088 	movw	r0, #5000	@ 0x1388
 80049fe:	f7ff fe99 	bl	8004734 <QSPI_AutoPollingMemReady.constprop.0>
 8004a02:	2800      	cmp	r0, #0
 8004a04:	d1ed      	bne.n	80049e2 <BSP_QSPI_Init+0x7a>
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8004a06:	2385      	movs	r3, #133	@ 0x85
  s_command.DummyCycles       = 0;
 8004a08:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004a0a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004a0e:	a902      	add	r1, sp, #8
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004a10:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8004a12:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8004a14:	970b      	str	r7, [sp, #44]	@ 0x2c
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004a16:	e9cd 0009 	strd	r0, r0, [sp, #36]	@ 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8004a1a:	e9cd 600c 	strd	r6, r0, [sp, #48]	@ 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004a1e:	e9cd 000e 	strd	r0, r0, [sp, #56]	@ 0x38
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004a22:	4620      	mov	r0, r4
 8004a24:	f001 fbe5 	bl	80061f2 <HAL_QSPI_Command>
 8004a28:	2800      	cmp	r0, #0
 8004a2a:	d1da      	bne.n	80049e2 <BSP_QSPI_Init+0x7a>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004a2c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004a30:	f10d 0107 	add.w	r1, sp, #7
 8004a34:	4620      	mov	r0, r4
 8004a36:	f001 fd5c 	bl	80064f2 <HAL_QSPI_Receive>
 8004a3a:	2800      	cmp	r0, #0
 8004a3c:	d1d1      	bne.n	80049e2 <BSP_QSPI_Init+0x7a>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8004a3e:	f7ff fea3 	bl	8004788 <QSPI_WriteEnable.constprop.0>
 8004a42:	2800      	cmp	r0, #0
 8004a44:	d1cd      	bne.n	80049e2 <BSP_QSPI_Init+0x7a>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8004a46:	2381      	movs	r3, #129	@ 0x81
 8004a48:	22f0      	movs	r2, #240	@ 0xf0
 8004a4a:	9302      	str	r3, [sp, #8]
 8004a4c:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004a50:	210a      	movs	r1, #10
 8004a52:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004a56:	fab2 f282 	clz	r2, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004a5a:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004a5c:	f003 030f 	and.w	r3, r3, #15
 8004a60:	fa01 f202 	lsl.w	r2, r1, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004a64:	a902      	add	r1, sp, #8
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004a66:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004a68:	f241 3288 	movw	r2, #5000	@ 0x1388
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004a6c:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004a70:	f001 fbbf 	bl	80061f2 <HAL_QSPI_Command>
 8004a74:	2800      	cmp	r0, #0
 8004a76:	d1b4      	bne.n	80049e2 <BSP_QSPI_Init+0x7a>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004a78:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004a7c:	f10d 0107 	add.w	r1, sp, #7
 8004a80:	4620      	mov	r0, r4
 8004a82:	f001 fcd7 	bl	8006434 <HAL_QSPI_Transmit>
 8004a86:	2800      	cmp	r0, #0
 8004a88:	f43f af79 	beq.w	800497e <BSP_QSPI_Init+0x16>
 8004a8c:	e7a9      	b.n	80049e2 <BSP_QSPI_Init+0x7a>
 8004a8e:	bf00      	nop
 8004a90:	20001e18 	.word	0x20001e18
 8004a94:	a0001000 	.word	0xa0001000

08004a98 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004a98:	490f      	ldr	r1, [pc, #60]	@ (8004ad8 <SystemInit+0x40>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8004a9a:	2000      	movs	r0, #0
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004a9c:	f8d1 3088 	ldr.w	r3, [r1, #136]	@ 0x88
 8004aa0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8004aa4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
  RCC->CR |= (uint32_t)0x00000001;
 8004aa8:	4b0c      	ldr	r3, [pc, #48]	@ (8004adc <SystemInit+0x44>)
 8004aaa:	681a      	ldr	r2, [r3, #0]
 8004aac:	f042 0201 	orr.w	r2, r2, #1
 8004ab0:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000;
 8004ab2:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8004ab4:	681a      	ldr	r2, [r3, #0]
 8004ab6:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 8004aba:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8004abe:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 8004ac0:	4a07      	ldr	r2, [pc, #28]	@ (8004ae0 <SystemInit+0x48>)
 8004ac2:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8004ac4:	681a      	ldr	r2, [r3, #0]
 8004ac6:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8004aca:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8004acc:	60d8      	str	r0, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = RAMDTCM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004ace:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8004ad2:	608b      	str	r3, [r1, #8]
#endif
}
 8004ad4:	4770      	bx	lr
 8004ad6:	bf00      	nop
 8004ad8:	e000ed00 	.word	0xe000ed00
 8004adc:	40023800 	.word	0x40023800
 8004ae0:	24003010 	.word	0x24003010

08004ae4 <ft5336_Reset>:
  */
void ft5336_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT5336 IC */
}
 8004ae4:	4770      	bx	lr

08004ae6 <ft5336_TS_ITStatus>:
  */
uint8_t ft5336_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT5336 */
  return 0;
}
 8004ae6:	2000      	movs	r0, #0
 8004ae8:	4770      	bx	lr
	...

08004aec <ft5336_ReadID>:
  volatile uint8_t ucReadId = 0;
 8004aec:	2300      	movs	r3, #0
{
 8004aee:	b537      	push	{r0, r1, r2, r4, r5, lr}
  volatile uint8_t ucReadId = 0;
 8004af0:	f88d 3007 	strb.w	r3, [sp, #7]
  * @param  None.
  * @retval : I2C initialization status.
  */
static uint8_t ft5336_Get_I2C_InitializedStatus(void)
{
  return(ft5336_handle.i2cInitialized);
 8004af4:	4b0c      	ldr	r3, [pc, #48]	@ (8004b28 <ft5336_ReadID+0x3c>)
  * @param  None.
  * @retval : None.
  */
static void ft5336_I2C_InitializeIfRequired(void)
{
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8004af6:	781a      	ldrb	r2, [r3, #0]
 8004af8:	b90a      	cbnz	r2, 8004afe <ft5336_ReadID+0x12>
  {
    /* Initialize TS IO BUS layer (I2C) */
    //TS_IO_Init();

    /* Set state to initialized */
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8004afa:	2201      	movs	r2, #1
 8004afc:	701a      	strb	r2, [r3, #0]
{
 8004afe:	2403      	movs	r4, #3
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8004b00:	b2c5      	uxtb	r5, r0
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8004b02:	3c01      	subs	r4, #1
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8004b04:	21a8      	movs	r1, #168	@ 0xa8
 8004b06:	4628      	mov	r0, r5
 8004b08:	f7fc fd30 	bl	800156c <TS_IO_Read>
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8004b0c:	f014 04ff 	ands.w	r4, r4, #255	@ 0xff
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8004b10:	f88d 0007 	strb.w	r0, [sp, #7]
    if(ucReadId == FT5336_ID_VALUE)
 8004b14:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004b18:	b2db      	uxtb	r3, r3
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8004b1a:	d001      	beq.n	8004b20 <ft5336_ReadID+0x34>
 8004b1c:	2b51      	cmp	r3, #81	@ 0x51
 8004b1e:	d1f0      	bne.n	8004b02 <ft5336_ReadID+0x16>
  return (ucReadId);
 8004b20:	f89d 0007 	ldrb.w	r0, [sp, #7]
}
 8004b24:	b003      	add	sp, #12
 8004b26:	bd30      	pop	{r4, r5, pc}
 8004b28:	20001e66 	.word	0x20001e66

08004b2c <ft5336_TS_DetectTouch>:
{
 8004b2c:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8004b2e:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 8004b30:	2102      	movs	r1, #2
 8004b32:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8004b34:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 8004b38:	f7fc fd18 	bl	800156c <TS_IO_Read>
 8004b3c:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT5336_TD_STAT_MASK;
 8004b40:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004b44:	f003 030f 	and.w	r3, r3, #15
 8004b48:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT5336_MAX_DETECTABLE_TOUCH)
 8004b4c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004b50:	2b05      	cmp	r3, #5
 8004b52:	d901      	bls.n	8004b58 <ft5336_TS_DetectTouch+0x2c>
    nbTouch = 0;
 8004b54:	f88d 4007 	strb.w	r4, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
 8004b58:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8004b5c:	4b03      	ldr	r3, [pc, #12]	@ (8004b6c <ft5336_TS_DetectTouch+0x40>)
  return(nbTouch);
 8004b5e:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
 8004b62:	705a      	strb	r2, [r3, #1]
  ft5336_handle.currActiveTouchIdx = 0;
 8004b64:	2200      	movs	r2, #0
 8004b66:	709a      	strb	r2, [r3, #2]
}
 8004b68:	b002      	add	sp, #8
 8004b6a:	bd10      	pop	{r4, pc}
 8004b6c:	20001e66 	.word	0x20001e66

08004b70 <ft5336_TS_GetXY>:
{
 8004b70:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8004b74:	4c2f      	ldr	r4, [pc, #188]	@ (8004c34 <ft5336_TS_GetXY+0xc4>)
{
 8004b76:	4615      	mov	r5, r2
  volatile uint8_t ucReadData = 0;
 8004b78:	f04f 0800 	mov.w	r8, #0
{
 8004b7c:	460f      	mov	r7, r1
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8004b7e:	78a3      	ldrb	r3, [r4, #2]
 8004b80:	7862      	ldrb	r2, [r4, #1]
  volatile uint8_t ucReadData = 0;
 8004b82:	f88d 8007 	strb.w	r8, [sp, #7]
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8004b86:	429a      	cmp	r2, r3
 8004b88:	d94d      	bls.n	8004c26 <ft5336_TS_GetXY+0xb6>
    switch(ft5336_handle.currActiveTouchIdx)
 8004b8a:	2b09      	cmp	r3, #9
 8004b8c:	d84e      	bhi.n	8004c2c <ft5336_TS_GetXY+0xbc>
 8004b8e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8004b92:	005b      	lsls	r3, r3, #1
 8004b94:	b2db      	uxtb	r3, r3
 8004b96:	1d19      	adds	r1, r3, #4
 8004b98:	f103 0b03 	add.w	fp, r3, #3
 8004b9c:	f103 0a06 	add.w	sl, r3, #6
 8004ba0:	3305      	adds	r3, #5
 8004ba2:	b2c9      	uxtb	r1, r1
 8004ba4:	fa5f fb8b 	uxtb.w	fp, fp
 8004ba8:	fa5f fa8a 	uxtb.w	sl, sl
 8004bac:	fa5f f883 	uxtb.w	r8, r3
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 8004bb0:	b2c6      	uxtb	r6, r0
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004bb2:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 8004c38 <ft5336_TS_GetXY+0xc8>
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 8004bb6:	4630      	mov	r0, r6
 8004bb8:	f7fc fcd8 	bl	800156c <TS_IO_Read>
 8004bbc:	f88d 0007 	strb.w	r0, [sp, #7]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004bc0:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8004bc4:	4659      	mov	r1, fp
 8004bc6:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004bc8:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8004bcc:	f7fc fcce 	bl	800156c <TS_IO_Read>
 8004bd0:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8004bd4:	4651      	mov	r1, sl
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004bd6:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8004bda:	4630      	mov	r0, r6
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004bdc:	f8b9 2000 	ldrh.w	r2, [r9]
 8004be0:	021b      	lsls	r3, r3, #8
 8004be2:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8004be6:	4313      	orrs	r3, r2
    *X = coord;
 8004be8:	803b      	strh	r3, [r7, #0]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004bea:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8004bee:	f7fc fcbd 	bl	800156c <TS_IO_Read>
 8004bf2:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8004bf6:	4641      	mov	r1, r8
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004bf8:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8004bfc:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004bfe:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8004c02:	f7fc fcb3 	bl	800156c <TS_IO_Read>
 8004c06:	f88d 0007 	strb.w	r0, [sp, #7]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004c0a:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004c0e:	f8b9 2000 	ldrh.w	r2, [r9]
 8004c12:	021b      	lsls	r3, r3, #8
 8004c14:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8004c18:	4313      	orrs	r3, r2
 8004c1a:	f8a9 3000 	strh.w	r3, [r9]
    *Y = coord;
 8004c1e:	802b      	strh	r3, [r5, #0]
    ft5336_handle.currActiveTouchIdx++; /* next call will work on next touch */
 8004c20:	78a3      	ldrb	r3, [r4, #2]
 8004c22:	3301      	adds	r3, #1
 8004c24:	70a3      	strb	r3, [r4, #2]
}
 8004c26:	b003      	add	sp, #12
 8004c28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8004c2c:	46c2      	mov	sl, r8
 8004c2e:	46c3      	mov	fp, r8
 8004c30:	4641      	mov	r1, r8
 8004c32:	e7bd      	b.n	8004bb0 <ft5336_TS_GetXY+0x40>
 8004c34:	20001e66 	.word	0x20001e66
 8004c38:	20001e64 	.word	0x20001e64

08004c3c <ft5336_TS_EnableIT>:
   TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 8004c3c:	2201      	movs	r2, #1
 8004c3e:	21a4      	movs	r1, #164	@ 0xa4
 8004c40:	b2c0      	uxtb	r0, r0
 8004c42:	f7fc bc79 	b.w	8001538 <TS_IO_Write>

08004c46 <ft5336_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 8004c46:	2200      	movs	r2, #0
 8004c48:	21a4      	movs	r1, #164	@ 0xa4
 8004c4a:	b2c0      	uxtb	r0, r0
 8004c4c:	f7fc bc74 	b.w	8001538 <TS_IO_Write>

08004c50 <ft5336_TS_Start>:
  ft5336_TS_DisableIT(DeviceAddr);
 8004c50:	f7ff bff9 	b.w	8004c46 <ft5336_TS_DisableIT>

08004c54 <ft5336_TS_ClearIT>:
void ft5336_TS_ClearIT(uint16_t DeviceAddr)
 8004c54:	4770      	bx	lr
	...

08004c58 <ft5336_Init>:
  return(ft5336_handle.i2cInitialized);
 8004c58:	4b02      	ldr	r3, [pc, #8]	@ (8004c64 <ft5336_Init+0xc>)
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8004c5a:	781a      	ldrb	r2, [r3, #0]
 8004c5c:	b90a      	cbnz	r2, 8004c62 <ft5336_Init+0xa>
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8004c5e:	2201      	movs	r2, #1
 8004c60:	701a      	strb	r2, [r3, #0]
}
 8004c62:	4770      	bx	lr
 8004c64:	20001e66 	.word	0x20001e66

08004c68 <HAL_Init>:
  __HAL_FLASH_ART_ENABLE();
#endif /* ART_ACCELERATOR_ENABLE */

  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004c68:	4a07      	ldr	r2, [pc, #28]	@ (8004c88 <HAL_Init+0x20>)
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004c6a:	2003      	movs	r0, #3
{
 8004c6c:	b508      	push	{r3, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004c6e:	6813      	ldr	r3, [r2, #0]
 8004c70:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004c74:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004c76:	f000 f82d 	bl	8004cd4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004c7a:	2000      	movs	r0, #0
 8004c7c:	f7fc faf6 	bl	800126c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004c80:	f7fc f854 	bl	8000d2c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004c84:	2000      	movs	r0, #0
 8004c86:	bd08      	pop	{r3, pc}
 8004c88:	40023c00 	.word	0x40023c00

08004c8c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004c8c:	4a03      	ldr	r2, [pc, #12]	@ (8004c9c <HAL_IncTick+0x10>)
 8004c8e:	4b04      	ldr	r3, [pc, #16]	@ (8004ca0 <HAL_IncTick+0x14>)
 8004c90:	6811      	ldr	r1, [r2, #0]
 8004c92:	781b      	ldrb	r3, [r3, #0]
 8004c94:	440b      	add	r3, r1
 8004c96:	6013      	str	r3, [r2, #0]
}
 8004c98:	4770      	bx	lr
 8004c9a:	bf00      	nop
 8004c9c:	20001e6c 	.word	0x20001e6c
 8004ca0:	20000038 	.word	0x20000038

08004ca4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004ca4:	4b01      	ldr	r3, [pc, #4]	@ (8004cac <HAL_GetTick+0x8>)
 8004ca6:	6818      	ldr	r0, [r3, #0]
}
 8004ca8:	4770      	bx	lr
 8004caa:	bf00      	nop
 8004cac:	20001e6c 	.word	0x20001e6c

08004cb0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004cb0:	b538      	push	{r3, r4, r5, lr}
 8004cb2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004cb4:	f7ff fff6 	bl	8004ca4 <HAL_GetTick>
 8004cb8:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004cba:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004cbc:	bf1e      	ittt	ne
 8004cbe:	4b04      	ldrne	r3, [pc, #16]	@ (8004cd0 <HAL_Delay+0x20>)
 8004cc0:	781b      	ldrbne	r3, [r3, #0]
 8004cc2:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8004cc4:	f7ff ffee 	bl	8004ca4 <HAL_GetTick>
 8004cc8:	1b43      	subs	r3, r0, r5
 8004cca:	42a3      	cmp	r3, r4
 8004ccc:	d3fa      	bcc.n	8004cc4 <HAL_Delay+0x14>
  {
  }
}
 8004cce:	bd38      	pop	{r3, r4, r5, pc}
 8004cd0:	20000038 	.word	0x20000038

08004cd4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004cd4:	4907      	ldr	r1, [pc, #28]	@ (8004cf4 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004cd6:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004cd8:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004cda:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004cde:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8004ce2:	0412      	lsls	r2, r2, #16
 8004ce4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004ce6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004ce8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004cec:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8004cf0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004cf2:	4770      	bx	lr
 8004cf4:	e000ed00 	.word	0xe000ed00

08004cf8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004cf8:	4b16      	ldr	r3, [pc, #88]	@ (8004d54 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004cfa:	b530      	push	{r4, r5, lr}
 8004cfc:	68dc      	ldr	r4, [r3, #12]
 8004cfe:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004d02:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004d06:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004d08:	2b04      	cmp	r3, #4
 8004d0a:	bf28      	it	cs
 8004d0c:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004d0e:	2d06      	cmp	r5, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004d10:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004d14:	bf8c      	ite	hi
 8004d16:	3c03      	subhi	r4, #3
 8004d18:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004d1a:	fa05 f303 	lsl.w	r3, r5, r3
  if ((int32_t)(IRQn) >= 0)
 8004d1e:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004d20:	fa05 f504 	lsl.w	r5, r5, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004d24:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004d28:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004d2c:	fa03 f304 	lsl.w	r3, r3, r4
 8004d30:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004d34:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8004d38:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 8004d3a:	db06      	blt.n	8004d4a <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004d3c:	f100 4060 	add.w	r0, r0, #3758096384	@ 0xe0000000
 8004d40:	f500 4061 	add.w	r0, r0, #57600	@ 0xe100
 8004d44:	f880 3300 	strb.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004d48:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004d4a:	f000 000f 	and.w	r0, r0, #15
 8004d4e:	4a02      	ldr	r2, [pc, #8]	@ (8004d58 <HAL_NVIC_SetPriority+0x60>)
 8004d50:	5413      	strb	r3, [r2, r0]
 8004d52:	e7f9      	b.n	8004d48 <HAL_NVIC_SetPriority+0x50>
 8004d54:	e000ed00 	.word	0xe000ed00
 8004d58:	e000ed14 	.word	0xe000ed14

08004d5c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004d5c:	2800      	cmp	r0, #0
 8004d5e:	db07      	blt.n	8004d70 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004d60:	0941      	lsrs	r1, r0, #5
 8004d62:	2301      	movs	r3, #1
 8004d64:	f000 001f 	and.w	r0, r0, #31
 8004d68:	4a02      	ldr	r2, [pc, #8]	@ (8004d74 <HAL_NVIC_EnableIRQ+0x18>)
 8004d6a:	4083      	lsls	r3, r0
 8004d6c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004d70:	4770      	bx	lr
 8004d72:	bf00      	nop
 8004d74:	e000e100 	.word	0xe000e100

08004d78 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004d78:	2800      	cmp	r0, #0
 8004d7a:	db0c      	blt.n	8004d96 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004d7c:	0943      	lsrs	r3, r0, #5
 8004d7e:	2201      	movs	r2, #1
 8004d80:	f000 001f 	and.w	r0, r0, #31
 8004d84:	4904      	ldr	r1, [pc, #16]	@ (8004d98 <HAL_NVIC_DisableIRQ+0x20>)
 8004d86:	3320      	adds	r3, #32
 8004d88:	4082      	lsls	r2, r0
 8004d8a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8004d8e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004d92:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8004d96:	4770      	bx	lr
 8004d98:	e000e100 	.word	0xe000e100

08004d9c <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 8004d9c:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 8004da0:	4b04      	ldr	r3, [pc, #16]	@ (8004db4 <HAL_MPU_Disable+0x18>)
 8004da2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004da4:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8004da8:	625a      	str	r2, [r3, #36]	@ 0x24
  
  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 8004daa:	2200      	movs	r2, #0
 8004dac:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
}
 8004db0:	4770      	bx	lr
 8004db2:	bf00      	nop
 8004db4:	e000ed00 	.word	0xe000ed00

08004db8 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 8004db8:	4b06      	ldr	r3, [pc, #24]	@ (8004dd4 <HAL_MPU_Enable+0x1c>)
 8004dba:	f040 0001 	orr.w	r0, r0, #1
 8004dbe:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94
  
  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 8004dc2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004dc4:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8004dc8:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 8004dca:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004dce:	f3bf 8f6f 	isb	sy
  
  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 8004dd2:	4770      	bx	lr
 8004dd4:	e000ed00 	.word	0xe000ed00

08004dd8 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8004dd8:	7843      	ldrb	r3, [r0, #1]
 8004dda:	4a14      	ldr	r2, [pc, #80]	@ (8004e2c <HAL_MPU_ConfigRegion+0x54>)
{
 8004ddc:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 8004dde:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  if ((MPU_Init->Enable) != RESET)
 8004de2:	7801      	ldrb	r1, [r0, #0]
 8004de4:	b1e9      	cbz	r1, 8004e22 <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
    
    MPU->RBAR = MPU_Init->BaseAddress;
 8004de6:	6843      	ldr	r3, [r0, #4]
 8004de8:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8004dec:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004dee:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8004df0:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004df2:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004df6:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8004df8:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004dfa:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 8004dfe:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004e00:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8004e04:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004e06:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 8004e0a:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004e0c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8004e10:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004e12:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8004e16:	7a01      	ldrb	r1, [r0, #8]
 8004e18:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004e1c:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 8004e20:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 8004e22:	f8c2 109c 	str.w	r1, [r2, #156]	@ 0x9c
    MPU->RASR = 0x00;
 8004e26:	f8c2 10a0 	str.w	r1, [r2, #160]	@ 0xa0
}
 8004e2a:	e7f9      	b.n	8004e20 <HAL_MPU_ConfigRegion+0x48>
 8004e2c:	e000ed00 	.word	0xe000ed00

08004e30 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004e30:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004e32:	4604      	mov	r4, r0
 8004e34:	b908      	cbnz	r0, 8004e3a <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8004e36:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8004e38:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004e3a:	7f43      	ldrb	r3, [r0, #29]
 8004e3c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004e40:	b913      	cbnz	r3, 8004e48 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8004e42:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8004e44:	f7fb ff90 	bl	8000d68 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8004e48:	2302      	movs	r3, #2
 8004e4a:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8004e4c:	7923      	ldrb	r3, [r4, #4]
 8004e4e:	b9e3      	cbnz	r3, 8004e8a <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8004e50:	6823      	ldr	r3, [r4, #0]
 8004e52:	4a13      	ldr	r2, [pc, #76]	@ (8004ea0 <HAL_CRC_Init+0x70>)
 8004e54:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8004e56:	689a      	ldr	r2, [r3, #8]
 8004e58:	f022 0218 	bic.w	r2, r2, #24
 8004e5c:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004e5e:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004e60:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004e62:	b9d2      	cbnz	r2, 8004e9a <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004e64:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004e68:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 8004e6a:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004e6c:	689a      	ldr	r2, [r3, #8]
 8004e6e:	6961      	ldr	r1, [r4, #20]
 8004e70:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8004e74:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8004e76:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004e78:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8004e7a:	689a      	ldr	r2, [r3, #8]
 8004e7c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004e80:	430a      	orrs	r2, r1
 8004e82:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8004e84:	2301      	movs	r3, #1
 8004e86:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8004e88:	e7d6      	b.n	8004e38 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8004e8a:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8004e8e:	4620      	mov	r0, r4
 8004e90:	f000 f808 	bl	8004ea4 <HAL_CRCEx_Polynomial_Set>
 8004e94:	2800      	cmp	r0, #0
 8004e96:	d0e2      	beq.n	8004e5e <HAL_CRC_Init+0x2e>
 8004e98:	e7cd      	b.n	8004e36 <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004e9a:	6922      	ldr	r2, [r4, #16]
 8004e9c:	e7e4      	b.n	8004e68 <HAL_CRC_Init+0x38>
 8004e9e:	bf00      	nop
 8004ea0:	04c11db7 	.word	0x04c11db7

08004ea4 <HAL_CRCEx_Polynomial_Set>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8004ea4:	231f      	movs	r3, #31
{
 8004ea6:	b510      	push	{r4, lr}
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8004ea8:	3b01      	subs	r3, #1
 8004eaa:	d31d      	bcc.n	8004ee8 <HAL_CRCEx_Polynomial_Set+0x44>
 8004eac:	fa21 f403 	lsr.w	r4, r1, r3
 8004eb0:	07e4      	lsls	r4, r4, #31
 8004eb2:	d5f9      	bpl.n	8004ea8 <HAL_CRCEx_Polynomial_Set+0x4>
  {
  }

  switch (PolyLength)
 8004eb4:	2a10      	cmp	r2, #16
 8004eb6:	d013      	beq.n	8004ee0 <HAL_CRCEx_Polynomial_Set+0x3c>
 8004eb8:	2a10      	cmp	r2, #16
 8004eba:	d804      	bhi.n	8004ec6 <HAL_CRCEx_Polynomial_Set+0x22>
 8004ebc:	b13a      	cbz	r2, 8004ece <HAL_CRCEx_Polynomial_Set+0x2a>
 8004ebe:	2a08      	cmp	r2, #8
 8004ec0:	d010      	beq.n	8004ee4 <HAL_CRCEx_Polynomial_Set+0x40>
 8004ec2:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8004ec4:	e00b      	b.n	8004ede <HAL_CRCEx_Polynomial_Set+0x3a>
  switch (PolyLength)
 8004ec6:	2a18      	cmp	r2, #24
 8004ec8:	d1fb      	bne.n	8004ec2 <HAL_CRCEx_Polynomial_Set+0x1e>
      if (msb >= HAL_CRC_LENGTH_7B)
 8004eca:	2b06      	cmp	r3, #6
      if (msb >= HAL_CRC_LENGTH_16B)
 8004ecc:	d8f9      	bhi.n	8004ec2 <HAL_CRCEx_Polynomial_Set+0x1e>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8004ece:	6800      	ldr	r0, [r0, #0]
 8004ed0:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8004ed2:	6883      	ldr	r3, [r0, #8]
 8004ed4:	f023 0318 	bic.w	r3, r3, #24
 8004ed8:	4313      	orrs	r3, r2
 8004eda:	6083      	str	r3, [r0, #8]
 8004edc:	2000      	movs	r0, #0
}
 8004ede:	bd10      	pop	{r4, pc}
      if (msb >= HAL_CRC_LENGTH_8B)
 8004ee0:	2b07      	cmp	r3, #7
 8004ee2:	e7f3      	b.n	8004ecc <HAL_CRCEx_Polynomial_Set+0x28>
      if (msb >= HAL_CRC_LENGTH_16B)
 8004ee4:	2b0f      	cmp	r3, #15
 8004ee6:	e7f1      	b.n	8004ecc <HAL_CRCEx_Polynomial_Set+0x28>
  switch (PolyLength)
 8004ee8:	2a10      	cmp	r2, #16
 8004eea:	d1e5      	bne.n	8004eb8 <HAL_CRCEx_Polynomial_Set+0x14>
 8004eec:	e7e9      	b.n	8004ec2 <HAL_CRCEx_Polynomial_Set+0x1e>

08004eee <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8004eee:	b570      	push	{r4, r5, r6, lr}
 8004ef0:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004ef2:	6d86      	ldr	r6, [r0, #88]	@ 0x58
  
  uint32_t tickstart = HAL_GetTick();
 8004ef4:	f7ff fed6 	bl	8004ca4 <HAL_GetTick>
 8004ef8:	4605      	mov	r5, r0
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004efa:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
 8004efe:	2b02      	cmp	r3, #2
 8004f00:	d006      	beq.n	8004f10 <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004f02:	2380      	movs	r3, #128	@ 0x80
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
    
    return HAL_ERROR;
 8004f04:	2001      	movs	r0, #1
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004f06:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
 8004f08:	2300      	movs	r3, #0
 8004f0a:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
    
  }
  return HAL_OK;
}
 8004f0e:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004f10:	6823      	ldr	r3, [r4, #0]
 8004f12:	681a      	ldr	r2, [r3, #0]
 8004f14:	f022 0216 	bic.w	r2, r2, #22
 8004f18:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8004f1a:	695a      	ldr	r2, [r3, #20]
 8004f1c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004f20:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8004f22:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8004f24:	b90a      	cbnz	r2, 8004f2a <HAL_DMA_Abort+0x3c>
 8004f26:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 8004f28:	b11a      	cbz	r2, 8004f32 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8004f2a:	681a      	ldr	r2, [r3, #0]
 8004f2c:	f022 0208 	bic.w	r2, r2, #8
 8004f30:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8004f32:	681a      	ldr	r2, [r3, #0]
 8004f34:	f022 0201 	bic.w	r2, r2, #1
 8004f38:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8004f3a:	6823      	ldr	r3, [r4, #0]
 8004f3c:	6818      	ldr	r0, [r3, #0]
 8004f3e:	f010 0001 	ands.w	r0, r0, #1
 8004f42:	d107      	bne.n	8004f54 <HAL_DMA_Abort+0x66>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004f44:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8004f46:	233f      	movs	r3, #63	@ 0x3f
 8004f48:	4093      	lsls	r3, r2
 8004f4a:	60b3      	str	r3, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8004f4c:	2301      	movs	r3, #1
 8004f4e:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
  return HAL_OK;
 8004f52:	e7d9      	b.n	8004f08 <HAL_DMA_Abort+0x1a>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8004f54:	f7ff fea6 	bl	8004ca4 <HAL_GetTick>
 8004f58:	1b40      	subs	r0, r0, r5
 8004f5a:	2805      	cmp	r0, #5
 8004f5c:	d9ed      	bls.n	8004f3a <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004f5e:	2320      	movs	r3, #32
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004f60:	2003      	movs	r0, #3
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004f62:	6563      	str	r3, [r4, #84]	@ 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004f64:	f884 0035 	strb.w	r0, [r4, #53]	@ 0x35
        return HAL_TIMEOUT;
 8004f68:	e7ce      	b.n	8004f08 <HAL_DMA_Abort+0x1a>

08004f6a <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004f6a:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 8004f6e:	2b02      	cmp	r3, #2
 8004f70:	d003      	beq.n	8004f7a <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004f72:	2380      	movs	r3, #128	@ 0x80
 8004f74:	6543      	str	r3, [r0, #84]	@ 0x54
    return HAL_ERROR;
 8004f76:	2001      	movs	r0, #1
 8004f78:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8004f7a:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8004f7c:	2305      	movs	r3, #5
 8004f7e:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
  }

  return HAL_OK;
 8004f82:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8004f84:	6813      	ldr	r3, [r2, #0]
 8004f86:	f023 0301 	bic.w	r3, r3, #1
 8004f8a:	6013      	str	r3, [r2, #0]
}
 8004f8c:	4770      	bx	lr

08004f8e <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004f8e:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004f90:	4604      	mov	r4, r0
 8004f92:	b330      	cbz	r0, 8004fe2 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004f94:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8004f98:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004f9c:	b91b      	cbnz	r3, 8004fa6 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004f9e:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004fa2:	f7fb fef7 	bl	8000d94 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004fa6:	6822      	ldr	r2, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004fa8:	2302      	movs	r3, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004faa:	6861      	ldr	r1, [r4, #4]
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004fac:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004fae:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004fb2:	6813      	ldr	r3, [r2, #0]
 8004fb4:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8004fb8:	430b      	orrs	r3, r1
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004fba:	68a1      	ldr	r1, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004fbc:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004fbe:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8004fc0:	f023 0307 	bic.w	r3, r3, #7
 8004fc4:	430b      	orrs	r3, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004fc6:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004fc8:	6353      	str	r3, [r2, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004fca:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8004fcc:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8004fd0:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8004fd4:	430b      	orrs	r3, r1
 8004fd6:	6413      	str	r3, [r2, #64]	@ 0x40

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004fd8:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004fda:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004fdc:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8004fe0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004fe2:	2001      	movs	r0, #1
 8004fe4:	e7fc      	b.n	8004fe0 <HAL_DMA2D_Init+0x52>

08004fe6 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8004fe6:	4770      	bx	lr

08004fe8 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8004fe8:	4770      	bx	lr

08004fea <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004fea:	6803      	ldr	r3, [r0, #0]
{
 8004fec:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004fee:	685e      	ldr	r6, [r3, #4]
{
 8004ff0:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004ff2:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004ff4:	07f2      	lsls	r2, r6, #31
 8004ff6:	d514      	bpl.n	8005022 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004ff8:	05e9      	lsls	r1, r5, #23
 8004ffa:	d512      	bpl.n	8005022 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004ffc:	681a      	ldr	r2, [r3, #0]
 8004ffe:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005002:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8005004:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8005006:	f042 0201 	orr.w	r2, r2, #1
 800500a:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800500c:	2201      	movs	r2, #1
 800500e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005010:	2304      	movs	r3, #4
 8005012:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8005016:	2300      	movs	r3, #0
 8005018:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800501c:	6943      	ldr	r3, [r0, #20]
 800501e:	b103      	cbz	r3, 8005022 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8005020:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8005022:	06b2      	lsls	r2, r6, #26
 8005024:	d516      	bpl.n	8005054 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8005026:	04ab      	lsls	r3, r5, #18
 8005028:	d514      	bpl.n	8005054 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800502a:	6823      	ldr	r3, [r4, #0]
 800502c:	681a      	ldr	r2, [r3, #0]
 800502e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005032:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8005034:	2220      	movs	r2, #32
 8005036:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8005038:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800503a:	f043 0302 	orr.w	r3, r3, #2
 800503e:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005040:	2304      	movs	r3, #4
 8005042:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8005046:	2300      	movs	r3, #0
 8005048:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800504c:	6963      	ldr	r3, [r4, #20]
 800504e:	b10b      	cbz	r3, 8005054 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8005050:	4620      	mov	r0, r4
 8005052:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8005054:	0730      	lsls	r0, r6, #28
 8005056:	d516      	bpl.n	8005086 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8005058:	0529      	lsls	r1, r5, #20
 800505a:	d514      	bpl.n	8005086 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800505c:	6823      	ldr	r3, [r4, #0]
 800505e:	681a      	ldr	r2, [r3, #0]
 8005060:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005064:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8005066:	2208      	movs	r2, #8
 8005068:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800506a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800506c:	f043 0304 	orr.w	r3, r3, #4
 8005070:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005072:	2304      	movs	r3, #4
 8005074:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8005078:	2300      	movs	r3, #0
 800507a:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800507e:	6963      	ldr	r3, [r4, #20]
 8005080:	b10b      	cbz	r3, 8005086 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8005082:	4620      	mov	r0, r4
 8005084:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8005086:	0772      	lsls	r2, r6, #29
 8005088:	d50b      	bpl.n	80050a2 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800508a:	056b      	lsls	r3, r5, #21
 800508c:	d509      	bpl.n	80050a2 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800508e:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8005090:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8005092:	681a      	ldr	r2, [r3, #0]
 8005094:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005098:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800509a:	2204      	movs	r2, #4
 800509c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800509e:	f7ff ffa2 	bl	8004fe6 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80050a2:	07b0      	lsls	r0, r6, #30
 80050a4:	d514      	bpl.n	80050d0 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 80050a6:	05a9      	lsls	r1, r5, #22
 80050a8:	d512      	bpl.n	80050d0 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80050aa:	6823      	ldr	r3, [r4, #0]
 80050ac:	681a      	ldr	r2, [r3, #0]
 80050ae:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80050b2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80050b4:	2202      	movs	r2, #2
 80050b6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80050b8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80050ba:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80050bc:	2301      	movs	r3, #1
 80050be:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80050c2:	2300      	movs	r3, #0
 80050c4:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 80050c8:	6923      	ldr	r3, [r4, #16]
 80050ca:	b10b      	cbz	r3, 80050d0 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 80050cc:	4620      	mov	r0, r4
 80050ce:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80050d0:	06f2      	lsls	r2, r6, #27
 80050d2:	d513      	bpl.n	80050fc <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80050d4:	04eb      	lsls	r3, r5, #19
 80050d6:	d511      	bpl.n	80050fc <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80050d8:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80050da:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80050dc:	681a      	ldr	r2, [r3, #0]
 80050de:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80050e2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80050e4:	2210      	movs	r2, #16
 80050e6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80050e8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80050ea:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80050ec:	2301      	movs	r3, #1
 80050ee:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80050f2:	2300      	movs	r3, #0
 80050f4:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80050f8:	f7ff ff76 	bl	8004fe8 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 80050fc:	bd70      	pop	{r4, r5, r6, pc}
	...

08005100 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8005100:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8005102:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
{
 8005106:	4603      	mov	r3, r0
 8005108:	2002      	movs	r0, #2
  __HAL_LOCK(hdma2d);
 800510a:	2a01      	cmp	r2, #1
 800510c:	d02b      	beq.n	8005166 <HAL_DMA2D_ConfigLayer+0x66>
 800510e:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005110:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39
#if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
#else
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005114:	010e      	lsls	r6, r1, #4
 8005116:	4f1c      	ldr	r7, [pc, #112]	@ (8005188 <HAL_DMA2D_ConfigLayer+0x88>)
  __HAL_LOCK(hdma2d);
 8005118:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800511c:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8005120:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8005124:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8005126:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800512a:	3c09      	subs	r4, #9
 800512c:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800512e:	bf96      	itet	ls
 8005130:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8005134:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8005138:	4310      	orrls	r0, r2

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800513a:	681a      	ldr	r2, [r3, #0]
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800513c:	b9a1      	cbnz	r1, 8005168 <HAL_DMA2D_ConfigLayer+0x68>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800513e:	6a51      	ldr	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005140:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005142:	ea01 0107 	and.w	r1, r1, r7
 8005146:	ea41 0100 	orr.w	r1, r1, r0
 800514a:	6251      	str	r1, [r2, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800514c:	6999      	ldr	r1, [r3, #24]
 800514e:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005150:	d803      	bhi.n	800515a <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8005152:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8005154:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8005158:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800515a:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800515c:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800515e:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8005162:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8005166:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8005168:	69d1      	ldr	r1, [r2, #28]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800516a:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800516c:	ea01 0107 	and.w	r1, r1, r7
 8005170:	ea41 0100 	orr.w	r1, r1, r0
 8005174:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005176:	eb03 0106 	add.w	r1, r3, r6
 800517a:	6989      	ldr	r1, [r1, #24]
 800517c:	6111      	str	r1, [r2, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800517e:	d8ec      	bhi.n	800515a <HAL_DMA2D_ConfigLayer+0x5a>
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8005180:	f025 457f 	bic.w	r5, r5, #4278190080	@ 0xff000000
 8005184:	6215      	str	r5, [r2, #32]
 8005186:	e7e8      	b.n	800515a <HAL_DMA2D_ConfigLayer+0x5a>
 8005188:	00fcfff0 	.word	0x00fcfff0

0800518c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800518c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8005190:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005192:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8005350 <HAL_GPIO_Init+0x1c4>
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8005196:	4a6c      	ldr	r2, [pc, #432]	@ (8005348 <HAL_GPIO_Init+0x1bc>)
    ioposition = ((uint32_t)0x01) << position;
 8005198:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800519a:	680d      	ldr	r5, [r1, #0]
    ioposition = ((uint32_t)0x01) << position;
 800519c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800519e:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 80051a2:	43ac      	bics	r4, r5
 80051a4:	f040 80b7 	bne.w	8005316 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80051a8:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80051aa:	2703      	movs	r7, #3
 80051ac:	ea4f 0e43 	mov.w	lr, r3, lsl #1
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80051b0:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80051b4:	fa07 fc0e 	lsl.w	ip, r7, lr
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80051b8:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80051ba:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80051be:	2f01      	cmp	r7, #1
 80051c0:	d834      	bhi.n	800522c <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 80051c2:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80051c4:	ea07 080c 	and.w	r8, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2));
 80051c8:	68cf      	ldr	r7, [r1, #12]
 80051ca:	fa07 f70e 	lsl.w	r7, r7, lr
 80051ce:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OSPEEDR = temp;
 80051d2:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80051d4:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80051d6:	ea27 0806 	bic.w	r8, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80051da:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80051de:	409f      	lsls	r7, r3
 80051e0:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OTYPER = temp;
 80051e4:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80051e6:	68c7      	ldr	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80051e8:	2c02      	cmp	r4, #2
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 80051ea:	ea07 080c 	and.w	r8, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2));
 80051ee:	688f      	ldr	r7, [r1, #8]
 80051f0:	fa07 f70e 	lsl.w	r7, r7, lr
 80051f4:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->PUPDR = temp;
 80051f8:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80051fa:	d119      	bne.n	8005230 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3];
 80051fc:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8005200:	f003 0a07 	and.w	sl, r3, #7
 8005204:	f04f 0b0f 	mov.w	fp, #15
 8005208:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 800520c:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
        temp = GPIOx->AFR[position >> 3];
 8005210:	f8d8 7020 	ldr.w	r7, [r8, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8005214:	fa0b fb0a 	lsl.w	fp, fp, sl
 8005218:	ea27 0b0b 	bic.w	fp, r7, fp
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 800521c:	690f      	ldr	r7, [r1, #16]
 800521e:	fa07 f70a 	lsl.w	r7, r7, sl
 8005222:	ea47 070b 	orr.w	r7, r7, fp
        GPIOx->AFR[position >> 3] = temp;
 8005226:	f8c8 7020 	str.w	r7, [r8, #32]
 800522a:	e001      	b.n	8005230 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800522c:	2c03      	cmp	r4, #3
 800522e:	d1da      	bne.n	80051e6 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8005230:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8005232:	fa04 f40e 	lsl.w	r4, r4, lr
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8005236:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 800523a:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 800523e:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
 8005242:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8005244:	d067      	beq.n	8005316 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005246:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 800524a:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800524e:	f003 0c03 	and.w	ip, r3, #3
 8005252:	f04f 0e0f 	mov.w	lr, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005256:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 800525a:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800525e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005262:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8005266:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 800526a:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800526e:	fa0e fe0c 	lsl.w	lr, lr, ip
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005272:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8005276:	9401      	str	r4, [sp, #4]
 8005278:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2];
 800527a:	68bc      	ldr	r4, [r7, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800527c:	ea24 0e0e 	bic.w	lr, r4, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8005280:	4c32      	ldr	r4, [pc, #200]	@ (800534c <HAL_GPIO_Init+0x1c0>)
 8005282:	42a0      	cmp	r0, r4
 8005284:	d04e      	beq.n	8005324 <HAL_GPIO_Init+0x198>
 8005286:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800528a:	42a0      	cmp	r0, r4
 800528c:	d04c      	beq.n	8005328 <HAL_GPIO_Init+0x19c>
 800528e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005292:	42a0      	cmp	r0, r4
 8005294:	d04a      	beq.n	800532c <HAL_GPIO_Init+0x1a0>
 8005296:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800529a:	42a0      	cmp	r0, r4
 800529c:	d048      	beq.n	8005330 <HAL_GPIO_Init+0x1a4>
 800529e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80052a2:	42a0      	cmp	r0, r4
 80052a4:	d046      	beq.n	8005334 <HAL_GPIO_Init+0x1a8>
 80052a6:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80052aa:	42a0      	cmp	r0, r4
 80052ac:	d044      	beq.n	8005338 <HAL_GPIO_Init+0x1ac>
 80052ae:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80052b2:	42a0      	cmp	r0, r4
 80052b4:	d042      	beq.n	800533c <HAL_GPIO_Init+0x1b0>
 80052b6:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80052ba:	42a0      	cmp	r0, r4
 80052bc:	d040      	beq.n	8005340 <HAL_GPIO_Init+0x1b4>
 80052be:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80052c2:	42a0      	cmp	r0, r4
 80052c4:	d03e      	beq.n	8005344 <HAL_GPIO_Init+0x1b8>
 80052c6:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80052ca:	42a0      	cmp	r0, r4
 80052cc:	bf14      	ite	ne
 80052ce:	240a      	movne	r4, #10
 80052d0:	2409      	moveq	r4, #9
 80052d2:	fa04 f40c 	lsl.w	r4, r4, ip
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 80052d6:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80052da:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2] = temp;
 80052de:	60bc      	str	r4, [r7, #8]
        temp &= ~((uint32_t)iocurrent);
 80052e0:	ea6f 0706 	mvn.w	r7, r6
        temp = EXTI->RTSR;
 80052e4:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80052e6:	bf0c      	ite	eq
 80052e8:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80052ea:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80052ec:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        EXTI->RTSR = temp;
 80052f0:	6094      	str	r4, [r2, #8]
        temp = EXTI->FTSR;
 80052f2:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 80052f4:	bf0c      	ite	eq
 80052f6:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80052f8:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80052fa:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        EXTI->FTSR = temp;
 80052fe:	60d4      	str	r4, [r2, #12]
        temp = EXTI->EMR;
 8005300:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 8005302:	bf0c      	ite	eq
 8005304:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005306:	4334      	orrne	r4, r6
        EXTI->EMR = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8005308:	03ed      	lsls	r5, r5, #15
        EXTI->EMR = temp;
 800530a:	6054      	str	r4, [r2, #4]
        temp = EXTI->IMR;
 800530c:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800530e:	bf54      	ite	pl
 8005310:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 8005312:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 8005314:	6014      	str	r4, [r2, #0]
  for(position = 0; position < GPIO_NUMBER; position++)
 8005316:	3301      	adds	r3, #1
 8005318:	2b10      	cmp	r3, #16
 800531a:	f47f af3d 	bne.w	8005198 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800531e:	b003      	add	sp, #12
 8005320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8005324:	2400      	movs	r4, #0
 8005326:	e7d4      	b.n	80052d2 <HAL_GPIO_Init+0x146>
 8005328:	2401      	movs	r4, #1
 800532a:	e7d2      	b.n	80052d2 <HAL_GPIO_Init+0x146>
 800532c:	2402      	movs	r4, #2
 800532e:	e7d0      	b.n	80052d2 <HAL_GPIO_Init+0x146>
 8005330:	2403      	movs	r4, #3
 8005332:	e7ce      	b.n	80052d2 <HAL_GPIO_Init+0x146>
 8005334:	2404      	movs	r4, #4
 8005336:	e7cc      	b.n	80052d2 <HAL_GPIO_Init+0x146>
 8005338:	2405      	movs	r4, #5
 800533a:	e7ca      	b.n	80052d2 <HAL_GPIO_Init+0x146>
 800533c:	2406      	movs	r4, #6
 800533e:	e7c8      	b.n	80052d2 <HAL_GPIO_Init+0x146>
 8005340:	2407      	movs	r4, #7
 8005342:	e7c6      	b.n	80052d2 <HAL_GPIO_Init+0x146>
 8005344:	2408      	movs	r4, #8
 8005346:	e7c4      	b.n	80052d2 <HAL_GPIO_Init+0x146>
 8005348:	40013c00 	.word	0x40013c00
 800534c:	40020000 	.word	0x40020000
 8005350:	40023800 	.word	0x40023800

08005354 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8005354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8005358:	2200      	movs	r2, #0
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 800535a:	f04f 0a01 	mov.w	sl, #1

    if(iocurrent == ioposition)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2];
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 800535e:	f04f 080f 	mov.w	r8, #15
        tmp = ((uint32_t)0x0F) << (4 * (position & 0x03));
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
      }
      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 8005362:	f04f 0b03 	mov.w	fp, #3
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8005366:	4c46      	ldr	r4, [pc, #280]	@ (8005480 <HAL_GPIO_DeInit+0x12c>)
    ioposition = ((uint32_t)0x01) << position;
 8005368:	fa0a fc02 	lsl.w	ip, sl, r2
    if(iocurrent == ioposition)
 800536c:	ea3c 0301 	bics.w	r3, ip, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8005370:	ea0c 0601 	and.w	r6, ip, r1
    if(iocurrent == ioposition)
 8005374:	d16c      	bne.n	8005450 <HAL_GPIO_DeInit+0xfc>
      tmp = SYSCFG->EXTICR[position >> 2];
 8005376:	f022 0503 	bic.w	r5, r2, #3
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 800537a:	f002 0703 	and.w	r7, r2, #3
 800537e:	f105 4580 	add.w	r5, r5, #1073741824	@ 0x40000000
 8005382:	00bf      	lsls	r7, r7, #2
 8005384:	f505 359c 	add.w	r5, r5, #79872	@ 0x13800
 8005388:	fa08 f907 	lsl.w	r9, r8, r7
      tmp = SYSCFG->EXTICR[position >> 2];
 800538c:	68ab      	ldr	r3, [r5, #8]
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 800538e:	ea09 0e03 	and.w	lr, r9, r3
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 8005392:	4b3c      	ldr	r3, [pc, #240]	@ (8005484 <HAL_GPIO_DeInit+0x130>)
 8005394:	4298      	cmp	r0, r3
 8005396:	d060      	beq.n	800545a <HAL_GPIO_DeInit+0x106>
 8005398:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800539c:	4298      	cmp	r0, r3
 800539e:	d05e      	beq.n	800545e <HAL_GPIO_DeInit+0x10a>
 80053a0:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80053a4:	4298      	cmp	r0, r3
 80053a6:	d05c      	beq.n	8005462 <HAL_GPIO_DeInit+0x10e>
 80053a8:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80053ac:	4298      	cmp	r0, r3
 80053ae:	d05a      	beq.n	8005466 <HAL_GPIO_DeInit+0x112>
 80053b0:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80053b4:	4298      	cmp	r0, r3
 80053b6:	d058      	beq.n	800546a <HAL_GPIO_DeInit+0x116>
 80053b8:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80053bc:	4298      	cmp	r0, r3
 80053be:	d056      	beq.n	800546e <HAL_GPIO_DeInit+0x11a>
 80053c0:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80053c4:	4298      	cmp	r0, r3
 80053c6:	d054      	beq.n	8005472 <HAL_GPIO_DeInit+0x11e>
 80053c8:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80053cc:	4298      	cmp	r0, r3
 80053ce:	d052      	beq.n	8005476 <HAL_GPIO_DeInit+0x122>
 80053d0:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80053d4:	4298      	cmp	r0, r3
 80053d6:	d050      	beq.n	800547a <HAL_GPIO_DeInit+0x126>
 80053d8:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80053dc:	4298      	cmp	r0, r3
 80053de:	bf0c      	ite	eq
 80053e0:	2309      	moveq	r3, #9
 80053e2:	230a      	movne	r3, #10
 80053e4:	40bb      	lsls	r3, r7
 80053e6:	4573      	cmp	r3, lr
 80053e8:	d113      	bne.n	8005412 <HAL_GPIO_DeInit+0xbe>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80053ea:	6823      	ldr	r3, [r4, #0]
 80053ec:	ea23 0306 	bic.w	r3, r3, r6
 80053f0:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 80053f2:	6863      	ldr	r3, [r4, #4]
 80053f4:	ea23 0306 	bic.w	r3, r3, r6
 80053f8:	6063      	str	r3, [r4, #4]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 80053fa:	68e3      	ldr	r3, [r4, #12]
 80053fc:	ea23 0306 	bic.w	r3, r3, r6
 8005400:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8005402:	68a3      	ldr	r3, [r4, #8]
 8005404:	ea23 0306 	bic.w	r3, r3, r6
 8005408:	60a3      	str	r3, [r4, #8]
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
 800540a:	68ab      	ldr	r3, [r5, #8]
 800540c:	ea23 0309 	bic.w	r3, r3, r9
 8005410:	60ab      	str	r3, [r5, #8]
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 8005412:	0053      	lsls	r3, r2, #1
 8005414:	6805      	ldr	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8005416:	08d6      	lsrs	r6, r2, #3
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 8005418:	fa0b f303 	lsl.w	r3, fp, r3
 800541c:	eb00 0686 	add.w	r6, r0, r6, lsl #2
 8005420:	ea25 0503 	bic.w	r5, r5, r3
 8005424:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8005426:	f002 0507 	and.w	r5, r2, #7
 800542a:	6a37      	ldr	r7, [r6, #32]
 800542c:	00ad      	lsls	r5, r5, #2
 800542e:	fa08 f505 	lsl.w	r5, r8, r5
 8005432:	ea27 0705 	bic.w	r7, r7, r5
 8005436:	6237      	str	r7, [r6, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8005438:	68c5      	ldr	r5, [r0, #12]
 800543a:	ea25 0503 	bic.w	r5, r5, r3
 800543e:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005440:	6845      	ldr	r5, [r0, #4]
 8005442:	ea25 050c 	bic.w	r5, r5, ip
 8005446:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8005448:	6885      	ldr	r5, [r0, #8]
 800544a:	ea25 0303 	bic.w	r3, r5, r3
 800544e:	6083      	str	r3, [r0, #8]
  for(position = 0; position < GPIO_NUMBER; position++)
 8005450:	3201      	adds	r2, #1
 8005452:	2a10      	cmp	r2, #16
 8005454:	d188      	bne.n	8005368 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8005456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 800545a:	2300      	movs	r3, #0
 800545c:	e7c2      	b.n	80053e4 <HAL_GPIO_DeInit+0x90>
 800545e:	2301      	movs	r3, #1
 8005460:	e7c0      	b.n	80053e4 <HAL_GPIO_DeInit+0x90>
 8005462:	2302      	movs	r3, #2
 8005464:	e7be      	b.n	80053e4 <HAL_GPIO_DeInit+0x90>
 8005466:	2303      	movs	r3, #3
 8005468:	e7bc      	b.n	80053e4 <HAL_GPIO_DeInit+0x90>
 800546a:	2304      	movs	r3, #4
 800546c:	e7ba      	b.n	80053e4 <HAL_GPIO_DeInit+0x90>
 800546e:	2305      	movs	r3, #5
 8005470:	e7b8      	b.n	80053e4 <HAL_GPIO_DeInit+0x90>
 8005472:	2306      	movs	r3, #6
 8005474:	e7b6      	b.n	80053e4 <HAL_GPIO_DeInit+0x90>
 8005476:	2307      	movs	r3, #7
 8005478:	e7b4      	b.n	80053e4 <HAL_GPIO_DeInit+0x90>
 800547a:	2308      	movs	r3, #8
 800547c:	e7b2      	b.n	80053e4 <HAL_GPIO_DeInit+0x90>
 800547e:	bf00      	nop
 8005480:	40013c00 	.word	0x40013c00
 8005484:	40020000 	.word	0x40020000

08005488 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8005488:	6903      	ldr	r3, [r0, #16]
 800548a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800548c:	bf14      	ite	ne
 800548e:	2001      	movne	r0, #1
 8005490:	2000      	moveq	r0, #0
 8005492:	4770      	bx	lr

08005494 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8005494:	b10a      	cbz	r2, 800549a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8005496:	6181      	str	r1, [r0, #24]
  }
}
 8005498:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 800549a:	0409      	lsls	r1, r1, #16
 800549c:	e7fb      	b.n	8005496 <HAL_GPIO_WritePin+0x2>

0800549e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800549e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80054a0:	ea01 0203 	and.w	r2, r1, r3
 80054a4:	ea21 0103 	bic.w	r1, r1, r3
 80054a8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80054ac:	6181      	str	r1, [r0, #24]
}
 80054ae:	4770      	bx	lr

080054b0 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 80054b0:	6803      	ldr	r3, [r0, #0]
 80054b2:	699a      	ldr	r2, [r3, #24]
 80054b4:	0791      	lsls	r1, r2, #30
 80054b6:	d501      	bpl.n	80054bc <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 80054b8:	2200      	movs	r2, #0
 80054ba:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80054bc:	699a      	ldr	r2, [r3, #24]
 80054be:	07d2      	lsls	r2, r2, #31
 80054c0:	d403      	bmi.n	80054ca <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 80054c2:	699a      	ldr	r2, [r3, #24]
 80054c4:	f042 0201 	orr.w	r2, r2, #1
 80054c8:	619a      	str	r2, [r3, #24]
  }
}
 80054ca:	4770      	bx	lr

080054cc <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 80054cc:	b530      	push	{r4, r5, lr}
 80054ce:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80054d0:	f3c1 0109 	ubfx	r1, r1, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 80054d4:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80054d6:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
 80054d8:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80054da:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 80054de:	4a05      	ldr	r2, [pc, #20]	@ (80054f4 <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80054e0:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 80054e2:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80054e6:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 80054ea:	ea20 0002 	bic.w	r0, r0, r2
 80054ee:	4303      	orrs	r3, r0
 80054f0:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 80054f2:	bd30      	pop	{r4, r5, pc}
 80054f4:	03ff63ff 	.word	0x03ff63ff

080054f8 <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 80054f8:	6803      	ldr	r3, [r0, #0]
{
 80054fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 80054fe:	699c      	ldr	r4, [r3, #24]
{
 8005500:	4605      	mov	r5, r0
 8005502:	460f      	mov	r7, r1
 8005504:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8005506:	f014 0410 	ands.w	r4, r4, #16
 800550a:	d06f      	beq.n	80055ec <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 800550c:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800550e:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 8005510:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005512:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8005514:	682b      	ldr	r3, [r5, #0]
 8005516:	699a      	ldr	r2, [r3, #24]
 8005518:	0690      	lsls	r0, r2, #26
 800551a:	d461      	bmi.n	80055e0 <I2C_IsErrorOccurred+0xe8>
 800551c:	f1b8 0f00 	cmp.w	r8, #0
 8005520:	d035      	beq.n	800558e <I2C_IsErrorOccurred+0x96>
    error_code |= HAL_I2C_ERROR_AF;
 8005522:	f044 0404 	orr.w	r4, r4, #4
    status = HAL_ERROR;
 8005526:	2001      	movs	r0, #1
  itflag = hi2c->Instance->ISR;
 8005528:	682e      	ldr	r6, [r5, #0]
 800552a:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 800552c:	05d9      	lsls	r1, r3, #23
 800552e:	d505      	bpl.n	800553c <I2C_IsErrorOccurred+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8005530:	f44f 7280 	mov.w	r2, #256	@ 0x100
    error_code |= HAL_I2C_ERROR_BERR;
 8005534:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
 8005538:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 800553a:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 800553c:	055a      	lsls	r2, r3, #21
 800553e:	d505      	bpl.n	800554c <I2C_IsErrorOccurred+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8005540:	f44f 6280 	mov.w	r2, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
 8005544:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
 8005548:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 800554a:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 800554c:	059b      	lsls	r3, r3, #22
 800554e:	d54f      	bpl.n	80055f0 <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8005550:	f44f 7300 	mov.w	r3, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8005554:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8005558:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 800555a:	4628      	mov	r0, r5
 800555c:	f7ff ffa8 	bl	80054b0 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8005560:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 8005562:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8005564:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
 8005568:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
 800556c:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
 8005570:	f023 0301 	bic.w	r3, r3, #1
 8005574:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 8005576:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8005578:	4323      	orrs	r3, r4
 800557a:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 800557c:	2320      	movs	r3, #32
 800557e:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005582:	2300      	movs	r3, #0
 8005584:	f885 3042 	strb.w	r3, [r5, #66]	@ 0x42
    __HAL_UNLOCK(hi2c);
 8005588:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
 800558c:	e032      	b.n	80055f4 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 800558e:	1c7a      	adds	r2, r7, #1
 8005590:	d0c1      	beq.n	8005516 <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8005592:	f7ff fb87 	bl	8004ca4 <HAL_GetTick>
 8005596:	1b80      	subs	r0, r0, r6
 8005598:	42b8      	cmp	r0, r7
 800559a:	d801      	bhi.n	80055a0 <I2C_IsErrorOccurred+0xa8>
 800559c:	2f00      	cmp	r7, #0
 800559e:	d1b9      	bne.n	8005514 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 80055a0:	682b      	ldr	r3, [r5, #0]
 80055a2:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 80055a4:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 80055a8:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 80055aa:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 80055ac:	0400      	lsls	r0, r0, #16
 80055ae:	d50a      	bpl.n	80055c6 <I2C_IsErrorOccurred+0xce>
 80055b0:	0449      	lsls	r1, r1, #17
 80055b2:	d408      	bmi.n	80055c6 <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 80055b4:	2a20      	cmp	r2, #32
 80055b6:	d006      	beq.n	80055c6 <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 80055b8:	685a      	ldr	r2, [r3, #4]
 80055ba:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80055be:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 80055c0:	f7ff fb70 	bl	8004ca4 <HAL_GetTick>
 80055c4:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80055c6:	682b      	ldr	r3, [r5, #0]
 80055c8:	699b      	ldr	r3, [r3, #24]
 80055ca:	069b      	lsls	r3, r3, #26
 80055cc:	d4a2      	bmi.n	8005514 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 80055ce:	f7ff fb69 	bl	8004ca4 <HAL_GetTick>
 80055d2:	1b80      	subs	r0, r0, r6
 80055d4:	2819      	cmp	r0, #25
 80055d6:	d9f6      	bls.n	80055c6 <I2C_IsErrorOccurred+0xce>
              error_code |=HAL_I2C_ERROR_TIMEOUT;
 80055d8:	2420      	movs	r4, #32
              status = HAL_ERROR;
 80055da:	f04f 0801 	mov.w	r8, #1
 80055de:	e799      	b.n	8005514 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 80055e0:	f1b8 0f00 	cmp.w	r8, #0
 80055e4:	d19d      	bne.n	8005522 <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80055e6:	2220      	movs	r2, #32
 80055e8:	61da      	str	r2, [r3, #28]
 80055ea:	e79a      	b.n	8005522 <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 80055ec:	4620      	mov	r0, r4
 80055ee:	e79b      	b.n	8005528 <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 80055f0:	2800      	cmp	r0, #0
 80055f2:	d1b2      	bne.n	800555a <I2C_IsErrorOccurred+0x62>
}
 80055f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080055f8 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 80055f8:	b570      	push	{r4, r5, r6, lr}
 80055fa:	4604      	mov	r4, r0
 80055fc:	460d      	mov	r5, r1
 80055fe:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8005600:	6823      	ldr	r3, [r4, #0]
 8005602:	699b      	ldr	r3, [r3, #24]
 8005604:	079b      	lsls	r3, r3, #30
 8005606:	d501      	bpl.n	800560c <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8005608:	2000      	movs	r0, #0
 800560a:	e01b      	b.n	8005644 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 800560c:	4632      	mov	r2, r6
 800560e:	4629      	mov	r1, r5
 8005610:	4620      	mov	r0, r4
 8005612:	f7ff ff71 	bl	80054f8 <I2C_IsErrorOccurred>
 8005616:	b9a0      	cbnz	r0, 8005642 <I2C_WaitOnTXISFlagUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005618:	1c6a      	adds	r2, r5, #1
 800561a:	d0f1      	beq.n	8005600 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800561c:	f7ff fb42 	bl	8004ca4 <HAL_GetTick>
 8005620:	1b80      	subs	r0, r0, r6
 8005622:	42a8      	cmp	r0, r5
 8005624:	d801      	bhi.n	800562a <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8005626:	2d00      	cmp	r5, #0
 8005628:	d1ea      	bne.n	8005600 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800562a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800562c:	f043 0320 	orr.w	r3, r3, #32
 8005630:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8005632:	2320      	movs	r3, #32
 8005634:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8005638:	2300      	movs	r3, #0
 800563a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
 800563e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005642:	2001      	movs	r0, #1
}
 8005644:	bd70      	pop	{r4, r5, r6, pc}

08005646 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8005646:	b570      	push	{r4, r5, r6, lr}
 8005648:	4604      	mov	r4, r0
 800564a:	460d      	mov	r5, r1
 800564c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 800564e:	6823      	ldr	r3, [r4, #0]
 8005650:	699b      	ldr	r3, [r3, #24]
 8005652:	069b      	lsls	r3, r3, #26
 8005654:	d501      	bpl.n	800565a <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 8005656:	2000      	movs	r0, #0
 8005658:	e019      	b.n	800568e <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 800565a:	4632      	mov	r2, r6
 800565c:	4629      	mov	r1, r5
 800565e:	4620      	mov	r0, r4
 8005660:	f7ff ff4a 	bl	80054f8 <I2C_IsErrorOccurred>
 8005664:	b990      	cbnz	r0, 800568c <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005666:	f7ff fb1d 	bl	8004ca4 <HAL_GetTick>
 800566a:	1b80      	subs	r0, r0, r6
 800566c:	42a8      	cmp	r0, r5
 800566e:	d801      	bhi.n	8005674 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8005670:	2d00      	cmp	r5, #0
 8005672:	d1ec      	bne.n	800564e <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005674:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8005676:	f043 0320 	orr.w	r3, r3, #32
 800567a:	6463      	str	r3, [r4, #68]	@ 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 800567c:	2320      	movs	r3, #32
 800567e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8005682:	2300      	movs	r3, #0
 8005684:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      __HAL_UNLOCK(hi2c);
 8005688:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800568c:	2001      	movs	r0, #1
}
 800568e:	bd70      	pop	{r4, r5, r6, pc}

08005690 <I2C_WaitOnFlagUntilTimeout>:
{
 8005690:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005694:	9f06      	ldr	r7, [sp, #24]
 8005696:	4604      	mov	r4, r0
 8005698:	4688      	mov	r8, r1
 800569a:	4616      	mov	r6, r2
 800569c:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800569e:	6822      	ldr	r2, [r4, #0]
 80056a0:	6993      	ldr	r3, [r2, #24]
 80056a2:	ea38 0303 	bics.w	r3, r8, r3
 80056a6:	bf0c      	ite	eq
 80056a8:	2301      	moveq	r3, #1
 80056aa:	2300      	movne	r3, #0
 80056ac:	42b3      	cmp	r3, r6
 80056ae:	d001      	beq.n	80056b4 <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 80056b0:	2000      	movs	r0, #0
 80056b2:	e015      	b.n	80056e0 <I2C_WaitOnFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 80056b4:	1c6b      	adds	r3, r5, #1
 80056b6:	d0f3      	beq.n	80056a0 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80056b8:	f7ff faf4 	bl	8004ca4 <HAL_GetTick>
 80056bc:	1bc0      	subs	r0, r0, r7
 80056be:	42a8      	cmp	r0, r5
 80056c0:	d801      	bhi.n	80056c6 <I2C_WaitOnFlagUntilTimeout+0x36>
 80056c2:	2d00      	cmp	r5, #0
 80056c4:	d1eb      	bne.n	800569e <I2C_WaitOnFlagUntilTimeout+0xe>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80056c6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
        __HAL_UNLOCK(hi2c);
 80056c8:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80056ca:	f043 0320 	orr.w	r3, r3, #32
 80056ce:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80056d0:	2320      	movs	r3, #32
 80056d2:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80056d6:	2300      	movs	r3, #0
 80056d8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
 80056dc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 80056e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080056e4 <HAL_I2C_Init>:
{
 80056e4:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 80056e6:	4604      	mov	r4, r0
 80056e8:	2800      	cmp	r0, #0
 80056ea:	d04a      	beq.n	8005782 <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80056ec:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 80056f0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80056f4:	b91b      	cbnz	r3, 80056fe <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 80056f6:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
 80056fa:	f7fb fb6b 	bl	8000dd4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80056fe:	2324      	movs	r3, #36	@ 0x24
 8005700:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005704:	6823      	ldr	r3, [r4, #0]
 8005706:	681a      	ldr	r2, [r3, #0]
 8005708:	f022 0201 	bic.w	r2, r2, #1
 800570c:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 800570e:	6862      	ldr	r2, [r4, #4]
 8005710:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8005714:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8005716:	689a      	ldr	r2, [r3, #8]
 8005718:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800571c:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 800571e:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8005722:	2901      	cmp	r1, #1
 8005724:	d124      	bne.n	8005770 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8005726:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800572a:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 800572c:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800572e:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8005730:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 8005734:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005738:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 800573a:	68da      	ldr	r2, [r3, #12]
 800573c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005740:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005742:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8005746:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8005748:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 800574a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800574e:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8005750:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8005754:	430a      	orrs	r2, r1
 8005756:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8005758:	681a      	ldr	r2, [r3, #0]
 800575a:	f042 0201 	orr.w	r2, r2, #1
 800575e:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8005760:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005762:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8005764:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8005768:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800576a:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 800576e:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005770:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8005774:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005776:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8005778:	d1d8      	bne.n	800572c <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 800577a:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800577e:	605a      	str	r2, [r3, #4]
 8005780:	e7d4      	b.n	800572c <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 8005782:	2001      	movs	r0, #1
 8005784:	e7f3      	b.n	800576e <HAL_I2C_Init+0x8a>

08005786 <HAL_I2C_DeInit>:
{
 8005786:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005788:	4604      	mov	r4, r0
 800578a:	b198      	cbz	r0, 80057b4 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800578c:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800578e:	2324      	movs	r3, #36	@ 0x24
 8005790:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005794:	6813      	ldr	r3, [r2, #0]
 8005796:	f023 0301 	bic.w	r3, r3, #1
 800579a:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800579c:	f7fb fb5e 	bl	8000e5c <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80057a0:	2000      	movs	r0, #0
 80057a2:	6460      	str	r0, [r4, #68]	@ 0x44
  __HAL_UNLOCK(hi2c);
 80057a4:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 80057a8:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 80057ac:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80057ae:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 80057b2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80057b4:	2001      	movs	r0, #1
 80057b6:	e7fc      	b.n	80057b2 <HAL_I2C_DeInit+0x2c>

080057b8 <HAL_I2C_Mem_Write>:
{
 80057b8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80057bc:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 80057be:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 80057c2:	4604      	mov	r4, r0
 80057c4:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 80057c6:	2b20      	cmp	r3, #32
{
 80057c8:	4616      	mov	r6, r2
 80057ca:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 80057ce:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 80057d2:	f040 80c6 	bne.w	8005962 <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 80057d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80057d8:	b113      	cbz	r3, 80057e0 <HAL_I2C_Mem_Write+0x28>
 80057da:	f1ba 0f00 	cmp.w	sl, #0
 80057de:	d106      	bne.n	80057ee <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80057e0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80057e4:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 80057e6:	2001      	movs	r0, #1
}
 80057e8:	b003      	add	sp, #12
 80057ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 80057ee:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 80057f2:	2b01      	cmp	r3, #1
 80057f4:	f000 80b5 	beq.w	8005962 <HAL_I2C_Mem_Write+0x1aa>
 80057f8:	f04f 0b01 	mov.w	fp, #1
 80057fc:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8005800:	f7ff fa50 	bl	8004ca4 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005804:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 8005806:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005808:	9000      	str	r0, [sp, #0]
 800580a:	465a      	mov	r2, fp
 800580c:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005810:	4620      	mov	r0, r4
 8005812:	f7ff ff3d 	bl	8005690 <I2C_WaitOnFlagUntilTimeout>
 8005816:	2800      	cmp	r0, #0
 8005818:	d1e5      	bne.n	80057e6 <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800581a:	2321      	movs	r3, #33	@ 0x21
    hi2c->XferISR   = NULL;
 800581c:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 800581e:	fa5f f289 	uxtb.w	r2, r9
 8005822:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005824:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005828:	2340      	movs	r3, #64	@ 0x40
 800582a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 800582e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005830:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005832:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8005834:	6263      	str	r3, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005836:	4b4c      	ldr	r3, [pc, #304]	@ (8005968 <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferCount = Size;
 8005838:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 800583c:	9300      	str	r3, [sp, #0]
 800583e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8005842:	f7ff fe43 	bl	80054cc <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005846:	462a      	mov	r2, r5
 8005848:	4641      	mov	r1, r8
 800584a:	4620      	mov	r0, r4
 800584c:	f7ff fed4 	bl	80055f8 <I2C_WaitOnTXISFlagUntilTimeout>
 8005850:	bb18      	cbnz	r0, 800589a <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005852:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005856:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005858:	d115      	bne.n	8005886 <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800585a:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 800585c:	2200      	movs	r2, #0
 800585e:	2180      	movs	r1, #128	@ 0x80
 8005860:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005862:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8005864:	4643      	mov	r3, r8
 8005866:	9500      	str	r5, [sp, #0]
 8005868:	f7ff ff12 	bl	8005690 <I2C_WaitOnFlagUntilTimeout>
 800586c:	b9a8      	cbnz	r0, 800589a <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800586e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005870:	b29b      	uxth	r3, r3
 8005872:	2bff      	cmp	r3, #255	@ 0xff
 8005874:	d815      	bhi.n	80058a2 <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8005876:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005878:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 800587c:	b292      	uxth	r2, r2
 800587e:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005880:	b2d2      	uxtb	r2, r2
 8005882:	9000      	str	r0, [sp, #0]
 8005884:	e012      	b.n	80058ac <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005886:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005888:	4641      	mov	r1, r8
 800588a:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800588c:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800588e:	462a      	mov	r2, r5
 8005890:	f7ff feb2 	bl	80055f8 <I2C_WaitOnTXISFlagUntilTimeout>
 8005894:	b908      	cbnz	r0, 800589a <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005896:	6823      	ldr	r3, [r4, #0]
 8005898:	e7df      	b.n	800585a <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 800589a:	2300      	movs	r3, #0
 800589c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80058a0:	e7a1      	b.n	80057e6 <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80058a2:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 80058a4:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80058a8:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 80058aa:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80058ac:	4639      	mov	r1, r7
 80058ae:	4620      	mov	r0, r4
 80058b0:	f7ff fe0c 	bl	80054cc <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80058b4:	462a      	mov	r2, r5
 80058b6:	4641      	mov	r1, r8
 80058b8:	4620      	mov	r0, r4
 80058ba:	f7ff fe9d 	bl	80055f8 <I2C_WaitOnTXISFlagUntilTimeout>
 80058be:	2800      	cmp	r0, #0
 80058c0:	d191      	bne.n	80057e6 <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 80058c2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80058c4:	6822      	ldr	r2, [r4, #0]
 80058c6:	f813 1b01 	ldrb.w	r1, [r3], #1
 80058ca:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 80058cc:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 80058ce:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80058d0:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 80058d2:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 80058d4:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 80058d6:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 80058d8:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 80058da:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80058dc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80058de:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80058e0:	b29b      	uxth	r3, r3
 80058e2:	b1b3      	cbz	r3, 8005912 <HAL_I2C_Mem_Write+0x15a>
 80058e4:	b9aa      	cbnz	r2, 8005912 <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80058e6:	4643      	mov	r3, r8
 80058e8:	2180      	movs	r1, #128	@ 0x80
 80058ea:	4620      	mov	r0, r4
 80058ec:	9500      	str	r5, [sp, #0]
 80058ee:	f7ff fecf 	bl	8005690 <I2C_WaitOnFlagUntilTimeout>
 80058f2:	2800      	cmp	r0, #0
 80058f4:	f47f af77 	bne.w	80057e6 <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80058f8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80058fa:	b29b      	uxth	r3, r3
 80058fc:	2bff      	cmp	r3, #255	@ 0xff
 80058fe:	d928      	bls.n	8005952 <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005900:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005902:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005906:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005908:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800590a:	4639      	mov	r1, r7
 800590c:	4620      	mov	r0, r4
 800590e:	f7ff fddd 	bl	80054cc <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005912:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005914:	b29b      	uxth	r3, r3
 8005916:	2b00      	cmp	r3, #0
 8005918:	d1cc      	bne.n	80058b4 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800591a:	462a      	mov	r2, r5
 800591c:	4641      	mov	r1, r8
 800591e:	4620      	mov	r0, r4
 8005920:	f7ff fe91 	bl	8005646 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005924:	2800      	cmp	r0, #0
 8005926:	f47f af5e 	bne.w	80057e6 <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800592a:	6823      	ldr	r3, [r4, #0]
 800592c:	2120      	movs	r1, #32
 800592e:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005930:	685a      	ldr	r2, [r3, #4]
 8005932:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8005936:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 800593a:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 800593e:	f022 0201 	bic.w	r2, r2, #1
 8005942:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005944:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005948:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 800594c:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8005950:	e74a      	b.n	80057e8 <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005952:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005954:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8005958:	b292      	uxth	r2, r2
 800595a:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800595c:	b2d2      	uxtb	r2, r2
 800595e:	9000      	str	r0, [sp, #0]
 8005960:	e7d3      	b.n	800590a <HAL_I2C_Mem_Write+0x152>
    __HAL_LOCK(hi2c);
 8005962:	2002      	movs	r0, #2
 8005964:	e740      	b.n	80057e8 <HAL_I2C_Mem_Write+0x30>
 8005966:	bf00      	nop
 8005968:	80002000 	.word	0x80002000

0800596c <HAL_I2C_Mem_Read>:
{
 800596c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005970:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005972:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8005976:	4604      	mov	r4, r0
 8005978:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 800597a:	2b20      	cmp	r3, #32
{
 800597c:	4616      	mov	r6, r2
 800597e:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8005982:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005986:	f040 80c9 	bne.w	8005b1c <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 800598a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800598c:	b113      	cbz	r3, 8005994 <HAL_I2C_Mem_Read+0x28>
 800598e:	f1ba 0f00 	cmp.w	sl, #0
 8005992:	d106      	bne.n	80059a2 <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005994:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8005998:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 800599a:	2001      	movs	r0, #1
}
 800599c:	b003      	add	sp, #12
 800599e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 80059a2:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 80059a6:	2b01      	cmp	r3, #1
 80059a8:	f000 80b8 	beq.w	8005b1c <HAL_I2C_Mem_Read+0x1b0>
 80059ac:	f04f 0b01 	mov.w	fp, #1
 80059b0:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 80059b4:	f7ff f976 	bl	8004ca4 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80059b8:	2319      	movs	r3, #25
 80059ba:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 80059bc:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80059be:	465a      	mov	r2, fp
 80059c0:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80059c4:	4620      	mov	r0, r4
 80059c6:	f7ff fe63 	bl	8005690 <I2C_WaitOnFlagUntilTimeout>
 80059ca:	4603      	mov	r3, r0
 80059cc:	2800      	cmp	r0, #0
 80059ce:	d1e4      	bne.n	800599a <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80059d0:	2222      	movs	r2, #34	@ 0x22
    hi2c->XferISR   = NULL;
 80059d2:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80059d4:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80059d6:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80059da:	2240      	movs	r2, #64	@ 0x40
 80059dc:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 80059e0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80059e2:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80059e4:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 80059e6:	6262      	str	r2, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80059e8:	4a4d      	ldr	r2, [pc, #308]	@ (8005b20 <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferCount = Size;
 80059ea:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80059ee:	9200      	str	r2, [sp, #0]
 80059f0:	fa5f f289 	uxtb.w	r2, r9
 80059f4:	f7ff fd6a 	bl	80054cc <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80059f8:	462a      	mov	r2, r5
 80059fa:	4641      	mov	r1, r8
 80059fc:	4620      	mov	r0, r4
 80059fe:	f7ff fdfb 	bl	80055f8 <I2C_WaitOnTXISFlagUntilTimeout>
 8005a02:	bb20      	cbnz	r0, 8005a4e <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005a04:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005a08:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005a0a:	d116      	bne.n	8005a3a <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005a0c:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8005a0e:	2200      	movs	r2, #0
 8005a10:	2140      	movs	r1, #64	@ 0x40
 8005a12:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005a14:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8005a16:	4643      	mov	r3, r8
 8005a18:	9500      	str	r5, [sp, #0]
 8005a1a:	f7ff fe39 	bl	8005690 <I2C_WaitOnFlagUntilTimeout>
 8005a1e:	b9b0      	cbnz	r0, 8005a4e <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005a20:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005a22:	b29b      	uxth	r3, r3
 8005a24:	2bff      	cmp	r3, #255	@ 0xff
 8005a26:	4b3f      	ldr	r3, [pc, #252]	@ (8005b24 <HAL_I2C_Mem_Read+0x1b8>)
 8005a28:	d815      	bhi.n	8005a56 <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8005a2a:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 8005a2c:	b292      	uxth	r2, r2
 8005a2e:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005a30:	b2d2      	uxtb	r2, r2
 8005a32:	9300      	str	r3, [sp, #0]
 8005a34:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8005a38:	e012      	b.n	8005a60 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005a3a:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005a3c:	4641      	mov	r1, r8
 8005a3e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005a40:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005a42:	462a      	mov	r2, r5
 8005a44:	f7ff fdd8 	bl	80055f8 <I2C_WaitOnTXISFlagUntilTimeout>
 8005a48:	b908      	cbnz	r0, 8005a4e <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005a4a:	6823      	ldr	r3, [r4, #0]
 8005a4c:	e7de      	b.n	8005a0c <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 8005a4e:	2300      	movs	r3, #0
 8005a50:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005a54:	e7a1      	b.n	800599a <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005a56:	22ff      	movs	r2, #255	@ 0xff
 8005a58:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005a5a:	9300      	str	r3, [sp, #0]
 8005a5c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005a60:	4639      	mov	r1, r7
 8005a62:	4620      	mov	r0, r4
 8005a64:	f7ff fd32 	bl	80054cc <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8005a68:	4643      	mov	r3, r8
 8005a6a:	2200      	movs	r2, #0
 8005a6c:	2104      	movs	r1, #4
 8005a6e:	4620      	mov	r0, r4
 8005a70:	9500      	str	r5, [sp, #0]
 8005a72:	f7ff fe0d 	bl	8005690 <I2C_WaitOnFlagUntilTimeout>
 8005a76:	2800      	cmp	r0, #0
 8005a78:	d18f      	bne.n	800599a <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8005a7a:	6823      	ldr	r3, [r4, #0]
 8005a7c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005a7e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005a80:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8005a82:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 8005a84:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8005a86:	3301      	adds	r3, #1
      hi2c->XferSize--;
 8005a88:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 8005a8a:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8005a8c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005a8e:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8005a90:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8005a92:	8522      	strh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8005a94:	b29b      	uxth	r3, r3
 8005a96:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005a98:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005a9a:	b29b      	uxth	r3, r3
 8005a9c:	b1b3      	cbz	r3, 8005acc <HAL_I2C_Mem_Read+0x160>
 8005a9e:	b9aa      	cbnz	r2, 8005acc <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005aa0:	4643      	mov	r3, r8
 8005aa2:	2180      	movs	r1, #128	@ 0x80
 8005aa4:	4620      	mov	r0, r4
 8005aa6:	9500      	str	r5, [sp, #0]
 8005aa8:	f7ff fdf2 	bl	8005690 <I2C_WaitOnFlagUntilTimeout>
 8005aac:	2800      	cmp	r0, #0
 8005aae:	f47f af74 	bne.w	800599a <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005ab2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005ab4:	b29b      	uxth	r3, r3
 8005ab6:	2bff      	cmp	r3, #255	@ 0xff
 8005ab8:	d928      	bls.n	8005b0c <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005aba:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005abc:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005ac0:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005ac2:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005ac4:	4639      	mov	r1, r7
 8005ac6:	4620      	mov	r0, r4
 8005ac8:	f7ff fd00 	bl	80054cc <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005acc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005ace:	b29b      	uxth	r3, r3
 8005ad0:	2b00      	cmp	r3, #0
 8005ad2:	d1c9      	bne.n	8005a68 <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005ad4:	462a      	mov	r2, r5
 8005ad6:	4641      	mov	r1, r8
 8005ad8:	4620      	mov	r0, r4
 8005ada:	f7ff fdb4 	bl	8005646 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005ade:	2800      	cmp	r0, #0
 8005ae0:	f47f af5b 	bne.w	800599a <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005ae4:	6823      	ldr	r3, [r4, #0]
 8005ae6:	2120      	movs	r1, #32
 8005ae8:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005aea:	685a      	ldr	r2, [r3, #4]
 8005aec:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8005af0:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8005af4:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8005af8:	f022 0201 	bic.w	r2, r2, #1
 8005afc:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005afe:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005b02:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005b06:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8005b0a:	e747      	b.n	800599c <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005b0c:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005b0e:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8005b12:	b292      	uxth	r2, r2
 8005b14:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005b16:	b2d2      	uxtb	r2, r2
 8005b18:	9000      	str	r0, [sp, #0]
 8005b1a:	e7d3      	b.n	8005ac4 <HAL_I2C_Mem_Read+0x158>
    __HAL_LOCK(hi2c);
 8005b1c:	2002      	movs	r0, #2
 8005b1e:	e73d      	b.n	800599c <HAL_I2C_Mem_Read+0x30>
 8005b20:	80002000 	.word	0x80002000
 8005b24:	80002400 	.word	0x80002400

08005b28 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005b28:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005b2a:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 8005b2e:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005b30:	2a20      	cmp	r2, #32
 8005b32:	b2d4      	uxtb	r4, r2
 8005b34:	d11c      	bne.n	8005b70 <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005b36:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8005b3a:	2a01      	cmp	r2, #1
 8005b3c:	d018      	beq.n	8005b70 <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005b3e:	2224      	movs	r2, #36	@ 0x24
 8005b40:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005b44:	6802      	ldr	r2, [r0, #0]
 8005b46:	6810      	ldr	r0, [r2, #0]
 8005b48:	f020 0001 	bic.w	r0, r0, #1
 8005b4c:	6010      	str	r0, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8005b4e:	6810      	ldr	r0, [r2, #0]
 8005b50:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 8005b54:	6010      	str	r0, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8005b56:	6810      	ldr	r0, [r2, #0]
 8005b58:	4301      	orrs	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005b5a:	2000      	movs	r0, #0
    hi2c->Instance->CR1 |= AnalogFilter;
 8005b5c:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8005b5e:	6811      	ldr	r1, [r2, #0]
 8005b60:	f041 0101 	orr.w	r1, r1, #1
 8005b64:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005b66:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005b6a:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005b6e:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 8005b70:	2002      	movs	r0, #2
 8005b72:	e7fc      	b.n	8005b6e <HAL_I2CEx_ConfigAnalogFilter+0x46>

08005b74 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005b74:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005b76:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 8005b7a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005b7c:	2a20      	cmp	r2, #32
 8005b7e:	b2d4      	uxtb	r4, r2
 8005b80:	d11b      	bne.n	8005bba <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005b82:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8005b86:	2a01      	cmp	r2, #1
 8005b88:	d017      	beq.n	8005bba <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005b8a:	2224      	movs	r2, #36	@ 0x24
 8005b8c:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005b90:	6802      	ldr	r2, [r0, #0]
 8005b92:	6810      	ldr	r0, [r2, #0]
 8005b94:	f020 0001 	bic.w	r0, r0, #1
 8005b98:	6010      	str	r0, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8005b9a:	6810      	ldr	r0, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8005b9c:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8005ba0:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005ba4:	2000      	movs	r0, #0
    hi2c->Instance->CR1 = tmpreg;
 8005ba6:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8005ba8:	6811      	ldr	r1, [r2, #0]
 8005baa:	f041 0101 	orr.w	r1, r1, #1
 8005bae:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005bb0:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005bb4:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005bb8:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 8005bba:	2002      	movs	r0, #2
 8005bbc:	e7fc      	b.n	8005bb8 <HAL_I2CEx_ConfigDigitalFilter+0x44>

08005bbe <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005bbe:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005bc0:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005bc2:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005bc6:	3284      	adds	r2, #132	@ 0x84
 8005bc8:	1883      	adds	r3, r0, r2
{
 8005bca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005bce:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005bd0:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005bd4:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005bd6:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005bda:	684c      	ldr	r4, [r1, #4]
 8005bdc:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005be0:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005be4:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005be8:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005bea:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005bec:	68c5      	ldr	r5, [r0, #12]
 8005bee:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8005bf2:	443d      	add	r5, r7
 8005bf4:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005bf8:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005bfa:	68c6      	ldr	r6, [r0, #12]
 8005bfc:	68cd      	ldr	r5, [r1, #12]
 8005bfe:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005c02:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005c04:	689d      	ldr	r5, [r3, #8]
 8005c06:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8005c0a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005c0c:	688d      	ldr	r5, [r1, #8]
 8005c0e:	68c7      	ldr	r7, [r0, #12]
 8005c10:	3501      	adds	r5, #1
 8005c12:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005c16:	443d      	add	r5, r7
 8005c18:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005c1c:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005c1e:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005c20:	691d      	ldr	r5, [r3, #16]
 8005c22:	f025 0507 	bic.w	r5, r5, #7
 8005c26:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005c28:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005c2a:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005c2c:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005c30:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005c34:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005c38:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8005c3c:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005c40:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005c44:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005c48:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005c4a:	695d      	ldr	r5, [r3, #20]
 8005c4c:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8005c50:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005c52:	694d      	ldr	r5, [r1, #20]
 8005c54:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005c56:	69dd      	ldr	r5, [r3, #28]
 8005c58:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8005c5c:	f025 0507 	bic.w	r5, r5, #7
 8005c60:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005c62:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005c66:	433d      	orrs	r5, r7
 8005c68:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005c6a:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005c6c:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005c6e:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005c72:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005c74:	b31e      	cbz	r6, 8005cbe <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005c76:	2e01      	cmp	r6, #1
 8005c78:	d023      	beq.n	8005cc2 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005c7a:	1eb5      	subs	r5, r6, #2
 8005c7c:	2d02      	cmp	r5, #2
 8005c7e:	d922      	bls.n	8005cc6 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 8005c80:	2e07      	cmp	r6, #7
 8005c82:	bf14      	ite	ne
 8005c84:	2501      	movne	r5, #1
 8005c86:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005c88:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005c8a:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005c8e:	f006 26e0 	and.w	r6, r6, #3758153728	@ 0xe000e000
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005c92:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005c94:	62de      	str	r6, [r3, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005c96:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005c98:	6a8e      	ldr	r6, [r1, #40]	@ 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005c9a:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005c9c:	436e      	muls	r6, r5
 8005c9e:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005ca2:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005ca4:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8005ca6:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 8005caa:	f024 0407 	bic.w	r4, r4, #7
 8005cae:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005cb0:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005cb2:	5883      	ldr	r3, [r0, r2]
 8005cb4:	f043 0301 	orr.w	r3, r3, #1
 8005cb8:	5083      	str	r3, [r0, r2]
}
 8005cba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005cbe:	2504      	movs	r5, #4
 8005cc0:	e7e2      	b.n	8005c88 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005cc2:	2503      	movs	r5, #3
 8005cc4:	e7e0      	b.n	8005c88 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005cc6:	2502      	movs	r5, #2
 8005cc8:	e7de      	b.n	8005c88 <LTDC_SetConfig+0xca>
	...

08005ccc <HAL_LTDC_Init>:
{
 8005ccc:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005cce:	4604      	mov	r4, r0
 8005cd0:	2800      	cmp	r0, #0
 8005cd2:	d063      	beq.n	8005d9c <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005cd4:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8005cd8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005cdc:	b91b      	cbnz	r3, 8005ce6 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005cde:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005ce2:	f7fb f8d7 	bl	8000e94 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005ce6:	2302      	movs	r3, #2
 8005ce8:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005cec:	6823      	ldr	r3, [r4, #0]
 8005cee:	699a      	ldr	r2, [r3, #24]
 8005cf0:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8005cf4:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005cf6:	6999      	ldr	r1, [r3, #24]
 8005cf8:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005cfc:	4302      	orrs	r2, r0
 8005cfe:	68e0      	ldr	r0, [r4, #12]
 8005d00:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005d02:	6920      	ldr	r0, [r4, #16]
 8005d04:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005d06:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005d08:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005d0a:	4925      	ldr	r1, [pc, #148]	@ (8005da0 <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005d0c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005d0e:	689a      	ldr	r2, [r3, #8]
 8005d10:	400a      	ands	r2, r1
 8005d12:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005d14:	689a      	ldr	r2, [r3, #8]
 8005d16:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005d1a:	69a0      	ldr	r0, [r4, #24]
 8005d1c:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005d1e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005d20:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005d22:	68da      	ldr	r2, [r3, #12]
 8005d24:	400a      	ands	r2, r1
 8005d26:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005d28:	68da      	ldr	r2, [r3, #12]
 8005d2a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005d2e:	6a20      	ldr	r0, [r4, #32]
 8005d30:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005d32:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005d34:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005d36:	691a      	ldr	r2, [r3, #16]
 8005d38:	400a      	ands	r2, r1
 8005d3a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005d3c:	691a      	ldr	r2, [r3, #16]
 8005d3e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005d42:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005d44:	4302      	orrs	r2, r0
 8005d46:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005d48:	695a      	ldr	r2, [r3, #20]
 8005d4a:	400a      	ands	r2, r1
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005d4c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005d4e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005d50:	695a      	ldr	r2, [r3, #20]
 8005d52:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005d56:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8005d58:	430a      	orrs	r2, r1
 8005d5a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005d5c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005d5e:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005d62:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005d66:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005d6a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005d6c:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8005d6e:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8005d72:	432a      	orrs	r2, r5
 8005d74:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005d78:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005d7a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005d7e:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005d80:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005d82:	f042 0206 	orr.w	r2, r2, #6
 8005d86:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005d88:	699a      	ldr	r2, [r3, #24]
 8005d8a:	f042 0201 	orr.w	r2, r2, #1
 8005d8e:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8005d90:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005d92:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005d96:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8005d9a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005d9c:	2001      	movs	r0, #1
 8005d9e:	e7fc      	b.n	8005d9a <HAL_LTDC_Init+0xce>
 8005da0:	f000f800 	.word	0xf000f800

08005da4 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8005da4:	4770      	bx	lr

08005da6 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8005da6:	4770      	bx	lr

08005da8 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005da8:	6803      	ldr	r3, [r0, #0]
{
 8005daa:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005dac:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
{
 8005dae:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005db0:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005db2:	0772      	lsls	r2, r6, #29
 8005db4:	d514      	bpl.n	8005de0 <HAL_LTDC_IRQHandler+0x38>
 8005db6:	0769      	lsls	r1, r5, #29
 8005db8:	d512      	bpl.n	8005de0 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005dba:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005dbc:	f022 0204 	bic.w	r2, r2, #4
 8005dc0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005dc2:	2204      	movs	r2, #4
 8005dc4:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005dc6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8005dca:	f043 0301 	orr.w	r3, r3, #1
 8005dce:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8005dd2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005dd4:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005dd8:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005ddc:	f7ff ffe2 	bl	8005da4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005de0:	07b2      	lsls	r2, r6, #30
 8005de2:	d516      	bpl.n	8005e12 <HAL_LTDC_IRQHandler+0x6a>
 8005de4:	07ab      	lsls	r3, r5, #30
 8005de6:	d514      	bpl.n	8005e12 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005de8:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 8005dea:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005dec:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005dee:	f022 0202 	bic.w	r2, r2, #2
 8005df2:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005df4:	2202      	movs	r2, #2
 8005df6:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005df8:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8005dfc:	4313      	orrs	r3, r2
 8005dfe:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005e02:	2304      	movs	r3, #4
 8005e04:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005e08:	2300      	movs	r3, #0
 8005e0a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005e0e:	f7ff ffc9 	bl	8005da4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005e12:	07f0      	lsls	r0, r6, #31
 8005e14:	d510      	bpl.n	8005e38 <HAL_LTDC_IRQHandler+0x90>
 8005e16:	07e9      	lsls	r1, r5, #31
 8005e18:	d50e      	bpl.n	8005e38 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005e1a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 8005e1c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005e1e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005e20:	f022 0201 	bic.w	r2, r2, #1
 8005e24:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005e26:	2201      	movs	r2, #1
 8005e28:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8005e2a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005e2c:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005e30:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005e34:	f7fc f970 	bl	8002118 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005e38:	0732      	lsls	r2, r6, #28
 8005e3a:	d511      	bpl.n	8005e60 <HAL_LTDC_IRQHandler+0xb8>
 8005e3c:	072b      	lsls	r3, r5, #28
 8005e3e:	d50f      	bpl.n	8005e60 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005e40:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005e42:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005e44:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005e46:	f022 0208 	bic.w	r2, r2, #8
 8005e4a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005e4c:	2208      	movs	r2, #8
 8005e4e:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005e50:	2301      	movs	r3, #1
 8005e52:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005e56:	2300      	movs	r3, #0
 8005e58:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005e5c:	f7ff ffa3 	bl	8005da6 <HAL_LTDC_ReloadEventCallback>
}
 8005e60:	bd70      	pop	{r4, r5, r6, pc}

08005e62 <HAL_LTDC_ConfigLayer>:
{
 8005e62:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005e66:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
 8005e6a:	4606      	mov	r6, r0
 8005e6c:	460f      	mov	r7, r1
 8005e6e:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
 8005e70:	2b01      	cmp	r3, #1
 8005e72:	f04f 0002 	mov.w	r0, #2
 8005e76:	d01f      	beq.n	8005eb8 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005e78:	2434      	movs	r4, #52	@ 0x34
  __HAL_LOCK(hltdc);
 8005e7a:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005e7e:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005e80:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005e84:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 8005e88:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005e8c:	3438      	adds	r4, #56	@ 0x38
 8005e8e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005e90:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005e92:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005e94:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005e96:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005e98:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005e9a:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005e9c:	4630      	mov	r0, r6
 8005e9e:	4662      	mov	r2, ip
 8005ea0:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005ea2:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005ea4:	f7ff fe8b 	bl	8005bbe <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005ea8:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005eaa:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005eac:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005eb0:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8005eb4:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8005eb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005ebc <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005ebc:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
{
 8005ec0:	4603      	mov	r3, r0
 8005ec2:	2002      	movs	r0, #2
  __HAL_LOCK(hltdc);
 8005ec4:	2a01      	cmp	r2, #1
 8005ec6:	d012      	beq.n	8005eee <HAL_LTDC_ProgramLineEvent+0x32>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005ec8:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005eca:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005ece:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8005ed0:	f020 0001 	bic.w	r0, r0, #1
 8005ed4:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005ed6:	4806      	ldr	r0, [pc, #24]	@ (8005ef0 <HAL_LTDC_ProgramLineEvent+0x34>)
 8005ed8:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_UNLOCK(hltdc);
 8005eda:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005edc:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8005ede:	f041 0101 	orr.w	r1, r1, #1
 8005ee2:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8005ee4:	2201      	movs	r2, #1
  __HAL_UNLOCK(hltdc);
 8005ee6:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005eea:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
}
 8005eee:	4770      	bx	lr
 8005ef0:	40016800 	.word	0x40016800

08005ef4 <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 8005ef4:	4b19      	ldr	r3, [pc, #100]	@ (8005f5c <HAL_PWREx_EnableOverDrive+0x68>)
{
 8005ef6:	b537      	push	{r0, r1, r2, r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 8005ef8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005efa:	4c19      	ldr	r4, [pc, #100]	@ (8005f60 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8005efc:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005f00:	641a      	str	r2, [r3, #64]	@ 0x40
 8005f02:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005f04:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005f08:	9301      	str	r3, [sp, #4]
 8005f0a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005f0c:	6823      	ldr	r3, [r4, #0]
 8005f0e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005f12:	6023      	str	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8005f14:	f7fe fec6 	bl	8004ca4 <HAL_GetTick>
 8005f18:	4605      	mov	r5, r0

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005f1a:	6863      	ldr	r3, [r4, #4]
 8005f1c:	03da      	lsls	r2, r3, #15
 8005f1e:	d50c      	bpl.n	8005f3a <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005f20:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005f22:	4d0f      	ldr	r5, [pc, #60]	@ (8005f60 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005f24:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005f28:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8005f2a:	f7fe febb 	bl	8004ca4 <HAL_GetTick>
 8005f2e:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005f30:	686b      	ldr	r3, [r5, #4]
 8005f32:	039b      	lsls	r3, r3, #14
 8005f34:	d50a      	bpl.n	8005f4c <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8005f36:	2000      	movs	r0, #0
 8005f38:	e006      	b.n	8005f48 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005f3a:	f7fe feb3 	bl	8004ca4 <HAL_GetTick>
 8005f3e:	1b40      	subs	r0, r0, r5
 8005f40:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8005f44:	d9e9      	bls.n	8005f1a <HAL_PWREx_EnableOverDrive+0x26>
      return HAL_TIMEOUT;
 8005f46:	2003      	movs	r0, #3
}
 8005f48:	b003      	add	sp, #12
 8005f4a:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005f4c:	f7fe feaa 	bl	8004ca4 <HAL_GetTick>
 8005f50:	1b00      	subs	r0, r0, r4
 8005f52:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8005f56:	d9eb      	bls.n	8005f30 <HAL_PWREx_EnableOverDrive+0x3c>
 8005f58:	e7f5      	b.n	8005f46 <HAL_PWREx_EnableOverDrive+0x52>
 8005f5a:	bf00      	nop
 8005f5c:	40023800 	.word	0x40023800
 8005f60:	40007000 	.word	0x40007000

08005f64 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8005f64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8005f68:	6a4e      	ldr	r6, [r1, #36]	@ 0x24
 8005f6a:	b136      	cbz	r6, 8005f7a <QSPI_Config+0x16>
 8005f6c:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
 8005f70:	d003      	beq.n	8005f7a <QSPI_Config+0x16>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005f72:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8005f74:	6804      	ldr	r4, [r0, #0]
 8005f76:	3b01      	subs	r3, #1
 8005f78:	6123      	str	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005f7a:	f8d1 a018 	ldr.w	sl, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005f7e:	e9d1 7e07 	ldrd	r7, lr, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005f82:	f1ba 0f00 	cmp.w	sl, #0
 8005f86:	d04c      	beq.n	8006022 <QSPI_Config+0xbe>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005f88:	694c      	ldr	r4, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005f8a:	6805      	ldr	r5, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005f8c:	ea4f 4c84 	mov.w	ip, r4, lsl #18
 8005f90:	ea4a 0406 	orr.w	r4, sl, r6
 8005f94:	680b      	ldr	r3, [r1, #0]
 8005f96:	f8d1 8034 	ldr.w	r8, [r1, #52]	@ 0x34
 8005f9a:	ea44 0a02 	orr.w	sl, r4, r2
 8005f9e:	e9d1 090b 	ldrd	r0, r9, [r1, #44]	@ 0x2c
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005fa2:	f1be 0f00 	cmp.w	lr, #0
 8005fa6:	d024      	beq.n	8005ff2 <QSPI_Config+0x8e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005fa8:	688e      	ldr	r6, [r1, #8]
 8005faa:	ea4a 040e 	orr.w	r4, sl, lr
 8005fae:	61ee      	str	r6, [r5, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005fb0:	690e      	ldr	r6, [r1, #16]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005fb2:	b19f      	cbz	r7, 8005fdc <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005fb4:	433b      	orrs	r3, r7
 8005fb6:	4303      	orrs	r3, r0
 8005fb8:	68c8      	ldr	r0, [r1, #12]
 8005fba:	ea43 0309 	orr.w	r3, r3, r9
 8005fbe:	ea43 0308 	orr.w	r3, r3, r8
 8005fc2:	4333      	orrs	r3, r6
 8005fc4:	4303      	orrs	r3, r0
 8005fc6:	ea43 030c 	orr.w	r3, r3, ip
 8005fca:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005fcc:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005fd0:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005fd2:	d001      	beq.n	8005fd8 <QSPI_Config+0x74>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005fd4:	684b      	ldr	r3, [r1, #4]
 8005fd6:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8005fd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005fdc:	4303      	orrs	r3, r0
 8005fde:	ea43 0309 	orr.w	r3, r3, r9
 8005fe2:	ea43 0308 	orr.w	r3, r3, r8
 8005fe6:	4333      	orrs	r3, r6
 8005fe8:	ea43 030c 	orr.w	r3, r3, ip
 8005fec:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005fee:	616b      	str	r3, [r5, #20]
 8005ff0:	e7f2      	b.n	8005fd8 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005ff2:	b167      	cbz	r7, 800600e <QSPI_Config+0xaa>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005ff4:	433b      	orrs	r3, r7
 8005ff6:	4303      	orrs	r3, r0
 8005ff8:	68c8      	ldr	r0, [r1, #12]
 8005ffa:	ea43 0309 	orr.w	r3, r3, r9
 8005ffe:	ea43 0308 	orr.w	r3, r3, r8
 8006002:	4303      	orrs	r3, r0
 8006004:	ea43 030c 	orr.w	r3, r3, ip
 8006008:	ea43 030a 	orr.w	r3, r3, sl
 800600c:	e7de      	b.n	8005fcc <QSPI_Config+0x68>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800600e:	4303      	orrs	r3, r0
 8006010:	ea43 0309 	orr.w	r3, r3, r9
 8006014:	ea43 0408 	orr.w	r4, r3, r8
 8006018:	ea44 030c 	orr.w	r3, r4, ip
 800601c:	ea43 030a 	orr.w	r3, r3, sl
 8006020:	e7e5      	b.n	8005fee <QSPI_Config+0x8a>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8006022:	f1be 0f00 	cmp.w	lr, #0
 8006026:	d02c      	beq.n	8006082 <QSPI_Config+0x11e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006028:	ea46 050e 	orr.w	r5, r6, lr
 800602c:	688b      	ldr	r3, [r1, #8]
 800602e:	6804      	ldr	r4, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006030:	694e      	ldr	r6, [r1, #20]
 8006032:	4315      	orrs	r5, r2
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006034:	61e3      	str	r3, [r4, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006036:	f8d1 c034 	ldr.w	ip, [r1, #52]	@ 0x34
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800603a:	04b6      	lsls	r6, r6, #18
 800603c:	690b      	ldr	r3, [r1, #16]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800603e:	e9d1 8e0b 	ldrd	r8, lr, [r1, #44]	@ 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006042:	b1a7      	cbz	r7, 800606e <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006044:	433b      	orrs	r3, r7
 8006046:	68c8      	ldr	r0, [r1, #12]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006048:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800604c:	ea43 0308 	orr.w	r3, r3, r8
 8006050:	ea43 030e 	orr.w	r3, r3, lr
 8006054:	ea43 030c 	orr.w	r3, r3, ip
 8006058:	ea43 0300 	orr.w	r3, r3, r0
 800605c:	ea43 0306 	orr.w	r3, r3, r6
 8006060:	ea43 0305 	orr.w	r3, r3, r5
 8006064:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006066:	d0b7      	beq.n	8005fd8 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006068:	684b      	ldr	r3, [r1, #4]
 800606a:	61a3      	str	r3, [r4, #24]
 800606c:	e7b4      	b.n	8005fd8 <QSPI_Config+0x74>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800606e:	ea43 0308 	orr.w	r3, r3, r8
 8006072:	ea43 030e 	orr.w	r3, r3, lr
 8006076:	ea43 030c 	orr.w	r3, r3, ip
 800607a:	4333      	orrs	r3, r6
 800607c:	432b      	orrs	r3, r5
 800607e:	6163      	str	r3, [r4, #20]
 8006080:	e7aa      	b.n	8005fd8 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006082:	b1d7      	cbz	r7, 80060ba <QSPI_Config+0x156>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006084:	ea46 0307 	orr.w	r3, r6, r7
 8006088:	6acc      	ldr	r4, [r1, #44]	@ 0x2c
 800608a:	6800      	ldr	r0, [r0, #0]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800608c:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006090:	ea43 0302 	orr.w	r3, r3, r2
 8006094:	ea43 0304 	orr.w	r3, r3, r4
 8006098:	6b0c      	ldr	r4, [r1, #48]	@ 0x30
 800609a:	ea43 0304 	orr.w	r3, r3, r4
 800609e:	6b4c      	ldr	r4, [r1, #52]	@ 0x34
 80060a0:	ea43 0304 	orr.w	r3, r3, r4
 80060a4:	68cc      	ldr	r4, [r1, #12]
 80060a6:	ea43 0304 	orr.w	r3, r3, r4
 80060aa:	694c      	ldr	r4, [r1, #20]
 80060ac:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 80060b0:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80060b2:	d091      	beq.n	8005fd8 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80060b4:	684b      	ldr	r3, [r1, #4]
 80060b6:	6183      	str	r3, [r0, #24]
 80060b8:	e78e      	b.n	8005fd8 <QSPI_Config+0x74>
        if (cmd->DataMode != QSPI_DATA_NONE)
 80060ba:	2e00      	cmp	r6, #0
 80060bc:	d08c      	beq.n	8005fd8 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80060be:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 80060c0:	6800      	ldr	r0, [r0, #0]
 80060c2:	4333      	orrs	r3, r6
 80060c4:	4313      	orrs	r3, r2
 80060c6:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 80060c8:	4313      	orrs	r3, r2
 80060ca:	6b4a      	ldr	r2, [r1, #52]	@ 0x34
 80060cc:	4313      	orrs	r3, r2
 80060ce:	694a      	ldr	r2, [r1, #20]
 80060d0:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 80060d4:	6143      	str	r3, [r0, #20]
}
 80060d6:	e77f      	b.n	8005fd8 <QSPI_Config+0x74>

080060d8 <QSPI_WaitFlagStateUntilTimeout>:
{
 80060d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80060dc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80060e0:	4604      	mov	r4, r0
 80060e2:	460e      	mov	r6, r1
 80060e4:	4615      	mov	r5, r2
 80060e6:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 80060e8:	6822      	ldr	r2, [r4, #0]
 80060ea:	6893      	ldr	r3, [r2, #8]
 80060ec:	4233      	tst	r3, r6
 80060ee:	bf14      	ite	ne
 80060f0:	2301      	movne	r3, #1
 80060f2:	2300      	moveq	r3, #0
 80060f4:	42ab      	cmp	r3, r5
 80060f6:	d101      	bne.n	80060fc <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 80060f8:	2000      	movs	r0, #0
 80060fa:	e012      	b.n	8006122 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 80060fc:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006100:	d0f3      	beq.n	80060ea <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006102:	f7fe fdcf 	bl	8004ca4 <HAL_GetTick>
 8006106:	1bc0      	subs	r0, r0, r7
 8006108:	4540      	cmp	r0, r8
 800610a:	d802      	bhi.n	8006112 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 800610c:	f1b8 0f00 	cmp.w	r8, #0
 8006110:	d1ea      	bne.n	80060e8 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8006112:	2304      	movs	r3, #4
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8006114:	2001      	movs	r0, #1
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8006116:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800611a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800611c:	f043 0301 	orr.w	r3, r3, #1
 8006120:	6463      	str	r3, [r4, #68]	@ 0x44
}
 8006122:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08006128 <HAL_QSPI_Init>:
{
 8006128:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800612a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800612c:	f7fe fdba 	bl	8004ca4 <HAL_GetTick>
 8006130:	4605      	mov	r5, r0
  if(hqspi == NULL)
 8006132:	2c00      	cmp	r4, #0
 8006134:	d046      	beq.n	80061c4 <HAL_QSPI_Init+0x9c>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8006136:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 800613a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800613e:	b93b      	cbnz	r3, 8006150 <HAL_QSPI_Init+0x28>
    HAL_QSPI_MspInit(hqspi);
 8006140:	4620      	mov	r0, r4
    hqspi->Lock = HAL_UNLOCKED;
 8006142:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    HAL_QSPI_MspInit(hqspi);
 8006146:	f7fa ff53 	bl	8000ff0 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800614a:	f241 3388 	movw	r3, #5000	@ 0x1388
 800614e:	64a3      	str	r3, [r4, #72]	@ 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8006150:	6821      	ldr	r1, [r4, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006152:	4620      	mov	r0, r4
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8006154:	68a3      	ldr	r3, [r4, #8]
 8006156:	680a      	ldr	r2, [r1, #0]
 8006158:	3b01      	subs	r3, #1
 800615a:	f422 52f8 	bic.w	r2, r2, #7936	@ 0x1f00
 800615e:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006162:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8006164:	600a      	str	r2, [r1, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006166:	2200      	movs	r2, #0
 8006168:	9300      	str	r3, [sp, #0]
 800616a:	2120      	movs	r1, #32
 800616c:	462b      	mov	r3, r5
 800616e:	f7ff ffb3 	bl	80060d8 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8006172:	bb10      	cbnz	r0, 80061ba <HAL_QSPI_Init+0x92>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8006174:	6822      	ldr	r2, [r4, #0]
 8006176:	69e5      	ldr	r5, [r4, #28]
 8006178:	68e3      	ldr	r3, [r4, #12]
 800617a:	6811      	ldr	r1, [r2, #0]
 800617c:	432b      	orrs	r3, r5
 800617e:	6a25      	ldr	r5, [r4, #32]
 8006180:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8006184:	432b      	orrs	r3, r5
 8006186:	6865      	ldr	r5, [r4, #4]
 8006188:	f021 01d0 	bic.w	r1, r1, #208	@ 0xd0
 800618c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8006190:	430b      	orrs	r3, r1
 8006192:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8006194:	6855      	ldr	r5, [r2, #4]
 8006196:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800619a:	430b      	orrs	r3, r1
 800619c:	6921      	ldr	r1, [r4, #16]
 800619e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80061a2:	4909      	ldr	r1, [pc, #36]	@ (80061c8 <HAL_QSPI_Init+0xa0>)
 80061a4:	4029      	ands	r1, r5
 80061a6:	430b      	orrs	r3, r1
 80061a8:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 80061aa:	6813      	ldr	r3, [r2, #0]
 80061ac:	f043 0301 	orr.w	r3, r3, #1
 80061b0:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 80061b2:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80061b4:	6460      	str	r0, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 80061b6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 80061ba:	2300      	movs	r3, #0
 80061bc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 80061c0:	b003      	add	sp, #12
 80061c2:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 80061c4:	2001      	movs	r0, #1
 80061c6:	e7fb      	b.n	80061c0 <HAL_QSPI_Init+0x98>
 80061c8:	ffe0f8fe 	.word	0xffe0f8fe

080061cc <HAL_QSPI_DeInit>:
{
 80061cc:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 80061ce:	4604      	mov	r4, r0
 80061d0:	b168      	cbz	r0, 80061ee <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 80061d2:	6802      	ldr	r2, [r0, #0]
 80061d4:	6813      	ldr	r3, [r2, #0]
 80061d6:	f023 0301 	bic.w	r3, r3, #1
 80061da:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 80061dc:	f7fa ff76 	bl	80010cc <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80061e0:	2000      	movs	r0, #0
 80061e2:	6460      	str	r0, [r4, #68]	@ 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 80061e4:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 80061e8:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
}
 80061ec:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80061ee:	2001      	movs	r0, #1
 80061f0:	e7fc      	b.n	80061ec <HAL_QSPI_DeInit+0x20>

080061f2 <HAL_QSPI_Command>:
{
 80061f2:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80061f6:	4604      	mov	r4, r0
 80061f8:	468a      	mov	sl, r1
 80061fa:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80061fc:	f7fe fd52 	bl	8004ca4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006200:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 8006204:	4607      	mov	r7, r0
  __HAL_LOCK(hqspi);
 8006206:	2b01      	cmp	r3, #1
 8006208:	d036      	beq.n	8006278 <HAL_QSPI_Command+0x86>
 800620a:	2301      	movs	r3, #1
 800620c:	2602      	movs	r6, #2
 800620e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006212:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8006216:	2b01      	cmp	r3, #1
 8006218:	fa5f f983 	uxtb.w	r9, r3
 800621c:	d128      	bne.n	8006270 <HAL_QSPI_Command+0x7e>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800621e:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006220:	4603      	mov	r3, r0
 8006222:	2120      	movs	r1, #32
 8006224:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006226:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8006228:	f884 6041 	strb.w	r6, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800622c:	f8cd 8000 	str.w	r8, [sp]
 8006230:	f7ff ff52 	bl	80060d8 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006234:	4605      	mov	r5, r0
 8006236:	b9a0      	cbnz	r0, 8006262 <HAL_QSPI_Command+0x70>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8006238:	4602      	mov	r2, r0
 800623a:	4651      	mov	r1, sl
 800623c:	4620      	mov	r0, r4
 800623e:	f7ff fe91 	bl	8005f64 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8006242:	f8da 3024 	ldr.w	r3, [sl, #36]	@ 0x24
 8006246:	b953      	cbnz	r3, 800625e <HAL_QSPI_Command+0x6c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006248:	463b      	mov	r3, r7
 800624a:	464a      	mov	r2, r9
 800624c:	4631      	mov	r1, r6
 800624e:	4620      	mov	r0, r4
 8006250:	f8cd 8000 	str.w	r8, [sp]
 8006254:	f7ff ff40 	bl	80060d8 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006258:	b960      	cbnz	r0, 8006274 <HAL_QSPI_Command+0x82>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800625a:	6823      	ldr	r3, [r4, #0]
 800625c:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800625e:	f884 9041 	strb.w	r9, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8006262:	2300      	movs	r3, #0
 8006264:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8006268:	4628      	mov	r0, r5
 800626a:	b002      	add	sp, #8
 800626c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    status = HAL_BUSY;
 8006270:	4635      	mov	r5, r6
 8006272:	e7f6      	b.n	8006262 <HAL_QSPI_Command+0x70>
 8006274:	4605      	mov	r5, r0
 8006276:	e7f4      	b.n	8006262 <HAL_QSPI_Command+0x70>
  __HAL_LOCK(hqspi);
 8006278:	2502      	movs	r5, #2
 800627a:	e7f5      	b.n	8006268 <HAL_QSPI_Command+0x76>

0800627c <HAL_QSPI_AutoPolling>:
{
 800627c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006280:	4604      	mov	r4, r0
 8006282:	461f      	mov	r7, r3
 8006284:	4689      	mov	r9, r1
 8006286:	4615      	mov	r5, r2
  uint32_t tickstart = HAL_GetTick();
 8006288:	f7fe fd0c 	bl	8004ca4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800628c:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 8006290:	4606      	mov	r6, r0
  __HAL_LOCK(hqspi);
 8006292:	2b01      	cmp	r3, #1
 8006294:	d041      	beq.n	800631a <HAL_QSPI_AutoPolling+0x9e>
 8006296:	2301      	movs	r3, #1
 8006298:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800629c:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 80062a0:	2b01      	cmp	r3, #1
 80062a2:	fa5f f883 	uxtb.w	r8, r3
 80062a6:	d136      	bne.n	8006316 <HAL_QSPI_AutoPolling+0x9a>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 80062a8:	2342      	movs	r3, #66	@ 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80062aa:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80062ac:	2120      	movs	r1, #32
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80062ae:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 80062b0:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80062b4:	4603      	mov	r3, r0
 80062b6:	9700      	str	r7, [sp, #0]
 80062b8:	4620      	mov	r0, r4
 80062ba:	f7ff ff0d 	bl	80060d8 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80062be:	bb20      	cbnz	r0, 800630a <HAL_QSPI_AutoPolling+0x8e>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 80062c0:	6822      	ldr	r2, [r4, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 80062c2:	4620      	mov	r0, r4
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 80062c4:	682b      	ldr	r3, [r5, #0]
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 80062c6:	6929      	ldr	r1, [r5, #16]
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 80062c8:	6293      	str	r3, [r2, #40]	@ 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 80062ca:	686b      	ldr	r3, [r5, #4]
 80062cc:	6253      	str	r3, [r2, #36]	@ 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 80062ce:	68ab      	ldr	r3, [r5, #8]
 80062d0:	62d3      	str	r3, [r2, #44]	@ 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 80062d2:	6813      	ldr	r3, [r2, #0]
 80062d4:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 80062d8:	430b      	orrs	r3, r1
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 80062da:	4649      	mov	r1, r9
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 80062dc:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80062e0:	6013      	str	r3, [r2, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 80062e2:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
      cmd->NbData = cfg->StatusBytesSize;
 80062e6:	68eb      	ldr	r3, [r5, #12]
 80062e8:	f8c9 3028 	str.w	r3, [r9, #40]	@ 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 80062ec:	f7ff fe3a 	bl	8005f64 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 80062f0:	4633      	mov	r3, r6
 80062f2:	4642      	mov	r2, r8
 80062f4:	2108      	movs	r1, #8
 80062f6:	4620      	mov	r0, r4
 80062f8:	9700      	str	r7, [sp, #0]
 80062fa:	f7ff feed 	bl	80060d8 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80062fe:	b920      	cbnz	r0, 800630a <HAL_QSPI_AutoPolling+0x8e>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8006300:	6823      	ldr	r3, [r4, #0]
 8006302:	2208      	movs	r2, #8
 8006304:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8006306:	f884 8041 	strb.w	r8, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 800630a:	2300      	movs	r3, #0
 800630c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8006310:	b003      	add	sp, #12
 8006312:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8006316:	2002      	movs	r0, #2
 8006318:	e7f7      	b.n	800630a <HAL_QSPI_AutoPolling+0x8e>
  __HAL_LOCK(hqspi);
 800631a:	2002      	movs	r0, #2
 800631c:	e7f8      	b.n	8006310 <HAL_QSPI_AutoPolling+0x94>

0800631e <HAL_QSPI_MemoryMapped>:
{
 800631e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006320:	4604      	mov	r4, r0
 8006322:	4616      	mov	r6, r2
 8006324:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8006326:	f7fe fcbd 	bl	8004ca4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800632a:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 800632e:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006330:	2a01      	cmp	r2, #1
 8006332:	d033      	beq.n	800639c <HAL_QSPI_MemoryMapped+0x7e>
 8006334:	2201      	movs	r2, #1
 8006336:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800633a:	f894 2041 	ldrb.w	r2, [r4, #65]	@ 0x41
 800633e:	2a01      	cmp	r2, #1
 8006340:	d12a      	bne.n	8006398 <HAL_QSPI_MemoryMapped+0x7a>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006342:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8006344:	2182      	movs	r1, #130	@ 0x82
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006346:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006348:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800634a:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800634e:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8006350:	9100      	str	r1, [sp, #0]
 8006352:	2120      	movs	r1, #32
 8006354:	f7ff fec0 	bl	80060d8 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006358:	4605      	mov	r5, r0
 800635a:	b9b8      	cbnz	r0, 800638c <HAL_QSPI_MemoryMapped+0x6e>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800635c:	6823      	ldr	r3, [r4, #0]
 800635e:	6872      	ldr	r2, [r6, #4]
 8006360:	6818      	ldr	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8006362:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8006364:	f020 0008 	bic.w	r0, r0, #8
 8006368:	ea40 0002 	orr.w	r0, r0, r2
 800636c:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800636e:	d107      	bne.n	8006380 <HAL_QSPI_MemoryMapped+0x62>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8006370:	6832      	ldr	r2, [r6, #0]
 8006372:	631a      	str	r2, [r3, #48]	@ 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8006374:	2210      	movs	r2, #16
 8006376:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8006378:	681a      	ldr	r2, [r3, #0]
 800637a:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 800637e:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8006380:	f04f 6240 	mov.w	r2, #201326592	@ 0xc000000
 8006384:	4639      	mov	r1, r7
 8006386:	4620      	mov	r0, r4
 8006388:	f7ff fdec 	bl	8005f64 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800638c:	2300      	movs	r3, #0
 800638e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8006392:	4628      	mov	r0, r5
 8006394:	b003      	add	sp, #12
 8006396:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8006398:	2502      	movs	r5, #2
 800639a:	e7f7      	b.n	800638c <HAL_QSPI_MemoryMapped+0x6e>
  __HAL_LOCK(hqspi);
 800639c:	2502      	movs	r5, #2
 800639e:	e7f8      	b.n	8006392 <HAL_QSPI_MemoryMapped+0x74>

080063a0 <HAL_QSPI_Abort>:
{
 80063a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80063a2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80063a4:	f7fe fc7e 	bl	8004ca4 <HAL_GetTick>
 80063a8:	4605      	mov	r5, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 80063aa:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 80063ae:	0798      	lsls	r0, r3, #30
 80063b0:	d534      	bpl.n	800641c <HAL_QSPI_Abort+0x7c>
    __HAL_UNLOCK(hqspi);
 80063b2:	2300      	movs	r3, #0
 80063b4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 80063b8:	6823      	ldr	r3, [r4, #0]
 80063ba:	681a      	ldr	r2, [r3, #0]
 80063bc:	0751      	lsls	r1, r2, #29
 80063be:	d507      	bpl.n	80063d0 <HAL_QSPI_Abort+0x30>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 80063c0:	681a      	ldr	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 80063c2:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 80063c4:	f022 0204 	bic.w	r2, r2, #4
 80063c8:	601a      	str	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 80063ca:	f7fe fd90 	bl	8004eee <HAL_DMA_Abort>
      if(status != HAL_OK)
 80063ce:	bb40      	cbnz	r0, 8006422 <HAL_QSPI_Abort+0x82>
  HAL_StatusTypeDef status = HAL_OK;
 80063d0:	2000      	movs	r0, #0
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 80063d2:	6823      	ldr	r3, [r4, #0]
 80063d4:	689a      	ldr	r2, [r3, #8]
 80063d6:	0692      	lsls	r2, r2, #26
 80063d8:	d528      	bpl.n	800642c <HAL_QSPI_Abort+0x8c>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 80063da:	681a      	ldr	r2, [r3, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 80063dc:	2102      	movs	r1, #2
 80063de:	4620      	mov	r0, r4
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 80063e0:	f042 0202 	orr.w	r2, r2, #2
 80063e4:	601a      	str	r2, [r3, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 80063e6:	2201      	movs	r2, #1
 80063e8:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80063ea:	9300      	str	r3, [sp, #0]
 80063ec:	462b      	mov	r3, r5
 80063ee:	f7ff fe73 	bl	80060d8 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80063f2:	b9a0      	cbnz	r0, 800641e <HAL_QSPI_Abort+0x7e>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80063f4:	6823      	ldr	r3, [r4, #0]
 80063f6:	2202      	movs	r2, #2
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80063f8:	2120      	movs	r1, #32
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80063fa:	60da      	str	r2, [r3, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80063fc:	4602      	mov	r2, r0
 80063fe:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8006400:	4620      	mov	r0, r4
 8006402:	9300      	str	r3, [sp, #0]
 8006404:	462b      	mov	r3, r5
 8006406:	f7ff fe67 	bl	80060d8 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800640a:	b940      	cbnz	r0, 800641e <HAL_QSPI_Abort+0x7e>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800640c:	6822      	ldr	r2, [r4, #0]
 800640e:	6953      	ldr	r3, [r2, #20]
 8006410:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8006414:	6153      	str	r3, [r2, #20]
        hqspi->State = HAL_QSPI_STATE_READY;
 8006416:	2301      	movs	r3, #1
 8006418:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  HAL_StatusTypeDef status = HAL_OK;
 800641c:	2000      	movs	r0, #0
}
 800641e:	b003      	add	sp, #12
 8006420:	bd30      	pop	{r4, r5, pc}
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8006422:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006424:	f043 0304 	orr.w	r3, r3, #4
 8006428:	6463      	str	r3, [r4, #68]	@ 0x44
 800642a:	e7d2      	b.n	80063d2 <HAL_QSPI_Abort+0x32>
      hqspi->State = HAL_QSPI_STATE_READY;
 800642c:	2301      	movs	r3, #1
 800642e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8006432:	e7f4      	b.n	800641e <HAL_QSPI_Abort+0x7e>

08006434 <HAL_QSPI_Transmit>:
{
 8006434:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006438:	4604      	mov	r4, r0
 800643a:	4688      	mov	r8, r1
 800643c:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 800643e:	f7fe fc31 	bl	8004ca4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006442:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 8006446:	4606      	mov	r6, r0
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8006448:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 800644a:	2b01      	cmp	r3, #1
 800644c:	d04f      	beq.n	80064ee <HAL_QSPI_Transmit+0xba>
 800644e:	2301      	movs	r3, #1
 8006450:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006454:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8006458:	2b01      	cmp	r3, #1
 800645a:	b2d8      	uxtb	r0, r3
 800645c:	d145      	bne.n	80064ea <HAL_QSPI_Transmit+0xb6>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800645e:	2300      	movs	r3, #0
 8006460:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 8006462:	f1b8 0f00 	cmp.w	r8, #0
 8006466:	d03b      	beq.n	80064e0 <HAL_QSPI_Transmit+0xac>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8006468:	2312      	movs	r3, #18
 800646a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800646e:	692b      	ldr	r3, [r5, #16]
 8006470:	3301      	adds	r3, #1
 8006472:	62e3      	str	r3, [r4, #44]	@ 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006474:	692b      	ldr	r3, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8006476:	f8c4 8024 	str.w	r8, [r4, #36]	@ 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800647a:	3301      	adds	r3, #1
 800647c:	62a3      	str	r3, [r4, #40]	@ 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800647e:	696b      	ldr	r3, [r5, #20]
 8006480:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8006484:	616b      	str	r3, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8006486:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8006488:	b9b3      	cbnz	r3, 80064b8 <HAL_QSPI_Transmit+0x84>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800648a:	4633      	mov	r3, r6
 800648c:	2201      	movs	r2, #1
 800648e:	2102      	movs	r1, #2
 8006490:	4620      	mov	r0, r4
 8006492:	9700      	str	r7, [sp, #0]
 8006494:	f7ff fe20 	bl	80060d8 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006498:	b928      	cbnz	r0, 80064a6 <HAL_QSPI_Transmit+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800649a:	6823      	ldr	r3, [r4, #0]
 800649c:	2202      	movs	r2, #2
          status = HAL_QSPI_Abort(hqspi);
 800649e:	4620      	mov	r0, r4
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80064a0:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 80064a2:	f7ff ff7d 	bl	80063a0 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 80064a6:	2301      	movs	r3, #1
 80064a8:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 80064ac:	2300      	movs	r3, #0
 80064ae:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 80064b2:	b002      	add	sp, #8
 80064b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 80064b8:	4633      	mov	r3, r6
 80064ba:	2201      	movs	r2, #1
 80064bc:	2104      	movs	r1, #4
 80064be:	4620      	mov	r0, r4
 80064c0:	9700      	str	r7, [sp, #0]
 80064c2:	f7ff fe09 	bl	80060d8 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 80064c6:	2800      	cmp	r0, #0
 80064c8:	d1ed      	bne.n	80064a6 <HAL_QSPI_Transmit+0x72>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 80064ca:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80064cc:	781b      	ldrb	r3, [r3, #0]
 80064ce:	f885 3020 	strb.w	r3, [r5, #32]
        hqspi->pTxBuffPtr++;
 80064d2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80064d4:	3301      	adds	r3, #1
 80064d6:	6263      	str	r3, [r4, #36]	@ 0x24
        hqspi->TxXferCount--;
 80064d8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80064da:	3b01      	subs	r3, #1
 80064dc:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80064de:	e7d2      	b.n	8006486 <HAL_QSPI_Transmit+0x52>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 80064e0:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80064e2:	f043 0308 	orr.w	r3, r3, #8
 80064e6:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 80064e8:	e7e0      	b.n	80064ac <HAL_QSPI_Transmit+0x78>
    status = HAL_BUSY;
 80064ea:	2002      	movs	r0, #2
 80064ec:	e7de      	b.n	80064ac <HAL_QSPI_Transmit+0x78>
  __HAL_LOCK(hqspi);
 80064ee:	2002      	movs	r0, #2
 80064f0:	e7df      	b.n	80064b2 <HAL_QSPI_Transmit+0x7e>

080064f2 <HAL_QSPI_Receive>:
{
 80064f2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80064f6:	4604      	mov	r4, r0
 80064f8:	4616      	mov	r6, r2
 80064fa:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 80064fc:	f7fe fbd2 	bl	8004ca4 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8006500:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8006502:	4607      	mov	r7, r0
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8006504:	69aa      	ldr	r2, [r5, #24]
  __HAL_LOCK(hqspi);
 8006506:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800650a:	2b01      	cmp	r3, #1
 800650c:	d052      	beq.n	80065b4 <HAL_QSPI_Receive+0xc2>
 800650e:	2301      	movs	r3, #1
 8006510:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006514:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8006518:	2b01      	cmp	r3, #1
 800651a:	b2d8      	uxtb	r0, r3
 800651c:	d148      	bne.n	80065b0 <HAL_QSPI_Receive+0xbe>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800651e:	2300      	movs	r3, #0
 8006520:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 8006522:	f1b8 0f00 	cmp.w	r8, #0
 8006526:	d03e      	beq.n	80065a6 <HAL_QSPI_Receive+0xb4>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8006528:	2322      	movs	r3, #34	@ 0x22
 800652a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800652e:	692b      	ldr	r3, [r5, #16]
 8006530:	3301      	adds	r3, #1
 8006532:	63a3      	str	r3, [r4, #56]	@ 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006534:	692b      	ldr	r3, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8006536:	f8c4 8030 	str.w	r8, [r4, #48]	@ 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800653a:	3301      	adds	r3, #1
 800653c:	6363      	str	r3, [r4, #52]	@ 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800653e:	6969      	ldr	r1, [r5, #20]
 8006540:	f021 6140 	bic.w	r1, r1, #201326592	@ 0xc000000
 8006544:	f041 6180 	orr.w	r1, r1, #67108864	@ 0x4000000
 8006548:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800654a:	61aa      	str	r2, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 800654c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800654e:	b9b3      	cbnz	r3, 800657e <HAL_QSPI_Receive+0x8c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006550:	463b      	mov	r3, r7
 8006552:	2201      	movs	r2, #1
 8006554:	2102      	movs	r1, #2
 8006556:	4620      	mov	r0, r4
 8006558:	9600      	str	r6, [sp, #0]
 800655a:	f7ff fdbd 	bl	80060d8 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 800655e:	b928      	cbnz	r0, 800656c <HAL_QSPI_Receive+0x7a>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006560:	6823      	ldr	r3, [r4, #0]
 8006562:	2202      	movs	r2, #2
          status = HAL_QSPI_Abort(hqspi);
 8006564:	4620      	mov	r0, r4
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006566:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8006568:	f7ff ff1a 	bl	80063a0 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800656c:	2301      	movs	r3, #1
 800656e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8006572:	2300      	movs	r3, #0
 8006574:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8006578:	b002      	add	sp, #8
 800657a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 800657e:	463b      	mov	r3, r7
 8006580:	2201      	movs	r2, #1
 8006582:	2106      	movs	r1, #6
 8006584:	4620      	mov	r0, r4
 8006586:	9600      	str	r6, [sp, #0]
 8006588:	f7ff fda6 	bl	80060d8 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 800658c:	2800      	cmp	r0, #0
 800658e:	d1ed      	bne.n	800656c <HAL_QSPI_Receive+0x7a>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8006590:	f895 2020 	ldrb.w	r2, [r5, #32]
 8006594:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006596:	701a      	strb	r2, [r3, #0]
        hqspi->pRxBuffPtr++;
 8006598:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800659a:	3301      	adds	r3, #1
 800659c:	6323      	str	r3, [r4, #48]	@ 0x30
        hqspi->RxXferCount--;
 800659e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80065a0:	3b01      	subs	r3, #1
 80065a2:	63a3      	str	r3, [r4, #56]	@ 0x38
 80065a4:	e7d2      	b.n	800654c <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 80065a6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80065a8:	f043 0308 	orr.w	r3, r3, #8
 80065ac:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 80065ae:	e7e0      	b.n	8006572 <HAL_QSPI_Receive+0x80>
    status = HAL_BUSY;
 80065b0:	2002      	movs	r0, #2
 80065b2:	e7de      	b.n	8006572 <HAL_QSPI_Receive+0x80>
  __HAL_LOCK(hqspi);
 80065b4:	2002      	movs	r0, #2
 80065b6:	e7df      	b.n	8006578 <HAL_QSPI_Receive+0x86>

080065b8 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80065b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 80065bc:	4604      	mov	r4, r0
 80065be:	b340      	cbz	r0, 8006612 <HAL_RCC_OscConfig+0x5a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80065c0:	6803      	ldr	r3, [r0, #0]
 80065c2:	07de      	lsls	r6, r3, #31
 80065c4:	d410      	bmi.n	80065e8 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80065c6:	6823      	ldr	r3, [r4, #0]
 80065c8:	079d      	lsls	r5, r3, #30
 80065ca:	d461      	bmi.n	8006690 <HAL_RCC_OscConfig+0xd8>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80065cc:	6823      	ldr	r3, [r4, #0]
 80065ce:	0719      	lsls	r1, r3, #28
 80065d0:	f100 80a6 	bmi.w	8006720 <HAL_RCC_OscConfig+0x168>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80065d4:	6823      	ldr	r3, [r4, #0]
 80065d6:	075a      	lsls	r2, r3, #29
 80065d8:	f100 80c7 	bmi.w	800676a <HAL_RCC_OscConfig+0x1b2>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80065dc:	69a2      	ldr	r2, [r4, #24]
 80065de:	2a00      	cmp	r2, #0
 80065e0:	f040 8130 	bne.w	8006844 <HAL_RCC_OscConfig+0x28c>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
 80065e4:	2000      	movs	r0, #0
 80065e6:	e02c      	b.n	8006642 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 80065e8:	4b94      	ldr	r3, [pc, #592]	@ (800683c <HAL_RCC_OscConfig+0x284>)
 80065ea:	689a      	ldr	r2, [r3, #8]
 80065ec:	f002 020c 	and.w	r2, r2, #12
 80065f0:	2a04      	cmp	r2, #4
 80065f2:	d007      	beq.n	8006604 <HAL_RCC_OscConfig+0x4c>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80065f4:	689a      	ldr	r2, [r3, #8]
 80065f6:	f002 020c 	and.w	r2, r2, #12
 80065fa:	2a08      	cmp	r2, #8
 80065fc:	d10b      	bne.n	8006616 <HAL_RCC_OscConfig+0x5e>
 80065fe:	685b      	ldr	r3, [r3, #4]
 8006600:	0259      	lsls	r1, r3, #9
 8006602:	d508      	bpl.n	8006616 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006604:	4b8d      	ldr	r3, [pc, #564]	@ (800683c <HAL_RCC_OscConfig+0x284>)
 8006606:	681b      	ldr	r3, [r3, #0]
 8006608:	039a      	lsls	r2, r3, #14
 800660a:	d5dc      	bpl.n	80065c6 <HAL_RCC_OscConfig+0xe>
 800660c:	6863      	ldr	r3, [r4, #4]
 800660e:	2b00      	cmp	r3, #0
 8006610:	d1d9      	bne.n	80065c6 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 8006612:	2001      	movs	r0, #1
 8006614:	e015      	b.n	8006642 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006616:	6863      	ldr	r3, [r4, #4]
 8006618:	4d88      	ldr	r5, [pc, #544]	@ (800683c <HAL_RCC_OscConfig+0x284>)
 800661a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800661e:	d113      	bne.n	8006648 <HAL_RCC_OscConfig+0x90>
 8006620:	682b      	ldr	r3, [r5, #0]
 8006622:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006626:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006628:	f7fe fb3c 	bl	8004ca4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800662c:	4e83      	ldr	r6, [pc, #524]	@ (800683c <HAL_RCC_OscConfig+0x284>)
        tickstart = HAL_GetTick();
 800662e:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006630:	6833      	ldr	r3, [r6, #0]
 8006632:	039b      	lsls	r3, r3, #14
 8006634:	d4c7      	bmi.n	80065c6 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006636:	f7fe fb35 	bl	8004ca4 <HAL_GetTick>
 800663a:	1b40      	subs	r0, r0, r5
 800663c:	2864      	cmp	r0, #100	@ 0x64
 800663e:	d9f7      	bls.n	8006630 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8006640:	2003      	movs	r0, #3
}
 8006642:	b002      	add	sp, #8
 8006644:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006648:	b99b      	cbnz	r3, 8006672 <HAL_RCC_OscConfig+0xba>
 800664a:	682b      	ldr	r3, [r5, #0]
 800664c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006650:	602b      	str	r3, [r5, #0]
 8006652:	682b      	ldr	r3, [r5, #0]
 8006654:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006658:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800665a:	f7fe fb23 	bl	8004ca4 <HAL_GetTick>
 800665e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006660:	682b      	ldr	r3, [r5, #0]
 8006662:	039f      	lsls	r7, r3, #14
 8006664:	d5af      	bpl.n	80065c6 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006666:	f7fe fb1d 	bl	8004ca4 <HAL_GetTick>
 800666a:	1b80      	subs	r0, r0, r6
 800666c:	2864      	cmp	r0, #100	@ 0x64
 800666e:	d9f7      	bls.n	8006660 <HAL_RCC_OscConfig+0xa8>
 8006670:	e7e6      	b.n	8006640 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006672:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006676:	682b      	ldr	r3, [r5, #0]
 8006678:	d103      	bne.n	8006682 <HAL_RCC_OscConfig+0xca>
 800667a:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800667e:	602b      	str	r3, [r5, #0]
 8006680:	e7ce      	b.n	8006620 <HAL_RCC_OscConfig+0x68>
 8006682:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006686:	602b      	str	r3, [r5, #0]
 8006688:	682b      	ldr	r3, [r5, #0]
 800668a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800668e:	e7ca      	b.n	8006626 <HAL_RCC_OscConfig+0x6e>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8006690:	4b6a      	ldr	r3, [pc, #424]	@ (800683c <HAL_RCC_OscConfig+0x284>)
 8006692:	689a      	ldr	r2, [r3, #8]
 8006694:	f012 0f0c 	tst.w	r2, #12
 8006698:	d007      	beq.n	80066aa <HAL_RCC_OscConfig+0xf2>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800669a:	689a      	ldr	r2, [r3, #8]
 800669c:	f002 020c 	and.w	r2, r2, #12
 80066a0:	2a08      	cmp	r2, #8
 80066a2:	d111      	bne.n	80066c8 <HAL_RCC_OscConfig+0x110>
 80066a4:	685b      	ldr	r3, [r3, #4]
 80066a6:	025d      	lsls	r5, r3, #9
 80066a8:	d40e      	bmi.n	80066c8 <HAL_RCC_OscConfig+0x110>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80066aa:	4a64      	ldr	r2, [pc, #400]	@ (800683c <HAL_RCC_OscConfig+0x284>)
 80066ac:	6813      	ldr	r3, [r2, #0]
 80066ae:	0799      	lsls	r1, r3, #30
 80066b0:	d502      	bpl.n	80066b8 <HAL_RCC_OscConfig+0x100>
 80066b2:	68e3      	ldr	r3, [r4, #12]
 80066b4:	2b01      	cmp	r3, #1
 80066b6:	d1ac      	bne.n	8006612 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80066b8:	6813      	ldr	r3, [r2, #0]
 80066ba:	6921      	ldr	r1, [r4, #16]
 80066bc:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80066c0:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80066c4:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80066c6:	e781      	b.n	80065cc <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 80066c8:	68e3      	ldr	r3, [r4, #12]
 80066ca:	4d5c      	ldr	r5, [pc, #368]	@ (800683c <HAL_RCC_OscConfig+0x284>)
 80066cc:	b1bb      	cbz	r3, 80066fe <HAL_RCC_OscConfig+0x146>
        __HAL_RCC_HSI_ENABLE();
 80066ce:	682b      	ldr	r3, [r5, #0]
 80066d0:	f043 0301 	orr.w	r3, r3, #1
 80066d4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80066d6:	f7fe fae5 	bl	8004ca4 <HAL_GetTick>
 80066da:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80066dc:	682b      	ldr	r3, [r5, #0]
 80066de:	079b      	lsls	r3, r3, #30
 80066e0:	d507      	bpl.n	80066f2 <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80066e2:	682b      	ldr	r3, [r5, #0]
 80066e4:	6922      	ldr	r2, [r4, #16]
 80066e6:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80066ea:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80066ee:	602b      	str	r3, [r5, #0]
 80066f0:	e76c      	b.n	80065cc <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80066f2:	f7fe fad7 	bl	8004ca4 <HAL_GetTick>
 80066f6:	1b80      	subs	r0, r0, r6
 80066f8:	2802      	cmp	r0, #2
 80066fa:	d9ef      	bls.n	80066dc <HAL_RCC_OscConfig+0x124>
 80066fc:	e7a0      	b.n	8006640 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 80066fe:	682b      	ldr	r3, [r5, #0]
 8006700:	f023 0301 	bic.w	r3, r3, #1
 8006704:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006706:	f7fe facd 	bl	8004ca4 <HAL_GetTick>
 800670a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800670c:	682b      	ldr	r3, [r5, #0]
 800670e:	079f      	lsls	r7, r3, #30
 8006710:	f57f af5c 	bpl.w	80065cc <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006714:	f7fe fac6 	bl	8004ca4 <HAL_GetTick>
 8006718:	1b80      	subs	r0, r0, r6
 800671a:	2802      	cmp	r0, #2
 800671c:	d9f6      	bls.n	800670c <HAL_RCC_OscConfig+0x154>
 800671e:	e78f      	b.n	8006640 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8006720:	6963      	ldr	r3, [r4, #20]
 8006722:	4d46      	ldr	r5, [pc, #280]	@ (800683c <HAL_RCC_OscConfig+0x284>)
 8006724:	b183      	cbz	r3, 8006748 <HAL_RCC_OscConfig+0x190>
      __HAL_RCC_LSI_ENABLE();
 8006726:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 8006728:	f043 0301 	orr.w	r3, r3, #1
 800672c:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
 800672e:	f7fe fab9 	bl	8004ca4 <HAL_GetTick>
 8006732:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006734:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 8006736:	079b      	lsls	r3, r3, #30
 8006738:	f53f af4c 	bmi.w	80065d4 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800673c:	f7fe fab2 	bl	8004ca4 <HAL_GetTick>
 8006740:	1b80      	subs	r0, r0, r6
 8006742:	2802      	cmp	r0, #2
 8006744:	d9f6      	bls.n	8006734 <HAL_RCC_OscConfig+0x17c>
 8006746:	e77b      	b.n	8006640 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8006748:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 800674a:	f023 0301 	bic.w	r3, r3, #1
 800674e:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
 8006750:	f7fe faa8 	bl	8004ca4 <HAL_GetTick>
 8006754:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006756:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 8006758:	079f      	lsls	r7, r3, #30
 800675a:	f57f af3b 	bpl.w	80065d4 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800675e:	f7fe faa1 	bl	8004ca4 <HAL_GetTick>
 8006762:	1b80      	subs	r0, r0, r6
 8006764:	2802      	cmp	r0, #2
 8006766:	d9f6      	bls.n	8006756 <HAL_RCC_OscConfig+0x19e>
 8006768:	e76a      	b.n	8006640 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800676a:	4b34      	ldr	r3, [pc, #208]	@ (800683c <HAL_RCC_OscConfig+0x284>)
 800676c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800676e:	00d5      	lsls	r5, r2, #3
 8006770:	d427      	bmi.n	80067c2 <HAL_RCC_OscConfig+0x20a>
      __HAL_RCC_PWR_CLK_ENABLE();
 8006772:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
      pwrclkchanged = SET;
 8006774:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8006776:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800677a:	641a      	str	r2, [r3, #64]	@ 0x40
 800677c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800677e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006782:	9301      	str	r3, [sp, #4]
 8006784:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8006786:	4d2e      	ldr	r5, [pc, #184]	@ (8006840 <HAL_RCC_OscConfig+0x288>)
 8006788:	682b      	ldr	r3, [r5, #0]
 800678a:	05d8      	lsls	r0, r3, #23
 800678c:	d51b      	bpl.n	80067c6 <HAL_RCC_OscConfig+0x20e>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800678e:	68a3      	ldr	r3, [r4, #8]
 8006790:	4d2a      	ldr	r5, [pc, #168]	@ (800683c <HAL_RCC_OscConfig+0x284>)
 8006792:	2b01      	cmp	r3, #1
 8006794:	d127      	bne.n	80067e6 <HAL_RCC_OscConfig+0x22e>
 8006796:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006798:	f043 0301 	orr.w	r3, r3, #1
 800679c:	672b      	str	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800679e:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 80067a2:	f7fe fa7f 	bl	8004ca4 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80067a6:	4e25      	ldr	r6, [pc, #148]	@ (800683c <HAL_RCC_OscConfig+0x284>)
      tickstart = HAL_GetTick();
 80067a8:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80067aa:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 80067ac:	079a      	lsls	r2, r3, #30
 80067ae:	d53f      	bpl.n	8006830 <HAL_RCC_OscConfig+0x278>
    if (pwrclkchanged == SET)
 80067b0:	2f00      	cmp	r7, #0
 80067b2:	f43f af13 	beq.w	80065dc <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80067b6:	4a21      	ldr	r2, [pc, #132]	@ (800683c <HAL_RCC_OscConfig+0x284>)
 80067b8:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 80067ba:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80067be:	6413      	str	r3, [r2, #64]	@ 0x40
 80067c0:	e70c      	b.n	80065dc <HAL_RCC_OscConfig+0x24>
  FlagStatus pwrclkchanged = RESET;
 80067c2:	2700      	movs	r7, #0
 80067c4:	e7df      	b.n	8006786 <HAL_RCC_OscConfig+0x1ce>
      PWR->CR1 |= PWR_CR1_DBP;
 80067c6:	682b      	ldr	r3, [r5, #0]
 80067c8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80067cc:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80067ce:	f7fe fa69 	bl	8004ca4 <HAL_GetTick>
 80067d2:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80067d4:	682b      	ldr	r3, [r5, #0]
 80067d6:	05d9      	lsls	r1, r3, #23
 80067d8:	d4d9      	bmi.n	800678e <HAL_RCC_OscConfig+0x1d6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80067da:	f7fe fa63 	bl	8004ca4 <HAL_GetTick>
 80067de:	1b80      	subs	r0, r0, r6
 80067e0:	2864      	cmp	r0, #100	@ 0x64
 80067e2:	d9f7      	bls.n	80067d4 <HAL_RCC_OscConfig+0x21c>
 80067e4:	e72c      	b.n	8006640 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80067e6:	b9ab      	cbnz	r3, 8006814 <HAL_RCC_OscConfig+0x25c>
 80067e8:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80067ea:	f241 3888 	movw	r8, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80067ee:	f023 0301 	bic.w	r3, r3, #1
 80067f2:	672b      	str	r3, [r5, #112]	@ 0x70
 80067f4:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80067f6:	f023 0304 	bic.w	r3, r3, #4
 80067fa:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 80067fc:	f7fe fa52 	bl	8004ca4 <HAL_GetTick>
 8006800:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006802:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006804:	079b      	lsls	r3, r3, #30
 8006806:	d5d3      	bpl.n	80067b0 <HAL_RCC_OscConfig+0x1f8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006808:	f7fe fa4c 	bl	8004ca4 <HAL_GetTick>
 800680c:	1b80      	subs	r0, r0, r6
 800680e:	4540      	cmp	r0, r8
 8006810:	d9f7      	bls.n	8006802 <HAL_RCC_OscConfig+0x24a>
 8006812:	e715      	b.n	8006640 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006814:	2b05      	cmp	r3, #5
 8006816:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006818:	d103      	bne.n	8006822 <HAL_RCC_OscConfig+0x26a>
 800681a:	f043 0304 	orr.w	r3, r3, #4
 800681e:	672b      	str	r3, [r5, #112]	@ 0x70
 8006820:	e7b9      	b.n	8006796 <HAL_RCC_OscConfig+0x1de>
 8006822:	f023 0301 	bic.w	r3, r3, #1
 8006826:	672b      	str	r3, [r5, #112]	@ 0x70
 8006828:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800682a:	f023 0304 	bic.w	r3, r3, #4
 800682e:	e7b5      	b.n	800679c <HAL_RCC_OscConfig+0x1e4>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006830:	f7fe fa38 	bl	8004ca4 <HAL_GetTick>
 8006834:	1b40      	subs	r0, r0, r5
 8006836:	4540      	cmp	r0, r8
 8006838:	d9b7      	bls.n	80067aa <HAL_RCC_OscConfig+0x1f2>
 800683a:	e701      	b.n	8006640 <HAL_RCC_OscConfig+0x88>
 800683c:	40023800 	.word	0x40023800
 8006840:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8006844:	4d38      	ldr	r5, [pc, #224]	@ (8006928 <HAL_RCC_OscConfig+0x370>)
 8006846:	68ab      	ldr	r3, [r5, #8]
 8006848:	f003 030c 	and.w	r3, r3, #12
 800684c:	2b08      	cmp	r3, #8
 800684e:	d041      	beq.n	80068d4 <HAL_RCC_OscConfig+0x31c>
        __HAL_RCC_PLL_DISABLE();
 8006850:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006852:	2a02      	cmp	r2, #2
        __HAL_RCC_PLL_DISABLE();
 8006854:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006858:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800685a:	d12e      	bne.n	80068ba <HAL_RCC_OscConfig+0x302>
        tickstart = HAL_GetTick();
 800685c:	f7fe fa22 	bl	8004ca4 <HAL_GetTick>
 8006860:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006862:	682b      	ldr	r3, [r5, #0]
 8006864:	0199      	lsls	r1, r3, #6
 8006866:	d422      	bmi.n	80068ae <HAL_RCC_OscConfig+0x2f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8006868:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800686a:	085b      	lsrs	r3, r3, #1
 800686c:	1e5a      	subs	r2, r3, #1
 800686e:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 8006872:	430b      	orrs	r3, r1
 8006874:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006878:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800687a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800687e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8006880:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006884:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8006888:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800688a:	682b      	ldr	r3, [r5, #0]
 800688c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8006890:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006892:	f7fe fa07 	bl	8004ca4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006896:	4d24      	ldr	r5, [pc, #144]	@ (8006928 <HAL_RCC_OscConfig+0x370>)
        tickstart = HAL_GetTick();
 8006898:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800689a:	682b      	ldr	r3, [r5, #0]
 800689c:	019a      	lsls	r2, r3, #6
 800689e:	f53f aea1 	bmi.w	80065e4 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80068a2:	f7fe f9ff 	bl	8004ca4 <HAL_GetTick>
 80068a6:	1b00      	subs	r0, r0, r4
 80068a8:	2802      	cmp	r0, #2
 80068aa:	d9f6      	bls.n	800689a <HAL_RCC_OscConfig+0x2e2>
 80068ac:	e6c8      	b.n	8006640 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80068ae:	f7fe f9f9 	bl	8004ca4 <HAL_GetTick>
 80068b2:	1b80      	subs	r0, r0, r6
 80068b4:	2802      	cmp	r0, #2
 80068b6:	d9d4      	bls.n	8006862 <HAL_RCC_OscConfig+0x2aa>
 80068b8:	e6c2      	b.n	8006640 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 80068ba:	f7fe f9f3 	bl	8004ca4 <HAL_GetTick>
 80068be:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80068c0:	682b      	ldr	r3, [r5, #0]
 80068c2:	019b      	lsls	r3, r3, #6
 80068c4:	f57f ae8e 	bpl.w	80065e4 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80068c8:	f7fe f9ec 	bl	8004ca4 <HAL_GetTick>
 80068cc:	1b00      	subs	r0, r0, r4
 80068ce:	2802      	cmp	r0, #2
 80068d0:	d9f6      	bls.n	80068c0 <HAL_RCC_OscConfig+0x308>
 80068d2:	e6b5      	b.n	8006640 <HAL_RCC_OscConfig+0x88>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80068d4:	2a01      	cmp	r2, #1
      pll_config = RCC->PLLCFGR;
 80068d6:	686b      	ldr	r3, [r5, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80068d8:	f43f ae9b 	beq.w	8006612 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80068dc:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80068e0:	69e1      	ldr	r1, [r4, #28]
 80068e2:	428a      	cmp	r2, r1
 80068e4:	f47f ae95 	bne.w	8006612 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80068e8:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80068ec:	6a21      	ldr	r1, [r4, #32]
 80068ee:	428a      	cmp	r2, r1
 80068f0:	f47f ae8f 	bne.w	8006612 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80068f4:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80068f8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80068fa:	401a      	ands	r2, r3
 80068fc:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8006900:	f47f ae87 	bne.w	8006612 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8006904:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8006906:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 800690a:	0852      	lsrs	r2, r2, #1
 800690c:	3a01      	subs	r2, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 800690e:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8006912:	f47f ae7e 	bne.w	8006612 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8006916:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8006918:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 800691c:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8006920:	bf14      	ite	ne
 8006922:	2001      	movne	r0, #1
 8006924:	2000      	moveq	r0, #0
 8006926:	e68c      	b.n	8006642 <HAL_RCC_OscConfig+0x8a>
 8006928:	40023800 	.word	0x40023800

0800692c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800692c:	4913      	ldr	r1, [pc, #76]	@ (800697c <HAL_RCC_GetSysClockFreq+0x50>)
{
 800692e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006930:	688b      	ldr	r3, [r1, #8]
 8006932:	f003 030c 	and.w	r3, r3, #12
 8006936:	2b04      	cmp	r3, #4
 8006938:	d01b      	beq.n	8006972 <HAL_RCC_GetSysClockFreq+0x46>
 800693a:	2b08      	cmp	r3, #8
 800693c:	d11b      	bne.n	8006976 <HAL_RCC_GetSysClockFreq+0x4a>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800693e:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8006940:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006942:	6849      	ldr	r1, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006944:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8006948:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800694c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006950:	bf1a      	itte	ne
 8006952:	480b      	ldrne	r0, [pc, #44]	@ (8006980 <HAL_RCC_GetSysClockFreq+0x54>)
 8006954:	2300      	movne	r3, #0
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006956:	480b      	ldreq	r0, [pc, #44]	@ (8006984 <HAL_RCC_GetSysClockFreq+0x58>)
 8006958:	fba1 0100 	umull	r0, r1, r1, r0
 800695c:	f7f9 fca8 	bl	80002b0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8006960:	4b06      	ldr	r3, [pc, #24]	@ (800697c <HAL_RCC_GetSysClockFreq+0x50>)
 8006962:	685b      	ldr	r3, [r3, #4]
 8006964:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8006968:	3301      	adds	r3, #1
 800696a:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 800696c:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006970:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006972:	4803      	ldr	r0, [pc, #12]	@ (8006980 <HAL_RCC_GetSysClockFreq+0x54>)
 8006974:	e7fc      	b.n	8006970 <HAL_RCC_GetSysClockFreq+0x44>
      sysclockfreq = HSI_VALUE;
 8006976:	4803      	ldr	r0, [pc, #12]	@ (8006984 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8006978:	e7fa      	b.n	8006970 <HAL_RCC_GetSysClockFreq+0x44>
 800697a:	bf00      	nop
 800697c:	40023800 	.word	0x40023800
 8006980:	017d7840 	.word	0x017d7840
 8006984:	00f42400 	.word	0x00f42400

08006988 <HAL_RCC_ClockConfig>:
{
 8006988:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800698c:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800698e:	4604      	mov	r4, r0
 8006990:	b910      	cbnz	r0, 8006998 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006992:	2001      	movs	r0, #1
}
 8006994:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8006998:	4a45      	ldr	r2, [pc, #276]	@ (8006ab0 <HAL_RCC_ClockConfig+0x128>)
 800699a:	6813      	ldr	r3, [r2, #0]
 800699c:	f003 030f 	and.w	r3, r3, #15
 80069a0:	428b      	cmp	r3, r1
 80069a2:	d328      	bcc.n	80069f6 <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80069a4:	6821      	ldr	r1, [r4, #0]
 80069a6:	078f      	lsls	r7, r1, #30
 80069a8:	d430      	bmi.n	8006a0c <HAL_RCC_ClockConfig+0x84>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80069aa:	07c8      	lsls	r0, r1, #31
 80069ac:	d443      	bmi.n	8006a36 <HAL_RCC_ClockConfig+0xae>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80069ae:	4a40      	ldr	r2, [pc, #256]	@ (8006ab0 <HAL_RCC_ClockConfig+0x128>)
 80069b0:	6813      	ldr	r3, [r2, #0]
 80069b2:	f003 030f 	and.w	r3, r3, #15
 80069b6:	42ab      	cmp	r3, r5
 80069b8:	d866      	bhi.n	8006a88 <HAL_RCC_ClockConfig+0x100>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80069ba:	6822      	ldr	r2, [r4, #0]
 80069bc:	0751      	lsls	r1, r2, #29
 80069be:	d46f      	bmi.n	8006aa0 <HAL_RCC_ClockConfig+0x118>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80069c0:	0713      	lsls	r3, r2, #28
 80069c2:	d507      	bpl.n	80069d4 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 80069c4:	4a3b      	ldr	r2, [pc, #236]	@ (8006ab4 <HAL_RCC_ClockConfig+0x12c>)
 80069c6:	6921      	ldr	r1, [r4, #16]
 80069c8:	6893      	ldr	r3, [r2, #8]
 80069ca:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 80069ce:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80069d2:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 80069d4:	f7ff ffaa 	bl	800692c <HAL_RCC_GetSysClockFreq>
 80069d8:	4b36      	ldr	r3, [pc, #216]	@ (8006ab4 <HAL_RCC_ClockConfig+0x12c>)
 80069da:	4a37      	ldr	r2, [pc, #220]	@ (8006ab8 <HAL_RCC_ClockConfig+0x130>)
 80069dc:	689b      	ldr	r3, [r3, #8]
 80069de:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80069e2:	5cd3      	ldrb	r3, [r2, r3]
 80069e4:	40d8      	lsrs	r0, r3
 80069e6:	4b35      	ldr	r3, [pc, #212]	@ (8006abc <HAL_RCC_ClockConfig+0x134>)
 80069e8:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 80069ea:	4b35      	ldr	r3, [pc, #212]	@ (8006ac0 <HAL_RCC_ClockConfig+0x138>)
 80069ec:	6818      	ldr	r0, [r3, #0]
 80069ee:	f7fa fc3d 	bl	800126c <HAL_InitTick>
  return HAL_OK;
 80069f2:	2000      	movs	r0, #0
 80069f4:	e7ce      	b.n	8006994 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80069f6:	6813      	ldr	r3, [r2, #0]
 80069f8:	f023 030f 	bic.w	r3, r3, #15
 80069fc:	430b      	orrs	r3, r1
 80069fe:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006a00:	6813      	ldr	r3, [r2, #0]
 8006a02:	f003 030f 	and.w	r3, r3, #15
 8006a06:	428b      	cmp	r3, r1
 8006a08:	d1c3      	bne.n	8006992 <HAL_RCC_ClockConfig+0xa>
 8006a0a:	e7cb      	b.n	80069a4 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006a0c:	f011 0f04 	tst.w	r1, #4
 8006a10:	4b28      	ldr	r3, [pc, #160]	@ (8006ab4 <HAL_RCC_ClockConfig+0x12c>)
 8006a12:	d003      	beq.n	8006a1c <HAL_RCC_ClockConfig+0x94>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006a14:	689a      	ldr	r2, [r3, #8]
 8006a16:	f442 52e0 	orr.w	r2, r2, #7168	@ 0x1c00
 8006a1a:	609a      	str	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006a1c:	070e      	lsls	r6, r1, #28
 8006a1e:	d503      	bpl.n	8006a28 <HAL_RCC_ClockConfig+0xa0>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006a20:	689a      	ldr	r2, [r3, #8]
 8006a22:	f442 4260 	orr.w	r2, r2, #57344	@ 0xe000
 8006a26:	609a      	str	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006a28:	689a      	ldr	r2, [r3, #8]
 8006a2a:	68a0      	ldr	r0, [r4, #8]
 8006a2c:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8006a30:	4302      	orrs	r2, r0
 8006a32:	609a      	str	r2, [r3, #8]
 8006a34:	e7b9      	b.n	80069aa <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006a36:	6861      	ldr	r1, [r4, #4]
 8006a38:	4b1e      	ldr	r3, [pc, #120]	@ (8006ab4 <HAL_RCC_ClockConfig+0x12c>)
 8006a3a:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006a3c:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006a3e:	d11b      	bne.n	8006a78 <HAL_RCC_ClockConfig+0xf0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006a40:	f412 3f00 	tst.w	r2, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006a44:	d0a5      	beq.n	8006992 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006a46:	689a      	ldr	r2, [r3, #8]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006a48:	f241 3888 	movw	r8, #5000	@ 0x1388
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006a4c:	4f19      	ldr	r7, [pc, #100]	@ (8006ab4 <HAL_RCC_ClockConfig+0x12c>)
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006a4e:	f022 0203 	bic.w	r2, r2, #3
 8006a52:	430a      	orrs	r2, r1
 8006a54:	609a      	str	r2, [r3, #8]
    tickstart = HAL_GetTick();
 8006a56:	f7fe f925 	bl	8004ca4 <HAL_GetTick>
 8006a5a:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006a5c:	68bb      	ldr	r3, [r7, #8]
 8006a5e:	6862      	ldr	r2, [r4, #4]
 8006a60:	f003 030c 	and.w	r3, r3, #12
 8006a64:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006a68:	d0a1      	beq.n	80069ae <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006a6a:	f7fe f91b 	bl	8004ca4 <HAL_GetTick>
 8006a6e:	1b80      	subs	r0, r0, r6
 8006a70:	4540      	cmp	r0, r8
 8006a72:	d9f3      	bls.n	8006a5c <HAL_RCC_ClockConfig+0xd4>
        return HAL_TIMEOUT;
 8006a74:	2003      	movs	r0, #3
 8006a76:	e78d      	b.n	8006994 <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8006a78:	2902      	cmp	r1, #2
 8006a7a:	d102      	bne.n	8006a82 <HAL_RCC_ClockConfig+0xfa>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006a7c:	f012 7f00 	tst.w	r2, #33554432	@ 0x2000000
 8006a80:	e7e0      	b.n	8006a44 <HAL_RCC_ClockConfig+0xbc>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006a82:	f012 0f02 	tst.w	r2, #2
 8006a86:	e7dd      	b.n	8006a44 <HAL_RCC_ClockConfig+0xbc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006a88:	6813      	ldr	r3, [r2, #0]
 8006a8a:	f023 030f 	bic.w	r3, r3, #15
 8006a8e:	432b      	orrs	r3, r5
 8006a90:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006a92:	6813      	ldr	r3, [r2, #0]
 8006a94:	f003 030f 	and.w	r3, r3, #15
 8006a98:	42ab      	cmp	r3, r5
 8006a9a:	f47f af7a 	bne.w	8006992 <HAL_RCC_ClockConfig+0xa>
 8006a9e:	e78c      	b.n	80069ba <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006aa0:	4904      	ldr	r1, [pc, #16]	@ (8006ab4 <HAL_RCC_ClockConfig+0x12c>)
 8006aa2:	68e0      	ldr	r0, [r4, #12]
 8006aa4:	688b      	ldr	r3, [r1, #8]
 8006aa6:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8006aaa:	4303      	orrs	r3, r0
 8006aac:	608b      	str	r3, [r1, #8]
 8006aae:	e787      	b.n	80069c0 <HAL_RCC_ClockConfig+0x38>
 8006ab0:	40023c00 	.word	0x40023c00
 8006ab4:	40023800 	.word	0x40023800
 8006ab8:	0802120c 	.word	0x0802120c
 8006abc:	2000000c 	.word	0x2000000c
 8006ac0:	2000003c 	.word	0x2000003c

08006ac4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8006ac4:	4b04      	ldr	r3, [pc, #16]	@ (8006ad8 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006ac6:	4a05      	ldr	r2, [pc, #20]	@ (8006adc <HAL_RCC_GetPCLK1Freq+0x18>)
 8006ac8:	689b      	ldr	r3, [r3, #8]
 8006aca:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006ace:	5cd3      	ldrb	r3, [r2, r3]
 8006ad0:	4a03      	ldr	r2, [pc, #12]	@ (8006ae0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006ad2:	6810      	ldr	r0, [r2, #0]
}
 8006ad4:	40d8      	lsrs	r0, r3
 8006ad6:	4770      	bx	lr
 8006ad8:	40023800 	.word	0x40023800
 8006adc:	08021204 	.word	0x08021204
 8006ae0:	2000000c 	.word	0x2000000c

08006ae4 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8006ae4:	4b04      	ldr	r3, [pc, #16]	@ (8006af8 <HAL_RCC_GetPCLK2Freq+0x14>)
 8006ae6:	4a05      	ldr	r2, [pc, #20]	@ (8006afc <HAL_RCC_GetPCLK2Freq+0x18>)
 8006ae8:	689b      	ldr	r3, [r3, #8]
 8006aea:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8006aee:	5cd3      	ldrb	r3, [r2, r3]
 8006af0:	4a03      	ldr	r2, [pc, #12]	@ (8006b00 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8006af2:	6810      	ldr	r0, [r2, #0]
}
 8006af4:	40d8      	lsrs	r0, r3
 8006af6:	4770      	bx	lr
 8006af8:	40023800 	.word	0x40023800
 8006afc:	08021204 	.word	0x08021204
 8006b00:	2000000c 	.word	0x2000000c

08006b04 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006b04:	230f      	movs	r3, #15
 8006b06:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006b08:	4b0b      	ldr	r3, [pc, #44]	@ (8006b38 <HAL_RCC_GetClockConfig+0x34>)
 8006b0a:	689a      	ldr	r2, [r3, #8]
 8006b0c:	f002 0203 	and.w	r2, r2, #3
 8006b10:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006b12:	689a      	ldr	r2, [r3, #8]
 8006b14:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8006b18:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8006b1a:	689a      	ldr	r2, [r3, #8]
 8006b1c:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8006b20:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 8006b22:	689b      	ldr	r3, [r3, #8]
 8006b24:	08db      	lsrs	r3, r3, #3
 8006b26:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8006b2a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006b2c:	4b03      	ldr	r3, [pc, #12]	@ (8006b3c <HAL_RCC_GetClockConfig+0x38>)
 8006b2e:	681b      	ldr	r3, [r3, #0]
 8006b30:	f003 030f 	and.w	r3, r3, #15
 8006b34:	600b      	str	r3, [r1, #0]
}
 8006b36:	4770      	bx	lr
 8006b38:	40023800 	.word	0x40023800
 8006b3c:	40023c00 	.word	0x40023c00

08006b40 <HAL_RCCEx_PeriphCLKConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006b40:	6803      	ldr	r3, [r0, #0]
{
 8006b42:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006b46:	f013 0601 	ands.w	r6, r3, #1
{
 8006b4a:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006b4c:	d00b      	beq.n	8006b66 <HAL_RCCEx_PeriphCLKConfig+0x26>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8006b4e:	4aad      	ldr	r2, [pc, #692]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006b50:	6891      	ldr	r1, [r2, #8]
 8006b52:	f421 0100 	bic.w	r1, r1, #8388608	@ 0x800000
 8006b56:	6091      	str	r1, [r2, #8]
 8006b58:	6b46      	ldr	r6, [r0, #52]	@ 0x34
 8006b5a:	6891      	ldr	r1, [r2, #8]
 8006b5c:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8006b5e:	fab6 f686 	clz	r6, r6
 8006b62:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8006b64:	6091      	str	r1, [r2, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 8006b66:	f413 2500 	ands.w	r5, r3, #524288	@ 0x80000
 8006b6a:	d012      	beq.n	8006b92 <HAL_RCCEx_PeriphCLKConfig+0x52>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006b6c:	49a5      	ldr	r1, [pc, #660]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006b6e:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 8006b70:	f8d1 208c 	ldr.w	r2, [r1, #140]	@ 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8006b74:	f5b5 1f80 	cmp.w	r5, #1048576	@ 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006b78:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
    {
      plli2sused = 1;
 8006b7c:	bf08      	it	eq
 8006b7e:	2601      	moveq	r6, #1
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006b80:	ea42 0205 	orr.w	r2, r2, r5
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8006b84:	bf16      	itet	ne
 8006b86:	fab5 f585 	clzne	r5, r5
  uint32_t pllsaiused = 0;
 8006b8a:	2500      	moveq	r5, #0
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8006b8c:	096d      	lsrne	r5, r5, #5
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006b8e:	f8c1 208c 	str.w	r2, [r1, #140]	@ 0x8c
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8006b92:	02d8      	lsls	r0, r3, #11
 8006b94:	d510      	bpl.n	8006bb8 <HAL_RCCEx_PeriphCLKConfig+0x78>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8006b96:	489b      	ldr	r0, [pc, #620]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006b98:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8006b9a:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8006b9e:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8006ba2:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8006ba6:	ea42 0201 	orr.w	r2, r2, r1
 8006baa:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8006bae:	f000 8186 	beq.w	8006ebe <HAL_RCCEx_PeriphCLKConfig+0x37e>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
 8006bb2:	2900      	cmp	r1, #0
 8006bb4:	bf08      	it	eq
 8006bb6:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
 8006bb8:	f013 7f80 	tst.w	r3, #16777216	@ 0x1000000
 8006bbc:	bf18      	it	ne
 8006bbe:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006bc0:	0699      	lsls	r1, r3, #26
 8006bc2:	d532      	bpl.n	8006c2a <HAL_RCCEx_PeriphCLKConfig+0xea>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006bc4:	4b8f      	ldr	r3, [pc, #572]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8006bc6:	4f90      	ldr	r7, [pc, #576]	@ (8006e08 <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006bc8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006bca:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006bce:	641a      	str	r2, [r3, #64]	@ 0x40
 8006bd0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006bd2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006bd6:	9301      	str	r3, [sp, #4]
 8006bd8:	9b01      	ldr	r3, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 8006bda:	683b      	ldr	r3, [r7, #0]
 8006bdc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006be0:	603b      	str	r3, [r7, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006be2:	f7fe f85f 	bl	8004ca4 <HAL_GetTick>
 8006be6:	4680      	mov	r8, r0

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8006be8:	683b      	ldr	r3, [r7, #0]
 8006bea:	05da      	lsls	r2, r3, #23
 8006bec:	f140 8169 	bpl.w	8006ec2 <HAL_RCCEx_PeriphCLKConfig+0x382>
        return HAL_TIMEOUT;
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006bf0:	4f84      	ldr	r7, [pc, #528]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006bf2:	6b22      	ldr	r2, [r4, #48]	@ 0x30
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006bf4:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006bf6:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8006bfa:	f040 816d 	bne.w	8006ed8 <HAL_RCCEx_PeriphCLKConfig+0x398>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006bfe:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006c00:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8006c04:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8006c08:	4a7e      	ldr	r2, [pc, #504]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006c0a:	f040 818a 	bne.w	8006f22 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8006c0e:	6891      	ldr	r1, [r2, #8]
 8006c10:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8006c14:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8006c18:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8006c1c:	4301      	orrs	r1, r0
 8006c1e:	6091      	str	r1, [r2, #8]
 8006c20:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006c24:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8006c26:	430b      	orrs	r3, r1
 8006c28:	6713      	str	r3, [r2, #112]	@ 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006c2a:	6823      	ldr	r3, [r4, #0]
 8006c2c:	06d9      	lsls	r1, r3, #27
 8006c2e:	d50c      	bpl.n	8006c4a <HAL_RCCEx_PeriphCLKConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006c30:	4a74      	ldr	r2, [pc, #464]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006c32:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
 8006c36:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
 8006c3a:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
 8006c3e:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
 8006c42:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8006c44:	4301      	orrs	r1, r0
 8006c46:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8006c4a:	045a      	lsls	r2, r3, #17
 8006c4c:	d508      	bpl.n	8006c60 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8006c4e:	496d      	ldr	r1, [pc, #436]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006c50:	6e60      	ldr	r0, [r4, #100]	@ 0x64
 8006c52:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006c56:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8006c5a:	4302      	orrs	r2, r0
 8006c5c:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8006c60:	041f      	lsls	r7, r3, #16
 8006c62:	d508      	bpl.n	8006c76 <HAL_RCCEx_PeriphCLKConfig+0x136>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8006c64:	4967      	ldr	r1, [pc, #412]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006c66:	6ea0      	ldr	r0, [r4, #104]	@ 0x68
 8006c68:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006c6c:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 8006c70:	4302      	orrs	r2, r0
 8006c72:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8006c76:	03d8      	lsls	r0, r3, #15
 8006c78:	d508      	bpl.n	8006c8c <HAL_RCCEx_PeriphCLKConfig+0x14c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8006c7a:	4962      	ldr	r1, [pc, #392]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006c7c:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
 8006c7e:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006c82:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 8006c86:	4302      	orrs	r2, r0
 8006c88:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8006c8c:	0399      	lsls	r1, r3, #14
 8006c8e:	d508      	bpl.n	8006ca2 <HAL_RCCEx_PeriphCLKConfig+0x162>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8006c90:	495c      	ldr	r1, [pc, #368]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006c92:	6f20      	ldr	r0, [r4, #112]	@ 0x70
 8006c94:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006c98:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8006c9c:	4302      	orrs	r2, r0
 8006c9e:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8006ca2:	065a      	lsls	r2, r3, #25
 8006ca4:	d508      	bpl.n	8006cb8 <HAL_RCCEx_PeriphCLKConfig+0x178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8006ca6:	4957      	ldr	r1, [pc, #348]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006ca8:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8006caa:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006cae:	f022 0203 	bic.w	r2, r2, #3
 8006cb2:	4302      	orrs	r2, r0
 8006cb4:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8006cb8:	061f      	lsls	r7, r3, #24
 8006cba:	d508      	bpl.n	8006cce <HAL_RCCEx_PeriphCLKConfig+0x18e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8006cbc:	4951      	ldr	r1, [pc, #324]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006cbe:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 8006cc0:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006cc4:	f022 020c 	bic.w	r2, r2, #12
 8006cc8:	4302      	orrs	r2, r0
 8006cca:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8006cce:	05d8      	lsls	r0, r3, #23
 8006cd0:	d508      	bpl.n	8006ce4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8006cd2:	494c      	ldr	r1, [pc, #304]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006cd4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8006cd6:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006cda:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 8006cde:	4302      	orrs	r2, r0
 8006ce0:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8006ce4:	0599      	lsls	r1, r3, #22
 8006ce6:	d508      	bpl.n	8006cfa <HAL_RCCEx_PeriphCLKConfig+0x1ba>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8006ce8:	4946      	ldr	r1, [pc, #280]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006cea:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 8006cec:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006cf0:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 8006cf4:	4302      	orrs	r2, r0
 8006cf6:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8006cfa:	055a      	lsls	r2, r3, #21
 8006cfc:	d508      	bpl.n	8006d10 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8006cfe:	4941      	ldr	r1, [pc, #260]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006d00:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8006d02:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006d06:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8006d0a:	4302      	orrs	r2, r0
 8006d0c:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8006d10:	051f      	lsls	r7, r3, #20
 8006d12:	d508      	bpl.n	8006d26 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 8006d14:	493b      	ldr	r1, [pc, #236]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006d16:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006d18:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006d1c:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 8006d20:	4302      	orrs	r2, r0
 8006d22:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8006d26:	04d8      	lsls	r0, r3, #19
 8006d28:	d508      	bpl.n	8006d3c <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8006d2a:	4936      	ldr	r1, [pc, #216]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006d2c:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8006d2e:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006d32:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8006d36:	4302      	orrs	r2, r0
 8006d38:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8006d3c:	0499      	lsls	r1, r3, #18
 8006d3e:	d508      	bpl.n	8006d52 <HAL_RCCEx_PeriphCLKConfig+0x212>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8006d40:	4930      	ldr	r1, [pc, #192]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006d42:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8006d44:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006d48:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8006d4c:	4302      	orrs	r2, r0
 8006d4e:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8006d52:	025a      	lsls	r2, r3, #9
 8006d54:	d508      	bpl.n	8006d68 <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8006d56:	492b      	ldr	r1, [pc, #172]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006d58:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
 8006d5a:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006d5e:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
 8006d62:	4302      	orrs	r2, r0
 8006d64:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006d68:	029f      	lsls	r7, r3, #10
 8006d6a:	d50c      	bpl.n	8006d86 <HAL_RCCEx_PeriphCLKConfig+0x246>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006d6c:	4825      	ldr	r0, [pc, #148]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006d6e:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
 8006d70:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
 8006d74:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006d78:	f022 6200 	bic.w	r2, r2, #134217728	@ 0x8000000
      pllsaiused = 1;
 8006d7c:	bf08      	it	eq
 8006d7e:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006d80:	430a      	orrs	r2, r1
 8006d82:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
 8006d86:	f013 0f08 	tst.w	r3, #8
 8006d8a:	bf18      	it	ne
 8006d8c:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8006d8e:	0358      	lsls	r0, r3, #13
 8006d90:	d508      	bpl.n	8006da4 <HAL_RCCEx_PeriphCLKConfig+0x264>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8006d92:	491c      	ldr	r1, [pc, #112]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006d94:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8006d96:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006d9a:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8006d9e:	4302      	orrs	r2, r0
 8006da0:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8006da4:	0219      	lsls	r1, r3, #8
 8006da6:	d509      	bpl.n	8006dbc <HAL_RCCEx_PeriphCLKConfig+0x27c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8006da8:	4916      	ldr	r1, [pc, #88]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006daa:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 8006dae:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006db2:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
 8006db6:	4302      	orrs	r2, r0
 8006db8:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8006dbc:	2e01      	cmp	r6, #1
 8006dbe:	f000 80b4 	beq.w	8006f2a <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8006dc2:	019a      	lsls	r2, r3, #6
 8006dc4:	f100 80b1 	bmi.w	8006f2a <HAL_RCCEx_PeriphCLKConfig+0x3ea>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8006dc8:	2d01      	cmp	r5, #1
 8006dca:	d176      	bne.n	8006eba <HAL_RCCEx_PeriphCLKConfig+0x37a>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006dcc:	4d0d      	ldr	r5, [pc, #52]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006dce:	682b      	ldr	r3, [r5, #0]
 8006dd0:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006dd4:	602b      	str	r3, [r5, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006dd6:	f7fd ff65 	bl	8004ca4 <HAL_GetTick>
 8006dda:	4606      	mov	r6, r0

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006ddc:	682b      	ldr	r3, [r5, #0]
 8006dde:	009f      	lsls	r7, r3, #2
 8006de0:	f100 8127 	bmi.w	8007032 <HAL_RCCEx_PeriphCLKConfig+0x4f2>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8006de4:	6821      	ldr	r1, [r4, #0]
 8006de6:	030e      	lsls	r6, r1, #12
 8006de8:	d501      	bpl.n	8006dee <HAL_RCCEx_PeriphCLKConfig+0x2ae>
 8006dea:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8006dec:	b11b      	cbz	r3, 8006df6 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8006dee:	02cd      	lsls	r5, r1, #11
 8006df0:	d523      	bpl.n	8006e3a <HAL_RCCEx_PeriphCLKConfig+0x2fa>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8006df2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8006df4:	bb0b      	cbnz	r3, 8006e3a <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8006df6:	4a03      	ldr	r2, [pc, #12]	@ (8006e04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006df8:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006dfc:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88
 8006e00:	e004      	b.n	8006e0c <HAL_RCCEx_PeriphCLKConfig+0x2cc>
 8006e02:	bf00      	nop
 8006e04:	40023800 	.word	0x40023800
 8006e08:	40007000 	.word	0x40007000
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006e0c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006e10:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006e14:	4303      	orrs	r3, r0
 8006e16:	6960      	ldr	r0, [r4, #20]
 8006e18:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006e1c:	69a0      	ldr	r0, [r4, #24]
 8006e1e:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8006e22:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006e26:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8006e2a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8006e2c:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8006e30:	3801      	subs	r0, #1
 8006e32:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8006e36:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8006e3a:	0288      	lsls	r0, r1, #10
 8006e3c:	d515      	bpl.n	8006e6a <HAL_RCCEx_PeriphCLKConfig+0x32a>
 8006e3e:	6fe3      	ldr	r3, [r4, #124]	@ 0x7c
 8006e40:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006e44:	d111      	bne.n	8006e6a <HAL_RCCEx_PeriphCLKConfig+0x32a>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006e46:	4a82      	ldr	r2, [pc, #520]	@ (8007050 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006e48:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006e4c:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8006e50:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
 8006e54:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006e58:	4303      	orrs	r3, r0
 8006e5a:	6960      	ldr	r0, [r4, #20]
 8006e5c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006e60:	6a20      	ldr	r0, [r4, #32]
 8006e62:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8006e66:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006e6a:	070a      	lsls	r2, r1, #28
 8006e6c:	d519      	bpl.n	8006ea2 <HAL_RCCEx_PeriphCLKConfig+0x362>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006e6e:	4a78      	ldr	r2, [pc, #480]	@ (8007050 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006e70:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8006e74:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8006e78:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8006e7c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006e80:	430b      	orrs	r3, r1
 8006e82:	6961      	ldr	r1, [r4, #20]
 8006e84:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8006e88:	69e1      	ldr	r1, [r4, #28]
 8006e8a:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8006e8e:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006e92:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8006e96:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8006e98:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8006e9c:	430b      	orrs	r3, r1
 8006e9e:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006ea2:	4c6b      	ldr	r4, [pc, #428]	@ (8007050 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006ea4:	6823      	ldr	r3, [r4, #0]
 8006ea6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006eaa:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006eac:	f7fd fefa 	bl	8004ca4 <HAL_GetTick>
 8006eb0:	4605      	mov	r5, r0

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006eb2:	6823      	ldr	r3, [r4, #0]
 8006eb4:	009b      	lsls	r3, r3, #2
 8006eb6:	f140 80c3 	bpl.w	8007040 <HAL_RCCEx_PeriphCLKConfig+0x500>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8006eba:	2000      	movs	r0, #0
 8006ebc:	e009      	b.n	8006ed2 <HAL_RCCEx_PeriphCLKConfig+0x392>
      plli2sused = 1;
 8006ebe:	2601      	movs	r6, #1
 8006ec0:	e67a      	b.n	8006bb8 <HAL_RCCEx_PeriphCLKConfig+0x78>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006ec2:	f7fd feef 	bl	8004ca4 <HAL_GetTick>
 8006ec6:	eba0 0008 	sub.w	r0, r0, r8
 8006eca:	2864      	cmp	r0, #100	@ 0x64
 8006ecc:	f67f ae8c 	bls.w	8006be8 <HAL_RCCEx_PeriphCLKConfig+0xa8>
        return HAL_TIMEOUT;
 8006ed0:	2003      	movs	r0, #3
}
 8006ed2:	b003      	add	sp, #12
 8006ed4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006ed8:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8006edc:	4293      	cmp	r3, r2
 8006ede:	f43f ae8e 	beq.w	8006bfe <HAL_RCCEx_PeriphCLKConfig+0xbe>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006ee2:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006ee4:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006ee6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 8006eea:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8006eee:	673a      	str	r2, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006ef0:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 8006ef2:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8006ef6:	673a      	str	r2, [r7, #112]	@ 0x70
      RCC->BDCR = tmpreg0;
 8006ef8:	673b      	str	r3, [r7, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006efa:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8006efc:	07db      	lsls	r3, r3, #31
 8006efe:	f57f ae7e 	bpl.w	8006bfe <HAL_RCCEx_PeriphCLKConfig+0xbe>
        tickstart = HAL_GetTick();
 8006f02:	f7fd fecf 	bl	8004ca4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006f06:	f241 3988 	movw	r9, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8006f0a:	4680      	mov	r8, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006f0c:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8006f0e:	0798      	lsls	r0, r3, #30
 8006f10:	f53f ae75 	bmi.w	8006bfe <HAL_RCCEx_PeriphCLKConfig+0xbe>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006f14:	f7fd fec6 	bl	8004ca4 <HAL_GetTick>
 8006f18:	eba0 0008 	sub.w	r0, r0, r8
 8006f1c:	4548      	cmp	r0, r9
 8006f1e:	d9f5      	bls.n	8006f0c <HAL_RCCEx_PeriphCLKConfig+0x3cc>
 8006f20:	e7d6      	b.n	8006ed0 <HAL_RCCEx_PeriphCLKConfig+0x390>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006f22:	6891      	ldr	r1, [r2, #8]
 8006f24:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8006f28:	e679      	b.n	8006c1e <HAL_RCCEx_PeriphCLKConfig+0xde>
    __HAL_RCC_PLLI2S_DISABLE();
 8006f2a:	4e49      	ldr	r6, [pc, #292]	@ (8007050 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006f2c:	6833      	ldr	r3, [r6, #0]
 8006f2e:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8006f32:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 8006f34:	f7fd feb6 	bl	8004ca4 <HAL_GetTick>
 8006f38:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006f3a:	6833      	ldr	r3, [r6, #0]
 8006f3c:	011b      	lsls	r3, r3, #4
 8006f3e:	d472      	bmi.n	8007026 <HAL_RCCEx_PeriphCLKConfig+0x4e6>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8006f40:	6822      	ldr	r2, [r4, #0]
 8006f42:	07d7      	lsls	r7, r2, #31
 8006f44:	d512      	bpl.n	8006f6c <HAL_RCCEx_PeriphCLKConfig+0x42c>
 8006f46:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8006f48:	b983      	cbnz	r3, 8006f6c <HAL_RCCEx_PeriphCLKConfig+0x42c>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8006f4a:	f8d6 3084 	ldr.w	r3, [r6, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8006f4e:	f8d6 1084 	ldr.w	r1, [r6, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8006f52:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006f56:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8006f5a:	430b      	orrs	r3, r1
 8006f5c:	6861      	ldr	r1, [r4, #4]
 8006f5e:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8006f62:	68a1      	ldr	r1, [r4, #8]
 8006f64:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8006f68:	f8c6 3084 	str.w	r3, [r6, #132]	@ 0x84
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8006f6c:	0316      	lsls	r6, r2, #12
 8006f6e:	d503      	bpl.n	8006f78 <HAL_RCCEx_PeriphCLKConfig+0x438>
 8006f70:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8006f72:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8006f76:	d005      	beq.n	8006f84 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8006f78:	02d0      	lsls	r0, r2, #11
 8006f7a:	d51e      	bpl.n	8006fba <HAL_RCCEx_PeriphCLKConfig+0x47a>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8006f7c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8006f7e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006f82:	d11a      	bne.n	8006fba <HAL_RCCEx_PeriphCLKConfig+0x47a>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8006f84:	4932      	ldr	r1, [pc, #200]	@ (8007050 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006f86:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006f8a:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8006f8e:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006f92:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006f96:	4303      	orrs	r3, r0
 8006f98:	6860      	ldr	r0, [r4, #4]
 8006f9a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006f9e:	68e0      	ldr	r0, [r4, #12]
 8006fa0:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8006fa4:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006fa8:	f8d1 008c 	ldr.w	r0, [r1, #140]	@ 0x8c
 8006fac:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006fae:	f020 001f 	bic.w	r0, r0, #31
 8006fb2:	3b01      	subs	r3, #1
 8006fb4:	4303      	orrs	r3, r0
 8006fb6:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8006fba:	01d1      	lsls	r1, r2, #7
 8006fbc:	d511      	bpl.n	8006fe2 <HAL_RCCEx_PeriphCLKConfig+0x4a2>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8006fbe:	4924      	ldr	r1, [pc, #144]	@ (8007050 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006fc0:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006fc4:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8006fc8:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
 8006fcc:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006fd0:	4303      	orrs	r3, r0
 8006fd2:	6860      	ldr	r0, [r4, #4]
 8006fd4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006fd8:	6920      	ldr	r0, [r4, #16]
 8006fda:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8006fde:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006fe2:	0192      	lsls	r2, r2, #6
 8006fe4:	d50d      	bpl.n	8007002 <HAL_RCCEx_PeriphCLKConfig+0x4c2>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006fe6:	6923      	ldr	r3, [r4, #16]
 8006fe8:	6862      	ldr	r2, [r4, #4]
 8006fea:	041b      	lsls	r3, r3, #16
 8006fec:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006ff0:	68e2      	ldr	r2, [r4, #12]
 8006ff2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006ff6:	68a2      	ldr	r2, [r4, #8]
 8006ff8:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006ffc:	4a14      	ldr	r2, [pc, #80]	@ (8007050 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006ffe:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007002:	4e13      	ldr	r6, [pc, #76]	@ (8007050 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8007004:	6833      	ldr	r3, [r6, #0]
 8007006:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800700a:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 800700c:	f7fd fe4a 	bl	8004ca4 <HAL_GetTick>
 8007010:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007012:	6833      	ldr	r3, [r6, #0]
 8007014:	011b      	lsls	r3, r3, #4
 8007016:	f53f aed7 	bmi.w	8006dc8 <HAL_RCCEx_PeriphCLKConfig+0x288>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800701a:	f7fd fe43 	bl	8004ca4 <HAL_GetTick>
 800701e:	1bc0      	subs	r0, r0, r7
 8007020:	2864      	cmp	r0, #100	@ 0x64
 8007022:	d9f6      	bls.n	8007012 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8007024:	e754      	b.n	8006ed0 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8007026:	f7fd fe3d 	bl	8004ca4 <HAL_GetTick>
 800702a:	1bc0      	subs	r0, r0, r7
 800702c:	2864      	cmp	r0, #100	@ 0x64
 800702e:	d984      	bls.n	8006f3a <HAL_RCCEx_PeriphCLKConfig+0x3fa>
 8007030:	e74e      	b.n	8006ed0 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8007032:	f7fd fe37 	bl	8004ca4 <HAL_GetTick>
 8007036:	1b80      	subs	r0, r0, r6
 8007038:	2864      	cmp	r0, #100	@ 0x64
 800703a:	f67f aecf 	bls.w	8006ddc <HAL_RCCEx_PeriphCLKConfig+0x29c>
 800703e:	e747      	b.n	8006ed0 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8007040:	f7fd fe30 	bl	8004ca4 <HAL_GetTick>
 8007044:	1b40      	subs	r0, r0, r5
 8007046:	2864      	cmp	r0, #100	@ 0x64
 8007048:	f67f af33 	bls.w	8006eb2 <HAL_RCCEx_PeriphCLKConfig+0x372>
 800704c:	e740      	b.n	8006ed0 <HAL_RCCEx_PeriphCLKConfig+0x390>
 800704e:	bf00      	nop
 8007050:	40023800 	.word	0x40023800

08007054 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8007054:	b538      	push	{r3, r4, r5, lr}
 8007056:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8007058:	4604      	mov	r4, r0
 800705a:	b1c8      	cbz	r0, 8007090 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800705c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8007060:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8007064:	b91b      	cbnz	r3, 800706e <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8007066:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800706a:	f7fa f897 	bl	800119c <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800706e:	2302      	movs	r3, #2

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007070:	1d21      	adds	r1, r4, #4
 8007072:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007074:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007078:	f000 fed3 	bl	8007e22 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800707c:	6862      	ldr	r2, [r4, #4]
 800707e:	4629      	mov	r1, r5
 8007080:	6820      	ldr	r0, [r4, #0]
 8007082:	f000 ff06 	bl	8007e92 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007086:	2301      	movs	r3, #1

  return HAL_OK;
 8007088:	2000      	movs	r0, #0
  hsdram->State = HAL_SDRAM_STATE_READY;
 800708a:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
}
 800708e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007090:	2001      	movs	r0, #1
 8007092:	e7fc      	b.n	800708e <HAL_SDRAM_Init+0x3a>

08007094 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8007094:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8007096:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
 800709a:	4605      	mov	r5, r0
 800709c:	460e      	mov	r6, r1

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800709e:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80070a0:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 80070a2:	d010      	beq.n	80070c6 <HAL_SDRAM_SendCommand+0x32>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 80070a4:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 80070a8:	2c01      	cmp	r4, #1
 80070aa:	d110      	bne.n	80070ce <HAL_SDRAM_SendCommand+0x3a>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80070ac:	2302      	movs	r3, #2

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80070ae:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80070b0:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80070b4:	f000 ff23 	bl	8007efe <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80070b8:	6833      	ldr	r3, [r6, #0]
 80070ba:	2b02      	cmp	r3, #2
 80070bc:	d104      	bne.n	80070c8 <HAL_SDRAM_SendCommand+0x34>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80070be:	2305      	movs	r3, #5
 80070c0:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80070c4:	2000      	movs	r0, #0
}
 80070c6:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_READY;
 80070c8:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
 80070cc:	e7fa      	b.n	80070c4 <HAL_SDRAM_SendCommand+0x30>
    return HAL_ERROR;
 80070ce:	2001      	movs	r0, #1
 80070d0:	e7f9      	b.n	80070c6 <HAL_SDRAM_SendCommand+0x32>

080070d2 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80070d2:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80070d4:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
 80070d8:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80070da:	2b02      	cmp	r3, #2
 80070dc:	b2d8      	uxtb	r0, r3
 80070de:	d00d      	beq.n	80070fc <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 80070e0:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 80070e4:	2b01      	cmp	r3, #1
 80070e6:	b2dd      	uxtb	r5, r3
 80070e8:	d109      	bne.n	80070fe <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80070ea:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80070ec:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80070ee:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80070f2:	f000 ff16 	bl	8007f22 <FMC_SDRAM_ProgramRefreshRate>
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80070f6:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
 80070f8:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
 80070fc:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80070fe:	2001      	movs	r0, #1
 8007100:	e7fc      	b.n	80070fc <HAL_SDRAM_ProgramRefreshRate+0x2a>

08007102 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8007102:	4770      	bx	lr

08007104 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007104:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8007108:	2b01      	cmp	r3, #1
 800710a:	d133      	bne.n	8007174 <HAL_TIM_Base_Start_IT+0x70>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800710c:	2302      	movs	r3, #2
 800710e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007112:	6803      	ldr	r3, [r0, #0]
 8007114:	68da      	ldr	r2, [r3, #12]
 8007116:	f042 0201 	orr.w	r2, r2, #1
 800711a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800711c:	4a16      	ldr	r2, [pc, #88]	@ (8007178 <HAL_TIM_Base_Start_IT+0x74>)
 800711e:	4293      	cmp	r3, r2
 8007120:	d01a      	beq.n	8007158 <HAL_TIM_Base_Start_IT+0x54>
 8007122:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007126:	d017      	beq.n	8007158 <HAL_TIM_Base_Start_IT+0x54>
 8007128:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800712c:	4293      	cmp	r3, r2
 800712e:	d013      	beq.n	8007158 <HAL_TIM_Base_Start_IT+0x54>
 8007130:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007134:	4293      	cmp	r3, r2
 8007136:	d00f      	beq.n	8007158 <HAL_TIM_Base_Start_IT+0x54>
 8007138:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800713c:	4293      	cmp	r3, r2
 800713e:	d00b      	beq.n	8007158 <HAL_TIM_Base_Start_IT+0x54>
 8007140:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8007144:	4293      	cmp	r3, r2
 8007146:	d007      	beq.n	8007158 <HAL_TIM_Base_Start_IT+0x54>
 8007148:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 800714c:	4293      	cmp	r3, r2
 800714e:	d003      	beq.n	8007158 <HAL_TIM_Base_Start_IT+0x54>
 8007150:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8007154:	4293      	cmp	r3, r2
 8007156:	d107      	bne.n	8007168 <HAL_TIM_Base_Start_IT+0x64>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007158:	6899      	ldr	r1, [r3, #8]
 800715a:	4a08      	ldr	r2, [pc, #32]	@ (800717c <HAL_TIM_Base_Start_IT+0x78>)
 800715c:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800715e:	2a06      	cmp	r2, #6
 8007160:	d006      	beq.n	8007170 <HAL_TIM_Base_Start_IT+0x6c>
 8007162:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8007166:	d003      	beq.n	8007170 <HAL_TIM_Base_Start_IT+0x6c>
    {
      __HAL_TIM_ENABLE(htim);
 8007168:	681a      	ldr	r2, [r3, #0]
 800716a:	f042 0201 	orr.w	r2, r2, #1
 800716e:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8007170:	2000      	movs	r0, #0
 8007172:	4770      	bx	lr
    return HAL_ERROR;
 8007174:	2001      	movs	r0, #1
}
 8007176:	4770      	bx	lr
 8007178:	40010000 	.word	0x40010000
 800717c:	00010007 	.word	0x00010007

08007180 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8007180:	4770      	bx	lr

08007182 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8007182:	4770      	bx	lr

08007184 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8007184:	4770      	bx	lr

08007186 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8007186:	4770      	bx	lr

08007188 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007188:	6803      	ldr	r3, [r0, #0]
 800718a:	691a      	ldr	r2, [r3, #16]
 800718c:	0791      	lsls	r1, r2, #30
{
 800718e:	b510      	push	{r4, lr}
 8007190:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007192:	d50f      	bpl.n	80071b4 <HAL_TIM_IRQHandler+0x2c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8007194:	68da      	ldr	r2, [r3, #12]
 8007196:	0792      	lsls	r2, r2, #30
 8007198:	d50c      	bpl.n	80071b4 <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800719a:	f06f 0202 	mvn.w	r2, #2
 800719e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80071a0:	2201      	movs	r2, #1
 80071a2:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80071a4:	699b      	ldr	r3, [r3, #24]
 80071a6:	0799      	lsls	r1, r3, #30
 80071a8:	f000 8085 	beq.w	80072b6 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 80071ac:	f7ff ffe9 	bl	8007182 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80071b0:	2300      	movs	r3, #0
 80071b2:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80071b4:	6823      	ldr	r3, [r4, #0]
 80071b6:	691a      	ldr	r2, [r3, #16]
 80071b8:	0752      	lsls	r2, r2, #29
 80071ba:	d510      	bpl.n	80071de <HAL_TIM_IRQHandler+0x56>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80071bc:	68da      	ldr	r2, [r3, #12]
 80071be:	0750      	lsls	r0, r2, #29
 80071c0:	d50d      	bpl.n	80071de <HAL_TIM_IRQHandler+0x56>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80071c2:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
 80071c6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80071c8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80071ca:	2202      	movs	r2, #2
 80071cc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80071ce:	699b      	ldr	r3, [r3, #24]
 80071d0:	f413 7f40 	tst.w	r3, #768	@ 0x300
 80071d4:	d075      	beq.n	80072c2 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 80071d6:	f7ff ffd4 	bl	8007182 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80071da:	2300      	movs	r3, #0
 80071dc:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80071de:	6823      	ldr	r3, [r4, #0]
 80071e0:	691a      	ldr	r2, [r3, #16]
 80071e2:	0711      	lsls	r1, r2, #28
 80071e4:	d50f      	bpl.n	8007206 <HAL_TIM_IRQHandler+0x7e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80071e6:	68da      	ldr	r2, [r3, #12]
 80071e8:	0712      	lsls	r2, r2, #28
 80071ea:	d50c      	bpl.n	8007206 <HAL_TIM_IRQHandler+0x7e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80071ec:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
 80071f0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80071f2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80071f4:	2204      	movs	r2, #4
 80071f6:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80071f8:	69db      	ldr	r3, [r3, #28]
 80071fa:	079b      	lsls	r3, r3, #30
 80071fc:	d067      	beq.n	80072ce <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 80071fe:	f7ff ffc0 	bl	8007182 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007202:	2300      	movs	r3, #0
 8007204:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8007206:	6823      	ldr	r3, [r4, #0]
 8007208:	691a      	ldr	r2, [r3, #16]
 800720a:	06d0      	lsls	r0, r2, #27
 800720c:	d510      	bpl.n	8007230 <HAL_TIM_IRQHandler+0xa8>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800720e:	68da      	ldr	r2, [r3, #12]
 8007210:	06d1      	lsls	r1, r2, #27
 8007212:	d50d      	bpl.n	8007230 <HAL_TIM_IRQHandler+0xa8>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8007214:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
 8007218:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800721a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800721c:	2208      	movs	r2, #8
 800721e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007220:	69db      	ldr	r3, [r3, #28]
 8007222:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8007226:	d058      	beq.n	80072da <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 8007228:	f7ff ffab 	bl	8007182 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800722c:	2300      	movs	r3, #0
 800722e:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8007230:	6823      	ldr	r3, [r4, #0]
 8007232:	691a      	ldr	r2, [r3, #16]
 8007234:	07d2      	lsls	r2, r2, #31
 8007236:	d508      	bpl.n	800724a <HAL_TIM_IRQHandler+0xc2>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8007238:	68da      	ldr	r2, [r3, #12]
 800723a:	07d0      	lsls	r0, r2, #31
 800723c:	d505      	bpl.n	800724a <HAL_TIM_IRQHandler+0xc2>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800723e:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
 8007242:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8007244:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8007246:	f7f9 fd65 	bl	8000d14 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800724a:	6823      	ldr	r3, [r4, #0]
 800724c:	691a      	ldr	r2, [r3, #16]
 800724e:	0611      	lsls	r1, r2, #24
 8007250:	d508      	bpl.n	8007264 <HAL_TIM_IRQHandler+0xdc>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8007252:	68da      	ldr	r2, [r3, #12]
 8007254:	0612      	lsls	r2, r2, #24
 8007256:	d505      	bpl.n	8007264 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8007258:	f06f 0280 	mvn.w	r2, #128	@ 0x80
      HAL_TIMEx_BreakCallback(htim);
 800725c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800725e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8007260:	f000 f8d9 	bl	8007416 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 8007264:	6823      	ldr	r3, [r4, #0]
 8007266:	691a      	ldr	r2, [r3, #16]
 8007268:	05d0      	lsls	r0, r2, #23
 800726a:	d508      	bpl.n	800727e <HAL_TIM_IRQHandler+0xf6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800726c:	68da      	ldr	r2, [r3, #12]
 800726e:	0611      	lsls	r1, r2, #24
 8007270:	d505      	bpl.n	800727e <HAL_TIM_IRQHandler+0xf6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007272:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
 8007276:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007278:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 800727a:	f000 f8cd 	bl	8007418 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800727e:	6823      	ldr	r3, [r4, #0]
 8007280:	691a      	ldr	r2, [r3, #16]
 8007282:	0652      	lsls	r2, r2, #25
 8007284:	d508      	bpl.n	8007298 <HAL_TIM_IRQHandler+0x110>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8007286:	68da      	ldr	r2, [r3, #12]
 8007288:	0650      	lsls	r0, r2, #25
 800728a:	d505      	bpl.n	8007298 <HAL_TIM_IRQHandler+0x110>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800728c:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
 8007290:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8007292:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8007294:	f7ff ff77 	bl	8007186 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8007298:	6823      	ldr	r3, [r4, #0]
 800729a:	691a      	ldr	r2, [r3, #16]
 800729c:	0691      	lsls	r1, r2, #26
 800729e:	d522      	bpl.n	80072e6 <HAL_TIM_IRQHandler+0x15e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80072a0:	68da      	ldr	r2, [r3, #12]
 80072a2:	0692      	lsls	r2, r2, #26
 80072a4:	d51f      	bpl.n	80072e6 <HAL_TIM_IRQHandler+0x15e>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80072a6:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 80072aa:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80072ac:	611a      	str	r2, [r3, #16]
}
 80072ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80072b2:	f000 b8af 	b.w	8007414 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80072b6:	f7ff ff63 	bl	8007180 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80072ba:	4620      	mov	r0, r4
 80072bc:	f7ff ff62 	bl	8007184 <HAL_TIM_PWM_PulseFinishedCallback>
 80072c0:	e776      	b.n	80071b0 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80072c2:	f7ff ff5d 	bl	8007180 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80072c6:	4620      	mov	r0, r4
 80072c8:	f7ff ff5c 	bl	8007184 <HAL_TIM_PWM_PulseFinishedCallback>
 80072cc:	e785      	b.n	80071da <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80072ce:	f7ff ff57 	bl	8007180 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80072d2:	4620      	mov	r0, r4
 80072d4:	f7ff ff56 	bl	8007184 <HAL_TIM_PWM_PulseFinishedCallback>
 80072d8:	e793      	b.n	8007202 <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80072da:	f7ff ff51 	bl	8007180 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80072de:	4620      	mov	r0, r4
 80072e0:	f7ff ff50 	bl	8007184 <HAL_TIM_PWM_PulseFinishedCallback>
 80072e4:	e7a2      	b.n	800722c <HAL_TIM_IRQHandler+0xa4>
}
 80072e6:	bd10      	pop	{r4, pc}

080072e8 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80072e8:	4a30      	ldr	r2, [pc, #192]	@ (80073ac <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80072ea:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80072ec:	4290      	cmp	r0, r2
 80072ee:	d012      	beq.n	8007316 <TIM_Base_SetConfig+0x2e>
 80072f0:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 80072f4:	d00f      	beq.n	8007316 <TIM_Base_SetConfig+0x2e>
 80072f6:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80072fa:	4290      	cmp	r0, r2
 80072fc:	d00b      	beq.n	8007316 <TIM_Base_SetConfig+0x2e>
 80072fe:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007302:	4290      	cmp	r0, r2
 8007304:	d007      	beq.n	8007316 <TIM_Base_SetConfig+0x2e>
 8007306:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800730a:	4290      	cmp	r0, r2
 800730c:	d003      	beq.n	8007316 <TIM_Base_SetConfig+0x2e>
 800730e:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8007312:	4290      	cmp	r0, r2
 8007314:	d119      	bne.n	800734a <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007316:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007318:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 800731c:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800731e:	4a23      	ldr	r2, [pc, #140]	@ (80073ac <TIM_Base_SetConfig+0xc4>)
 8007320:	4290      	cmp	r0, r2
 8007322:	d029      	beq.n	8007378 <TIM_Base_SetConfig+0x90>
 8007324:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007328:	d026      	beq.n	8007378 <TIM_Base_SetConfig+0x90>
 800732a:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800732e:	4290      	cmp	r0, r2
 8007330:	d022      	beq.n	8007378 <TIM_Base_SetConfig+0x90>
 8007332:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007336:	4290      	cmp	r0, r2
 8007338:	d01e      	beq.n	8007378 <TIM_Base_SetConfig+0x90>
 800733a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800733e:	4290      	cmp	r0, r2
 8007340:	d01a      	beq.n	8007378 <TIM_Base_SetConfig+0x90>
 8007342:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8007346:	4290      	cmp	r0, r2
 8007348:	d016      	beq.n	8007378 <TIM_Base_SetConfig+0x90>
 800734a:	4a19      	ldr	r2, [pc, #100]	@ (80073b0 <TIM_Base_SetConfig+0xc8>)
 800734c:	4290      	cmp	r0, r2
 800734e:	d013      	beq.n	8007378 <TIM_Base_SetConfig+0x90>
 8007350:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007354:	4290      	cmp	r0, r2
 8007356:	d00f      	beq.n	8007378 <TIM_Base_SetConfig+0x90>
 8007358:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800735c:	4290      	cmp	r0, r2
 800735e:	d00b      	beq.n	8007378 <TIM_Base_SetConfig+0x90>
 8007360:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 8007364:	4290      	cmp	r0, r2
 8007366:	d007      	beq.n	8007378 <TIM_Base_SetConfig+0x90>
 8007368:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800736c:	4290      	cmp	r0, r2
 800736e:	d003      	beq.n	8007378 <TIM_Base_SetConfig+0x90>
 8007370:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007374:	4290      	cmp	r0, r2
 8007376:	d103      	bne.n	8007380 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8007378:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800737c:	68ca      	ldr	r2, [r1, #12]
 800737e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007380:	694a      	ldr	r2, [r1, #20]
 8007382:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007386:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8007388:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800738a:	688b      	ldr	r3, [r1, #8]
 800738c:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800738e:	680b      	ldr	r3, [r1, #0]
 8007390:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007392:	4b06      	ldr	r3, [pc, #24]	@ (80073ac <TIM_Base_SetConfig+0xc4>)
 8007394:	4298      	cmp	r0, r3
 8007396:	d003      	beq.n	80073a0 <TIM_Base_SetConfig+0xb8>
 8007398:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800739c:	4298      	cmp	r0, r3
 800739e:	d101      	bne.n	80073a4 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80073a0:	690b      	ldr	r3, [r1, #16]
 80073a2:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80073a4:	2301      	movs	r3, #1
 80073a6:	6143      	str	r3, [r0, #20]
}
 80073a8:	4770      	bx	lr
 80073aa:	bf00      	nop
 80073ac:	40010000 	.word	0x40010000
 80073b0:	40014000 	.word	0x40014000

080073b4 <HAL_TIM_Base_Init>:
{
 80073b4:	b510      	push	{r4, lr}
  if (htim == NULL)
 80073b6:	4604      	mov	r4, r0
 80073b8:	b350      	cbz	r0, 8007410 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 80073ba:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80073be:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80073c2:	b91b      	cbnz	r3, 80073cc <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80073c4:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 80073c8:	f7ff fe9b 	bl	8007102 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80073cc:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80073ce:	6820      	ldr	r0, [r4, #0]
 80073d0:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 80073d2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80073d6:	f7ff ff87 	bl	80072e8 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80073da:	2301      	movs	r3, #1
  return HAL_OK;
 80073dc:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80073de:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80073e2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 80073e6:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 80073ea:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80073ee:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 80073f2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80073f6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80073fa:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 80073fe:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8007402:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 8007406:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 800740a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800740e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007410:	2001      	movs	r0, #1
 8007412:	e7fc      	b.n	800740e <HAL_TIM_Base_Init+0x5a>

08007414 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8007414:	4770      	bx	lr

08007416 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8007416:	4770      	bx	lr

08007418 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 8007418:	4770      	bx	lr

0800741a <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800741a:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800741c:	e852 3f00 	ldrex	r3, [r2]
 8007420:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007424:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8007428:	6802      	ldr	r2, [r0, #0]
 800742a:	2900      	cmp	r1, #0
 800742c:	d1f5      	bne.n	800741a <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800742e:	f102 0308 	add.w	r3, r2, #8
 8007432:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007436:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800743a:	f102 0c08 	add.w	ip, r2, #8
 800743e:	e84c 3100 	strex	r1, r3, [ip]
 8007442:	2900      	cmp	r1, #0
 8007444:	d1f3      	bne.n	800742e <UART_EndRxTransfer+0x14>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8007446:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8007448:	2b01      	cmp	r3, #1
 800744a:	d107      	bne.n	800745c <UART_EndRxTransfer+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800744c:	e852 3f00 	ldrex	r3, [r2]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8007450:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007454:	e842 3100 	strex	r1, r3, [r2]
 8007458:	2900      	cmp	r1, #0
 800745a:	d1f7      	bne.n	800744c <UART_EndRxTransfer+0x32>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800745c:	2320      	movs	r3, #32
 800745e:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007462:	2300      	movs	r3, #0
 8007464:	6603      	str	r3, [r0, #96]	@ 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 8007466:	6683      	str	r3, [r0, #104]	@ 0x68
}
 8007468:	4770      	bx	lr

0800746a <HAL_UART_ErrorCallback>:
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
 800746a:	4770      	bx	lr

0800746c <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 800746c:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 800746e:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->RxXferCount = 0U;
 8007470:	2300      	movs	r3, #0
 8007472:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
  huart->TxXferCount = 0U;
 8007476:	f8a0 3052 	strh.w	r3, [r0, #82]	@ 0x52
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 800747a:	f7ff fff6 	bl	800746a <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 800747e:	bd08      	pop	{r3, pc}

08007480 <HAL_UARTEx_RxEventCallback>:
}
 8007480:	4770      	bx	lr
	...

08007484 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8007484:	6803      	ldr	r3, [r0, #0]
{
 8007486:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8007488:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
 800748a:	f640 060f 	movw	r6, #2063	@ 0x80f
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 800748e:	6819      	ldr	r1, [r3, #0]
{
 8007490:	4604      	mov	r4, r0
  if (errorflags == 0U)
 8007492:	4232      	tst	r2, r6
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8007494:	689d      	ldr	r5, [r3, #8]
  if (errorflags == 0U)
 8007496:	d10b      	bne.n	80074b0 <HAL_UART_IRQHandler+0x2c>
    if (((isrflags & USART_ISR_RXNE) != 0U)
 8007498:	0696      	lsls	r6, r2, #26
 800749a:	f140 8088 	bpl.w	80075ae <HAL_UART_IRQHandler+0x12a>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 800749e:	068d      	lsls	r5, r1, #26
 80074a0:	f140 8085 	bpl.w	80075ae <HAL_UART_IRQHandler+0x12a>
      if (huart->RxISR != NULL)
 80074a4:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 80074a6:	2b00      	cmp	r3, #0
 80074a8:	d07b      	beq.n	80075a2 <HAL_UART_IRQHandler+0x11e>
}
 80074aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
 80074ae:	4718      	bx	r3
      && (((cr3its & USART_CR3_EIE) != 0U)
 80074b0:	f005 0001 	and.w	r0, r5, #1
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 80074b4:	4d93      	ldr	r5, [pc, #588]	@ (8007704 <HAL_UART_IRQHandler+0x280>)
 80074b6:	400d      	ands	r5, r1
 80074b8:	4305      	orrs	r5, r0
 80074ba:	d078      	beq.n	80075ae <HAL_UART_IRQHandler+0x12a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 80074bc:	07d6      	lsls	r6, r2, #31
 80074be:	d509      	bpl.n	80074d4 <HAL_UART_IRQHandler+0x50>
 80074c0:	05cd      	lsls	r5, r1, #23
 80074c2:	d507      	bpl.n	80074d4 <HAL_UART_IRQHandler+0x50>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 80074c4:	2501      	movs	r5, #1
 80074c6:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 80074c8:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 80074cc:	f045 0501 	orr.w	r5, r5, #1
 80074d0:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80074d4:	0796      	lsls	r6, r2, #30
 80074d6:	d508      	bpl.n	80074ea <HAL_UART_IRQHandler+0x66>
 80074d8:	b138      	cbz	r0, 80074ea <HAL_UART_IRQHandler+0x66>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 80074da:	2502      	movs	r5, #2
 80074dc:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 80074de:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 80074e2:	f045 0504 	orr.w	r5, r5, #4
 80074e6:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80074ea:	0755      	lsls	r5, r2, #29
 80074ec:	d508      	bpl.n	8007500 <HAL_UART_IRQHandler+0x7c>
 80074ee:	b138      	cbz	r0, 8007500 <HAL_UART_IRQHandler+0x7c>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 80074f0:	2504      	movs	r5, #4
 80074f2:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 80074f4:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 80074f8:	f045 0502 	orr.w	r5, r5, #2
 80074fc:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_ORE) != 0U)
 8007500:	0716      	lsls	r6, r2, #28
 8007502:	d50b      	bpl.n	800751c <HAL_UART_IRQHandler+0x98>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8007504:	f001 0520 	and.w	r5, r1, #32
 8007508:	4305      	orrs	r5, r0
 800750a:	d007      	beq.n	800751c <HAL_UART_IRQHandler+0x98>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 800750c:	2008      	movs	r0, #8
 800750e:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8007510:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
 8007514:	f040 0008 	orr.w	r0, r0, #8
 8007518:	f8c4 0084 	str.w	r0, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 800751c:	0515      	lsls	r5, r2, #20
 800751e:	d50a      	bpl.n	8007536 <HAL_UART_IRQHandler+0xb2>
 8007520:	0148      	lsls	r0, r1, #5
 8007522:	d508      	bpl.n	8007536 <HAL_UART_IRQHandler+0xb2>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8007524:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 8007528:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 800752a:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 800752e:	f043 0320 	orr.w	r3, r3, #32
 8007532:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8007536:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 800753a:	2b00      	cmp	r3, #0
 800753c:	d031      	beq.n	80075a2 <HAL_UART_IRQHandler+0x11e>
      if (((isrflags & USART_ISR_RXNE) != 0U)
 800753e:	0692      	lsls	r2, r2, #26
 8007540:	d505      	bpl.n	800754e <HAL_UART_IRQHandler+0xca>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8007542:	068b      	lsls	r3, r1, #26
 8007544:	d503      	bpl.n	800754e <HAL_UART_IRQHandler+0xca>
        if (huart->RxISR != NULL)
 8007546:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 8007548:	b10b      	cbz	r3, 800754e <HAL_UART_IRQHandler+0xca>
          huart->RxISR(huart);
 800754a:	4620      	mov	r0, r4
 800754c:	4798      	blx	r3
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 800754e:	6826      	ldr	r6, [r4, #0]
        UART_EndRxTransfer(huart);
 8007550:	4620      	mov	r0, r4
      errorcode = huart->ErrorCode;
 8007552:	f8d4 2084 	ldr.w	r2, [r4, #132]	@ 0x84
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8007556:	68b3      	ldr	r3, [r6, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 8007558:	f002 0228 	and.w	r2, r2, #40	@ 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 800755c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007560:	ea53 0502 	orrs.w	r5, r3, r2
 8007564:	d01e      	beq.n	80075a4 <HAL_UART_IRQHandler+0x120>
        UART_EndRxTransfer(huart);
 8007566:	f7ff ff58 	bl	800741a <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800756a:	68b3      	ldr	r3, [r6, #8]
 800756c:	065e      	lsls	r6, r3, #25
 800756e:	d515      	bpl.n	800759c <HAL_UART_IRQHandler+0x118>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8007570:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007572:	f102 0308 	add.w	r3, r2, #8
 8007576:	e853 3f00 	ldrex	r3, [r3]
 800757a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800757e:	3208      	adds	r2, #8
 8007580:	e842 3100 	strex	r1, r3, [r2]
 8007584:	2900      	cmp	r1, #0
 8007586:	d1f3      	bne.n	8007570 <HAL_UART_IRQHandler+0xec>
          if (huart->hdmarx != NULL)
 8007588:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 800758a:	b138      	cbz	r0, 800759c <HAL_UART_IRQHandler+0x118>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 800758c:	4b5e      	ldr	r3, [pc, #376]	@ (8007708 <HAL_UART_IRQHandler+0x284>)
 800758e:	6503      	str	r3, [r0, #80]	@ 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8007590:	f7fd fceb 	bl	8004f6a <HAL_DMA_Abort_IT>
 8007594:	b128      	cbz	r0, 80075a2 <HAL_UART_IRQHandler+0x11e>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8007596:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8007598:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 800759a:	e786      	b.n	80074aa <HAL_UART_IRQHandler+0x26>
            HAL_UART_ErrorCallback(huart);
 800759c:	4620      	mov	r0, r4
 800759e:	f7ff ff64 	bl	800746a <HAL_UART_ErrorCallback>
}
 80075a2:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_ErrorCallback(huart);
 80075a4:	f7ff ff61 	bl	800746a <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 80075a8:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
 80075ac:	e7f9      	b.n	80075a2 <HAL_UART_IRQHandler+0x11e>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80075ae:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 80075b0:	2801      	cmp	r0, #1
 80075b2:	f040 8088 	bne.w	80076c6 <HAL_UART_IRQHandler+0x242>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 80075b6:	06d5      	lsls	r5, r2, #27
 80075b8:	f140 8085 	bpl.w	80076c6 <HAL_UART_IRQHandler+0x242>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 80075bc:	06c8      	lsls	r0, r1, #27
 80075be:	f140 8082 	bpl.w	80076c6 <HAL_UART_IRQHandler+0x242>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 80075c2:	2210      	movs	r2, #16
 80075c4:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80075c6:	689a      	ldr	r2, [r3, #8]
 80075c8:	0652      	lsls	r2, r2, #25
 80075ca:	d54a      	bpl.n	8007662 <HAL_UART_IRQHandler+0x1de>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 80075cc:	6f61      	ldr	r1, [r4, #116]	@ 0x74
 80075ce:	680a      	ldr	r2, [r1, #0]
 80075d0:	6852      	ldr	r2, [r2, #4]
 80075d2:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
 80075d4:	2a00      	cmp	r2, #0
 80075d6:	d0e4      	beq.n	80075a2 <HAL_UART_IRQHandler+0x11e>
          && (nb_remaining_rx_data < huart->RxXferSize))
 80075d8:	f8b4 0058 	ldrh.w	r0, [r4, #88]	@ 0x58
 80075dc:	4290      	cmp	r0, r2
 80075de:	d9e0      	bls.n	80075a2 <HAL_UART_IRQHandler+0x11e>
        huart->RxXferCount = nb_remaining_rx_data;
 80075e0:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 80075e4:	69ca      	ldr	r2, [r1, #28]
 80075e6:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 80075ea:	d02e      	beq.n	800764a <HAL_UART_IRQHandler+0x1c6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80075ec:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 80075f0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80075f4:	e843 2100 	strex	r1, r2, [r3]
 80075f8:	2900      	cmp	r1, #0
 80075fa:	d1f7      	bne.n	80075ec <HAL_UART_IRQHandler+0x168>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80075fc:	f103 0208 	add.w	r2, r3, #8
 8007600:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007604:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007608:	f103 0008 	add.w	r0, r3, #8
 800760c:	e840 2100 	strex	r1, r2, [r0]
 8007610:	2900      	cmp	r1, #0
 8007612:	d1f3      	bne.n	80075fc <HAL_UART_IRQHandler+0x178>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007614:	f103 0208 	add.w	r2, r3, #8
 8007618:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800761c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007620:	f103 0008 	add.w	r0, r3, #8
 8007624:	e840 2100 	strex	r1, r2, [r0]
 8007628:	2900      	cmp	r1, #0
 800762a:	d1f3      	bne.n	8007614 <HAL_UART_IRQHandler+0x190>
          huart->RxState = HAL_UART_STATE_READY;
 800762c:	2220      	movs	r2, #32
 800762e:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007632:	6621      	str	r1, [r4, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007634:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8007638:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800763c:	e843 2100 	strex	r1, r2, [r3]
 8007640:	2900      	cmp	r1, #0
 8007642:	d1f7      	bne.n	8007634 <HAL_UART_IRQHandler+0x1b0>
          (void)HAL_DMA_Abort(huart->hdmarx);
 8007644:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8007646:	f7fd fc52 	bl	8004eee <HAL_DMA_Abort>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 800764a:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 800764c:	f8b4 1058 	ldrh.w	r1, [r4, #88]	@ 0x58
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8007650:	6663      	str	r3, [r4, #100]	@ 0x64
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8007652:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 8007656:	1ac9      	subs	r1, r1, r3
 8007658:	b289      	uxth	r1, r1
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 800765a:	4620      	mov	r0, r4
 800765c:	f7ff ff10 	bl	8007480 <HAL_UARTEx_RxEventCallback>
 8007660:	e79f      	b.n	80075a2 <HAL_UART_IRQHandler+0x11e>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8007662:	f8b4 205a 	ldrh.w	r2, [r4, #90]	@ 0x5a
      if ((huart->RxXferCount > 0U)
 8007666:	f8b4 005a 	ldrh.w	r0, [r4, #90]	@ 0x5a
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 800766a:	f8b4 1058 	ldrh.w	r1, [r4, #88]	@ 0x58
 800766e:	b292      	uxth	r2, r2
      if ((huart->RxXferCount > 0U)
 8007670:	b280      	uxth	r0, r0
 8007672:	2800      	cmp	r0, #0
 8007674:	d095      	beq.n	80075a2 <HAL_UART_IRQHandler+0x11e>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8007676:	1a89      	subs	r1, r1, r2
 8007678:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
 800767a:	2900      	cmp	r1, #0
 800767c:	d091      	beq.n	80075a2 <HAL_UART_IRQHandler+0x11e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800767e:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8007682:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007686:	e843 2000 	strex	r0, r2, [r3]
 800768a:	2800      	cmp	r0, #0
 800768c:	d1f7      	bne.n	800767e <HAL_UART_IRQHandler+0x1fa>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800768e:	f103 0208 	add.w	r2, r3, #8
 8007692:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007696:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800769a:	f103 0508 	add.w	r5, r3, #8
 800769e:	e845 2000 	strex	r0, r2, [r5]
 80076a2:	2800      	cmp	r0, #0
 80076a4:	d1f3      	bne.n	800768e <HAL_UART_IRQHandler+0x20a>
        huart->RxState = HAL_UART_STATE_READY;
 80076a6:	2220      	movs	r2, #32
        huart->RxISR = NULL;
 80076a8:	66a0      	str	r0, [r4, #104]	@ 0x68
        huart->RxState = HAL_UART_STATE_READY;
 80076aa:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80076ae:	6620      	str	r0, [r4, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80076b0:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80076b4:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80076b8:	e843 2000 	strex	r0, r2, [r3]
 80076bc:	2800      	cmp	r0, #0
 80076be:	d1f7      	bne.n	80076b0 <HAL_UART_IRQHandler+0x22c>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 80076c0:	2302      	movs	r3, #2
 80076c2:	6663      	str	r3, [r4, #100]	@ 0x64
 80076c4:	e7c9      	b.n	800765a <HAL_UART_IRQHandler+0x1d6>
  if (((isrflags & USART_ISR_TXE) != 0U)
 80076c6:	0616      	lsls	r6, r2, #24
 80076c8:	d507      	bpl.n	80076da <HAL_UART_IRQHandler+0x256>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 80076ca:	060d      	lsls	r5, r1, #24
 80076cc:	d505      	bpl.n	80076da <HAL_UART_IRQHandler+0x256>
    if (huart->TxISR != NULL)
 80076ce:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 80076d0:	2b00      	cmp	r3, #0
 80076d2:	f43f af66 	beq.w	80075a2 <HAL_UART_IRQHandler+0x11e>
      huart->TxISR(huart);
 80076d6:	4620      	mov	r0, r4
 80076d8:	e6e7      	b.n	80074aa <HAL_UART_IRQHandler+0x26>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 80076da:	0650      	lsls	r0, r2, #25
 80076dc:	f57f af61 	bpl.w	80075a2 <HAL_UART_IRQHandler+0x11e>
 80076e0:	064a      	lsls	r2, r1, #25
 80076e2:	f57f af5e 	bpl.w	80075a2 <HAL_UART_IRQHandler+0x11e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80076e6:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 80076ea:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80076ee:	e843 2100 	strex	r1, r2, [r3]
 80076f2:	2900      	cmp	r1, #0
 80076f4:	d1f7      	bne.n	80076e6 <HAL_UART_IRQHandler+0x262>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 80076f6:	2320      	movs	r3, #32
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 80076f8:	4620      	mov	r0, r4
  huart->TxISR = NULL;
 80076fa:	66e1      	str	r1, [r4, #108]	@ 0x6c
  huart->gState = HAL_UART_STATE_READY;
 80076fc:	67e3      	str	r3, [r4, #124]	@ 0x7c
  HAL_UART_TxCpltCallback(huart);
 80076fe:	f7f9 fa67 	bl	8000bd0 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8007702:	e74e      	b.n	80075a2 <HAL_UART_IRQHandler+0x11e>
 8007704:	04000120 	.word	0x04000120
 8007708:	0800746d 	.word	0x0800746d

0800770c <UART_RxISR_8BIT>:
{
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800770c:	f8d0 2080 	ldr.w	r2, [r0, #128]	@ 0x80
  uint16_t uhMask = huart->Mask;
 8007710:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8007714:	2a22      	cmp	r2, #34	@ 0x22
{
 8007716:	b508      	push	{r3, lr}
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8007718:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800771a:	d143      	bne.n	80077a4 <UART_RxISR_8BIT+0x98>
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 800771c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 800771e:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 8007720:	400b      	ands	r3, r1
 8007722:	7013      	strb	r3, [r2, #0]
    huart->pRxBuffPtr++;
 8007724:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8007726:	3301      	adds	r3, #1
 8007728:	6543      	str	r3, [r0, #84]	@ 0x54
    huart->RxXferCount--;
 800772a:	f8b0 305a 	ldrh.w	r3, [r0, #90]	@ 0x5a
 800772e:	3b01      	subs	r3, #1
 8007730:	b29b      	uxth	r3, r3
 8007732:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a

    if (huart->RxXferCount == 0U)
 8007736:	f8b0 305a 	ldrh.w	r3, [r0, #90]	@ 0x5a
 800773a:	b29b      	uxth	r3, r3
 800773c:	bb73      	cbnz	r3, 800779c <UART_RxISR_8BIT+0x90>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800773e:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007740:	e852 3f00 	ldrex	r3, [r2]
 8007744:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007748:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 800774c:	6803      	ldr	r3, [r0, #0]
 800774e:	2900      	cmp	r1, #0
 8007750:	d1f5      	bne.n	800773e <UART_RxISR_8BIT+0x32>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007752:	f103 0208 	add.w	r2, r3, #8
 8007756:	e852 1f00 	ldrex	r1, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800775a:	f021 0101 	bic.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800775e:	4694      	mov	ip, r2
 8007760:	e84c 1200 	strex	r2, r1, [ip]
 8007764:	2a00      	cmp	r2, #0
 8007766:	d1f4      	bne.n	8007752 <UART_RxISR_8BIT+0x46>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8007768:	2120      	movs	r1, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 800776a:	6682      	str	r2, [r0, #104]	@ 0x68
      huart->RxState = HAL_UART_STATE_READY;
 800776c:	f8c0 1080 	str.w	r1, [r0, #128]	@ 0x80

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8007770:	6642      	str	r2, [r0, #100]	@ 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8007772:	6e01      	ldr	r1, [r0, #96]	@ 0x60
 8007774:	2901      	cmp	r1, #1
 8007776:	d112      	bne.n	800779e <UART_RxISR_8BIT+0x92>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007778:	6602      	str	r2, [r0, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800777a:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800777e:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007782:	e843 2100 	strex	r1, r2, [r3]
 8007786:	2900      	cmp	r1, #0
 8007788:	d1f7      	bne.n	800777a <UART_RxISR_8BIT+0x6e>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 800778a:	69da      	ldr	r2, [r3, #28]
 800778c:	06d2      	lsls	r2, r2, #27
 800778e:	d501      	bpl.n	8007794 <UART_RxISR_8BIT+0x88>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8007790:	2210      	movs	r2, #16
 8007792:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8007794:	f8b0 1058 	ldrh.w	r1, [r0, #88]	@ 0x58
 8007798:	f7ff fe72 	bl	8007480 <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 800779c:	bd08      	pop	{r3, pc}
        HAL_UART_RxCpltCallback(huart);
 800779e:	f7f9 fa29 	bl	8000bf4 <HAL_UART_RxCpltCallback>
 80077a2:	e7fb      	b.n	800779c <UART_RxISR_8BIT+0x90>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 80077a4:	699a      	ldr	r2, [r3, #24]
 80077a6:	f042 0208 	orr.w	r2, r2, #8
 80077aa:	619a      	str	r2, [r3, #24]
}
 80077ac:	e7f6      	b.n	800779c <UART_RxISR_8BIT+0x90>

080077ae <UART_RxISR_16BIT>:
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80077ae:	f8d0 2080 	ldr.w	r2, [r0, #128]	@ 0x80
  uint16_t uhMask = huart->Mask;
 80077b2:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80077b6:	2a22      	cmp	r2, #34	@ 0x22
{
 80077b8:	b508      	push	{r3, lr}
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80077ba:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80077bc:	d140      	bne.n	8007840 <UART_RxISR_16BIT+0x92>
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80077be:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
    tmp = (uint16_t *) huart->pRxBuffPtr ;
    *tmp = (uint16_t)(uhdata & uhMask);
 80077c0:	4011      	ands	r1, r2
 80077c2:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 80077c4:	f822 1b02 	strh.w	r1, [r2], #2
    huart->pRxBuffPtr += 2U;
 80077c8:	6542      	str	r2, [r0, #84]	@ 0x54
    huart->RxXferCount--;
 80077ca:	f8b0 205a 	ldrh.w	r2, [r0, #90]	@ 0x5a
 80077ce:	3a01      	subs	r2, #1
 80077d0:	b292      	uxth	r2, r2
 80077d2:	f8a0 205a 	strh.w	r2, [r0, #90]	@ 0x5a

    if (huart->RxXferCount == 0U)
 80077d6:	f8b0 205a 	ldrh.w	r2, [r0, #90]	@ 0x5a
 80077da:	b292      	uxth	r2, r2
 80077dc:	bb62      	cbnz	r2, 8007838 <UART_RxISR_16BIT+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80077de:	e853 2f00 	ldrex	r2, [r3]
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80077e2:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80077e6:	e843 2100 	strex	r1, r2, [r3]
 80077ea:	2900      	cmp	r1, #0
 80077ec:	d1f7      	bne.n	80077de <UART_RxISR_16BIT+0x30>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80077ee:	f103 0208 	add.w	r2, r3, #8
 80077f2:	e852 1f00 	ldrex	r1, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80077f6:	f021 0101 	bic.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80077fa:	4694      	mov	ip, r2
 80077fc:	e84c 1200 	strex	r2, r1, [ip]
 8007800:	2a00      	cmp	r2, #0
 8007802:	d1f4      	bne.n	80077ee <UART_RxISR_16BIT+0x40>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8007804:	2120      	movs	r1, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 8007806:	6682      	str	r2, [r0, #104]	@ 0x68
      huart->RxState = HAL_UART_STATE_READY;
 8007808:	f8c0 1080 	str.w	r1, [r0, #128]	@ 0x80

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 800780c:	6642      	str	r2, [r0, #100]	@ 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800780e:	6e01      	ldr	r1, [r0, #96]	@ 0x60
 8007810:	2901      	cmp	r1, #1
 8007812:	d112      	bne.n	800783a <UART_RxISR_16BIT+0x8c>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007814:	6602      	str	r2, [r0, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007816:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800781a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800781e:	e843 2100 	strex	r1, r2, [r3]
 8007822:	2900      	cmp	r1, #0
 8007824:	d1f7      	bne.n	8007816 <UART_RxISR_16BIT+0x68>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 8007826:	69da      	ldr	r2, [r3, #28]
 8007828:	06d2      	lsls	r2, r2, #27
 800782a:	d501      	bpl.n	8007830 <UART_RxISR_16BIT+0x82>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 800782c:	2210      	movs	r2, #16
 800782e:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8007830:	f8b0 1058 	ldrh.w	r1, [r0, #88]	@ 0x58
 8007834:	f7ff fe24 	bl	8007480 <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 8007838:	bd08      	pop	{r3, pc}
        HAL_UART_RxCpltCallback(huart);
 800783a:	f7f9 f9db 	bl	8000bf4 <HAL_UART_RxCpltCallback>
 800783e:	e7fb      	b.n	8007838 <UART_RxISR_16BIT+0x8a>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8007840:	699a      	ldr	r2, [r3, #24]
 8007842:	f042 0208 	orr.w	r2, r2, #8
 8007846:	619a      	str	r2, [r3, #24]
}
 8007848:	e7f6      	b.n	8007838 <UART_RxISR_16BIT+0x8a>
	...

0800784c <UART_SetConfig>:
{
 800784c:	b538      	push	{r3, r4, r5, lr}
 800784e:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8007850:	69c0      	ldr	r0, [r0, #28]
 8007852:	6921      	ldr	r1, [r4, #16]
 8007854:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8007856:	6823      	ldr	r3, [r4, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8007858:	430a      	orrs	r2, r1
 800785a:	6961      	ldr	r1, [r4, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800785c:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800785e:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8007860:	497d      	ldr	r1, [pc, #500]	@ (8007a58 <UART_SetConfig+0x20c>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8007862:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8007864:	4029      	ands	r1, r5
  tmpreg |= huart->Init.OneBitSampling;
 8007866:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8007868:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800786a:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800786c:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800786e:	685a      	ldr	r2, [r3, #4]
 8007870:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8007874:	430a      	orrs	r2, r1
 8007876:	605a      	str	r2, [r3, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8007878:	69a2      	ldr	r2, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800787a:	6899      	ldr	r1, [r3, #8]
  tmpreg |= huart->Init.OneBitSampling;
 800787c:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800787e:	f421 6130 	bic.w	r1, r1, #2816	@ 0xb00
 8007882:	430a      	orrs	r2, r1
 8007884:	609a      	str	r2, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8007886:	4a75      	ldr	r2, [pc, #468]	@ (8007a5c <UART_SetConfig+0x210>)
 8007888:	4293      	cmp	r3, r2
 800788a:	d113      	bne.n	80078b4 <UART_SetConfig+0x68>
 800788c:	4b74      	ldr	r3, [pc, #464]	@ (8007a60 <UART_SetConfig+0x214>)
 800788e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007892:	f003 0303 	and.w	r3, r3, #3
 8007896:	2b02      	cmp	r3, #2
 8007898:	f000 80a8 	beq.w	80079ec <UART_SetConfig+0x1a0>
 800789c:	2b03      	cmp	r3, #3
 800789e:	d021      	beq.n	80078e4 <UART_SetConfig+0x98>
 80078a0:	2b01      	cmp	r3, #1
 80078a2:	f040 80bd 	bne.w	8007a20 <UART_SetConfig+0x1d4>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80078a6:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 80078aa:	f040 809c 	bne.w	80079e6 <UART_SetConfig+0x19a>
        pclk = HAL_RCC_GetSysClockFreq();
 80078ae:	f7ff f83d 	bl	800692c <HAL_RCC_GetSysClockFreq>
        break;
 80078b2:	e092      	b.n	80079da <UART_SetConfig+0x18e>
  UART_GETCLOCKSOURCE(huart, clocksource);
 80078b4:	4a6b      	ldr	r2, [pc, #428]	@ (8007a64 <UART_SetConfig+0x218>)
 80078b6:	4293      	cmp	r3, r2
 80078b8:	d11b      	bne.n	80078f2 <UART_SetConfig+0xa6>
 80078ba:	4b69      	ldr	r3, [pc, #420]	@ (8007a60 <UART_SetConfig+0x214>)
 80078bc:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80078c0:	f003 030c 	and.w	r3, r3, #12
 80078c4:	2b08      	cmp	r3, #8
 80078c6:	f000 8091 	beq.w	80079ec <UART_SetConfig+0x1a0>
 80078ca:	d809      	bhi.n	80078e0 <UART_SetConfig+0x94>
 80078cc:	2b00      	cmp	r3, #0
 80078ce:	f000 80ad 	beq.w	8007a2c <UART_SetConfig+0x1e0>
 80078d2:	2b04      	cmp	r3, #4
 80078d4:	d0e7      	beq.n	80078a6 <UART_SetConfig+0x5a>
        ret = HAL_ERROR;
 80078d6:	2001      	movs	r0, #1
  huart->RxISR = NULL;
 80078d8:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 80078da:	e9c4 331a 	strd	r3, r3, [r4, #104]	@ 0x68
}
 80078de:	bd38      	pop	{r3, r4, r5, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 80078e0:	2b0c      	cmp	r3, #12
 80078e2:	d1f8      	bne.n	80078d6 <UART_SetConfig+0x8a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80078e4:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 80078e8:	f000 8084 	beq.w	80079f4 <UART_SetConfig+0x1a8>
        pclk = (uint32_t) LSE_VALUE;
 80078ec:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 80078f0:	e0a3      	b.n	8007a3a <UART_SetConfig+0x1ee>
  UART_GETCLOCKSOURCE(huart, clocksource);
 80078f2:	4a5d      	ldr	r2, [pc, #372]	@ (8007a68 <UART_SetConfig+0x21c>)
 80078f4:	4293      	cmp	r3, r2
 80078f6:	d10e      	bne.n	8007916 <UART_SetConfig+0xca>
 80078f8:	4b59      	ldr	r3, [pc, #356]	@ (8007a60 <UART_SetConfig+0x214>)
 80078fa:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80078fe:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8007902:	2b20      	cmp	r3, #32
 8007904:	d072      	beq.n	80079ec <UART_SetConfig+0x1a0>
 8007906:	d804      	bhi.n	8007912 <UART_SetConfig+0xc6>
 8007908:	2b00      	cmp	r3, #0
 800790a:	f000 808f 	beq.w	8007a2c <UART_SetConfig+0x1e0>
 800790e:	2b10      	cmp	r3, #16
 8007910:	e7e0      	b.n	80078d4 <UART_SetConfig+0x88>
 8007912:	2b30      	cmp	r3, #48	@ 0x30
 8007914:	e7e5      	b.n	80078e2 <UART_SetConfig+0x96>
 8007916:	4a55      	ldr	r2, [pc, #340]	@ (8007a6c <UART_SetConfig+0x220>)
 8007918:	4293      	cmp	r3, r2
 800791a:	d10d      	bne.n	8007938 <UART_SetConfig+0xec>
 800791c:	4b50      	ldr	r3, [pc, #320]	@ (8007a60 <UART_SetConfig+0x214>)
 800791e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007922:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 8007926:	2b80      	cmp	r3, #128	@ 0x80
 8007928:	d060      	beq.n	80079ec <UART_SetConfig+0x1a0>
 800792a:	d803      	bhi.n	8007934 <UART_SetConfig+0xe8>
 800792c:	2b00      	cmp	r3, #0
 800792e:	d07d      	beq.n	8007a2c <UART_SetConfig+0x1e0>
 8007930:	2b40      	cmp	r3, #64	@ 0x40
 8007932:	e7cf      	b.n	80078d4 <UART_SetConfig+0x88>
 8007934:	2bc0      	cmp	r3, #192	@ 0xc0
 8007936:	e7d4      	b.n	80078e2 <UART_SetConfig+0x96>
 8007938:	4a4d      	ldr	r2, [pc, #308]	@ (8007a70 <UART_SetConfig+0x224>)
 800793a:	4293      	cmp	r3, r2
 800793c:	d110      	bne.n	8007960 <UART_SetConfig+0x114>
 800793e:	4b48      	ldr	r3, [pc, #288]	@ (8007a60 <UART_SetConfig+0x214>)
 8007940:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007944:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007948:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800794c:	d04e      	beq.n	80079ec <UART_SetConfig+0x1a0>
 800794e:	d804      	bhi.n	800795a <UART_SetConfig+0x10e>
 8007950:	2b00      	cmp	r3, #0
 8007952:	d06b      	beq.n	8007a2c <UART_SetConfig+0x1e0>
 8007954:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8007958:	e7bc      	b.n	80078d4 <UART_SetConfig+0x88>
 800795a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800795e:	e7c0      	b.n	80078e2 <UART_SetConfig+0x96>
 8007960:	4a44      	ldr	r2, [pc, #272]	@ (8007a74 <UART_SetConfig+0x228>)
 8007962:	4293      	cmp	r3, r2
 8007964:	d110      	bne.n	8007988 <UART_SetConfig+0x13c>
 8007966:	4b3e      	ldr	r3, [pc, #248]	@ (8007a60 <UART_SetConfig+0x214>)
 8007968:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800796c:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8007970:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8007974:	d03a      	beq.n	80079ec <UART_SetConfig+0x1a0>
 8007976:	d804      	bhi.n	8007982 <UART_SetConfig+0x136>
 8007978:	2b00      	cmp	r3, #0
 800797a:	d051      	beq.n	8007a20 <UART_SetConfig+0x1d4>
 800797c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007980:	e7a8      	b.n	80078d4 <UART_SetConfig+0x88>
 8007982:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8007986:	e7ac      	b.n	80078e2 <UART_SetConfig+0x96>
 8007988:	4a3b      	ldr	r2, [pc, #236]	@ (8007a78 <UART_SetConfig+0x22c>)
 800798a:	4293      	cmp	r3, r2
 800798c:	d110      	bne.n	80079b0 <UART_SetConfig+0x164>
 800798e:	4b34      	ldr	r3, [pc, #208]	@ (8007a60 <UART_SetConfig+0x214>)
 8007990:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007994:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 8007998:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800799c:	d026      	beq.n	80079ec <UART_SetConfig+0x1a0>
 800799e:	d804      	bhi.n	80079aa <UART_SetConfig+0x15e>
 80079a0:	2b00      	cmp	r3, #0
 80079a2:	d043      	beq.n	8007a2c <UART_SetConfig+0x1e0>
 80079a4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80079a8:	e794      	b.n	80078d4 <UART_SetConfig+0x88>
 80079aa:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 80079ae:	e798      	b.n	80078e2 <UART_SetConfig+0x96>
 80079b0:	4a32      	ldr	r2, [pc, #200]	@ (8007a7c <UART_SetConfig+0x230>)
 80079b2:	4293      	cmp	r3, r2
 80079b4:	d18f      	bne.n	80078d6 <UART_SetConfig+0x8a>
 80079b6:	4b2a      	ldr	r3, [pc, #168]	@ (8007a60 <UART_SetConfig+0x214>)
 80079b8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80079bc:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80079c0:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80079c4:	d012      	beq.n	80079ec <UART_SetConfig+0x1a0>
 80079c6:	d803      	bhi.n	80079d0 <UART_SetConfig+0x184>
 80079c8:	b383      	cbz	r3, 8007a2c <UART_SetConfig+0x1e0>
 80079ca:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80079ce:	e781      	b.n	80078d4 <UART_SetConfig+0x88>
 80079d0:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 80079d4:	e785      	b.n	80078e2 <UART_SetConfig+0x96>
        pclk = HAL_RCC_GetPCLK1Freq();
 80079d6:	f7ff f875 	bl	8006ac4 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 80079da:	b958      	cbnz	r0, 80079f4 <UART_SetConfig+0x1a8>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80079dc:	2000      	movs	r0, #0
 80079de:	e77b      	b.n	80078d8 <UART_SetConfig+0x8c>
        pclk = HAL_RCC_GetPCLK2Freq();
 80079e0:	f7ff f880 	bl	8006ae4 <HAL_RCC_GetPCLK2Freq>
        break;
 80079e4:	e027      	b.n	8007a36 <UART_SetConfig+0x1ea>
        pclk = HAL_RCC_GetSysClockFreq();
 80079e6:	f7fe ffa1 	bl	800692c <HAL_RCC_GetSysClockFreq>
        break;
 80079ea:	e024      	b.n	8007a36 <UART_SetConfig+0x1ea>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80079ec:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) HSI_VALUE;
 80079f0:	4823      	ldr	r0, [pc, #140]	@ (8007a80 <UART_SetConfig+0x234>)
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80079f2:	d122      	bne.n	8007a3a <UART_SetConfig+0x1ee>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 80079f4:	6862      	ldr	r2, [r4, #4]
 80079f6:	0853      	lsrs	r3, r2, #1
 80079f8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80079fc:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8007a00:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 8007a04:	f1a3 0110 	sub.w	r1, r3, #16
 8007a08:	4291      	cmp	r1, r2
 8007a0a:	f63f af64 	bhi.w	80078d6 <UART_SetConfig+0x8a>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8007a0e:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8007a12:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
 8007a16:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8007a18:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
 8007a1a:	4313      	orrs	r3, r2
 8007a1c:	60cb      	str	r3, [r1, #12]
 8007a1e:	e7dd      	b.n	80079dc <UART_SetConfig+0x190>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007a20:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8007a24:	d1dc      	bne.n	80079e0 <UART_SetConfig+0x194>
        pclk = HAL_RCC_GetPCLK2Freq();
 8007a26:	f7ff f85d 	bl	8006ae4 <HAL_RCC_GetPCLK2Freq>
        break;
 8007a2a:	e7d6      	b.n	80079da <UART_SetConfig+0x18e>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007a2c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8007a30:	d0d1      	beq.n	80079d6 <UART_SetConfig+0x18a>
        pclk = HAL_RCC_GetPCLK1Freq();
 8007a32:	f7ff f847 	bl	8006ac4 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 8007a36:	2800      	cmp	r0, #0
 8007a38:	d0d0      	beq.n	80079dc <UART_SetConfig+0x190>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8007a3a:	6862      	ldr	r2, [r4, #4]
 8007a3c:	eb00 0352 	add.w	r3, r0, r2, lsr #1
 8007a40:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8007a44:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 8007a48:	f1a3 0110 	sub.w	r1, r3, #16
 8007a4c:	4291      	cmp	r1, r2
 8007a4e:	f63f af42 	bhi.w	80078d6 <UART_SetConfig+0x8a>
        huart->Instance->BRR = (uint16_t)usartdiv;
 8007a52:	6822      	ldr	r2, [r4, #0]
 8007a54:	60d3      	str	r3, [r2, #12]
 8007a56:	e7c1      	b.n	80079dc <UART_SetConfig+0x190>
 8007a58:	efff69f3 	.word	0xefff69f3
 8007a5c:	40011000 	.word	0x40011000
 8007a60:	40023800 	.word	0x40023800
 8007a64:	40004400 	.word	0x40004400
 8007a68:	40004800 	.word	0x40004800
 8007a6c:	40004c00 	.word	0x40004c00
 8007a70:	40005000 	.word	0x40005000
 8007a74:	40011400 	.word	0x40011400
 8007a78:	40007800 	.word	0x40007800
 8007a7c:	40007c00 	.word	0x40007c00
 8007a80:	00f42400 	.word	0x00f42400

08007a84 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8007a84:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8007a86:	07da      	lsls	r2, r3, #31
{
 8007a88:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8007a8a:	d506      	bpl.n	8007a9a <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8007a8c:	6801      	ldr	r1, [r0, #0]
 8007a8e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8007a90:	684a      	ldr	r2, [r1, #4]
 8007a92:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
 8007a96:	4322      	orrs	r2, r4
 8007a98:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8007a9a:	079c      	lsls	r4, r3, #30
 8007a9c:	d506      	bpl.n	8007aac <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8007a9e:	6801      	ldr	r1, [r0, #0]
 8007aa0:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 8007aa2:	684a      	ldr	r2, [r1, #4]
 8007aa4:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8007aa8:	4322      	orrs	r2, r4
 8007aaa:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8007aac:	0759      	lsls	r1, r3, #29
 8007aae:	d506      	bpl.n	8007abe <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8007ab0:	6801      	ldr	r1, [r0, #0]
 8007ab2:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 8007ab4:	684a      	ldr	r2, [r1, #4]
 8007ab6:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8007aba:	4322      	orrs	r2, r4
 8007abc:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8007abe:	071a      	lsls	r2, r3, #28
 8007ac0:	d506      	bpl.n	8007ad0 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8007ac2:	6801      	ldr	r1, [r0, #0]
 8007ac4:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 8007ac6:	684a      	ldr	r2, [r1, #4]
 8007ac8:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8007acc:	4322      	orrs	r2, r4
 8007ace:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8007ad0:	06dc      	lsls	r4, r3, #27
 8007ad2:	d506      	bpl.n	8007ae2 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8007ad4:	6801      	ldr	r1, [r0, #0]
 8007ad6:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8007ad8:	688a      	ldr	r2, [r1, #8]
 8007ada:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8007ade:	4322      	orrs	r2, r4
 8007ae0:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8007ae2:	0699      	lsls	r1, r3, #26
 8007ae4:	d506      	bpl.n	8007af4 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8007ae6:	6801      	ldr	r1, [r0, #0]
 8007ae8:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8007aea:	688a      	ldr	r2, [r1, #8]
 8007aec:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8007af0:	4322      	orrs	r2, r4
 8007af2:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8007af4:	065a      	lsls	r2, r3, #25
 8007af6:	d510      	bpl.n	8007b1a <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8007af8:	6801      	ldr	r1, [r0, #0]
 8007afa:	6c04      	ldr	r4, [r0, #64]	@ 0x40
 8007afc:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8007afe:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8007b02:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 8007b06:	ea42 0204 	orr.w	r2, r2, r4
 8007b0a:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8007b0c:	d105      	bne.n	8007b1a <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8007b0e:	684a      	ldr	r2, [r1, #4]
 8007b10:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 8007b12:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
 8007b16:	4322      	orrs	r2, r4
 8007b18:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8007b1a:	061b      	lsls	r3, r3, #24
 8007b1c:	d506      	bpl.n	8007b2c <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8007b1e:	6802      	ldr	r2, [r0, #0]
 8007b20:	6c81      	ldr	r1, [r0, #72]	@ 0x48
 8007b22:	6853      	ldr	r3, [r2, #4]
 8007b24:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 8007b28:	430b      	orrs	r3, r1
 8007b2a:	6053      	str	r3, [r2, #4]
}
 8007b2c:	bd10      	pop	{r4, pc}

08007b2e <UART_WaitOnFlagUntilTimeout>:
{
 8007b2e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007b32:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007b36:	4605      	mov	r5, r0
 8007b38:	460f      	mov	r7, r1
 8007b3a:	4616      	mov	r6, r2
 8007b3c:	4698      	mov	r8, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8007b3e:	682a      	ldr	r2, [r5, #0]
 8007b40:	69d3      	ldr	r3, [r2, #28]
 8007b42:	ea37 0303 	bics.w	r3, r7, r3
 8007b46:	bf0c      	ite	eq
 8007b48:	2301      	moveq	r3, #1
 8007b4a:	2300      	movne	r3, #0
 8007b4c:	42b3      	cmp	r3, r6
 8007b4e:	d001      	beq.n	8007b54 <UART_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
 8007b50:	2000      	movs	r0, #0
 8007b52:	e028      	b.n	8007ba6 <UART_WaitOnFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
 8007b54:	f1b9 3fff 	cmp.w	r9, #4294967295
 8007b58:	d0f2      	beq.n	8007b40 <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007b5a:	f7fd f8a3 	bl	8004ca4 <HAL_GetTick>
 8007b5e:	eba0 0008 	sub.w	r0, r0, r8
 8007b62:	682c      	ldr	r4, [r5, #0]
 8007b64:	4548      	cmp	r0, r9
 8007b66:	d802      	bhi.n	8007b6e <UART_WaitOnFlagUntilTimeout+0x40>
 8007b68:	f1b9 0f00 	cmp.w	r9, #0
 8007b6c:	d11d      	bne.n	8007baa <UART_WaitOnFlagUntilTimeout+0x7c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007b6e:	e854 3f00 	ldrex	r3, [r4]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8007b72:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007b76:	e844 3200 	strex	r2, r3, [r4]
 8007b7a:	2a00      	cmp	r2, #0
 8007b7c:	d1f7      	bne.n	8007b6e <UART_WaitOnFlagUntilTimeout+0x40>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007b7e:	f104 0308 	add.w	r3, r4, #8
 8007b82:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007b86:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007b8a:	f104 0108 	add.w	r1, r4, #8
 8007b8e:	e841 3200 	strex	r2, r3, [r1]
 8007b92:	2a00      	cmp	r2, #0
 8007b94:	d1f3      	bne.n	8007b7e <UART_WaitOnFlagUntilTimeout+0x50>
        huart->gState = HAL_UART_STATE_READY;
 8007b96:	2320      	movs	r3, #32
 8007b98:	67eb      	str	r3, [r5, #124]	@ 0x7c
        huart->RxState = HAL_UART_STATE_READY;
 8007b9a:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
          __HAL_UNLOCK(huart);
 8007b9e:	2300      	movs	r3, #0
        return HAL_TIMEOUT;
 8007ba0:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 8007ba2:	f885 3078 	strb.w	r3, [r5, #120]	@ 0x78
}
 8007ba6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8007baa:	6823      	ldr	r3, [r4, #0]
 8007bac:	075a      	lsls	r2, r3, #29
 8007bae:	d5c6      	bpl.n	8007b3e <UART_WaitOnFlagUntilTimeout+0x10>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8007bb0:	69e3      	ldr	r3, [r4, #28]
 8007bb2:	051b      	lsls	r3, r3, #20
 8007bb4:	d5c3      	bpl.n	8007b3e <UART_WaitOnFlagUntilTimeout+0x10>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8007bb6:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8007bba:	6223      	str	r3, [r4, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007bbc:	e854 3f00 	ldrex	r3, [r4]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8007bc0:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007bc4:	e844 3200 	strex	r2, r3, [r4]
 8007bc8:	2a00      	cmp	r2, #0
 8007bca:	d1f7      	bne.n	8007bbc <UART_WaitOnFlagUntilTimeout+0x8e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007bcc:	f104 0308 	add.w	r3, r4, #8
 8007bd0:	e853 3f00 	ldrex	r3, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007bd4:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007bd8:	f104 0108 	add.w	r1, r4, #8
 8007bdc:	e841 3200 	strex	r2, r3, [r1]
 8007be0:	2a00      	cmp	r2, #0
 8007be2:	d1f3      	bne.n	8007bcc <UART_WaitOnFlagUntilTimeout+0x9e>
          huart->gState = HAL_UART_STATE_READY;
 8007be4:	2320      	movs	r3, #32
 8007be6:	67eb      	str	r3, [r5, #124]	@ 0x7c
          huart->RxState = HAL_UART_STATE_READY;
 8007be8:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8007bec:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
          return HAL_TIMEOUT;
 8007bf0:	e7d5      	b.n	8007b9e <UART_WaitOnFlagUntilTimeout+0x70>

08007bf2 <HAL_UART_Transmit>:
{
 8007bf2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007bf6:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8007bf8:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
{
 8007bfa:	4604      	mov	r4, r0
 8007bfc:	460e      	mov	r6, r1
  if (huart->gState == HAL_UART_STATE_READY)
 8007bfe:	2b20      	cmp	r3, #32
{
 8007c00:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8007c02:	d141      	bne.n	8007c88 <HAL_UART_Transmit+0x96>
    if ((pData == NULL) || (Size == 0U))
 8007c04:	2900      	cmp	r1, #0
 8007c06:	d041      	beq.n	8007c8c <HAL_UART_Transmit+0x9a>
 8007c08:	2a00      	cmp	r2, #0
 8007c0a:	d03f      	beq.n	8007c8c <HAL_UART_Transmit+0x9a>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007c0c:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007c0e:	2500      	movs	r5, #0
 8007c10:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007c14:	67c3      	str	r3, [r0, #124]	@ 0x7c
    tickstart = HAL_GetTick();
 8007c16:	f7fd f845 	bl	8004ca4 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007c1a:	68a3      	ldr	r3, [r4, #8]
    tickstart = HAL_GetTick();
 8007c1c:	4681      	mov	r9, r0
    huart->TxXferSize  = Size;
 8007c1e:	f8a4 7050 	strh.w	r7, [r4, #80]	@ 0x50
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007c22:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->TxXferCount = Size;
 8007c26:	f8a4 7052 	strh.w	r7, [r4, #82]	@ 0x52
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007c2a:	d103      	bne.n	8007c34 <HAL_UART_Transmit+0x42>
 8007c2c:	6923      	ldr	r3, [r4, #16]
 8007c2e:	b90b      	cbnz	r3, 8007c34 <HAL_UART_Transmit+0x42>
 8007c30:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 8007c32:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 8007c34:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8007c38:	464b      	mov	r3, r9
 8007c3a:	f8cd 8000 	str.w	r8, [sp]
    while (huart->TxXferCount > 0U)
 8007c3e:	b292      	uxth	r2, r2
 8007c40:	b93a      	cbnz	r2, 8007c52 <HAL_UART_Transmit+0x60>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8007c42:	2140      	movs	r1, #64	@ 0x40
 8007c44:	4620      	mov	r0, r4
 8007c46:	f7ff ff72 	bl	8007b2e <UART_WaitOnFlagUntilTimeout>
 8007c4a:	b940      	cbnz	r0, 8007c5e <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 8007c4c:	2320      	movs	r3, #32
 8007c4e:	67e3      	str	r3, [r4, #124]	@ 0x7c
    return HAL_OK;
 8007c50:	e006      	b.n	8007c60 <HAL_UART_Transmit+0x6e>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8007c52:	2200      	movs	r2, #0
 8007c54:	2180      	movs	r1, #128	@ 0x80
 8007c56:	4620      	mov	r0, r4
 8007c58:	f7ff ff69 	bl	8007b2e <UART_WaitOnFlagUntilTimeout>
 8007c5c:	b118      	cbz	r0, 8007c66 <HAL_UART_Transmit+0x74>
        return HAL_TIMEOUT;
 8007c5e:	2003      	movs	r0, #3
}
 8007c60:	b003      	add	sp, #12
 8007c62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8007c66:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 8007c68:	b95e      	cbnz	r6, 8007c82 <HAL_UART_Transmit+0x90>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8007c6a:	f835 3b02 	ldrh.w	r3, [r5], #2
 8007c6e:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8007c72:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
 8007c74:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
 8007c78:	3a01      	subs	r2, #1
 8007c7a:	b292      	uxth	r2, r2
 8007c7c:	f8a4 2052 	strh.w	r2, [r4, #82]	@ 0x52
 8007c80:	e7d8      	b.n	8007c34 <HAL_UART_Transmit+0x42>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8007c82:	f816 3b01 	ldrb.w	r3, [r6], #1
 8007c86:	e7f4      	b.n	8007c72 <HAL_UART_Transmit+0x80>
    return HAL_BUSY;
 8007c88:	2002      	movs	r0, #2
 8007c8a:	e7e9      	b.n	8007c60 <HAL_UART_Transmit+0x6e>
      return  HAL_ERROR;
 8007c8c:	2001      	movs	r0, #1
 8007c8e:	e7e7      	b.n	8007c60 <HAL_UART_Transmit+0x6e>

08007c90 <UART_CheckIdleState>:
{
 8007c90:	b537      	push	{r0, r1, r2, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007c92:	2500      	movs	r5, #0
{
 8007c94:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007c96:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
  tickstart = HAL_GetTick();
 8007c9a:	f7fd f803 	bl	8004ca4 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8007c9e:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
 8007ca0:	4603      	mov	r3, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8007ca2:	6812      	ldr	r2, [r2, #0]
 8007ca4:	0712      	lsls	r2, r2, #28
 8007ca6:	d40a      	bmi.n	8007cbe <UART_CheckIdleState+0x2e>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007ca8:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8007caa:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 8007cac:	f884 0078 	strb.w	r0, [r4, #120]	@ 0x78
  huart->gState = HAL_UART_STATE_READY;
 8007cb0:	67e3      	str	r3, [r4, #124]	@ 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 8007cb2:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007cb6:	6620      	str	r0, [r4, #96]	@ 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8007cb8:	6660      	str	r0, [r4, #100]	@ 0x64
}
 8007cba:	b003      	add	sp, #12
 8007cbc:	bd30      	pop	{r4, r5, pc}
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8007cbe:	f06f 427e 	mvn.w	r2, #4261412864	@ 0xfe000000
 8007cc2:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8007cc6:	4620      	mov	r0, r4
 8007cc8:	9200      	str	r2, [sp, #0]
 8007cca:	462a      	mov	r2, r5
 8007ccc:	f7ff ff2f 	bl	8007b2e <UART_WaitOnFlagUntilTimeout>
 8007cd0:	2800      	cmp	r0, #0
 8007cd2:	d0e9      	beq.n	8007ca8 <UART_CheckIdleState+0x18>
      return HAL_TIMEOUT;
 8007cd4:	2003      	movs	r0, #3
 8007cd6:	e7f0      	b.n	8007cba <UART_CheckIdleState+0x2a>

08007cd8 <HAL_UART_Init>:
{
 8007cd8:	b510      	push	{r4, lr}
  if (huart == NULL)
 8007cda:	4604      	mov	r4, r0
 8007cdc:	b340      	cbz	r0, 8007d30 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8007cde:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
 8007ce0:	b91b      	cbnz	r3, 8007cea <HAL_UART_Init+0x12>
    huart->Lock = HAL_UNLOCKED;
 8007ce2:	f880 3078 	strb.w	r3, [r0, #120]	@ 0x78
    HAL_UART_MspInit(huart);
 8007ce6:	f7f9 fa15 	bl	8001114 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8007cea:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8007cec:	2324      	movs	r3, #36	@ 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
 8007cee:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
 8007cf0:	67e3      	str	r3, [r4, #124]	@ 0x7c
  __HAL_UART_DISABLE(huart);
 8007cf2:	6813      	ldr	r3, [r2, #0]
 8007cf4:	f023 0301 	bic.w	r3, r3, #1
 8007cf8:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8007cfa:	f7ff fda7 	bl	800784c <UART_SetConfig>
 8007cfe:	2801      	cmp	r0, #1
 8007d00:	d016      	beq.n	8007d30 <HAL_UART_Init+0x58>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8007d02:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007d04:	b113      	cbz	r3, 8007d0c <HAL_UART_Init+0x34>
    UART_AdvFeatureConfig(huart);
 8007d06:	4620      	mov	r0, r4
 8007d08:	f7ff febc 	bl	8007a84 <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8007d0c:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
 8007d0e:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8007d10:	685a      	ldr	r2, [r3, #4]
 8007d12:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8007d16:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8007d18:	689a      	ldr	r2, [r3, #8]
 8007d1a:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8007d1e:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8007d20:	681a      	ldr	r2, [r3, #0]
 8007d22:	f042 0201 	orr.w	r2, r2, #1
}
 8007d26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
 8007d2a:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 8007d2c:	f7ff bfb0 	b.w	8007c90 <UART_CheckIdleState>
}
 8007d30:	2001      	movs	r0, #1
 8007d32:	bd10      	pop	{r4, pc}

08007d34 <UART_Start_Receive_IT>:
{
 8007d34:	b510      	push	{r4, lr}
  huart->RxXferSize  = Size;
 8007d36:	f8a0 2058 	strh.w	r2, [r0, #88]	@ 0x58
  huart->RxISR       = NULL;
 8007d3a:	2300      	movs	r3, #0
  huart->RxXferCount = Size;
 8007d3c:	f8a0 205a 	strh.w	r2, [r0, #90]	@ 0x5a
  UART_MASK_COMPUTATION(huart);
 8007d40:	6882      	ldr	r2, [r0, #8]
  huart->pRxBuffPtr  = pData;
 8007d42:	6541      	str	r1, [r0, #84]	@ 0x54
  UART_MASK_COMPUTATION(huart);
 8007d44:	f5b2 5f80 	cmp.w	r2, #4096	@ 0x1000
  huart->RxISR       = NULL;
 8007d48:	6683      	str	r3, [r0, #104]	@ 0x68
  UART_MASK_COMPUTATION(huart);
 8007d4a:	d130      	bne.n	8007dae <UART_Start_Receive_IT+0x7a>
 8007d4c:	6903      	ldr	r3, [r0, #16]
 8007d4e:	2b00      	cmp	r3, #0
 8007d50:	f240 13ff 	movw	r3, #511	@ 0x1ff
 8007d54:	bf18      	it	ne
 8007d56:	23ff      	movne	r3, #255	@ 0xff
 8007d58:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007d5c:	2300      	movs	r3, #0
 8007d5e:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 8007d62:	2322      	movs	r3, #34	@ 0x22
 8007d64:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007d68:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007d6a:	f102 0308 	add.w	r3, r2, #8
 8007d6e:	e853 3f00 	ldrex	r3, [r3]
 8007d72:	f043 0301 	orr.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007d76:	3208      	adds	r2, #8
 8007d78:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8007d7c:	6802      	ldr	r2, [r0, #0]
 8007d7e:	2900      	cmp	r1, #0
 8007d80:	d1f2      	bne.n	8007d68 <UART_Start_Receive_IT+0x34>
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007d82:	6883      	ldr	r3, [r0, #8]
 8007d84:	6901      	ldr	r1, [r0, #16]
 8007d86:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->RxISR = UART_RxISR_16BIT;
 8007d8a:	4b15      	ldr	r3, [pc, #84]	@ (8007de0 <UART_Start_Receive_IT+0xac>)
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007d8c:	d103      	bne.n	8007d96 <UART_Start_Receive_IT+0x62>
    huart->RxISR = UART_RxISR_16BIT;
 8007d8e:	4c15      	ldr	r4, [pc, #84]	@ (8007de4 <UART_Start_Receive_IT+0xb0>)
 8007d90:	2900      	cmp	r1, #0
 8007d92:	bf08      	it	eq
 8007d94:	4623      	moveq	r3, r4
 8007d96:	6683      	str	r3, [r0, #104]	@ 0x68
  if (huart->Init.Parity != UART_PARITY_NONE)
 8007d98:	b1c9      	cbz	r1, 8007dce <UART_Start_Receive_IT+0x9a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007d9a:	e852 3f00 	ldrex	r3, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 8007d9e:	f443 7390 	orr.w	r3, r3, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007da2:	e842 3100 	strex	r1, r3, [r2]
 8007da6:	2900      	cmp	r1, #0
 8007da8:	d1f7      	bne.n	8007d9a <UART_Start_Receive_IT+0x66>
}
 8007daa:	2000      	movs	r0, #0
 8007dac:	bd10      	pop	{r4, pc}
  UART_MASK_COMPUTATION(huart);
 8007dae:	b92a      	cbnz	r2, 8007dbc <UART_Start_Receive_IT+0x88>
 8007db0:	6903      	ldr	r3, [r0, #16]
 8007db2:	2b00      	cmp	r3, #0
 8007db4:	bf14      	ite	ne
 8007db6:	237f      	movne	r3, #127	@ 0x7f
 8007db8:	23ff      	moveq	r3, #255	@ 0xff
 8007dba:	e7cd      	b.n	8007d58 <UART_Start_Receive_IT+0x24>
 8007dbc:	f1b2 5f80 	cmp.w	r2, #268435456	@ 0x10000000
 8007dc0:	d1ca      	bne.n	8007d58 <UART_Start_Receive_IT+0x24>
 8007dc2:	6903      	ldr	r3, [r0, #16]
 8007dc4:	2b00      	cmp	r3, #0
 8007dc6:	bf14      	ite	ne
 8007dc8:	233f      	movne	r3, #63	@ 0x3f
 8007dca:	237f      	moveq	r3, #127	@ 0x7f
 8007dcc:	e7c4      	b.n	8007d58 <UART_Start_Receive_IT+0x24>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007dce:	e852 3f00 	ldrex	r3, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE);
 8007dd2:	f043 0320 	orr.w	r3, r3, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007dd6:	e842 3100 	strex	r1, r3, [r2]
 8007dda:	2900      	cmp	r1, #0
 8007ddc:	d1f7      	bne.n	8007dce <UART_Start_Receive_IT+0x9a>
 8007dde:	e7e4      	b.n	8007daa <UART_Start_Receive_IT+0x76>
 8007de0:	0800770d 	.word	0x0800770d
 8007de4:	080077af 	.word	0x080077af

08007de8 <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
 8007de8:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
 8007dec:	2b20      	cmp	r3, #32
{
 8007dee:	b430      	push	{r4, r5}
  if (huart->RxState == HAL_UART_STATE_READY)
 8007df0:	d112      	bne.n	8007e18 <HAL_UART_Receive_IT+0x30>
    if ((pData == NULL) || (Size == 0U))
 8007df2:	b1a1      	cbz	r1, 8007e1e <HAL_UART_Receive_IT+0x36>
 8007df4:	b19a      	cbz	r2, 8007e1e <HAL_UART_Receive_IT+0x36>
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007df6:	2300      	movs	r3, #0
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 8007df8:	6804      	ldr	r4, [r0, #0]
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007dfa:	6603      	str	r3, [r0, #96]	@ 0x60
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 8007dfc:	6863      	ldr	r3, [r4, #4]
 8007dfe:	021b      	lsls	r3, r3, #8
 8007e00:	d507      	bpl.n	8007e12 <HAL_UART_Receive_IT+0x2a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007e02:	e854 3f00 	ldrex	r3, [r4]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 8007e06:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007e0a:	e844 3500 	strex	r5, r3, [r4]
 8007e0e:	2d00      	cmp	r5, #0
 8007e10:	d1f7      	bne.n	8007e02 <HAL_UART_Receive_IT+0x1a>
}
 8007e12:	bc30      	pop	{r4, r5}
    return (UART_Start_Receive_IT(huart, pData, Size));
 8007e14:	f7ff bf8e 	b.w	8007d34 <UART_Start_Receive_IT>
    return HAL_BUSY;
 8007e18:	2002      	movs	r0, #2
}
 8007e1a:	bc30      	pop	{r4, r5}
 8007e1c:	4770      	bx	lr
      return HAL_ERROR;
 8007e1e:	2001      	movs	r0, #1
 8007e20:	e7fb      	b.n	8007e1a <HAL_UART_Receive_IT+0x32>

08007e22 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007e22:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007e26:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8007e2a:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8007e2e:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
 8007e32:	ea43 0308 	orr.w	r3, r3, r8
 8007e36:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8007e3a:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8007e3e:	6809      	ldr	r1, [r1, #0]
 8007e40:	b991      	cbnz	r1, 8007e68 <FMC_SDRAM_Init+0x46>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007e42:	ea43 030e 	orr.w	r3, r3, lr
 8007e46:	6801      	ldr	r1, [r0, #0]
 8007e48:	4313      	orrs	r3, r2
 8007e4a:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8007e4e:	ea43 030c 	orr.w	r3, r3, ip
 8007e52:	f021 017f 	bic.w	r1, r1, #127	@ 0x7f
 8007e56:	433b      	orrs	r3, r7
 8007e58:	4333      	orrs	r3, r6
 8007e5a:	432b      	orrs	r3, r5
 8007e5c:	4323      	orrs	r3, r4
 8007e5e:	430b      	orrs	r3, r1
 8007e60:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8007e62:	2000      	movs	r0, #0
 8007e64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007e68:	6801      	ldr	r1, [r0, #0]
 8007e6a:	ea43 030e 	orr.w	r3, r3, lr
 8007e6e:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8007e72:	430b      	orrs	r3, r1
 8007e74:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8007e76:	ea42 030c 	orr.w	r3, r2, ip
 8007e7a:	6841      	ldr	r1, [r0, #4]
 8007e7c:	433b      	orrs	r3, r7
 8007e7e:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8007e82:	4333      	orrs	r3, r6
 8007e84:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8007e88:	432b      	orrs	r3, r5
 8007e8a:	4323      	orrs	r3, r4
 8007e8c:	4313      	orrs	r3, r2
 8007e8e:	6043      	str	r3, [r0, #4]
 8007e90:	e7e7      	b.n	8007e62 <FMC_SDRAM_Init+0x40>

08007e92 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007e92:	68cb      	ldr	r3, [r1, #12]
 8007e94:	f103 3cff 	add.w	ip, r3, #4294967295
 8007e98:	694b      	ldr	r3, [r1, #20]
{
 8007e9a:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007e9c:	3b01      	subs	r3, #1
 8007e9e:	680f      	ldr	r7, [r1, #0]
 8007ea0:	684c      	ldr	r4, [r1, #4]
 8007ea2:	688e      	ldr	r6, [r1, #8]
 8007ea4:	051b      	lsls	r3, r3, #20
 8007ea6:	690d      	ldr	r5, [r1, #16]
 8007ea8:	3c01      	subs	r4, #1
 8007eaa:	6989      	ldr	r1, [r1, #24]
 8007eac:	3e01      	subs	r6, #1
 8007eae:	3d01      	subs	r5, #1
 8007eb0:	3f01      	subs	r7, #1
 8007eb2:	3901      	subs	r1, #1
 8007eb4:	0124      	lsls	r4, r4, #4
 8007eb6:	0236      	lsls	r6, r6, #8
 8007eb8:	042d      	lsls	r5, r5, #16
 8007eba:	0609      	lsls	r1, r1, #24
 8007ebc:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8007ec0:	b95a      	cbnz	r2, 8007eda <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007ec2:	433b      	orrs	r3, r7
 8007ec4:	6882      	ldr	r2, [r0, #8]
 8007ec6:	4323      	orrs	r3, r4
 8007ec8:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007ecc:	4333      	orrs	r3, r6
 8007ece:	432b      	orrs	r3, r5
 8007ed0:	430b      	orrs	r3, r1
 8007ed2:	4313      	orrs	r3, r2
 8007ed4:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8007ed6:	2000      	movs	r0, #0
 8007ed8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007eda:	6882      	ldr	r2, [r0, #8]
 8007edc:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8007ee0:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8007ee4:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007ee6:	ea44 0306 	orr.w	r3, r4, r6
 8007eea:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007eec:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007eee:	68c2      	ldr	r2, [r0, #12]
 8007ef0:	432b      	orrs	r3, r5
 8007ef2:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007ef6:	430b      	orrs	r3, r1
 8007ef8:	4313      	orrs	r3, r2
 8007efa:	60c3      	str	r3, [r0, #12]
 8007efc:	e7eb      	b.n	8007ed6 <FMC_SDRAM_Timing_Init+0x44>

08007efe <FMC_SDRAM_SendCommand>:
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8007efe:	6902      	ldr	r2, [r0, #16]
{
 8007f00:	b510      	push	{r4, lr}
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8007f02:	e9d1 3400 	ldrd	r3, r4, [r1]
 8007f06:	0d92      	lsrs	r2, r2, #22
 8007f08:	4323      	orrs	r3, r4
 8007f0a:	68cc      	ldr	r4, [r1, #12]
 8007f0c:	0592      	lsls	r2, r2, #22
 8007f0e:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
 8007f12:	4313      	orrs	r3, r2
 8007f14:	688a      	ldr	r2, [r1, #8]
 8007f16:	3a01      	subs	r2, #1
 8007f18:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007f1c:	6103      	str	r3, [r0, #16]
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
 8007f1e:	2000      	movs	r0, #0
 8007f20:	bd10      	pop	{r4, pc}

08007f22 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8007f22:	6943      	ldr	r3, [r0, #20]
 8007f24:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8007f28:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
 8007f2c:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8007f30:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8007f32:	2000      	movs	r0, #0
 8007f34:	4770      	bx	lr
	...

08007f38 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007f38:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007f3c:	b113      	cbz	r3, 8007f44 <osKernelInitialize+0xc>
    stat = osErrorISR;
 8007f3e:	f06f 0005 	mvn.w	r0, #5
 8007f42:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007f44:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007f48:	4b07      	ldr	r3, [pc, #28]	@ (8007f68 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8007f4a:	b912      	cbnz	r2, 8007f52 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007f4c:	f3ef 8211 	mrs	r2, BASEPRI
 8007f50:	b112      	cbz	r2, 8007f58 <osKernelInitialize+0x20>
 8007f52:	681a      	ldr	r2, [r3, #0]
 8007f54:	2a02      	cmp	r2, #2
 8007f56:	d0f2      	beq.n	8007f3e <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8007f58:	6818      	ldr	r0, [r3, #0]
 8007f5a:	b910      	cbnz	r0, 8007f62 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007f5c:	2201      	movs	r2, #1
 8007f5e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007f60:	4770      	bx	lr
    } else {
      stat = osError;
 8007f62:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8007f66:	4770      	bx	lr
 8007f68:	20002530 	.word	0x20002530

08007f6c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007f6c:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007f6e:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007f72:	b113      	cbz	r3, 8007f7a <osKernelStart+0xe>
    stat = osErrorISR;
 8007f74:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8007f78:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007f7a:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007f7e:	4b0a      	ldr	r3, [pc, #40]	@ (8007fa8 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8007f80:	b912      	cbnz	r2, 8007f88 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007f82:	f3ef 8211 	mrs	r2, BASEPRI
 8007f86:	b112      	cbz	r2, 8007f8e <osKernelStart+0x22>
 8007f88:	681a      	ldr	r2, [r3, #0]
 8007f8a:	2a02      	cmp	r2, #2
 8007f8c:	d0f2      	beq.n	8007f74 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8007f8e:	681a      	ldr	r2, [r3, #0]
 8007f90:	2a01      	cmp	r2, #1
 8007f92:	d105      	bne.n	8007fa0 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8007f94:	2202      	movs	r2, #2
 8007f96:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8007f98:	f001 fe64 	bl	8009c64 <vTaskStartScheduler>
      stat = osOK;
 8007f9c:	2000      	movs	r0, #0
 8007f9e:	e7eb      	b.n	8007f78 <osKernelStart+0xc>
      stat = osError;
 8007fa0:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8007fa4:	e7e8      	b.n	8007f78 <osKernelStart+0xc>
 8007fa6:	bf00      	nop
 8007fa8:	20002530 	.word	0x20002530

08007fac <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007fac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007fae:	4614      	mov	r4, r2
 8007fb0:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007fb2:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007fb4:	460b      	mov	r3, r1
  hTask = NULL;
 8007fb6:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007fb8:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007fbc:	bb1a      	cbnz	r2, 8008006 <osThreadNew+0x5a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007fbe:	f3ef 8210 	mrs	r2, PRIMASK
 8007fc2:	b912      	cbnz	r2, 8007fca <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007fc4:	f3ef 8211 	mrs	r2, BASEPRI
 8007fc8:	b11a      	cbz	r2, 8007fd2 <osThreadNew+0x26>
 8007fca:	4a21      	ldr	r2, [pc, #132]	@ (8008050 <osThreadNew+0xa4>)
 8007fcc:	6812      	ldr	r2, [r2, #0]
 8007fce:	2a02      	cmp	r2, #2
 8007fd0:	d019      	beq.n	8008006 <osThreadNew+0x5a>
 8007fd2:	b1c0      	cbz	r0, 8008006 <osThreadNew+0x5a>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007fd4:	b36c      	cbz	r4, 8008032 <osThreadNew+0x86>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007fd6:	69a5      	ldr	r5, [r4, #24]
 8007fd8:	2d00      	cmp	r5, #0
 8007fda:	bf08      	it	eq
 8007fdc:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007fde:	1e6a      	subs	r2, r5, #1
 8007fe0:	46ac      	mov	ip, r5
 8007fe2:	2a37      	cmp	r2, #55	@ 0x37
 8007fe4:	d82a      	bhi.n	800803c <osThreadNew+0x90>
 8007fe6:	6862      	ldr	r2, [r4, #4]
 8007fe8:	07d2      	lsls	r2, r2, #31
 8007fea:	d427      	bmi.n	800803c <osThreadNew+0x90>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8007fec:	6966      	ldr	r6, [r4, #20]
 8007fee:	b16e      	cbz	r6, 800800c <osThreadNew+0x60>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007ff0:	08b2      	lsrs	r2, r6, #2
      if (attr->name != NULL) {
 8007ff2:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007ff4:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
 8007ff8:	b157      	cbz	r7, 8008010 <osThreadNew+0x64>
 8007ffa:	f1be 0f5f 	cmp.w	lr, #95	@ 0x5f
 8007ffe:	d902      	bls.n	8008006 <osThreadNew+0x5a>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008000:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008002:	b104      	cbz	r4, 8008006 <osThreadNew+0x5a>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008004:	b9e6      	cbnz	r6, 8008040 <osThreadNew+0x94>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008006:	9805      	ldr	r0, [sp, #20]
}
 8008008:	b007      	add	sp, #28
 800800a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800800c:	2280      	movs	r2, #128	@ 0x80
 800800e:	e7f0      	b.n	8007ff2 <osThreadNew+0x46>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008010:	f1be 0f00 	cmp.w	lr, #0
 8008014:	d1f7      	bne.n	8008006 <osThreadNew+0x5a>
      if (mem == 0) {
 8008016:	6924      	ldr	r4, [r4, #16]
 8008018:	2c00      	cmp	r4, #0
 800801a:	d1f4      	bne.n	8008006 <osThreadNew+0x5a>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800801c:	ac05      	add	r4, sp, #20
 800801e:	b292      	uxth	r2, r2
 8008020:	e9cd c400 	strd	ip, r4, [sp]
 8008024:	f001 fc91 	bl	800994a <xTaskCreate>
 8008028:	2801      	cmp	r0, #1
          hTask = NULL;
 800802a:	bf1c      	itt	ne
 800802c:	2300      	movne	r3, #0
 800802e:	9305      	strne	r3, [sp, #20]
 8008030:	e7e9      	b.n	8008006 <osThreadNew+0x5a>
    name = NULL;
 8008032:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 8008034:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008038:	2280      	movs	r2, #128	@ 0x80
 800803a:	e7ef      	b.n	800801c <osThreadNew+0x70>
        return (NULL);
 800803c:	2000      	movs	r0, #0
 800803e:	e7e3      	b.n	8008008 <osThreadNew+0x5c>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008040:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008044:	9500      	str	r5, [sp, #0]
 8008046:	f001 fc42 	bl	80098ce <xTaskCreateStatic>
 800804a:	9005      	str	r0, [sp, #20]
 800804c:	e7db      	b.n	8008006 <osThreadNew+0x5a>
 800804e:	bf00      	nop
 8008050:	20002530 	.word	0x20002530

08008054 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8008054:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008056:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800805a:	b113      	cbz	r3, 8008062 <osDelay+0xe>
    stat = osErrorISR;
 800805c:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8008060:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008062:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008066:	b913      	cbnz	r3, 800806e <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008068:	f3ef 8311 	mrs	r3, BASEPRI
 800806c:	b11b      	cbz	r3, 8008076 <osDelay+0x22>
 800806e:	4b04      	ldr	r3, [pc, #16]	@ (8008080 <osDelay+0x2c>)
 8008070:	681b      	ldr	r3, [r3, #0]
 8008072:	2b02      	cmp	r3, #2
 8008074:	d0f2      	beq.n	800805c <osDelay+0x8>
    if (ticks != 0U) {
 8008076:	b108      	cbz	r0, 800807c <osDelay+0x28>
      vTaskDelay(ticks);
 8008078:	f001 fdb2 	bl	8009be0 <vTaskDelay>
    stat = osOK;
 800807c:	2000      	movs	r0, #0
  return (stat);
 800807e:	e7ef      	b.n	8008060 <osDelay+0xc>
 8008080:	20002530 	.word	0x20002530

08008084 <osMutexNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
 8008084:	b570      	push	{r4, r5, r6, lr}
 8008086:	4605      	mov	r5, r0
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008088:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
 800808c:	b116      	cbz	r6, 8008094 <osMutexNew+0x10>
  hMutex = NULL;
 800808e:	2400      	movs	r4, #0
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
 8008090:	4620      	mov	r0, r4
 8008092:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008094:	f3ef 8210 	mrs	r2, PRIMASK
  if (!IS_IRQ()) {
 8008098:	b912      	cbnz	r2, 80080a0 <osMutexNew+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800809a:	f3ef 8211 	mrs	r2, BASEPRI
 800809e:	b11a      	cbz	r2, 80080a8 <osMutexNew+0x24>
 80080a0:	4a18      	ldr	r2, [pc, #96]	@ (8008104 <osMutexNew+0x80>)
 80080a2:	6812      	ldr	r2, [r2, #0]
 80080a4:	2a02      	cmp	r2, #2
 80080a6:	d0f2      	beq.n	800808e <osMutexNew+0xa>
    if (attr != NULL) {
 80080a8:	b115      	cbz	r5, 80080b0 <osMutexNew+0x2c>
      type = attr->attr_bits;
 80080aa:	686e      	ldr	r6, [r5, #4]
    if ((type & osMutexRobust) != osMutexRobust) {
 80080ac:	0733      	lsls	r3, r6, #28
 80080ae:	d4ee      	bmi.n	800808e <osMutexNew+0xa>
    if ((type & osMutexRecursive) == osMutexRecursive) {
 80080b0:	f006 0601 	and.w	r6, r6, #1
      if (attr != NULL) {
 80080b4:	b17d      	cbz	r5, 80080d6 <osMutexNew+0x52>
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80080b6:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
 80080ba:	b151      	cbz	r1, 80080d2 <osMutexNew+0x4e>
 80080bc:	2b4f      	cmp	r3, #79	@ 0x4f
 80080be:	d9e6      	bls.n	800808e <osMutexNew+0xa>
        if (rmtx != 0U) {
 80080c0:	b1de      	cbz	r6, 80080fa <osMutexNew+0x76>
          hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
 80080c2:	2004      	movs	r0, #4
          hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
 80080c4:	f000 ff4b 	bl	8008f5e <xQueueCreateMutexStatic>
 80080c8:	4604      	mov	r4, r0
      if (hMutex != NULL) {
 80080ca:	2800      	cmp	r0, #0
 80080cc:	d0df      	beq.n	800808e <osMutexNew+0xa>
          name = attr->name;
 80080ce:	682d      	ldr	r5, [r5, #0]
 80080d0:	e00a      	b.n	80080e8 <osMutexNew+0x64>
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80080d2:	2b00      	cmp	r3, #0
 80080d4:	d1db      	bne.n	800808e <osMutexNew+0xa>
          if (rmtx != 0U) {
 80080d6:	b196      	cbz	r6, 80080fe <osMutexNew+0x7a>
            hMutex = xSemaphoreCreateRecursiveMutex ();
 80080d8:	2004      	movs	r0, #4
            hMutex = xSemaphoreCreateMutex ();
 80080da:	f000 ff76 	bl	8008fca <xQueueCreateMutex>
 80080de:	4604      	mov	r4, r0
      if (hMutex != NULL) {
 80080e0:	2800      	cmp	r0, #0
 80080e2:	d0d4      	beq.n	800808e <osMutexNew+0xa>
        if (attr != NULL) {
 80080e4:	2d00      	cmp	r5, #0
 80080e6:	d1f2      	bne.n	80080ce <osMutexNew+0x4a>
        vQueueAddToRegistry (hMutex, name);
 80080e8:	4629      	mov	r1, r5
 80080ea:	4620      	mov	r0, r4
 80080ec:	f001 fa26 	bl	800953c <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
 80080f0:	2e00      	cmp	r6, #0
 80080f2:	d0cd      	beq.n	8008090 <osMutexNew+0xc>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
 80080f4:	f044 0401 	orr.w	r4, r4, #1
  return ((osMutexId_t)hMutex);
 80080f8:	e7ca      	b.n	8008090 <osMutexNew+0xc>
          hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
 80080fa:	2001      	movs	r0, #1
 80080fc:	e7e2      	b.n	80080c4 <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutex ();
 80080fe:	2001      	movs	r0, #1
 8008100:	e7eb      	b.n	80080da <osMutexNew+0x56>
 8008102:	bf00      	nop
 8008104:	20002530 	.word	0x20002530

08008108 <osMutexAcquire>:

osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
 8008108:	4603      	mov	r3, r0
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
 800810a:	f020 0001 	bic.w	r0, r0, #1
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
 800810e:	b510      	push	{r4, lr}

  rmtx = (uint32_t)mutex_id & 1U;
 8008110:	f003 0201 	and.w	r2, r3, #1
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
 8008114:	460c      	mov	r4, r1
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008116:	f3ef 8105 	mrs	r1, IPSR

  stat = osOK;

  if (IS_IRQ()) {
 800811a:	b111      	cbz	r1, 8008122 <osMutexAcquire+0x1a>
    stat = osErrorISR;
 800811c:	f06f 0005 	mvn.w	r0, #5
      }
    }
  }

  return (stat);
}
 8008120:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008122:	f3ef 8110 	mrs	r1, PRIMASK
  if (IS_IRQ()) {
 8008126:	b911      	cbnz	r1, 800812e <osMutexAcquire+0x26>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008128:	f3ef 8111 	mrs	r1, BASEPRI
 800812c:	b119      	cbz	r1, 8008136 <osMutexAcquire+0x2e>
 800812e:	490d      	ldr	r1, [pc, #52]	@ (8008164 <osMutexAcquire+0x5c>)
 8008130:	6809      	ldr	r1, [r1, #0]
 8008132:	2902      	cmp	r1, #2
 8008134:	d0f2      	beq.n	800811c <osMutexAcquire+0x14>
  else if (hMutex == NULL) {
 8008136:	2b01      	cmp	r3, #1
 8008138:	d911      	bls.n	800815e <osMutexAcquire+0x56>
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
 800813a:	4621      	mov	r1, r4
    if (rmtx != 0U) {
 800813c:	b162      	cbz	r2, 8008158 <osMutexAcquire+0x50>
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
 800813e:	f001 f987 	bl	8009450 <xQueueTakeMutexRecursive>
 8008142:	2801      	cmp	r0, #1
 8008144:	d101      	bne.n	800814a <osMutexAcquire+0x42>
  stat = osOK;
 8008146:	2000      	movs	r0, #0
 8008148:	e7ea      	b.n	8008120 <osMutexAcquire+0x18>
          stat = osErrorResource;
 800814a:	2c00      	cmp	r4, #0
 800814c:	bf14      	ite	ne
 800814e:	f06f 0001 	mvnne.w	r0, #1
 8008152:	f06f 0002 	mvneq.w	r0, #2
 8008156:	e7e3      	b.n	8008120 <osMutexAcquire+0x18>
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
 8008158:	f001 f8b5 	bl	80092c6 <xQueueSemaphoreTake>
 800815c:	e7f1      	b.n	8008142 <osMutexAcquire+0x3a>
    stat = osErrorParameter;
 800815e:	f06f 0003 	mvn.w	r0, #3
 8008162:	e7dd      	b.n	8008120 <osMutexAcquire+0x18>
 8008164:	20002530 	.word	0x20002530

08008168 <osMutexRelease>:

osStatus_t osMutexRelease (osMutexId_t mutex_id) {
 8008168:	4602      	mov	r2, r0
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
 800816a:	f020 0001 	bic.w	r0, r0, #1
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
 800816e:	b508      	push	{r3, lr}

  rmtx = (uint32_t)mutex_id & 1U;
 8008170:	f002 0301 	and.w	r3, r2, #1
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008174:	f3ef 8105 	mrs	r1, IPSR

  stat = osOK;

  if (IS_IRQ()) {
 8008178:	b111      	cbz	r1, 8008180 <osMutexRelease+0x18>
    stat = osErrorISR;
 800817a:	f06f 0005 	mvn.w	r0, #5
      }
    }
  }

  return (stat);
}
 800817e:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008180:	f3ef 8110 	mrs	r1, PRIMASK
  if (IS_IRQ()) {
 8008184:	b911      	cbnz	r1, 800818c <osMutexRelease+0x24>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008186:	f3ef 8111 	mrs	r1, BASEPRI
 800818a:	b119      	cbz	r1, 8008194 <osMutexRelease+0x2c>
 800818c:	490b      	ldr	r1, [pc, #44]	@ (80081bc <osMutexRelease+0x54>)
 800818e:	6809      	ldr	r1, [r1, #0]
 8008190:	2902      	cmp	r1, #2
 8008192:	d0f2      	beq.n	800817a <osMutexRelease+0x12>
  else if (hMutex == NULL) {
 8008194:	2a01      	cmp	r2, #1
 8008196:	d90d      	bls.n	80081b4 <osMutexRelease+0x4c>
    if (rmtx != 0U) {
 8008198:	b13b      	cbz	r3, 80081aa <osMutexRelease+0x42>
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
 800819a:	f000 fef5 	bl	8008f88 <xQueueGiveMutexRecursive>
 800819e:	2801      	cmp	r0, #1
  stat = osOK;
 80081a0:	bf0c      	ite	eq
 80081a2:	2000      	moveq	r0, #0
        stat = osErrorResource;
 80081a4:	f06f 0002 	mvnne.w	r0, #2
 80081a8:	e7e9      	b.n	800817e <osMutexRelease+0x16>
      if (xSemaphoreGive (hMutex) != pdPASS) {
 80081aa:	461a      	mov	r2, r3
 80081ac:	4619      	mov	r1, r3
 80081ae:	f000 fe1c 	bl	8008dea <xQueueGenericSend>
 80081b2:	e7f4      	b.n	800819e <osMutexRelease+0x36>
    stat = osErrorParameter;
 80081b4:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80081b8:	e7e1      	b.n	800817e <osMutexRelease+0x16>
 80081ba:	bf00      	nop
 80081bc:	20002530 	.word	0x20002530

080081c0 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80081c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80081c2:	460e      	mov	r6, r1
 80081c4:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80081c6:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80081ca:	b993      	cbnz	r3, 80081f2 <osSemaphoreNew+0x32>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80081cc:	f3ef 8310 	mrs	r3, PRIMASK
 80081d0:	b913      	cbnz	r3, 80081d8 <osSemaphoreNew+0x18>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80081d2:	f3ef 8311 	mrs	r3, BASEPRI
 80081d6:	b11b      	cbz	r3, 80081e0 <osSemaphoreNew+0x20>
 80081d8:	4b24      	ldr	r3, [pc, #144]	@ (800826c <osSemaphoreNew+0xac>)
 80081da:	681b      	ldr	r3, [r3, #0]
 80081dc:	2b02      	cmp	r3, #2
 80081de:	d008      	beq.n	80081f2 <osSemaphoreNew+0x32>
 80081e0:	b138      	cbz	r0, 80081f2 <osSemaphoreNew+0x32>
 80081e2:	42b0      	cmp	r0, r6
 80081e4:	d305      	bcc.n	80081f2 <osSemaphoreNew+0x32>
    mem = -1;

    if (attr != NULL) {
 80081e6:	b155      	cbz	r5, 80081fe <osSemaphoreNew+0x3e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80081e8:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 80081ec:	b12b      	cbz	r3, 80081fa <osSemaphoreNew+0x3a>
 80081ee:	2a4f      	cmp	r2, #79	@ 0x4f
 80081f0:	d823      	bhi.n	800823a <osSemaphoreNew+0x7a>
  hSemaphore = NULL;
 80081f2:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80081f4:	4620      	mov	r0, r4
 80081f6:	b002      	add	sp, #8
 80081f8:	bd70      	pop	{r4, r5, r6, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80081fa:	2a00      	cmp	r2, #0
 80081fc:	d1f9      	bne.n	80081f2 <osSemaphoreNew+0x32>
      if (max_count == 1U) {
 80081fe:	2801      	cmp	r0, #1
 8008200:	d10e      	bne.n	8008220 <osSemaphoreNew+0x60>
          hSemaphore = xSemaphoreCreateBinary();
 8008202:	2203      	movs	r2, #3
 8008204:	2100      	movs	r1, #0
 8008206:	2001      	movs	r0, #1
 8008208:	f000 fd7e 	bl	8008d08 <xQueueGenericCreate>
 800820c:	e01d      	b.n	800824a <osSemaphoreNew+0x8a>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800820e:	461a      	mov	r2, r3
 8008210:	4631      	mov	r1, r6
 8008212:	f000 fda2 	bl	8008d5a <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008216:	4604      	mov	r4, r0
 8008218:	2800      	cmp	r0, #0
 800821a:	d0ea      	beq.n	80081f2 <osSemaphoreNew+0x32>
          name = attr->name;
 800821c:	682d      	ldr	r5, [r5, #0]
 800821e:	e007      	b.n	8008230 <osSemaphoreNew+0x70>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008220:	4631      	mov	r1, r6
 8008222:	f000 fdc0 	bl	8008da6 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008226:	4604      	mov	r4, r0
 8008228:	2800      	cmp	r0, #0
 800822a:	d0e2      	beq.n	80081f2 <osSemaphoreNew+0x32>
        if (attr != NULL) {
 800822c:	2d00      	cmp	r5, #0
 800822e:	d1f5      	bne.n	800821c <osSemaphoreNew+0x5c>
        vQueueAddToRegistry (hSemaphore, name);
 8008230:	4629      	mov	r1, r5
 8008232:	4620      	mov	r0, r4
 8008234:	f001 f982 	bl	800953c <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008238:	e7dc      	b.n	80081f4 <osSemaphoreNew+0x34>
      if (max_count == 1U) {
 800823a:	2801      	cmp	r0, #1
 800823c:	d1e7      	bne.n	800820e <osSemaphoreNew+0x4e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800823e:	2203      	movs	r2, #3
 8008240:	9200      	str	r2, [sp, #0]
 8008242:	2200      	movs	r2, #0
 8008244:	4611      	mov	r1, r2
 8008246:	f000 fd4b 	bl	8008ce0 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 800824a:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800824c:	2800      	cmp	r0, #0
 800824e:	d0d0      	beq.n	80081f2 <osSemaphoreNew+0x32>
 8008250:	2e00      	cmp	r6, #0
 8008252:	d0eb      	beq.n	800822c <osSemaphoreNew+0x6c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008254:	2300      	movs	r3, #0
 8008256:	461a      	mov	r2, r3
 8008258:	4619      	mov	r1, r3
 800825a:	f000 fdc6 	bl	8008dea <xQueueGenericSend>
 800825e:	2801      	cmp	r0, #1
 8008260:	d0e4      	beq.n	800822c <osSemaphoreNew+0x6c>
            vSemaphoreDelete (hSemaphore);
 8008262:	4620      	mov	r0, r4
 8008264:	f001 f994 	bl	8009590 <vQueueDelete>
      if (hSemaphore != NULL) {
 8008268:	e7c3      	b.n	80081f2 <osSemaphoreNew+0x32>
 800826a:	bf00      	nop
 800826c:	20002530 	.word	0x20002530

08008270 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008270:	b513      	push	{r0, r1, r4, lr}
 8008272:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008274:	b918      	cbnz	r0, 800827e <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8008276:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800827a:	b002      	add	sp, #8
 800827c:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800827e:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8008282:	b15b      	cbz	r3, 800829c <osSemaphoreAcquire+0x2c>
    if (timeout != 0U) {
 8008284:	2c00      	cmp	r4, #0
 8008286:	d1f6      	bne.n	8008276 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008288:	aa01      	add	r2, sp, #4
 800828a:	4621      	mov	r1, r4
      yield = pdFALSE;
 800828c:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800828e:	f001 f902 	bl	8009496 <xQueueReceiveFromISR>
 8008292:	2801      	cmp	r0, #1
 8008294:	d016      	beq.n	80082c4 <osSemaphoreAcquire+0x54>
        stat = osErrorResource;
 8008296:	f06f 0002 	mvn.w	r0, #2
 800829a:	e7ee      	b.n	800827a <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800829c:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80082a0:	b913      	cbnz	r3, 80082a8 <osSemaphoreAcquire+0x38>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80082a2:	f3ef 8311 	mrs	r3, BASEPRI
 80082a6:	b11b      	cbz	r3, 80082b0 <osSemaphoreAcquire+0x40>
 80082a8:	4b0e      	ldr	r3, [pc, #56]	@ (80082e4 <osSemaphoreAcquire+0x74>)
 80082aa:	681b      	ldr	r3, [r3, #0]
 80082ac:	2b02      	cmp	r3, #2
 80082ae:	d0e9      	beq.n	8008284 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80082b0:	4621      	mov	r1, r4
 80082b2:	f001 f808 	bl	80092c6 <xQueueSemaphoreTake>
 80082b6:	2801      	cmp	r0, #1
 80082b8:	d006      	beq.n	80082c8 <osSemaphoreAcquire+0x58>
      if (timeout != 0U) {
 80082ba:	2c00      	cmp	r4, #0
 80082bc:	d0eb      	beq.n	8008296 <osSemaphoreAcquire+0x26>
        stat = osErrorTimeout;
 80082be:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80082c2:	e7da      	b.n	800827a <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 80082c4:	9b01      	ldr	r3, [sp, #4]
 80082c6:	b90b      	cbnz	r3, 80082cc <osSemaphoreAcquire+0x5c>
  stat = osOK;
 80082c8:	2000      	movs	r0, #0
 80082ca:	e7d6      	b.n	800827a <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 80082cc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80082d0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80082d4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80082d8:	f3bf 8f4f 	dsb	sy
 80082dc:	f3bf 8f6f 	isb	sy
 80082e0:	e7f2      	b.n	80082c8 <osSemaphoreAcquire+0x58>
 80082e2:	bf00      	nop
 80082e4:	20002530 	.word	0x20002530

080082e8 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80082e8:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80082ea:	b370      	cbz	r0, 800834a <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80082ec:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80082f0:	b15b      	cbz	r3, 800830a <osSemaphoreRelease+0x22>
    yield = pdFALSE;
 80082f2:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80082f4:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80082f6:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80082f8:	f000 fee8 	bl	80090cc <xQueueGiveFromISR>
 80082fc:	2801      	cmp	r0, #1
 80082fe:	d016      	beq.n	800832e <osSemaphoreRelease+0x46>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008300:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8008304:	b003      	add	sp, #12
 8008306:	f85d fb04 	ldr.w	pc, [sp], #4
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800830a:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800830e:	b913      	cbnz	r3, 8008316 <osSemaphoreRelease+0x2e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008310:	f3ef 8311 	mrs	r3, BASEPRI
 8008314:	b11b      	cbz	r3, 800831e <osSemaphoreRelease+0x36>
 8008316:	4b0e      	ldr	r3, [pc, #56]	@ (8008350 <osSemaphoreRelease+0x68>)
 8008318:	681b      	ldr	r3, [r3, #0]
 800831a:	2b02      	cmp	r3, #2
 800831c:	d0e9      	beq.n	80082f2 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800831e:	2300      	movs	r3, #0
 8008320:	461a      	mov	r2, r3
 8008322:	4619      	mov	r1, r3
 8008324:	f000 fd61 	bl	8008dea <xQueueGenericSend>
 8008328:	2801      	cmp	r0, #1
 800832a:	d00c      	beq.n	8008346 <osSemaphoreRelease+0x5e>
 800832c:	e7e8      	b.n	8008300 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 800832e:	9b01      	ldr	r3, [sp, #4]
 8008330:	b14b      	cbz	r3, 8008346 <osSemaphoreRelease+0x5e>
 8008332:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008336:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800833a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800833e:	f3bf 8f4f 	dsb	sy
 8008342:	f3bf 8f6f 	isb	sy
  stat = osOK;
 8008346:	2000      	movs	r0, #0
 8008348:	e7dc      	b.n	8008304 <osSemaphoreRelease+0x1c>
    stat = osErrorParameter;
 800834a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800834e:	e7d9      	b.n	8008304 <osSemaphoreRelease+0x1c>
 8008350:	20002530 	.word	0x20002530

08008354 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008354:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008356:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008358:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800835c:	b11b      	cbz	r3, 8008366 <osMessageQueueNew+0x12>
  hQueue = NULL;
 800835e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008360:	4628      	mov	r0, r5
 8008362:	b002      	add	sp, #8
 8008364:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008366:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800836a:	b913      	cbnz	r3, 8008372 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800836c:	f3ef 8311 	mrs	r3, BASEPRI
 8008370:	b11b      	cbz	r3, 800837a <osMessageQueueNew+0x26>
 8008372:	4b1a      	ldr	r3, [pc, #104]	@ (80083dc <osMessageQueueNew+0x88>)
 8008374:	681b      	ldr	r3, [r3, #0]
 8008376:	2b02      	cmp	r3, #2
 8008378:	d0f1      	beq.n	800835e <osMessageQueueNew+0xa>
 800837a:	2800      	cmp	r0, #0
 800837c:	d0ef      	beq.n	800835e <osMessageQueueNew+0xa>
 800837e:	2900      	cmp	r1, #0
 8008380:	d0ed      	beq.n	800835e <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8008382:	b1ec      	cbz	r4, 80083c0 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008384:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008388:	b193      	cbz	r3, 80083b0 <osMessageQueueNew+0x5c>
 800838a:	2a4f      	cmp	r2, #79	@ 0x4f
 800838c:	d9e7      	bls.n	800835e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800838e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008390:	2a00      	cmp	r2, #0
 8008392:	d0e4      	beq.n	800835e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008394:	fb01 f500 	mul.w	r5, r1, r0
 8008398:	6966      	ldr	r6, [r4, #20]
 800839a:	42ae      	cmp	r6, r5
 800839c:	d3df      	bcc.n	800835e <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800839e:	2500      	movs	r5, #0
 80083a0:	9500      	str	r5, [sp, #0]
 80083a2:	f000 fc9d 	bl	8008ce0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80083a6:	4605      	mov	r5, r0
 80083a8:	2800      	cmp	r0, #0
 80083aa:	d0d8      	beq.n	800835e <osMessageQueueNew+0xa>
        name = attr->name;
 80083ac:	6824      	ldr	r4, [r4, #0]
 80083ae:	e00f      	b.n	80083d0 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80083b0:	2a00      	cmp	r2, #0
 80083b2:	d1d4      	bne.n	800835e <osMessageQueueNew+0xa>
 80083b4:	6923      	ldr	r3, [r4, #16]
 80083b6:	2b00      	cmp	r3, #0
 80083b8:	d1d1      	bne.n	800835e <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80083ba:	6963      	ldr	r3, [r4, #20]
 80083bc:	2b00      	cmp	r3, #0
 80083be:	d1ce      	bne.n	800835e <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 80083c0:	2200      	movs	r2, #0
 80083c2:	f000 fca1 	bl	8008d08 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80083c6:	4605      	mov	r5, r0
 80083c8:	2800      	cmp	r0, #0
 80083ca:	d0c8      	beq.n	800835e <osMessageQueueNew+0xa>
      if (attr != NULL) {
 80083cc:	2c00      	cmp	r4, #0
 80083ce:	d1ed      	bne.n	80083ac <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 80083d0:	4621      	mov	r1, r4
 80083d2:	4628      	mov	r0, r5
 80083d4:	f001 f8b2 	bl	800953c <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80083d8:	e7c2      	b.n	8008360 <osMessageQueueNew+0xc>
 80083da:	bf00      	nop
 80083dc:	20002530 	.word	0x20002530

080083e0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80083e0:	b513      	push	{r0, r1, r4, lr}
 80083e2:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80083e4:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80083e8:	b123      	cbz	r3, 80083f4 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80083ea:	b9d8      	cbnz	r0, 8008424 <osMessageQueuePut+0x44>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
 80083ec:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80083f0:	b002      	add	sp, #8
 80083f2:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80083f4:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80083f8:	b913      	cbnz	r3, 8008400 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80083fa:	f3ef 8311 	mrs	r3, BASEPRI
 80083fe:	b11b      	cbz	r3, 8008408 <osMessageQueuePut+0x28>
 8008400:	4b17      	ldr	r3, [pc, #92]	@ (8008460 <osMessageQueuePut+0x80>)
 8008402:	681b      	ldr	r3, [r3, #0]
 8008404:	2b02      	cmp	r3, #2
 8008406:	d0f0      	beq.n	80083ea <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008408:	2800      	cmp	r0, #0
 800840a:	d0ef      	beq.n	80083ec <osMessageQueuePut+0xc>
 800840c:	2900      	cmp	r1, #0
 800840e:	d0ed      	beq.n	80083ec <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008410:	2300      	movs	r3, #0
 8008412:	4622      	mov	r2, r4
 8008414:	f000 fce9 	bl	8008dea <xQueueGenericSend>
 8008418:	2801      	cmp	r0, #1
 800841a:	d013      	beq.n	8008444 <osMessageQueuePut+0x64>
        if (timeout != 0U) {
 800841c:	b16c      	cbz	r4, 800843a <osMessageQueuePut+0x5a>
          stat = osErrorTimeout;
 800841e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008422:	e7e5      	b.n	80083f0 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008424:	2900      	cmp	r1, #0
 8008426:	d0e1      	beq.n	80083ec <osMessageQueuePut+0xc>
 8008428:	2c00      	cmp	r4, #0
 800842a:	d1df      	bne.n	80083ec <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800842c:	4623      	mov	r3, r4
 800842e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008430:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008432:	f000 fde7 	bl	8009004 <xQueueGenericSendFromISR>
 8008436:	2801      	cmp	r0, #1
 8008438:	d002      	beq.n	8008440 <osMessageQueuePut+0x60>
        stat = osErrorResource;
 800843a:	f06f 0002 	mvn.w	r0, #2
 800843e:	e7d7      	b.n	80083f0 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8008440:	9b01      	ldr	r3, [sp, #4]
 8008442:	b90b      	cbnz	r3, 8008448 <osMessageQueuePut+0x68>
  stat = osOK;
 8008444:	2000      	movs	r0, #0
 8008446:	e7d3      	b.n	80083f0 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8008448:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800844c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008450:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008454:	f3bf 8f4f 	dsb	sy
 8008458:	f3bf 8f6f 	isb	sy
 800845c:	e7f2      	b.n	8008444 <osMessageQueuePut+0x64>
 800845e:	bf00      	nop
 8008460:	20002530 	.word	0x20002530

08008464 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008464:	b513      	push	{r0, r1, r4, lr}
 8008466:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008468:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800846c:	b123      	cbz	r3, 8008478 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800846e:	b9d0      	cbnz	r0, 80084a6 <osMessageQueueGet+0x42>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
 8008470:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008474:	b002      	add	sp, #8
 8008476:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008478:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800847c:	b913      	cbnz	r3, 8008484 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800847e:	f3ef 8311 	mrs	r3, BASEPRI
 8008482:	b11b      	cbz	r3, 800848c <osMessageQueueGet+0x28>
 8008484:	4b16      	ldr	r3, [pc, #88]	@ (80084e0 <osMessageQueueGet+0x7c>)
 8008486:	681b      	ldr	r3, [r3, #0]
 8008488:	2b02      	cmp	r3, #2
 800848a:	d0f0      	beq.n	800846e <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800848c:	2800      	cmp	r0, #0
 800848e:	d0ef      	beq.n	8008470 <osMessageQueueGet+0xc>
 8008490:	2900      	cmp	r1, #0
 8008492:	d0ed      	beq.n	8008470 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008494:	4622      	mov	r2, r4
 8008496:	f000 fe72 	bl	800917e <xQueueReceive>
 800849a:	2801      	cmp	r0, #1
 800849c:	d012      	beq.n	80084c4 <osMessageQueueGet+0x60>
        if (timeout != 0U) {
 800849e:	b164      	cbz	r4, 80084ba <osMessageQueueGet+0x56>
          stat = osErrorTimeout;
 80084a0:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80084a4:	e7e6      	b.n	8008474 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80084a6:	2900      	cmp	r1, #0
 80084a8:	d0e2      	beq.n	8008470 <osMessageQueueGet+0xc>
 80084aa:	2c00      	cmp	r4, #0
 80084ac:	d1e0      	bne.n	8008470 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80084ae:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80084b0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80084b2:	f000 fff0 	bl	8009496 <xQueueReceiveFromISR>
 80084b6:	2801      	cmp	r0, #1
 80084b8:	d002      	beq.n	80084c0 <osMessageQueueGet+0x5c>
        stat = osErrorResource;
 80084ba:	f06f 0002 	mvn.w	r0, #2
 80084be:	e7d9      	b.n	8008474 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 80084c0:	9b01      	ldr	r3, [sp, #4]
 80084c2:	b90b      	cbnz	r3, 80084c8 <osMessageQueueGet+0x64>
  stat = osOK;
 80084c4:	2000      	movs	r0, #0
 80084c6:	e7d5      	b.n	8008474 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 80084c8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80084cc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80084d0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80084d4:	f3bf 8f4f 	dsb	sy
 80084d8:	f3bf 8f6f 	isb	sy
 80084dc:	e7f2      	b.n	80084c4 <osMessageQueueGet+0x60>
 80084de:	bf00      	nop
 80084e0:	20002530 	.word	0x20002530

080084e4 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80084e4:	4b03      	ldr	r3, [pc, #12]	@ (80084f4 <vApplicationGetIdleTaskMemory+0x10>)
 80084e6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80084e8:	4b03      	ldr	r3, [pc, #12]	@ (80084f8 <vApplicationGetIdleTaskMemory+0x14>)
 80084ea:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80084ec:	2380      	movs	r3, #128	@ 0x80
 80084ee:	6013      	str	r3, [r2, #0]
}
 80084f0:	4770      	bx	lr
 80084f2:	bf00      	nop
 80084f4:	200024d0 	.word	0x200024d0
 80084f8:	200022d0 	.word	0x200022d0

080084fc <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80084fc:	4b03      	ldr	r3, [pc, #12]	@ (800850c <vApplicationGetTimerTaskMemory+0x10>)
 80084fe:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008500:	4b03      	ldr	r3, [pc, #12]	@ (8008510 <vApplicationGetTimerTaskMemory+0x14>)
 8008502:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008504:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8008508:	6013      	str	r3, [r2, #0]
}
 800850a:	4770      	bx	lr
 800850c:	20002270 	.word	0x20002270
 8008510:	20001e70 	.word	0x20001e70

08008514 <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008514:	4b10      	ldr	r3, [pc, #64]	@ (8008558 <prvInsertBlockIntoFreeList+0x44>)
{
 8008516:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008518:	461a      	mov	r2, r3
 800851a:	681b      	ldr	r3, [r3, #0]
 800851c:	4283      	cmp	r3, r0
 800851e:	d3fb      	bcc.n	8008518 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008520:	6854      	ldr	r4, [r2, #4]
 8008522:	1911      	adds	r1, r2, r4
 8008524:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008526:	bf01      	itttt	eq
 8008528:	6841      	ldreq	r1, [r0, #4]
 800852a:	4610      	moveq	r0, r2
 800852c:	1909      	addeq	r1, r1, r4
 800852e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008530:	6844      	ldr	r4, [r0, #4]
 8008532:	1901      	adds	r1, r0, r4
 8008534:	428b      	cmp	r3, r1
 8008536:	d10c      	bne.n	8008552 <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008538:	4908      	ldr	r1, [pc, #32]	@ (800855c <prvInsertBlockIntoFreeList+0x48>)
 800853a:	6809      	ldr	r1, [r1, #0]
 800853c:	428b      	cmp	r3, r1
 800853e:	d003      	beq.n	8008548 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008540:	6859      	ldr	r1, [r3, #4]
 8008542:	4421      	add	r1, r4
 8008544:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008546:	6819      	ldr	r1, [r3, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008548:	4290      	cmp	r0, r2
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800854a:	6001      	str	r1, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800854c:	bf18      	it	ne
 800854e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008550:	bd10      	pop	{r4, pc}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008552:	4619      	mov	r1, r3
 8008554:	e7f8      	b.n	8008548 <prvInsertBlockIntoFreeList+0x34>
 8008556:	bf00      	nop
 8008558:	20002544 	.word	0x20002544
 800855c:	20002540 	.word	0x20002540

08008560 <pvPortMalloc>:
{
 8008560:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008564:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008566:	f001 fa1f 	bl	80099a8 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800856a:	4940      	ldr	r1, [pc, #256]	@ (800866c <pvPortMalloc+0x10c>)
 800856c:	4d40      	ldr	r5, [pc, #256]	@ (8008670 <pvPortMalloc+0x110>)
 800856e:	680b      	ldr	r3, [r1, #0]
 8008570:	b9f3      	cbnz	r3, 80085b0 <pvPortMalloc+0x50>
	uxAddress = ( size_t ) ucHeap;
 8008572:	4a40      	ldr	r2, [pc, #256]	@ (8008674 <pvPortMalloc+0x114>)
	xStart.xBlockSize = ( size_t ) 0;
 8008574:	2000      	movs	r0, #0
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008576:	0756      	lsls	r6, r2, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008578:	4e3f      	ldr	r6, [pc, #252]	@ (8008678 <pvPortMalloc+0x118>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800857a:	bf1b      	ittet	ne
 800857c:	3207      	addne	r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800857e:	4b3f      	ldrne	r3, [pc, #252]	@ (800867c <pvPortMalloc+0x11c>)
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008580:	4b3f      	ldreq	r3, [pc, #252]	@ (8008680 <pvPortMalloc+0x120>)
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008582:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008586:	6070      	str	r0, [r6, #4]
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008588:	bf18      	it	ne
 800858a:	1a9b      	subne	r3, r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800858c:	6032      	str	r2, [r6, #0]
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800858e:	4413      	add	r3, r2
	uxAddress -= xHeapStructSize;
 8008590:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008592:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8008596:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800859a:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 800859c:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800859e:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80085a2:	4b38      	ldr	r3, [pc, #224]	@ (8008684 <pvPortMalloc+0x124>)
 80085a4:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80085a6:	4b38      	ldr	r3, [pc, #224]	@ (8008688 <pvPortMalloc+0x128>)
 80085a8:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80085aa:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 80085ae:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80085b0:	682e      	ldr	r6, [r5, #0]
 80085b2:	4226      	tst	r6, r4
 80085b4:	d154      	bne.n	8008660 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 80085b6:	2c00      	cmp	r4, #0
 80085b8:	d043      	beq.n	8008642 <pvPortMalloc+0xe2>
				xWantedSize += xHeapStructSize;
 80085ba:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80085be:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80085c0:	bf1c      	itt	ne
 80085c2:	f023 0307 	bicne.w	r3, r3, #7
 80085c6:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80085c8:	2b00      	cmp	r3, #0
 80085ca:	d049      	beq.n	8008660 <pvPortMalloc+0x100>
 80085cc:	4f2e      	ldr	r7, [pc, #184]	@ (8008688 <pvPortMalloc+0x128>)
 80085ce:	683c      	ldr	r4, [r7, #0]
 80085d0:	429c      	cmp	r4, r3
 80085d2:	d345      	bcc.n	8008660 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 80085d4:	4a28      	ldr	r2, [pc, #160]	@ (8008678 <pvPortMalloc+0x118>)
 80085d6:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80085d8:	6868      	ldr	r0, [r5, #4]
 80085da:	4298      	cmp	r0, r3
 80085dc:	d204      	bcs.n	80085e8 <pvPortMalloc+0x88>
 80085de:	f8d5 c000 	ldr.w	ip, [r5]
 80085e2:	f1bc 0f00 	cmp.w	ip, #0
 80085e6:	d117      	bne.n	8008618 <pvPortMalloc+0xb8>
				if( pxBlock != pxEnd )
 80085e8:	6809      	ldr	r1, [r1, #0]
 80085ea:	42a9      	cmp	r1, r5
 80085ec:	d038      	beq.n	8008660 <pvPortMalloc+0x100>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80085ee:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80085f0:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80085f4:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80085f6:	1ac2      	subs	r2, r0, r3
 80085f8:	2a10      	cmp	r2, #16
 80085fa:	d914      	bls.n	8008626 <pvPortMalloc+0xc6>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80085fc:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80085fe:	0741      	lsls	r1, r0, #29
 8008600:	d00d      	beq.n	800861e <pvPortMalloc+0xbe>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008602:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008606:	b672      	cpsid	i
 8008608:	f383 8811 	msr	BASEPRI, r3
 800860c:	f3bf 8f6f 	isb	sy
 8008610:	f3bf 8f4f 	dsb	sy
 8008614:	b662      	cpsie	i
 8008616:	e7fe      	b.n	8008616 <pvPortMalloc+0xb6>
 8008618:	462a      	mov	r2, r5
 800861a:	4665      	mov	r5, ip
 800861c:	e7dc      	b.n	80085d8 <pvPortMalloc+0x78>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800861e:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008620:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008622:	f7ff ff77 	bl	8008514 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008626:	686a      	ldr	r2, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008628:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800862a:	4916      	ldr	r1, [pc, #88]	@ (8008684 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800862c:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800862e:	4316      	orrs	r6, r2
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008630:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008632:	603c      	str	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008634:	4284      	cmp	r4, r0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008636:	606e      	str	r6, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008638:	602b      	str	r3, [r5, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800863a:	bf38      	it	cc
 800863c:	600c      	strcc	r4, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800863e:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 8008642:	f001 fa57 	bl	8009af4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008646:	0763      	lsls	r3, r4, #29
 8008648:	d00c      	beq.n	8008664 <pvPortMalloc+0x104>
 800864a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800864e:	b672      	cpsid	i
 8008650:	f383 8811 	msr	BASEPRI, r3
 8008654:	f3bf 8f6f 	isb	sy
 8008658:	f3bf 8f4f 	dsb	sy
 800865c:	b662      	cpsie	i
 800865e:	e7fe      	b.n	800865e <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008660:	2400      	movs	r4, #0
 8008662:	e7ee      	b.n	8008642 <pvPortMalloc+0xe2>
}
 8008664:	4620      	mov	r0, r4
 8008666:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800866a:	bf00      	nop
 800866c:	20002540 	.word	0x20002540
 8008670:	20002534 	.word	0x20002534
 8008674:	2000254c 	.word	0x2000254c
 8008678:	20002544 	.word	0x20002544
 800867c:	20014a44 	.word	0x20014a44
 8008680:	000124f8 	.word	0x000124f8
 8008684:	20002538 	.word	0x20002538
 8008688:	2000253c 	.word	0x2000253c

0800868c <vPortFree>:
{
 800868c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800868e:	4604      	mov	r4, r0
 8008690:	2800      	cmp	r0, #0
 8008692:	d032      	beq.n	80086fa <vPortFree+0x6e>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008694:	4a19      	ldr	r2, [pc, #100]	@ (80086fc <vPortFree+0x70>)
 8008696:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800869a:	6812      	ldr	r2, [r2, #0]
 800869c:	4213      	tst	r3, r2
 800869e:	d10a      	bne.n	80086b6 <vPortFree+0x2a>
 80086a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80086a4:	b672      	cpsid	i
 80086a6:	f383 8811 	msr	BASEPRI, r3
 80086aa:	f3bf 8f6f 	isb	sy
 80086ae:	f3bf 8f4f 	dsb	sy
 80086b2:	b662      	cpsie	i
 80086b4:	e7fe      	b.n	80086b4 <vPortFree+0x28>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80086b6:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80086ba:	b151      	cbz	r1, 80086d2 <vPortFree+0x46>
 80086bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80086c0:	b672      	cpsid	i
 80086c2:	f383 8811 	msr	BASEPRI, r3
 80086c6:	f3bf 8f6f 	isb	sy
 80086ca:	f3bf 8f4f 	dsb	sy
 80086ce:	b662      	cpsie	i
 80086d0:	e7fe      	b.n	80086d0 <vPortFree+0x44>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80086d2:	ea23 0302 	bic.w	r3, r3, r2
 80086d6:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80086da:	f001 f965 	bl	80099a8 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80086de:	4a08      	ldr	r2, [pc, #32]	@ (8008700 <vPortFree+0x74>)
 80086e0:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80086e4:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80086e8:	6811      	ldr	r1, [r2, #0]
 80086ea:	440b      	add	r3, r1
 80086ec:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80086ee:	f7ff ff11 	bl	8008514 <prvInsertBlockIntoFreeList>
}
 80086f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 80086f6:	f001 b9fd 	b.w	8009af4 <xTaskResumeAll>
}
 80086fa:	bd10      	pop	{r4, pc}
 80086fc:	20002534 	.word	0x20002534
 8008700:	2000253c 	.word	0x2000253c

08008704 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008704:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008708:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800870c:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800870e:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008710:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008714:	2300      	movs	r3, #0
 8008716:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008718:	4770      	bx	lr

0800871a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800871a:	2300      	movs	r3, #0
 800871c:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800871e:	4770      	bx	lr

08008720 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008720:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008722:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 8008724:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008726:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008728:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800872a:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800872c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800872e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008730:	3301      	adds	r3, #1
 8008732:	6003      	str	r3, [r0, #0]
}
 8008734:	4770      	bx	lr

08008736 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008736:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008738:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800873a:	1c63      	adds	r3, r4, #1
 800873c:	d10a      	bne.n	8008754 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800873e:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008740:	685a      	ldr	r2, [r3, #4]
 8008742:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008744:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008746:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008748:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800874a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800874c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800874e:	3301      	adds	r3, #1
 8008750:	6003      	str	r3, [r0, #0]
}
 8008752:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008754:	f100 0208 	add.w	r2, r0, #8
 8008758:	4613      	mov	r3, r2
 800875a:	6852      	ldr	r2, [r2, #4]
 800875c:	6815      	ldr	r5, [r2, #0]
 800875e:	42a5      	cmp	r5, r4
 8008760:	d9fa      	bls.n	8008758 <vListInsert+0x22>
 8008762:	e7ed      	b.n	8008740 <vListInsert+0xa>

08008764 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 8008764:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008766:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 800876a:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800876c:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800876e:	6859      	ldr	r1, [r3, #4]
 8008770:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008772:	bf08      	it	eq
 8008774:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008776:	2200      	movs	r2, #0
 8008778:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800877a:	681a      	ldr	r2, [r3, #0]
 800877c:	3a01      	subs	r2, #1
 800877e:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008780:	6818      	ldr	r0, [r3, #0]
}
 8008782:	4770      	bx	lr

08008784 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008784:	4808      	ldr	r0, [pc, #32]	@ (80087a8 <prvPortStartFirstTask+0x24>)
 8008786:	6800      	ldr	r0, [r0, #0]
 8008788:	6800      	ldr	r0, [r0, #0]
 800878a:	f380 8808 	msr	MSP, r0
 800878e:	f04f 0000 	mov.w	r0, #0
 8008792:	f380 8814 	msr	CONTROL, r0
 8008796:	b662      	cpsie	i
 8008798:	b661      	cpsie	f
 800879a:	f3bf 8f4f 	dsb	sy
 800879e:	f3bf 8f6f 	isb	sy
 80087a2:	df00      	svc	0
 80087a4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80087a6:	0000      	.short	0x0000
 80087a8:	e000ed08 	.word	0xe000ed08

080087ac <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80087ac:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 80087bc <vPortEnableVFP+0x10>
 80087b0:	6801      	ldr	r1, [r0, #0]
 80087b2:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80087b6:	6001      	str	r1, [r0, #0]
 80087b8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80087ba:	0000      	.short	0x0000
 80087bc:	e000ed88 	.word	0xe000ed88

080087c0 <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
 80087c0:	2300      	movs	r3, #0
{
 80087c2:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80087c4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80087c6:	4b0f      	ldr	r3, [pc, #60]	@ (8008804 <prvTaskExitError+0x44>)
 80087c8:	681b      	ldr	r3, [r3, #0]
 80087ca:	3301      	adds	r3, #1
 80087cc:	d00a      	beq.n	80087e4 <prvTaskExitError+0x24>
 80087ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087d2:	b672      	cpsid	i
 80087d4:	f383 8811 	msr	BASEPRI, r3
 80087d8:	f3bf 8f6f 	isb	sy
 80087dc:	f3bf 8f4f 	dsb	sy
 80087e0:	b662      	cpsie	i
 80087e2:	e7fe      	b.n	80087e2 <prvTaskExitError+0x22>
 80087e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087e8:	b672      	cpsid	i
 80087ea:	f383 8811 	msr	BASEPRI, r3
 80087ee:	f3bf 8f6f 	isb	sy
 80087f2:	f3bf 8f4f 	dsb	sy
 80087f6:	b662      	cpsie	i
	while( ulDummy == 0 )
 80087f8:	9b01      	ldr	r3, [sp, #4]
 80087fa:	2b00      	cmp	r3, #0
 80087fc:	d0fc      	beq.n	80087f8 <prvTaskExitError+0x38>
}
 80087fe:	b002      	add	sp, #8
 8008800:	4770      	bx	lr
 8008802:	bf00      	nop
 8008804:	20000040 	.word	0x20000040

08008808 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008808:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800880c:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008810:	f840 2c20 	str.w	r2, [r0, #-32]
}
 8008814:	3844      	subs	r0, #68	@ 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008816:	6403      	str	r3, [r0, #64]	@ 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008818:	4b03      	ldr	r3, [pc, #12]	@ (8008828 <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800881a:	63c1      	str	r1, [r0, #60]	@ 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800881c:	6383      	str	r3, [r0, #56]	@ 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800881e:	f06f 0302 	mvn.w	r3, #2
 8008822:	6203      	str	r3, [r0, #32]
}
 8008824:	4770      	bx	lr
 8008826:	bf00      	nop
 8008828:	080087c1 	.word	0x080087c1
 800882c:	00000000 	.word	0x00000000

08008830 <SVC_Handler>:
	__asm volatile (
 8008830:	4b07      	ldr	r3, [pc, #28]	@ (8008850 <pxCurrentTCBConst2>)
 8008832:	6819      	ldr	r1, [r3, #0]
 8008834:	6808      	ldr	r0, [r1, #0]
 8008836:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800883a:	f380 8809 	msr	PSP, r0
 800883e:	f3bf 8f6f 	isb	sy
 8008842:	f04f 0000 	mov.w	r0, #0
 8008846:	f380 8811 	msr	BASEPRI, r0
 800884a:	4770      	bx	lr
 800884c:	f3af 8000 	nop.w

08008850 <pxCurrentTCBConst2>:
 8008850:	20014f84 	.word	0x20014f84

08008854 <vPortEnterCritical>:
 8008854:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008858:	b672      	cpsid	i
 800885a:	f383 8811 	msr	BASEPRI, r3
 800885e:	f3bf 8f6f 	isb	sy
 8008862:	f3bf 8f4f 	dsb	sy
 8008866:	b662      	cpsie	i
	uxCriticalNesting++;
 8008868:	4a0b      	ldr	r2, [pc, #44]	@ (8008898 <vPortEnterCritical+0x44>)
 800886a:	6813      	ldr	r3, [r2, #0]
 800886c:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800886e:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008870:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008872:	d110      	bne.n	8008896 <vPortEnterCritical+0x42>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008874:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008878:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 800887c:	b2db      	uxtb	r3, r3
 800887e:	b153      	cbz	r3, 8008896 <vPortEnterCritical+0x42>
 8008880:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008884:	b672      	cpsid	i
 8008886:	f383 8811 	msr	BASEPRI, r3
 800888a:	f3bf 8f6f 	isb	sy
 800888e:	f3bf 8f4f 	dsb	sy
 8008892:	b662      	cpsie	i
 8008894:	e7fe      	b.n	8008894 <vPortEnterCritical+0x40>
}
 8008896:	4770      	bx	lr
 8008898:	20000040 	.word	0x20000040

0800889c <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800889c:	4a09      	ldr	r2, [pc, #36]	@ (80088c4 <vPortExitCritical+0x28>)
 800889e:	6813      	ldr	r3, [r2, #0]
 80088a0:	b953      	cbnz	r3, 80088b8 <vPortExitCritical+0x1c>
 80088a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088a6:	b672      	cpsid	i
 80088a8:	f383 8811 	msr	BASEPRI, r3
 80088ac:	f3bf 8f6f 	isb	sy
 80088b0:	f3bf 8f4f 	dsb	sy
 80088b4:	b662      	cpsie	i
 80088b6:	e7fe      	b.n	80088b6 <vPortExitCritical+0x1a>
	uxCriticalNesting--;
 80088b8:	3b01      	subs	r3, #1
 80088ba:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80088bc:	b90b      	cbnz	r3, 80088c2 <vPortExitCritical+0x26>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80088be:	f383 8811 	msr	BASEPRI, r3
}
 80088c2:	4770      	bx	lr
 80088c4:	20000040 	.word	0x20000040
	...

080088d0 <PendSV_Handler>:
	__asm volatile
 80088d0:	f3ef 8009 	mrs	r0, PSP
 80088d4:	f3bf 8f6f 	isb	sy
 80088d8:	4b15      	ldr	r3, [pc, #84]	@ (8008930 <pxCurrentTCBConst>)
 80088da:	681a      	ldr	r2, [r3, #0]
 80088dc:	f01e 0f10 	tst.w	lr, #16
 80088e0:	bf08      	it	eq
 80088e2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80088e6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80088ea:	6010      	str	r0, [r2, #0]
 80088ec:	e92d 0009 	stmdb	sp!, {r0, r3}
 80088f0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 80088f4:	b672      	cpsid	i
 80088f6:	f380 8811 	msr	BASEPRI, r0
 80088fa:	f3bf 8f4f 	dsb	sy
 80088fe:	f3bf 8f6f 	isb	sy
 8008902:	b662      	cpsie	i
 8008904:	f001 fa00 	bl	8009d08 <vTaskSwitchContext>
 8008908:	f04f 0000 	mov.w	r0, #0
 800890c:	f380 8811 	msr	BASEPRI, r0
 8008910:	bc09      	pop	{r0, r3}
 8008912:	6819      	ldr	r1, [r3, #0]
 8008914:	6808      	ldr	r0, [r1, #0]
 8008916:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800891a:	f01e 0f10 	tst.w	lr, #16
 800891e:	bf08      	it	eq
 8008920:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008924:	f380 8809 	msr	PSP, r0
 8008928:	f3bf 8f6f 	isb	sy
 800892c:	4770      	bx	lr
 800892e:	bf00      	nop

08008930 <pxCurrentTCBConst>:
 8008930:	20014f84 	.word	0x20014f84

08008934 <SysTick_Handler>:
{
 8008934:	b508      	push	{r3, lr}
	__asm volatile
 8008936:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800893a:	b672      	cpsid	i
 800893c:	f383 8811 	msr	BASEPRI, r3
 8008940:	f3bf 8f6f 	isb	sy
 8008944:	f3bf 8f4f 	dsb	sy
 8008948:	b662      	cpsie	i
		if( xTaskIncrementTick() != pdFALSE )
 800894a:	f001 f83b 	bl	80099c4 <xTaskIncrementTick>
 800894e:	b128      	cbz	r0, 800895c <SysTick_Handler+0x28>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008950:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008954:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008958:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 800895c:	2300      	movs	r3, #0
 800895e:	f383 8811 	msr	BASEPRI, r3
}
 8008962:	bd08      	pop	{r3, pc}

08008964 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008964:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8008968:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800896a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800896e:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008970:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008972:	4b04      	ldr	r3, [pc, #16]	@ (8008984 <vPortSetupTimerInterrupt+0x20>)
 8008974:	681b      	ldr	r3, [r3, #0]
 8008976:	fbb3 f3f1 	udiv	r3, r3, r1
 800897a:	3b01      	subs	r3, #1
 800897c:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800897e:	2307      	movs	r3, #7
 8008980:	6113      	str	r3, [r2, #16]
}
 8008982:	4770      	bx	lr
 8008984:	2000000c 	.word	0x2000000c

08008988 <xPortStartScheduler>:
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008988:	4b2c      	ldr	r3, [pc, #176]	@ (8008a3c <xPortStartScheduler+0xb4>)
{
 800898a:	b537      	push	{r0, r1, r2, r4, r5, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800898c:	781a      	ldrb	r2, [r3, #0]
 800898e:	b2d2      	uxtb	r2, r2
 8008990:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008992:	22ff      	movs	r2, #255	@ 0xff
 8008994:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008996:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008998:	4a29      	ldr	r2, [pc, #164]	@ (8008a40 <xPortStartScheduler+0xb8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800899a:	b2db      	uxtb	r3, r3
 800899c:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80089a0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80089a4:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 80089a8:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80089aa:	2307      	movs	r3, #7
 80089ac:	4a25      	ldr	r2, [pc, #148]	@ (8008a44 <xPortStartScheduler+0xbc>)
 80089ae:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80089b0:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 80089b4:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80089b6:	0609      	lsls	r1, r1, #24
 80089b8:	d40c      	bmi.n	80089d4 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80089ba:	2b03      	cmp	r3, #3
 80089bc:	d013      	beq.n	80089e6 <xPortStartScheduler+0x5e>
	__asm volatile
 80089be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089c2:	b672      	cpsid	i
 80089c4:	f383 8811 	msr	BASEPRI, r3
 80089c8:	f3bf 8f6f 	isb	sy
 80089cc:	f3bf 8f4f 	dsb	sy
 80089d0:	b662      	cpsie	i
 80089d2:	e7fe      	b.n	80089d2 <xPortStartScheduler+0x4a>
			ulMaxPRIGROUPValue--;
 80089d4:	3b01      	subs	r3, #1
 80089d6:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80089d8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80089dc:	005b      	lsls	r3, r3, #1
 80089de:	b2db      	uxtb	r3, r3
 80089e0:	f88d 3003 	strb.w	r3, [sp, #3]
 80089e4:	e7e4      	b.n	80089b0 <xPortStartScheduler+0x28>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80089e6:	f44f 7340 	mov.w	r3, #768	@ 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80089ea:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
	uxCriticalNesting = 0;
 80089ee:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80089f0:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80089f2:	9b01      	ldr	r3, [sp, #4]
 80089f4:	4a11      	ldr	r2, [pc, #68]	@ (8008a3c <xPortStartScheduler+0xb4>)
 80089f6:	b2db      	uxtb	r3, r3
 80089f8:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80089fa:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80089fe:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8008a02:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008a06:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8008a0a:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8008a0e:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8008a12:	f7ff ffa7 	bl	8008964 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008a16:	4b0c      	ldr	r3, [pc, #48]	@ (8008a48 <xPortStartScheduler+0xc0>)
 8008a18:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008a1a:	f7ff fec7 	bl	80087ac <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008a1e:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8008a22:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8008a26:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 8008a2a:	f7ff feab 	bl	8008784 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008a2e:	f001 f96b 	bl	8009d08 <vTaskSwitchContext>
}
 8008a32:	4628      	mov	r0, r5
	prvTaskExitError();
 8008a34:	f7ff fec4 	bl	80087c0 <prvTaskExitError>
}
 8008a38:	b003      	add	sp, #12
 8008a3a:	bd30      	pop	{r4, r5, pc}
 8008a3c:	e000e400 	.word	0xe000e400
 8008a40:	20014a48 	.word	0x20014a48
 8008a44:	20014a44 	.word	0x20014a44
 8008a48:	20000040 	.word	0x20000040

08008a4c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008a4c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008a50:	2b0f      	cmp	r3, #15
 8008a52:	d910      	bls.n	8008a76 <vPortValidateInterruptPriority+0x2a>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008a54:	4a13      	ldr	r2, [pc, #76]	@ (8008aa4 <vPortValidateInterruptPriority+0x58>)
 8008a56:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008a58:	4a13      	ldr	r2, [pc, #76]	@ (8008aa8 <vPortValidateInterruptPriority+0x5c>)
 8008a5a:	7812      	ldrb	r2, [r2, #0]
 8008a5c:	429a      	cmp	r2, r3
 8008a5e:	d90a      	bls.n	8008a76 <vPortValidateInterruptPriority+0x2a>
 8008a60:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a64:	b672      	cpsid	i
 8008a66:	f383 8811 	msr	BASEPRI, r3
 8008a6a:	f3bf 8f6f 	isb	sy
 8008a6e:	f3bf 8f4f 	dsb	sy
 8008a72:	b662      	cpsie	i
 8008a74:	e7fe      	b.n	8008a74 <vPortValidateInterruptPriority+0x28>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008a76:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008a7a:	4a0c      	ldr	r2, [pc, #48]	@ (8008aac <vPortValidateInterruptPriority+0x60>)
 8008a7c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8008a80:	6812      	ldr	r2, [r2, #0]
 8008a82:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8008a86:	4293      	cmp	r3, r2
 8008a88:	d90a      	bls.n	8008aa0 <vPortValidateInterruptPriority+0x54>
 8008a8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a8e:	b672      	cpsid	i
 8008a90:	f383 8811 	msr	BASEPRI, r3
 8008a94:	f3bf 8f6f 	isb	sy
 8008a98:	f3bf 8f4f 	dsb	sy
 8008a9c:	b662      	cpsie	i
 8008a9e:	e7fe      	b.n	8008a9e <vPortValidateInterruptPriority+0x52>
	}
 8008aa0:	4770      	bx	lr
 8008aa2:	bf00      	nop
 8008aa4:	e000e3f0 	.word	0xe000e3f0
 8008aa8:	20014a48 	.word	0x20014a48
 8008aac:	20014a44 	.word	0x20014a44

08008ab0 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008ab0:	b510      	push	{r4, lr}
 8008ab2:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008ab4:	f7ff fece 	bl	8008854 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008ab8:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008aba:	f7ff feef 	bl	800889c <vPortExitCritical>

	return xReturn;
}
 8008abe:	fab4 f084 	clz	r0, r4
 8008ac2:	0940      	lsrs	r0, r0, #5
 8008ac4:	bd10      	pop	{r4, pc}

08008ac6 <prvCopyDataToQueue>:
{
 8008ac6:	b570      	push	{r4, r5, r6, lr}
 8008ac8:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008aca:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
 8008acc:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008ace:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008ad0:	b942      	cbnz	r2, 8008ae4 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008ad2:	6806      	ldr	r6, [r0, #0]
 8008ad4:	b99e      	cbnz	r6, 8008afe <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008ad6:	6880      	ldr	r0, [r0, #8]
 8008ad8:	f001 fa82 	bl	8009fe0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008adc:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008ade:	3501      	adds	r5, #1
 8008ae0:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8008ae2:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008ae4:	b96e      	cbnz	r6, 8008b02 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008ae6:	6840      	ldr	r0, [r0, #4]
 8008ae8:	f016 faf9 	bl	801f0de <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008aec:	6863      	ldr	r3, [r4, #4]
 8008aee:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008af0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008af2:	68a2      	ldr	r2, [r4, #8]
 8008af4:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008af6:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008af8:	bf24      	itt	cs
 8008afa:	6823      	ldrcs	r3, [r4, #0]
 8008afc:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8008afe:	2000      	movs	r0, #0
 8008b00:	e7ed      	b.n	8008ade <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008b02:	68c0      	ldr	r0, [r0, #12]
 8008b04:	f016 faeb 	bl	801f0de <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008b08:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008b0a:	68e3      	ldr	r3, [r4, #12]
 8008b0c:	4251      	negs	r1, r2
 8008b0e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008b10:	6822      	ldr	r2, [r4, #0]
 8008b12:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008b14:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008b16:	bf3e      	ittt	cc
 8008b18:	68a3      	ldrcc	r3, [r4, #8]
 8008b1a:	185b      	addcc	r3, r3, r1
 8008b1c:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008b1e:	2e02      	cmp	r6, #2
 8008b20:	d1ed      	bne.n	8008afe <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008b22:	b10d      	cbz	r5, 8008b28 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8008b24:	3d01      	subs	r5, #1
 8008b26:	e7ea      	b.n	8008afe <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8008b28:	4628      	mov	r0, r5
 8008b2a:	e7d8      	b.n	8008ade <prvCopyDataToQueue+0x18>

08008b2c <prvCopyDataFromQueue>:
{
 8008b2c:	4603      	mov	r3, r0
 8008b2e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008b30:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8008b32:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008b34:	b162      	cbz	r2, 8008b50 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008b36:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008b38:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008b3a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008b3c:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008b3e:	60dc      	str	r4, [r3, #12]
}
 8008b40:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008b44:	bf24      	itt	cs
 8008b46:	6819      	ldrcs	r1, [r3, #0]
 8008b48:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008b4a:	68d9      	ldr	r1, [r3, #12]
 8008b4c:	f016 bac7 	b.w	801f0de <memcpy>
}
 8008b50:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008b54:	4770      	bx	lr

08008b56 <prvUnlockQueue>:
{
 8008b56:	b570      	push	{r4, r5, r6, lr}
 8008b58:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008b5a:	f7ff fe7b 	bl	8008854 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008b5e:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008b62:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008b66:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008b68:	2d00      	cmp	r5, #0
 8008b6a:	dc14      	bgt.n	8008b96 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008b6c:	23ff      	movs	r3, #255	@ 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008b6e:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 8008b72:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8008b76:	f7ff fe91 	bl	800889c <vPortExitCritical>
	taskENTER_CRITICAL();
 8008b7a:	f7ff fe6b 	bl	8008854 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008b7e:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
 8008b82:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008b84:	2d00      	cmp	r5, #0
 8008b86:	dc12      	bgt.n	8008bae <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008b88:	23ff      	movs	r3, #255	@ 0xff
 8008b8a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8008b8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008b92:	f7ff be83 	b.w	800889c <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008b96:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008b98:	2b00      	cmp	r3, #0
 8008b9a:	d0e7      	beq.n	8008b6c <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008b9c:	4630      	mov	r0, r6
 8008b9e:	f001 f935 	bl	8009e0c <xTaskRemoveFromEventList>
 8008ba2:	b108      	cbz	r0, 8008ba8 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008ba4:	f001 f9c2 	bl	8009f2c <vTaskMissedYield>
			--cTxLock;
 8008ba8:	3d01      	subs	r5, #1
 8008baa:	b26d      	sxtb	r5, r5
 8008bac:	e7dc      	b.n	8008b68 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008bae:	6923      	ldr	r3, [r4, #16]
 8008bb0:	2b00      	cmp	r3, #0
 8008bb2:	d0e9      	beq.n	8008b88 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008bb4:	4630      	mov	r0, r6
 8008bb6:	f001 f929 	bl	8009e0c <xTaskRemoveFromEventList>
 8008bba:	b108      	cbz	r0, 8008bc0 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8008bbc:	f001 f9b6 	bl	8009f2c <vTaskMissedYield>
				--cRxLock;
 8008bc0:	3d01      	subs	r5, #1
 8008bc2:	b26d      	sxtb	r5, r5
 8008bc4:	e7de      	b.n	8008b84 <prvUnlockQueue+0x2e>

08008bc6 <xQueueGenericReset>:
{
 8008bc6:	b538      	push	{r3, r4, r5, lr}
 8008bc8:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008bca:	4604      	mov	r4, r0
 8008bcc:	b950      	cbnz	r0, 8008be4 <xQueueGenericReset+0x1e>
 8008bce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008bd2:	b672      	cpsid	i
 8008bd4:	f383 8811 	msr	BASEPRI, r3
 8008bd8:	f3bf 8f6f 	isb	sy
 8008bdc:	f3bf 8f4f 	dsb	sy
 8008be0:	b662      	cpsie	i
 8008be2:	e7fe      	b.n	8008be2 <xQueueGenericReset+0x1c>
	taskENTER_CRITICAL();
 8008be4:	f7ff fe36 	bl	8008854 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008be8:	6822      	ldr	r2, [r4, #0]
 8008bea:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8008bee:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008bf0:	434b      	muls	r3, r1
 8008bf2:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008bf4:	1a5b      	subs	r3, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008bf6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008bf8:	441a      	add	r2, r3
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008bfa:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8008bfc:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008bfe:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008c00:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8008c02:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008c06:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 8008c0a:	b9a5      	cbnz	r5, 8008c36 <xQueueGenericReset+0x70>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008c0c:	6923      	ldr	r3, [r4, #16]
 8008c0e:	b173      	cbz	r3, 8008c2e <xQueueGenericReset+0x68>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008c10:	f104 0010 	add.w	r0, r4, #16
 8008c14:	f001 f8fa 	bl	8009e0c <xTaskRemoveFromEventList>
 8008c18:	b148      	cbz	r0, 8008c2e <xQueueGenericReset+0x68>
					queueYIELD_IF_USING_PREEMPTION();
 8008c1a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008c1e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008c22:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008c26:	f3bf 8f4f 	dsb	sy
 8008c2a:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8008c2e:	f7ff fe35 	bl	800889c <vPortExitCritical>
}
 8008c32:	2001      	movs	r0, #1
 8008c34:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008c36:	f104 0010 	add.w	r0, r4, #16
 8008c3a:	f7ff fd63 	bl	8008704 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8008c3e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008c42:	f7ff fd5f 	bl	8008704 <vListInitialise>
 8008c46:	e7f2      	b.n	8008c2e <xQueueGenericReset+0x68>

08008c48 <xQueueGenericCreateStatic.part.0>:
	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType )
 8008c48:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008c4a:	460d      	mov	r5, r1
		configASSERT( pxStaticQueue != NULL );
 8008c4c:	461c      	mov	r4, r3
 8008c4e:	b953      	cbnz	r3, 8008c66 <xQueueGenericCreateStatic.part.0+0x1e>
 8008c50:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c54:	b672      	cpsid	i
 8008c56:	f383 8811 	msr	BASEPRI, r3
 8008c5a:	f3bf 8f6f 	isb	sy
 8008c5e:	f3bf 8f4f 	dsb	sy
 8008c62:	b662      	cpsie	i
 8008c64:	e7fe      	b.n	8008c64 <xQueueGenericCreateStatic.part.0+0x1c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008c66:	b15a      	cbz	r2, 8008c80 <xQueueGenericCreateStatic.part.0+0x38>
 8008c68:	b9b1      	cbnz	r1, 8008c98 <xQueueGenericCreateStatic.part.0+0x50>
 8008c6a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c6e:	b672      	cpsid	i
 8008c70:	f383 8811 	msr	BASEPRI, r3
 8008c74:	f3bf 8f6f 	isb	sy
 8008c78:	f3bf 8f4f 	dsb	sy
 8008c7c:	b662      	cpsie	i
 8008c7e:	e7fe      	b.n	8008c7e <xQueueGenericCreateStatic.part.0+0x36>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008c80:	b151      	cbz	r1, 8008c98 <xQueueGenericCreateStatic.part.0+0x50>
 8008c82:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c86:	b672      	cpsid	i
 8008c88:	f383 8811 	msr	BASEPRI, r3
 8008c8c:	f3bf 8f6f 	isb	sy
 8008c90:	f3bf 8f4f 	dsb	sy
 8008c94:	b662      	cpsie	i
 8008c96:	e7fe      	b.n	8008c96 <xQueueGenericCreateStatic.part.0+0x4e>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008c98:	2350      	movs	r3, #80	@ 0x50
 8008c9a:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008c9c:	9b01      	ldr	r3, [sp, #4]
 8008c9e:	2b50      	cmp	r3, #80	@ 0x50
 8008ca0:	d00a      	beq.n	8008cb8 <xQueueGenericCreateStatic.part.0+0x70>
 8008ca2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ca6:	b672      	cpsid	i
 8008ca8:	f383 8811 	msr	BASEPRI, r3
 8008cac:	f3bf 8f6f 	isb	sy
 8008cb0:	f3bf 8f4f 	dsb	sy
 8008cb4:	b662      	cpsie	i
 8008cb6:	e7fe      	b.n	8008cb6 <xQueueGenericCreateStatic.part.0+0x6e>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008cb8:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008cba:	2d00      	cmp	r5, #0
 8008cbc:	bf08      	it	eq
 8008cbe:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8008cc0:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008cc2:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008cc6:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8008cc8:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008ccc:	4620      	mov	r0, r4
 8008cce:	f7ff ff7a 	bl	8008bc6 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008cd2:	f89d 3018 	ldrb.w	r3, [sp, #24]
	}
 8008cd6:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8008cd8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8008cdc:	b003      	add	sp, #12
 8008cde:	bd30      	pop	{r4, r5, pc}

08008ce0 <xQueueGenericCreateStatic>:
	{
 8008ce0:	b410      	push	{r4}
 8008ce2:	f89d 4004 	ldrb.w	r4, [sp, #4]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008ce6:	b950      	cbnz	r0, 8008cfe <xQueueGenericCreateStatic+0x1e>
 8008ce8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008cec:	b672      	cpsid	i
 8008cee:	f383 8811 	msr	BASEPRI, r3
 8008cf2:	f3bf 8f6f 	isb	sy
 8008cf6:	f3bf 8f4f 	dsb	sy
 8008cfa:	b662      	cpsie	i
 8008cfc:	e7fe      	b.n	8008cfc <xQueueGenericCreateStatic+0x1c>
 8008cfe:	9401      	str	r4, [sp, #4]
	}
 8008d00:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008d04:	f7ff bfa0 	b.w	8008c48 <xQueueGenericCreateStatic.part.0>

08008d08 <xQueueGenericCreate>:
	{
 8008d08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008d0a:	460d      	mov	r5, r1
 8008d0c:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008d0e:	4606      	mov	r6, r0
 8008d10:	b950      	cbnz	r0, 8008d28 <xQueueGenericCreate+0x20>
 8008d12:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d16:	b672      	cpsid	i
 8008d18:	f383 8811 	msr	BASEPRI, r3
 8008d1c:	f3bf 8f6f 	isb	sy
 8008d20:	f3bf 8f4f 	dsb	sy
 8008d24:	b662      	cpsie	i
 8008d26:	e7fe      	b.n	8008d26 <xQueueGenericCreate+0x1e>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d28:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008d2a:	3050      	adds	r0, #80	@ 0x50
 8008d2c:	f7ff fc18 	bl	8008560 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008d30:	4604      	mov	r4, r0
 8008d32:	b170      	cbz	r0, 8008d52 <xQueueGenericCreate+0x4a>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008d34:	2300      	movs	r3, #0
 8008d36:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008d3a:	b165      	cbz	r5, 8008d56 <xQueueGenericCreate+0x4e>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008d3c:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008d40:	2101      	movs	r1, #1
 8008d42:	4620      	mov	r0, r4
 8008d44:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8008d46:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008d4a:	f7ff ff3c 	bl	8008bc6 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008d4e:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8008d52:	4620      	mov	r0, r4
 8008d54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008d56:	4603      	mov	r3, r0
 8008d58:	e7f2      	b.n	8008d40 <xQueueGenericCreate+0x38>

08008d5a <xQueueCreateCountingSemaphoreStatic>:
	{
 8008d5a:	b513      	push	{r0, r1, r4, lr}
 8008d5c:	4613      	mov	r3, r2
 8008d5e:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008d60:	b950      	cbnz	r0, 8008d78 <xQueueCreateCountingSemaphoreStatic+0x1e>
 8008d62:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d66:	b672      	cpsid	i
 8008d68:	f383 8811 	msr	BASEPRI, r3
 8008d6c:	f3bf 8f6f 	isb	sy
 8008d70:	f3bf 8f4f 	dsb	sy
 8008d74:	b662      	cpsie	i
 8008d76:	e7fe      	b.n	8008d76 <xQueueCreateCountingSemaphoreStatic+0x1c>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008d78:	4288      	cmp	r0, r1
 8008d7a:	d20a      	bcs.n	8008d92 <xQueueCreateCountingSemaphoreStatic+0x38>
 8008d7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d80:	b672      	cpsid	i
 8008d82:	f383 8811 	msr	BASEPRI, r3
 8008d86:	f3bf 8f6f 	isb	sy
 8008d8a:	f3bf 8f4f 	dsb	sy
 8008d8e:	b662      	cpsie	i
 8008d90:	e7fe      	b.n	8008d90 <xQueueCreateCountingSemaphoreStatic+0x36>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008d92:	2202      	movs	r2, #2
 8008d94:	9200      	str	r2, [sp, #0]
 8008d96:	2200      	movs	r2, #0
 8008d98:	4611      	mov	r1, r2
 8008d9a:	f7ff ffa1 	bl	8008ce0 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8008d9e:	b100      	cbz	r0, 8008da2 <xQueueCreateCountingSemaphoreStatic+0x48>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008da0:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008da2:	b002      	add	sp, #8
 8008da4:	bd10      	pop	{r4, pc}

08008da6 <xQueueCreateCountingSemaphore>:
	{
 8008da6:	b510      	push	{r4, lr}
 8008da8:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008daa:	b950      	cbnz	r0, 8008dc2 <xQueueCreateCountingSemaphore+0x1c>
 8008dac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008db0:	b672      	cpsid	i
 8008db2:	f383 8811 	msr	BASEPRI, r3
 8008db6:	f3bf 8f6f 	isb	sy
 8008dba:	f3bf 8f4f 	dsb	sy
 8008dbe:	b662      	cpsie	i
 8008dc0:	e7fe      	b.n	8008dc0 <xQueueCreateCountingSemaphore+0x1a>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008dc2:	4288      	cmp	r0, r1
 8008dc4:	d20a      	bcs.n	8008ddc <xQueueCreateCountingSemaphore+0x36>
 8008dc6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dca:	b672      	cpsid	i
 8008dcc:	f383 8811 	msr	BASEPRI, r3
 8008dd0:	f3bf 8f6f 	isb	sy
 8008dd4:	f3bf 8f4f 	dsb	sy
 8008dd8:	b662      	cpsie	i
 8008dda:	e7fe      	b.n	8008dda <xQueueCreateCountingSemaphore+0x34>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008ddc:	2202      	movs	r2, #2
 8008dde:	2100      	movs	r1, #0
 8008de0:	f7ff ff92 	bl	8008d08 <xQueueGenericCreate>
		if( xHandle != NULL )
 8008de4:	b100      	cbz	r0, 8008de8 <xQueueCreateCountingSemaphore+0x42>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008de6:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008de8:	bd10      	pop	{r4, pc}

08008dea <xQueueGenericSend>:
{
 8008dea:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008dee:	460f      	mov	r7, r1
 8008df0:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8008df2:	4604      	mov	r4, r0
{
 8008df4:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 8008df6:	b950      	cbnz	r0, 8008e0e <xQueueGenericSend+0x24>
 8008df8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dfc:	b672      	cpsid	i
 8008dfe:	f383 8811 	msr	BASEPRI, r3
 8008e02:	f3bf 8f6f 	isb	sy
 8008e06:	f3bf 8f4f 	dsb	sy
 8008e0a:	b662      	cpsie	i
 8008e0c:	e7fe      	b.n	8008e0c <xQueueGenericSend+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008e0e:	b961      	cbnz	r1, 8008e2a <xQueueGenericSend+0x40>
 8008e10:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008e12:	b153      	cbz	r3, 8008e2a <xQueueGenericSend+0x40>
 8008e14:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e18:	b672      	cpsid	i
 8008e1a:	f383 8811 	msr	BASEPRI, r3
 8008e1e:	f3bf 8f6f 	isb	sy
 8008e22:	f3bf 8f4f 	dsb	sy
 8008e26:	b662      	cpsie	i
 8008e28:	e7fe      	b.n	8008e28 <xQueueGenericSend+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008e2a:	2e02      	cmp	r6, #2
 8008e2c:	d10d      	bne.n	8008e4a <xQueueGenericSend+0x60>
 8008e2e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008e30:	2b01      	cmp	r3, #1
 8008e32:	d00a      	beq.n	8008e4a <xQueueGenericSend+0x60>
 8008e34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e38:	b672      	cpsid	i
 8008e3a:	f383 8811 	msr	BASEPRI, r3
 8008e3e:	f3bf 8f6f 	isb	sy
 8008e42:	f3bf 8f4f 	dsb	sy
 8008e46:	b662      	cpsie	i
 8008e48:	e7fe      	b.n	8008e48 <xQueueGenericSend+0x5e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008e4a:	f001 f87b 	bl	8009f44 <xTaskGetSchedulerState>
 8008e4e:	4605      	mov	r5, r0
 8008e50:	b330      	cbz	r0, 8008ea0 <xQueueGenericSend+0xb6>
 8008e52:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008e54:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008e58:	f7ff fcfc 	bl	8008854 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008e5c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008e5e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008e60:	429a      	cmp	r2, r3
 8008e62:	d301      	bcc.n	8008e68 <xQueueGenericSend+0x7e>
 8008e64:	2e02      	cmp	r6, #2
 8008e66:	d129      	bne.n	8008ebc <xQueueGenericSend+0xd2>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008e68:	4632      	mov	r2, r6
 8008e6a:	4639      	mov	r1, r7
 8008e6c:	4620      	mov	r0, r4
 8008e6e:	f7ff fe2a 	bl	8008ac6 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008e72:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008e74:	b11b      	cbz	r3, 8008e7e <xQueueGenericSend+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008e76:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008e7a:	f000 ffc7 	bl	8009e0c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008e7e:	b148      	cbz	r0, 8008e94 <xQueueGenericSend+0xaa>
						queueYIELD_IF_USING_PREEMPTION();
 8008e80:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008e84:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008e88:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008e8c:	f3bf 8f4f 	dsb	sy
 8008e90:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008e94:	f7ff fd02 	bl	800889c <vPortExitCritical>
				return pdPASS;
 8008e98:	2001      	movs	r0, #1
}
 8008e9a:	b004      	add	sp, #16
 8008e9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008ea0:	9b01      	ldr	r3, [sp, #4]
 8008ea2:	2b00      	cmp	r3, #0
 8008ea4:	d0d6      	beq.n	8008e54 <xQueueGenericSend+0x6a>
 8008ea6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008eaa:	b672      	cpsid	i
 8008eac:	f383 8811 	msr	BASEPRI, r3
 8008eb0:	f3bf 8f6f 	isb	sy
 8008eb4:	f3bf 8f4f 	dsb	sy
 8008eb8:	b662      	cpsie	i
 8008eba:	e7fe      	b.n	8008eba <xQueueGenericSend+0xd0>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008ebc:	9b01      	ldr	r3, [sp, #4]
 8008ebe:	b91b      	cbnz	r3, 8008ec8 <xQueueGenericSend+0xde>
					taskEXIT_CRITICAL();
 8008ec0:	f7ff fcec 	bl	800889c <vPortExitCritical>
					return errQUEUE_FULL;
 8008ec4:	2000      	movs	r0, #0
 8008ec6:	e7e8      	b.n	8008e9a <xQueueGenericSend+0xb0>
				else if( xEntryTimeSet == pdFALSE )
 8008ec8:	b915      	cbnz	r5, 8008ed0 <xQueueGenericSend+0xe6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008eca:	a802      	add	r0, sp, #8
 8008ecc:	f000 ffe2 	bl	8009e94 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008ed0:	f7ff fce4 	bl	800889c <vPortExitCritical>
		vTaskSuspendAll();
 8008ed4:	f000 fd68 	bl	80099a8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008ed8:	f7ff fcbc 	bl	8008854 <vPortEnterCritical>
 8008edc:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008ee0:	2bff      	cmp	r3, #255	@ 0xff
 8008ee2:	d101      	bne.n	8008ee8 <xQueueGenericSend+0xfe>
 8008ee4:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
 8008ee8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008eec:	2bff      	cmp	r3, #255	@ 0xff
 8008eee:	d101      	bne.n	8008ef4 <xQueueGenericSend+0x10a>
 8008ef0:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
 8008ef4:	f7ff fcd2 	bl	800889c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008ef8:	a901      	add	r1, sp, #4
 8008efa:	a802      	add	r0, sp, #8
 8008efc:	f000 ffd6 	bl	8009eac <xTaskCheckForTimeOut>
 8008f00:	bb38      	cbnz	r0, 8008f52 <xQueueGenericSend+0x168>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008f02:	f7ff fca7 	bl	8008854 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008f06:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008f08:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008f0a:	429a      	cmp	r2, r3
 8008f0c:	d10e      	bne.n	8008f2c <xQueueGenericSend+0x142>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008f0e:	f7ff fcc5 	bl	800889c <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008f12:	9901      	ldr	r1, [sp, #4]
 8008f14:	f104 0010 	add.w	r0, r4, #16
 8008f18:	f000 ff3c 	bl	8009d94 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008f1c:	4620      	mov	r0, r4
 8008f1e:	f7ff fe1a 	bl	8008b56 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008f22:	f000 fde7 	bl	8009af4 <xTaskResumeAll>
 8008f26:	b148      	cbz	r0, 8008f3c <xQueueGenericSend+0x152>
 8008f28:	2501      	movs	r5, #1
 8008f2a:	e795      	b.n	8008e58 <xQueueGenericSend+0x6e>
	taskEXIT_CRITICAL();
 8008f2c:	f7ff fcb6 	bl	800889c <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008f30:	4620      	mov	r0, r4
 8008f32:	f7ff fe10 	bl	8008b56 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008f36:	f000 fddd 	bl	8009af4 <xTaskResumeAll>
 8008f3a:	e7f5      	b.n	8008f28 <xQueueGenericSend+0x13e>
					portYIELD_WITHIN_API();
 8008f3c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008f40:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008f44:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008f48:	f3bf 8f4f 	dsb	sy
 8008f4c:	f3bf 8f6f 	isb	sy
 8008f50:	e7ea      	b.n	8008f28 <xQueueGenericSend+0x13e>
			prvUnlockQueue( pxQueue );
 8008f52:	4620      	mov	r0, r4
 8008f54:	f7ff fdff 	bl	8008b56 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008f58:	f000 fdcc 	bl	8009af4 <xTaskResumeAll>
			return errQUEUE_FULL;
 8008f5c:	e7b2      	b.n	8008ec4 <xQueueGenericSend+0xda>

08008f5e <xQueueCreateMutexStatic>:
		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueType );
 8008f5e:	2200      	movs	r2, #0
	{
 8008f60:	460b      	mov	r3, r1
 8008f62:	b513      	push	{r0, r1, r4, lr}
 8008f64:	4611      	mov	r1, r2
 8008f66:	9000      	str	r0, [sp, #0]
 8008f68:	2001      	movs	r0, #1
 8008f6a:	f7ff fe6d 	bl	8008c48 <xQueueGenericCreateStatic.part.0>
		if( pxNewQueue != NULL )
 8008f6e:	4604      	mov	r4, r0
 8008f70:	b138      	cbz	r0, 8008f82 <xQueueCreateMutexStatic+0x24>
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 8008f72:	2300      	movs	r3, #0
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 8008f74:	461a      	mov	r2, r3
 8008f76:	4619      	mov	r1, r3
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 8008f78:	6083      	str	r3, [r0, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 8008f7a:	6003      	str	r3, [r0, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 8008f7c:	60c3      	str	r3, [r0, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 8008f7e:	f7ff ff34 	bl	8008dea <xQueueGenericSend>
	}
 8008f82:	4620      	mov	r0, r4
 8008f84:	b002      	add	sp, #8
 8008f86:	bd10      	pop	{r4, pc}

08008f88 <xQueueGiveMutexRecursive>:
	{
 8008f88:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
 8008f8a:	4604      	mov	r4, r0
 8008f8c:	b950      	cbnz	r0, 8008fa4 <xQueueGiveMutexRecursive+0x1c>
 8008f8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f92:	b672      	cpsid	i
 8008f94:	f383 8811 	msr	BASEPRI, r3
 8008f98:	f3bf 8f6f 	isb	sy
 8008f9c:	f3bf 8f4f 	dsb	sy
 8008fa0:	b662      	cpsie	i
 8008fa2:	e7fe      	b.n	8008fa2 <xQueueGiveMutexRecursive+0x1a>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 8008fa4:	6885      	ldr	r5, [r0, #8]
 8008fa6:	f000 ffc7 	bl	8009f38 <xTaskGetCurrentTaskHandle>
 8008faa:	4285      	cmp	r5, r0
 8008fac:	d10b      	bne.n	8008fc6 <xQueueGiveMutexRecursive+0x3e>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 8008fae:	68e3      	ldr	r3, [r4, #12]
 8008fb0:	3b01      	subs	r3, #1
 8008fb2:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 8008fb4:	b10b      	cbz	r3, 8008fba <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
 8008fb6:	2001      	movs	r0, #1
	}
 8008fb8:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 8008fba:	461a      	mov	r2, r3
 8008fbc:	4619      	mov	r1, r3
 8008fbe:	4620      	mov	r0, r4
 8008fc0:	f7ff ff13 	bl	8008dea <xQueueGenericSend>
 8008fc4:	e7f7      	b.n	8008fb6 <xQueueGiveMutexRecursive+0x2e>
			xReturn = pdFAIL;
 8008fc6:	2000      	movs	r0, #0
		return xReturn;
 8008fc8:	e7f6      	b.n	8008fb8 <xQueueGiveMutexRecursive+0x30>

08008fca <xQueueCreateMutex>:
	{
 8008fca:	b570      	push	{r4, r5, r6, lr}
 8008fcc:	4606      	mov	r6, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008fce:	2050      	movs	r0, #80	@ 0x50
 8008fd0:	f7ff fac6 	bl	8008560 <pvPortMalloc>
 8008fd4:	4604      	mov	r4, r0
		if( pxNewQueue != NULL )
 8008fd6:	b198      	cbz	r0, 8009000 <xQueueCreateMutex+0x36>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008fd8:	2500      	movs	r5, #0
	pxNewQueue->uxLength = uxQueueLength;
 8008fda:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008fdc:	6000      	str	r0, [r0, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008fde:	f880 5046 	strb.w	r5, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
 8008fe2:	e9c0 150f 	strd	r1, r5, [r0, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008fe6:	f7ff fdee 	bl	8008bc6 <xQueueGenericReset>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 8008fea:	462b      	mov	r3, r5
 8008fec:	462a      	mov	r2, r5
 8008fee:	4629      	mov	r1, r5
 8008ff0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8008ff2:	f884 604c 	strb.w	r6, [r4, #76]	@ 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 8008ff6:	60a5      	str	r5, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 8008ff8:	6025      	str	r5, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 8008ffa:	60e5      	str	r5, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 8008ffc:	f7ff fef5 	bl	8008dea <xQueueGenericSend>
	}
 8009000:	4620      	mov	r0, r4
 8009002:	bd70      	pop	{r4, r5, r6, pc}

08009004 <xQueueGenericSendFromISR>:
{
 8009004:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009008:	4689      	mov	r9, r1
 800900a:	4617      	mov	r7, r2
 800900c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800900e:	4604      	mov	r4, r0
 8009010:	b950      	cbnz	r0, 8009028 <xQueueGenericSendFromISR+0x24>
 8009012:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009016:	b672      	cpsid	i
 8009018:	f383 8811 	msr	BASEPRI, r3
 800901c:	f3bf 8f6f 	isb	sy
 8009020:	f3bf 8f4f 	dsb	sy
 8009024:	b662      	cpsie	i
 8009026:	e7fe      	b.n	8009026 <xQueueGenericSendFromISR+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009028:	b961      	cbnz	r1, 8009044 <xQueueGenericSendFromISR+0x40>
 800902a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800902c:	b153      	cbz	r3, 8009044 <xQueueGenericSendFromISR+0x40>
 800902e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009032:	b672      	cpsid	i
 8009034:	f383 8811 	msr	BASEPRI, r3
 8009038:	f3bf 8f6f 	isb	sy
 800903c:	f3bf 8f4f 	dsb	sy
 8009040:	b662      	cpsie	i
 8009042:	e7fe      	b.n	8009042 <xQueueGenericSendFromISR+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8009044:	2e02      	cmp	r6, #2
 8009046:	d10d      	bne.n	8009064 <xQueueGenericSendFromISR+0x60>
 8009048:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800904a:	2b01      	cmp	r3, #1
 800904c:	d00a      	beq.n	8009064 <xQueueGenericSendFromISR+0x60>
 800904e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009052:	b672      	cpsid	i
 8009054:	f383 8811 	msr	BASEPRI, r3
 8009058:	f3bf 8f6f 	isb	sy
 800905c:	f3bf 8f4f 	dsb	sy
 8009060:	b662      	cpsie	i
 8009062:	e7fe      	b.n	8009062 <xQueueGenericSendFromISR+0x5e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009064:	f7ff fcf2 	bl	8008a4c <vPortValidateInterruptPriority>
	__asm volatile
 8009068:	f3ef 8811 	mrs	r8, BASEPRI
 800906c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009070:	b672      	cpsid	i
 8009072:	f383 8811 	msr	BASEPRI, r3
 8009076:	f3bf 8f6f 	isb	sy
 800907a:	f3bf 8f4f 	dsb	sy
 800907e:	b662      	cpsie	i
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009080:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009082:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009084:	429a      	cmp	r2, r3
 8009086:	d301      	bcc.n	800908c <xQueueGenericSendFromISR+0x88>
 8009088:	2e02      	cmp	r6, #2
 800908a:	d11d      	bne.n	80090c8 <xQueueGenericSendFromISR+0xc4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800908c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009090:	4632      	mov	r2, r6
 8009092:	4649      	mov	r1, r9
 8009094:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 8009096:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009098:	f7ff fd15 	bl	8008ac6 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800909c:	1c6b      	adds	r3, r5, #1
 800909e:	d10e      	bne.n	80090be <xQueueGenericSendFromISR+0xba>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80090a0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80090a2:	b13b      	cbz	r3, 80090b4 <xQueueGenericSendFromISR+0xb0>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80090a4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80090a8:	f000 feb0 	bl	8009e0c <xTaskRemoveFromEventList>
 80090ac:	b110      	cbz	r0, 80090b4 <xQueueGenericSendFromISR+0xb0>
							if( pxHigherPriorityTaskWoken != NULL )
 80090ae:	b10f      	cbz	r7, 80090b4 <xQueueGenericSendFromISR+0xb0>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80090b0:	2301      	movs	r3, #1
 80090b2:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 80090b4:	2001      	movs	r0, #1
	__asm volatile
 80090b6:	f388 8811 	msr	BASEPRI, r8
}
 80090ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80090be:	3501      	adds	r5, #1
 80090c0:	b26d      	sxtb	r5, r5
 80090c2:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 80090c6:	e7f5      	b.n	80090b4 <xQueueGenericSendFromISR+0xb0>
			xReturn = errQUEUE_FULL;
 80090c8:	2000      	movs	r0, #0
 80090ca:	e7f4      	b.n	80090b6 <xQueueGenericSendFromISR+0xb2>

080090cc <xQueueGiveFromISR>:
{
 80090cc:	b570      	push	{r4, r5, r6, lr}
 80090ce:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80090d0:	4604      	mov	r4, r0
 80090d2:	b950      	cbnz	r0, 80090ea <xQueueGiveFromISR+0x1e>
	__asm volatile
 80090d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090d8:	b672      	cpsid	i
 80090da:	f383 8811 	msr	BASEPRI, r3
 80090de:	f3bf 8f6f 	isb	sy
 80090e2:	f3bf 8f4f 	dsb	sy
 80090e6:	b662      	cpsie	i
 80090e8:	e7fe      	b.n	80090e8 <xQueueGiveFromISR+0x1c>
	configASSERT( pxQueue->uxItemSize == 0 );
 80090ea:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80090ec:	b153      	cbz	r3, 8009104 <xQueueGiveFromISR+0x38>
 80090ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090f2:	b672      	cpsid	i
 80090f4:	f383 8811 	msr	BASEPRI, r3
 80090f8:	f3bf 8f6f 	isb	sy
 80090fc:	f3bf 8f4f 	dsb	sy
 8009100:	b662      	cpsie	i
 8009102:	e7fe      	b.n	8009102 <xQueueGiveFromISR+0x36>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009104:	6803      	ldr	r3, [r0, #0]
 8009106:	b963      	cbnz	r3, 8009122 <xQueueGiveFromISR+0x56>
 8009108:	6883      	ldr	r3, [r0, #8]
 800910a:	b153      	cbz	r3, 8009122 <xQueueGiveFromISR+0x56>
 800910c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009110:	b672      	cpsid	i
 8009112:	f383 8811 	msr	BASEPRI, r3
 8009116:	f3bf 8f6f 	isb	sy
 800911a:	f3bf 8f4f 	dsb	sy
 800911e:	b662      	cpsie	i
 8009120:	e7fe      	b.n	8009120 <xQueueGiveFromISR+0x54>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009122:	f7ff fc93 	bl	8008a4c <vPortValidateInterruptPriority>
	__asm volatile
 8009126:	f3ef 8611 	mrs	r6, BASEPRI
 800912a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800912e:	b672      	cpsid	i
 8009130:	f383 8811 	msr	BASEPRI, r3
 8009134:	f3bf 8f6f 	isb	sy
 8009138:	f3bf 8f4f 	dsb	sy
 800913c:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800913e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8009140:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009142:	4293      	cmp	r3, r2
 8009144:	d919      	bls.n	800917a <xQueueGiveFromISR+0xae>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009146:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800914a:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800914c:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800914e:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009150:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8009152:	d10d      	bne.n	8009170 <xQueueGiveFromISR+0xa4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009154:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009156:	b13b      	cbz	r3, 8009168 <xQueueGiveFromISR+0x9c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009158:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800915c:	f000 fe56 	bl	8009e0c <xTaskRemoveFromEventList>
 8009160:	b110      	cbz	r0, 8009168 <xQueueGiveFromISR+0x9c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009162:	b10d      	cbz	r5, 8009168 <xQueueGiveFromISR+0x9c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009164:	2301      	movs	r3, #1
 8009166:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 8009168:	2001      	movs	r0, #1
	__asm volatile
 800916a:	f386 8811 	msr	BASEPRI, r6
}
 800916e:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009170:	3301      	adds	r3, #1
 8009172:	b25b      	sxtb	r3, r3
 8009174:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8009178:	e7f6      	b.n	8009168 <xQueueGiveFromISR+0x9c>
			xReturn = errQUEUE_FULL;
 800917a:	2000      	movs	r0, #0
 800917c:	e7f5      	b.n	800916a <xQueueGiveFromISR+0x9e>

0800917e <xQueueReceive>:
{
 800917e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009182:	460e      	mov	r6, r1
	configASSERT( ( pxQueue ) );
 8009184:	4604      	mov	r4, r0
{
 8009186:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009188:	b950      	cbnz	r0, 80091a0 <xQueueReceive+0x22>
	__asm volatile
 800918a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800918e:	b672      	cpsid	i
 8009190:	f383 8811 	msr	BASEPRI, r3
 8009194:	f3bf 8f6f 	isb	sy
 8009198:	f3bf 8f4f 	dsb	sy
 800919c:	b662      	cpsie	i
 800919e:	e7fe      	b.n	800919e <xQueueReceive+0x20>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80091a0:	b961      	cbnz	r1, 80091bc <xQueueReceive+0x3e>
 80091a2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80091a4:	b153      	cbz	r3, 80091bc <xQueueReceive+0x3e>
 80091a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80091aa:	b672      	cpsid	i
 80091ac:	f383 8811 	msr	BASEPRI, r3
 80091b0:	f3bf 8f6f 	isb	sy
 80091b4:	f3bf 8f4f 	dsb	sy
 80091b8:	b662      	cpsie	i
 80091ba:	e7fe      	b.n	80091ba <xQueueReceive+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80091bc:	f000 fec2 	bl	8009f44 <xTaskGetSchedulerState>
 80091c0:	4605      	mov	r5, r0
 80091c2:	b318      	cbz	r0, 800920c <xQueueReceive+0x8e>
 80091c4:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 80091c6:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 80091ca:	f7ff fb43 	bl	8008854 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80091ce:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80091d0:	b357      	cbz	r7, 8009228 <xQueueReceive+0xaa>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80091d2:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80091d4:	4631      	mov	r1, r6
 80091d6:	4620      	mov	r0, r4
 80091d8:	f7ff fca8 	bl	8008b2c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80091dc:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80091de:	6923      	ldr	r3, [r4, #16]
 80091e0:	b173      	cbz	r3, 8009200 <xQueueReceive+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80091e2:	f104 0010 	add.w	r0, r4, #16
 80091e6:	f000 fe11 	bl	8009e0c <xTaskRemoveFromEventList>
 80091ea:	b148      	cbz	r0, 8009200 <xQueueReceive+0x82>
						queueYIELD_IF_USING_PREEMPTION();
 80091ec:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80091f0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80091f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80091f8:	f3bf 8f4f 	dsb	sy
 80091fc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009200:	f7ff fb4c 	bl	800889c <vPortExitCritical>
				return pdPASS;
 8009204:	2001      	movs	r0, #1
}
 8009206:	b004      	add	sp, #16
 8009208:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800920c:	9b01      	ldr	r3, [sp, #4]
 800920e:	2b00      	cmp	r3, #0
 8009210:	d0d9      	beq.n	80091c6 <xQueueReceive+0x48>
 8009212:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009216:	b672      	cpsid	i
 8009218:	f383 8811 	msr	BASEPRI, r3
 800921c:	f3bf 8f6f 	isb	sy
 8009220:	f3bf 8f4f 	dsb	sy
 8009224:	b662      	cpsie	i
 8009226:	e7fe      	b.n	8009226 <xQueueReceive+0xa8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009228:	9b01      	ldr	r3, [sp, #4]
 800922a:	b91b      	cbnz	r3, 8009234 <xQueueReceive+0xb6>
					taskEXIT_CRITICAL();
 800922c:	f7ff fb36 	bl	800889c <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009230:	2000      	movs	r0, #0
 8009232:	e7e8      	b.n	8009206 <xQueueReceive+0x88>
				else if( xEntryTimeSet == pdFALSE )
 8009234:	b915      	cbnz	r5, 800923c <xQueueReceive+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009236:	a802      	add	r0, sp, #8
 8009238:	f000 fe2c 	bl	8009e94 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800923c:	f7ff fb2e 	bl	800889c <vPortExitCritical>
		vTaskSuspendAll();
 8009240:	f000 fbb2 	bl	80099a8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009244:	f7ff fb06 	bl	8008854 <vPortEnterCritical>
 8009248:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800924c:	2bff      	cmp	r3, #255	@ 0xff
 800924e:	d101      	bne.n	8009254 <xQueueReceive+0xd6>
 8009250:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
 8009254:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8009258:	2bff      	cmp	r3, #255	@ 0xff
 800925a:	d101      	bne.n	8009260 <xQueueReceive+0xe2>
 800925c:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
 8009260:	f7ff fb1c 	bl	800889c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009264:	a901      	add	r1, sp, #4
 8009266:	a802      	add	r0, sp, #8
 8009268:	f000 fe20 	bl	8009eac <xTaskCheckForTimeOut>
 800926c:	bb00      	cbnz	r0, 80092b0 <xQueueReceive+0x132>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800926e:	4620      	mov	r0, r4
 8009270:	f7ff fc1e 	bl	8008ab0 <prvIsQueueEmpty>
 8009274:	b1b0      	cbz	r0, 80092a4 <xQueueReceive+0x126>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009276:	9901      	ldr	r1, [sp, #4]
 8009278:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800927c:	f000 fd8a 	bl	8009d94 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009280:	4620      	mov	r0, r4
 8009282:	f7ff fc68 	bl	8008b56 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009286:	f000 fc35 	bl	8009af4 <xTaskResumeAll>
 800928a:	b948      	cbnz	r0, 80092a0 <xQueueReceive+0x122>
					portYIELD_WITHIN_API();
 800928c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009290:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009294:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009298:	f3bf 8f4f 	dsb	sy
 800929c:	f3bf 8f6f 	isb	sy
 80092a0:	2501      	movs	r5, #1
 80092a2:	e792      	b.n	80091ca <xQueueReceive+0x4c>
				prvUnlockQueue( pxQueue );
 80092a4:	4620      	mov	r0, r4
 80092a6:	f7ff fc56 	bl	8008b56 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80092aa:	f000 fc23 	bl	8009af4 <xTaskResumeAll>
 80092ae:	e7f7      	b.n	80092a0 <xQueueReceive+0x122>
			prvUnlockQueue( pxQueue );
 80092b0:	4620      	mov	r0, r4
 80092b2:	f7ff fc50 	bl	8008b56 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80092b6:	f000 fc1d 	bl	8009af4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80092ba:	4620      	mov	r0, r4
 80092bc:	f7ff fbf8 	bl	8008ab0 <prvIsQueueEmpty>
 80092c0:	2800      	cmp	r0, #0
 80092c2:	d0ed      	beq.n	80092a0 <xQueueReceive+0x122>
 80092c4:	e7b4      	b.n	8009230 <xQueueReceive+0xb2>

080092c6 <xQueueSemaphoreTake>:
{
 80092c6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80092c8:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80092ca:	4604      	mov	r4, r0
{
 80092cc:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80092ce:	b950      	cbnz	r0, 80092e6 <xQueueSemaphoreTake+0x20>
 80092d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092d4:	b672      	cpsid	i
 80092d6:	f383 8811 	msr	BASEPRI, r3
 80092da:	f3bf 8f6f 	isb	sy
 80092de:	f3bf 8f4f 	dsb	sy
 80092e2:	b662      	cpsie	i
 80092e4:	e7fe      	b.n	80092e4 <xQueueSemaphoreTake+0x1e>
	configASSERT( pxQueue->uxItemSize == 0 );
 80092e6:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 80092e8:	b155      	cbz	r5, 8009300 <xQueueSemaphoreTake+0x3a>
 80092ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092ee:	b672      	cpsid	i
 80092f0:	f383 8811 	msr	BASEPRI, r3
 80092f4:	f3bf 8f6f 	isb	sy
 80092f8:	f3bf 8f4f 	dsb	sy
 80092fc:	b662      	cpsie	i
 80092fe:	e7fe      	b.n	80092fe <xQueueSemaphoreTake+0x38>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009300:	f000 fe20 	bl	8009f44 <xTaskGetSchedulerState>
 8009304:	4606      	mov	r6, r0
 8009306:	b320      	cbz	r0, 8009352 <xQueueSemaphoreTake+0x8c>
 8009308:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800930a:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800930c:	f7ff faa2 	bl	8008854 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009310:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009312:	b363      	cbz	r3, 800936e <xQueueSemaphoreTake+0xa8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009314:	3b01      	subs	r3, #1
 8009316:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009318:	6823      	ldr	r3, [r4, #0]
 800931a:	b913      	cbnz	r3, 8009322 <xQueueSemaphoreTake+0x5c>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800931c:	f000 fef8 	bl	800a110 <pvTaskIncrementMutexHeldCount>
 8009320:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009322:	6923      	ldr	r3, [r4, #16]
 8009324:	b173      	cbz	r3, 8009344 <xQueueSemaphoreTake+0x7e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009326:	f104 0010 	add.w	r0, r4, #16
 800932a:	f000 fd6f 	bl	8009e0c <xTaskRemoveFromEventList>
 800932e:	b148      	cbz	r0, 8009344 <xQueueSemaphoreTake+0x7e>
						queueYIELD_IF_USING_PREEMPTION();
 8009330:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009334:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009338:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800933c:	f3bf 8f4f 	dsb	sy
 8009340:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009344:	f7ff faaa 	bl	800889c <vPortExitCritical>
				return pdPASS;
 8009348:	2001      	movs	r0, #1
}
 800934a:	b005      	add	sp, #20
 800934c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800934e:	4635      	mov	r5, r6
 8009350:	e7db      	b.n	800930a <xQueueSemaphoreTake+0x44>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009352:	9b01      	ldr	r3, [sp, #4]
 8009354:	2b00      	cmp	r3, #0
 8009356:	d0fa      	beq.n	800934e <xQueueSemaphoreTake+0x88>
 8009358:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800935c:	b672      	cpsid	i
 800935e:	f383 8811 	msr	BASEPRI, r3
 8009362:	f3bf 8f6f 	isb	sy
 8009366:	f3bf 8f4f 	dsb	sy
 800936a:	b662      	cpsie	i
 800936c:	e7fe      	b.n	800936c <xQueueSemaphoreTake+0xa6>
				if( xTicksToWait == ( TickType_t ) 0 )
 800936e:	9b01      	ldr	r3, [sp, #4]
 8009370:	b963      	cbnz	r3, 800938c <xQueueSemaphoreTake+0xc6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8009372:	2d00      	cmp	r5, #0
 8009374:	d068      	beq.n	8009448 <xQueueSemaphoreTake+0x182>
 8009376:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800937a:	b672      	cpsid	i
 800937c:	f383 8811 	msr	BASEPRI, r3
 8009380:	f3bf 8f6f 	isb	sy
 8009384:	f3bf 8f4f 	dsb	sy
 8009388:	b662      	cpsie	i
 800938a:	e7fe      	b.n	800938a <xQueueSemaphoreTake+0xc4>
				else if( xEntryTimeSet == pdFALSE )
 800938c:	b916      	cbnz	r6, 8009394 <xQueueSemaphoreTake+0xce>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800938e:	a802      	add	r0, sp, #8
 8009390:	f000 fd80 	bl	8009e94 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009394:	f7ff fa82 	bl	800889c <vPortExitCritical>
		vTaskSuspendAll();
 8009398:	f000 fb06 	bl	80099a8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800939c:	f7ff fa5a 	bl	8008854 <vPortEnterCritical>
 80093a0:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80093a4:	2bff      	cmp	r3, #255	@ 0xff
 80093a6:	d101      	bne.n	80093ac <xQueueSemaphoreTake+0xe6>
 80093a8:	f884 7044 	strb.w	r7, [r4, #68]	@ 0x44
 80093ac:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80093b0:	2bff      	cmp	r3, #255	@ 0xff
 80093b2:	d101      	bne.n	80093b8 <xQueueSemaphoreTake+0xf2>
 80093b4:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80093b8:	f7ff fa70 	bl	800889c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80093bc:	a901      	add	r1, sp, #4
 80093be:	a802      	add	r0, sp, #8
 80093c0:	f000 fd74 	bl	8009eac <xTaskCheckForTimeOut>
 80093c4:	bb50      	cbnz	r0, 800941c <xQueueSemaphoreTake+0x156>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80093c6:	4620      	mov	r0, r4
 80093c8:	f7ff fb72 	bl	8008ab0 <prvIsQueueEmpty>
 80093cc:	b300      	cbz	r0, 8009410 <xQueueSemaphoreTake+0x14a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80093ce:	6823      	ldr	r3, [r4, #0]
 80093d0:	b93b      	cbnz	r3, 80093e2 <xQueueSemaphoreTake+0x11c>
						taskENTER_CRITICAL();
 80093d2:	f7ff fa3f 	bl	8008854 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80093d6:	68a0      	ldr	r0, [r4, #8]
 80093d8:	f000 fdc4 	bl	8009f64 <xTaskPriorityInherit>
 80093dc:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80093de:	f7ff fa5d 	bl	800889c <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80093e2:	9901      	ldr	r1, [sp, #4]
 80093e4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80093e8:	f000 fcd4 	bl	8009d94 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80093ec:	4620      	mov	r0, r4
 80093ee:	f7ff fbb2 	bl	8008b56 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80093f2:	f000 fb7f 	bl	8009af4 <xTaskResumeAll>
 80093f6:	b948      	cbnz	r0, 800940c <xQueueSemaphoreTake+0x146>
					portYIELD_WITHIN_API();
 80093f8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80093fc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009400:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009404:	f3bf 8f4f 	dsb	sy
 8009408:	f3bf 8f6f 	isb	sy
 800940c:	2601      	movs	r6, #1
 800940e:	e77d      	b.n	800930c <xQueueSemaphoreTake+0x46>
				prvUnlockQueue( pxQueue );
 8009410:	4620      	mov	r0, r4
 8009412:	f7ff fba0 	bl	8008b56 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009416:	f000 fb6d 	bl	8009af4 <xTaskResumeAll>
 800941a:	e7f7      	b.n	800940c <xQueueSemaphoreTake+0x146>
			prvUnlockQueue( pxQueue );
 800941c:	4620      	mov	r0, r4
 800941e:	f7ff fb9a 	bl	8008b56 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009422:	f000 fb67 	bl	8009af4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009426:	4620      	mov	r0, r4
 8009428:	f7ff fb42 	bl	8008ab0 <prvIsQueueEmpty>
 800942c:	2800      	cmp	r0, #0
 800942e:	d0ed      	beq.n	800940c <xQueueSemaphoreTake+0x146>
					if( xInheritanceOccurred != pdFALSE )
 8009430:	b165      	cbz	r5, 800944c <xQueueSemaphoreTake+0x186>
						taskENTER_CRITICAL();
 8009432:	f7ff fa0f 	bl	8008854 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8009436:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8009438:	b119      	cbz	r1, 8009442 <xQueueSemaphoreTake+0x17c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800943a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800943c:	6819      	ldr	r1, [r3, #0]
 800943e:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009442:	68a0      	ldr	r0, [r4, #8]
 8009444:	f000 fe12 	bl	800a06c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 8009448:	f7ff fa28 	bl	800889c <vPortExitCritical>
					return errQUEUE_EMPTY;
 800944c:	2000      	movs	r0, #0
 800944e:	e77c      	b.n	800934a <xQueueSemaphoreTake+0x84>

08009450 <xQueueTakeMutexRecursive>:
	{
 8009450:	b570      	push	{r4, r5, r6, lr}
 8009452:	460d      	mov	r5, r1
		configASSERT( pxMutex );
 8009454:	4604      	mov	r4, r0
 8009456:	b950      	cbnz	r0, 800946e <xQueueTakeMutexRecursive+0x1e>
 8009458:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800945c:	b672      	cpsid	i
 800945e:	f383 8811 	msr	BASEPRI, r3
 8009462:	f3bf 8f6f 	isb	sy
 8009466:	f3bf 8f4f 	dsb	sy
 800946a:	b662      	cpsie	i
 800946c:	e7fe      	b.n	800946c <xQueueTakeMutexRecursive+0x1c>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 800946e:	6886      	ldr	r6, [r0, #8]
 8009470:	f000 fd62 	bl	8009f38 <xTaskGetCurrentTaskHandle>
 8009474:	4286      	cmp	r6, r0
 8009476:	d104      	bne.n	8009482 <xQueueTakeMutexRecursive+0x32>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 8009478:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
 800947a:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 800947c:	3301      	adds	r3, #1
 800947e:	60e3      	str	r3, [r4, #12]
	}
 8009480:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 8009482:	4629      	mov	r1, r5
 8009484:	4620      	mov	r0, r4
 8009486:	f7ff ff1e 	bl	80092c6 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
 800948a:	2800      	cmp	r0, #0
 800948c:	d0f8      	beq.n	8009480 <xQueueTakeMutexRecursive+0x30>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 800948e:	68e3      	ldr	r3, [r4, #12]
 8009490:	3301      	adds	r3, #1
 8009492:	60e3      	str	r3, [r4, #12]
 8009494:	e7f4      	b.n	8009480 <xQueueTakeMutexRecursive+0x30>

08009496 <xQueueReceiveFromISR>:
{
 8009496:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800949a:	4689      	mov	r9, r1
 800949c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800949e:	4604      	mov	r4, r0
 80094a0:	b950      	cbnz	r0, 80094b8 <xQueueReceiveFromISR+0x22>
 80094a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094a6:	b672      	cpsid	i
 80094a8:	f383 8811 	msr	BASEPRI, r3
 80094ac:	f3bf 8f6f 	isb	sy
 80094b0:	f3bf 8f4f 	dsb	sy
 80094b4:	b662      	cpsie	i
 80094b6:	e7fe      	b.n	80094b6 <xQueueReceiveFromISR+0x20>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80094b8:	b961      	cbnz	r1, 80094d4 <xQueueReceiveFromISR+0x3e>
 80094ba:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80094bc:	b153      	cbz	r3, 80094d4 <xQueueReceiveFromISR+0x3e>
 80094be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094c2:	b672      	cpsid	i
 80094c4:	f383 8811 	msr	BASEPRI, r3
 80094c8:	f3bf 8f6f 	isb	sy
 80094cc:	f3bf 8f4f 	dsb	sy
 80094d0:	b662      	cpsie	i
 80094d2:	e7fe      	b.n	80094d2 <xQueueReceiveFromISR+0x3c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80094d4:	f7ff faba 	bl	8008a4c <vPortValidateInterruptPriority>
	__asm volatile
 80094d8:	f3ef 8711 	mrs	r7, BASEPRI
 80094dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094e0:	b672      	cpsid	i
 80094e2:	f383 8811 	msr	BASEPRI, r3
 80094e6:	f3bf 8f6f 	isb	sy
 80094ea:	f3bf 8f4f 	dsb	sy
 80094ee:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80094f0:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80094f2:	b30d      	cbz	r5, 8009538 <xQueueReceiveFromISR+0xa2>
			const int8_t cRxLock = pxQueue->cRxLock;
 80094f4:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80094f8:	4649      	mov	r1, r9
 80094fa:	4620      	mov	r0, r4
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80094fc:	3d01      	subs	r5, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 80094fe:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009500:	f7ff fb14 	bl	8008b2c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009504:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 8009506:	1c73      	adds	r3, r6, #1
 8009508:	d111      	bne.n	800952e <xQueueReceiveFromISR+0x98>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800950a:	6923      	ldr	r3, [r4, #16]
 800950c:	b153      	cbz	r3, 8009524 <xQueueReceiveFromISR+0x8e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800950e:	f104 0010 	add.w	r0, r4, #16
 8009512:	f000 fc7b 	bl	8009e0c <xTaskRemoveFromEventList>
 8009516:	b128      	cbz	r0, 8009524 <xQueueReceiveFromISR+0x8e>
						if( pxHigherPriorityTaskWoken != NULL )
 8009518:	f1b8 0f00 	cmp.w	r8, #0
 800951c:	d002      	beq.n	8009524 <xQueueReceiveFromISR+0x8e>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800951e:	2301      	movs	r3, #1
 8009520:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 8009524:	2001      	movs	r0, #1
	__asm volatile
 8009526:	f387 8811 	msr	BASEPRI, r7
}
 800952a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800952e:	3601      	adds	r6, #1
 8009530:	b276      	sxtb	r6, r6
 8009532:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 8009536:	e7f5      	b.n	8009524 <xQueueReceiveFromISR+0x8e>
			xReturn = pdFAIL;
 8009538:	4628      	mov	r0, r5
 800953a:	e7f4      	b.n	8009526 <xQueueReceiveFromISR+0x90>

0800953c <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800953c:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800953e:	4a07      	ldr	r2, [pc, #28]	@ (800955c <vQueueAddToRegistry+0x20>)
	{
 8009540:	b530      	push	{r4, r5, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009542:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8009546:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800954a:	b91d      	cbnz	r5, 8009554 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800954c:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009550:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8009552:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009554:	3301      	adds	r3, #1
 8009556:	2b08      	cmp	r3, #8
 8009558:	d1f3      	bne.n	8009542 <vQueueAddToRegistry+0x6>
 800955a:	e7fa      	b.n	8009552 <vQueueAddToRegistry+0x16>
 800955c:	20014a4c 	.word	0x20014a4c

08009560 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009560:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009562:	4a09      	ldr	r2, [pc, #36]	@ (8009588 <vQueueUnregisterQueue+0x28>)
	{
 8009564:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009566:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800956a:	00dc      	lsls	r4, r3, #3
 800956c:	4281      	cmp	r1, r0
 800956e:	d106      	bne.n	800957e <vQueueUnregisterQueue+0x1e>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009570:	4a06      	ldr	r2, [pc, #24]	@ (800958c <vQueueUnregisterQueue+0x2c>)
 8009572:	2100      	movs	r1, #0
 8009574:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8009578:	4422      	add	r2, r4
 800957a:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800957c:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800957e:	3301      	adds	r3, #1
 8009580:	2b08      	cmp	r3, #8
 8009582:	d1f0      	bne.n	8009566 <vQueueUnregisterQueue+0x6>
 8009584:	e7fa      	b.n	800957c <vQueueUnregisterQueue+0x1c>
 8009586:	bf00      	nop
 8009588:	20014a50 	.word	0x20014a50
 800958c:	20014a4c 	.word	0x20014a4c

08009590 <vQueueDelete>:
{
 8009590:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009592:	b950      	cbnz	r0, 80095aa <vQueueDelete+0x1a>
	__asm volatile
 8009594:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009598:	b672      	cpsid	i
 800959a:	f383 8811 	msr	BASEPRI, r3
 800959e:	f3bf 8f6f 	isb	sy
 80095a2:	f3bf 8f4f 	dsb	sy
 80095a6:	b662      	cpsie	i
 80095a8:	e7fe      	b.n	80095a8 <vQueueDelete+0x18>
		vQueueUnregisterQueue( pxQueue );
 80095aa:	f7ff ffd9 	bl	8009560 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80095ae:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 80095b2:	b91b      	cbnz	r3, 80095bc <vQueueDelete+0x2c>
}
 80095b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 80095b8:	f7ff b868 	b.w	800868c <vPortFree>
}
 80095bc:	bd10      	pop	{r4, pc}

080095be <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80095be:	b570      	push	{r4, r5, r6, lr}
 80095c0:	4604      	mov	r4, r0
 80095c2:	460d      	mov	r5, r1
 80095c4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80095c6:	f7ff f945 	bl	8008854 <vPortEnterCritical>
 80095ca:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80095ce:	2bff      	cmp	r3, #255	@ 0xff
 80095d0:	d102      	bne.n	80095d8 <vQueueWaitForMessageRestricted+0x1a>
 80095d2:	2300      	movs	r3, #0
 80095d4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 80095d8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80095dc:	2bff      	cmp	r3, #255	@ 0xff
 80095de:	d102      	bne.n	80095e6 <vQueueWaitForMessageRestricted+0x28>
 80095e0:	2300      	movs	r3, #0
 80095e2:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 80095e6:	f7ff f959 	bl	800889c <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80095ea:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80095ec:	b92b      	cbnz	r3, 80095fa <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80095ee:	4632      	mov	r2, r6
 80095f0:	4629      	mov	r1, r5
 80095f2:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80095f6:	f000 fbe9 	bl	8009dcc <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80095fa:	4620      	mov	r0, r4
	}
 80095fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009600:	f7ff baa9 	b.w	8008b56 <prvUnlockQueue>

08009604 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009604:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009608:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800960a:	f7ff f923 	bl	8008854 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800960e:	4b2f      	ldr	r3, [pc, #188]	@ (80096cc <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8009610:	4e2f      	ldr	r6, [pc, #188]	@ (80096d0 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8009612:	681a      	ldr	r2, [r3, #0]
 8009614:	4f2f      	ldr	r7, [pc, #188]	@ (80096d4 <prvAddNewTaskToReadyList+0xd0>)
 8009616:	3201      	adds	r2, #1
 8009618:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800961a:	6835      	ldr	r5, [r6, #0]
 800961c:	2d00      	cmp	r5, #0
 800961e:	d14a      	bne.n	80096b6 <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009620:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009622:	681b      	ldr	r3, [r3, #0]
 8009624:	2b01      	cmp	r3, #1
 8009626:	d11f      	bne.n	8009668 <prvAddNewTaskToReadyList+0x64>
 8009628:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800962a:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800962c:	4640      	mov	r0, r8
 800962e:	f7ff f869 	bl	8008704 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009632:	f108 0814 	add.w	r8, r8, #20
 8009636:	2d38      	cmp	r5, #56	@ 0x38
 8009638:	d1f7      	bne.n	800962a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800963a:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 80096fc <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 800963e:	4d26      	ldr	r5, [pc, #152]	@ (80096d8 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8009640:	4640      	mov	r0, r8
 8009642:	f7ff f85f 	bl	8008704 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009646:	4628      	mov	r0, r5
 8009648:	f7ff f85c 	bl	8008704 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800964c:	4823      	ldr	r0, [pc, #140]	@ (80096dc <prvAddNewTaskToReadyList+0xd8>)
 800964e:	f7ff f859 	bl	8008704 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009652:	4823      	ldr	r0, [pc, #140]	@ (80096e0 <prvAddNewTaskToReadyList+0xdc>)
 8009654:	f7ff f856 	bl	8008704 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009658:	4822      	ldr	r0, [pc, #136]	@ (80096e4 <prvAddNewTaskToReadyList+0xe0>)
 800965a:	f7ff f853 	bl	8008704 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800965e:	4b22      	ldr	r3, [pc, #136]	@ (80096e8 <prvAddNewTaskToReadyList+0xe4>)
 8009660:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009664:	4b21      	ldr	r3, [pc, #132]	@ (80096ec <prvAddNewTaskToReadyList+0xe8>)
 8009666:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009668:	4a21      	ldr	r2, [pc, #132]	@ (80096f0 <prvAddNewTaskToReadyList+0xec>)
 800966a:	6813      	ldr	r3, [r2, #0]
 800966c:	3301      	adds	r3, #1
 800966e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009670:	4a20      	ldr	r2, [pc, #128]	@ (80096f4 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009672:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009674:	6811      	ldr	r1, [r2, #0]
 8009676:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009678:	428b      	cmp	r3, r1
 800967a:	d900      	bls.n	800967e <prvAddNewTaskToReadyList+0x7a>
 800967c:	6013      	str	r3, [r2, #0]
 800967e:	2014      	movs	r0, #20
 8009680:	1d21      	adds	r1, r4, #4
 8009682:	fb00 7003 	mla	r0, r0, r3, r7
 8009686:	f7ff f84b 	bl	8008720 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800968a:	f7ff f907 	bl	800889c <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800968e:	4b1a      	ldr	r3, [pc, #104]	@ (80096f8 <prvAddNewTaskToReadyList+0xf4>)
 8009690:	681b      	ldr	r3, [r3, #0]
 8009692:	b173      	cbz	r3, 80096b2 <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009694:	6833      	ldr	r3, [r6, #0]
 8009696:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009698:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800969a:	429a      	cmp	r2, r3
 800969c:	d209      	bcs.n	80096b2 <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
 800969e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80096a2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80096a6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80096aa:	f3bf 8f4f 	dsb	sy
 80096ae:	f3bf 8f6f 	isb	sy
}
 80096b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 80096b6:	4b10      	ldr	r3, [pc, #64]	@ (80096f8 <prvAddNewTaskToReadyList+0xf4>)
 80096b8:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80096ba:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 80096bc:	2a00      	cmp	r2, #0
 80096be:	d1d3      	bne.n	8009668 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80096c0:	6832      	ldr	r2, [r6, #0]
 80096c2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80096c4:	429a      	cmp	r2, r3
 80096c6:	d8cf      	bhi.n	8009668 <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 80096c8:	6034      	str	r4, [r6, #0]
 80096ca:	e7cd      	b.n	8009668 <prvAddNewTaskToReadyList+0x64>
 80096cc:	20014ab0 	.word	0x20014ab0
 80096d0:	20014f84 	.word	0x20014f84
 80096d4:	20014b24 	.word	0x20014b24
 80096d8:	20014afc 	.word	0x20014afc
 80096dc:	20014ae0 	.word	0x20014ae0
 80096e0:	20014acc 	.word	0x20014acc
 80096e4:	20014ab4 	.word	0x20014ab4
 80096e8:	20014af8 	.word	0x20014af8
 80096ec:	20014af4 	.word	0x20014af4
 80096f0:	20014a94 	.word	0x20014a94
 80096f4:	20014aa8 	.word	0x20014aa8
 80096f8:	20014aa4 	.word	0x20014aa4
 80096fc:	20014b10 	.word	0x20014b10

08009700 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009700:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009702:	4b15      	ldr	r3, [pc, #84]	@ (8009758 <prvAddCurrentTaskToDelayedList+0x58>)
{
 8009704:	4606      	mov	r6, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009706:	4d15      	ldr	r5, [pc, #84]	@ (800975c <prvAddCurrentTaskToDelayedList+0x5c>)
{
 8009708:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 800970a:	681c      	ldr	r4, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800970c:	6828      	ldr	r0, [r5, #0]
 800970e:	3004      	adds	r0, #4
 8009710:	f7ff f828 	bl	8008764 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009714:	1c73      	adds	r3, r6, #1
 8009716:	d107      	bne.n	8009728 <prvAddCurrentTaskToDelayedList+0x28>
 8009718:	b137      	cbz	r7, 8009728 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800971a:	6829      	ldr	r1, [r5, #0]
 800971c:	4810      	ldr	r0, [pc, #64]	@ (8009760 <prvAddCurrentTaskToDelayedList+0x60>)
 800971e:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009720:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009724:	f7fe bffc 	b.w	8008720 <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
 8009728:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800972a:	682b      	ldr	r3, [r5, #0]
 800972c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800972e:	d307      	bcc.n	8009740 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009730:	4b0c      	ldr	r3, [pc, #48]	@ (8009764 <prvAddCurrentTaskToDelayedList+0x64>)
 8009732:	6818      	ldr	r0, [r3, #0]
 8009734:	6829      	ldr	r1, [r5, #0]
}
 8009736:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800973a:	3104      	adds	r1, #4
 800973c:	f7fe bffb 	b.w	8008736 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009740:	4b09      	ldr	r3, [pc, #36]	@ (8009768 <prvAddCurrentTaskToDelayedList+0x68>)
 8009742:	6818      	ldr	r0, [r3, #0]
 8009744:	6829      	ldr	r1, [r5, #0]
 8009746:	3104      	adds	r1, #4
 8009748:	f7fe fff5 	bl	8008736 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800974c:	4b07      	ldr	r3, [pc, #28]	@ (800976c <prvAddCurrentTaskToDelayedList+0x6c>)
 800974e:	681a      	ldr	r2, [r3, #0]
 8009750:	42a2      	cmp	r2, r4
 8009752:	d900      	bls.n	8009756 <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
 8009754:	601c      	str	r4, [r3, #0]
}
 8009756:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009758:	20014aac 	.word	0x20014aac
 800975c:	20014f84 	.word	0x20014f84
 8009760:	20014ab4 	.word	0x20014ab4
 8009764:	20014af4 	.word	0x20014af4
 8009768:	20014af8 	.word	0x20014af8
 800976c:	20014a90 	.word	0x20014a90

08009770 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009770:	4a06      	ldr	r2, [pc, #24]	@ (800978c <prvResetNextTaskUnblockTime+0x1c>)
 8009772:	6813      	ldr	r3, [r2, #0]
 8009774:	6819      	ldr	r1, [r3, #0]
 8009776:	4b06      	ldr	r3, [pc, #24]	@ (8009790 <prvResetNextTaskUnblockTime+0x20>)
 8009778:	b919      	cbnz	r1, 8009782 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800977a:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800977e:	601a      	str	r2, [r3, #0]
}
 8009780:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009782:	6812      	ldr	r2, [r2, #0]
 8009784:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009786:	68d2      	ldr	r2, [r2, #12]
 8009788:	6852      	ldr	r2, [r2, #4]
 800978a:	e7f8      	b.n	800977e <prvResetNextTaskUnblockTime+0xe>
 800978c:	20014af8 	.word	0x20014af8
 8009790:	20014a90 	.word	0x20014a90

08009794 <prvDeleteTCB>:
	{
 8009794:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009796:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 800979a:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800979c:	b93b      	cbnz	r3, 80097ae <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800979e:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 80097a0:	f7fe ff74 	bl	800868c <vPortFree>
				vPortFree( pxTCB );
 80097a4:	4620      	mov	r0, r4
	}
 80097a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80097aa:	f7fe bf6f 	b.w	800868c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80097ae:	2b01      	cmp	r3, #1
 80097b0:	d0f9      	beq.n	80097a6 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80097b2:	2b02      	cmp	r3, #2
 80097b4:	d00a      	beq.n	80097cc <prvDeleteTCB+0x38>
 80097b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097ba:	b672      	cpsid	i
 80097bc:	f383 8811 	msr	BASEPRI, r3
 80097c0:	f3bf 8f6f 	isb	sy
 80097c4:	f3bf 8f4f 	dsb	sy
 80097c8:	b662      	cpsie	i
 80097ca:	e7fe      	b.n	80097ca <prvDeleteTCB+0x36>
	}
 80097cc:	bd10      	pop	{r4, pc}
	...

080097d0 <prvIdleTask>:
{
 80097d0:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80097d2:	4c14      	ldr	r4, [pc, #80]	@ (8009824 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80097d4:	4f14      	ldr	r7, [pc, #80]	@ (8009828 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 80097d6:	4d15      	ldr	r5, [pc, #84]	@ (800982c <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80097d8:	6823      	ldr	r3, [r4, #0]
 80097da:	b983      	cbnz	r3, 80097fe <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80097dc:	4b14      	ldr	r3, [pc, #80]	@ (8009830 <prvIdleTask+0x60>)
 80097de:	681b      	ldr	r3, [r3, #0]
 80097e0:	2b01      	cmp	r3, #1
 80097e2:	d909      	bls.n	80097f8 <prvIdleTask+0x28>
				taskYIELD();
 80097e4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80097e8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80097ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80097f0:	f3bf 8f4f 	dsb	sy
 80097f4:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 80097f8:	f7f6 fed2 	bl	80005a0 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 80097fc:	e7eb      	b.n	80097d6 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80097fe:	f7ff f829 	bl	8008854 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009802:	68fb      	ldr	r3, [r7, #12]
 8009804:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009806:	1d30      	adds	r0, r6, #4
 8009808:	f7fe ffac 	bl	8008764 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800980c:	682b      	ldr	r3, [r5, #0]
 800980e:	3b01      	subs	r3, #1
 8009810:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009812:	6823      	ldr	r3, [r4, #0]
 8009814:	3b01      	subs	r3, #1
 8009816:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009818:	f7ff f840 	bl	800889c <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800981c:	4630      	mov	r0, r6
 800981e:	f7ff ffb9 	bl	8009794 <prvDeleteTCB>
 8009822:	e7d9      	b.n	80097d8 <prvIdleTask+0x8>
 8009824:	20014ac8 	.word	0x20014ac8
 8009828:	20014acc 	.word	0x20014acc
 800982c:	20014ab0 	.word	0x20014ab0
 8009830:	20014b24 	.word	0x20014b24

08009834 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009834:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009838:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800983a:	4607      	mov	r7, r0
 800983c:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800983e:	21a5      	movs	r1, #165	@ 0xa5
 8009840:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009842:	4698      	mov	r8, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009844:	3e04      	subs	r6, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009846:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800984a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800984c:	f015 fb52 	bl	801eef4 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009850:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009852:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009854:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 8009858:	b3b5      	cbz	r5, 80098c8 <prvInitialiseNewTask.constprop.0+0x94>
 800985a:	1e6b      	subs	r3, r5, #1
 800985c:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8009860:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009862:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009866:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 800986a:	b109      	cbz	r1, 8009870 <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800986c:	42ab      	cmp	r3, r5
 800986e:	d1f8      	bne.n	8009862 <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009870:	2300      	movs	r3, #0
 8009872:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009876:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 8009878:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800987c:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800987e:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009880:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009884:	bf28      	it	cs
 8009886:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
 8009888:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800988a:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800988c:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009890:	f7fe ff43 	bl	800871a <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009894:	f104 0018 	add.w	r0, r4, #24
 8009898:	f7fe ff3f 	bl	800871a <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800989c:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80098a0:	4642      	mov	r2, r8
 80098a2:	4639      	mov	r1, r7
 80098a4:	4630      	mov	r0, r6
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80098a6:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80098a8:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80098aa:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 80098ac:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80098b0:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80098b4:	f7fe ffa8 	bl	8008808 <pxPortInitialiseStack>
 80098b8:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80098ba:	f1b9 0f00 	cmp.w	r9, #0
 80098be:	d001      	beq.n	80098c4 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80098c0:	f8c9 4000 	str.w	r4, [r9]
}
 80098c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80098c8:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 80098cc:	e7d3      	b.n	8009876 <prvInitialiseNewTask.constprop.0+0x42>

080098ce <xTaskCreateStatic>:
	{
 80098ce:	b570      	push	{r4, r5, r6, lr}
 80098d0:	b086      	sub	sp, #24
 80098d2:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 80098d6:	b955      	cbnz	r5, 80098ee <xTaskCreateStatic+0x20>
 80098d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80098dc:	b672      	cpsid	i
 80098de:	f383 8811 	msr	BASEPRI, r3
 80098e2:	f3bf 8f6f 	isb	sy
 80098e6:	f3bf 8f4f 	dsb	sy
 80098ea:	b662      	cpsie	i
 80098ec:	e7fe      	b.n	80098ec <xTaskCreateStatic+0x1e>
		configASSERT( pxTaskBuffer != NULL );
 80098ee:	b954      	cbnz	r4, 8009906 <xTaskCreateStatic+0x38>
 80098f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80098f4:	b672      	cpsid	i
 80098f6:	f383 8811 	msr	BASEPRI, r3
 80098fa:	f3bf 8f6f 	isb	sy
 80098fe:	f3bf 8f4f 	dsb	sy
 8009902:	b662      	cpsie	i
 8009904:	e7fe      	b.n	8009904 <xTaskCreateStatic+0x36>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009906:	2660      	movs	r6, #96	@ 0x60
 8009908:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800990a:	9e05      	ldr	r6, [sp, #20]
 800990c:	2e60      	cmp	r6, #96	@ 0x60
 800990e:	d00a      	beq.n	8009926 <xTaskCreateStatic+0x58>
 8009910:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009914:	b672      	cpsid	i
 8009916:	f383 8811 	msr	BASEPRI, r3
 800991a:	f3bf 8f6f 	isb	sy
 800991e:	f3bf 8f4f 	dsb	sy
 8009922:	b662      	cpsie	i
 8009924:	e7fe      	b.n	8009924 <xTaskCreateStatic+0x56>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009926:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009928:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800992a:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800992c:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009930:	ad04      	add	r5, sp, #16
 8009932:	9402      	str	r4, [sp, #8]
 8009934:	9501      	str	r5, [sp, #4]
 8009936:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8009938:	9500      	str	r5, [sp, #0]
 800993a:	f7ff ff7b 	bl	8009834 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800993e:	4620      	mov	r0, r4
 8009940:	f7ff fe60 	bl	8009604 <prvAddNewTaskToReadyList>
	}
 8009944:	9804      	ldr	r0, [sp, #16]
 8009946:	b006      	add	sp, #24
 8009948:	bd70      	pop	{r4, r5, r6, pc}

0800994a <xTaskCreate>:
	{
 800994a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800994e:	4607      	mov	r7, r0
 8009950:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009952:	0090      	lsls	r0, r2, #2
	{
 8009954:	4688      	mov	r8, r1
 8009956:	4616      	mov	r6, r2
 8009958:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800995a:	f7fe fe01 	bl	8008560 <pvPortMalloc>
			if( pxStack != NULL )
 800995e:	4605      	mov	r5, r0
 8009960:	b920      	cbnz	r0, 800996c <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009962:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8009966:	b005      	add	sp, #20
 8009968:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800996c:	2060      	movs	r0, #96	@ 0x60
 800996e:	f7fe fdf7 	bl	8008560 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009972:	4604      	mov	r4, r0
 8009974:	b198      	cbz	r0, 800999e <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009976:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 8009978:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800997a:	4632      	mov	r2, r6
 800997c:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800997e:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009982:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009984:	9002      	str	r0, [sp, #8]
 8009986:	4638      	mov	r0, r7
 8009988:	9301      	str	r3, [sp, #4]
 800998a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800998c:	9300      	str	r3, [sp, #0]
 800998e:	464b      	mov	r3, r9
 8009990:	f7ff ff50 	bl	8009834 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009994:	4620      	mov	r0, r4
 8009996:	f7ff fe35 	bl	8009604 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800999a:	2001      	movs	r0, #1
 800999c:	e7e3      	b.n	8009966 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 800999e:	4628      	mov	r0, r5
 80099a0:	f7fe fe74 	bl	800868c <vPortFree>
		if( pxNewTCB != NULL )
 80099a4:	e7dd      	b.n	8009962 <xTaskCreate+0x18>
	...

080099a8 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80099a8:	4a02      	ldr	r2, [pc, #8]	@ (80099b4 <vTaskSuspendAll+0xc>)
 80099aa:	6813      	ldr	r3, [r2, #0]
 80099ac:	3301      	adds	r3, #1
 80099ae:	6013      	str	r3, [r2, #0]
}
 80099b0:	4770      	bx	lr
 80099b2:	bf00      	nop
 80099b4:	20014a8c 	.word	0x20014a8c

080099b8 <xTaskGetTickCount>:
		xTicks = xTickCount;
 80099b8:	4b01      	ldr	r3, [pc, #4]	@ (80099c0 <xTaskGetTickCount+0x8>)
 80099ba:	6818      	ldr	r0, [r3, #0]
}
 80099bc:	4770      	bx	lr
 80099be:	bf00      	nop
 80099c0:	20014aac 	.word	0x20014aac

080099c4 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80099c4:	4b40      	ldr	r3, [pc, #256]	@ (8009ac8 <xTaskIncrementTick+0x104>)
 80099c6:	681b      	ldr	r3, [r3, #0]
{
 80099c8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80099cc:	2b00      	cmp	r3, #0
 80099ce:	d173      	bne.n	8009ab8 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80099d0:	4b3e      	ldr	r3, [pc, #248]	@ (8009acc <xTaskIncrementTick+0x108>)
 80099d2:	681c      	ldr	r4, [r3, #0]
 80099d4:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 80099d6:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80099d8:	b9cc      	cbnz	r4, 8009a0e <xTaskIncrementTick+0x4a>
			taskSWITCH_DELAYED_LISTS();
 80099da:	4b3d      	ldr	r3, [pc, #244]	@ (8009ad0 <xTaskIncrementTick+0x10c>)
 80099dc:	681a      	ldr	r2, [r3, #0]
 80099de:	6812      	ldr	r2, [r2, #0]
 80099e0:	b152      	cbz	r2, 80099f8 <xTaskIncrementTick+0x34>
 80099e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80099e6:	b672      	cpsid	i
 80099e8:	f383 8811 	msr	BASEPRI, r3
 80099ec:	f3bf 8f6f 	isb	sy
 80099f0:	f3bf 8f4f 	dsb	sy
 80099f4:	b662      	cpsie	i
 80099f6:	e7fe      	b.n	80099f6 <xTaskIncrementTick+0x32>
 80099f8:	4a36      	ldr	r2, [pc, #216]	@ (8009ad4 <xTaskIncrementTick+0x110>)
 80099fa:	6819      	ldr	r1, [r3, #0]
 80099fc:	6810      	ldr	r0, [r2, #0]
 80099fe:	6018      	str	r0, [r3, #0]
 8009a00:	6011      	str	r1, [r2, #0]
 8009a02:	4a35      	ldr	r2, [pc, #212]	@ (8009ad8 <xTaskIncrementTick+0x114>)
 8009a04:	6813      	ldr	r3, [r2, #0]
 8009a06:	3301      	adds	r3, #1
 8009a08:	6013      	str	r3, [r2, #0]
 8009a0a:	f7ff feb1 	bl	8009770 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009a0e:	4d33      	ldr	r5, [pc, #204]	@ (8009adc <xTaskIncrementTick+0x118>)
BaseType_t xSwitchRequired = pdFALSE;
 8009a10:	f04f 0b00 	mov.w	fp, #0
 8009a14:	4e32      	ldr	r6, [pc, #200]	@ (8009ae0 <xTaskIncrementTick+0x11c>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009a16:	682b      	ldr	r3, [r5, #0]
 8009a18:	4f32      	ldr	r7, [pc, #200]	@ (8009ae4 <xTaskIncrementTick+0x120>)
 8009a1a:	42a3      	cmp	r3, r4
 8009a1c:	d911      	bls.n	8009a42 <xTaskIncrementTick+0x7e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009a1e:	683a      	ldr	r2, [r7, #0]
 8009a20:	2114      	movs	r1, #20
 8009a22:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009a24:	434a      	muls	r2, r1
 8009a26:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8009a28:	2a02      	cmp	r2, #2
 8009a2a:	bf28      	it	cs
 8009a2c:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 8009a30:	4a2d      	ldr	r2, [pc, #180]	@ (8009ae8 <xTaskIncrementTick+0x124>)
 8009a32:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 8009a34:	2a00      	cmp	r2, #0
}
 8009a36:	bf0c      	ite	eq
 8009a38:	4658      	moveq	r0, fp
 8009a3a:	2001      	movne	r0, #1
 8009a3c:	b003      	add	sp, #12
 8009a3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009a42:	f8df 908c 	ldr.w	r9, [pc, #140]	@ 8009ad0 <xTaskIncrementTick+0x10c>
					prvAddTaskToReadyList( pxTCB );
 8009a46:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 8009af0 <xTaskIncrementTick+0x12c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009a4a:	f8d9 2000 	ldr.w	r2, [r9]
 8009a4e:	6812      	ldr	r2, [r2, #0]
 8009a50:	b91a      	cbnz	r2, 8009a5a <xTaskIncrementTick+0x96>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009a52:	f04f 32ff 	mov.w	r2, #4294967295
 8009a56:	602a      	str	r2, [r5, #0]
					break;
 8009a58:	e7e1      	b.n	8009a1e <xTaskIncrementTick+0x5a>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a5a:	f8d9 2000 	ldr.w	r2, [r9]
 8009a5e:	68d2      	ldr	r2, [r2, #12]
 8009a60:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009a64:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8009a68:	428c      	cmp	r4, r1
 8009a6a:	d201      	bcs.n	8009a70 <xTaskIncrementTick+0xac>
						xNextTaskUnblockTime = xItemValue;
 8009a6c:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009a6e:	e7d6      	b.n	8009a1e <xTaskIncrementTick+0x5a>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009a70:	f108 0304 	add.w	r3, r8, #4
 8009a74:	4618      	mov	r0, r3
 8009a76:	9301      	str	r3, [sp, #4]
 8009a78:	f7fe fe74 	bl	8008764 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009a7c:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8009a80:	b119      	cbz	r1, 8009a8a <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009a82:	f108 0018 	add.w	r0, r8, #24
 8009a86:	f7fe fe6d 	bl	8008764 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009a8a:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8009a8e:	f8da 1000 	ldr.w	r1, [sl]
 8009a92:	4288      	cmp	r0, r1
 8009a94:	d901      	bls.n	8009a9a <xTaskIncrementTick+0xd6>
 8009a96:	f8ca 0000 	str.w	r0, [sl]
 8009a9a:	2314      	movs	r3, #20
 8009a9c:	9901      	ldr	r1, [sp, #4]
 8009a9e:	fb03 6000 	mla	r0, r3, r0, r6
 8009aa2:	f7fe fe3d 	bl	8008720 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009aa6:	6838      	ldr	r0, [r7, #0]
 8009aa8:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8009aac:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8009aae:	4291      	cmp	r1, r2
 8009ab0:	bf28      	it	cs
 8009ab2:	f04f 0b01 	movcs.w	fp, #1
 8009ab6:	e7c8      	b.n	8009a4a <xTaskIncrementTick+0x86>
		++uxPendedTicks;
 8009ab8:	4a0c      	ldr	r2, [pc, #48]	@ (8009aec <xTaskIncrementTick+0x128>)
BaseType_t xSwitchRequired = pdFALSE;
 8009aba:	f04f 0b00 	mov.w	fp, #0
		++uxPendedTicks;
 8009abe:	6813      	ldr	r3, [r2, #0]
 8009ac0:	3301      	adds	r3, #1
 8009ac2:	6013      	str	r3, [r2, #0]
 8009ac4:	e7b4      	b.n	8009a30 <xTaskIncrementTick+0x6c>
 8009ac6:	bf00      	nop
 8009ac8:	20014a8c 	.word	0x20014a8c
 8009acc:	20014aac 	.word	0x20014aac
 8009ad0:	20014af8 	.word	0x20014af8
 8009ad4:	20014af4 	.word	0x20014af4
 8009ad8:	20014a98 	.word	0x20014a98
 8009adc:	20014a90 	.word	0x20014a90
 8009ae0:	20014b24 	.word	0x20014b24
 8009ae4:	20014f84 	.word	0x20014f84
 8009ae8:	20014a9c 	.word	0x20014a9c
 8009aec:	20014aa0 	.word	0x20014aa0
 8009af0:	20014aa8 	.word	0x20014aa8

08009af4 <xTaskResumeAll>:
{
 8009af4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8009af8:	4c31      	ldr	r4, [pc, #196]	@ (8009bc0 <xTaskResumeAll+0xcc>)
 8009afa:	6823      	ldr	r3, [r4, #0]
 8009afc:	b953      	cbnz	r3, 8009b14 <xTaskResumeAll+0x20>
 8009afe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009b02:	b672      	cpsid	i
 8009b04:	f383 8811 	msr	BASEPRI, r3
 8009b08:	f3bf 8f6f 	isb	sy
 8009b0c:	f3bf 8f4f 	dsb	sy
 8009b10:	b662      	cpsie	i
 8009b12:	e7fe      	b.n	8009b12 <xTaskResumeAll+0x1e>
	taskENTER_CRITICAL();
 8009b14:	f7fe fe9e 	bl	8008854 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009b18:	6823      	ldr	r3, [r4, #0]
 8009b1a:	3b01      	subs	r3, #1
 8009b1c:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009b1e:	6824      	ldr	r4, [r4, #0]
 8009b20:	b12c      	cbz	r4, 8009b2e <xTaskResumeAll+0x3a>
BaseType_t xAlreadyYielded = pdFALSE;
 8009b22:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009b24:	f7fe feba 	bl	800889c <vPortExitCritical>
}
 8009b28:	4620      	mov	r0, r4
 8009b2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009b2e:	4b25      	ldr	r3, [pc, #148]	@ (8009bc4 <xTaskResumeAll+0xd0>)
 8009b30:	681b      	ldr	r3, [r3, #0]
 8009b32:	2b00      	cmp	r3, #0
 8009b34:	d0f5      	beq.n	8009b22 <xTaskResumeAll+0x2e>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009b36:	4d24      	ldr	r5, [pc, #144]	@ (8009bc8 <xTaskResumeAll+0xd4>)
					prvAddTaskToReadyList( pxTCB );
 8009b38:	4e24      	ldr	r6, [pc, #144]	@ (8009bcc <xTaskResumeAll+0xd8>)
 8009b3a:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8009bdc <xTaskResumeAll+0xe8>
 8009b3e:	e01d      	b.n	8009b7c <xTaskResumeAll+0x88>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b40:	68eb      	ldr	r3, [r5, #12]
 8009b42:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009b44:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009b46:	f104 0018 	add.w	r0, r4, #24
 8009b4a:	f7fe fe0b 	bl	8008764 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009b4e:	4638      	mov	r0, r7
 8009b50:	f7fe fe08 	bl	8008764 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009b54:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009b56:	6832      	ldr	r2, [r6, #0]
 8009b58:	4293      	cmp	r3, r2
 8009b5a:	d900      	bls.n	8009b5e <xTaskResumeAll+0x6a>
 8009b5c:	6033      	str	r3, [r6, #0]
 8009b5e:	2014      	movs	r0, #20
 8009b60:	4639      	mov	r1, r7
 8009b62:	fb00 8003 	mla	r0, r0, r3, r8
 8009b66:	f7fe fddb 	bl	8008720 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009b6a:	4b19      	ldr	r3, [pc, #100]	@ (8009bd0 <xTaskResumeAll+0xdc>)
 8009b6c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8009b6e:	681b      	ldr	r3, [r3, #0]
 8009b70:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009b72:	429a      	cmp	r2, r3
 8009b74:	d302      	bcc.n	8009b7c <xTaskResumeAll+0x88>
						xYieldPending = pdTRUE;
 8009b76:	4b17      	ldr	r3, [pc, #92]	@ (8009bd4 <xTaskResumeAll+0xe0>)
 8009b78:	2201      	movs	r2, #1
 8009b7a:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009b7c:	682b      	ldr	r3, [r5, #0]
 8009b7e:	2b00      	cmp	r3, #0
 8009b80:	d1de      	bne.n	8009b40 <xTaskResumeAll+0x4c>
				if( pxTCB != NULL )
 8009b82:	b10c      	cbz	r4, 8009b88 <xTaskResumeAll+0x94>
					prvResetNextTaskUnblockTime();
 8009b84:	f7ff fdf4 	bl	8009770 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009b88:	4d13      	ldr	r5, [pc, #76]	@ (8009bd8 <xTaskResumeAll+0xe4>)
 8009b8a:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009b8c:	b144      	cbz	r4, 8009ba0 <xTaskResumeAll+0xac>
								xYieldPending = pdTRUE;
 8009b8e:	4e11      	ldr	r6, [pc, #68]	@ (8009bd4 <xTaskResumeAll+0xe0>)
 8009b90:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009b92:	f7ff ff17 	bl	80099c4 <xTaskIncrementTick>
 8009b96:	b100      	cbz	r0, 8009b9a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009b98:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8009b9a:	3c01      	subs	r4, #1
 8009b9c:	d1f9      	bne.n	8009b92 <xTaskResumeAll+0x9e>
						uxPendedTicks = 0;
 8009b9e:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009ba0:	4b0c      	ldr	r3, [pc, #48]	@ (8009bd4 <xTaskResumeAll+0xe0>)
 8009ba2:	681b      	ldr	r3, [r3, #0]
 8009ba4:	2b00      	cmp	r3, #0
 8009ba6:	d0bc      	beq.n	8009b22 <xTaskResumeAll+0x2e>
					taskYIELD_IF_USING_PREEMPTION();
 8009ba8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009bac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009bb0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009bb4:	f3bf 8f4f 	dsb	sy
 8009bb8:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009bbc:	2401      	movs	r4, #1
 8009bbe:	e7b1      	b.n	8009b24 <xTaskResumeAll+0x30>
 8009bc0:	20014a8c 	.word	0x20014a8c
 8009bc4:	20014ab0 	.word	0x20014ab0
 8009bc8:	20014ae0 	.word	0x20014ae0
 8009bcc:	20014aa8 	.word	0x20014aa8
 8009bd0:	20014f84 	.word	0x20014f84
 8009bd4:	20014a9c 	.word	0x20014a9c
 8009bd8:	20014aa0 	.word	0x20014aa0
 8009bdc:	20014b24 	.word	0x20014b24

08009be0 <vTaskDelay>:
	{
 8009be0:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009be2:	b950      	cbnz	r0, 8009bfa <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009be4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009be8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009bec:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009bf0:	f3bf 8f4f 	dsb	sy
 8009bf4:	f3bf 8f6f 	isb	sy
	}
 8009bf8:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009bfa:	4b0b      	ldr	r3, [pc, #44]	@ (8009c28 <vTaskDelay+0x48>)
 8009bfc:	6819      	ldr	r1, [r3, #0]
 8009bfe:	b151      	cbz	r1, 8009c16 <vTaskDelay+0x36>
 8009c00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c04:	b672      	cpsid	i
 8009c06:	f383 8811 	msr	BASEPRI, r3
 8009c0a:	f3bf 8f6f 	isb	sy
 8009c0e:	f3bf 8f4f 	dsb	sy
 8009c12:	b662      	cpsie	i
 8009c14:	e7fe      	b.n	8009c14 <vTaskDelay+0x34>
			vTaskSuspendAll();
 8009c16:	f7ff fec7 	bl	80099a8 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009c1a:	f7ff fd71 	bl	8009700 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009c1e:	f7ff ff69 	bl	8009af4 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009c22:	2800      	cmp	r0, #0
 8009c24:	d0de      	beq.n	8009be4 <vTaskDelay+0x4>
 8009c26:	e7e7      	b.n	8009bf8 <vTaskDelay+0x18>
 8009c28:	20014a8c 	.word	0x20014a8c

08009c2c <vTaskSetApplicationTaskTag>:
	{
 8009c2c:	b538      	push	{r3, r4, r5, lr}
 8009c2e:	460d      	mov	r5, r1
		if( xTask == NULL )
 8009c30:	4604      	mov	r4, r0
 8009c32:	b908      	cbnz	r0, 8009c38 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8009c34:	4b04      	ldr	r3, [pc, #16]	@ (8009c48 <vTaskSetApplicationTaskTag+0x1c>)
 8009c36:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8009c38:	f7fe fe0c 	bl	8008854 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8009c3c:	6565      	str	r5, [r4, #84]	@ 0x54
	}
 8009c3e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8009c42:	f7fe be2b 	b.w	800889c <vPortExitCritical>
 8009c46:	bf00      	nop
 8009c48:	20014f84 	.word	0x20014f84

08009c4c <xTaskCallApplicationTaskHook>:
	{
 8009c4c:	4603      	mov	r3, r0
 8009c4e:	4608      	mov	r0, r1
		if( xTask == NULL )
 8009c50:	b90b      	cbnz	r3, 8009c56 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 8009c52:	4b03      	ldr	r3, [pc, #12]	@ (8009c60 <xTaskCallApplicationTaskHook+0x14>)
 8009c54:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8009c56:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009c58:	b103      	cbz	r3, 8009c5c <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8009c5a:	4718      	bx	r3
	}
 8009c5c:	4618      	mov	r0, r3
 8009c5e:	4770      	bx	lr
 8009c60:	20014f84 	.word	0x20014f84

08009c64 <vTaskStartScheduler>:
{
 8009c64:	b510      	push	{r4, lr}
 8009c66:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009c68:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009c6a:	aa07      	add	r2, sp, #28
 8009c6c:	a906      	add	r1, sp, #24
 8009c6e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009c70:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009c74:	f7fe fc36 	bl	80084e4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009c78:	9b05      	ldr	r3, [sp, #20]
 8009c7a:	9a07      	ldr	r2, [sp, #28]
 8009c7c:	9302      	str	r3, [sp, #8]
 8009c7e:	9b06      	ldr	r3, [sp, #24]
 8009c80:	491b      	ldr	r1, [pc, #108]	@ (8009cf0 <vTaskStartScheduler+0x8c>)
 8009c82:	481c      	ldr	r0, [pc, #112]	@ (8009cf4 <vTaskStartScheduler+0x90>)
 8009c84:	e9cd 4300 	strd	r4, r3, [sp]
 8009c88:	4623      	mov	r3, r4
 8009c8a:	f7ff fe20 	bl	80098ce <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009c8e:	b360      	cbz	r0, 8009cea <vTaskStartScheduler+0x86>
			xReturn = xTimerCreateTimerTask();
 8009c90:	f000 fa9c 	bl	800a1cc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009c94:	2801      	cmp	r0, #1
 8009c96:	d11b      	bne.n	8009cd0 <vTaskStartScheduler+0x6c>
 8009c98:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c9c:	b672      	cpsid	i
 8009c9e:	f383 8811 	msr	BASEPRI, r3
 8009ca2:	f3bf 8f6f 	isb	sy
 8009ca6:	f3bf 8f4f 	dsb	sy
 8009caa:	b662      	cpsie	i
		xNextTaskUnblockTime = portMAX_DELAY;
 8009cac:	f04f 32ff 	mov.w	r2, #4294967295
 8009cb0:	4b11      	ldr	r3, [pc, #68]	@ (8009cf8 <vTaskStartScheduler+0x94>)
		traceTASK_SWITCHED_IN();
 8009cb2:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
 8009cb4:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009cb6:	4b11      	ldr	r3, [pc, #68]	@ (8009cfc <vTaskStartScheduler+0x98>)
 8009cb8:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009cba:	4b11      	ldr	r3, [pc, #68]	@ (8009d00 <vTaskStartScheduler+0x9c>)
 8009cbc:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8009cbe:	4b11      	ldr	r3, [pc, #68]	@ (8009d04 <vTaskStartScheduler+0xa0>)
 8009cc0:	6818      	ldr	r0, [r3, #0]
 8009cc2:	f7ff ffc3 	bl	8009c4c <xTaskCallApplicationTaskHook>
}
 8009cc6:	b008      	add	sp, #32
 8009cc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009ccc:	f7fe be5c 	b.w	8008988 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009cd0:	3001      	adds	r0, #1
 8009cd2:	d10a      	bne.n	8009cea <vTaskStartScheduler+0x86>
 8009cd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009cd8:	b672      	cpsid	i
 8009cda:	f383 8811 	msr	BASEPRI, r3
 8009cde:	f3bf 8f6f 	isb	sy
 8009ce2:	f3bf 8f4f 	dsb	sy
 8009ce6:	b662      	cpsie	i
 8009ce8:	e7fe      	b.n	8009ce8 <vTaskStartScheduler+0x84>
}
 8009cea:	b008      	add	sp, #32
 8009cec:	bd10      	pop	{r4, pc}
 8009cee:	bf00      	nop
 8009cf0:	0802121c 	.word	0x0802121c
 8009cf4:	080097d1 	.word	0x080097d1
 8009cf8:	20014a90 	.word	0x20014a90
 8009cfc:	20014aa4 	.word	0x20014aa4
 8009d00:	20014aac 	.word	0x20014aac
 8009d04:	20014f84 	.word	0x20014f84

08009d08 <vTaskSwitchContext>:
{
 8009d08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009d0a:	4b1d      	ldr	r3, [pc, #116]	@ (8009d80 <vTaskSwitchContext+0x78>)
 8009d0c:	681a      	ldr	r2, [r3, #0]
 8009d0e:	4b1d      	ldr	r3, [pc, #116]	@ (8009d84 <vTaskSwitchContext+0x7c>)
 8009d10:	b112      	cbz	r2, 8009d18 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009d12:	2201      	movs	r2, #1
 8009d14:	601a      	str	r2, [r3, #0]
}
 8009d16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8009d18:	4c1b      	ldr	r4, [pc, #108]	@ (8009d88 <vTaskSwitchContext+0x80>)
 8009d1a:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d1c:	4e1b      	ldr	r6, [pc, #108]	@ (8009d8c <vTaskSwitchContext+0x84>)
 8009d1e:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
 8009d20:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 8009d22:	6820      	ldr	r0, [r4, #0]
 8009d24:	f7ff ff92 	bl	8009c4c <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d28:	6832      	ldr	r2, [r6, #0]
 8009d2a:	4919      	ldr	r1, [pc, #100]	@ (8009d90 <vTaskSwitchContext+0x88>)
 8009d2c:	fb07 f302 	mul.w	r3, r7, r2
 8009d30:	58cd      	ldr	r5, [r1, r3]
 8009d32:	18c8      	adds	r0, r1, r3
 8009d34:	b1ad      	cbz	r5, 8009d62 <vTaskSwitchContext+0x5a>
 8009d36:	6845      	ldr	r5, [r0, #4]
 8009d38:	3308      	adds	r3, #8
 8009d3a:	686d      	ldr	r5, [r5, #4]
 8009d3c:	440b      	add	r3, r1
 8009d3e:	429d      	cmp	r5, r3
 8009d40:	6045      	str	r5, [r0, #4]
 8009d42:	bf04      	itt	eq
 8009d44:	686b      	ldreq	r3, [r5, #4]
 8009d46:	6043      	streq	r3, [r0, #4]
 8009d48:	2314      	movs	r3, #20
 8009d4a:	fb03 1102 	mla	r1, r3, r2, r1
 8009d4e:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
 8009d50:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d52:	68db      	ldr	r3, [r3, #12]
 8009d54:	6023      	str	r3, [r4, #0]
 8009d56:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 8009d58:	6820      	ldr	r0, [r4, #0]
}
 8009d5a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 8009d5e:	f7ff bf75 	b.w	8009c4c <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d62:	b952      	cbnz	r2, 8009d7a <vTaskSwitchContext+0x72>
 8009d64:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d68:	b672      	cpsid	i
 8009d6a:	f383 8811 	msr	BASEPRI, r3
 8009d6e:	f3bf 8f6f 	isb	sy
 8009d72:	f3bf 8f4f 	dsb	sy
 8009d76:	b662      	cpsie	i
 8009d78:	e7fe      	b.n	8009d78 <vTaskSwitchContext+0x70>
 8009d7a:	3a01      	subs	r2, #1
 8009d7c:	e7d6      	b.n	8009d2c <vTaskSwitchContext+0x24>
 8009d7e:	bf00      	nop
 8009d80:	20014a8c 	.word	0x20014a8c
 8009d84:	20014a9c 	.word	0x20014a9c
 8009d88:	20014f84 	.word	0x20014f84
 8009d8c:	20014aa8 	.word	0x20014aa8
 8009d90:	20014b24 	.word	0x20014b24

08009d94 <vTaskPlaceOnEventList>:
{
 8009d94:	b510      	push	{r4, lr}
 8009d96:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009d98:	b950      	cbnz	r0, 8009db0 <vTaskPlaceOnEventList+0x1c>
 8009d9a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d9e:	b672      	cpsid	i
 8009da0:	f383 8811 	msr	BASEPRI, r3
 8009da4:	f3bf 8f6f 	isb	sy
 8009da8:	f3bf 8f4f 	dsb	sy
 8009dac:	b662      	cpsie	i
 8009dae:	e7fe      	b.n	8009dae <vTaskPlaceOnEventList+0x1a>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009db0:	4b05      	ldr	r3, [pc, #20]	@ (8009dc8 <vTaskPlaceOnEventList+0x34>)
 8009db2:	6819      	ldr	r1, [r3, #0]
 8009db4:	3118      	adds	r1, #24
 8009db6:	f7fe fcbe 	bl	8008736 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009dba:	4620      	mov	r0, r4
 8009dbc:	2101      	movs	r1, #1
}
 8009dbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009dc2:	f7ff bc9d 	b.w	8009700 <prvAddCurrentTaskToDelayedList>
 8009dc6:	bf00      	nop
 8009dc8:	20014f84 	.word	0x20014f84

08009dcc <vTaskPlaceOnEventListRestricted>:
	{
 8009dcc:	b538      	push	{r3, r4, r5, lr}
 8009dce:	460d      	mov	r5, r1
 8009dd0:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009dd2:	b950      	cbnz	r0, 8009dea <vTaskPlaceOnEventListRestricted+0x1e>
 8009dd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009dd8:	b672      	cpsid	i
 8009dda:	f383 8811 	msr	BASEPRI, r3
 8009dde:	f3bf 8f6f 	isb	sy
 8009de2:	f3bf 8f4f 	dsb	sy
 8009de6:	b662      	cpsie	i
 8009de8:	e7fe      	b.n	8009de8 <vTaskPlaceOnEventListRestricted+0x1c>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009dea:	4b07      	ldr	r3, [pc, #28]	@ (8009e08 <vTaskPlaceOnEventListRestricted+0x3c>)
 8009dec:	6819      	ldr	r1, [r3, #0]
 8009dee:	3118      	adds	r1, #24
 8009df0:	f7fe fc96 	bl	8008720 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009df4:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009df6:	4621      	mov	r1, r4
 8009df8:	bf0c      	ite	eq
 8009dfa:	4628      	moveq	r0, r5
 8009dfc:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8009e00:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009e04:	f7ff bc7c 	b.w	8009700 <prvAddCurrentTaskToDelayedList>
 8009e08:	20014f84 	.word	0x20014f84

08009e0c <xTaskRemoveFromEventList>:
{
 8009e0c:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009e0e:	68c3      	ldr	r3, [r0, #12]
 8009e10:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8009e12:	b954      	cbnz	r4, 8009e2a <xTaskRemoveFromEventList+0x1e>
 8009e14:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e18:	b672      	cpsid	i
 8009e1a:	f383 8811 	msr	BASEPRI, r3
 8009e1e:	f3bf 8f6f 	isb	sy
 8009e22:	f3bf 8f4f 	dsb	sy
 8009e26:	b662      	cpsie	i
 8009e28:	e7fe      	b.n	8009e28 <xTaskRemoveFromEventList+0x1c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009e2a:	f104 0518 	add.w	r5, r4, #24
 8009e2e:	4628      	mov	r0, r5
 8009e30:	f7fe fc98 	bl	8008764 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009e34:	4b11      	ldr	r3, [pc, #68]	@ (8009e7c <xTaskRemoveFromEventList+0x70>)
 8009e36:	681b      	ldr	r3, [r3, #0]
 8009e38:	b9d3      	cbnz	r3, 8009e70 <xTaskRemoveFromEventList+0x64>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8009e3a:	1d25      	adds	r5, r4, #4
 8009e3c:	4628      	mov	r0, r5
 8009e3e:	f7fe fc91 	bl	8008764 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009e42:	4a0f      	ldr	r2, [pc, #60]	@ (8009e80 <xTaskRemoveFromEventList+0x74>)
 8009e44:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009e46:	6811      	ldr	r1, [r2, #0]
 8009e48:	428b      	cmp	r3, r1
 8009e4a:	d900      	bls.n	8009e4e <xTaskRemoveFromEventList+0x42>
 8009e4c:	6013      	str	r3, [r2, #0]
 8009e4e:	2014      	movs	r0, #20
 8009e50:	4a0c      	ldr	r2, [pc, #48]	@ (8009e84 <xTaskRemoveFromEventList+0x78>)
 8009e52:	4629      	mov	r1, r5
 8009e54:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009e58:	f7fe fc62 	bl	8008720 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8009e5c:	4b0a      	ldr	r3, [pc, #40]	@ (8009e88 <xTaskRemoveFromEventList+0x7c>)
 8009e5e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8009e60:	681b      	ldr	r3, [r3, #0]
 8009e62:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009e64:	429a      	cmp	r2, r3
 8009e66:	d906      	bls.n	8009e76 <xTaskRemoveFromEventList+0x6a>
		xYieldPending = pdTRUE;
 8009e68:	2001      	movs	r0, #1
 8009e6a:	4b08      	ldr	r3, [pc, #32]	@ (8009e8c <xTaskRemoveFromEventList+0x80>)
 8009e6c:	6018      	str	r0, [r3, #0]
}
 8009e6e:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009e70:	4629      	mov	r1, r5
 8009e72:	4807      	ldr	r0, [pc, #28]	@ (8009e90 <xTaskRemoveFromEventList+0x84>)
 8009e74:	e7f0      	b.n	8009e58 <xTaskRemoveFromEventList+0x4c>
		xReturn = pdFALSE;
 8009e76:	2000      	movs	r0, #0
	return xReturn;
 8009e78:	e7f9      	b.n	8009e6e <xTaskRemoveFromEventList+0x62>
 8009e7a:	bf00      	nop
 8009e7c:	20014a8c 	.word	0x20014a8c
 8009e80:	20014aa8 	.word	0x20014aa8
 8009e84:	20014b24 	.word	0x20014b24
 8009e88:	20014f84 	.word	0x20014f84
 8009e8c:	20014a9c 	.word	0x20014a9c
 8009e90:	20014ae0 	.word	0x20014ae0

08009e94 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009e94:	4b03      	ldr	r3, [pc, #12]	@ (8009ea4 <vTaskInternalSetTimeOutState+0x10>)
 8009e96:	681b      	ldr	r3, [r3, #0]
 8009e98:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8009e9a:	4b03      	ldr	r3, [pc, #12]	@ (8009ea8 <vTaskInternalSetTimeOutState+0x14>)
 8009e9c:	681b      	ldr	r3, [r3, #0]
 8009e9e:	6043      	str	r3, [r0, #4]
}
 8009ea0:	4770      	bx	lr
 8009ea2:	bf00      	nop
 8009ea4:	20014a98 	.word	0x20014a98
 8009ea8:	20014aac 	.word	0x20014aac

08009eac <xTaskCheckForTimeOut>:
{
 8009eac:	b570      	push	{r4, r5, r6, lr}
 8009eae:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009eb0:	4605      	mov	r5, r0
 8009eb2:	b950      	cbnz	r0, 8009eca <xTaskCheckForTimeOut+0x1e>
 8009eb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009eb8:	b672      	cpsid	i
 8009eba:	f383 8811 	msr	BASEPRI, r3
 8009ebe:	f3bf 8f6f 	isb	sy
 8009ec2:	f3bf 8f4f 	dsb	sy
 8009ec6:	b662      	cpsie	i
 8009ec8:	e7fe      	b.n	8009ec8 <xTaskCheckForTimeOut+0x1c>
	configASSERT( pxTicksToWait );
 8009eca:	b951      	cbnz	r1, 8009ee2 <xTaskCheckForTimeOut+0x36>
 8009ecc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ed0:	b672      	cpsid	i
 8009ed2:	f383 8811 	msr	BASEPRI, r3
 8009ed6:	f3bf 8f6f 	isb	sy
 8009eda:	f3bf 8f4f 	dsb	sy
 8009ede:	b662      	cpsie	i
 8009ee0:	e7fe      	b.n	8009ee0 <xTaskCheckForTimeOut+0x34>
	taskENTER_CRITICAL();
 8009ee2:	f7fe fcb7 	bl	8008854 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8009ee6:	4b0f      	ldr	r3, [pc, #60]	@ (8009f24 <xTaskCheckForTimeOut+0x78>)
 8009ee8:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009eea:	6823      	ldr	r3, [r4, #0]
 8009eec:	1c5a      	adds	r2, r3, #1
 8009eee:	d010      	beq.n	8009f12 <xTaskCheckForTimeOut+0x66>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009ef0:	480d      	ldr	r0, [pc, #52]	@ (8009f28 <xTaskCheckForTimeOut+0x7c>)
 8009ef2:	682e      	ldr	r6, [r5, #0]
 8009ef4:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009ef6:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009ef8:	4286      	cmp	r6, r0
 8009efa:	d001      	beq.n	8009f00 <xTaskCheckForTimeOut+0x54>
 8009efc:	428a      	cmp	r2, r1
 8009efe:	d90f      	bls.n	8009f20 <xTaskCheckForTimeOut+0x74>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009f00:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8009f02:	4283      	cmp	r3, r0
 8009f04:	d90a      	bls.n	8009f1c <xTaskCheckForTimeOut+0x70>
			*pxTicksToWait -= xElapsedTime;
 8009f06:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009f08:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 8009f0a:	4413      	add	r3, r2
 8009f0c:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009f0e:	f7ff ffc1 	bl	8009e94 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8009f12:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009f14:	f7fe fcc2 	bl	800889c <vPortExitCritical>
}
 8009f18:	4620      	mov	r0, r4
 8009f1a:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009f1c:	2300      	movs	r3, #0
 8009f1e:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8009f20:	2401      	movs	r4, #1
 8009f22:	e7f7      	b.n	8009f14 <xTaskCheckForTimeOut+0x68>
 8009f24:	20014aac 	.word	0x20014aac
 8009f28:	20014a98 	.word	0x20014a98

08009f2c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009f2c:	4b01      	ldr	r3, [pc, #4]	@ (8009f34 <vTaskMissedYield+0x8>)
 8009f2e:	2201      	movs	r2, #1
 8009f30:	601a      	str	r2, [r3, #0]
}
 8009f32:	4770      	bx	lr
 8009f34:	20014a9c 	.word	0x20014a9c

08009f38 <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
 8009f38:	4b01      	ldr	r3, [pc, #4]	@ (8009f40 <xTaskGetCurrentTaskHandle+0x8>)
 8009f3a:	6818      	ldr	r0, [r3, #0]
	}
 8009f3c:	4770      	bx	lr
 8009f3e:	bf00      	nop
 8009f40:	20014f84 	.word	0x20014f84

08009f44 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009f44:	4b05      	ldr	r3, [pc, #20]	@ (8009f5c <xTaskGetSchedulerState+0x18>)
 8009f46:	681b      	ldr	r3, [r3, #0]
 8009f48:	b133      	cbz	r3, 8009f58 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009f4a:	4b05      	ldr	r3, [pc, #20]	@ (8009f60 <xTaskGetSchedulerState+0x1c>)
 8009f4c:	6818      	ldr	r0, [r3, #0]
 8009f4e:	fab0 f080 	clz	r0, r0
 8009f52:	0940      	lsrs	r0, r0, #5
 8009f54:	0040      	lsls	r0, r0, #1
 8009f56:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009f58:	2001      	movs	r0, #1
	}
 8009f5a:	4770      	bx	lr
 8009f5c:	20014aa4 	.word	0x20014aa4
 8009f60:	20014a8c 	.word	0x20014a8c

08009f64 <xTaskPriorityInherit>:
	{
 8009f64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8009f66:	4604      	mov	r4, r0
 8009f68:	b338      	cbz	r0, 8009fba <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009f6a:	4d1a      	ldr	r5, [pc, #104]	@ (8009fd4 <xTaskPriorityInherit+0x70>)
 8009f6c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8009f6e:	682a      	ldr	r2, [r5, #0]
 8009f70:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009f72:	4293      	cmp	r3, r2
 8009f74:	d226      	bcs.n	8009fc4 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009f76:	6982      	ldr	r2, [r0, #24]
 8009f78:	2a00      	cmp	r2, #0
 8009f7a:	db04      	blt.n	8009f86 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009f7c:	682a      	ldr	r2, [r5, #0]
 8009f7e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009f80:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
 8009f84:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009f86:	2214      	movs	r2, #20
 8009f88:	4e13      	ldr	r6, [pc, #76]	@ (8009fd8 <xTaskPriorityInherit+0x74>)
 8009f8a:	fb02 6303 	mla	r3, r2, r3, r6
 8009f8e:	6962      	ldr	r2, [r4, #20]
 8009f90:	429a      	cmp	r2, r3
 8009f92:	d113      	bne.n	8009fbc <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009f94:	1d27      	adds	r7, r4, #4
 8009f96:	4638      	mov	r0, r7
 8009f98:	f7fe fbe4 	bl	8008764 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009f9c:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009f9e:	4a0f      	ldr	r2, [pc, #60]	@ (8009fdc <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009fa0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009fa2:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009fa4:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009fa6:	428b      	cmp	r3, r1
 8009fa8:	d900      	bls.n	8009fac <xTaskPriorityInherit+0x48>
 8009faa:	6013      	str	r3, [r2, #0]
 8009fac:	2014      	movs	r0, #20
 8009fae:	4639      	mov	r1, r7
 8009fb0:	fb00 6003 	mla	r0, r0, r3, r6
 8009fb4:	f7fe fbb4 	bl	8008720 <vListInsertEnd>
				xReturn = pdTRUE;
 8009fb8:	2001      	movs	r0, #1
	}
 8009fba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009fbc:	682b      	ldr	r3, [r5, #0]
 8009fbe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009fc0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8009fc2:	e7f9      	b.n	8009fb8 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009fc4:	682b      	ldr	r3, [r5, #0]
 8009fc6:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8009fc8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009fca:	4298      	cmp	r0, r3
 8009fcc:	bf2c      	ite	cs
 8009fce:	2000      	movcs	r0, #0
 8009fd0:	2001      	movcc	r0, #1
 8009fd2:	e7f2      	b.n	8009fba <xTaskPriorityInherit+0x56>
 8009fd4:	20014f84 	.word	0x20014f84
 8009fd8:	20014b24 	.word	0x20014b24
 8009fdc:	20014aa8 	.word	0x20014aa8

08009fe0 <xTaskPriorityDisinherit>:
	{
 8009fe0:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009fe2:	b908      	cbnz	r0, 8009fe8 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8009fe4:	2000      	movs	r0, #0
	}
 8009fe6:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009fe8:	4b1d      	ldr	r3, [pc, #116]	@ (800a060 <xTaskPriorityDisinherit+0x80>)
 8009fea:	681c      	ldr	r4, [r3, #0]
 8009fec:	4284      	cmp	r4, r0
 8009fee:	d00a      	beq.n	800a006 <xTaskPriorityDisinherit+0x26>
 8009ff0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ff4:	b672      	cpsid	i
 8009ff6:	f383 8811 	msr	BASEPRI, r3
 8009ffa:	f3bf 8f6f 	isb	sy
 8009ffe:	f3bf 8f4f 	dsb	sy
 800a002:	b662      	cpsie	i
 800a004:	e7fe      	b.n	800a004 <xTaskPriorityDisinherit+0x24>
			configASSERT( pxTCB->uxMutexesHeld );
 800a006:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800a008:	b953      	cbnz	r3, 800a020 <xTaskPriorityDisinherit+0x40>
 800a00a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a00e:	b672      	cpsid	i
 800a010:	f383 8811 	msr	BASEPRI, r3
 800a014:	f3bf 8f6f 	isb	sy
 800a018:	f3bf 8f4f 	dsb	sy
 800a01c:	b662      	cpsie	i
 800a01e:	e7fe      	b.n	800a01e <xTaskPriorityDisinherit+0x3e>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a020:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
 800a022:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a024:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a026:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a028:	4291      	cmp	r1, r2
 800a02a:	d0db      	beq.n	8009fe4 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a02c:	2b00      	cmp	r3, #0
 800a02e:	d1d9      	bne.n	8009fe4 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a030:	1d25      	adds	r5, r4, #4
 800a032:	4628      	mov	r0, r5
 800a034:	f7fe fb96 	bl	8008764 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a038:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a03a:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a03e:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a040:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a042:	4a08      	ldr	r2, [pc, #32]	@ (800a064 <xTaskPriorityDisinherit+0x84>)
 800a044:	6811      	ldr	r1, [r2, #0]
 800a046:	428b      	cmp	r3, r1
 800a048:	d900      	bls.n	800a04c <xTaskPriorityDisinherit+0x6c>
 800a04a:	6013      	str	r3, [r2, #0]
 800a04c:	4a06      	ldr	r2, [pc, #24]	@ (800a068 <xTaskPriorityDisinherit+0x88>)
 800a04e:	2014      	movs	r0, #20
 800a050:	4629      	mov	r1, r5
 800a052:	fb00 2003 	mla	r0, r0, r3, r2
 800a056:	f7fe fb63 	bl	8008720 <vListInsertEnd>
					xReturn = pdTRUE;
 800a05a:	2001      	movs	r0, #1
		return xReturn;
 800a05c:	e7c3      	b.n	8009fe6 <xTaskPriorityDisinherit+0x6>
 800a05e:	bf00      	nop
 800a060:	20014f84 	.word	0x20014f84
 800a064:	20014aa8 	.word	0x20014aa8
 800a068:	20014b24 	.word	0x20014b24

0800a06c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a06c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a06e:	4604      	mov	r4, r0
 800a070:	2800      	cmp	r0, #0
 800a072:	d046      	beq.n	800a102 <vTaskPriorityDisinheritAfterTimeout+0x96>
			configASSERT( pxTCB->uxMutexesHeld );
 800a074:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800a076:	b952      	cbnz	r2, 800a08e <vTaskPriorityDisinheritAfterTimeout+0x22>
 800a078:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a07c:	b672      	cpsid	i
 800a07e:	f383 8811 	msr	BASEPRI, r3
 800a082:	f3bf 8f6f 	isb	sy
 800a086:	f3bf 8f4f 	dsb	sy
 800a08a:	b662      	cpsie	i
 800a08c:	e7fe      	b.n	800a08c <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a08e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800a090:	4299      	cmp	r1, r3
 800a092:	bf38      	it	cc
 800a094:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a096:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a098:	428b      	cmp	r3, r1
 800a09a:	d032      	beq.n	800a102 <vTaskPriorityDisinheritAfterTimeout+0x96>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a09c:	2a01      	cmp	r2, #1
 800a09e:	d130      	bne.n	800a102 <vTaskPriorityDisinheritAfterTimeout+0x96>
					configASSERT( pxTCB != pxCurrentTCB );
 800a0a0:	4a18      	ldr	r2, [pc, #96]	@ (800a104 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a0a2:	6812      	ldr	r2, [r2, #0]
 800a0a4:	4282      	cmp	r2, r0
 800a0a6:	d10a      	bne.n	800a0be <vTaskPriorityDisinheritAfterTimeout+0x52>
 800a0a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a0ac:	b672      	cpsid	i
 800a0ae:	f383 8811 	msr	BASEPRI, r3
 800a0b2:	f3bf 8f6f 	isb	sy
 800a0b6:	f3bf 8f4f 	dsb	sy
 800a0ba:	b662      	cpsie	i
 800a0bc:	e7fe      	b.n	800a0bc <vTaskPriorityDisinheritAfterTimeout+0x50>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a0be:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a0c0:	4d11      	ldr	r5, [pc, #68]	@ (800a108 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a0c2:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a0c4:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 800a0c8:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a0ca:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a0ce:	bfa8      	it	ge
 800a0d0:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a0d4:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a0d6:	bfa8      	it	ge
 800a0d8:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a0da:	429a      	cmp	r2, r3
 800a0dc:	d111      	bne.n	800a102 <vTaskPriorityDisinheritAfterTimeout+0x96>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a0de:	1d06      	adds	r6, r0, #4
 800a0e0:	4630      	mov	r0, r6
 800a0e2:	f7fe fb3f 	bl	8008764 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a0e6:	4a09      	ldr	r2, [pc, #36]	@ (800a10c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a0e8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a0ea:	6811      	ldr	r1, [r2, #0]
 800a0ec:	428b      	cmp	r3, r1
 800a0ee:	d900      	bls.n	800a0f2 <vTaskPriorityDisinheritAfterTimeout+0x86>
 800a0f0:	6013      	str	r3, [r2, #0]
 800a0f2:	2014      	movs	r0, #20
 800a0f4:	4631      	mov	r1, r6
 800a0f6:	fb00 5003 	mla	r0, r0, r3, r5
	}
 800a0fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 800a0fe:	f7fe bb0f 	b.w	8008720 <vListInsertEnd>
	}
 800a102:	bd70      	pop	{r4, r5, r6, pc}
 800a104:	20014f84 	.word	0x20014f84
 800a108:	20014b24 	.word	0x20014b24
 800a10c:	20014aa8 	.word	0x20014aa8

0800a110 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a110:	4b04      	ldr	r3, [pc, #16]	@ (800a124 <pvTaskIncrementMutexHeldCount+0x14>)
 800a112:	681a      	ldr	r2, [r3, #0]
 800a114:	b11a      	cbz	r2, 800a11e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a116:	6819      	ldr	r1, [r3, #0]
 800a118:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800a11a:	3201      	adds	r2, #1
 800a11c:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800a11e:	6818      	ldr	r0, [r3, #0]
	}
 800a120:	4770      	bx	lr
 800a122:	bf00      	nop
 800a124:	20014f84 	.word	0x20014f84

0800a128 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 800a128:	4291      	cmp	r1, r2
{
 800a12a:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a12c:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a12e:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a130:	d80a      	bhi.n	800a148 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a132:	1ad2      	subs	r2, r2, r3
 800a134:	6983      	ldr	r3, [r0, #24]
 800a136:	429a      	cmp	r2, r3
 800a138:	d20d      	bcs.n	800a156 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a13a:	1d01      	adds	r1, r0, #4
 800a13c:	4b07      	ldr	r3, [pc, #28]	@ (800a15c <prvInsertTimerInActiveList+0x34>)
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a13e:	6818      	ldr	r0, [r3, #0]
 800a140:	f7fe faf9 	bl	8008736 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a144:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 800a146:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a148:	429a      	cmp	r2, r3
 800a14a:	d201      	bcs.n	800a150 <prvInsertTimerInActiveList+0x28>
 800a14c:	4299      	cmp	r1, r3
 800a14e:	d202      	bcs.n	800a156 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a150:	1d01      	adds	r1, r0, #4
 800a152:	4b03      	ldr	r3, [pc, #12]	@ (800a160 <prvInsertTimerInActiveList+0x38>)
 800a154:	e7f3      	b.n	800a13e <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a156:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a158:	e7f5      	b.n	800a146 <prvInsertTimerInActiveList+0x1e>
 800a15a:	bf00      	nop
 800a15c:	20015084 	.word	0x20015084
 800a160:	20015088 	.word	0x20015088

0800a164 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a164:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a166:	4c11      	ldr	r4, [pc, #68]	@ (800a1ac <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a168:	f7fe fb74 	bl	8008854 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a16c:	6825      	ldr	r5, [r4, #0]
 800a16e:	b9bd      	cbnz	r5, 800a1a0 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a170:	4f0f      	ldr	r7, [pc, #60]	@ (800a1b0 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a172:	4e10      	ldr	r6, [pc, #64]	@ (800a1b4 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a174:	4638      	mov	r0, r7
 800a176:	f7fe fac5 	bl	8008704 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a17a:	4630      	mov	r0, r6
 800a17c:	f7fe fac2 	bl	8008704 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a180:	4b0d      	ldr	r3, [pc, #52]	@ (800a1b8 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a182:	4a0e      	ldr	r2, [pc, #56]	@ (800a1bc <prvCheckForValidListAndQueue+0x58>)
 800a184:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 800a186:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a188:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 800a18a:	4b0d      	ldr	r3, [pc, #52]	@ (800a1c0 <prvCheckForValidListAndQueue+0x5c>)
 800a18c:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a18e:	4b0d      	ldr	r3, [pc, #52]	@ (800a1c4 <prvCheckForValidListAndQueue+0x60>)
 800a190:	9500      	str	r5, [sp, #0]
 800a192:	f7fe fda5 	bl	8008ce0 <xQueueGenericCreateStatic>
 800a196:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a198:	b110      	cbz	r0, 800a1a0 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a19a:	490b      	ldr	r1, [pc, #44]	@ (800a1c8 <prvCheckForValidListAndQueue+0x64>)
 800a19c:	f7ff f9ce 	bl	800953c <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a1a0:	b003      	add	sp, #12
 800a1a2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a1a6:	f7fe bb79 	b.w	800889c <vPortExitCritical>
 800a1aa:	bf00      	nop
 800a1ac:	20015080 	.word	0x20015080
 800a1b0:	200150a0 	.word	0x200150a0
 800a1b4:	2001508c 	.word	0x2001508c
 800a1b8:	20015088 	.word	0x20015088
 800a1bc:	20014fd8 	.word	0x20014fd8
 800a1c0:	20015084 	.word	0x20015084
 800a1c4:	20014f88 	.word	0x20014f88
 800a1c8:	08021221 	.word	0x08021221

0800a1cc <xTimerCreateTimerTask>:
{
 800a1cc:	b510      	push	{r4, lr}
 800a1ce:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a1d0:	f7ff ffc8 	bl	800a164 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a1d4:	4b13      	ldr	r3, [pc, #76]	@ (800a224 <xTimerCreateTimerTask+0x58>)
 800a1d6:	681b      	ldr	r3, [r3, #0]
 800a1d8:	b1b3      	cbz	r3, 800a208 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a1da:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a1dc:	aa07      	add	r2, sp, #28
 800a1de:	a906      	add	r1, sp, #24
 800a1e0:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a1e2:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a1e6:	f7fe f989 	bl	80084fc <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a1ea:	9b05      	ldr	r3, [sp, #20]
 800a1ec:	9a07      	ldr	r2, [sp, #28]
 800a1ee:	9302      	str	r3, [sp, #8]
 800a1f0:	9b06      	ldr	r3, [sp, #24]
 800a1f2:	490d      	ldr	r1, [pc, #52]	@ (800a228 <xTimerCreateTimerTask+0x5c>)
 800a1f4:	9301      	str	r3, [sp, #4]
 800a1f6:	2302      	movs	r3, #2
 800a1f8:	480c      	ldr	r0, [pc, #48]	@ (800a22c <xTimerCreateTimerTask+0x60>)
 800a1fa:	9300      	str	r3, [sp, #0]
 800a1fc:	4623      	mov	r3, r4
 800a1fe:	f7ff fb66 	bl	80098ce <xTaskCreateStatic>
 800a202:	4b0b      	ldr	r3, [pc, #44]	@ (800a230 <xTimerCreateTimerTask+0x64>)
 800a204:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a206:	b950      	cbnz	r0, 800a21e <xTimerCreateTimerTask+0x52>
 800a208:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a20c:	b672      	cpsid	i
 800a20e:	f383 8811 	msr	BASEPRI, r3
 800a212:	f3bf 8f6f 	isb	sy
 800a216:	f3bf 8f4f 	dsb	sy
 800a21a:	b662      	cpsie	i
	configASSERT( xReturn );
 800a21c:	e7fe      	b.n	800a21c <xTimerCreateTimerTask+0x50>
}
 800a21e:	2001      	movs	r0, #1
 800a220:	b008      	add	sp, #32
 800a222:	bd10      	pop	{r4, pc}
 800a224:	20015080 	.word	0x20015080
 800a228:	08021226 	.word	0x08021226
 800a22c:	0800a335 	.word	0x0800a335
 800a230:	2001507c 	.word	0x2001507c

0800a234 <xTimerGenericCommand>:
{
 800a234:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a236:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a238:	4604      	mov	r4, r0
{
 800a23a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a23c:	b950      	cbnz	r0, 800a254 <xTimerGenericCommand+0x20>
 800a23e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a242:	b672      	cpsid	i
 800a244:	f383 8811 	msr	BASEPRI, r3
 800a248:	f3bf 8f6f 	isb	sy
 800a24c:	f3bf 8f4f 	dsb	sy
 800a250:	b662      	cpsie	i
 800a252:	e7fe      	b.n	800a252 <xTimerGenericCommand+0x1e>
	if( xTimerQueue != NULL )
 800a254:	4d0c      	ldr	r5, [pc, #48]	@ (800a288 <xTimerGenericCommand+0x54>)
 800a256:	6828      	ldr	r0, [r5, #0]
 800a258:	b178      	cbz	r0, 800a27a <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a25a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a25c:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a25e:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a262:	dc0c      	bgt.n	800a27e <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a264:	f7ff fe6e 	bl	8009f44 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a268:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a26a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a26c:	4669      	mov	r1, sp
 800a26e:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a270:	bf0c      	ite	eq
 800a272:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a274:	461a      	movne	r2, r3
 800a276:	f7fe fdb8 	bl	8008dea <xQueueGenericSend>
}
 800a27a:	b004      	add	sp, #16
 800a27c:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a27e:	2300      	movs	r3, #0
 800a280:	4669      	mov	r1, sp
 800a282:	f7fe febf 	bl	8009004 <xQueueGenericSendFromISR>
 800a286:	e7f8      	b.n	800a27a <xTimerGenericCommand+0x46>
 800a288:	20015080 	.word	0x20015080

0800a28c <prvSampleTimeNow>:
{
 800a28c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a290:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 800a330 <prvSampleTimeNow+0xa4>
{
 800a294:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a296:	f7ff fb8f 	bl	80099b8 <xTaskGetTickCount>
 800a29a:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a29c:	f8d8 3000 	ldr.w	r3, [r8]
 800a2a0:	4283      	cmp	r3, r0
 800a2a2:	d909      	bls.n	800a2b8 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a2a4:	4f20      	ldr	r7, [pc, #128]	@ (800a328 <prvSampleTimeNow+0x9c>)
 800a2a6:	683b      	ldr	r3, [r7, #0]
 800a2a8:	681a      	ldr	r2, [r3, #0]
 800a2aa:	b96a      	cbnz	r2, 800a2c8 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a2ac:	4a1f      	ldr	r2, [pc, #124]	@ (800a32c <prvSampleTimeNow+0xa0>)
 800a2ae:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 800a2b0:	6013      	str	r3, [r2, #0]
 800a2b2:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
 800a2b4:	6039      	str	r1, [r7, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a2b6:	e000      	b.n	800a2ba <prvSampleTimeNow+0x2e>
 800a2b8:	2300      	movs	r3, #0
}
 800a2ba:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800a2bc:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a2be:	f8c8 5000 	str.w	r5, [r8]
}
 800a2c2:	b002      	add	sp, #8
 800a2c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a2c8:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a2ca:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a2cc:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a2d0:	f104 0a04 	add.w	sl, r4, #4
 800a2d4:	4650      	mov	r0, sl
 800a2d6:	f7fe fa45 	bl	8008764 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a2da:	6a23      	ldr	r3, [r4, #32]
 800a2dc:	4620      	mov	r0, r4
 800a2de:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a2e0:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a2e4:	075b      	lsls	r3, r3, #29
 800a2e6:	d5de      	bpl.n	800a2a6 <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a2e8:	69a3      	ldr	r3, [r4, #24]
 800a2ea:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 800a2ec:	4599      	cmp	r9, r3
 800a2ee:	d206      	bcs.n	800a2fe <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a2f0:	4651      	mov	r1, sl
 800a2f2:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a2f4:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a2f6:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a2f8:	f7fe fa1d 	bl	8008736 <vListInsert>
 800a2fc:	e7d3      	b.n	800a2a6 <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a2fe:	2300      	movs	r3, #0
 800a300:	464a      	mov	r2, r9
 800a302:	4620      	mov	r0, r4
 800a304:	4619      	mov	r1, r3
 800a306:	9300      	str	r3, [sp, #0]
 800a308:	f7ff ff94 	bl	800a234 <xTimerGenericCommand>
				configASSERT( xResult );
 800a30c:	2800      	cmp	r0, #0
 800a30e:	d1ca      	bne.n	800a2a6 <prvSampleTimeNow+0x1a>
 800a310:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a314:	b672      	cpsid	i
 800a316:	f383 8811 	msr	BASEPRI, r3
 800a31a:	f3bf 8f6f 	isb	sy
 800a31e:	f3bf 8f4f 	dsb	sy
 800a322:	b662      	cpsie	i
 800a324:	e7fe      	b.n	800a324 <prvSampleTimeNow+0x98>
 800a326:	bf00      	nop
 800a328:	20015088 	.word	0x20015088
 800a32c:	20015084 	.word	0x20015084
 800a330:	20015078 	.word	0x20015078

0800a334 <prvTimerTask>:
{
 800a334:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a338:	4d71      	ldr	r5, [pc, #452]	@ (800a500 <prvTimerTask+0x1cc>)
{
 800a33a:	b089      	sub	sp, #36	@ 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a33c:	4e71      	ldr	r6, [pc, #452]	@ (800a504 <prvTimerTask+0x1d0>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a33e:	682b      	ldr	r3, [r5, #0]
 800a340:	f8d3 8000 	ldr.w	r8, [r3]
 800a344:	f1b8 0f00 	cmp.w	r8, #0
 800a348:	d037      	beq.n	800a3ba <prvTimerTask+0x86>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a34a:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a34c:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a34e:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
 800a352:	f7ff fb29 	bl	80099a8 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a356:	a804      	add	r0, sp, #16
 800a358:	f7ff ff98 	bl	800a28c <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a35c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a35e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a360:	2b00      	cmp	r3, #0
 800a362:	d16b      	bne.n	800a43c <prvTimerTask+0x108>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a364:	2c00      	cmp	r4, #0
 800a366:	d14e      	bne.n	800a406 <prvTimerTask+0xd2>
 800a368:	4540      	cmp	r0, r8
 800a36a:	d352      	bcc.n	800a412 <prvTimerTask+0xde>
				( void ) xTaskResumeAll();
 800a36c:	f7ff fbc2 	bl	8009af4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a370:	682b      	ldr	r3, [r5, #0]
 800a372:	68db      	ldr	r3, [r3, #12]
 800a374:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a376:	1d38      	adds	r0, r7, #4
 800a378:	f7fe f9f4 	bl	8008764 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a37c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800a380:	0758      	lsls	r0, r3, #29
 800a382:	d51c      	bpl.n	800a3be <prvTimerTask+0x8a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a384:	69b9      	ldr	r1, [r7, #24]
 800a386:	4643      	mov	r3, r8
 800a388:	464a      	mov	r2, r9
 800a38a:	4638      	mov	r0, r7
 800a38c:	4441      	add	r1, r8
 800a38e:	f7ff fecb 	bl	800a128 <prvInsertTimerInActiveList>
 800a392:	b1c0      	cbz	r0, 800a3c6 <prvTimerTask+0x92>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a394:	4623      	mov	r3, r4
 800a396:	4642      	mov	r2, r8
 800a398:	4621      	mov	r1, r4
 800a39a:	4638      	mov	r0, r7
 800a39c:	9400      	str	r4, [sp, #0]
 800a39e:	f7ff ff49 	bl	800a234 <xTimerGenericCommand>
			configASSERT( xResult );
 800a3a2:	b980      	cbnz	r0, 800a3c6 <prvTimerTask+0x92>
 800a3a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a3a8:	b672      	cpsid	i
 800a3aa:	f383 8811 	msr	BASEPRI, r3
 800a3ae:	f3bf 8f6f 	isb	sy
 800a3b2:	f3bf 8f4f 	dsb	sy
 800a3b6:	b662      	cpsie	i
 800a3b8:	e7fe      	b.n	800a3b8 <prvTimerTask+0x84>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a3ba:	2401      	movs	r4, #1
 800a3bc:	e7c9      	b.n	800a352 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a3be:	f023 0301 	bic.w	r3, r3, #1
 800a3c2:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a3c6:	6a3b      	ldr	r3, [r7, #32]
 800a3c8:	4638      	mov	r0, r7
 800a3ca:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a3cc:	2200      	movs	r2, #0
 800a3ce:	a904      	add	r1, sp, #16
 800a3d0:	6830      	ldr	r0, [r6, #0]
 800a3d2:	f7fe fed4 	bl	800917e <xQueueReceive>
 800a3d6:	2800      	cmp	r0, #0
 800a3d8:	d0b1      	beq.n	800a33e <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a3da:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a3dc:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a3de:	2b00      	cmp	r3, #0
 800a3e0:	db2f      	blt.n	800a442 <prvTimerTask+0x10e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a3e2:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a3e4:	6963      	ldr	r3, [r4, #20]
 800a3e6:	2b00      	cmp	r3, #0
 800a3e8:	d132      	bne.n	800a450 <prvTimerTask+0x11c>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a3ea:	a803      	add	r0, sp, #12
 800a3ec:	f7ff ff4e 	bl	800a28c <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a3f0:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a3f2:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a3f4:	2b09      	cmp	r3, #9
 800a3f6:	d8e9      	bhi.n	800a3cc <prvTimerTask+0x98>
 800a3f8:	e8df f003 	tbb	[pc, r3]
 800a3fc:	592e2e2e 	.word	0x592e2e2e
 800a400:	2e2e7a60 	.word	0x2e2e7a60
 800a404:	6059      	.short	0x6059
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a406:	4b40      	ldr	r3, [pc, #256]	@ (800a508 <prvTimerTask+0x1d4>)
 800a408:	681b      	ldr	r3, [r3, #0]
 800a40a:	681c      	ldr	r4, [r3, #0]
 800a40c:	fab4 f484 	clz	r4, r4
 800a410:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a412:	4622      	mov	r2, r4
 800a414:	eba8 0109 	sub.w	r1, r8, r9
 800a418:	6830      	ldr	r0, [r6, #0]
 800a41a:	f7ff f8d0 	bl	80095be <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a41e:	f7ff fb69 	bl	8009af4 <xTaskResumeAll>
 800a422:	2800      	cmp	r0, #0
 800a424:	d1d2      	bne.n	800a3cc <prvTimerTask+0x98>
					portYIELD_WITHIN_API();
 800a426:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a42a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a42e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a432:	f3bf 8f4f 	dsb	sy
 800a436:	f3bf 8f6f 	isb	sy
 800a43a:	e7c7      	b.n	800a3cc <prvTimerTask+0x98>
			( void ) xTaskResumeAll();
 800a43c:	f7ff fb5a 	bl	8009af4 <xTaskResumeAll>
}
 800a440:	e7c4      	b.n	800a3cc <prvTimerTask+0x98>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a442:	9b05      	ldr	r3, [sp, #20]
 800a444:	9907      	ldr	r1, [sp, #28]
 800a446:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a448:	9b04      	ldr	r3, [sp, #16]
 800a44a:	2b00      	cmp	r3, #0
 800a44c:	dbbe      	blt.n	800a3cc <prvTimerTask+0x98>
 800a44e:	e7c8      	b.n	800a3e2 <prvTimerTask+0xae>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a450:	1d20      	adds	r0, r4, #4
 800a452:	f7fe f987 	bl	8008764 <uxListRemove>
 800a456:	e7c8      	b.n	800a3ea <prvTimerTask+0xb6>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a458:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a45c:	4620      	mov	r0, r4
 800a45e:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a460:	f043 0301 	orr.w	r3, r3, #1
 800a464:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a468:	9b05      	ldr	r3, [sp, #20]
 800a46a:	4419      	add	r1, r3
 800a46c:	f7ff fe5c 	bl	800a128 <prvInsertTimerInActiveList>
 800a470:	2800      	cmp	r0, #0
 800a472:	d0ab      	beq.n	800a3cc <prvTimerTask+0x98>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a474:	6a23      	ldr	r3, [r4, #32]
 800a476:	4620      	mov	r0, r4
 800a478:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a47a:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a47e:	0759      	lsls	r1, r3, #29
 800a480:	d5a4      	bpl.n	800a3cc <prvTimerTask+0x98>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a482:	69a2      	ldr	r2, [r4, #24]
 800a484:	2300      	movs	r3, #0
 800a486:	9905      	ldr	r1, [sp, #20]
 800a488:	4620      	mov	r0, r4
 800a48a:	9300      	str	r3, [sp, #0]
 800a48c:	440a      	add	r2, r1
 800a48e:	4619      	mov	r1, r3
 800a490:	f7ff fed0 	bl	800a234 <xTimerGenericCommand>
							configASSERT( xResult );
 800a494:	2800      	cmp	r0, #0
 800a496:	d199      	bne.n	800a3cc <prvTimerTask+0x98>
 800a498:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a49c:	b672      	cpsid	i
 800a49e:	f383 8811 	msr	BASEPRI, r3
 800a4a2:	f3bf 8f6f 	isb	sy
 800a4a6:	f3bf 8f4f 	dsb	sy
 800a4aa:	b662      	cpsie	i
 800a4ac:	e7fe      	b.n	800a4ac <prvTimerTask+0x178>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a4ae:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a4b2:	f023 0301 	bic.w	r3, r3, #1
 800a4b6:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a4ba:	e787      	b.n	800a3cc <prvTimerTask+0x98>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a4bc:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a4c0:	f043 0301 	orr.w	r3, r3, #1
 800a4c4:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a4c8:	9905      	ldr	r1, [sp, #20]
 800a4ca:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a4cc:	b951      	cbnz	r1, 800a4e4 <prvTimerTask+0x1b0>
 800a4ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a4d2:	b672      	cpsid	i
 800a4d4:	f383 8811 	msr	BASEPRI, r3
 800a4d8:	f3bf 8f6f 	isb	sy
 800a4dc:	f3bf 8f4f 	dsb	sy
 800a4e0:	b662      	cpsie	i
 800a4e2:	e7fe      	b.n	800a4e2 <prvTimerTask+0x1ae>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a4e4:	4603      	mov	r3, r0
 800a4e6:	4401      	add	r1, r0
 800a4e8:	4620      	mov	r0, r4
 800a4ea:	f7ff fe1d 	bl	800a128 <prvInsertTimerInActiveList>
					break;
 800a4ee:	e76d      	b.n	800a3cc <prvTimerTask+0x98>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a4f0:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a4f4:	079a      	lsls	r2, r3, #30
 800a4f6:	d4dc      	bmi.n	800a4b2 <prvTimerTask+0x17e>
							vPortFree( pxTimer );
 800a4f8:	4620      	mov	r0, r4
 800a4fa:	f7fe f8c7 	bl	800868c <vPortFree>
 800a4fe:	e765      	b.n	800a3cc <prvTimerTask+0x98>
 800a500:	20015088 	.word	0x20015088
 800a504:	20015080 	.word	0x20015080
 800a508:	20015084 	.word	0x20015084

0800a50c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a50c:	8880      	ldrh	r0, [r0, #4]
 800a50e:	4770      	bx	lr

0800a510 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a510:	b570      	push	{r4, r5, r6, lr}
 800a512:	6803      	ldr	r3, [r0, #0]
 800a514:	460c      	mov	r4, r1
 800a516:	2100      	movs	r1, #0
 800a518:	4605      	mov	r5, r0
 800a51a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a51c:	4798      	blx	r3
 800a51e:	4606      	mov	r6, r0
 800a520:	682b      	ldr	r3, [r5, #0]
 800a522:	4628      	mov	r0, r5
 800a524:	1ba4      	subs	r4, r4, r6
 800a526:	6a1b      	ldr	r3, [r3, #32]
 800a528:	b2a4      	uxth	r4, r4
 800a52a:	4798      	blx	r3
 800a52c:	fbb4 f0f0 	udiv	r0, r4, r0
 800a530:	bd70      	pop	{r4, r5, r6, pc}

0800a532 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a532:	2300      	movs	r3, #0
 800a534:	8083      	strh	r3, [r0, #4]
 800a536:	4770      	bx	lr

0800a538 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a538:	b510      	push	{r4, lr}
 800a53a:	6803      	ldr	r3, [r0, #0]
 800a53c:	4604      	mov	r4, r0
 800a53e:	8881      	ldrh	r1, [r0, #4]
 800a540:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a542:	4798      	blx	r3
 800a544:	88a3      	ldrh	r3, [r4, #4]
 800a546:	3301      	adds	r3, #1
 800a548:	80a3      	strh	r3, [r4, #4]
 800a54a:	bd10      	pop	{r4, pc}

0800a54c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a54c:	6803      	ldr	r3, [r0, #0]
 800a54e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a550:	4718      	bx	r3

0800a552 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a552:	4770      	bx	lr

0800a554 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a554:	4a02      	ldr	r2, [pc, #8]	@ (800a560 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a556:	6002      	str	r2, [r0, #0]
 800a558:	2200      	movs	r2, #0
 800a55a:	8082      	strh	r2, [r0, #4]
 800a55c:	4770      	bx	lr
 800a55e:	bf00      	nop
 800a560:	08021238 	.word	0x08021238

0800a564 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a564:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a566:	2000      	movs	r0, #0
 800a568:	b12b      	cbz	r3, 800a576 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a56a:	b920      	cbnz	r0, 800a576 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a56c:	1a5a      	subs	r2, r3, r1
 800a56e:	699b      	ldr	r3, [r3, #24]
 800a570:	4250      	negs	r0, r2
 800a572:	4150      	adcs	r0, r2
 800a574:	e7f8      	b.n	800a568 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a576:	4770      	bx	lr

0800a578 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a578:	2300      	movs	r3, #0
 800a57a:	6148      	str	r0, [r1, #20]
 800a57c:	618b      	str	r3, [r1, #24]
 800a57e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a580:	b913      	cbnz	r3, 800a588 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a582:	6281      	str	r1, [r0, #40]	@ 0x28
 800a584:	4770      	bx	lr
 800a586:	4613      	mov	r3, r2
 800a588:	699a      	ldr	r2, [r3, #24]
 800a58a:	2a00      	cmp	r2, #0
 800a58c:	d1fb      	bne.n	800a586 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a58e:	6199      	str	r1, [r3, #24]
 800a590:	4770      	bx	lr

0800a592 <_ZN8touchgfx9Container9removeAllEv>:
 800a592:	2200      	movs	r2, #0
 800a594:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a596:	b123      	cbz	r3, 800a5a2 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a598:	6999      	ldr	r1, [r3, #24]
 800a59a:	6281      	str	r1, [r0, #40]	@ 0x28
 800a59c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a5a0:	e7f8      	b.n	800a594 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a5a2:	4770      	bx	lr

0800a5a4 <_ZN8touchgfx9Container6unlinkEv>:
 800a5a4:	2300      	movs	r3, #0
 800a5a6:	6283      	str	r3, [r0, #40]	@ 0x28
 800a5a8:	4770      	bx	lr

0800a5aa <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a5aa:	2200      	movs	r2, #0
 800a5ac:	8002      	strh	r2, [r0, #0]
 800a5ae:	8042      	strh	r2, [r0, #2]
 800a5b0:	8082      	strh	r2, [r0, #4]
 800a5b2:	80c2      	strh	r2, [r0, #6]
 800a5b4:	4770      	bx	lr

0800a5b6 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a5b6:	b570      	push	{r4, r5, r6, lr}
 800a5b8:	460d      	mov	r5, r1
 800a5ba:	4616      	mov	r6, r2
 800a5bc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a5be:	b13c      	cbz	r4, 800a5d0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a5c0:	6823      	ldr	r3, [r4, #0]
 800a5c2:	4620      	mov	r0, r4
 800a5c4:	4632      	mov	r2, r6
 800a5c6:	4629      	mov	r1, r5
 800a5c8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a5ca:	4798      	blx	r3
 800a5cc:	69a4      	ldr	r4, [r4, #24]
 800a5ce:	e7f6      	b.n	800a5be <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a5d0:	bd70      	pop	{r4, r5, r6, pc}

0800a5d2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a5d2:	b538      	push	{r3, r4, r5, lr}
 800a5d4:	460d      	mov	r5, r1
 800a5d6:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a5d8:	b134      	cbz	r4, 800a5e8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a5da:	682b      	ldr	r3, [r5, #0]
 800a5dc:	4621      	mov	r1, r4
 800a5de:	4628      	mov	r0, r5
 800a5e0:	689b      	ldr	r3, [r3, #8]
 800a5e2:	4798      	blx	r3
 800a5e4:	69a4      	ldr	r4, [r4, #24]
 800a5e6:	e7f7      	b.n	800a5d8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a5e8:	bd38      	pop	{r3, r4, r5, pc}

0800a5ea <_ZN8touchgfx9ContainerD1Ev>:
 800a5ea:	4770      	bx	lr

0800a5ec <_ZN8touchgfx9ContainerD0Ev>:
 800a5ec:	b510      	push	{r4, lr}
 800a5ee:	4604      	mov	r4, r0
 800a5f0:	212c      	movs	r1, #44	@ 0x2c
 800a5f2:	f014 f9b4 	bl	801e95e <_ZdlPvj>
 800a5f6:	4620      	mov	r0, r4
 800a5f8:	bd10      	pop	{r4, pc}

0800a5fa <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a5fa:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a5fc:	b19b      	cbz	r3, 800a626 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a5fe:	428b      	cmp	r3, r1
 800a600:	d109      	bne.n	800a616 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a602:	699a      	ldr	r2, [r3, #24]
 800a604:	2100      	movs	r1, #0
 800a606:	6159      	str	r1, [r3, #20]
 800a608:	6282      	str	r2, [r0, #40]	@ 0x28
 800a60a:	b902      	cbnz	r2, 800a60e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a60c:	4770      	bx	lr
 800a60e:	6199      	str	r1, [r3, #24]
 800a610:	4770      	bx	lr
 800a612:	4613      	mov	r3, r2
 800a614:	b13a      	cbz	r2, 800a626 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a616:	699a      	ldr	r2, [r3, #24]
 800a618:	428a      	cmp	r2, r1
 800a61a:	d1fa      	bne.n	800a612 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a61c:	698a      	ldr	r2, [r1, #24]
 800a61e:	619a      	str	r2, [r3, #24]
 800a620:	2300      	movs	r3, #0
 800a622:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a626:	4770      	bx	lr

0800a628 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a628:	b410      	push	{r4}
 800a62a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a62c:	4604      	mov	r4, r0
 800a62e:	b92b      	cbnz	r3, 800a63c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a630:	6803      	ldr	r3, [r0, #0]
 800a632:	4611      	mov	r1, r2
 800a634:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a638:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a63a:	4718      	bx	r3
 800a63c:	b941      	cbnz	r1, 800a650 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a63e:	6193      	str	r3, [r2, #24]
 800a640:	6282      	str	r2, [r0, #40]	@ 0x28
 800a642:	6154      	str	r4, [r2, #20]
 800a644:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a648:	4770      	bx	lr
 800a64a:	4603      	mov	r3, r0
 800a64c:	2800      	cmp	r0, #0
 800a64e:	d0f9      	beq.n	800a644 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a650:	4299      	cmp	r1, r3
 800a652:	6998      	ldr	r0, [r3, #24]
 800a654:	d1f9      	bne.n	800a64a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a656:	6190      	str	r0, [r2, #24]
 800a658:	618a      	str	r2, [r1, #24]
 800a65a:	e7f2      	b.n	800a642 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a65c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a65c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a660:	461f      	mov	r7, r3
 800a662:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800a666:	460d      	mov	r5, r1
 800a668:	4616      	mov	r6, r2
 800a66a:	b103      	cbz	r3, 800a66e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a66c:	6038      	str	r0, [r7, #0]
 800a66e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a670:	b314      	cbz	r4, 800a6b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a672:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a676:	b1eb      	cbz	r3, 800a6b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a678:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a67c:	428d      	cmp	r5, r1
 800a67e:	db19      	blt.n	800a6b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a680:	b289      	uxth	r1, r1
 800a682:	8923      	ldrh	r3, [r4, #8]
 800a684:	440b      	add	r3, r1
 800a686:	b21b      	sxth	r3, r3
 800a688:	429d      	cmp	r5, r3
 800a68a:	da13      	bge.n	800a6b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a68c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a690:	4296      	cmp	r6, r2
 800a692:	db0f      	blt.n	800a6b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a694:	b292      	uxth	r2, r2
 800a696:	8963      	ldrh	r3, [r4, #10]
 800a698:	4413      	add	r3, r2
 800a69a:	b21b      	sxth	r3, r3
 800a69c:	429e      	cmp	r6, r3
 800a69e:	da09      	bge.n	800a6b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a6a0:	6823      	ldr	r3, [r4, #0]
 800a6a2:	1ab2      	subs	r2, r6, r2
 800a6a4:	1a69      	subs	r1, r5, r1
 800a6a6:	4620      	mov	r0, r4
 800a6a8:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800a6ac:	b212      	sxth	r2, r2
 800a6ae:	463b      	mov	r3, r7
 800a6b0:	b209      	sxth	r1, r1
 800a6b2:	47c0      	blx	r8
 800a6b4:	69a4      	ldr	r4, [r4, #24]
 800a6b6:	e7db      	b.n	800a670 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a6b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a6bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a6bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a6c0:	4c6d      	ldr	r4, [pc, #436]	@ (800a878 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800a6c2:	b0a1      	sub	sp, #132	@ 0x84
 800a6c4:	4606      	mov	r6, r0
 800a6c6:	6824      	ldr	r4, [r4, #0]
 800a6c8:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800a6ca:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800a6ce:	2400      	movs	r4, #0
 800a6d0:	9303      	str	r3, [sp, #12]
 800a6d2:	802c      	strh	r4, [r5, #0]
 800a6d4:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800a6d6:	802c      	strh	r4, [r5, #0]
 800a6d8:	601c      	str	r4, [r3, #0]
 800a6da:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a6de:	f7ff ffbd 	bl	800a65c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a6e2:	f1b9 0f03 	cmp.w	r9, #3
 800a6e6:	f340 80c1 	ble.w	800a86c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800a6ea:	4631      	mov	r1, r6
 800a6ec:	a80c      	add	r0, sp, #48	@ 0x30
 800a6ee:	f004 fd9b 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a6f2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800a6f6:	9306      	str	r3, [sp, #24]
 800a6f8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800a6fc:	9307      	str	r3, [sp, #28]
 800a6fe:	9b03      	ldr	r3, [sp, #12]
 800a700:	f8d3 a000 	ldr.w	sl, [r3]
 800a704:	f1ba 0f00 	cmp.w	sl, #0
 800a708:	f000 80b3 	beq.w	800a872 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800a70c:	4651      	mov	r1, sl
 800a70e:	a810      	add	r0, sp, #64	@ 0x40
 800a710:	f004 fd8a 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a714:	2002      	movs	r0, #2
 800a716:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800a71a:	9b01      	ldr	r3, [sp, #4]
 800a71c:	9a06      	ldr	r2, [sp, #24]
 800a71e:	fb91 f1f0 	sdiv	r1, r1, r0
 800a722:	189d      	adds	r5, r3, r2
 800a724:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800a728:	9a07      	ldr	r2, [sp, #28]
 800a72a:	4419      	add	r1, r3
 800a72c:	9b02      	ldr	r3, [sp, #8]
 800a72e:	4413      	add	r3, r2
 800a730:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800a734:	1a6d      	subs	r5, r5, r1
 800a736:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800a73a:	fb92 f2f0 	sdiv	r2, r2, r0
 800a73e:	440a      	add	r2, r1
 800a740:	1a9b      	subs	r3, r3, r2
 800a742:	435b      	muls	r3, r3
 800a744:	fb05 3505 	mla	r5, r5, r5, r3
 800a748:	4f4c      	ldr	r7, [pc, #304]	@ (800a87c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a74a:	ac10      	add	r4, sp, #64	@ 0x40
 800a74c:	f1b9 0f0c 	cmp.w	r9, #12
 800a750:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a752:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a754:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a756:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a758:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a75a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a75c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a760:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a764:	f04f 0303 	mov.w	r3, #3
 800a768:	bfd8      	it	le
 800a76a:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a76e:	f04f 0400 	mov.w	r4, #0
 800a772:	f8cd 9000 	str.w	r9, [sp]
 800a776:	bfcc      	ite	gt
 800a778:	4698      	movgt	r8, r3
 800a77a:	fb92 f8f3 	sdivle	r8, r2, r3
 800a77e:	1c63      	adds	r3, r4, #1
 800a780:	aa10      	add	r2, sp, #64	@ 0x40
 800a782:	f004 0401 	and.w	r4, r4, #1
 800a786:	f04f 0b00 	mov.w	fp, #0
 800a78a:	9308      	str	r3, [sp, #32]
 800a78c:	9b00      	ldr	r3, [sp, #0]
 800a78e:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a792:	fb93 f3f8 	sdiv	r3, r3, r8
 800a796:	3404      	adds	r4, #4
 800a798:	b29b      	uxth	r3, r3
 800a79a:	9304      	str	r3, [sp, #16]
 800a79c:	9a04      	ldr	r2, [sp, #16]
 800a79e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a7a2:	fb13 f302 	smulbb	r3, r3, r2
 800a7a6:	9a01      	ldr	r2, [sp, #4]
 800a7a8:	b29b      	uxth	r3, r3
 800a7aa:	1899      	adds	r1, r3, r2
 800a7ac:	9305      	str	r3, [sp, #20]
 800a7ae:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a7b2:	b209      	sxth	r1, r1
 800a7b4:	4299      	cmp	r1, r3
 800a7b6:	db4d      	blt.n	800a854 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a7b8:	8932      	ldrh	r2, [r6, #8]
 800a7ba:	4413      	add	r3, r2
 800a7bc:	b21b      	sxth	r3, r3
 800a7be:	4299      	cmp	r1, r3
 800a7c0:	da48      	bge.n	800a854 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a7c2:	9b04      	ldr	r3, [sp, #16]
 800a7c4:	6827      	ldr	r7, [r4, #0]
 800a7c6:	fb17 f703 	smulbb	r7, r7, r3
 800a7ca:	9b02      	ldr	r3, [sp, #8]
 800a7cc:	b2bf      	uxth	r7, r7
 800a7ce:	18fa      	adds	r2, r7, r3
 800a7d0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a7d4:	b212      	sxth	r2, r2
 800a7d6:	429a      	cmp	r2, r3
 800a7d8:	db3c      	blt.n	800a854 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a7da:	8970      	ldrh	r0, [r6, #10]
 800a7dc:	4403      	add	r3, r0
 800a7de:	b21b      	sxth	r3, r3
 800a7e0:	429a      	cmp	r2, r3
 800a7e2:	da37      	bge.n	800a854 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a7e4:	2300      	movs	r3, #0
 800a7e6:	4630      	mov	r0, r6
 800a7e8:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a7ea:	ab0b      	add	r3, sp, #44	@ 0x2c
 800a7ec:	f7ff ff36 	bl	800a65c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a7f0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800a7f2:	b37a      	cbz	r2, 800a854 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a7f4:	4552      	cmp	r2, sl
 800a7f6:	d02d      	beq.n	800a854 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a7f8:	4611      	mov	r1, r2
 800a7fa:	a80e      	add	r0, sp, #56	@ 0x38
 800a7fc:	9209      	str	r2, [sp, #36]	@ 0x24
 800a7fe:	f004 fd13 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a802:	f04f 0e02 	mov.w	lr, #2
 800a806:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800a80a:	9a06      	ldr	r2, [sp, #24]
 800a80c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800a810:	9b01      	ldr	r3, [sp, #4]
 800a812:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800a816:	4413      	add	r3, r2
 800a818:	9a07      	ldr	r2, [sp, #28]
 800a81a:	fb91 f1fe 	sdiv	r1, r1, lr
 800a81e:	fb9c fcfe 	sdiv	ip, ip, lr
 800a822:	4401      	add	r1, r0
 800a824:	1a58      	subs	r0, r3, r1
 800a826:	9b02      	ldr	r3, [sp, #8]
 800a828:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800a82c:	4413      	add	r3, r2
 800a82e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a830:	448c      	add	ip, r1
 800a832:	eba3 030c 	sub.w	r3, r3, ip
 800a836:	435b      	muls	r3, r3
 800a838:	fb00 3300 	mla	r3, r0, r0, r3
 800a83c:	42ab      	cmp	r3, r5
 800a83e:	d208      	bcs.n	800a852 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a840:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800a842:	461d      	mov	r5, r3
 800a844:	9803      	ldr	r0, [sp, #12]
 800a846:	6001      	str	r1, [r0, #0]
 800a848:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800a84a:	9805      	ldr	r0, [sp, #20]
 800a84c:	8008      	strh	r0, [r1, #0]
 800a84e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800a850:	800f      	strh	r7, [r1, #0]
 800a852:	4692      	mov	sl, r2
 800a854:	f10b 0b01 	add.w	fp, fp, #1
 800a858:	3408      	adds	r4, #8
 800a85a:	f1bb 0f04 	cmp.w	fp, #4
 800a85e:	d19d      	bne.n	800a79c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a860:	9b00      	ldr	r3, [sp, #0]
 800a862:	9c08      	ldr	r4, [sp, #32]
 800a864:	444b      	add	r3, r9
 800a866:	4544      	cmp	r4, r8
 800a868:	9300      	str	r3, [sp, #0]
 800a86a:	d188      	bne.n	800a77e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a86c:	b021      	add	sp, #132	@ 0x84
 800a86e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a872:	f04f 35ff 	mov.w	r5, #4294967295
 800a876:	e767      	b.n	800a748 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a878:	200150c0 	.word	0x200150c0
 800a87c:	0801fa60 	.word	0x0801fa60

0800a880 <_ZN8touchgfx4RectaNERKS0_>:
 800a880:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a884:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a888:	888c      	ldrh	r4, [r1, #4]
 800a88a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a88e:	443c      	add	r4, r7
 800a890:	b2a4      	uxth	r4, r4
 800a892:	fa0f f884 	sxth.w	r8, r4
 800a896:	45c1      	cmp	r9, r8
 800a898:	da2f      	bge.n	800a8fa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a89a:	8882      	ldrh	r2, [r0, #4]
 800a89c:	444a      	add	r2, r9
 800a89e:	b292      	uxth	r2, r2
 800a8a0:	fa0f fe82 	sxth.w	lr, r2
 800a8a4:	4577      	cmp	r7, lr
 800a8a6:	da28      	bge.n	800a8fa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a8a8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a8ac:	88cb      	ldrh	r3, [r1, #6]
 800a8ae:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a8b2:	442b      	add	r3, r5
 800a8b4:	b21b      	sxth	r3, r3
 800a8b6:	429e      	cmp	r6, r3
 800a8b8:	da1f      	bge.n	800a8fa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a8ba:	88c3      	ldrh	r3, [r0, #6]
 800a8bc:	4433      	add	r3, r6
 800a8be:	b29b      	uxth	r3, r3
 800a8c0:	fa0f fc83 	sxth.w	ip, r3
 800a8c4:	4565      	cmp	r5, ip
 800a8c6:	da18      	bge.n	800a8fa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a8c8:	454f      	cmp	r7, r9
 800a8ca:	bfb8      	it	lt
 800a8cc:	464f      	movlt	r7, r9
 800a8ce:	42b5      	cmp	r5, r6
 800a8d0:	bfb8      	it	lt
 800a8d2:	4635      	movlt	r5, r6
 800a8d4:	45f0      	cmp	r8, lr
 800a8d6:	bfd8      	it	le
 800a8d8:	4622      	movle	r2, r4
 800a8da:	1bd2      	subs	r2, r2, r7
 800a8dc:	8082      	strh	r2, [r0, #4]
 800a8de:	884a      	ldrh	r2, [r1, #2]
 800a8e0:	88c9      	ldrh	r1, [r1, #6]
 800a8e2:	8007      	strh	r7, [r0, #0]
 800a8e4:	440a      	add	r2, r1
 800a8e6:	8045      	strh	r5, [r0, #2]
 800a8e8:	b292      	uxth	r2, r2
 800a8ea:	b211      	sxth	r1, r2
 800a8ec:	458c      	cmp	ip, r1
 800a8ee:	bfa8      	it	ge
 800a8f0:	4613      	movge	r3, r2
 800a8f2:	1b5b      	subs	r3, r3, r5
 800a8f4:	80c3      	strh	r3, [r0, #6]
 800a8f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a8fa:	2300      	movs	r3, #0
 800a8fc:	8003      	strh	r3, [r0, #0]
 800a8fe:	8043      	strh	r3, [r0, #2]
 800a900:	8083      	strh	r3, [r0, #4]
 800a902:	80c3      	strh	r3, [r0, #6]
 800a904:	e7f7      	b.n	800a8f6 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a906 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a906:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a90a:	2b00      	cmp	r3, #0
 800a90c:	dd06      	ble.n	800a91c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a90e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a912:	2800      	cmp	r0, #0
 800a914:	bfcc      	ite	gt
 800a916:	2000      	movgt	r0, #0
 800a918:	2001      	movle	r0, #1
 800a91a:	4770      	bx	lr
 800a91c:	2001      	movs	r0, #1
 800a91e:	4770      	bx	lr

0800a920 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a920:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a924:	2300      	movs	r3, #0
 800a926:	4604      	mov	r4, r0
 800a928:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800a92a:	8003      	strh	r3, [r0, #0]
 800a92c:	8043      	strh	r3, [r0, #2]
 800a92e:	8083      	strh	r3, [r0, #4]
 800a930:	80c3      	strh	r3, [r0, #6]
 800a932:	2d00      	cmp	r5, #0
 800a934:	d040      	beq.n	800a9b8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a936:	1d28      	adds	r0, r5, #4
 800a938:	f7ff ffe5 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a93c:	b988      	cbnz	r0, 800a962 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a93e:	4620      	mov	r0, r4
 800a940:	f7ff ffe1 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a944:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a948:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a94c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a950:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a954:	b138      	cbz	r0, 800a966 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a956:	8022      	strh	r2, [r4, #0]
 800a958:	8063      	strh	r3, [r4, #2]
 800a95a:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a95e:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a962:	69ad      	ldr	r5, [r5, #24]
 800a964:	e7e5      	b.n	800a932 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a966:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a96a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a96e:	4290      	cmp	r0, r2
 800a970:	4607      	mov	r7, r0
 800a972:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a976:	460e      	mov	r6, r1
 800a978:	bfa8      	it	ge
 800a97a:	4617      	movge	r7, r2
 800a97c:	4299      	cmp	r1, r3
 800a97e:	4472      	add	r2, lr
 800a980:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a984:	bfa8      	it	ge
 800a986:	461e      	movge	r6, r3
 800a988:	4440      	add	r0, r8
 800a98a:	4471      	add	r1, lr
 800a98c:	4463      	add	r3, ip
 800a98e:	b200      	sxth	r0, r0
 800a990:	8027      	strh	r7, [r4, #0]
 800a992:	b212      	sxth	r2, r2
 800a994:	8066      	strh	r6, [r4, #2]
 800a996:	b209      	sxth	r1, r1
 800a998:	b21b      	sxth	r3, r3
 800a99a:	4290      	cmp	r0, r2
 800a99c:	bfac      	ite	ge
 800a99e:	ebc7 0200 	rsbge	r2, r7, r0
 800a9a2:	ebc7 0202 	rsblt	r2, r7, r2
 800a9a6:	4299      	cmp	r1, r3
 800a9a8:	bfac      	ite	ge
 800a9aa:	ebc6 0301 	rsbge	r3, r6, r1
 800a9ae:	ebc6 0303 	rsblt	r3, r6, r3
 800a9b2:	80a2      	strh	r2, [r4, #4]
 800a9b4:	80e3      	strh	r3, [r4, #6]
 800a9b6:	e7d4      	b.n	800a962 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a9b8:	4620      	mov	r0, r4
 800a9ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a9be <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a9be:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a9c2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800a9c6:	b383      	cbz	r3, 800aa2a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a9c8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a9ca:	b374      	cbz	r4, 800aa2a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a9cc:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a9d0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a9d4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a9d8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a9dc:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a9e0:	b303      	cbz	r3, 800aa24 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a9e2:	4668      	mov	r0, sp
 800a9e4:	1d21      	adds	r1, r4, #4
 800a9e6:	f8ad 5000 	strh.w	r5, [sp]
 800a9ea:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a9ee:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a9f2:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a9f6:	f7ff ff43 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 800a9fa:	4668      	mov	r0, sp
 800a9fc:	f7ff ff83 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aa00:	b980      	cbnz	r0, 800aa24 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800aa02:	f8bd 3000 	ldrh.w	r3, [sp]
 800aa06:	4669      	mov	r1, sp
 800aa08:	88a2      	ldrh	r2, [r4, #4]
 800aa0a:	4620      	mov	r0, r4
 800aa0c:	1a9b      	subs	r3, r3, r2
 800aa0e:	88e2      	ldrh	r2, [r4, #6]
 800aa10:	f8ad 3000 	strh.w	r3, [sp]
 800aa14:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800aa18:	1a9b      	subs	r3, r3, r2
 800aa1a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800aa1e:	6823      	ldr	r3, [r4, #0]
 800aa20:	689b      	ldr	r3, [r3, #8]
 800aa22:	4798      	blx	r3
 800aa24:	69a4      	ldr	r4, [r4, #24]
 800aa26:	2c00      	cmp	r4, #0
 800aa28:	d1d8      	bne.n	800a9dc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800aa2a:	b002      	add	sp, #8
 800aa2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aa30 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800aa30:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aa32:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800aa36:	460d      	mov	r5, r1
 800aa38:	4616      	mov	r6, r2
 800aa3a:	b323      	cbz	r3, 800aa86 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aa3c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aa3e:	b314      	cbz	r4, 800aa86 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aa40:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800aa44:	b1eb      	cbz	r3, 800aa82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800aa46:	6828      	ldr	r0, [r5, #0]
 800aa48:	466b      	mov	r3, sp
 800aa4a:	6869      	ldr	r1, [r5, #4]
 800aa4c:	c303      	stmia	r3!, {r0, r1}
 800aa4e:	4668      	mov	r0, sp
 800aa50:	1d21      	adds	r1, r4, #4
 800aa52:	f7ff ff15 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 800aa56:	4668      	mov	r0, sp
 800aa58:	f7ff ff55 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aa5c:	b988      	cbnz	r0, 800aa82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800aa5e:	f8bd 3000 	ldrh.w	r3, [sp]
 800aa62:	4669      	mov	r1, sp
 800aa64:	88a2      	ldrh	r2, [r4, #4]
 800aa66:	4620      	mov	r0, r4
 800aa68:	1a9b      	subs	r3, r3, r2
 800aa6a:	88e2      	ldrh	r2, [r4, #6]
 800aa6c:	f8ad 3000 	strh.w	r3, [sp]
 800aa70:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800aa74:	1a9b      	subs	r3, r3, r2
 800aa76:	4632      	mov	r2, r6
 800aa78:	f8ad 3002 	strh.w	r3, [sp, #2]
 800aa7c:	6823      	ldr	r3, [r4, #0]
 800aa7e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800aa80:	4798      	blx	r3
 800aa82:	69a4      	ldr	r4, [r4, #24]
 800aa84:	e7db      	b.n	800aa3e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800aa86:	b002      	add	sp, #8
 800aa88:	bd70      	pop	{r4, r5, r6, pc}

0800aa8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800aa8a:	6803      	ldr	r3, [r0, #0]
 800aa8c:	b513      	push	{r0, r1, r4, lr}
 800aa8e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800aa92:	2300      	movs	r3, #0
 800aa94:	e9cd 3300 	strd	r3, r3, [sp]
 800aa98:	466b      	mov	r3, sp
 800aa9a:	47a0      	blx	r4
 800aa9c:	b002      	add	sp, #8
 800aa9e:	bd10      	pop	{r4, pc}

0800aaa0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800aaa0:	2301      	movs	r3, #1
 800aaa2:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800aaa6:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800aaaa:	4770      	bx	lr

0800aaac <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800aaac:	2301      	movs	r3, #1
 800aaae:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800aab2:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800aab6:	4770      	bx	lr

0800aab8 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800aab8:	6843      	ldr	r3, [r0, #4]
 800aaba:	2201      	movs	r2, #1
 800aabc:	725a      	strb	r2, [r3, #9]
 800aabe:	6840      	ldr	r0, [r0, #4]
 800aac0:	6803      	ldr	r3, [r0, #0]
 800aac2:	691b      	ldr	r3, [r3, #16]
 800aac4:	4718      	bx	r3

0800aac6 <_ZN8touchgfx3HAL8flushDMAEv>:
 800aac6:	6840      	ldr	r0, [r0, #4]
 800aac8:	6803      	ldr	r3, [r0, #0]
 800aaca:	689b      	ldr	r3, [r3, #8]
 800aacc:	4718      	bx	r3

0800aace <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800aace:	b530      	push	{r4, r5, lr}
 800aad0:	b08b      	sub	sp, #44	@ 0x2c
 800aad2:	6804      	ldr	r4, [r0, #0]
 800aad4:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800aad8:	9509      	str	r5, [sp, #36]	@ 0x24
 800aada:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800aade:	9508      	str	r5, [sp, #32]
 800aae0:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800aae4:	9507      	str	r5, [sp, #28]
 800aae6:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800aaea:	9506      	str	r5, [sp, #24]
 800aaec:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800aaf0:	9505      	str	r5, [sp, #20]
 800aaf2:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800aaf6:	9504      	str	r5, [sp, #16]
 800aaf8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800aafc:	9503      	str	r5, [sp, #12]
 800aafe:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800ab02:	9502      	str	r5, [sp, #8]
 800ab04:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800ab08:	e9cd 3500 	strd	r3, r5, [sp]
 800ab0c:	4613      	mov	r3, r2
 800ab0e:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800ab10:	2200      	movs	r2, #0
 800ab12:	47a0      	blx	r4
 800ab14:	b00b      	add	sp, #44	@ 0x2c
 800ab16:	bd30      	pop	{r4, r5, pc}

0800ab18 <_ZN8touchgfx3HAL10beginFrameEv>:
 800ab18:	4b04      	ldr	r3, [pc, #16]	@ (800ab2c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800ab1a:	781b      	ldrb	r3, [r3, #0]
 800ab1c:	b123      	cbz	r3, 800ab28 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800ab1e:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800ab22:	f080 0001 	eor.w	r0, r0, #1
 800ab26:	4770      	bx	lr
 800ab28:	2001      	movs	r0, #1
 800ab2a:	4770      	bx	lr
 800ab2c:	200150be 	.word	0x200150be

0800ab30 <_ZN8touchgfx3HAL8endFrameEv>:
 800ab30:	b510      	push	{r4, lr}
 800ab32:	4604      	mov	r4, r0
 800ab34:	6840      	ldr	r0, [r0, #4]
 800ab36:	6803      	ldr	r3, [r0, #0]
 800ab38:	689b      	ldr	r3, [r3, #8]
 800ab3a:	4798      	blx	r3
 800ab3c:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800ab40:	b113      	cbz	r3, 800ab48 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800ab42:	2301      	movs	r3, #1
 800ab44:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800ab48:	bd10      	pop	{r4, pc}

0800ab4a <_ZN8touchgfx3HAL10initializeEv>:
 800ab4a:	b510      	push	{r4, lr}
 800ab4c:	4604      	mov	r4, r0
 800ab4e:	f7f6 fee3 	bl	8001918 <_ZN8touchgfx10OSWrappers10initializeEv>
 800ab52:	f7f6 fdc1 	bl	80016d8 <_ZN8touchgfx4GPIO4initEv>
 800ab56:	6860      	ldr	r0, [r4, #4]
 800ab58:	6803      	ldr	r3, [r0, #0]
 800ab5a:	68db      	ldr	r3, [r3, #12]
 800ab5c:	4798      	blx	r3
 800ab5e:	68e0      	ldr	r0, [r4, #12]
 800ab60:	6803      	ldr	r3, [r0, #0]
 800ab62:	689b      	ldr	r3, [r3, #8]
 800ab64:	4798      	blx	r3
 800ab66:	6823      	ldr	r3, [r4, #0]
 800ab68:	4620      	mov	r0, r4
 800ab6a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800ab6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ab70:	4718      	bx	r3

0800ab72 <_ZN8touchgfx3HAL9taskEntryEv>:
 800ab72:	b508      	push	{r3, lr}
 800ab74:	6803      	ldr	r3, [r0, #0]
 800ab76:	4604      	mov	r4, r0
 800ab78:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ab7c:	4798      	blx	r3
 800ab7e:	6823      	ldr	r3, [r4, #0]
 800ab80:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800ab82:	4620      	mov	r0, r4
 800ab84:	4798      	blx	r3
 800ab86:	f7f6 ff13 	bl	80019b0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800ab8a:	6823      	ldr	r3, [r4, #0]
 800ab8c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800ab8e:	e7f8      	b.n	800ab82 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800ab90 <_ZN8touchgfx3HAL4tickEv>:
 800ab90:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ab92:	6803      	ldr	r3, [r0, #0]
 800ab94:	4604      	mov	r4, r0
 800ab96:	4d5b      	ldr	r5, [pc, #364]	@ (800ad04 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800ab98:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800ab9c:	4798      	blx	r3
 800ab9e:	2800      	cmp	r0, #0
 800aba0:	f000 8095 	beq.w	800acce <_ZN8touchgfx3HAL4tickEv+0x13e>
 800aba4:	2001      	movs	r0, #1
 800aba6:	2600      	movs	r6, #0
 800aba8:	f7f6 fcfc 	bl	80015a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800abac:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800abb0:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800abb4:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800abb8:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800abbc:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800abc0:	b133      	cbz	r3, 800abd0 <_ZN8touchgfx3HAL4tickEv+0x40>
 800abc2:	6823      	ldr	r3, [r4, #0]
 800abc4:	4620      	mov	r0, r4
 800abc6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800abca:	4798      	blx	r3
 800abcc:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800abd0:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800abd4:	2601      	movs	r6, #1
 800abd6:	6862      	ldr	r2, [r4, #4]
 800abd8:	f083 0301 	eor.w	r3, r3, #1
 800abdc:	702e      	strb	r6, [r5, #0]
 800abde:	7253      	strb	r3, [r2, #9]
 800abe0:	f003 fa0e 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
 800abe4:	6803      	ldr	r3, [r0, #0]
 800abe6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800abe8:	4798      	blx	r3
 800abea:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800abee:	b90b      	cbnz	r3, 800abf4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800abf0:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800abf4:	f003 fa04 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
 800abf8:	6803      	ldr	r3, [r0, #0]
 800abfa:	695b      	ldr	r3, [r3, #20]
 800abfc:	4798      	blx	r3
 800abfe:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800ac00:	6803      	ldr	r3, [r0, #0]
 800ac02:	691b      	ldr	r3, [r3, #16]
 800ac04:	4798      	blx	r3
 800ac06:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800ac0a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800ac0e:	3b01      	subs	r3, #1
 800ac10:	b2db      	uxtb	r3, r3
 800ac12:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800ac16:	b10a      	cbz	r2, 800ac1c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ac18:	2b00      	cmp	r3, #0
 800ac1a:	d1eb      	bne.n	800abf4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ac1c:	4a3a      	ldr	r2, [pc, #232]	@ (800ad08 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ac1e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800ac22:	7813      	ldrb	r3, [r2, #0]
 800ac24:	3301      	adds	r3, #1
 800ac26:	b25b      	sxtb	r3, r3
 800ac28:	4299      	cmp	r1, r3
 800ac2a:	7013      	strb	r3, [r2, #0]
 800ac2c:	dc10      	bgt.n	800ac50 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ac2e:	2300      	movs	r3, #0
 800ac30:	68e0      	ldr	r0, [r4, #12]
 800ac32:	a902      	add	r1, sp, #8
 800ac34:	7013      	strb	r3, [r2, #0]
 800ac36:	aa03      	add	r2, sp, #12
 800ac38:	6803      	ldr	r3, [r0, #0]
 800ac3a:	68db      	ldr	r3, [r3, #12]
 800ac3c:	4798      	blx	r3
 800ac3e:	6823      	ldr	r3, [r4, #0]
 800ac40:	2800      	cmp	r0, #0
 800ac42:	d050      	beq.n	800ace6 <_ZN8touchgfx3HAL4tickEv+0x156>
 800ac44:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800ac48:	4620      	mov	r0, r4
 800ac4a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ac4e:	4798      	blx	r3
 800ac50:	2300      	movs	r3, #0
 800ac52:	6960      	ldr	r0, [r4, #20]
 800ac54:	f88d 3007 	strb.w	r3, [sp, #7]
 800ac58:	b158      	cbz	r0, 800ac72 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800ac5a:	6803      	ldr	r3, [r0, #0]
 800ac5c:	f10d 0107 	add.w	r1, sp, #7
 800ac60:	68db      	ldr	r3, [r3, #12]
 800ac62:	4798      	blx	r3
 800ac64:	b128      	cbz	r0, 800ac72 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800ac66:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800ac68:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800ac6c:	6803      	ldr	r3, [r0, #0]
 800ac6e:	68db      	ldr	r3, [r3, #12]
 800ac70:	4798      	blx	r3
 800ac72:	f104 001c 	add.w	r0, r4, #28
 800ac76:	f013 fdbd 	bl	801e7f4 <_ZN8touchgfx8Gestures4tickEv>
 800ac7a:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800ac7e:	b30b      	cbz	r3, 800acc4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800ac80:	6920      	ldr	r0, [r4, #16]
 800ac82:	6803      	ldr	r3, [r0, #0]
 800ac84:	691b      	ldr	r3, [r3, #16]
 800ac86:	4798      	blx	r3
 800ac88:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800ac8a:	4606      	mov	r6, r0
 800ac8c:	b903      	cbnz	r3, 800ac90 <_ZN8touchgfx3HAL4tickEv+0x100>
 800ac8e:	6760      	str	r0, [r4, #116]	@ 0x74
 800ac90:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800ac92:	4a1e      	ldr	r2, [pc, #120]	@ (800ad0c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800ac94:	1af3      	subs	r3, r6, r3
 800ac96:	4293      	cmp	r3, r2
 800ac98:	d914      	bls.n	800acc4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800ac9a:	6920      	ldr	r0, [r4, #16]
 800ac9c:	6803      	ldr	r3, [r0, #0]
 800ac9e:	699b      	ldr	r3, [r3, #24]
 800aca0:	4798      	blx	r3
 800aca2:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800aca4:	2264      	movs	r2, #100	@ 0x64
 800aca6:	1af3      	subs	r3, r6, r3
 800aca8:	fbb3 f3f2 	udiv	r3, r3, r2
 800acac:	fbb0 f0f3 	udiv	r0, r0, r3
 800acb0:	2800      	cmp	r0, #0
 800acb2:	dc1d      	bgt.n	800acf0 <_ZN8touchgfx3HAL4tickEv+0x160>
 800acb4:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800acb8:	6920      	ldr	r0, [r4, #16]
 800acba:	2100      	movs	r1, #0
 800acbc:	6803      	ldr	r3, [r0, #0]
 800acbe:	69db      	ldr	r3, [r3, #28]
 800acc0:	4798      	blx	r3
 800acc2:	6766      	str	r6, [r4, #116]	@ 0x74
 800acc4:	f003 f99c 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
 800acc8:	6803      	ldr	r3, [r0, #0]
 800acca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800accc:	4798      	blx	r3
 800acce:	6823      	ldr	r3, [r4, #0]
 800acd0:	4620      	mov	r0, r4
 800acd2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800acd6:	4798      	blx	r3
 800acd8:	2001      	movs	r0, #1
 800acda:	f7f6 fc93 	bl	8001604 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800acde:	2300      	movs	r3, #0
 800ace0:	702b      	strb	r3, [r5, #0]
 800ace2:	b004      	add	sp, #16
 800ace4:	bd70      	pop	{r4, r5, r6, pc}
 800ace6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800acea:	4620      	mov	r0, r4
 800acec:	4798      	blx	r3
 800acee:	e7af      	b.n	800ac50 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800acf0:	2863      	cmp	r0, #99	@ 0x63
 800acf2:	bfcb      	itete	gt
 800acf4:	2300      	movgt	r3, #0
 800acf6:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800acfa:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800acfe:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800ad02:	e7d9      	b.n	800acb8 <_ZN8touchgfx3HAL4tickEv+0x128>
 800ad04:	200150c4 	.word	0x200150c4
 800ad08:	200150c5 	.word	0x200150c5
 800ad0c:	05f5e100 	.word	0x05f5e100

0800ad10 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800ad10:	b510      	push	{r4, lr}
 800ad12:	4604      	mov	r4, r0
 800ad14:	f7f6 fe30 	bl	8001978 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800ad18:	2200      	movs	r2, #0
 800ad1a:	6863      	ldr	r3, [r4, #4]
 800ad1c:	729a      	strb	r2, [r3, #10]
 800ad1e:	bd10      	pop	{r4, pc}

0800ad20 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800ad20:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800ad22:	301c      	adds	r0, #28
 800ad24:	f013 bd64 	b.w	801e7f0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800ad28 <_ZN8touchgfx3HAL5touchEll>:
 800ad28:	b530      	push	{r4, r5, lr}
 800ad2a:	b087      	sub	sp, #28
 800ad2c:	4604      	mov	r4, r0
 800ad2e:	a804      	add	r0, sp, #16
 800ad30:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800ad34:	f002 ff4c 	bl	800dbd0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800ad38:	9b04      	ldr	r3, [sp, #16]
 800ad3a:	a906      	add	r1, sp, #24
 800ad3c:	a803      	add	r0, sp, #12
 800ad3e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ad42:	9b05      	ldr	r3, [sp, #20]
 800ad44:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800ad48:	f002 ff94 	bl	800dc74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800ad4c:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800ad50:	f104 001c 	add.w	r0, r4, #28
 800ad54:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ad58:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800ad5c:	b189      	cbz	r1, 800ad82 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800ad5e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800ad62:	9300      	str	r3, [sp, #0]
 800ad64:	4613      	mov	r3, r2
 800ad66:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800ad6a:	462a      	mov	r2, r5
 800ad6c:	f013 fd50 	bl	801e810 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800ad70:	b128      	cbz	r0, 800ad7e <_ZN8touchgfx3HAL5touchEll+0x56>
 800ad72:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ad76:	6623      	str	r3, [r4, #96]	@ 0x60
 800ad78:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ad7c:	6663      	str	r3, [r4, #100]	@ 0x64
 800ad7e:	b007      	add	sp, #28
 800ad80:	bd30      	pop	{r4, r5, pc}
 800ad82:	f013 fd85 	bl	801e890 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ad86:	2301      	movs	r3, #1
 800ad88:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800ad8c:	e7f1      	b.n	800ad72 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800ad8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800ad8e:	b510      	push	{r4, lr}
 800ad90:	2b00      	cmp	r3, #0
 800ad92:	d046      	beq.n	800ae22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ad94:	ea81 0002 	eor.w	r0, r1, r2
 800ad98:	07c4      	lsls	r4, r0, #31
 800ad9a:	d508      	bpl.n	800adae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800ad9c:	440b      	add	r3, r1
 800ad9e:	3a01      	subs	r2, #1
 800ada0:	428b      	cmp	r3, r1
 800ada2:	d93e      	bls.n	800ae22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ada4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ada8:	f801 0b01 	strb.w	r0, [r1], #1
 800adac:	e7f8      	b.n	800ada0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800adae:	07d0      	lsls	r0, r2, #31
 800adb0:	bf42      	ittt	mi
 800adb2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800adb6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800adba:	f801 0b01 	strbmi.w	r0, [r1], #1
 800adbe:	2b01      	cmp	r3, #1
 800adc0:	d911      	bls.n	800ade6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800adc2:	ea81 0402 	eor.w	r4, r1, r2
 800adc6:	4610      	mov	r0, r2
 800adc8:	07a4      	lsls	r4, r4, #30
 800adca:	d022      	beq.n	800ae12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800adcc:	f023 0401 	bic.w	r4, r3, #1
 800add0:	440c      	add	r4, r1
 800add2:	428c      	cmp	r4, r1
 800add4:	4602      	mov	r2, r0
 800add6:	d904      	bls.n	800ade2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800add8:	8812      	ldrh	r2, [r2, #0]
 800adda:	3002      	adds	r0, #2
 800addc:	f821 2b02 	strh.w	r2, [r1], #2
 800ade0:	e7f7      	b.n	800add2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800ade2:	f003 0301 	and.w	r3, r3, #1
 800ade6:	f023 0003 	bic.w	r0, r3, #3
 800adea:	4408      	add	r0, r1
 800adec:	4288      	cmp	r0, r1
 800adee:	4614      	mov	r4, r2
 800adf0:	d904      	bls.n	800adfc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800adf2:	6824      	ldr	r4, [r4, #0]
 800adf4:	3204      	adds	r2, #4
 800adf6:	f841 4b04 	str.w	r4, [r1], #4
 800adfa:	e7f7      	b.n	800adec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800adfc:	f003 0303 	and.w	r3, r3, #3
 800ae00:	3a01      	subs	r2, #1
 800ae02:	440b      	add	r3, r1
 800ae04:	428b      	cmp	r3, r1
 800ae06:	d90c      	bls.n	800ae22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ae08:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ae0c:	f801 0b01 	strb.w	r0, [r1], #1
 800ae10:	e7f8      	b.n	800ae04 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800ae12:	0790      	lsls	r0, r2, #30
 800ae14:	d0e7      	beq.n	800ade6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ae16:	f832 0b02 	ldrh.w	r0, [r2], #2
 800ae1a:	3b02      	subs	r3, #2
 800ae1c:	f821 0b02 	strh.w	r0, [r1], #2
 800ae20:	e7e1      	b.n	800ade6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ae22:	2001      	movs	r0, #1
 800ae24:	bd10      	pop	{r4, pc}

0800ae26 <_ZN8touchgfx3HAL7noTouchEv>:
 800ae26:	b510      	push	{r4, lr}
 800ae28:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800ae2c:	4604      	mov	r4, r0
 800ae2e:	b153      	cbz	r3, 800ae46 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800ae30:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800ae34:	2101      	movs	r1, #1
 800ae36:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800ae3a:	301c      	adds	r0, #28
 800ae3c:	f013 fd28 	bl	801e890 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ae40:	2300      	movs	r3, #0
 800ae42:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800ae46:	bd10      	pop	{r4, pc}

0800ae48 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800ae48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ae4c:	b085      	sub	sp, #20
 800ae4e:	4604      	mov	r4, r0
 800ae50:	2000      	movs	r0, #0
 800ae52:	4699      	mov	r9, r3
 800ae54:	ad04      	add	r5, sp, #16
 800ae56:	460f      	mov	r7, r1
 800ae58:	4690      	mov	r8, r2
 800ae5a:	f845 0d04 	str.w	r0, [r5, #-4]!
 800ae5e:	69a0      	ldr	r0, [r4, #24]
 800ae60:	6806      	ldr	r6, [r0, #0]
 800ae62:	9501      	str	r5, [sp, #4]
 800ae64:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800ae68:	9500      	str	r5, [sp, #0]
 800ae6a:	6835      	ldr	r5, [r6, #0]
 800ae6c:	47a8      	blx	r5
 800ae6e:	4d10      	ldr	r5, [pc, #64]	@ (800aeb0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800ae70:	4606      	mov	r6, r0
 800ae72:	f8a5 9000 	strh.w	r9, [r5]
 800ae76:	f7f7 faff 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800ae7a:	6803      	ldr	r3, [r0, #0]
 800ae7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ae7e:	4798      	blx	r3
 800ae80:	b128      	cbz	r0, 800ae8e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800ae82:	2801      	cmp	r0, #1
 800ae84:	d00b      	beq.n	800ae9e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800ae86:	4630      	mov	r0, r6
 800ae88:	b005      	add	sp, #20
 800ae8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ae8e:	882b      	ldrh	r3, [r5, #0]
 800ae90:	fb08 7203 	mla	r2, r8, r3, r7
 800ae94:	9b03      	ldr	r3, [sp, #12]
 800ae96:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800ae9a:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800ae9c:	e7f3      	b.n	800ae86 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800ae9e:	882a      	ldrh	r2, [r5, #0]
 800aea0:	9b03      	ldr	r3, [sp, #12]
 800aea2:	fb08 7202 	mla	r2, r8, r2, r7
 800aea6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800aeaa:	1a9a      	subs	r2, r3, r2
 800aeac:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800aeae:	e7ea      	b.n	800ae86 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800aeb0:	200150ba 	.word	0x200150ba

0800aeb4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800aeb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aeb6:	b08b      	sub	sp, #44	@ 0x2c
 800aeb8:	4617      	mov	r7, r2
 800aeba:	4604      	mov	r4, r0
 800aebc:	460e      	mov	r6, r1
 800aebe:	461d      	mov	r5, r3
 800aec0:	f7f7 fada 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800aec4:	6803      	ldr	r3, [r0, #0]
 800aec6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aec8:	4798      	blx	r3
 800aeca:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800aece:	9007      	str	r0, [sp, #28]
 800aed0:	4631      	mov	r1, r6
 800aed2:	6822      	ldr	r2, [r4, #0]
 800aed4:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800aed8:	4b0c      	ldr	r3, [pc, #48]	@ (800af0c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800aeda:	4620      	mov	r0, r4
 800aedc:	881b      	ldrh	r3, [r3, #0]
 800aede:	9306      	str	r3, [sp, #24]
 800aee0:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800aee4:	9305      	str	r3, [sp, #20]
 800aee6:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800aeea:	9304      	str	r3, [sp, #16]
 800aeec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800aef0:	9303      	str	r3, [sp, #12]
 800aef2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800aef6:	9302      	str	r3, [sp, #8]
 800aef8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800aefc:	e9cd 5300 	strd	r5, r3, [sp]
 800af00:	463b      	mov	r3, r7
 800af02:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800af04:	2200      	movs	r2, #0
 800af06:	47a8      	blx	r5
 800af08:	b00b      	add	sp, #44	@ 0x2c
 800af0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800af0c:	200150ba 	.word	0x200150ba

0800af10 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800af10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800af14:	4698      	mov	r8, r3
 800af16:	6803      	ldr	r3, [r0, #0]
 800af18:	b08b      	sub	sp, #44	@ 0x2c
 800af1a:	4617      	mov	r7, r2
 800af1c:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800af1e:	460e      	mov	r6, r1
 800af20:	4b13      	ldr	r3, [pc, #76]	@ (800af70 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800af22:	4604      	mov	r4, r0
 800af24:	f8b3 9000 	ldrh.w	r9, [r3]
 800af28:	f7f7 faa6 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800af2c:	6803      	ldr	r3, [r0, #0]
 800af2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800af30:	4798      	blx	r3
 800af32:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800af36:	2200      	movs	r2, #0
 800af38:	4631      	mov	r1, r6
 800af3a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800af3e:	2302      	movs	r3, #2
 800af40:	4620      	mov	r0, r4
 800af42:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800af46:	2301      	movs	r3, #1
 800af48:	9305      	str	r3, [sp, #20]
 800af4a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800af4e:	9304      	str	r3, [sp, #16]
 800af50:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800af54:	9303      	str	r3, [sp, #12]
 800af56:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800af5a:	9302      	str	r3, [sp, #8]
 800af5c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800af60:	e9cd 8300 	strd	r8, r3, [sp]
 800af64:	463b      	mov	r3, r7
 800af66:	47a8      	blx	r5
 800af68:	b00b      	add	sp, #44	@ 0x2c
 800af6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800af6e:	bf00      	nop
 800af70:	200150ba 	.word	0x200150ba

0800af74 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800af74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800af78:	4698      	mov	r8, r3
 800af7a:	6803      	ldr	r3, [r0, #0]
 800af7c:	b087      	sub	sp, #28
 800af7e:	460e      	mov	r6, r1
 800af80:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800af82:	4617      	mov	r7, r2
 800af84:	4b0f      	ldr	r3, [pc, #60]	@ (800afc4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800af86:	4604      	mov	r4, r0
 800af88:	f8b3 9000 	ldrh.w	r9, [r3]
 800af8c:	f7f7 fa74 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800af90:	6803      	ldr	r3, [r0, #0]
 800af92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800af94:	4798      	blx	r3
 800af96:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800af9a:	463a      	mov	r2, r7
 800af9c:	4631      	mov	r1, r6
 800af9e:	f8cd 900c 	str.w	r9, [sp, #12]
 800afa2:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800afa6:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800afaa:	4620      	mov	r0, r4
 800afac:	9302      	str	r3, [sp, #8]
 800afae:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800afb2:	9301      	str	r3, [sp, #4]
 800afb4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800afb8:	9300      	str	r3, [sp, #0]
 800afba:	4643      	mov	r3, r8
 800afbc:	47a8      	blx	r5
 800afbe:	b007      	add	sp, #28
 800afc0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800afc4:	200150ba 	.word	0x200150ba

0800afc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800afc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800afcc:	4604      	mov	r4, r0
 800afce:	b08f      	sub	sp, #60	@ 0x3c
 800afd0:	4610      	mov	r0, r2
 800afd2:	460d      	mov	r5, r1
 800afd4:	4691      	mov	r9, r2
 800afd6:	461e      	mov	r6, r3
 800afd8:	f005 ffdc 	bl	8010f94 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800afdc:	2800      	cmp	r0, #0
 800afde:	f000 809d 	beq.w	800b11c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800afe2:	6823      	ldr	r3, [r4, #0]
 800afe4:	4620      	mov	r0, r4
 800afe6:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800b180 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800afea:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800afee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800aff0:	4798      	blx	r3
 800aff2:	6823      	ldr	r3, [r4, #0]
 800aff4:	4620      	mov	r0, r4
 800aff6:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800b184 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800affa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800affc:	4798      	blx	r3
 800affe:	f8bb 3000 	ldrh.w	r3, [fp]
 800b002:	4f5c      	ldr	r7, [pc, #368]	@ (800b174 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b004:	9301      	str	r3, [sp, #4]
 800b006:	f8ba 3000 	ldrh.w	r3, [sl]
 800b00a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b00e:	4640      	mov	r0, r8
 800b010:	9302      	str	r3, [sp, #8]
 800b012:	883b      	ldrh	r3, [r7, #0]
 800b014:	9303      	str	r3, [sp, #12]
 800b016:	4b58      	ldr	r3, [pc, #352]	@ (800b178 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b018:	881a      	ldrh	r2, [r3, #0]
 800b01a:	9305      	str	r3, [sp, #20]
 800b01c:	9204      	str	r2, [sp, #16]
 800b01e:	f006 f84d 	bl	80110bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b022:	8038      	strh	r0, [r7, #0]
 800b024:	4640      	mov	r0, r8
 800b026:	f006 f87d 	bl	8011124 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b02a:	9b05      	ldr	r3, [sp, #20]
 800b02c:	b280      	uxth	r0, r0
 800b02e:	8018      	strh	r0, [r3, #0]
 800b030:	4b52      	ldr	r3, [pc, #328]	@ (800b17c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b032:	781b      	ldrb	r3, [r3, #0]
 800b034:	2b00      	cmp	r3, #0
 800b036:	d174      	bne.n	800b122 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b038:	883b      	ldrh	r3, [r7, #0]
 800b03a:	f8aa 0000 	strh.w	r0, [sl]
 800b03e:	f8ab 3000 	strh.w	r3, [fp]
 800b042:	4648      	mov	r0, r9
 800b044:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800b048:	f005 ffa4 	bl	8010f94 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b04c:	2200      	movs	r2, #0
 800b04e:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800b052:	4611      	mov	r1, r2
 800b054:	4628      	mov	r0, r5
 800b056:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b05a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b05e:	f7f7 f916 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 800b062:	2301      	movs	r3, #1
 800b064:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800b068:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800b06c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b070:	2b00      	cmp	r3, #0
 800b072:	dd5c      	ble.n	800b12e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b074:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b078:	2b00      	cmp	r3, #0
 800b07a:	dd58      	ble.n	800b12e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b07c:	462a      	mov	r2, r5
 800b07e:	ab0a      	add	r3, sp, #40	@ 0x28
 800b080:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b084:	6851      	ldr	r1, [r2, #4]
 800b086:	c303      	stmia	r3!, {r0, r1}
 800b088:	4631      	mov	r1, r6
 800b08a:	a80a      	add	r0, sp, #40	@ 0x28
 800b08c:	f7ff fbf8 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 800b090:	4b38      	ldr	r3, [pc, #224]	@ (800b174 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b092:	2100      	movs	r1, #0
 800b094:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b098:	4b37      	ldr	r3, [pc, #220]	@ (800b178 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b09a:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800b09e:	aa0a      	add	r2, sp, #40	@ 0x28
 800b0a0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b0a4:	910c      	str	r1, [sp, #48]	@ 0x30
 800b0a6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800b0aa:	ab08      	add	r3, sp, #32
 800b0ac:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b0b0:	e883 0003 	stmia.w	r3, {r0, r1}
 800b0b4:	4618      	mov	r0, r3
 800b0b6:	a90c      	add	r1, sp, #48	@ 0x30
 800b0b8:	f7ff fbe2 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 800b0bc:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800b0be:	2b00      	cmp	r3, #0
 800b0c0:	d13c      	bne.n	800b13c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b0c2:	2000      	movs	r0, #0
 800b0c4:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800b0c8:	2600      	movs	r6, #0
 800b0ca:	696b      	ldr	r3, [r5, #20]
 800b0cc:	a908      	add	r1, sp, #32
 800b0ce:	682a      	ldr	r2, [r5, #0]
 800b0d0:	4628      	mov	r0, r5
 800b0d2:	9305      	str	r3, [sp, #20]
 800b0d4:	616e      	str	r6, [r5, #20]
 800b0d6:	6892      	ldr	r2, [r2, #8]
 800b0d8:	4790      	blx	r2
 800b0da:	9b05      	ldr	r3, [sp, #20]
 800b0dc:	4652      	mov	r2, sl
 800b0de:	4649      	mov	r1, r9
 800b0e0:	616b      	str	r3, [r5, #20]
 800b0e2:	4628      	mov	r0, r5
 800b0e4:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800b0e8:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800b0ec:	f7f7 f8cf 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 800b0f0:	9a01      	ldr	r2, [sp, #4]
 800b0f2:	4b23      	ldr	r3, [pc, #140]	@ (800b180 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b0f4:	4620      	mov	r0, r4
 800b0f6:	801a      	strh	r2, [r3, #0]
 800b0f8:	9a02      	ldr	r2, [sp, #8]
 800b0fa:	4b22      	ldr	r3, [pc, #136]	@ (800b184 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b0fc:	801a      	strh	r2, [r3, #0]
 800b0fe:	9a03      	ldr	r2, [sp, #12]
 800b100:	4b1c      	ldr	r3, [pc, #112]	@ (800b174 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b102:	801a      	strh	r2, [r3, #0]
 800b104:	4b1c      	ldr	r3, [pc, #112]	@ (800b178 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b106:	9a04      	ldr	r2, [sp, #16]
 800b108:	801a      	strh	r2, [r3, #0]
 800b10a:	6823      	ldr	r3, [r4, #0]
 800b10c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800b110:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b112:	4798      	blx	r3
 800b114:	6823      	ldr	r3, [r4, #0]
 800b116:	4620      	mov	r0, r4
 800b118:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b11a:	4798      	blx	r3
 800b11c:	b00f      	add	sp, #60	@ 0x3c
 800b11e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b122:	883b      	ldrh	r3, [r7, #0]
 800b124:	f8ab 0000 	strh.w	r0, [fp]
 800b128:	f8aa 3000 	strh.w	r3, [sl]
 800b12c:	e789      	b.n	800b042 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b12e:	462a      	mov	r2, r5
 800b130:	ab0a      	add	r3, sp, #40	@ 0x28
 800b132:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b136:	6851      	ldr	r1, [r2, #4]
 800b138:	c303      	stmia	r3!, {r0, r1}
 800b13a:	e7a9      	b.n	800b090 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b13c:	a807      	add	r0, sp, #28
 800b13e:	f006 f92d 	bl	801139c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b142:	4606      	mov	r6, r0
 800b144:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800b146:	6803      	ldr	r3, [r0, #0]
 800b148:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b14a:	4798      	blx	r3
 800b14c:	4286      	cmp	r6, r0
 800b14e:	d1b8      	bne.n	800b0c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b150:	f7f7 f992 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800b154:	6803      	ldr	r3, [r0, #0]
 800b156:	4606      	mov	r6, r0
 800b158:	a807      	add	r0, sp, #28
 800b15a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b15c:	9305      	str	r3, [sp, #20]
 800b15e:	f006 f91d 	bl	801139c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b162:	9b05      	ldr	r3, [sp, #20]
 800b164:	4601      	mov	r1, r0
 800b166:	4630      	mov	r0, r6
 800b168:	4798      	blx	r3
 800b16a:	f080 0001 	eor.w	r0, r0, #1
 800b16e:	b2c0      	uxtb	r0, r0
 800b170:	e7a8      	b.n	800b0c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b172:	bf00      	nop
 800b174:	200150b4 	.word	0x200150b4
 800b178:	200150b6 	.word	0x200150b6
 800b17c:	200150b8 	.word	0x200150b8
 800b180:	200150ba 	.word	0x200150ba
 800b184:	200150bc 	.word	0x200150bc

0800b188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b188:	4b07      	ldr	r3, [pc, #28]	@ (800b1a8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b18a:	b510      	push	{r4, lr}
 800b18c:	781b      	ldrb	r3, [r3, #0]
 800b18e:	4604      	mov	r4, r0
 800b190:	b13b      	cbz	r3, 800b1a2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b192:	6803      	ldr	r3, [r0, #0]
 800b194:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b196:	4798      	blx	r3
 800b198:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b19a:	4283      	cmp	r3, r0
 800b19c:	d101      	bne.n	800b1a2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b19e:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800b1a0:	bd10      	pop	{r4, pc}
 800b1a2:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800b1a4:	e7fc      	b.n	800b1a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b1a6:	bf00      	nop
 800b1a8:	200150be 	.word	0x200150be

0800b1ac <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b1ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b1b0:	461d      	mov	r5, r3
 800b1b2:	b08a      	sub	sp, #40	@ 0x28
 800b1b4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b1b8:	4690      	mov	r8, r2
 800b1ba:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800b1be:	2400      	movs	r4, #0
 800b1c0:	4607      	mov	r7, r0
 800b1c2:	fb06 8505 	mla	r5, r6, r5, r8
 800b1c6:	9404      	str	r4, [sp, #16]
 800b1c8:	f88d 4020 	strb.w	r4, [sp, #32]
 800b1cc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b1d0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b1d4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b1d8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b1dc:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b1e0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b1e4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b1e8:	f7ff ffce 	bl	800b188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b1ec:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b1f0:	6878      	ldr	r0, [r7, #4]
 800b1f2:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b1f6:	a901      	add	r1, sp, #4
 800b1f8:	9505      	str	r5, [sp, #20]
 800b1fa:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b1fe:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800b202:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b206:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b20a:	6803      	ldr	r3, [r0, #0]
 800b20c:	685b      	ldr	r3, [r3, #4]
 800b20e:	4798      	blx	r3
 800b210:	b00a      	add	sp, #40	@ 0x28
 800b212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b216 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b216:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b21a:	b08b      	sub	sp, #44	@ 0x2c
 800b21c:	2400      	movs	r4, #0
 800b21e:	4691      	mov	r9, r2
 800b220:	461d      	mov	r5, r3
 800b222:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800b226:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800b22a:	4688      	mov	r8, r1
 800b22c:	4607      	mov	r7, r0
 800b22e:	9404      	str	r4, [sp, #16]
 800b230:	fb06 9505 	mla	r5, r6, r5, r9
 800b234:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b238:	f7ff ffa6 	bl	800b188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b23c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b240:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b244:	6878      	ldr	r0, [r7, #4]
 800b246:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b24a:	a901      	add	r1, sp, #4
 800b24c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b250:	9505      	str	r5, [sp, #20]
 800b252:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b256:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b25a:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b25e:	f8cd 8010 	str.w	r8, [sp, #16]
 800b262:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b266:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b26a:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b26e:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b272:	6803      	ldr	r3, [r0, #0]
 800b274:	685b      	ldr	r3, [r3, #4]
 800b276:	4798      	blx	r3
 800b278:	b00b      	add	sp, #44	@ 0x2c
 800b27a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b280 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b280:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b284:	b08a      	sub	sp, #40	@ 0x28
 800b286:	4698      	mov	r8, r3
 800b288:	2300      	movs	r3, #0
 800b28a:	4606      	mov	r6, r0
 800b28c:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800b290:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800b294:	2d0b      	cmp	r5, #11
 800b296:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800b29a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800b29e:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800b2a2:	9304      	str	r3, [sp, #16]
 800b2a4:	d137      	bne.n	800b316 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b2a6:	2380      	movs	r3, #128	@ 0x80
 800b2a8:	f88d 0020 	strb.w	r0, [sp, #32]
 800b2ac:	4630      	mov	r0, r6
 800b2ae:	9203      	str	r2, [sp, #12]
 800b2b0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b2b4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b2b8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b2bc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b2c0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b2c4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b2c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b2cc:	f7ff ff5c 	bl	800b188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b2d0:	2c0b      	cmp	r4, #11
 800b2d2:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800b2d6:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b2da:	bf94      	ite	ls
 800b2dc:	4b19      	ldrls	r3, [pc, #100]	@ (800b344 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b2de:	2100      	movhi	r1, #0
 800b2e0:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800b2e4:	bf98      	it	ls
 800b2e6:	5d19      	ldrbls	r1, [r3, r4]
 800b2e8:	fb02 8307 	mla	r3, r2, r7, r8
 800b2ec:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b2f0:	10c9      	asrs	r1, r1, #3
 800b2f2:	fb01 0003 	mla	r0, r1, r3, r0
 800b2f6:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800b2fa:	a901      	add	r1, sp, #4
 800b2fc:	9005      	str	r0, [sp, #20]
 800b2fe:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b302:	2300      	movs	r3, #0
 800b304:	6870      	ldr	r0, [r6, #4]
 800b306:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b30a:	6803      	ldr	r3, [r0, #0]
 800b30c:	685b      	ldr	r3, [r3, #4]
 800b30e:	4798      	blx	r3
 800b310:	b00a      	add	sp, #40	@ 0x28
 800b312:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b316:	2d02      	cmp	r5, #2
 800b318:	d109      	bne.n	800b32e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b31a:	28ff      	cmp	r0, #255	@ 0xff
 800b31c:	d105      	bne.n	800b32a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b31e:	f1bc 0f00 	cmp.w	ip, #0
 800b322:	bf14      	ite	ne
 800b324:	2340      	movne	r3, #64	@ 0x40
 800b326:	2320      	moveq	r3, #32
 800b328:	e7be      	b.n	800b2a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b32a:	2340      	movs	r3, #64	@ 0x40
 800b32c:	e7bc      	b.n	800b2a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b32e:	28ff      	cmp	r0, #255	@ 0xff
 800b330:	d105      	bne.n	800b33e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b332:	f1bc 0f00 	cmp.w	ip, #0
 800b336:	bf14      	ite	ne
 800b338:	2304      	movne	r3, #4
 800b33a:	2301      	moveq	r3, #1
 800b33c:	e7b4      	b.n	800b2a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b33e:	2304      	movs	r3, #4
 800b340:	e7b2      	b.n	800b2a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b342:	bf00      	nop
 800b344:	080212f4 	.word	0x080212f4

0800b348 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b34c:	b08b      	sub	sp, #44	@ 0x2c
 800b34e:	461d      	mov	r5, r3
 800b350:	2400      	movs	r4, #0
 800b352:	4688      	mov	r8, r1
 800b354:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800b358:	4693      	mov	fp, r2
 800b35a:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b35e:	4607      	mov	r7, r0
 800b360:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800b364:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800b368:	9404      	str	r4, [sp, #16]
 800b36a:	bf14      	ite	ne
 800b36c:	2308      	movne	r3, #8
 800b36e:	2302      	moveq	r3, #2
 800b370:	fb05 b50a 	mla	r5, r5, sl, fp
 800b374:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b378:	f7ff ff06 	bl	800b188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b37c:	2e0b      	cmp	r6, #11
 800b37e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800b382:	a901      	add	r1, sp, #4
 800b384:	bf98      	it	ls
 800b386:	4b13      	ldrls	r3, [pc, #76]	@ (800b3d4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b388:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b38c:	bf98      	it	ls
 800b38e:	5d9c      	ldrbls	r4, [r3, r6]
 800b390:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b394:	10e4      	asrs	r4, r4, #3
 800b396:	f8cd 8010 	str.w	r8, [sp, #16]
 800b39a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b39e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b3a2:	fb04 0405 	mla	r4, r4, r5, r0
 800b3a6:	6878      	ldr	r0, [r7, #4]
 800b3a8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b3ac:	2300      	movs	r3, #0
 800b3ae:	9405      	str	r4, [sp, #20]
 800b3b0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b3b4:	f88d 9020 	strb.w	r9, [sp, #32]
 800b3b8:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800b3bc:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b3c0:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800b3c4:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800b3c8:	6803      	ldr	r3, [r0, #0]
 800b3ca:	685b      	ldr	r3, [r3, #4]
 800b3cc:	4798      	blx	r3
 800b3ce:	b00b      	add	sp, #44	@ 0x2c
 800b3d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b3d4:	080212f4 	.word	0x080212f4

0800b3d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b3d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b3dc:	461e      	mov	r6, r3
 800b3de:	4b0a      	ldr	r3, [pc, #40]	@ (800b408 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b3e0:	460f      	mov	r7, r1
 800b3e2:	4690      	mov	r8, r2
 800b3e4:	881d      	ldrh	r5, [r3, #0]
 800b3e6:	f7f7 f847 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800b3ea:	6803      	ldr	r3, [r0, #0]
 800b3ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b3ee:	4798      	blx	r3
 800b3f0:	280b      	cmp	r0, #11
 800b3f2:	bf96      	itet	ls
 800b3f4:	4b05      	ldrls	r3, [pc, #20]	@ (800b40c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b3f6:	2400      	movhi	r4, #0
 800b3f8:	5c1c      	ldrbls	r4, [r3, r0]
 800b3fa:	fb08 7005 	mla	r0, r8, r5, r7
 800b3fe:	10e4      	asrs	r4, r4, #3
 800b400:	fb04 6000 	mla	r0, r4, r0, r6
 800b404:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b408:	200150ba 	.word	0x200150ba
 800b40c:	080212f4 	.word	0x080212f4

0800b410 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b410:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b412:	b08b      	sub	sp, #44	@ 0x2c
 800b414:	461f      	mov	r7, r3
 800b416:	4604      	mov	r4, r0
 800b418:	4616      	mov	r6, r2
 800b41a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b41e:	2500      	movs	r5, #0
 800b420:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b424:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b428:	9504      	str	r5, [sp, #16]
 800b42a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b42e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b432:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b436:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b43a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b43e:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b442:	f88d 3020 	strb.w	r3, [sp, #32]
 800b446:	f7ff fe9f 	bl	800b188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b44a:	463a      	mov	r2, r7
 800b44c:	4631      	mov	r1, r6
 800b44e:	4603      	mov	r3, r0
 800b450:	4620      	mov	r0, r4
 800b452:	f7ff ffc1 	bl	800b3d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b456:	4b0e      	ldr	r3, [pc, #56]	@ (800b490 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b458:	9005      	str	r0, [sp, #20]
 800b45a:	881b      	ldrh	r3, [r3, #0]
 800b45c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b460:	f7f7 f80a 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800b464:	6803      	ldr	r3, [r0, #0]
 800b466:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b468:	4798      	blx	r3
 800b46a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800b46c:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800b470:	a901      	add	r1, sp, #4
 800b472:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800b476:	9304      	str	r3, [sp, #16]
 800b478:	6860      	ldr	r0, [r4, #4]
 800b47a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b47e:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800b482:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b486:	6803      	ldr	r3, [r0, #0]
 800b488:	685b      	ldr	r3, [r3, #4]
 800b48a:	4798      	blx	r3
 800b48c:	b00b      	add	sp, #44	@ 0x2c
 800b48e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b490:	200150ba 	.word	0x200150ba

0800b494 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b494:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b496:	b08d      	sub	sp, #52	@ 0x34
 800b498:	2501      	movs	r5, #1
 800b49a:	4604      	mov	r4, r0
 800b49c:	466b      	mov	r3, sp
 800b49e:	9503      	str	r5, [sp, #12]
 800b4a0:	e883 0006 	stmia.w	r3, {r1, r2}
 800b4a4:	2300      	movs	r3, #0
 800b4a6:	f8bd 6000 	ldrh.w	r6, [sp]
 800b4aa:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b4ae:	9306      	str	r3, [sp, #24]
 800b4b0:	6803      	ldr	r3, [r0, #0]
 800b4b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b4b4:	4798      	blx	r3
 800b4b6:	463a      	mov	r2, r7
 800b4b8:	4631      	mov	r1, r6
 800b4ba:	4603      	mov	r3, r0
 800b4bc:	4620      	mov	r0, r4
 800b4be:	f7ff ff8b 	bl	800b3d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b4c2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800b4c4:	9004      	str	r0, [sp, #16]
 800b4c6:	9307      	str	r3, [sp, #28]
 800b4c8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b4cc:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b4d0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b4d4:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b4d8:	4b0e      	ldr	r3, [pc, #56]	@ (800b514 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b4da:	881b      	ldrh	r3, [r3, #0]
 800b4dc:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b4e0:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b4e4:	f7f6 ffc8 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800b4e8:	6803      	ldr	r3, [r0, #0]
 800b4ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b4ec:	4798      	blx	r3
 800b4ee:	23ff      	movs	r3, #255	@ 0xff
 800b4f0:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b4f4:	a903      	add	r1, sp, #12
 800b4f6:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b4fa:	6860      	ldr	r0, [r4, #4]
 800b4fc:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b500:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b504:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b508:	6803      	ldr	r3, [r0, #0]
 800b50a:	685b      	ldr	r3, [r3, #4]
 800b50c:	4798      	blx	r3
 800b50e:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800b510:	b00d      	add	sp, #52	@ 0x34
 800b512:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b514:	200150ba 	.word	0x200150ba

0800b518 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b518:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b51c:	b08c      	sub	sp, #48	@ 0x30
 800b51e:	461e      	mov	r6, r3
 800b520:	2300      	movs	r3, #0
 800b522:	4604      	mov	r4, r0
 800b524:	466d      	mov	r5, sp
 800b526:	9306      	str	r3, [sp, #24]
 800b528:	6803      	ldr	r3, [r0, #0]
 800b52a:	e885 0006 	stmia.w	r5, {r1, r2}
 800b52e:	2501      	movs	r5, #1
 800b530:	f8bd 7000 	ldrh.w	r7, [sp]
 800b534:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b538:	9503      	str	r5, [sp, #12]
 800b53a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b53c:	4798      	blx	r3
 800b53e:	4642      	mov	r2, r8
 800b540:	4639      	mov	r1, r7
 800b542:	4603      	mov	r3, r0
 800b544:	4620      	mov	r0, r4
 800b546:	f7ff ff47 	bl	800b3d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b54a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b54e:	9004      	str	r0, [sp, #16]
 800b550:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b554:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b558:	9607      	str	r6, [sp, #28]
 800b55a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b55e:	4b10      	ldr	r3, [pc, #64]	@ (800b5a0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b560:	881b      	ldrh	r3, [r3, #0]
 800b562:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b566:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b568:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b56c:	f7f6 ff84 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800b570:	6803      	ldr	r3, [r0, #0]
 800b572:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b574:	4798      	blx	r3
 800b576:	23ff      	movs	r3, #255	@ 0xff
 800b578:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b57c:	a903      	add	r1, sp, #12
 800b57e:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b582:	6860      	ldr	r0, [r4, #4]
 800b584:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b588:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b58c:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b590:	6803      	ldr	r3, [r0, #0]
 800b592:	685b      	ldr	r3, [r3, #4]
 800b594:	4798      	blx	r3
 800b596:	4630      	mov	r0, r6
 800b598:	b00c      	add	sp, #48	@ 0x30
 800b59a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b59e:	bf00      	nop
 800b5a0:	200150ba 	.word	0x200150ba

0800b5a4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b5a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b5a6:	b085      	sub	sp, #20
 800b5a8:	4605      	mov	r5, r0
 800b5aa:	ac02      	add	r4, sp, #8
 800b5ac:	e884 0006 	stmia.w	r4, {r1, r2}
 800b5b0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b5b4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b5b8:	f7ff fde6 	bl	800b188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b5bc:	4631      	mov	r1, r6
 800b5be:	4603      	mov	r3, r0
 800b5c0:	463a      	mov	r2, r7
 800b5c2:	4628      	mov	r0, r5
 800b5c4:	f7ff ff08 	bl	800b3d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b5c8:	4a05      	ldr	r2, [pc, #20]	@ (800b5e0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b5ca:	682b      	ldr	r3, [r5, #0]
 800b5cc:	8812      	ldrh	r2, [r2, #0]
 800b5ce:	9200      	str	r2, [sp, #0]
 800b5d0:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800b5d2:	4603      	mov	r3, r0
 800b5d4:	4628      	mov	r0, r5
 800b5d6:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b5da:	47b0      	blx	r6
 800b5dc:	b005      	add	sp, #20
 800b5de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b5e0:	200150ba 	.word	0x200150ba

0800b5e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b5e4:	b570      	push	{r4, r5, r6, lr}
 800b5e6:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800b5ea:	4604      	mov	r4, r0
 800b5ec:	b19b      	cbz	r3, 800b616 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b5ee:	2002      	movs	r0, #2
 800b5f0:	f7f6 f838 	bl	8001664 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b5f4:	2300      	movs	r3, #0
 800b5f6:	4620      	mov	r0, r4
 800b5f8:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b5fc:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800b600:	6823      	ldr	r3, [r4, #0]
 800b602:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800b606:	f7ff fdbf 	bl	800b188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b60a:	4601      	mov	r1, r0
 800b60c:	4620      	mov	r0, r4
 800b60e:	462b      	mov	r3, r5
 800b610:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b614:	4718      	bx	r3
 800b616:	bd70      	pop	{r4, r5, r6, pc}

0800b618 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800b618:	b570      	push	{r4, r5, r6, lr}
 800b61a:	4605      	mov	r5, r0
 800b61c:	460c      	mov	r4, r1
 800b61e:	2003      	movs	r0, #3
 800b620:	b149      	cbz	r1, 800b636 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800b622:	f7f5 ffbf 	bl	80015a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b626:	6928      	ldr	r0, [r5, #16]
 800b628:	b168      	cbz	r0, 800b646 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b62a:	6803      	ldr	r3, [r0, #0]
 800b62c:	2101      	movs	r1, #1
 800b62e:	695b      	ldr	r3, [r3, #20]
 800b630:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b634:	4718      	bx	r3
 800b636:	f7f5 ffe5 	bl	8001604 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b63a:	6928      	ldr	r0, [r5, #16]
 800b63c:	b118      	cbz	r0, 800b646 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b63e:	6803      	ldr	r3, [r0, #0]
 800b640:	4621      	mov	r1, r4
 800b642:	695b      	ldr	r3, [r3, #20]
 800b644:	e7f4      	b.n	800b630 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800b646:	bd70      	pop	{r4, r5, r6, pc}

0800b648 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b648:	b538      	push	{r3, r4, r5, lr}
 800b64a:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800b64e:	4604      	mov	r4, r0
 800b650:	460d      	mov	r5, r1
 800b652:	428b      	cmp	r3, r1
 800b654:	d006      	beq.n	800b664 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b656:	6803      	ldr	r3, [r0, #0]
 800b658:	b929      	cbnz	r1, 800b666 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b65a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800b65e:	4798      	blx	r3
 800b660:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800b664:	bd38      	pop	{r3, r4, r5, pc}
 800b666:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800b66a:	e7f8      	b.n	800b65e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b66c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b66c:	4b0d      	ldr	r3, [pc, #52]	@ (800b6a4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b66e:	b510      	push	{r4, lr}
 800b670:	781b      	ldrb	r3, [r3, #0]
 800b672:	4604      	mov	r4, r0
 800b674:	b95b      	cbnz	r3, 800b68e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b676:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800b67a:	2b02      	cmp	r3, #2
 800b67c:	d007      	beq.n	800b68e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b67e:	6840      	ldr	r0, [r0, #4]
 800b680:	f000 f912 	bl	800b8a8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b684:	b118      	cbz	r0, 800b68e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b686:	6862      	ldr	r2, [r4, #4]
 800b688:	7a53      	ldrb	r3, [r2, #9]
 800b68a:	2b00      	cmp	r3, #0
 800b68c:	d0fc      	beq.n	800b688 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b68e:	f7f6 f96b 	bl	8001968 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b692:	4620      	mov	r0, r4
 800b694:	2100      	movs	r1, #0
 800b696:	f7ff ffd7 	bl	800b648 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b69a:	4620      	mov	r0, r4
 800b69c:	f7ff fd74 	bl	800b188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6a0:	bd10      	pop	{r4, pc}
 800b6a2:	bf00      	nop
 800b6a4:	200150be 	.word	0x200150be

0800b6a8 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b6a8:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b6ac:	1a13      	subs	r3, r2, r0
 800b6ae:	4258      	negs	r0, r3
 800b6b0:	4158      	adcs	r0, r3
 800b6b2:	4770      	bx	lr

0800b6b4 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b6b4:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b6b8:	1a9b      	subs	r3, r3, r2
 800b6ba:	2b00      	cmp	r3, #0
 800b6bc:	bfdc      	itt	le
 800b6be:	6882      	ldrle	r2, [r0, #8]
 800b6c0:	189b      	addle	r3, r3, r2
 800b6c2:	2b01      	cmp	r3, #1
 800b6c4:	bfcc      	ite	gt
 800b6c6:	2000      	movgt	r0, #0
 800b6c8:	2001      	movle	r0, #1
 800b6ca:	4770      	bx	lr

0800b6cc <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b6cc:	6902      	ldr	r2, [r0, #16]
 800b6ce:	6843      	ldr	r3, [r0, #4]
 800b6d0:	2024      	movs	r0, #36	@ 0x24
 800b6d2:	fb00 3002 	mla	r0, r0, r2, r3
 800b6d6:	4770      	bx	lr

0800b6d8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b6d8:	6803      	ldr	r3, [r0, #0]
 800b6da:	691b      	ldr	r3, [r3, #16]
 800b6dc:	4718      	bx	r3

0800b6de <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b6de:	2301      	movs	r3, #1
 800b6e0:	b570      	push	{r4, r5, r6, lr}
 800b6e2:	7203      	strb	r3, [r0, #8]
 800b6e4:	4604      	mov	r4, r0
 800b6e6:	6840      	ldr	r0, [r0, #4]
 800b6e8:	6803      	ldr	r3, [r0, #0]
 800b6ea:	699b      	ldr	r3, [r3, #24]
 800b6ec:	4798      	blx	r3
 800b6ee:	6803      	ldr	r3, [r0, #0]
 800b6f0:	4605      	mov	r5, r0
 800b6f2:	2b40      	cmp	r3, #64	@ 0x40
 800b6f4:	d00c      	beq.n	800b710 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b6f6:	d810      	bhi.n	800b71a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b6f8:	2b04      	cmp	r3, #4
 800b6fa:	d01d      	beq.n	800b738 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b6fc:	d804      	bhi.n	800b708 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b6fe:	2b01      	cmp	r3, #1
 800b700:	d006      	beq.n	800b710 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b702:	2b02      	cmp	r3, #2
 800b704:	d02c      	beq.n	800b760 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b706:	bd70      	pop	{r4, r5, r6, pc}
 800b708:	2b08      	cmp	r3, #8
 800b70a:	d01d      	beq.n	800b748 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b70c:	2b20      	cmp	r3, #32
 800b70e:	d1fa      	bne.n	800b706 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b710:	6823      	ldr	r3, [r4, #0]
 800b712:	4620      	mov	r0, r4
 800b714:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b716:	4798      	blx	r3
 800b718:	e013      	b.n	800b742 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b71a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b71e:	d0f7      	beq.n	800b710 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b720:	d804      	bhi.n	800b72c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b722:	2b80      	cmp	r3, #128	@ 0x80
 800b724:	d0f4      	beq.n	800b710 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b726:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800b72a:	e7f0      	b.n	800b70e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b72c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800b730:	d0ee      	beq.n	800b710 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b732:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b736:	e7e5      	b.n	800b704 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b738:	6823      	ldr	r3, [r4, #0]
 800b73a:	7f01      	ldrb	r1, [r0, #28]
 800b73c:	4620      	mov	r0, r4
 800b73e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b740:	4798      	blx	r3
 800b742:	6823      	ldr	r3, [r4, #0]
 800b744:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b746:	e006      	b.n	800b756 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b748:	6823      	ldr	r3, [r4, #0]
 800b74a:	7f01      	ldrb	r1, [r0, #28]
 800b74c:	4620      	mov	r0, r4
 800b74e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b750:	4798      	blx	r3
 800b752:	6823      	ldr	r3, [r4, #0]
 800b754:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b756:	4629      	mov	r1, r5
 800b758:	4620      	mov	r0, r4
 800b75a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b75e:	4718      	bx	r3
 800b760:	6823      	ldr	r3, [r4, #0]
 800b762:	4620      	mov	r0, r4
 800b764:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b766:	4798      	blx	r3
 800b768:	e7f3      	b.n	800b752 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b76a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b76a:	4770      	bx	lr

0800b76c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b76c:	4770      	bx	lr

0800b76e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b76e:	4770      	bx	lr

0800b770 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b770:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b774:	b510      	push	{r4, lr}
 800b776:	1ad2      	subs	r2, r2, r3
 800b778:	2a00      	cmp	r2, #0
 800b77a:	bfdc      	itt	le
 800b77c:	6884      	ldrle	r4, [r0, #8]
 800b77e:	1912      	addle	r2, r2, r4
 800b780:	2a01      	cmp	r2, #1
 800b782:	dd16      	ble.n	800b7b2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b784:	6842      	ldr	r2, [r0, #4]
 800b786:	2424      	movs	r4, #36	@ 0x24
 800b788:	fb04 2303 	mla	r3, r4, r3, r2
 800b78c:	f101 0220 	add.w	r2, r1, #32
 800b790:	f851 4b04 	ldr.w	r4, [r1], #4
 800b794:	4291      	cmp	r1, r2
 800b796:	f843 4b04 	str.w	r4, [r3], #4
 800b79a:	d1f9      	bne.n	800b790 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b79c:	780a      	ldrb	r2, [r1, #0]
 800b79e:	701a      	strb	r2, [r3, #0]
 800b7a0:	68c3      	ldr	r3, [r0, #12]
 800b7a2:	6882      	ldr	r2, [r0, #8]
 800b7a4:	f3bf 8f5b 	dmb	ish
 800b7a8:	3301      	adds	r3, #1
 800b7aa:	429a      	cmp	r2, r3
 800b7ac:	bfd8      	it	le
 800b7ae:	1a9b      	suble	r3, r3, r2
 800b7b0:	60c3      	str	r3, [r0, #12]
 800b7b2:	bd10      	pop	{r4, pc}

0800b7b4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b7b4:	6903      	ldr	r3, [r0, #16]
 800b7b6:	6882      	ldr	r2, [r0, #8]
 800b7b8:	f3bf 8f5b 	dmb	ish
 800b7bc:	3301      	adds	r3, #1
 800b7be:	429a      	cmp	r2, r3
 800b7c0:	bfd8      	it	le
 800b7c2:	1a9b      	suble	r3, r3, r2
 800b7c4:	6103      	str	r3, [r0, #16]
 800b7c6:	4770      	bx	lr

0800b7c8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b7c8:	b570      	push	{r4, r5, r6, lr}
 800b7ca:	4604      	mov	r4, r0
 800b7cc:	460e      	mov	r6, r1
 800b7ce:	6860      	ldr	r0, [r4, #4]
 800b7d0:	6803      	ldr	r3, [r0, #0]
 800b7d2:	685b      	ldr	r3, [r3, #4]
 800b7d4:	4798      	blx	r3
 800b7d6:	2800      	cmp	r0, #0
 800b7d8:	d1f9      	bne.n	800b7ce <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b7da:	4d0d      	ldr	r5, [pc, #52]	@ (800b810 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b7dc:	6828      	ldr	r0, [r5, #0]
 800b7de:	6803      	ldr	r3, [r0, #0]
 800b7e0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b7e2:	4798      	blx	r3
 800b7e4:	f7f6 f8ce 	bl	8001984 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b7e8:	6828      	ldr	r0, [r5, #0]
 800b7ea:	2101      	movs	r1, #1
 800b7ec:	f7ff ff2c 	bl	800b648 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b7f0:	6860      	ldr	r0, [r4, #4]
 800b7f2:	4631      	mov	r1, r6
 800b7f4:	6803      	ldr	r3, [r0, #0]
 800b7f6:	689b      	ldr	r3, [r3, #8]
 800b7f8:	4798      	blx	r3
 800b7fa:	6823      	ldr	r3, [r4, #0]
 800b7fc:	4620      	mov	r0, r4
 800b7fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b800:	4798      	blx	r3
 800b802:	6828      	ldr	r0, [r5, #0]
 800b804:	6803      	ldr	r3, [r0, #0]
 800b806:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b80a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800b80c:	4718      	bx	r3
 800b80e:	bf00      	nop
 800b810:	200150c0 	.word	0x200150c0

0800b814 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b814:	b508      	push	{r3, lr}
 800b816:	f7f6 f8a7 	bl	8001968 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b81a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b81e:	f7f6 b8ab 	b.w	8001978 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b822 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b822:	b510      	push	{r4, lr}
 800b824:	4604      	mov	r4, r0
 800b826:	2114      	movs	r1, #20
 800b828:	f013 f899 	bl	801e95e <_ZdlPvj>
 800b82c:	4620      	mov	r0, r4
 800b82e:	bd10      	pop	{r4, pc}

0800b830 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b830:	b510      	push	{r4, lr}
 800b832:	4604      	mov	r4, r0
 800b834:	6840      	ldr	r0, [r0, #4]
 800b836:	6803      	ldr	r3, [r0, #0]
 800b838:	681b      	ldr	r3, [r3, #0]
 800b83a:	4798      	blx	r3
 800b83c:	b948      	cbnz	r0, 800b852 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b83e:	7a63      	ldrb	r3, [r4, #9]
 800b840:	b13b      	cbz	r3, 800b852 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b842:	7a23      	ldrb	r3, [r4, #8]
 800b844:	b92b      	cbnz	r3, 800b852 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b846:	6823      	ldr	r3, [r4, #0]
 800b848:	4620      	mov	r0, r4
 800b84a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b84c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b850:	4718      	bx	r3
 800b852:	bd10      	pop	{r4, pc}

0800b854 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b854:	b570      	push	{r4, r5, r6, lr}
 800b856:	4604      	mov	r4, r0
 800b858:	6840      	ldr	r0, [r0, #4]
 800b85a:	6803      	ldr	r3, [r0, #0]
 800b85c:	681b      	ldr	r3, [r3, #0]
 800b85e:	4798      	blx	r3
 800b860:	4605      	mov	r5, r0
 800b862:	b930      	cbnz	r0, 800b872 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b864:	7a23      	ldrb	r3, [r4, #8]
 800b866:	b123      	cbz	r3, 800b872 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b868:	6860      	ldr	r0, [r4, #4]
 800b86a:	6803      	ldr	r3, [r0, #0]
 800b86c:	695b      	ldr	r3, [r3, #20]
 800b86e:	4798      	blx	r3
 800b870:	7225      	strb	r5, [r4, #8]
 800b872:	6860      	ldr	r0, [r4, #4]
 800b874:	6803      	ldr	r3, [r0, #0]
 800b876:	681b      	ldr	r3, [r3, #0]
 800b878:	4798      	blx	r3
 800b87a:	b928      	cbnz	r0, 800b888 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b87c:	6823      	ldr	r3, [r4, #0]
 800b87e:	4620      	mov	r0, r4
 800b880:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b882:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b886:	4718      	bx	r3
 800b888:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b88c:	f7f6 b882 	b.w	8001994 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b890 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b890:	b510      	push	{r4, lr}
 800b892:	6082      	str	r2, [r0, #8]
 800b894:	2200      	movs	r2, #0
 800b896:	4c03      	ldr	r4, [pc, #12]	@ (800b8a4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b898:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b89c:	e9c0 4100 	strd	r4, r1, [r0]
 800b8a0:	bd10      	pop	{r4, pc}
 800b8a2:	bf00      	nop
 800b8a4:	08021308 	.word	0x08021308

0800b8a8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b8a8:	6840      	ldr	r0, [r0, #4]
 800b8aa:	6803      	ldr	r3, [r0, #0]
 800b8ac:	681b      	ldr	r3, [r3, #0]
 800b8ae:	4718      	bx	r3

0800b8b0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800b8b0:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800b8b4:	4770      	bx	lr

0800b8b6 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800b8b6:	b510      	push	{r4, lr}
 800b8b8:	4604      	mov	r4, r0
 800b8ba:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800b8bc:	b150      	cbz	r0, 800b8d4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b8be:	6803      	ldr	r3, [r0, #0]
 800b8c0:	68db      	ldr	r3, [r3, #12]
 800b8c2:	4798      	blx	r3
 800b8c4:	b130      	cbz	r0, 800b8d4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b8c6:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800b8c8:	4621      	mov	r1, r4
 800b8ca:	6803      	ldr	r3, [r0, #0]
 800b8cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b8d0:	689b      	ldr	r3, [r3, #8]
 800b8d2:	4718      	bx	r3
 800b8d4:	bd10      	pop	{r4, pc}

0800b8d6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800b8d6:	790b      	ldrb	r3, [r1, #4]
 800b8d8:	2b00      	cmp	r3, #0
 800b8da:	bf0c      	ite	eq
 800b8dc:	2301      	moveq	r3, #1
 800b8de:	2300      	movne	r3, #0
 800b8e0:	b570      	push	{r4, r5, r6, lr}
 800b8e2:	4604      	mov	r4, r0
 800b8e4:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 800b8e8:	460e      	mov	r6, r1
 800b8ea:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 800b8ee:	d109      	bne.n	800b904 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800b8f0:	b14d      	cbz	r5, 800b906 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800b8f2:	7933      	ldrb	r3, [r6, #4]
 800b8f4:	2b01      	cmp	r3, #1
 800b8f6:	d10c      	bne.n	800b912 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800b8f8:	6823      	ldr	r3, [r4, #0]
 800b8fa:	4620      	mov	r0, r4
 800b8fc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800b8fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b902:	4718      	bx	r3
 800b904:	b12d      	cbz	r5, 800b912 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800b906:	6823      	ldr	r3, [r4, #0]
 800b908:	4620      	mov	r0, r4
 800b90a:	695b      	ldr	r3, [r3, #20]
 800b90c:	4798      	blx	r3
 800b90e:	2d00      	cmp	r5, #0
 800b910:	d1ef      	bne.n	800b8f2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800b912:	bd70      	pop	{r4, r5, r6, pc}

0800b914 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800b914:	4770      	bx	lr

0800b916 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800b916:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800b91a:	b133      	cbz	r3, 800b92a <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800b91c:	790b      	ldrb	r3, [r1, #4]
 800b91e:	2b01      	cmp	r3, #1
 800b920:	bf01      	itttt	eq
 800b922:	8dc3      	ldrheq	r3, [r0, #46]	@ 0x2e
 800b924:	8e02      	ldrheq	r2, [r0, #48]	@ 0x30
 800b926:	8603      	strheq	r3, [r0, #48]	@ 0x30
 800b928:	85c2      	strheq	r2, [r0, #46]	@ 0x2e
 800b92a:	f7ff bfd4 	b.w	800b8d6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800b92e <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800b92e:	8813      	ldrh	r3, [r2, #0]
 800b930:	8683      	strh	r3, [r0, #52]	@ 0x34
 800b932:	f000 bbf6 	b.w	800c122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800b936 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800b936:	b510      	push	{r4, lr}
 800b938:	4604      	mov	r4, r0
 800b93a:	2138      	movs	r1, #56	@ 0x38
 800b93c:	f013 f80f 	bl	801e95e <_ZdlPvj>
 800b940:	4620      	mov	r0, r4
 800b942:	bd10      	pop	{r4, pc}

0800b944 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800b944:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800b948:	b12a      	cbz	r2, 800b956 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800b94a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800b94e:	b112      	cbz	r2, 800b956 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800b950:	6803      	ldr	r3, [r0, #0]
 800b952:	695b      	ldr	r3, [r3, #20]
 800b954:	4718      	bx	r3
 800b956:	4770      	bx	lr

0800b958 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800b958:	2000      	movs	r0, #0
 800b95a:	4770      	bx	lr

0800b95c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800b95c:	4b07      	ldr	r3, [pc, #28]	@ (800b97c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800b95e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800b960:	881b      	ldrh	r3, [r3, #0]
 800b962:	4293      	cmp	r3, r2
 800b964:	bf81      	itttt	hi
 800b966:	4b06      	ldrhi	r3, [pc, #24]	@ (800b980 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800b968:	681b      	ldrhi	r3, [r3, #0]
 800b96a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800b96e:	7858      	ldrbhi	r0, [r3, #1]
 800b970:	bf8c      	ite	hi
 800b972:	f000 0003 	andhi.w	r0, r0, #3
 800b976:	2000      	movls	r0, #0
 800b978:	4770      	bx	lr
 800b97a:	bf00      	nop
 800b97c:	20015114 	.word	0x20015114
 800b980:	20015110 	.word	0x20015110

0800b984 <_ZN8touchgfx8TextAreaD1Ev>:
 800b984:	4770      	bx	lr
	...

0800b988 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800b988:	4b11      	ldr	r3, [pc, #68]	@ (800b9d0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800b98a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b98e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800b990:	4604      	mov	r4, r0
 800b992:	881b      	ldrh	r3, [r3, #0]
 800b994:	428b      	cmp	r3, r1
 800b996:	d918      	bls.n	800b9ca <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800b998:	6803      	ldr	r3, [r0, #0]
 800b99a:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800b99c:	4b0d      	ldr	r3, [pc, #52]	@ (800b9d4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800b99e:	6818      	ldr	r0, [r3, #0]
 800b9a0:	f7f7 fc2c 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
 800b9a4:	6823      	ldr	r3, [r4, #0]
 800b9a6:	4606      	mov	r6, r0
 800b9a8:	4620      	mov	r0, r4
 800b9aa:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b9ac:	4798      	blx	r3
 800b9ae:	6823      	ldr	r3, [r4, #0]
 800b9b0:	4607      	mov	r7, r0
 800b9b2:	4620      	mov	r0, r4
 800b9b4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800b9b8:	4798      	blx	r3
 800b9ba:	463a      	mov	r2, r7
 800b9bc:	4603      	mov	r3, r0
 800b9be:	4631      	mov	r1, r6
 800b9c0:	4620      	mov	r0, r4
 800b9c2:	46ac      	mov	ip, r5
 800b9c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b9c8:	4760      	bx	ip
 800b9ca:	2000      	movs	r0, #0
 800b9cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b9d0:	20015114 	.word	0x20015114
 800b9d4:	2001511c 	.word	0x2001511c

0800b9d8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800b9d8:	4b18      	ldr	r3, [pc, #96]	@ (800ba3c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800b9da:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b9de:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800b9e0:	4604      	mov	r4, r0
 800b9e2:	881b      	ldrh	r3, [r3, #0]
 800b9e4:	428b      	cmp	r3, r1
 800b9e6:	d926      	bls.n	800ba36 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800b9e8:	4b15      	ldr	r3, [pc, #84]	@ (800ba40 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800b9ea:	681b      	ldr	r3, [r3, #0]
 800b9ec:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800b9f0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800b9f4:	4b13      	ldr	r3, [pc, #76]	@ (800ba44 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800b9f6:	7855      	ldrb	r5, [r2, #1]
 800b9f8:	681b      	ldr	r3, [r3, #0]
 800b9fa:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800b9fe:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800ba02:	6833      	ldr	r3, [r6, #0]
 800ba04:	69df      	ldr	r7, [r3, #28]
 800ba06:	4b10      	ldr	r3, [pc, #64]	@ (800ba48 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800ba08:	6818      	ldr	r0, [r3, #0]
 800ba0a:	f7f7 fbf7 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
 800ba0e:	6823      	ldr	r3, [r4, #0]
 800ba10:	4680      	mov	r8, r0
 800ba12:	4620      	mov	r0, r4
 800ba14:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ba16:	4798      	blx	r3
 800ba18:	6823      	ldr	r3, [r4, #0]
 800ba1a:	4681      	mov	r9, r0
 800ba1c:	4620      	mov	r0, r4
 800ba1e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ba22:	4798      	blx	r3
 800ba24:	464b      	mov	r3, r9
 800ba26:	9000      	str	r0, [sp, #0]
 800ba28:	4642      	mov	r2, r8
 800ba2a:	4629      	mov	r1, r5
 800ba2c:	4630      	mov	r0, r6
 800ba2e:	47b8      	blx	r7
 800ba30:	b003      	add	sp, #12
 800ba32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ba36:	2000      	movs	r0, #0
 800ba38:	e7fa      	b.n	800ba30 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800ba3a:	bf00      	nop
 800ba3c:	20015114 	.word	0x20015114
 800ba40:	20015110 	.word	0x20015110
 800ba44:	20015118 	.word	0x20015118
 800ba48:	2001511c 	.word	0x2001511c

0800ba4c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800ba4c:	b40e      	push	{r1, r2, r3}
 800ba4e:	4b30      	ldr	r3, [pc, #192]	@ (800bb10 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800ba50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ba54:	881a      	ldrh	r2, [r3, #0]
 800ba56:	b09d      	sub	sp, #116	@ 0x74
 800ba58:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800ba5a:	4604      	mov	r4, r0
 800ba5c:	429a      	cmp	r2, r3
 800ba5e:	d954      	bls.n	800bb0a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800ba60:	aa26      	add	r2, sp, #152	@ 0x98
 800ba62:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800bb14 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800ba66:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800bb18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800ba6a:	9202      	str	r2, [sp, #8]
 800ba6c:	f8d9 2000 	ldr.w	r2, [r9]
 800ba70:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ba74:	f8d8 3000 	ldr.w	r3, [r8]
 800ba78:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800ba7c:	682b      	ldr	r3, [r5, #0]
 800ba7e:	4628      	mov	r0, r5
 800ba80:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ba82:	4798      	blx	r3
 800ba84:	4606      	mov	r6, r0
 800ba86:	b207      	sxth	r7, r0
 800ba88:	a803      	add	r0, sp, #12
 800ba8a:	f003 ff8b 	bl	800f9a4 <_ZN8touchgfx12TextProviderC1Ev>
 800ba8e:	682b      	ldr	r3, [r5, #0]
 800ba90:	4628      	mov	r0, r5
 800ba92:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ba94:	4798      	blx	r3
 800ba96:	682b      	ldr	r3, [r5, #0]
 800ba98:	4682      	mov	sl, r0
 800ba9a:	4628      	mov	r0, r5
 800ba9c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ba9e:	4798      	blx	r3
 800baa0:	4653      	mov	r3, sl
 800baa2:	9000      	str	r0, [sp, #0]
 800baa4:	a803      	add	r0, sp, #12
 800baa6:	9a02      	ldr	r2, [sp, #8]
 800baa8:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800baaa:	f003 ffd6 	bl	800fa5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800baae:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800bab0:	f8d9 3000 	ldr.w	r3, [r9]
 800bab4:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800bab8:	8925      	ldrh	r5, [r4, #8]
 800baba:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800babe:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800bac2:	eba5 050c 	sub.w	r5, r5, ip
 800bac6:	784a      	ldrb	r2, [r1, #1]
 800bac8:	f8d8 3000 	ldr.w	r3, [r8]
 800bacc:	b22d      	sxth	r5, r5
 800bace:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800bad2:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800bad6:	9500      	str	r5, [sp, #0]
 800bad8:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800badc:	a803      	add	r0, sp, #12
 800bade:	f001 fdfd 	bl	800d6dc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800bae2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800bae6:	b203      	sxth	r3, r0
 800bae8:	18b9      	adds	r1, r7, r2
 800baea:	2900      	cmp	r1, #0
 800baec:	dd0b      	ble.n	800bb06 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800baee:	3b01      	subs	r3, #1
 800baf0:	fb13 f302 	smulbb	r3, r3, r2
 800baf4:	fb16 3300 	smlabb	r3, r6, r0, r3
 800baf8:	b21f      	sxth	r7, r3
 800bafa:	4638      	mov	r0, r7
 800bafc:	b01d      	add	sp, #116	@ 0x74
 800bafe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bb02:	b003      	add	sp, #12
 800bb04:	4770      	bx	lr
 800bb06:	2b00      	cmp	r3, #0
 800bb08:	dcf7      	bgt.n	800bafa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800bb0a:	2700      	movs	r7, #0
 800bb0c:	e7f5      	b.n	800bafa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800bb0e:	bf00      	nop
 800bb10:	20015114 	.word	0x20015114
 800bb14:	20015110 	.word	0x20015110
 800bb18:	20015118 	.word	0x20015118

0800bb1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800bb1c:	4bbd      	ldr	r3, [pc, #756]	@ (800be14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800bb1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb22:	460c      	mov	r4, r1
 800bb24:	881b      	ldrh	r3, [r3, #0]
 800bb26:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 800bb28:	b0a9      	sub	sp, #164	@ 0xa4
 800bb2a:	4680      	mov	r8, r0
 800bb2c:	428b      	cmp	r3, r1
 800bb2e:	d809      	bhi.n	800bb44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800bb30:	2300      	movs	r3, #0
 800bb32:	f04f 32ff 	mov.w	r2, #4294967295
 800bb36:	6083      	str	r3, [r0, #8]
 800bb38:	e9c0 3200 	strd	r3, r2, [r0]
 800bb3c:	4640      	mov	r0, r8
 800bb3e:	b029      	add	sp, #164	@ 0xa4
 800bb40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb44:	4eb4      	ldr	r6, [pc, #720]	@ (800be18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800bb46:	6833      	ldr	r3, [r6, #0]
 800bb48:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800bb4c:	4bb3      	ldr	r3, [pc, #716]	@ (800be1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800bb4e:	681b      	ldr	r3, [r3, #0]
 800bb50:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800bb54:	4bb2      	ldr	r3, [pc, #712]	@ (800be20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800bb56:	6818      	ldr	r0, [r3, #0]
 800bb58:	f7f7 fb50 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
 800bb5c:	682b      	ldr	r3, [r5, #0]
 800bb5e:	4681      	mov	r9, r0
 800bb60:	4628      	mov	r0, r5
 800bb62:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bb64:	4798      	blx	r3
 800bb66:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 800bb68:	b203      	sxth	r3, r0
 800bb6a:	4682      	mov	sl, r0
 800bb6c:	4407      	add	r7, r0
 800bb6e:	a80f      	add	r0, sp, #60	@ 0x3c
 800bb70:	9304      	str	r3, [sp, #16]
 800bb72:	b2bb      	uxth	r3, r7
 800bb74:	9303      	str	r3, [sp, #12]
 800bb76:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800bb7a:	2b00      	cmp	r3, #0
 800bb7c:	f040 80a5 	bne.w	800bcca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 800bb80:	f003 ff10 	bl	800f9a4 <_ZN8touchgfx12TextProviderC1Ev>
 800bb84:	682b      	ldr	r3, [r5, #0]
 800bb86:	4628      	mov	r0, r5
 800bb88:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800bb8a:	4798      	blx	r3
 800bb8c:	682b      	ldr	r3, [r5, #0]
 800bb8e:	4606      	mov	r6, r0
 800bb90:	4628      	mov	r0, r5
 800bb92:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800bb94:	4798      	blx	r3
 800bb96:	6823      	ldr	r3, [r4, #0]
 800bb98:	4607      	mov	r7, r0
 800bb9a:	4620      	mov	r0, r4
 800bb9c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bb9e:	4798      	blx	r3
 800bba0:	6823      	ldr	r3, [r4, #0]
 800bba2:	4683      	mov	fp, r0
 800bba4:	4620      	mov	r0, r4
 800bba6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800bbaa:	4798      	blx	r3
 800bbac:	463b      	mov	r3, r7
 800bbae:	4649      	mov	r1, r9
 800bbb0:	4632      	mov	r2, r6
 800bbb2:	2600      	movs	r6, #0
 800bbb4:	e9cd b000 	strd	fp, r0, [sp]
 800bbb8:	a80f      	add	r0, sp, #60	@ 0x3c
 800bbba:	4637      	mov	r7, r6
 800bbbc:	f003 ff62 	bl	800fa84 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800bbc0:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800bbc4:	f8df b250 	ldr.w	fp, [pc, #592]	@ 800be18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800bbc8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800bbcc:	bf0c      	ite	eq
 800bbce:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800bbd2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800bbd6:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800bbd8:	4629      	mov	r1, r5
 800bbda:	f8db 3000 	ldr.w	r3, [fp]
 800bbde:	a80f      	add	r0, sp, #60	@ 0x3c
 800bbe0:	3701      	adds	r7, #1
 800bbe2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800bbe6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800bbea:	b2bf      	uxth	r7, r7
 800bbec:	785b      	ldrb	r3, [r3, #1]
 800bbee:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800bbf2:	f001 fa7a 	bl	800d0ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800bbf6:	9b03      	ldr	r3, [sp, #12]
 800bbf8:	4286      	cmp	r6, r0
 800bbfa:	eba9 0903 	sub.w	r9, r9, r3
 800bbfe:	bfb8      	it	lt
 800bc00:	4606      	movlt	r6, r0
 800bc02:	a80f      	add	r0, sp, #60	@ 0x3c
 800bc04:	fa0f f989 	sxth.w	r9, r9
 800bc08:	b236      	sxth	r6, r6
 800bc0a:	f003 fef2 	bl	800f9f2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800bc0e:	b918      	cbnz	r0, 800bc18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800bc10:	7a2b      	ldrb	r3, [r5, #8]
 800bc12:	444b      	add	r3, r9
 800bc14:	2b00      	cmp	r3, #0
 800bc16:	dcde      	bgt.n	800bbd6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 800bc18:	9b03      	ldr	r3, [sp, #12]
 800bc1a:	4620      	mov	r0, r4
 800bc1c:	9a04      	ldr	r2, [sp, #16]
 800bc1e:	fb13 f707 	smulbb	r7, r3, r7
 800bc22:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800bc24:	f895 9009 	ldrb.w	r9, [r5, #9]
 800bc28:	1aff      	subs	r7, r7, r3
 800bc2a:	b2bf      	uxth	r7, r7
 800bc2c:	b23b      	sxth	r3, r7
 800bc2e:	429a      	cmp	r2, r3
 800bc30:	bfa8      	it	ge
 800bc32:	4657      	movge	r7, sl
 800bc34:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800bc38:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800bc3c:	6823      	ldr	r3, [r4, #0]
 800bc3e:	444f      	add	r7, r9
 800bc40:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800bc42:	bf08      	it	eq
 800bc44:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800bc48:	fa1f f987 	uxth.w	r9, r7
 800bc4c:	bf18      	it	ne
 800bc4e:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800bc52:	4798      	blx	r3
 800bc54:	2801      	cmp	r0, #1
 800bc56:	fa0f f789 	sxth.w	r7, r9
 800bc5a:	b2b3      	uxth	r3, r6
 800bc5c:	f000 80e2 	beq.w	800be24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800bc60:	2802      	cmp	r0, #2
 800bc62:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 800bc66:	f000 80e3 	beq.w	800be30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800bc6a:	7aea      	ldrb	r2, [r5, #11]
 800bc6c:	b236      	sxth	r6, r6
 800bc6e:	7b2d      	ldrb	r5, [r5, #12]
 800bc70:	1ab6      	subs	r6, r6, r2
 800bc72:	442a      	add	r2, r5
 800bc74:	fa1f fa86 	uxth.w	sl, r6
 800bc78:	4413      	add	r3, r2
 800bc7a:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800bc7e:	fa0f fb8a 	sxth.w	fp, sl
 800bc82:	b29b      	uxth	r3, r3
 800bc84:	2a02      	cmp	r2, #2
 800bc86:	b21e      	sxth	r6, r3
 800bc88:	f000 80d6 	beq.w	800be38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800bc8c:	2a03      	cmp	r2, #3
 800bc8e:	f000 80de 	beq.w	800be4e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800bc92:	2a01      	cmp	r2, #1
 800bc94:	f040 80e6 	bne.w	800be64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800bc98:	8925      	ldrh	r5, [r4, #8]
 800bc9a:	4633      	mov	r3, r6
 800bc9c:	463e      	mov	r6, r7
 800bc9e:	eba5 0909 	sub.w	r9, r5, r9
 800bca2:	461f      	mov	r7, r3
 800bca4:	465d      	mov	r5, fp
 800bca6:	fa0f fb89 	sxth.w	fp, r9
 800bcaa:	4b5d      	ldr	r3, [pc, #372]	@ (800be20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800bcac:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800bcae:	6818      	ldr	r0, [r3, #0]
 800bcb0:	f7f7 faa4 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
 800bcb4:	f8a8 b000 	strh.w	fp, [r8]
 800bcb8:	f8a8 5002 	strh.w	r5, [r8, #2]
 800bcbc:	f8a8 6004 	strh.w	r6, [r8, #4]
 800bcc0:	f8a8 7006 	strh.w	r7, [r8, #6]
 800bcc4:	f8c8 0008 	str.w	r0, [r8, #8]
 800bcc8:	e738      	b.n	800bb3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800bcca:	f003 fe6b 	bl	800f9a4 <_ZN8touchgfx12TextProviderC1Ev>
 800bcce:	682b      	ldr	r3, [r5, #0]
 800bcd0:	4628      	mov	r0, r5
 800bcd2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800bcd4:	4798      	blx	r3
 800bcd6:	682b      	ldr	r3, [r5, #0]
 800bcd8:	4607      	mov	r7, r0
 800bcda:	4628      	mov	r0, r5
 800bcdc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800bcde:	4798      	blx	r3
 800bce0:	6823      	ldr	r3, [r4, #0]
 800bce2:	4683      	mov	fp, r0
 800bce4:	4620      	mov	r0, r4
 800bce6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bce8:	4798      	blx	r3
 800bcea:	6822      	ldr	r2, [r4, #0]
 800bcec:	9005      	str	r0, [sp, #20]
 800bcee:	4620      	mov	r0, r4
 800bcf0:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800bcf4:	4790      	blx	r2
 800bcf6:	9b05      	ldr	r3, [sp, #20]
 800bcf8:	463a      	mov	r2, r7
 800bcfa:	4649      	mov	r1, r9
 800bcfc:	9001      	str	r0, [sp, #4]
 800bcfe:	a80f      	add	r0, sp, #60	@ 0x3c
 800bd00:	9300      	str	r3, [sp, #0]
 800bd02:	465b      	mov	r3, fp
 800bd04:	f003 febe 	bl	800fa84 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800bd08:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800bd0c:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800bd10:	af0f      	add	r7, sp, #60	@ 0x3c
 800bd12:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800bd16:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bd1a:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800bd1c:	bf0a      	itet	eq
 800bd1e:	464a      	moveq	r2, r9
 800bd20:	461a      	movne	r2, r3
 800bd22:	4699      	moveq	r9, r3
 800bd24:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800bd28:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 800bd2c:	1ad2      	subs	r2, r2, r3
 800bd2e:	6833      	ldr	r3, [r6, #0]
 800bd30:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 800bd34:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800bd38:	7859      	ldrb	r1, [r3, #1]
 800bd3a:	2300      	movs	r3, #0
 800bd3c:	9707      	str	r7, [sp, #28]
 800bd3e:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800bd42:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bd46:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800bd4a:	f88d 1020 	strb.w	r1, [sp, #32]
 800bd4e:	9509      	str	r5, [sp, #36]	@ 0x24
 800bd50:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800bd54:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 800bd58:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 800bd5c:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800bd60:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800bd64:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800bd68:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800bd6c:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800bd70:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800bd74:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800bd78:	b350      	cbz	r0, 800bdd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800bd7a:	682b      	ldr	r3, [r5, #0]
 800bd7c:	4628      	mov	r0, r5
 800bd7e:	695b      	ldr	r3, [r3, #20]
 800bd80:	4798      	blx	r3
 800bd82:	4607      	mov	r7, r0
 800bd84:	b320      	cbz	r0, 800bdd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800bd86:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800bd88:	4639      	mov	r1, r7
 800bd8a:	6803      	ldr	r3, [r0, #0]
 800bd8c:	68db      	ldr	r3, [r3, #12]
 800bd8e:	4798      	blx	r3
 800bd90:	4606      	mov	r6, r0
 800bd92:	b1e8      	cbz	r0, 800bdd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800bd94:	7b43      	ldrb	r3, [r0, #13]
 800bd96:	7a82      	ldrb	r2, [r0, #10]
 800bd98:	005b      	lsls	r3, r3, #1
 800bd9a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800bd9e:	4313      	orrs	r3, r2
 800bda0:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800bda4:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 800bda8:	2b06      	cmp	r3, #6
 800bdaa:	d111      	bne.n	800bdd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800bdac:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800bdae:	4632      	mov	r2, r6
 800bdb0:	4639      	mov	r1, r7
 800bdb2:	6803      	ldr	r3, [r0, #0]
 800bdb4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800bdb6:	4798      	blx	r3
 800bdb8:	7b73      	ldrb	r3, [r6, #13]
 800bdba:	005b      	lsls	r3, r3, #1
 800bdbc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800bdc0:	7ab3      	ldrb	r3, [r6, #10]
 800bdc2:	4313      	orrs	r3, r2
 800bdc4:	4418      	add	r0, r3
 800bdc6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800bdca:	4418      	add	r0, r3
 800bdcc:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 800bdd0:	2600      	movs	r6, #0
 800bdd2:	4637      	mov	r7, r6
 800bdd4:	a806      	add	r0, sp, #24
 800bdd6:	3701      	adds	r7, #1
 800bdd8:	f001 fb7d 	bl	800d4d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800bddc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 800bde0:	9b03      	ldr	r3, [sp, #12]
 800bde2:	b2bf      	uxth	r7, r7
 800bde4:	4286      	cmp	r6, r0
 800bde6:	eba9 0903 	sub.w	r9, r9, r3
 800bdea:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800bdee:	bfb8      	it	lt
 800bdf0:	4606      	movlt	r6, r0
 800bdf2:	fa0f f989 	sxth.w	r9, r9
 800bdf6:	b236      	sxth	r6, r6
 800bdf8:	2b00      	cmp	r3, #0
 800bdfa:	f43f af0d 	beq.w	800bc18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800bdfe:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 800be02:	2b00      	cmp	r3, #0
 800be04:	f47f af08 	bne.w	800bc18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800be08:	7a2b      	ldrb	r3, [r5, #8]
 800be0a:	444b      	add	r3, r9
 800be0c:	2b00      	cmp	r3, #0
 800be0e:	dce1      	bgt.n	800bdd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 800be10:	e702      	b.n	800bc18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800be12:	bf00      	nop
 800be14:	20015114 	.word	0x20015114
 800be18:	20015110 	.word	0x20015110
 800be1c:	20015118 	.word	0x20015118
 800be20:	2001511c 	.word	0x2001511c
 800be24:	ebaa 0606 	sub.w	r6, sl, r6
 800be28:	2002      	movs	r0, #2
 800be2a:	fb96 f6f0 	sdiv	r6, r6, r0
 800be2e:	e71c      	b.n	800bc6a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800be30:	441e      	add	r6, r3
 800be32:	ebaa 0606 	sub.w	r6, sl, r6
 800be36:	e718      	b.n	800bc6a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800be38:	8925      	ldrh	r5, [r4, #8]
 800be3a:	1aed      	subs	r5, r5, r3
 800be3c:	eba5 050a 	sub.w	r5, r5, sl
 800be40:	fa0f fb85 	sxth.w	fp, r5
 800be44:	8965      	ldrh	r5, [r4, #10]
 800be46:	eba5 0509 	sub.w	r5, r5, r9
 800be4a:	b22d      	sxth	r5, r5
 800be4c:	e72d      	b.n	800bcaa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800be4e:	8965      	ldrh	r5, [r4, #10]
 800be50:	f04f 0b00 	mov.w	fp, #0
 800be54:	1aed      	subs	r5, r5, r3
 800be56:	4633      	mov	r3, r6
 800be58:	463e      	mov	r6, r7
 800be5a:	eba5 050a 	sub.w	r5, r5, sl
 800be5e:	461f      	mov	r7, r3
 800be60:	b22d      	sxth	r5, r5
 800be62:	e722      	b.n	800bcaa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800be64:	2500      	movs	r5, #0
 800be66:	e720      	b.n	800bcaa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

0800be68 <_ZN8touchgfx8TextAreaD0Ev>:
 800be68:	b510      	push	{r4, lr}
 800be6a:	4604      	mov	r4, r0
 800be6c:	2148      	movs	r1, #72	@ 0x48
 800be6e:	f012 fd76 	bl	801e95e <_ZdlPvj>
 800be72:	4620      	mov	r0, r4
 800be74:	bd10      	pop	{r4, pc}
	...

0800be78 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800be78:	b513      	push	{r0, r1, r4, lr}
 800be7a:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 800be7e:	4604      	mov	r4, r0
 800be80:	b1fb      	cbz	r3, 800bec2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800be82:	4b16      	ldr	r3, [pc, #88]	@ (800bedc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800be84:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800be86:	881b      	ldrh	r3, [r3, #0]
 800be88:	428b      	cmp	r3, r1
 800be8a:	d91a      	bls.n	800bec2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800be8c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800be90:	2b00      	cmp	r3, #0
 800be92:	dd16      	ble.n	800bec2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800be94:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800be98:	2b00      	cmp	r3, #0
 800be9a:	dd12      	ble.n	800bec2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800be9c:	4b10      	ldr	r3, [pc, #64]	@ (800bee0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800be9e:	6818      	ldr	r0, [r3, #0]
 800bea0:	f7f7 f9ac 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
 800bea4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800bea8:	6822      	ldr	r2, [r4, #0]
 800beaa:	2b00      	cmp	r3, #0
 800beac:	db06      	blt.n	800bebc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800beae:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800beb2:	2b00      	cmp	r3, #0
 800beb4:	db02      	blt.n	800bebc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800beb6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800beb8:	4298      	cmp	r0, r3
 800beba:	d004      	beq.n	800bec6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800bebc:	6953      	ldr	r3, [r2, #20]
 800bebe:	4620      	mov	r0, r4
 800bec0:	4798      	blx	r3
 800bec2:	b002      	add	sp, #8
 800bec4:	bd10      	pop	{r4, pc}
 800bec6:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 800beca:	466b      	mov	r3, sp
 800becc:	6912      	ldr	r2, [r2, #16]
 800bece:	c903      	ldmia	r1, {r0, r1}
 800bed0:	e883 0003 	stmia.w	r3, {r0, r1}
 800bed4:	4619      	mov	r1, r3
 800bed6:	4620      	mov	r0, r4
 800bed8:	4790      	blx	r2
 800beda:	e7f2      	b.n	800bec2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800bedc:	20015114 	.word	0x20015114
 800bee0:	2001511c 	.word	0x2001511c

0800bee4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800bee4:	4b45      	ldr	r3, [pc, #276]	@ (800bffc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800bee6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800beea:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800beec:	b08e      	sub	sp, #56	@ 0x38
 800beee:	881b      	ldrh	r3, [r3, #0]
 800bef0:	4604      	mov	r4, r0
 800bef2:	4293      	cmp	r3, r2
 800bef4:	d97e      	bls.n	800bff4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800bef6:	6808      	ldr	r0, [r1, #0]
 800bef8:	ab05      	add	r3, sp, #20
 800befa:	6849      	ldr	r1, [r1, #4]
 800befc:	4d40      	ldr	r5, [pc, #256]	@ (800c000 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800befe:	c303      	stmia	r3!, {r0, r1}
 800bf00:	4611      	mov	r1, r2
 800bf02:	6828      	ldr	r0, [r5, #0]
 800bf04:	f7f7 f97a 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
 800bf08:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800bf0c:	2b00      	cmp	r3, #0
 800bf0e:	db11      	blt.n	800bf34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800bf10:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800bf14:	2b00      	cmp	r3, #0
 800bf16:	db0d      	blt.n	800bf34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800bf18:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800bf1a:	4298      	cmp	r0, r3
 800bf1c:	d10a      	bne.n	800bf34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800bf1e:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 800bf22:	ab09      	add	r3, sp, #36	@ 0x24
 800bf24:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bf28:	e883 0003 	stmia.w	r3, {r0, r1}
 800bf2c:	4619      	mov	r1, r3
 800bf2e:	a805      	add	r0, sp, #20
 800bf30:	f7fe fca6 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 800bf34:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800bf38:	2b00      	cmp	r3, #0
 800bf3a:	dd5b      	ble.n	800bff4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800bf3c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800bf40:	2b00      	cmp	r3, #0
 800bf42:	dd57      	ble.n	800bff4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800bf44:	4f2f      	ldr	r7, [pc, #188]	@ (800c004 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800bf46:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800bf48:	683b      	ldr	r3, [r7, #0]
 800bf4a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800bf4e:	4b2e      	ldr	r3, [pc, #184]	@ (800c008 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800bf50:	681b      	ldr	r3, [r3, #0]
 800bf52:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800bf56:	2e00      	cmp	r6, #0
 800bf58:	d04c      	beq.n	800bff4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800bf5a:	6823      	ldr	r3, [r4, #0]
 800bf5c:	4620      	mov	r0, r4
 800bf5e:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 800bf62:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800bf64:	4798      	blx	r3
 800bf66:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800bf68:	683b      	ldr	r3, [r7, #0]
 800bf6a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 800bf6e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800bf72:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 800bf76:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 800bf7a:	785b      	ldrb	r3, [r3, #1]
 800bf7c:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 800bf80:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800bf84:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800bf86:	9609      	str	r6, [sp, #36]	@ 0x24
 800bf88:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800bf8c:	4b1f      	ldr	r3, [pc, #124]	@ (800c00c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800bf8e:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 800bf92:	681b      	ldr	r3, [r3, #0]
 800bf94:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 800bf98:	910b      	str	r1, [sp, #44]	@ 0x2c
 800bf9a:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 800bf9e:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 800bfa2:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 800bfa6:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 800bfaa:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bfae:	b10a      	cbz	r2, 800bfb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800bfb0:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 800bfb2:	b906      	cbnz	r6, 800bfb6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800bfb4:	689e      	ldr	r6, [r3, #8]
 800bfb6:	af07      	add	r7, sp, #28
 800bfb8:	4621      	mov	r1, r4
 800bfba:	4638      	mov	r0, r7
 800bfbc:	f003 f934 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bfc0:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800bfc2:	6828      	ldr	r0, [r5, #0]
 800bfc4:	f7f7 f91a 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
 800bfc8:	6823      	ldr	r3, [r4, #0]
 800bfca:	4605      	mov	r5, r0
 800bfcc:	4620      	mov	r0, r4
 800bfce:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bfd0:	4798      	blx	r3
 800bfd2:	6823      	ldr	r3, [r4, #0]
 800bfd4:	4680      	mov	r8, r0
 800bfd6:	4620      	mov	r0, r4
 800bfd8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800bfdc:	4798      	blx	r3
 800bfde:	ab09      	add	r3, sp, #36	@ 0x24
 800bfe0:	9501      	str	r5, [sp, #4]
 800bfe2:	9300      	str	r3, [sp, #0]
 800bfe4:	ab05      	add	r3, sp, #20
 800bfe6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800bfea:	4630      	mov	r0, r6
 800bfec:	e897 0006 	ldmia.w	r7, {r1, r2}
 800bff0:	f7f7 f8b6 	bl	8003160 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800bff4:	b00e      	add	sp, #56	@ 0x38
 800bff6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bffa:	bf00      	nop
 800bffc:	20015114 	.word	0x20015114
 800c000:	2001511c 	.word	0x2001511c
 800c004:	20015110 	.word	0x20015110
 800c008:	20015118 	.word	0x20015118
 800c00c:	200150c0 	.word	0x200150c0

0800c010 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800c010:	b570      	push	{r4, r5, r6, lr}
 800c012:	6803      	ldr	r3, [r0, #0]
 800c014:	4604      	mov	r4, r0
 800c016:	4615      	mov	r5, r2
 800c018:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c01a:	4798      	blx	r3
 800c01c:	6823      	ldr	r3, [r4, #0]
 800c01e:	4629      	mov	r1, r5
 800c020:	4620      	mov	r0, r4
 800c022:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c024:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c028:	4718      	bx	r3
	...

0800c02c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800c02c:	b538      	push	{r3, r4, r5, lr}
 800c02e:	4b0e      	ldr	r3, [pc, #56]	@ (800c068 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800c030:	4604      	mov	r4, r0
 800c032:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800c034:	881b      	ldrh	r3, [r3, #0]
 800c036:	429a      	cmp	r2, r3
 800c038:	d214      	bcs.n	800c064 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800c03a:	6803      	ldr	r3, [r0, #0]
 800c03c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800c03e:	4798      	blx	r3
 800c040:	6823      	ldr	r3, [r4, #0]
 800c042:	4605      	mov	r5, r0
 800c044:	4620      	mov	r0, r4
 800c046:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800c048:	4798      	blx	r3
 800c04a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800c04e:	b22d      	sxth	r5, r5
 800c050:	4601      	mov	r1, r0
 800c052:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800c056:	bf06      	itte	eq
 800c058:	4602      	moveq	r2, r0
 800c05a:	4629      	moveq	r1, r5
 800c05c:	462a      	movne	r2, r5
 800c05e:	4620      	mov	r0, r4
 800c060:	f7ff ffd6 	bl	800c010 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800c064:	bd38      	pop	{r3, r4, r5, pc}
 800c066:	bf00      	nop
 800c068:	20015114 	.word	0x20015114

0800c06c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800c06c:	b530      	push	{r4, r5, lr}
 800c06e:	888b      	ldrh	r3, [r1, #4]
 800c070:	b085      	sub	sp, #20
 800c072:	4604      	mov	r4, r0
 800c074:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800c076:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c07a:	b923      	cbnz	r3, 800c086 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800c07c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c080:	b90b      	cbnz	r3, 800c086 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800c082:	f7ff ffd3 	bl	800c02c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800c086:	6823      	ldr	r3, [r4, #0]
 800c088:	466d      	mov	r5, sp
 800c08a:	4621      	mov	r1, r4
 800c08c:	343c      	adds	r4, #60	@ 0x3c
 800c08e:	4628      	mov	r0, r5
 800c090:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800c094:	4798      	blx	r3
 800c096:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800c09a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800c09e:	b005      	add	sp, #20
 800c0a0:	bd30      	pop	{r4, r5, pc}

0800c0a2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800c0a2:	2300      	movs	r3, #0
 800c0a4:	8083      	strh	r3, [r0, #4]
 800c0a6:	80c3      	strh	r3, [r0, #6]
 800c0a8:	8003      	strh	r3, [r0, #0]
 800c0aa:	8043      	strh	r3, [r0, #2]
 800c0ac:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800c0b0:	2bff      	cmp	r3, #255	@ 0xff
 800c0b2:	bf01      	itttt	eq
 800c0b4:	890b      	ldrheq	r3, [r1, #8]
 800c0b6:	8083      	strheq	r3, [r0, #4]
 800c0b8:	894b      	ldrheq	r3, [r1, #10]
 800c0ba:	80c3      	strheq	r3, [r0, #6]
 800c0bc:	4770      	bx	lr
	...

0800c0c0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800c0c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c0c2:	4604      	mov	r4, r0
 800c0c4:	466b      	mov	r3, sp
 800c0c6:	6808      	ldr	r0, [r1, #0]
 800c0c8:	6849      	ldr	r1, [r1, #4]
 800c0ca:	c303      	stmia	r3!, {r0, r1}
 800c0cc:	6823      	ldr	r3, [r4, #0]
 800c0ce:	4669      	mov	r1, sp
 800c0d0:	4620      	mov	r0, r4
 800c0d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c0d4:	4798      	blx	r3
 800c0d6:	4b08      	ldr	r3, [pc, #32]	@ (800c0f8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800c0d8:	681b      	ldr	r3, [r3, #0]
 800c0da:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c0de:	b10a      	cbz	r2, 800c0e4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800c0e0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800c0e2:	b900      	cbnz	r0, 800c0e6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800c0e4:	6898      	ldr	r0, [r3, #8]
 800c0e6:	6803      	ldr	r3, [r0, #0]
 800c0e8:	4669      	mov	r1, sp
 800c0ea:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800c0ec:	6a1d      	ldr	r5, [r3, #32]
 800c0ee:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800c0f2:	47a8      	blx	r5
 800c0f4:	b003      	add	sp, #12
 800c0f6:	bd30      	pop	{r4, r5, pc}
 800c0f8:	200150c0 	.word	0x200150c0

0800c0fc <_ZN8touchgfx3BoxD1Ev>:
 800c0fc:	4770      	bx	lr

0800c0fe <_ZN8touchgfx3BoxD0Ev>:
 800c0fe:	b510      	push	{r4, lr}
 800c100:	4604      	mov	r4, r0
 800c102:	212c      	movs	r1, #44	@ 0x2c
 800c104:	f012 fc2b 	bl	801e95e <_ZdlPvj>
 800c108:	4620      	mov	r0, r4
 800c10a:	bd10      	pop	{r4, pc}

0800c10c <_ZNK8touchgfx3Box17invalidateContentEv>:
 800c10c:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800c110:	b12a      	cbz	r2, 800c11e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c112:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800c116:	b112      	cbz	r2, 800c11e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c118:	6803      	ldr	r3, [r0, #0]
 800c11a:	695b      	ldr	r3, [r3, #20]
 800c11c:	4718      	bx	r3
 800c11e:	4770      	bx	lr

0800c120 <_ZN8touchgfx6ButtonD1Ev>:
 800c120:	4770      	bx	lr

0800c122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800c122:	b570      	push	{r4, r5, r6, lr}
 800c124:	880b      	ldrh	r3, [r1, #0]
 800c126:	4605      	mov	r5, r0
 800c128:	4604      	mov	r4, r0
 800c12a:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800c12c:	8813      	ldrh	r3, [r2, #0]
 800c12e:	f825 3f30 	strh.w	r3, [r5, #48]!
 800c132:	4628      	mov	r0, r5
 800c134:	f004 ffc2 	bl	80110bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c138:	4606      	mov	r6, r0
 800c13a:	4628      	mov	r0, r5
 800c13c:	f004 fff2 	bl	8011124 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c140:	6823      	ldr	r3, [r4, #0]
 800c142:	4605      	mov	r5, r0
 800c144:	4631      	mov	r1, r6
 800c146:	4620      	mov	r0, r4
 800c148:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c14a:	4798      	blx	r3
 800c14c:	6823      	ldr	r3, [r4, #0]
 800c14e:	4629      	mov	r1, r5
 800c150:	4620      	mov	r0, r4
 800c152:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c154:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c158:	4718      	bx	r3

0800c15a <_ZN8touchgfx6ButtonD0Ev>:
 800c15a:	b510      	push	{r4, lr}
 800c15c:	4604      	mov	r4, r0
 800c15e:	2134      	movs	r1, #52	@ 0x34
 800c160:	f012 fbfd 	bl	801e95e <_ZdlPvj>
 800c164:	4620      	mov	r0, r4
 800c166:	bd10      	pop	{r4, pc}

0800c168 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800c168:	b510      	push	{r4, lr}
 800c16a:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 800c16e:	4604      	mov	r4, r0
 800c170:	2bff      	cmp	r3, #255	@ 0xff
 800c172:	d006      	beq.n	800c182 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800c174:	2300      	movs	r3, #0
 800c176:	8003      	strh	r3, [r0, #0]
 800c178:	8043      	strh	r3, [r0, #2]
 800c17a:	8083      	strh	r3, [r0, #4]
 800c17c:	80c3      	strh	r3, [r0, #6]
 800c17e:	4620      	mov	r0, r4
 800c180:	bd10      	pop	{r4, pc}
 800c182:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 800c186:	b11b      	cbz	r3, 800c190 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800c188:	3130      	adds	r1, #48	@ 0x30
 800c18a:	f004 ffff 	bl	801118c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c18e:	e7f6      	b.n	800c17e <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800c190:	312e      	adds	r1, #46	@ 0x2e
 800c192:	e7fa      	b.n	800c18a <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800c194 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800c194:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c198:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800c19c:	b08a      	sub	sp, #40	@ 0x28
 800c19e:	4604      	mov	r4, r0
 800c1a0:	4688      	mov	r8, r1
 800c1a2:	2b00      	cmp	r3, #0
 800c1a4:	d066      	beq.n	800c274 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800c1a6:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800c1a8:	a805      	add	r0, sp, #20
 800c1aa:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c1ae:	f004 ff85 	bl	80110bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c1b2:	4607      	mov	r7, r0
 800c1b4:	a805      	add	r0, sp, #20
 800c1b6:	f004 ffb5 	bl	8011124 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c1ba:	f9b8 6000 	ldrsh.w	r6, [r8]
 800c1be:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800c1c2:	2300      	movs	r3, #0
 800c1c4:	4432      	add	r2, r6
 800c1c6:	9306      	str	r3, [sp, #24]
 800c1c8:	b292      	uxth	r2, r2
 800c1ca:	fa0f fc82 	sxth.w	ip, r2
 800c1ce:	459c      	cmp	ip, r3
 800c1d0:	dd52      	ble.n	800c278 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800c1d2:	42b7      	cmp	r7, r6
 800c1d4:	dd50      	ble.n	800c278 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800c1d6:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800c1da:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800c1de:	442b      	add	r3, r5
 800c1e0:	b29b      	uxth	r3, r3
 800c1e2:	b219      	sxth	r1, r3
 800c1e4:	2900      	cmp	r1, #0
 800c1e6:	dd47      	ble.n	800c278 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800c1e8:	42a8      	cmp	r0, r5
 800c1ea:	dd45      	ble.n	800c278 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800c1ec:	4567      	cmp	r7, ip
 800c1ee:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800c1f2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800c1f6:	bfb8      	it	lt
 800c1f8:	b2ba      	uxthlt	r2, r7
 800c1fa:	4288      	cmp	r0, r1
 800c1fc:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c200:	bfb8      	it	lt
 800c202:	b283      	uxthlt	r3, r0
 800c204:	1b92      	subs	r2, r2, r6
 800c206:	f8ad 501a 	strh.w	r5, [sp, #26]
 800c20a:	1b5b      	subs	r3, r3, r5
 800c20c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c210:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c214:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c218:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800c21c:	429a      	cmp	r2, r3
 800c21e:	d026      	beq.n	800c26e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800c220:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c224:	2b00      	cmp	r3, #0
 800c226:	dd22      	ble.n	800c26e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800c228:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c22c:	2b00      	cmp	r3, #0
 800c22e:	dd1e      	ble.n	800c26e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800c230:	2300      	movs	r3, #0
 800c232:	a908      	add	r1, sp, #32
 800c234:	4620      	mov	r0, r4
 800c236:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800c23a:	6823      	ldr	r3, [r4, #0]
 800c23c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c23e:	4798      	blx	r3
 800c240:	4b0f      	ldr	r3, [pc, #60]	@ (800c280 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800c242:	681b      	ldr	r3, [r3, #0]
 800c244:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c248:	b10a      	cbz	r2, 800c24e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800c24a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800c24c:	b900      	cbnz	r0, 800c250 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800c24e:	6898      	ldr	r0, [r3, #8]
 800c250:	2501      	movs	r5, #1
 800c252:	6801      	ldr	r1, [r0, #0]
 800c254:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 800c258:	9502      	str	r5, [sp, #8]
 800c25a:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800c25e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800c262:	9401      	str	r4, [sp, #4]
 800c264:	ac06      	add	r4, sp, #24
 800c266:	9400      	str	r4, [sp, #0]
 800c268:	688c      	ldr	r4, [r1, #8]
 800c26a:	a905      	add	r1, sp, #20
 800c26c:	47a0      	blx	r4
 800c26e:	b00a      	add	sp, #40	@ 0x28
 800c270:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c274:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 800c276:	e797      	b.n	800c1a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800c278:	2300      	movs	r3, #0
 800c27a:	9307      	str	r3, [sp, #28]
 800c27c:	e7ca      	b.n	800c214 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800c27e:	bf00      	nop
 800c280:	200150c0 	.word	0x200150c0

0800c284 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800c284:	4b30      	ldr	r3, [pc, #192]	@ (800c348 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800c286:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c28a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800c28c:	b08d      	sub	sp, #52	@ 0x34
 800c28e:	881b      	ldrh	r3, [r3, #0]
 800c290:	4604      	mov	r4, r0
 800c292:	460f      	mov	r7, r1
 800c294:	4293      	cmp	r3, r2
 800c296:	d954      	bls.n	800c342 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800c298:	4b2c      	ldr	r3, [pc, #176]	@ (800c34c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800c29a:	6819      	ldr	r1, [r3, #0]
 800c29c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800c2a0:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800c2a4:	4a2a      	ldr	r2, [pc, #168]	@ (800c350 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800c2a6:	6812      	ldr	r2, [r2, #0]
 800c2a8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800c2ac:	2900      	cmp	r1, #0
 800c2ae:	d048      	beq.n	800c342 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800c2b0:	785a      	ldrb	r2, [r3, #1]
 800c2b2:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800c2b6:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800c2ba:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800c2be:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800c2c2:	4b24      	ldr	r3, [pc, #144]	@ (800c354 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800c2c4:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800c2c8:	681a      	ldr	r2, [r3, #0]
 800c2ca:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800c2ce:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800c2d2:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800c2d6:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800c2d8:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800c2dc:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800c2e0:	9107      	str	r1, [sp, #28]
 800c2e2:	f88d 8020 	strb.w	r8, [sp, #32]
 800c2e6:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800c2ea:	9609      	str	r6, [sp, #36]	@ 0x24
 800c2ec:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800c2f0:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800c2f4:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800c2f8:	b10b      	cbz	r3, 800c2fe <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800c2fa:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800c2fc:	b905      	cbnz	r5, 800c300 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800c2fe:	6895      	ldr	r5, [r2, #8]
 800c300:	ae05      	add	r6, sp, #20
 800c302:	4621      	mov	r1, r4
 800c304:	4630      	mov	r0, r6
 800c306:	f002 ff8f 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c30a:	4b13      	ldr	r3, [pc, #76]	@ (800c358 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800c30c:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800c30e:	6818      	ldr	r0, [r3, #0]
 800c310:	f7f6 ff74 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
 800c314:	6823      	ldr	r3, [r4, #0]
 800c316:	4680      	mov	r8, r0
 800c318:	4620      	mov	r0, r4
 800c31a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800c31c:	4798      	blx	r3
 800c31e:	6823      	ldr	r3, [r4, #0]
 800c320:	4681      	mov	r9, r0
 800c322:	4620      	mov	r0, r4
 800c324:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800c328:	4798      	blx	r3
 800c32a:	ab07      	add	r3, sp, #28
 800c32c:	f8cd 8004 	str.w	r8, [sp, #4]
 800c330:	9300      	str	r3, [sp, #0]
 800c332:	463b      	mov	r3, r7
 800c334:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800c338:	4628      	mov	r0, r5
 800c33a:	e896 0006 	ldmia.w	r6, {r1, r2}
 800c33e:	f7f6 ff0f 	bl	8003160 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c342:	b00d      	add	sp, #52	@ 0x34
 800c344:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c348:	20015114 	.word	0x20015114
 800c34c:	20015110 	.word	0x20015110
 800c350:	20015118 	.word	0x20015118
 800c354:	200150c0 	.word	0x200150c0
 800c358:	2001511c 	.word	0x2001511c

0800c35c <_ZN8touchgfx5ImageD1Ev>:
 800c35c:	4770      	bx	lr

0800c35e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800c35e:	b570      	push	{r4, r5, r6, lr}
 800c360:	880b      	ldrh	r3, [r1, #0]
 800c362:	460d      	mov	r5, r1
 800c364:	4604      	mov	r4, r0
 800c366:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800c368:	4608      	mov	r0, r1
 800c36a:	f004 fea7 	bl	80110bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c36e:	4606      	mov	r6, r0
 800c370:	4628      	mov	r0, r5
 800c372:	f004 fed7 	bl	8011124 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c376:	6823      	ldr	r3, [r4, #0]
 800c378:	4605      	mov	r5, r0
 800c37a:	4631      	mov	r1, r6
 800c37c:	4620      	mov	r0, r4
 800c37e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c380:	4798      	blx	r3
 800c382:	6823      	ldr	r3, [r4, #0]
 800c384:	4629      	mov	r1, r5
 800c386:	4620      	mov	r0, r4
 800c388:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c38a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c38e:	4718      	bx	r3

0800c390 <_ZN8touchgfx5ImageD0Ev>:
 800c390:	b510      	push	{r4, lr}
 800c392:	4604      	mov	r4, r0
 800c394:	212c      	movs	r1, #44	@ 0x2c
 800c396:	f012 fae2 	bl	801e95e <_ZdlPvj>
 800c39a:	4620      	mov	r0, r4
 800c39c:	bd10      	pop	{r4, pc}

0800c39e <_ZNK8touchgfx5Image12getSolidRectEv>:
 800c39e:	b510      	push	{r4, lr}
 800c3a0:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800c3a4:	4604      	mov	r4, r0
 800c3a6:	2bff      	cmp	r3, #255	@ 0xff
 800c3a8:	d006      	beq.n	800c3b8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800c3aa:	2300      	movs	r3, #0
 800c3ac:	8003      	strh	r3, [r0, #0]
 800c3ae:	8043      	strh	r3, [r0, #2]
 800c3b0:	8083      	strh	r3, [r0, #4]
 800c3b2:	80c3      	strh	r3, [r0, #6]
 800c3b4:	4620      	mov	r0, r4
 800c3b6:	bd10      	pop	{r4, pc}
 800c3b8:	3126      	adds	r1, #38	@ 0x26
 800c3ba:	f004 fee7 	bl	801118c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c3be:	e7f9      	b.n	800c3b4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800c3c0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800c3c0:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800c3c4:	b12a      	cbz	r2, 800c3d2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c3c6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800c3ca:	b112      	cbz	r2, 800c3d2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c3cc:	6803      	ldr	r3, [r0, #0]
 800c3ce:	695b      	ldr	r3, [r3, #20]
 800c3d0:	4718      	bx	r3
 800c3d2:	4770      	bx	lr

0800c3d4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800c3d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c3d8:	4604      	mov	r4, r0
 800c3da:	b088      	sub	sp, #32
 800c3dc:	2500      	movs	r5, #0
 800c3de:	460f      	mov	r7, r1
 800c3e0:	f854 3b26 	ldr.w	r3, [r4], #38
 800c3e4:	a904      	add	r1, sp, #16
 800c3e6:	4606      	mov	r6, r0
 800c3e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c3ea:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800c3ee:	4798      	blx	r3
 800c3f0:	4620      	mov	r0, r4
 800c3f2:	f004 fe63 	bl	80110bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c3f6:	4680      	mov	r8, r0
 800c3f8:	4620      	mov	r0, r4
 800c3fa:	f004 fe93 	bl	8011124 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c3fe:	9506      	str	r5, [sp, #24]
 800c400:	ad06      	add	r5, sp, #24
 800c402:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c406:	4639      	mov	r1, r7
 800c408:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c40c:	4628      	mov	r0, r5
 800c40e:	f7fe fa37 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 800c412:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c416:	2b00      	cmp	r3, #0
 800c418:	dd19      	ble.n	800c44e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c41a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c41e:	2b00      	cmp	r3, #0
 800c420:	dd15      	ble.n	800c44e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c422:	4b0c      	ldr	r3, [pc, #48]	@ (800c454 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800c424:	681b      	ldr	r3, [r3, #0]
 800c426:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c42a:	b10a      	cbz	r2, 800c430 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800c42c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800c42e:	b900      	cbnz	r0, 800c432 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800c430:	6898      	ldr	r0, [r3, #8]
 800c432:	2701      	movs	r7, #1
 800c434:	6801      	ldr	r1, [r0, #0]
 800c436:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800c43a:	9702      	str	r7, [sp, #8]
 800c43c:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800c440:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800c444:	e9cd 5600 	strd	r5, r6, [sp]
 800c448:	688d      	ldr	r5, [r1, #8]
 800c44a:	4621      	mov	r1, r4
 800c44c:	47a8      	blx	r5
 800c44e:	b008      	add	sp, #32
 800c450:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c454:	200150c0 	.word	0x200150c0

0800c458 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800c458:	4770      	bx	lr

0800c45a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800c45a:	b510      	push	{r4, lr}
 800c45c:	4604      	mov	r4, r0
 800c45e:	2148      	movs	r1, #72	@ 0x48
 800c460:	f012 fa7d 	bl	801e95e <_ZdlPvj>
 800c464:	4620      	mov	r0, r4
 800c466:	bd10      	pop	{r4, pc}

0800c468 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800c468:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c46c:	b08d      	sub	sp, #52	@ 0x34
 800c46e:	4604      	mov	r4, r0
 800c470:	460f      	mov	r7, r1
 800c472:	f7ff fe8f 	bl	800c194 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800c476:	4a55      	ldr	r2, [pc, #340]	@ (800c5cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800c478:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800c47a:	8812      	ldrh	r2, [r2, #0]
 800c47c:	429a      	cmp	r2, r3
 800c47e:	f240 8082 	bls.w	800c586 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800c482:	4d53      	ldr	r5, [pc, #332]	@ (800c5d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800c484:	682a      	ldr	r2, [r5, #0]
 800c486:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c48a:	4b52      	ldr	r3, [pc, #328]	@ (800c5d4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800c48c:	681b      	ldr	r3, [r3, #0]
 800c48e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800c492:	2200      	movs	r2, #0
 800c494:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
 800c498:	e9cd 2203 	strd	r2, r2, [sp, #12]
 800c49c:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 800c4a0:	2a03      	cmp	r2, #3
 800c4a2:	d811      	bhi.n	800c4c8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800c4a4:	e8df f002 	tbb	[pc, r2]
 800c4a8:	89727902 	.word	0x89727902
 800c4ac:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800c4b0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c4b4:	1ad2      	subs	r2, r2, r3
 800c4b6:	2002      	movs	r0, #2
 800c4b8:	f8ad 1010 	strh.w	r1, [sp, #16]
 800c4bc:	f8ad 3012 	strh.w	r3, [sp, #18]
 800c4c0:	fb92 f2f0 	sdiv	r2, r2, r0
 800c4c4:	f8ad 200e 	strh.w	r2, [sp, #14]
 800c4c8:	f10d 080c 	add.w	r8, sp, #12
 800c4cc:	f10d 0914 	add.w	r9, sp, #20
 800c4d0:	e898 0003 	ldmia.w	r8, {r0, r1}
 800c4d4:	e889 0003 	stmia.w	r9, {r0, r1}
 800c4d8:	4639      	mov	r1, r7
 800c4da:	4648      	mov	r0, r9
 800c4dc:	f7fe f9d0 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 800c4e0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800c4e4:	2b00      	cmp	r3, #0
 800c4e6:	dd4e      	ble.n	800c586 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800c4e8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800c4ec:	2b00      	cmp	r3, #0
 800c4ee:	dd4a      	ble.n	800c586 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800c4f0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800c4f4:	4641      	mov	r1, r8
 800c4f6:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c4fa:	4620      	mov	r0, r4
 800c4fc:	1a9b      	subs	r3, r3, r2
 800c4fe:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800c502:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c506:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800c50a:	1a9b      	subs	r3, r3, r2
 800c50c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c510:	6823      	ldr	r3, [r4, #0]
 800c512:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c514:	4798      	blx	r3
 800c516:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800c51a:	2b00      	cmp	r3, #0
 800c51c:	d053      	beq.n	800c5c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 800c51e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800c520:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
 800c522:	682b      	ldr	r3, [r5, #0]
 800c524:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
 800c528:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800c52c:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
 800c530:	785b      	ldrb	r3, [r3, #1]
 800c532:	9209      	str	r2, [sp, #36]	@ 0x24
 800c534:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800c538:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c53c:	9607      	str	r6, [sp, #28]
 800c53e:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 800c542:	2300      	movs	r3, #0
 800c544:	f88d 5020 	strb.w	r5, [sp, #32]
 800c548:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 800c54c:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
 800c550:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800c554:	4b20      	ldr	r3, [pc, #128]	@ (800c5d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800c556:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800c55a:	681b      	ldr	r3, [r3, #0]
 800c55c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800c560:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c564:	b10a      	cbz	r2, 800c56a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800c566:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 800c568:	b904      	cbnz	r4, 800c56c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 800c56a:	689c      	ldr	r4, [r3, #8]
 800c56c:	4b1b      	ldr	r3, [pc, #108]	@ (800c5dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800c56e:	6818      	ldr	r0, [r3, #0]
 800c570:	f7f6 fe44 	bl	80031fc <_ZNK8touchgfx5Texts7getTextEt>
 800c574:	ab07      	add	r3, sp, #28
 800c576:	9001      	str	r0, [sp, #4]
 800c578:	4620      	mov	r0, r4
 800c57a:	9300      	str	r3, [sp, #0]
 800c57c:	464b      	mov	r3, r9
 800c57e:	e898 0006 	ldmia.w	r8, {r1, r2}
 800c582:	f7f6 fded 	bl	8003160 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c586:	b00d      	add	sp, #52	@ 0x34
 800c588:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c58c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800c590:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c594:	1ad2      	subs	r2, r2, r3
 800c596:	3201      	adds	r2, #1
 800c598:	e78d      	b.n	800c4b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 800c59a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c59e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800c5a2:	1ad2      	subs	r2, r2, r3
 800c5a4:	3201      	adds	r2, #1
 800c5a6:	2002      	movs	r0, #2
 800c5a8:	f8ad 3010 	strh.w	r3, [sp, #16]
 800c5ac:	f8ad 1012 	strh.w	r1, [sp, #18]
 800c5b0:	fb92 f2f0 	sdiv	r2, r2, r0
 800c5b4:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c5b8:	e786      	b.n	800c4c8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800c5ba:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c5be:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800c5c2:	1ad2      	subs	r2, r2, r3
 800c5c4:	e7ef      	b.n	800c5a6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 800c5c6:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 800c5c8:	e7aa      	b.n	800c520 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 800c5ca:	bf00      	nop
 800c5cc:	20015114 	.word	0x20015114
 800c5d0:	20015110 	.word	0x20015110
 800c5d4:	20015118 	.word	0x20015118
 800c5d8:	200150c0 	.word	0x200150c0
 800c5dc:	2001511c 	.word	0x2001511c

0800c5e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800c5e0:	2101      	movs	r1, #1
 800c5e2:	2200      	movs	r2, #0
 800c5e4:	b510      	push	{r4, lr}
 800c5e6:	4c13      	ldr	r4, [pc, #76]	@ (800c634 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800c5e8:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800c5ec:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800c5f0:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800c5f4:	6004      	str	r4, [r0, #0]
 800c5f6:	4c10      	ldr	r4, [pc, #64]	@ (800c638 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800c5f8:	8082      	strh	r2, [r0, #4]
 800c5fa:	80c2      	strh	r2, [r0, #6]
 800c5fc:	8102      	strh	r2, [r0, #8]
 800c5fe:	8142      	strh	r2, [r0, #10]
 800c600:	8182      	strh	r2, [r0, #12]
 800c602:	81c2      	strh	r2, [r0, #14]
 800c604:	8202      	strh	r2, [r0, #16]
 800c606:	8242      	strh	r2, [r0, #18]
 800c608:	61c2      	str	r2, [r0, #28]
 800c60a:	8402      	strh	r2, [r0, #32]
 800c60c:	8442      	strh	r2, [r0, #34]	@ 0x22
 800c60e:	6282      	str	r2, [r0, #40]	@ 0x28
 800c610:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 800c614:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 800c616:	8601      	strh	r1, [r0, #48]	@ 0x30
 800c618:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 800c61c:	6344      	str	r4, [r0, #52]	@ 0x34
 800c61e:	8701      	strh	r1, [r0, #56]	@ 0x38
 800c620:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
 800c624:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
 800c628:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c62c:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 800c630:	bd10      	pop	{r4, pc}
 800c632:	bf00      	nop
 800c634:	080215e8 	.word	0x080215e8
 800c638:	0802030c 	.word	0x0802030c

0800c63c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800c63c:	b510      	push	{r4, lr}
 800c63e:	6803      	ldr	r3, [r0, #0]
 800c640:	460c      	mov	r4, r1
 800c642:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c644:	4798      	blx	r3
 800c646:	1b03      	subs	r3, r0, r4
 800c648:	4258      	negs	r0, r3
 800c64a:	4158      	adcs	r0, r3
 800c64c:	bd10      	pop	{r4, pc}
	...

0800c650 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800c650:	4b01      	ldr	r3, [pc, #4]	@ (800c658 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800c652:	6019      	str	r1, [r3, #0]
 800c654:	4770      	bx	lr
 800c656:	bf00      	nop
 800c658:	200150c8 	.word	0x200150c8

0800c65c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c65c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c660:	4696      	mov	lr, r2
 800c662:	b097      	sub	sp, #92	@ 0x5c
 800c664:	4605      	mov	r5, r0
 800c666:	4614      	mov	r4, r2
 800c668:	460e      	mov	r6, r1
 800c66a:	461f      	mov	r7, r3
 800c66c:	f10d 0c1c 	add.w	ip, sp, #28
 800c670:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800c674:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800c678:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800c67c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c680:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c684:	f8de 3000 	ldr.w	r3, [lr]
 800c688:	f104 0e14 	add.w	lr, r4, #20
 800c68c:	f8cc 3000 	str.w	r3, [ip]
 800c690:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c694:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c698:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c69c:	f8de 3000 	ldr.w	r3, [lr]
 800c6a0:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c6a4:	f8cc 3000 	str.w	r3, [ip]
 800c6a8:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c6ac:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c6b0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c6b4:	f8de 3000 	ldr.w	r3, [lr]
 800c6b8:	4631      	mov	r1, r6
 800c6ba:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c6bc:	4628      	mov	r0, r5
 800c6be:	f8cc 3000 	str.w	r3, [ip]
 800c6c2:	682b      	ldr	r3, [r5, #0]
 800c6c4:	9201      	str	r2, [sp, #4]
 800c6c6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c6c8:	f8cd 8008 	str.w	r8, [sp, #8]
 800c6cc:	9200      	str	r2, [sp, #0]
 800c6ce:	aa07      	add	r2, sp, #28
 800c6d0:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c6d4:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800c6d8:	463b      	mov	r3, r7
 800c6da:	47d8      	blx	fp
 800c6dc:	46a6      	mov	lr, r4
 800c6de:	f10d 0c1c 	add.w	ip, sp, #28
 800c6e2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c6e6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c6ea:	f8de 3000 	ldr.w	r3, [lr]
 800c6ee:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c6f2:	343c      	adds	r4, #60	@ 0x3c
 800c6f4:	f8cc 3000 	str.w	r3, [ip]
 800c6f8:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c6fc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c700:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c704:	f8de 3000 	ldr.w	r3, [lr]
 800c708:	f8cc 3000 	str.w	r3, [ip]
 800c70c:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c710:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c712:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c716:	6823      	ldr	r3, [r4, #0]
 800c718:	4631      	mov	r1, r6
 800c71a:	4628      	mov	r0, r5
 800c71c:	f8cc 3000 	str.w	r3, [ip]
 800c720:	682b      	ldr	r3, [r5, #0]
 800c722:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c726:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c728:	f8cd 8008 	str.w	r8, [sp, #8]
 800c72c:	9201      	str	r2, [sp, #4]
 800c72e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c730:	9200      	str	r2, [sp, #0]
 800c732:	aa07      	add	r2, sp, #28
 800c734:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800c736:	463b      	mov	r3, r7
 800c738:	47a0      	blx	r4
 800c73a:	b017      	add	sp, #92	@ 0x5c
 800c73c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c740 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c744:	b08d      	sub	sp, #52	@ 0x34
 800c746:	4688      	mov	r8, r1
 800c748:	f8d3 c000 	ldr.w	ip, [r3]
 800c74c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800c74e:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800c752:	680f      	ldr	r7, [r1, #0]
 800c754:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800c758:	eba7 070c 	sub.w	r7, r7, ip
 800c75c:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800c760:	edd3 6a07 	vldr	s13, [r3, #28]
 800c764:	42bc      	cmp	r4, r7
 800c766:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800c768:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800c76c:	bfa8      	it	ge
 800c76e:	463c      	movge	r4, r7
 800c770:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c774:	f9ba 1000 	ldrsh.w	r1, [sl]
 800c778:	ee07 4a90 	vmov	s15, r4
 800c77c:	eb09 0e0c 	add.w	lr, r9, ip
 800c780:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800c784:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c788:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800c78c:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800c790:	4571      	cmp	r1, lr
 800c792:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c796:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c79a:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c79e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800c7a2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c7a6:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c7aa:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c7ae:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c7b2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c7b6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c7ba:	f340 808c 	ble.w	800c8d6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800c7be:	eba1 060e 	sub.w	r6, r1, lr
 800c7c2:	fb96 f5f4 	sdiv	r5, r6, r4
 800c7c6:	ee07 5a10 	vmov	s14, r5
 800c7ca:	2d00      	cmp	r5, #0
 800c7cc:	fb04 6615 	mls	r6, r4, r5, r6
 800c7d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c7d4:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c7d8:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c7dc:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c7e0:	dd12      	ble.n	800c808 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800c7e2:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c7e6:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c7ea:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c7ee:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c7f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c7f6:	bf14      	ite	ne
 800c7f8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c7fc:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c800:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c804:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c808:	fb05 f204 	mul.w	r2, r5, r4
 800c80c:	1abf      	subs	r7, r7, r2
 800c80e:	4494      	add	ip, r2
 800c810:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800c814:	4411      	add	r1, r2
 800c816:	eb09 020c 	add.w	r2, r9, ip
 800c81a:	b209      	sxth	r1, r1
 800c81c:	443a      	add	r2, r7
 800c81e:	428a      	cmp	r2, r1
 800c820:	bfc4      	itt	gt
 800c822:	eba1 0209 	subgt.w	r2, r1, r9
 800c826:	eba2 070c 	subgt.w	r7, r2, ip
 800c82a:	2f00      	cmp	r7, #0
 800c82c:	dd50      	ble.n	800c8d0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800c82e:	fb97 f1f4 	sdiv	r1, r7, r4
 800c832:	fb04 7211 	mls	r2, r4, r1, r7
 800c836:	b90a      	cbnz	r2, 800c83c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800c838:	3901      	subs	r1, #1
 800c83a:	4622      	mov	r2, r4
 800c83c:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c840:	6840      	ldr	r0, [r0, #4]
 800c842:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800c846:	44b6      	add	lr, r6
 800c848:	f8d0 a000 	ldr.w	sl, [r0]
 800c84c:	2900      	cmp	r1, #0
 800c84e:	bfcc      	ite	gt
 800c850:	46a1      	movgt	r9, r4
 800c852:	4691      	movle	r9, r2
 800c854:	900b      	str	r0, [sp, #44]	@ 0x2c
 800c856:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800c858:	fb04 e505 	mla	r5, r4, r5, lr
 800c85c:	eef0 6a42 	vmov.f32	s13, s4
 800c860:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800c864:	9008      	str	r0, [sp, #32]
 800c866:	eeb0 7a61 	vmov.f32	s14, s3
 800c86a:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800c86c:	695b      	ldr	r3, [r3, #20]
 800c86e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c872:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800c876:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c87a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800c87c:	445b      	add	r3, fp
 800c87e:	9307      	str	r3, [sp, #28]
 800c880:	ee16 3a90 	vmov	r3, s13
 800c884:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800c888:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c88c:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c890:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c894:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c898:	ee17 7a90 	vmov	r7, s15
 800c89c:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c8a0:	fb97 f7f4 	sdiv	r7, r7, r4
 800c8a4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c8a8:	ee17 ca90 	vmov	ip, s15
 800c8ac:	fb9c fcf4 	sdiv	ip, ip, r4
 800c8b0:	fb0c 3306 	mla	r3, ip, r6, r3
 800c8b4:	9302      	str	r3, [sp, #8]
 800c8b6:	ee17 3a10 	vmov	r3, s14
 800c8ba:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800c8be:	fb07 3706 	mla	r7, r7, r6, r3
 800c8c2:	eba9 0306 	sub.w	r3, r9, r6
 800c8c6:	e9cd 4700 	strd	r4, r7, [sp]
 800c8ca:	f8da 4008 	ldr.w	r4, [sl, #8]
 800c8ce:	47a0      	blx	r4
 800c8d0:	b00d      	add	sp, #52	@ 0x34
 800c8d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c8d6:	2500      	movs	r5, #0
 800c8d8:	462e      	mov	r6, r5
 800c8da:	e799      	b.n	800c810 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800c8dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c8dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c8e0:	b0db      	sub	sp, #364	@ 0x16c
 800c8e2:	461d      	mov	r5, r3
 800c8e4:	4614      	mov	r4, r2
 800c8e6:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800c8ea:	910f      	str	r1, [sp, #60]	@ 0x3c
 800c8ec:	4629      	mov	r1, r5
 800c8ee:	930a      	str	r3, [sp, #40]	@ 0x28
 800c8f0:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800c8f4:	9009      	str	r0, [sp, #36]	@ 0x24
 800c8f6:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c8f8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800c8fc:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800c900:	9310      	str	r3, [sp, #64]	@ 0x40
 800c902:	6803      	ldr	r3, [r0, #0]
 800c904:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800c906:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800c90a:	47b8      	blx	r7
 800c90c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c90e:	6058      	str	r0, [r3, #4]
 800c910:	2800      	cmp	r0, #0
 800c912:	f000 83a1 	beq.w	800d058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c916:	682b      	ldr	r3, [r5, #0]
 800c918:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800c91c:	ed94 7a02 	vldr	s14, [r4, #8]
 800c920:	9314      	str	r3, [sp, #80]	@ 0x50
 800c922:	686b      	ldr	r3, [r5, #4]
 800c924:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c928:	9315      	str	r3, [sp, #84]	@ 0x54
 800c92a:	4bc1      	ldr	r3, [pc, #772]	@ (800cc30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800c92c:	7819      	ldrb	r1, [r3, #0]
 800c92e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800c932:	2900      	cmp	r1, #0
 800c934:	bf16      	itet	ne
 800c936:	4619      	movne	r1, r3
 800c938:	4611      	moveq	r1, r2
 800c93a:	4613      	movne	r3, r2
 800c93c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c940:	9116      	str	r1, [sp, #88]	@ 0x58
 800c942:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800c946:	f240 8387 	bls.w	800d058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c94a:	ed94 7a07 	vldr	s14, [r4, #28]
 800c94e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c952:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c956:	f240 837f 	bls.w	800d058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c95a:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800c95e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c962:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c966:	f240 8377 	bls.w	800d058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c96a:	6822      	ldr	r2, [r4, #0]
 800c96c:	4bb1      	ldr	r3, [pc, #708]	@ (800cc34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800c96e:	429a      	cmp	r2, r3
 800c970:	f2c0 8372 	blt.w	800d058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c974:	49b0      	ldr	r1, [pc, #704]	@ (800cc38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800c976:	6963      	ldr	r3, [r4, #20]
 800c978:	428a      	cmp	r2, r1
 800c97a:	f300 836d 	bgt.w	800d058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c97e:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c982:	48ae      	ldr	r0, [pc, #696]	@ (800cc3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800c984:	33ff      	adds	r3, #255	@ 0xff
 800c986:	4283      	cmp	r3, r0
 800c988:	f200 8366 	bhi.w	800d058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c98c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800c98e:	4dac      	ldr	r5, [pc, #688]	@ (800cc40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800c990:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c994:	33ff      	adds	r3, #255	@ 0xff
 800c996:	42ab      	cmp	r3, r5
 800c998:	f200 835e 	bhi.w	800d058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c99c:	6862      	ldr	r2, [r4, #4]
 800c99e:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800c9a2:	33ff      	adds	r3, #255	@ 0xff
 800c9a4:	4283      	cmp	r3, r0
 800c9a6:	f200 8357 	bhi.w	800d058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9aa:	69a1      	ldr	r1, [r4, #24]
 800c9ac:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800c9b0:	33ff      	adds	r3, #255	@ 0xff
 800c9b2:	4283      	cmp	r3, r0
 800c9b4:	f200 8350 	bhi.w	800d058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9b8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800c9ba:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800c9be:	30ff      	adds	r0, #255	@ 0xff
 800c9c0:	42a8      	cmp	r0, r5
 800c9c2:	f200 8349 	bhi.w	800d058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9c6:	428a      	cmp	r2, r1
 800c9c8:	f280 8110 	bge.w	800cbec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800c9cc:	429a      	cmp	r2, r3
 800c9ce:	f300 8119 	bgt.w	800cc04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800c9d2:	4299      	cmp	r1, r3
 800c9d4:	f280 811d 	bge.w	800cc12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800c9d8:	2502      	movs	r5, #2
 800c9da:	2701      	movs	r7, #1
 800c9dc:	46a9      	mov	r9, r5
 800c9de:	46b8      	mov	r8, r7
 800c9e0:	f04f 0a00 	mov.w	sl, #0
 800c9e4:	4621      	mov	r1, r4
 800c9e6:	a849      	add	r0, sp, #292	@ 0x124
 800c9e8:	f003 fd26 	bl	8010438 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800c9ec:	4622      	mov	r2, r4
 800c9ee:	4653      	mov	r3, sl
 800c9f0:	a949      	add	r1, sp, #292	@ 0x124
 800c9f2:	f8cd 9000 	str.w	r9, [sp]
 800c9f6:	a819      	add	r0, sp, #100	@ 0x64
 800c9f8:	f003 fe4e 	bl	8010698 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c9fc:	4622      	mov	r2, r4
 800c9fe:	4653      	mov	r3, sl
 800ca00:	a949      	add	r1, sp, #292	@ 0x124
 800ca02:	f8cd 8000 	str.w	r8, [sp]
 800ca06:	a829      	add	r0, sp, #164	@ 0xa4
 800ca08:	f003 fe46 	bl	8010698 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ca0c:	4643      	mov	r3, r8
 800ca0e:	4622      	mov	r2, r4
 800ca10:	a949      	add	r1, sp, #292	@ 0x124
 800ca12:	f8cd 9000 	str.w	r9, [sp]
 800ca16:	a839      	add	r0, sp, #228	@ 0xe4
 800ca18:	f003 fe3e 	bl	8010698 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ca1c:	42af      	cmp	r7, r5
 800ca1e:	af12      	add	r7, sp, #72	@ 0x48
 800ca20:	bfb7      	itett	lt
 800ca22:	2300      	movlt	r3, #0
 800ca24:	2301      	movge	r3, #1
 800ca26:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800ca28:	ac19      	addlt	r4, sp, #100	@ 0x64
 800ca2a:	bfb1      	iteee	lt
 800ca2c:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800ca2e:	ad19      	addge	r5, sp, #100	@ 0x64
 800ca30:	930e      	strge	r3, [sp, #56]	@ 0x38
 800ca32:	ac29      	addge	r4, sp, #164	@ 0xa4
 800ca34:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ca36:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ca3a:	e887 0003 	stmia.w	r7, {r0, r1}
 800ca3e:	b928      	cbnz	r0, 800ca4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800ca40:	4b80      	ldr	r3, [pc, #512]	@ (800cc44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800ca42:	6818      	ldr	r0, [r3, #0]
 800ca44:	6803      	ldr	r3, [r0, #0]
 800ca46:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ca48:	4798      	blx	r3
 800ca4a:	6038      	str	r0, [r7, #0]
 800ca4c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ca4e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ca52:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ca56:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800ca58:	930c      	str	r3, [sp, #48]	@ 0x30
 800ca5a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800ca5c:	6963      	ldr	r3, [r4, #20]
 800ca5e:	440b      	add	r3, r1
 800ca60:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ca64:	4408      	add	r0, r1
 800ca66:	b200      	sxth	r0, r0
 800ca68:	4283      	cmp	r3, r0
 800ca6a:	900d      	str	r0, [sp, #52]	@ 0x34
 800ca6c:	f280 80dd 	bge.w	800cc2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800ca70:	428b      	cmp	r3, r1
 800ca72:	da08      	bge.n	800ca86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ca74:	2a00      	cmp	r2, #0
 800ca76:	dd06      	ble.n	800ca86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ca78:	1acb      	subs	r3, r1, r3
 800ca7a:	429a      	cmp	r2, r3
 800ca7c:	f2c0 80e4 	blt.w	800cc48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800ca80:	2b00      	cmp	r3, #0
 800ca82:	f300 80e2 	bgt.w	800cc4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800ca86:	6967      	ldr	r7, [r4, #20]
 800ca88:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800ca8c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ca8e:	443b      	add	r3, r7
 800ca90:	461f      	mov	r7, r3
 800ca92:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ca94:	1bdf      	subs	r7, r3, r7
 800ca96:	4297      	cmp	r7, r2
 800ca98:	bfa8      	it	ge
 800ca9a:	4617      	movge	r7, r2
 800ca9c:	2f00      	cmp	r7, #0
 800ca9e:	f340 8166 	ble.w	800cd6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800caa2:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800caa4:	6829      	ldr	r1, [r5, #0]
 800caa6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800caaa:	f9bb 3000 	ldrsh.w	r3, [fp]
 800caae:	4411      	add	r1, r2
 800cab0:	6820      	ldr	r0, [r4, #0]
 800cab2:	4299      	cmp	r1, r3
 800cab4:	dd1a      	ble.n	800caec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800cab6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800caba:	4402      	add	r2, r0
 800cabc:	440b      	add	r3, r1
 800cabe:	b21b      	sxth	r3, r3
 800cac0:	429a      	cmp	r2, r3
 800cac2:	dc13      	bgt.n	800caec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800cac4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800cac6:	a912      	add	r1, sp, #72	@ 0x48
 800cac8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800caca:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800cacc:	681b      	ldr	r3, [r3, #0]
 800cace:	9206      	str	r2, [sp, #24]
 800cad0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800cad2:	9500      	str	r5, [sp, #0]
 800cad4:	9205      	str	r2, [sp, #20]
 800cad6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800cad8:	e9cd b203 	strd	fp, r2, [sp, #12]
 800cadc:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800cade:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800cae2:	aa49      	add	r2, sp, #292	@ 0x124
 800cae4:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800cae8:	4623      	mov	r3, r4
 800caea:	47c8      	blx	r9
 800caec:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800caf0:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800caf4:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800caf8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cafc:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800cb00:	68a1      	ldr	r1, [r4, #8]
 800cb02:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cb06:	ed94 6a08 	vldr	s12, [r4, #32]
 800cb0a:	edd4 6a07 	vldr	s13, [r4, #28]
 800cb0e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800cb12:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cb16:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800cb1a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800cb1e:	edc4 6a07 	vstr	s13, [r4, #28]
 800cb22:	441a      	add	r2, r3
 800cb24:	6963      	ldr	r3, [r4, #20]
 800cb26:	3301      	adds	r3, #1
 800cb28:	6022      	str	r2, [r4, #0]
 800cb2a:	6163      	str	r3, [r4, #20]
 800cb2c:	69a3      	ldr	r3, [r4, #24]
 800cb2e:	3b01      	subs	r3, #1
 800cb30:	61a3      	str	r3, [r4, #24]
 800cb32:	6923      	ldr	r3, [r4, #16]
 800cb34:	440b      	add	r3, r1
 800cb36:	68e1      	ldr	r1, [r4, #12]
 800cb38:	428b      	cmp	r3, r1
 800cb3a:	6123      	str	r3, [r4, #16]
 800cb3c:	db15      	blt.n	800cb6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800cb3e:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800cb42:	3201      	adds	r2, #1
 800cb44:	1a5b      	subs	r3, r3, r1
 800cb46:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cb4a:	6022      	str	r2, [r4, #0]
 800cb4c:	6123      	str	r3, [r4, #16]
 800cb4e:	edc4 6a07 	vstr	s13, [r4, #28]
 800cb52:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800cb56:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cb5a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800cb5e:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800cb62:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cb66:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800cb6a:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800cb6e:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800cb72:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800cb76:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cb7a:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800cb7e:	68a9      	ldr	r1, [r5, #8]
 800cb80:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cb84:	ed95 6a08 	vldr	s12, [r5, #32]
 800cb88:	edd5 6a07 	vldr	s13, [r5, #28]
 800cb8c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800cb90:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cb94:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800cb98:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cb9c:	edc5 6a07 	vstr	s13, [r5, #28]
 800cba0:	441a      	add	r2, r3
 800cba2:	696b      	ldr	r3, [r5, #20]
 800cba4:	3301      	adds	r3, #1
 800cba6:	602a      	str	r2, [r5, #0]
 800cba8:	616b      	str	r3, [r5, #20]
 800cbaa:	69ab      	ldr	r3, [r5, #24]
 800cbac:	3b01      	subs	r3, #1
 800cbae:	61ab      	str	r3, [r5, #24]
 800cbb0:	692b      	ldr	r3, [r5, #16]
 800cbb2:	440b      	add	r3, r1
 800cbb4:	68e9      	ldr	r1, [r5, #12]
 800cbb6:	428b      	cmp	r3, r1
 800cbb8:	612b      	str	r3, [r5, #16]
 800cbba:	db15      	blt.n	800cbe8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800cbbc:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800cbc0:	3201      	adds	r2, #1
 800cbc2:	1a5b      	subs	r3, r3, r1
 800cbc4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cbc8:	602a      	str	r2, [r5, #0]
 800cbca:	612b      	str	r3, [r5, #16]
 800cbcc:	edc5 6a07 	vstr	s13, [r5, #28]
 800cbd0:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800cbd4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cbd8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800cbdc:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800cbe0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cbe4:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800cbe8:	3f01      	subs	r7, #1
 800cbea:	e757      	b.n	800ca9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800cbec:	4299      	cmp	r1, r3
 800cbee:	dc13      	bgt.n	800cc18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800cbf0:	429a      	cmp	r2, r3
 800cbf2:	da14      	bge.n	800cc1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800cbf4:	2502      	movs	r5, #2
 800cbf6:	2703      	movs	r7, #3
 800cbf8:	f04f 0800 	mov.w	r8, #0
 800cbfc:	46a9      	mov	r9, r5
 800cbfe:	f04f 0a01 	mov.w	sl, #1
 800cc02:	e6ef      	b.n	800c9e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cc04:	2501      	movs	r5, #1
 800cc06:	2700      	movs	r7, #0
 800cc08:	46a9      	mov	r9, r5
 800cc0a:	46b8      	mov	r8, r7
 800cc0c:	f04f 0a02 	mov.w	sl, #2
 800cc10:	e6e8      	b.n	800c9e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cc12:	2501      	movs	r5, #1
 800cc14:	2702      	movs	r7, #2
 800cc16:	e6e1      	b.n	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800cc18:	2500      	movs	r5, #0
 800cc1a:	2701      	movs	r7, #1
 800cc1c:	e7f4      	b.n	800cc08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800cc1e:	2702      	movs	r7, #2
 800cc20:	2503      	movs	r5, #3
 800cc22:	f04f 0900 	mov.w	r9, #0
 800cc26:	46b8      	mov	r8, r7
 800cc28:	e7e9      	b.n	800cbfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800cc2a:	4613      	mov	r3, r2
 800cc2c:	e728      	b.n	800ca80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800cc2e:	bf00      	nop
 800cc30:	200150b8 	.word	0x200150b8
 800cc34:	fffd8f01 	.word	0xfffd8f01
 800cc38:	00027100 	.word	0x00027100
 800cc3c:	0004e1ff 	.word	0x0004e1ff
 800cc40:	0004e1fe 	.word	0x0004e1fe
 800cc44:	200150c0 	.word	0x200150c0
 800cc48:	4613      	mov	r3, r2
 800cc4a:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800cc4c:	469e      	mov	lr, r3
 800cc4e:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800cc50:	469c      	mov	ip, r3
 800cc52:	9111      	str	r1, [sp, #68]	@ 0x44
 800cc54:	f04f 0900 	mov.w	r9, #0
 800cc58:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800cc5c:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800cc60:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800cc64:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800cc68:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800cc6c:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800cc70:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800cc74:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800cc78:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800cc7c:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800cc80:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800cc84:	f1bc 0f00 	cmp.w	ip, #0
 800cc88:	d147      	bne.n	800cd1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800cc8a:	eb03 0c07 	add.w	ip, r3, r7
 800cc8e:	1ad7      	subs	r7, r2, r3
 800cc90:	f1b9 0f00 	cmp.w	r9, #0
 800cc94:	d009      	beq.n	800ccaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800cc96:	9029      	str	r0, [sp, #164]	@ 0xa4
 800cc98:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800cc9c:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800cca0:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800cca4:	912d      	str	r1, [sp, #180]	@ 0xb4
 800cca6:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800ccaa:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800ccac:	f04f 0800 	mov.w	r8, #0
 800ccb0:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800ccb4:	9111      	str	r1, [sp, #68]	@ 0x44
 800ccb6:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800ccba:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800ccbe:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800ccc2:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800ccc6:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800ccca:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800ccce:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800ccd2:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800ccd6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800ccda:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800ccde:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800cce2:	f1be 0f00 	cmp.w	lr, #0
 800cce6:	d031      	beq.n	800cd4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800cce8:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ccea:	4450      	add	r0, sl
 800ccec:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ccf0:	4431      	add	r1, r6
 800ccf2:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ccf6:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ccfa:	4549      	cmp	r1, r9
 800ccfc:	db08      	blt.n	800cd10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ccfe:	ee77 7a85 	vadd.f32	s15, s15, s10
 800cd02:	3001      	adds	r0, #1
 800cd04:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800cd08:	eba1 0109 	sub.w	r1, r1, r9
 800cd0c:	ee37 7a06 	vadd.f32	s14, s14, s12
 800cd10:	f10e 3eff 	add.w	lr, lr, #4294967295
 800cd14:	f04f 0801 	mov.w	r8, #1
 800cd18:	e7e3      	b.n	800cce2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800cd1a:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800cd1c:	4450      	add	r0, sl
 800cd1e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800cd22:	4431      	add	r1, r6
 800cd24:	ee77 7a84 	vadd.f32	s15, s15, s8
 800cd28:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800cd2c:	4541      	cmp	r1, r8
 800cd2e:	db08      	blt.n	800cd42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800cd30:	ee76 6a85 	vadd.f32	s13, s13, s10
 800cd34:	3001      	adds	r0, #1
 800cd36:	ee37 7a25 	vadd.f32	s14, s14, s11
 800cd3a:	eba1 0108 	sub.w	r1, r1, r8
 800cd3e:	ee77 7a86 	vadd.f32	s15, s15, s12
 800cd42:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cd46:	f04f 0901 	mov.w	r9, #1
 800cd4a:	e79b      	b.n	800cc84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800cd4c:	449c      	add	ip, r3
 800cd4e:	1aff      	subs	r7, r7, r3
 800cd50:	f1b8 0f00 	cmp.w	r8, #0
 800cd54:	d009      	beq.n	800cd6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800cd56:	9019      	str	r0, [sp, #100]	@ 0x64
 800cd58:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800cd5c:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800cd60:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800cd64:	911d      	str	r1, [sp, #116]	@ 0x74
 800cd66:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800cd6a:	1ad2      	subs	r2, r2, r3
 800cd6c:	e68b      	b.n	800ca86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800cd6e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800cd70:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800cd72:	2b00      	cmp	r3, #0
 800cd74:	f000 80d1 	beq.w	800cf1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800cd78:	ad19      	add	r5, sp, #100	@ 0x64
 800cd7a:	ac39      	add	r4, sp, #228	@ 0xe4
 800cd7c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800cd7e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800cd82:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800cd86:	930c      	str	r3, [sp, #48]	@ 0x30
 800cd88:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800cd8a:	6963      	ldr	r3, [r4, #20]
 800cd8c:	440b      	add	r3, r1
 800cd8e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800cd92:	4408      	add	r0, r1
 800cd94:	b200      	sxth	r0, r0
 800cd96:	4283      	cmp	r3, r0
 800cd98:	900d      	str	r0, [sp, #52]	@ 0x34
 800cd9a:	f280 80c1 	bge.w	800cf20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800cd9e:	428b      	cmp	r3, r1
 800cda0:	da08      	bge.n	800cdb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cda2:	2a00      	cmp	r2, #0
 800cda4:	dd06      	ble.n	800cdb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cda6:	1acb      	subs	r3, r1, r3
 800cda8:	429a      	cmp	r2, r3
 800cdaa:	f2c0 80bb 	blt.w	800cf24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800cdae:	2b00      	cmp	r3, #0
 800cdb0:	f300 80b9 	bgt.w	800cf26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800cdb4:	6967      	ldr	r7, [r4, #20]
 800cdb6:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800cdba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800cdbc:	443b      	add	r3, r7
 800cdbe:	461f      	mov	r7, r3
 800cdc0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800cdc2:	1bdf      	subs	r7, r3, r7
 800cdc4:	4297      	cmp	r7, r2
 800cdc6:	bfa8      	it	ge
 800cdc8:	4617      	movge	r7, r2
 800cdca:	2f00      	cmp	r7, #0
 800cdcc:	f340 813c 	ble.w	800d048 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800cdd0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800cdd2:	6829      	ldr	r1, [r5, #0]
 800cdd4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cdd8:	f9bb 3000 	ldrsh.w	r3, [fp]
 800cddc:	4411      	add	r1, r2
 800cdde:	6820      	ldr	r0, [r4, #0]
 800cde0:	4299      	cmp	r1, r3
 800cde2:	dd1a      	ble.n	800ce1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800cde4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800cde8:	4402      	add	r2, r0
 800cdea:	440b      	add	r3, r1
 800cdec:	b21b      	sxth	r3, r3
 800cdee:	429a      	cmp	r2, r3
 800cdf0:	dc13      	bgt.n	800ce1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800cdf2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800cdf4:	a912      	add	r1, sp, #72	@ 0x48
 800cdf6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800cdf8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800cdfa:	681b      	ldr	r3, [r3, #0]
 800cdfc:	9206      	str	r2, [sp, #24]
 800cdfe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ce00:	9500      	str	r5, [sp, #0]
 800ce02:	9205      	str	r2, [sp, #20]
 800ce04:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ce06:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ce0a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ce0c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ce10:	aa49      	add	r2, sp, #292	@ 0x124
 800ce12:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ce16:	4623      	mov	r3, r4
 800ce18:	47c8      	blx	r9
 800ce1a:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ce1e:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ce22:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ce26:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ce2a:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ce2e:	68a1      	ldr	r1, [r4, #8]
 800ce30:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ce34:	ed94 6a08 	vldr	s12, [r4, #32]
 800ce38:	edd4 6a07 	vldr	s13, [r4, #28]
 800ce3c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ce40:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ce44:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ce48:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ce4c:	edc4 6a07 	vstr	s13, [r4, #28]
 800ce50:	441a      	add	r2, r3
 800ce52:	6963      	ldr	r3, [r4, #20]
 800ce54:	3301      	adds	r3, #1
 800ce56:	6022      	str	r2, [r4, #0]
 800ce58:	6163      	str	r3, [r4, #20]
 800ce5a:	69a3      	ldr	r3, [r4, #24]
 800ce5c:	3b01      	subs	r3, #1
 800ce5e:	61a3      	str	r3, [r4, #24]
 800ce60:	6923      	ldr	r3, [r4, #16]
 800ce62:	440b      	add	r3, r1
 800ce64:	68e1      	ldr	r1, [r4, #12]
 800ce66:	428b      	cmp	r3, r1
 800ce68:	6123      	str	r3, [r4, #16]
 800ce6a:	db15      	blt.n	800ce98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800ce6c:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800ce70:	3201      	adds	r2, #1
 800ce72:	1a5b      	subs	r3, r3, r1
 800ce74:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ce78:	6022      	str	r2, [r4, #0]
 800ce7a:	6123      	str	r3, [r4, #16]
 800ce7c:	edc4 6a07 	vstr	s13, [r4, #28]
 800ce80:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800ce84:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ce88:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ce8c:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800ce90:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ce94:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ce98:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800ce9c:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800cea0:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800cea4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cea8:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800ceac:	68a9      	ldr	r1, [r5, #8]
 800ceae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ceb2:	ed95 6a08 	vldr	s12, [r5, #32]
 800ceb6:	edd5 6a07 	vldr	s13, [r5, #28]
 800ceba:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800cebe:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cec2:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800cec6:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ceca:	edc5 6a07 	vstr	s13, [r5, #28]
 800cece:	441a      	add	r2, r3
 800ced0:	696b      	ldr	r3, [r5, #20]
 800ced2:	3301      	adds	r3, #1
 800ced4:	602a      	str	r2, [r5, #0]
 800ced6:	616b      	str	r3, [r5, #20]
 800ced8:	69ab      	ldr	r3, [r5, #24]
 800ceda:	3b01      	subs	r3, #1
 800cedc:	61ab      	str	r3, [r5, #24]
 800cede:	692b      	ldr	r3, [r5, #16]
 800cee0:	440b      	add	r3, r1
 800cee2:	68e9      	ldr	r1, [r5, #12]
 800cee4:	428b      	cmp	r3, r1
 800cee6:	612b      	str	r3, [r5, #16]
 800cee8:	db15      	blt.n	800cf16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800ceea:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ceee:	3201      	adds	r2, #1
 800cef0:	1a5b      	subs	r3, r3, r1
 800cef2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cef6:	602a      	str	r2, [r5, #0]
 800cef8:	612b      	str	r3, [r5, #16]
 800cefa:	edc5 6a07 	vstr	s13, [r5, #28]
 800cefe:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800cf02:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cf06:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800cf0a:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800cf0e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cf12:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800cf16:	3f01      	subs	r7, #1
 800cf18:	e757      	b.n	800cdca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800cf1a:	ad39      	add	r5, sp, #228	@ 0xe4
 800cf1c:	ac19      	add	r4, sp, #100	@ 0x64
 800cf1e:	e72d      	b.n	800cd7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800cf20:	4613      	mov	r3, r2
 800cf22:	e744      	b.n	800cdae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800cf24:	4613      	mov	r3, r2
 800cf26:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800cf28:	469e      	mov	lr, r3
 800cf2a:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800cf2e:	461f      	mov	r7, r3
 800cf30:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800cf34:	f04f 0900 	mov.w	r9, #0
 800cf38:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800cf3c:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800cf40:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800cf44:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800cf48:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800cf4c:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800cf4e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800cf52:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800cf56:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800cf5a:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800cf5e:	960e      	str	r6, [sp, #56]	@ 0x38
 800cf60:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800cf64:	2f00      	cmp	r7, #0
 800cf66:	d146      	bne.n	800cff6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800cf68:	449c      	add	ip, r3
 800cf6a:	1ad7      	subs	r7, r2, r3
 800cf6c:	f1b9 0f00 	cmp.w	r9, #0
 800cf70:	d009      	beq.n	800cf86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800cf72:	9039      	str	r0, [sp, #228]	@ 0xe4
 800cf74:	913d      	str	r1, [sp, #244]	@ 0xf4
 800cf76:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800cf7a:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800cf7e:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800cf82:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800cf86:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800cf88:	f04f 0800 	mov.w	r8, #0
 800cf8c:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800cf90:	910e      	str	r1, [sp, #56]	@ 0x38
 800cf92:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800cf96:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800cf9a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800cf9e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800cfa2:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800cfa6:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800cfaa:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800cfae:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800cfb2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800cfb6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800cfba:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800cfbe:	f1be 0f00 	cmp.w	lr, #0
 800cfc2:	d030      	beq.n	800d026 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800cfc4:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800cfc6:	4450      	add	r0, sl
 800cfc8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800cfcc:	4431      	add	r1, r6
 800cfce:	ee37 7a04 	vadd.f32	s14, s14, s8
 800cfd2:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800cfd6:	4549      	cmp	r1, r9
 800cfd8:	db08      	blt.n	800cfec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800cfda:	ee77 7a85 	vadd.f32	s15, s15, s10
 800cfde:	3001      	adds	r0, #1
 800cfe0:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800cfe4:	eba1 0109 	sub.w	r1, r1, r9
 800cfe8:	ee37 7a06 	vadd.f32	s14, s14, s12
 800cfec:	f10e 3eff 	add.w	lr, lr, #4294967295
 800cff0:	f04f 0801 	mov.w	r8, #1
 800cff4:	e7e3      	b.n	800cfbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800cff6:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800cff8:	4450      	add	r0, sl
 800cffa:	ee37 7a24 	vadd.f32	s14, s14, s9
 800cffe:	4431      	add	r1, r6
 800d000:	ee77 7a84 	vadd.f32	s15, s15, s8
 800d004:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800d008:	4541      	cmp	r1, r8
 800d00a:	db08      	blt.n	800d01e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800d00c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800d010:	3001      	adds	r0, #1
 800d012:	ee37 7a25 	vadd.f32	s14, s14, s11
 800d016:	eba1 0108 	sub.w	r1, r1, r8
 800d01a:	ee77 7a86 	vadd.f32	s15, s15, s12
 800d01e:	3f01      	subs	r7, #1
 800d020:	f04f 0901 	mov.w	r9, #1
 800d024:	e79e      	b.n	800cf64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800d026:	449c      	add	ip, r3
 800d028:	1aff      	subs	r7, r7, r3
 800d02a:	f1b8 0f00 	cmp.w	r8, #0
 800d02e:	d009      	beq.n	800d044 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800d030:	9019      	str	r0, [sp, #100]	@ 0x64
 800d032:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800d036:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800d03a:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800d03e:	911d      	str	r1, [sp, #116]	@ 0x74
 800d040:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800d044:	1ad2      	subs	r2, r2, r3
 800d046:	e6b5      	b.n	800cdb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800d048:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d04a:	681b      	ldr	r3, [r3, #0]
 800d04c:	b923      	cbnz	r3, 800d058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d04e:	4b04      	ldr	r3, [pc, #16]	@ (800d060 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800d050:	6818      	ldr	r0, [r3, #0]
 800d052:	6803      	ldr	r3, [r0, #0]
 800d054:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d056:	4798      	blx	r3
 800d058:	b05b      	add	sp, #364	@ 0x16c
 800d05a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d05e:	bf00      	nop
 800d060:	200150c0 	.word	0x200150c0

0800d064 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800d064:	b570      	push	{r4, r5, r6, lr}
 800d066:	4604      	mov	r4, r0
 800d068:	2500      	movs	r5, #0
 800d06a:	9805      	ldr	r0, [sp, #20]
 800d06c:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800d070:	6061      	str	r1, [r4, #4]
 800d072:	8263      	strh	r3, [r4, #18]
 800d074:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800d078:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d07c:	8025      	strh	r5, [r4, #0]
 800d07e:	7221      	strb	r1, [r4, #8]
 800d080:	7266      	strb	r6, [r4, #9]
 800d082:	60e0      	str	r0, [r4, #12]
 800d084:	8222      	strh	r2, [r4, #16]
 800d086:	82a3      	strh	r3, [r4, #20]
 800d088:	82e5      	strh	r5, [r4, #22]
 800d08a:	8325      	strh	r5, [r4, #24]
 800d08c:	8365      	strh	r5, [r4, #26]
 800d08e:	83a5      	strh	r5, [r4, #28]
 800d090:	83e5      	strh	r5, [r4, #30]
 800d092:	8425      	strh	r5, [r4, #32]
 800d094:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800d098:	b32e      	cbz	r6, 800d0e6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800d09a:	6803      	ldr	r3, [r0, #0]
 800d09c:	695b      	ldr	r3, [r3, #20]
 800d09e:	4798      	blx	r3
 800d0a0:	4606      	mov	r6, r0
 800d0a2:	b300      	cbz	r0, 800d0e6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800d0a4:	68e0      	ldr	r0, [r4, #12]
 800d0a6:	4631      	mov	r1, r6
 800d0a8:	6803      	ldr	r3, [r0, #0]
 800d0aa:	68db      	ldr	r3, [r3, #12]
 800d0ac:	4798      	blx	r3
 800d0ae:	4605      	mov	r5, r0
 800d0b0:	b1c8      	cbz	r0, 800d0e6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800d0b2:	7b43      	ldrb	r3, [r0, #13]
 800d0b4:	7a82      	ldrb	r2, [r0, #10]
 800d0b6:	005b      	lsls	r3, r3, #1
 800d0b8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d0bc:	4313      	orrs	r3, r2
 800d0be:	8423      	strh	r3, [r4, #32]
 800d0c0:	7a63      	ldrb	r3, [r4, #9]
 800d0c2:	2b06      	cmp	r3, #6
 800d0c4:	d10f      	bne.n	800d0e6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800d0c6:	68e0      	ldr	r0, [r4, #12]
 800d0c8:	462a      	mov	r2, r5
 800d0ca:	4631      	mov	r1, r6
 800d0cc:	6803      	ldr	r3, [r0, #0]
 800d0ce:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d0d0:	4798      	blx	r3
 800d0d2:	7b6b      	ldrb	r3, [r5, #13]
 800d0d4:	005b      	lsls	r3, r3, #1
 800d0d6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800d0da:	7aab      	ldrb	r3, [r5, #10]
 800d0dc:	4313      	orrs	r3, r2
 800d0de:	4418      	add	r0, r3
 800d0e0:	8c23      	ldrh	r3, [r4, #32]
 800d0e2:	4418      	add	r0, r3
 800d0e4:	8420      	strh	r0, [r4, #32]
 800d0e6:	4620      	mov	r0, r4
 800d0e8:	bd70      	pop	{r4, r5, r6, pc}

0800d0ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800d0ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d0ee:	2400      	movs	r4, #0
 800d0f0:	b085      	sub	sp, #20
 800d0f2:	4681      	mov	r9, r0
 800d0f4:	4688      	mov	r8, r1
 800d0f6:	4692      	mov	sl, r2
 800d0f8:	469b      	mov	fp, r3
 800d0fa:	4627      	mov	r7, r4
 800d0fc:	4625      	mov	r5, r4
 800d0fe:	4626      	mov	r6, r4
 800d100:	4554      	cmp	r4, sl
 800d102:	da2a      	bge.n	800d15a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d104:	2300      	movs	r3, #0
 800d106:	9303      	str	r3, [sp, #12]
 800d108:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800d10c:	429d      	cmp	r5, r3
 800d10e:	d004      	beq.n	800d11a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800d110:	f242 030b 	movw	r3, #8203	@ 0x200b
 800d114:	429d      	cmp	r5, r3
 800d116:	bf18      	it	ne
 800d118:	462f      	movne	r7, r5
 800d11a:	ab03      	add	r3, sp, #12
 800d11c:	4642      	mov	r2, r8
 800d11e:	4659      	mov	r1, fp
 800d120:	4648      	mov	r0, r9
 800d122:	f002 ff9f 	bl	8010064 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d126:	4605      	mov	r5, r0
 800d128:	b1b8      	cbz	r0, 800d15a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d12a:	280a      	cmp	r0, #10
 800d12c:	d015      	beq.n	800d15a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d12e:	9a03      	ldr	r2, [sp, #12]
 800d130:	b18a      	cbz	r2, 800d156 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800d132:	7b50      	ldrb	r0, [r2, #13]
 800d134:	4639      	mov	r1, r7
 800d136:	7a93      	ldrb	r3, [r2, #10]
 800d138:	0040      	lsls	r0, r0, #1
 800d13a:	8895      	ldrh	r5, [r2, #4]
 800d13c:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800d140:	4303      	orrs	r3, r0
 800d142:	4640      	mov	r0, r8
 800d144:	9301      	str	r3, [sp, #4]
 800d146:	f8d8 3000 	ldr.w	r3, [r8]
 800d14a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d14c:	4798      	blx	r3
 800d14e:	9b01      	ldr	r3, [sp, #4]
 800d150:	4418      	add	r0, r3
 800d152:	4406      	add	r6, r0
 800d154:	b2b6      	uxth	r6, r6
 800d156:	3401      	adds	r4, #1
 800d158:	e7d2      	b.n	800d100 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800d15a:	4630      	mov	r0, r6
 800d15c:	b005      	add	sp, #20
 800d15e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d162 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800d162:	2a02      	cmp	r2, #2
 800d164:	b530      	push	{r4, r5, lr}
 800d166:	d011      	beq.n	800d18c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800d168:	2a03      	cmp	r2, #3
 800d16a:	d01c      	beq.n	800d1a6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800d16c:	2a01      	cmp	r2, #1
 800d16e:	d10c      	bne.n	800d18a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d170:	888b      	ldrh	r3, [r1, #4]
 800d172:	8801      	ldrh	r1, [r0, #0]
 800d174:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800d178:	1a5b      	subs	r3, r3, r1
 800d17a:	8844      	ldrh	r4, [r0, #2]
 800d17c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d180:	1a9b      	subs	r3, r3, r2
 800d182:	8004      	strh	r4, [r0, #0]
 800d184:	8081      	strh	r1, [r0, #4]
 800d186:	8043      	strh	r3, [r0, #2]
 800d188:	80c2      	strh	r2, [r0, #6]
 800d18a:	bd30      	pop	{r4, r5, pc}
 800d18c:	88cb      	ldrh	r3, [r1, #6]
 800d18e:	8842      	ldrh	r2, [r0, #2]
 800d190:	1a9b      	subs	r3, r3, r2
 800d192:	88c2      	ldrh	r2, [r0, #6]
 800d194:	1a9b      	subs	r3, r3, r2
 800d196:	888a      	ldrh	r2, [r1, #4]
 800d198:	8801      	ldrh	r1, [r0, #0]
 800d19a:	8043      	strh	r3, [r0, #2]
 800d19c:	1a52      	subs	r2, r2, r1
 800d19e:	8881      	ldrh	r1, [r0, #4]
 800d1a0:	1a52      	subs	r2, r2, r1
 800d1a2:	8002      	strh	r2, [r0, #0]
 800d1a4:	e7f1      	b.n	800d18a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d1a6:	88cb      	ldrh	r3, [r1, #6]
 800d1a8:	8841      	ldrh	r1, [r0, #2]
 800d1aa:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800d1ae:	1a5b      	subs	r3, r3, r1
 800d1b0:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d1b4:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d1b8:	1a9b      	subs	r3, r3, r2
 800d1ba:	8045      	strh	r5, [r0, #2]
 800d1bc:	8082      	strh	r2, [r0, #4]
 800d1be:	8003      	strh	r3, [r0, #0]
 800d1c0:	80c4      	strh	r4, [r0, #6]
 800d1c2:	e7e2      	b.n	800d18a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800d1c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800d1c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1c8:	b09f      	sub	sp, #124	@ 0x7c
 800d1ca:	920f      	str	r2, [sp, #60]	@ 0x3c
 800d1cc:	9312      	str	r3, [sp, #72]	@ 0x48
 800d1ce:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800d1d0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800d1d2:	8812      	ldrh	r2, [r2, #0]
 800d1d4:	889b      	ldrh	r3, [r3, #4]
 800d1d6:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800d1d8:	4413      	add	r3, r2
 800d1da:	900e      	str	r0, [sp, #56]	@ 0x38
 800d1dc:	6828      	ldr	r0, [r5, #0]
 800d1de:	b21b      	sxth	r3, r3
 800d1e0:	9117      	str	r1, [sp, #92]	@ 0x5c
 800d1e2:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800d1e6:	9311      	str	r3, [sp, #68]	@ 0x44
 800d1e8:	6803      	ldr	r3, [r0, #0]
 800d1ea:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800d1ee:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800d1f0:	4798      	blx	r3
 800d1f2:	682b      	ldr	r3, [r5, #0]
 800d1f4:	9013      	str	r0, [sp, #76]	@ 0x4c
 800d1f6:	7b1a      	ldrb	r2, [r3, #12]
 800d1f8:	7adb      	ldrb	r3, [r3, #11]
 800d1fa:	9215      	str	r2, [sp, #84]	@ 0x54
 800d1fc:	9316      	str	r3, [sp, #88]	@ 0x58
 800d1fe:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800d202:	2c00      	cmp	r4, #0
 800d204:	d067      	beq.n	800d2d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800d206:	7c2b      	ldrb	r3, [r5, #16]
 800d208:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800d20a:	2b06      	cmp	r3, #6
 800d20c:	bf14      	ite	ne
 800d20e:	2301      	movne	r3, #1
 800d210:	2302      	moveq	r3, #2
 800d212:	4413      	add	r3, r2
 800d214:	f04f 0900 	mov.w	r9, #0
 800d218:	9310      	str	r3, [sp, #64]	@ 0x40
 800d21a:	464c      	mov	r4, r9
 800d21c:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800d220:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800d224:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800d226:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800d228:	4293      	cmp	r3, r2
 800d22a:	f280 808b 	bge.w	800d344 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800d22e:	2300      	movs	r3, #0
 800d230:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800d234:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800d238:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800d23c:	429c      	cmp	r4, r3
 800d23e:	d006      	beq.n	800d24e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800d240:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d242:	f242 020b 	movw	r2, #8203	@ 0x200b
 800d246:	4294      	cmp	r4, r2
 800d248:	bf18      	it	ne
 800d24a:	4623      	movne	r3, r4
 800d24c:	930c      	str	r3, [sp, #48]	@ 0x30
 800d24e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800d250:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800d252:	682a      	ldr	r2, [r5, #0]
 800d254:	428b      	cmp	r3, r1
 800d256:	db40      	blt.n	800d2da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800d258:	6813      	ldr	r3, [r2, #0]
 800d25a:	4610      	mov	r0, r2
 800d25c:	695b      	ldr	r3, [r3, #20]
 800d25e:	4798      	blx	r3
 800d260:	4604      	mov	r4, r0
 800d262:	6828      	ldr	r0, [r5, #0]
 800d264:	aa1d      	add	r2, sp, #116	@ 0x74
 800d266:	4621      	mov	r1, r4
 800d268:	6803      	ldr	r3, [r0, #0]
 800d26a:	689f      	ldr	r7, [r3, #8]
 800d26c:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800d270:	47b8      	blx	r7
 800d272:	901c      	str	r0, [sp, #112]	@ 0x70
 800d274:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800d278:	429c      	cmp	r4, r3
 800d27a:	f000 80eb 	beq.w	800d454 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d27e:	f242 030b 	movw	r3, #8203	@ 0x200b
 800d282:	429c      	cmp	r4, r3
 800d284:	f000 80e6 	beq.w	800d454 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d288:	2c00      	cmp	r4, #0
 800d28a:	f000 810d 	beq.w	800d4a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800d28e:	2c0a      	cmp	r4, #10
 800d290:	d05e      	beq.n	800d350 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d292:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800d294:	b36a      	cbz	r2, 800d2f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800d296:	8894      	ldrh	r4, [r2, #4]
 800d298:	f1bb 0f00 	cmp.w	fp, #0
 800d29c:	d03a      	beq.n	800d314 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800d29e:	f892 900d 	ldrb.w	r9, [r2, #13]
 800d2a2:	f1bb 0f01 	cmp.w	fp, #1
 800d2a6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800d2aa:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800d2ae:	f892 900a 	ldrb.w	r9, [r2, #10]
 800d2b2:	ea49 0903 	orr.w	r9, r9, r3
 800d2b6:	d133      	bne.n	800d320 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800d2b8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d2ba:	eba6 0609 	sub.w	r6, r6, r9
 800d2be:	2b00      	cmp	r3, #0
 800d2c0:	d14d      	bne.n	800d35e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800d2c2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800d2c4:	eb09 0306 	add.w	r3, r9, r6
 800d2c8:	4413      	add	r3, r2
 800d2ca:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800d2cc:	f9b2 2000 	ldrsh.w	r2, [r2]
 800d2d0:	4293      	cmp	r3, r2
 800d2d2:	da4e      	bge.n	800d372 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800d2d4:	e036      	b.n	800d344 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800d2d6:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800d2d8:	e79c      	b.n	800d214 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800d2da:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800d2de:	4659      	mov	r1, fp
 800d2e0:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800d2e2:	9301      	str	r3, [sp, #4]
 800d2e4:	ab1d      	add	r3, sp, #116	@ 0x74
 800d2e6:	9300      	str	r3, [sp, #0]
 800d2e8:	ab1c      	add	r3, sp, #112	@ 0x70
 800d2ea:	f002 ff04 	bl	80100f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800d2ee:	4604      	mov	r4, r0
 800d2f0:	e7c0      	b.n	800d274 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800d2f2:	6828      	ldr	r0, [r5, #0]
 800d2f4:	6803      	ldr	r3, [r0, #0]
 800d2f6:	691b      	ldr	r3, [r3, #16]
 800d2f8:	4798      	blx	r3
 800d2fa:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800d2fe:	4298      	cmp	r0, r3
 800d300:	f000 80a8 	beq.w	800d454 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d304:	f242 030b 	movw	r3, #8203	@ 0x200b
 800d308:	4298      	cmp	r0, r3
 800d30a:	f000 80a3 	beq.w	800d454 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d30e:	f1bb 0f00 	cmp.w	fp, #0
 800d312:	d100      	bne.n	800d316 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800d314:	444e      	add	r6, r9
 800d316:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800d318:	2a00      	cmp	r2, #0
 800d31a:	d1c0      	bne.n	800d29e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800d31c:	4691      	mov	r9, r2
 800d31e:	e099      	b.n	800d454 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d320:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d322:	2b00      	cmp	r3, #0
 800d324:	f000 80c2 	beq.w	800d4ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
 800d328:	f1bb 0f00 	cmp.w	fp, #0
 800d32c:	d117      	bne.n	800d35e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800d32e:	6828      	ldr	r0, [r5, #0]
 800d330:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800d332:	6803      	ldr	r3, [r0, #0]
 800d334:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d336:	4798      	blx	r3
 800d338:	4406      	add	r6, r0
 800d33a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800d33c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800d33e:	1af3      	subs	r3, r6, r3
 800d340:	4293      	cmp	r3, r2
 800d342:	dd16      	ble.n	800d372 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800d344:	2c00      	cmp	r4, #0
 800d346:	f000 80af 	beq.w	800d4a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800d34a:	2c0a      	cmp	r4, #10
 800d34c:	f040 809d 	bne.w	800d48a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800d350:	240a      	movs	r4, #10
 800d352:	fab4 f084 	clz	r0, r4
 800d356:	0940      	lsrs	r0, r0, #5
 800d358:	b01f      	add	sp, #124	@ 0x7c
 800d35a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d35e:	6828      	ldr	r0, [r5, #0]
 800d360:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800d362:	6803      	ldr	r3, [r0, #0]
 800d364:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d366:	4798      	blx	r3
 800d368:	f1bb 0f01 	cmp.w	fp, #1
 800d36c:	eba6 0600 	sub.w	r6, r6, r0
 800d370:	d0a7      	beq.n	800d2c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800d372:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800d374:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800d376:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800d37a:	f9b3 8000 	ldrsh.w	r8, [r3]
 800d37e:	7b43      	ldrb	r3, [r0, #13]
 800d380:	4431      	add	r1, r6
 800d382:	015b      	lsls	r3, r3, #5
 800d384:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800d388:	7983      	ldrb	r3, [r0, #6]
 800d38a:	4313      	orrs	r3, r2
 800d38c:	440b      	add	r3, r1
 800d38e:	4543      	cmp	r3, r8
 800d390:	db60      	blt.n	800d454 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d392:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800d394:	4299      	cmp	r1, r3
 800d396:	da5d      	bge.n	800d454 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d398:	6828      	ldr	r0, [r5, #0]
 800d39a:	45b0      	cmp	r8, r6
 800d39c:	6803      	ldr	r3, [r0, #0]
 800d39e:	bfcc      	ite	gt
 800d3a0:	eba8 0806 	subgt.w	r8, r8, r6
 800d3a4:	f04f 0800 	movle.w	r8, #0
 800d3a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d3aa:	bfc8      	it	gt
 800d3ac:	fa1f f888 	uxthgt.w	r8, r8
 800d3b0:	4798      	blx	r3
 800d3b2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800d3b4:	7b53      	ldrb	r3, [r2, #13]
 800d3b6:	00d9      	lsls	r1, r3, #3
 800d3b8:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800d3bc:	7a11      	ldrb	r1, [r2, #8]
 800d3be:	4339      	orrs	r1, r7
 800d3c0:	065f      	lsls	r7, r3, #25
 800d3c2:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800d3c4:	bf48      	it	mi
 800d3c6:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800d3ca:	4407      	add	r7, r0
 800d3cc:	bf48      	it	mi
 800d3ce:	b209      	sxthmi	r1, r1
 800d3d0:	1a7f      	subs	r7, r7, r1
 800d3d2:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800d3d4:	b2bf      	uxth	r7, r7
 800d3d6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800d3da:	fa0f fa87 	sxth.w	sl, r7
 800d3de:	4551      	cmp	r1, sl
 800d3e0:	dd3c      	ble.n	800d45c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800d3e2:	011b      	lsls	r3, r3, #4
 800d3e4:	79d0      	ldrb	r0, [r2, #7]
 800d3e6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d3ea:	4303      	orrs	r3, r0
 800d3ec:	449a      	add	sl, r3
 800d3ee:	4551      	cmp	r1, sl
 800d3f0:	dc30      	bgt.n	800d454 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d3f2:	1bcf      	subs	r7, r1, r7
 800d3f4:	468a      	mov	sl, r1
 800d3f6:	b23f      	sxth	r7, r7
 800d3f8:	9219      	str	r2, [sp, #100]	@ 0x64
 800d3fa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800d3fc:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800d3fe:	6828      	ldr	r0, [r5, #0]
 800d400:	2a00      	cmp	r2, #0
 800d402:	d12d      	bne.n	800d460 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 800d404:	9318      	str	r3, [sp, #96]	@ 0x60
 800d406:	b2bf      	uxth	r7, r7
 800d408:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800d40a:	6819      	ldr	r1, [r3, #0]
 800d40c:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800d40e:	6801      	ldr	r1, [r0, #0]
 800d410:	9314      	str	r3, [sp, #80]	@ 0x50
 800d412:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800d414:	4788      	blx	r1
 800d416:	79a9      	ldrb	r1, [r5, #6]
 800d418:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800d41a:	910b      	str	r1, [sp, #44]	@ 0x2c
 800d41c:	7ba9      	ldrb	r1, [r5, #14]
 800d41e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800d420:	910a      	str	r1, [sp, #40]	@ 0x28
 800d422:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800d426:	9109      	str	r1, [sp, #36]	@ 0x24
 800d428:	68a9      	ldr	r1, [r5, #8]
 800d42a:	9306      	str	r3, [sp, #24]
 800d42c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800d42e:	9205      	str	r2, [sp, #20]
 800d430:	9304      	str	r3, [sp, #16]
 800d432:	f8cd a004 	str.w	sl, [sp, #4]
 800d436:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800d43a:	44b0      	add	r8, r6
 800d43c:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800d43e:	fa0f f388 	sxth.w	r3, r8
 800d442:	9300      	str	r3, [sp, #0]
 800d444:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d446:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800d44a:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800d44c:	681a      	ldr	r2, [r3, #0]
 800d44e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800d450:	685b      	ldr	r3, [r3, #4]
 800d452:	47b8      	blx	r7
 800d454:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800d456:	3301      	adds	r3, #1
 800d458:	930d      	str	r3, [sp, #52]	@ 0x34
 800d45a:	e6e3      	b.n	800d224 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800d45c:	2700      	movs	r7, #0
 800d45e:	e7cb      	b.n	800d3f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800d460:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800d462:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800d466:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800d468:	f8dc 1000 	ldr.w	r1, [ip]
 800d46c:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800d470:	79aa      	ldrb	r2, [r5, #6]
 800d472:	9203      	str	r2, [sp, #12]
 800d474:	7baa      	ldrb	r2, [r5, #14]
 800d476:	9202      	str	r2, [sp, #8]
 800d478:	68aa      	ldr	r2, [r5, #8]
 800d47a:	e9cd 0200 	strd	r0, r2, [sp]
 800d47e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800d480:	4660      	mov	r0, ip
 800d482:	688f      	ldr	r7, [r1, #8]
 800d484:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800d486:	47b8      	blx	r7
 800d488:	e7e4      	b.n	800d454 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d48a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800d48c:	3501      	adds	r5, #1
 800d48e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800d490:	429d      	cmp	r5, r3
 800d492:	f6bf af5e 	bge.w	800d352 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800d496:	4659      	mov	r1, fp
 800d498:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800d49a:	f7f5 fe1d 	bl	80030d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d49e:	4604      	mov	r4, r0
 800d4a0:	b110      	cbz	r0, 800d4a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800d4a2:	280a      	cmp	r0, #10
 800d4a4:	d1f2      	bne.n	800d48c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
 800d4a6:	e753      	b.n	800d350 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d4a8:	2400      	movs	r4, #0
 800d4aa:	e752      	b.n	800d352 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800d4ac:	f1bb 0f00 	cmp.w	fp, #0
 800d4b0:	f43f af43 	beq.w	800d33a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800d4b4:	e75d      	b.n	800d372 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800d4b6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800d4b6:	b530      	push	{r4, r5, lr}
 800d4b8:	8ac4      	ldrh	r4, [r0, #22]
 800d4ba:	8b45      	ldrh	r5, [r0, #26]
 800d4bc:	8343      	strh	r3, [r0, #26]
 800d4be:	442c      	add	r4, r5
 800d4c0:	1ae4      	subs	r4, r4, r3
 800d4c2:	8b83      	ldrh	r3, [r0, #28]
 800d4c4:	82c4      	strh	r4, [r0, #22]
 800d4c6:	8b04      	ldrh	r4, [r0, #24]
 800d4c8:	4422      	add	r2, r4
 800d4ca:	440c      	add	r4, r1
 800d4cc:	1a59      	subs	r1, r3, r1
 800d4ce:	83c2      	strh	r2, [r0, #30]
 800d4d0:	8304      	strh	r4, [r0, #24]
 800d4d2:	8381      	strh	r1, [r0, #28]
 800d4d4:	bd30      	pop	{r4, r5, pc}

0800d4d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800d4d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4da:	4604      	mov	r4, r0
 800d4dc:	8a47      	ldrh	r7, [r0, #18]
 800d4de:	68c0      	ldr	r0, [r0, #12]
 800d4e0:	b085      	sub	sp, #20
 800d4e2:	6803      	ldr	r3, [r0, #0]
 800d4e4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d4e6:	4798      	blx	r3
 800d4e8:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800d4ec:	7a63      	ldrb	r3, [r4, #9]
 800d4ee:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800d4f2:	3b01      	subs	r3, #1
 800d4f4:	42b7      	cmp	r7, r6
 800d4f6:	bfac      	ite	ge
 800d4f8:	f04f 0900 	movge.w	r9, #0
 800d4fc:	f04f 0901 	movlt.w	r9, #1
 800d500:	2b05      	cmp	r3, #5
 800d502:	d804      	bhi.n	800d50e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 800d504:	e8df f003 	tbb	[pc, r3]
 800d508:	470f0854 	.word	0x470f0854
 800d50c:	4c4c      	.short	0x4c4c
 800d50e:	2500      	movs	r5, #0
 800d510:	46a9      	mov	r9, r5
 800d512:	462e      	mov	r6, r5
 800d514:	462f      	mov	r7, r5
 800d516:	e00e      	b.n	800d536 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800d518:	42b7      	cmp	r7, r6
 800d51a:	f04f 0500 	mov.w	r5, #0
 800d51e:	bfb4      	ite	lt
 800d520:	2600      	movlt	r6, #0
 800d522:	2601      	movge	r6, #1
 800d524:	e7f6      	b.n	800d514 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800d526:	42b7      	cmp	r7, r6
 800d528:	464d      	mov	r5, r9
 800d52a:	f04f 0900 	mov.w	r9, #0
 800d52e:	bfb4      	ite	lt
 800d530:	2600      	movlt	r6, #0
 800d532:	2601      	movge	r6, #1
 800d534:	464f      	mov	r7, r9
 800d536:	f04f 0800 	mov.w	r8, #0
 800d53a:	f8a4 8016 	strh.w	r8, [r4, #22]
 800d53e:	f8a4 8018 	strh.w	r8, [r4, #24]
 800d542:	f8cd 8004 	str.w	r8, [sp, #4]
 800d546:	2300      	movs	r3, #0
 800d548:	9303      	str	r3, [sp, #12]
 800d54a:	8823      	ldrh	r3, [r4, #0]
 800d54c:	2b20      	cmp	r3, #32
 800d54e:	d033      	beq.n	800d5b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 800d550:	f242 010b 	movw	r1, #8203	@ 0x200b
 800d554:	1a5a      	subs	r2, r3, r1
 800d556:	f1d2 0a00 	rsbs	sl, r2, #0
 800d55a:	eb4a 0a02 	adc.w	sl, sl, r2
 800d55e:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800d562:	4293      	cmp	r3, r2
 800d564:	d008      	beq.n	800d578 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800d566:	428b      	cmp	r3, r1
 800d568:	9a01      	ldr	r2, [sp, #4]
 800d56a:	bf0e      	itee	eq
 800d56c:	f04f 0a01 	moveq.w	sl, #1
 800d570:	461a      	movne	r2, r3
 800d572:	f04f 0a00 	movne.w	sl, #0
 800d576:	9201      	str	r2, [sp, #4]
 800d578:	ab03      	add	r3, sp, #12
 800d57a:	68e2      	ldr	r2, [r4, #12]
 800d57c:	7a21      	ldrb	r1, [r4, #8]
 800d57e:	6860      	ldr	r0, [r4, #4]
 800d580:	f002 fd70 	bl	8010064 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d584:	8020      	strh	r0, [r4, #0]
 800d586:	b9d8      	cbnz	r0, 800d5c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 800d588:	8ba2      	ldrh	r2, [r4, #28]
 800d58a:	2300      	movs	r3, #0
 800d58c:	4611      	mov	r1, r2
 800d58e:	4620      	mov	r0, r4
 800d590:	f7ff ff91 	bl	800d4b6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d594:	e06e      	b.n	800d674 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800d596:	2500      	movs	r5, #0
 800d598:	2701      	movs	r7, #1
 800d59a:	46a9      	mov	r9, r5
 800d59c:	462e      	mov	r6, r5
 800d59e:	e7ca      	b.n	800d536 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800d5a0:	42b7      	cmp	r7, r6
 800d5a2:	f04f 0500 	mov.w	r5, #0
 800d5a6:	bfb4      	ite	lt
 800d5a8:	2700      	movlt	r7, #0
 800d5aa:	2701      	movge	r7, #1
 800d5ac:	462e      	mov	r6, r5
 800d5ae:	e7c2      	b.n	800d536 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800d5b0:	2500      	movs	r5, #0
 800d5b2:	2601      	movs	r6, #1
 800d5b4:	46a9      	mov	r9, r5
 800d5b6:	e7ad      	b.n	800d514 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800d5b8:	9301      	str	r3, [sp, #4]
 800d5ba:	f04f 0a01 	mov.w	sl, #1
 800d5be:	e7db      	b.n	800d578 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800d5c0:	8b63      	ldrh	r3, [r4, #26]
 800d5c2:	280a      	cmp	r0, #10
 800d5c4:	f103 0301 	add.w	r3, r3, #1
 800d5c8:	8363      	strh	r3, [r4, #26]
 800d5ca:	d0dd      	beq.n	800d588 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 800d5cc:	9a03      	ldr	r2, [sp, #12]
 800d5ce:	bb62      	cbnz	r2, 800d62a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 800d5d0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800d5d4:	4298      	cmp	r0, r3
 800d5d6:	d003      	beq.n	800d5e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800d5d8:	f242 030b 	movw	r3, #8203	@ 0x200b
 800d5dc:	4298      	cmp	r0, r3
 800d5de:	d1b2      	bne.n	800d546 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d5e0:	8823      	ldrh	r3, [r4, #0]
 800d5e2:	8ba1      	ldrh	r1, [r4, #28]
 800d5e4:	2b20      	cmp	r3, #32
 800d5e6:	d003      	beq.n	800d5f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 800d5e8:	f242 000b 	movw	r0, #8203	@ 0x200b
 800d5ec:	4283      	cmp	r3, r0
 800d5ee:	d131      	bne.n	800d654 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 800d5f0:	f1ba 0f00 	cmp.w	sl, #0
 800d5f4:	bf0a      	itet	eq
 800d5f6:	4688      	moveq	r8, r1
 800d5f8:	4650      	movne	r0, sl
 800d5fa:	2001      	moveq	r0, #1
 800d5fc:	440a      	add	r2, r1
 800d5fe:	8b23      	ldrh	r3, [r4, #24]
 800d600:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800d604:	b292      	uxth	r2, r2
 800d606:	83a2      	strh	r2, [r4, #28]
 800d608:	4413      	add	r3, r2
 800d60a:	f1b9 0f00 	cmp.w	r9, #0
 800d60e:	d102      	bne.n	800d616 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 800d610:	2d00      	cmp	r5, #0
 800d612:	d042      	beq.n	800d69a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 800d614:	b300      	cbz	r0, 800d658 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 800d616:	8c21      	ldrh	r1, [r4, #32]
 800d618:	4419      	add	r1, r3
 800d61a:	458c      	cmp	ip, r1
 800d61c:	da37      	bge.n	800d68e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800d61e:	8ae1      	ldrh	r1, [r4, #22]
 800d620:	2900      	cmp	r1, #0
 800d622:	d034      	beq.n	800d68e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800d624:	4563      	cmp	r3, ip
 800d626:	dd8e      	ble.n	800d546 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d628:	e01d      	b.n	800d666 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 800d62a:	8893      	ldrh	r3, [r2, #4]
 800d62c:	9901      	ldr	r1, [sp, #4]
 800d62e:	8023      	strh	r3, [r4, #0]
 800d630:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800d634:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800d638:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800d63c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800d640:	ea4b 0b00 	orr.w	fp, fp, r0
 800d644:	68e0      	ldr	r0, [r4, #12]
 800d646:	6803      	ldr	r3, [r0, #0]
 800d648:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d64a:	4798      	blx	r3
 800d64c:	eb0b 0200 	add.w	r2, fp, r0
 800d650:	b292      	uxth	r2, r2
 800d652:	e7c5      	b.n	800d5e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800d654:	2000      	movs	r0, #0
 800d656:	e7d1      	b.n	800d5fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 800d658:	4563      	cmp	r3, ip
 800d65a:	f77f af74 	ble.w	800d546 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d65e:	8ae3      	ldrh	r3, [r4, #22]
 800d660:	2b00      	cmp	r3, #0
 800d662:	f43f af70 	beq.w	800d546 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d666:	2301      	movs	r3, #1
 800d668:	8c22      	ldrh	r2, [r4, #32]
 800d66a:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800d66e:	8be3      	ldrh	r3, [r4, #30]
 800d670:	4413      	add	r3, r2
 800d672:	83e3      	strh	r3, [r4, #30]
 800d674:	68e0      	ldr	r0, [r4, #12]
 800d676:	6803      	ldr	r3, [r0, #0]
 800d678:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d67a:	4798      	blx	r3
 800d67c:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800d680:	4418      	add	r0, r3
 800d682:	8a63      	ldrh	r3, [r4, #18]
 800d684:	1a18      	subs	r0, r3, r0
 800d686:	8260      	strh	r0, [r4, #18]
 800d688:	b005      	add	sp, #20
 800d68a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d68e:	2300      	movs	r3, #0
 800d690:	4611      	mov	r1, r2
 800d692:	4620      	mov	r0, r4
 800d694:	f7ff ff0f 	bl	800d4b6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d698:	e755      	b.n	800d546 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d69a:	4563      	cmp	r3, ip
 800d69c:	dd14      	ble.n	800d6c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 800d69e:	b117      	cbz	r7, 800d6a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 800d6a0:	2301      	movs	r3, #1
 800d6a2:	460a      	mov	r2, r1
 800d6a4:	e772      	b.n	800d58c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 800d6a6:	2e00      	cmp	r6, #0
 800d6a8:	f43f af4d 	beq.w	800d546 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d6ac:	2800      	cmp	r0, #0
 800d6ae:	f47f af4a 	bne.w	800d546 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d6b2:	f1ba 0f00 	cmp.w	sl, #0
 800d6b6:	d002      	beq.n	800d6be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 800d6b8:	2301      	movs	r3, #1
 800d6ba:	4642      	mov	r2, r8
 800d6bc:	e767      	b.n	800d58e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800d6be:	8ae3      	ldrh	r3, [r4, #22]
 800d6c0:	2b00      	cmp	r3, #0
 800d6c2:	f43f af40 	beq.w	800d546 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d6c6:	e7d5      	b.n	800d674 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800d6c8:	2800      	cmp	r0, #0
 800d6ca:	f47f af3c 	bne.w	800d546 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d6ce:	f1ba 0f00 	cmp.w	sl, #0
 800d6d2:	f43f af38 	beq.w	800d546 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d6d6:	2301      	movs	r3, #1
 800d6d8:	4642      	mov	r2, r8
 800d6da:	e7da      	b.n	800d692 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

0800d6dc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800d6dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d6de:	4605      	mov	r5, r0
 800d6e0:	b08f      	sub	sp, #60	@ 0x3c
 800d6e2:	4617      	mov	r7, r2
 800d6e4:	461c      	mov	r4, r3
 800d6e6:	460e      	mov	r6, r1
 800d6e8:	b1d1      	cbz	r1, 800d720 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800d6ea:	681b      	ldr	r3, [r3, #0]
 800d6ec:	4620      	mov	r0, r4
 800d6ee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d6f0:	4798      	blx	r3
 800d6f2:	4240      	negs	r0, r0
 800d6f4:	9603      	str	r6, [sp, #12]
 800d6f6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800d6fa:	b200      	sxth	r0, r0
 800d6fc:	9700      	str	r7, [sp, #0]
 800d6fe:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800d702:	4629      	mov	r1, r5
 800d704:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800d708:	2401      	movs	r4, #1
 800d70a:	a805      	add	r0, sp, #20
 800d70c:	f7ff fcaa 	bl	800d064 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800d710:	a805      	add	r0, sp, #20
 800d712:	f7ff fee0 	bl	800d4d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d716:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800d71a:	b163      	cbz	r3, 800d736 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800d71c:	3401      	adds	r4, #1
 800d71e:	e7f7      	b.n	800d710 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800d720:	2401      	movs	r4, #1
 800d722:	f002 fd6b 	bl	80101fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d726:	280a      	cmp	r0, #10
 800d728:	4628      	mov	r0, r5
 800d72a:	bf08      	it	eq
 800d72c:	3401      	addeq	r4, #1
 800d72e:	f002 fd65 	bl	80101fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d732:	2800      	cmp	r0, #0
 800d734:	d1f7      	bne.n	800d726 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800d736:	b2a0      	uxth	r0, r4
 800d738:	b00f      	add	sp, #60	@ 0x3c
 800d73a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d73c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800d73c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d740:	b0e3      	sub	sp, #396	@ 0x18c
 800d742:	461c      	mov	r4, r3
 800d744:	4683      	mov	fp, r0
 800d746:	4688      	mov	r8, r1
 800d748:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800d74a:	2b00      	cmp	r3, #0
 800d74c:	f000 8112 	beq.w	800d974 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d750:	6823      	ldr	r3, [r4, #0]
 800d752:	2b00      	cmp	r3, #0
 800d754:	f000 810e 	beq.w	800d974 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d758:	7ba3      	ldrb	r3, [r4, #14]
 800d75a:	2b00      	cmp	r3, #0
 800d75c:	f000 810a 	beq.w	800d974 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d760:	ad0a      	add	r5, sp, #40	@ 0x28
 800d762:	6810      	ldr	r0, [r2, #0]
 800d764:	6851      	ldr	r1, [r2, #4]
 800d766:	462b      	mov	r3, r5
 800d768:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800d76c:	c303      	stmia	r3!, {r0, r1}
 800d76e:	2100      	movs	r1, #0
 800d770:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800d774:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800d778:	4628      	mov	r0, r5
 800d77a:	910c      	str	r1, [sp, #48]	@ 0x30
 800d77c:	a90c      	add	r1, sp, #48	@ 0x30
 800d77e:	79a2      	ldrb	r2, [r4, #6]
 800d780:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d784:	f7ff fced 	bl	800d162 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d788:	a90c      	add	r1, sp, #48	@ 0x30
 800d78a:	79a2      	ldrb	r2, [r4, #6]
 800d78c:	4608      	mov	r0, r1
 800d78e:	f7ff fce8 	bl	800d162 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d792:	a817      	add	r0, sp, #92	@ 0x5c
 800d794:	f002 f906 	bl	800f9a4 <_ZN8touchgfx12TextProviderC1Ev>
 800d798:	6820      	ldr	r0, [r4, #0]
 800d79a:	6803      	ldr	r3, [r0, #0]
 800d79c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d79e:	4798      	blx	r3
 800d7a0:	4606      	mov	r6, r0
 800d7a2:	6820      	ldr	r0, [r4, #0]
 800d7a4:	6803      	ldr	r3, [r0, #0]
 800d7a6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d7a8:	4798      	blx	r3
 800d7aa:	4633      	mov	r3, r6
 800d7ac:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800d7ae:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800d7b0:	9000      	str	r0, [sp, #0]
 800d7b2:	a817      	add	r0, sp, #92	@ 0x5c
 800d7b4:	f002 f951 	bl	800fa5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d7b8:	6820      	ldr	r0, [r4, #0]
 800d7ba:	f894 a004 	ldrb.w	sl, [r4, #4]
 800d7be:	6803      	ldr	r3, [r0, #0]
 800d7c0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d7c2:	4798      	blx	r3
 800d7c4:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800d7c8:	6823      	ldr	r3, [r4, #0]
 800d7ca:	4607      	mov	r7, r0
 800d7cc:	4406      	add	r6, r0
 800d7ce:	a830      	add	r0, sp, #192	@ 0xc0
 800d7d0:	f893 9009 	ldrb.w	r9, [r3, #9]
 800d7d4:	f002 f8e6 	bl	800f9a4 <_ZN8touchgfx12TextProviderC1Ev>
 800d7d8:	7c23      	ldrb	r3, [r4, #16]
 800d7da:	b17b      	cbz	r3, 800d7fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800d7dc:	6820      	ldr	r0, [r4, #0]
 800d7de:	6803      	ldr	r3, [r0, #0]
 800d7e0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d7e2:	4798      	blx	r3
 800d7e4:	9009      	str	r0, [sp, #36]	@ 0x24
 800d7e6:	6820      	ldr	r0, [r4, #0]
 800d7e8:	6802      	ldr	r2, [r0, #0]
 800d7ea:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800d7ec:	4790      	blx	r2
 800d7ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d7f0:	9000      	str	r0, [sp, #0]
 800d7f2:	a830      	add	r0, sp, #192	@ 0xc0
 800d7f4:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800d7f6:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800d7f8:	f002 f92f 	bl	800fa5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d7fc:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800d800:	a80e      	add	r0, sp, #56	@ 0x38
 800d802:	7be2      	ldrb	r2, [r4, #15]
 800d804:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800d808:	1a8a      	subs	r2, r1, r2
 800d80a:	7c21      	ldrb	r1, [r4, #16]
 800d80c:	9103      	str	r1, [sp, #12]
 800d80e:	b292      	uxth	r2, r2
 800d810:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800d814:	9102      	str	r1, [sp, #8]
 800d816:	6821      	ldr	r1, [r4, #0]
 800d818:	9101      	str	r1, [sp, #4]
 800d81a:	7961      	ldrb	r1, [r4, #5]
 800d81c:	9100      	str	r1, [sp, #0]
 800d81e:	a930      	add	r1, sp, #192	@ 0xc0
 800d820:	f7ff fc20 	bl	800d064 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800d824:	2e00      	cmp	r6, #0
 800d826:	dc5b      	bgt.n	800d8e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800d828:	af17      	add	r7, sp, #92	@ 0x5c
 800d82a:	f04f 0900 	mov.w	r9, #0
 800d82e:	7c23      	ldrb	r3, [r4, #16]
 800d830:	2b00      	cmp	r3, #0
 800d832:	f000 80b1 	beq.w	800d998 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800d836:	a80e      	add	r0, sp, #56	@ 0x38
 800d838:	f7ff fe4d 	bl	800d4d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d83c:	f1ba 0f00 	cmp.w	sl, #0
 800d840:	f000 80a5 	beq.w	800d98e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800d844:	7c23      	ldrb	r3, [r4, #16]
 800d846:	2264      	movs	r2, #100	@ 0x64
 800d848:	4639      	mov	r1, r7
 800d84a:	a849      	add	r0, sp, #292	@ 0x124
 800d84c:	9309      	str	r3, [sp, #36]	@ 0x24
 800d84e:	f011 fc46 	bl	801f0de <memcpy>
 800d852:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d854:	2b00      	cmp	r3, #0
 800d856:	f000 80a7 	beq.w	800d9a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800d85a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 800d85e:	7922      	ldrb	r2, [r4, #4]
 800d860:	2a01      	cmp	r2, #1
 800d862:	f040 808a 	bne.w	800d97a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800d866:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 800d86a:	1ac0      	subs	r0, r0, r3
 800d86c:	2302      	movs	r3, #2
 800d86e:	fb90 f0f3 	sdiv	r0, r0, r3
 800d872:	b200      	sxth	r0, r0
 800d874:	7c23      	ldrb	r3, [r4, #16]
 800d876:	2b00      	cmp	r3, #0
 800d878:	f000 808b 	beq.w	800d992 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800d87c:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 800d880:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 800d884:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800d888:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800d88c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 800d890:	2100      	movs	r1, #0
 800d892:	4410      	add	r0, r2
 800d894:	4642      	mov	r2, r8
 800d896:	b200      	sxth	r0, r0
 800d898:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800d89c:	9000      	str	r0, [sp, #0]
 800d89e:	4658      	mov	r0, fp
 800d8a0:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d8a4:	f7ff fc8e 	bl	800d1c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800d8a8:	2800      	cmp	r0, #0
 800d8aa:	d163      	bne.n	800d974 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d8ac:	b2b2      	uxth	r2, r6
 800d8ae:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800d8b2:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800d8b6:	4413      	add	r3, r2
 800d8b8:	1a8a      	subs	r2, r1, r2
 800d8ba:	b21b      	sxth	r3, r3
 800d8bc:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 800d8c0:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 800d8c4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800d8c8:	2a00      	cmp	r2, #0
 800d8ca:	d153      	bne.n	800d974 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d8cc:	6822      	ldr	r2, [r4, #0]
 800d8ce:	8869      	ldrh	r1, [r5, #2]
 800d8d0:	7a12      	ldrb	r2, [r2, #8]
 800d8d2:	1a9b      	subs	r3, r3, r2
 800d8d4:	88ea      	ldrh	r2, [r5, #6]
 800d8d6:	440a      	add	r2, r1
 800d8d8:	b212      	sxth	r2, r2
 800d8da:	4293      	cmp	r3, r2
 800d8dc:	dda7      	ble.n	800d82e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800d8de:	e049      	b.n	800d974 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d8e0:	7c23      	ldrb	r3, [r4, #16]
 800d8e2:	444f      	add	r7, r9
 800d8e4:	b1c3      	cbz	r3, 800d918 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800d8e6:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 800d8ea:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800d8ee:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d8f2:	443b      	add	r3, r7
 800d8f4:	4293      	cmp	r3, r2
 800d8f6:	da97      	bge.n	800d828 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800d8f8:	a80e      	add	r0, sp, #56	@ 0x38
 800d8fa:	f7ff fdec 	bl	800d4d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d8fe:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 800d902:	3b01      	subs	r3, #1
 800d904:	b29b      	uxth	r3, r3
 800d906:	454b      	cmp	r3, r9
 800d908:	9309      	str	r3, [sp, #36]	@ 0x24
 800d90a:	d021      	beq.n	800d950 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800d90c:	7961      	ldrb	r1, [r4, #5]
 800d90e:	a817      	add	r0, sp, #92	@ 0x5c
 800d910:	f7f5 fbe2 	bl	80030d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d914:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d916:	e7f4      	b.n	800d902 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800d918:	fa1f f986 	uxth.w	r9, r6
 800d91c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800d920:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d924:	443b      	add	r3, r7
 800d926:	4293      	cmp	r3, r2
 800d928:	f6bf af7e 	bge.w	800d828 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800d92c:	a817      	add	r0, sp, #92	@ 0x5c
 800d92e:	f002 fc65 	bl	80101fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d932:	b1f8      	cbz	r0, 800d974 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d934:	280a      	cmp	r0, #10
 800d936:	d1f1      	bne.n	800d91c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800d938:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800d93c:	444b      	add	r3, r9
 800d93e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800d942:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800d946:	eba3 0309 	sub.w	r3, r3, r9
 800d94a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d94e:	e7e5      	b.n	800d91c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800d950:	b2b3      	uxth	r3, r6
 800d952:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 800d956:	441a      	add	r2, r3
 800d958:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800d95c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 800d960:	1ad3      	subs	r3, r2, r3
 800d962:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d966:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800d96a:	b11b      	cbz	r3, 800d974 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d96c:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 800d970:	2b00      	cmp	r3, #0
 800d972:	d0ba      	beq.n	800d8ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800d974:	b063      	add	sp, #396	@ 0x18c
 800d976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d97a:	2a02      	cmp	r2, #2
 800d97c:	d105      	bne.n	800d98a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800d97e:	7be2      	ldrb	r2, [r4, #15]
 800d980:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800d984:	1a80      	subs	r0, r0, r2
 800d986:	1ac0      	subs	r0, r0, r3
 800d988:	e773      	b.n	800d872 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800d98a:	2000      	movs	r0, #0
 800d98c:	e772      	b.n	800d874 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800d98e:	7be0      	ldrb	r0, [r4, #15]
 800d990:	e770      	b.n	800d874 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800d992:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800d996:	e773      	b.n	800d880 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800d998:	f1ba 0f00 	cmp.w	sl, #0
 800d99c:	d0f7      	beq.n	800d98e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800d99e:	2264      	movs	r2, #100	@ 0x64
 800d9a0:	4639      	mov	r1, r7
 800d9a2:	a849      	add	r0, sp, #292	@ 0x124
 800d9a4:	f011 fb9b 	bl	801f0de <memcpy>
 800d9a8:	2300      	movs	r3, #0
 800d9aa:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800d9ae:	6821      	ldr	r1, [r4, #0]
 800d9b0:	a849      	add	r0, sp, #292	@ 0x124
 800d9b2:	f7ff fb9a 	bl	800d0ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d9b6:	b203      	sxth	r3, r0
 800d9b8:	e751      	b.n	800d85e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800d9ba <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800d9ba:	2b03      	cmp	r3, #3
 800d9bc:	d818      	bhi.n	800d9f0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800d9be:	e8df f003 	tbb	[pc, r3]
 800d9c2:	0602      	.short	0x0602
 800d9c4:	130d      	.short	0x130d
 800d9c6:	f9b0 2000 	ldrsh.w	r2, [r0]
 800d9ca:	1850      	adds	r0, r2, r1
 800d9cc:	4770      	bx	lr
 800d9ce:	8803      	ldrh	r3, [r0, #0]
 800d9d0:	8880      	ldrh	r0, [r0, #4]
 800d9d2:	4418      	add	r0, r3
 800d9d4:	b200      	sxth	r0, r0
 800d9d6:	1a80      	subs	r0, r0, r2
 800d9d8:	3801      	subs	r0, #1
 800d9da:	4770      	bx	lr
 800d9dc:	8803      	ldrh	r3, [r0, #0]
 800d9de:	8880      	ldrh	r0, [r0, #4]
 800d9e0:	4418      	add	r0, r3
 800d9e2:	b200      	sxth	r0, r0
 800d9e4:	1a40      	subs	r0, r0, r1
 800d9e6:	e7f7      	b.n	800d9d8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800d9e8:	f9b0 0000 	ldrsh.w	r0, [r0]
 800d9ec:	4410      	add	r0, r2
 800d9ee:	4770      	bx	lr
 800d9f0:	2000      	movs	r0, #0
 800d9f2:	4770      	bx	lr

0800d9f4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800d9f4:	2b03      	cmp	r3, #3
 800d9f6:	d817      	bhi.n	800da28 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800d9f8:	e8df f003 	tbb	[pc, r3]
 800d9fc:	10090602 	.word	0x10090602
 800da00:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800da04:	1850      	adds	r0, r2, r1
 800da06:	4770      	bx	lr
 800da08:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800da0c:	e7fa      	b.n	800da04 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800da0e:	8843      	ldrh	r3, [r0, #2]
 800da10:	88c0      	ldrh	r0, [r0, #6]
 800da12:	4418      	add	r0, r3
 800da14:	b200      	sxth	r0, r0
 800da16:	1a80      	subs	r0, r0, r2
 800da18:	3801      	subs	r0, #1
 800da1a:	4770      	bx	lr
 800da1c:	8843      	ldrh	r3, [r0, #2]
 800da1e:	88c0      	ldrh	r0, [r0, #6]
 800da20:	4418      	add	r0, r3
 800da22:	b200      	sxth	r0, r0
 800da24:	1a40      	subs	r0, r0, r1
 800da26:	e7f7      	b.n	800da18 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800da28:	2000      	movs	r0, #0
 800da2a:	4770      	bx	lr

0800da2c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800da2c:	4b01      	ldr	r3, [pc, #4]	@ (800da34 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800da2e:	2200      	movs	r2, #0
 800da30:	601a      	str	r2, [r3, #0]
 800da32:	4770      	bx	lr
 800da34:	200150c8 	.word	0x200150c8

0800da38 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800da38:	4603      	mov	r3, r0
 800da3a:	b1c8      	cbz	r0, 800da70 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800da3c:	0c02      	lsrs	r2, r0, #16
 800da3e:	0412      	lsls	r2, r2, #16
 800da40:	b9a2      	cbnz	r2, 800da6c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800da42:	0403      	lsls	r3, r0, #16
 800da44:	2010      	movs	r0, #16
 800da46:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800da4a:	bf04      	itt	eq
 800da4c:	021b      	lsleq	r3, r3, #8
 800da4e:	3008      	addeq	r0, #8
 800da50:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800da54:	bf04      	itt	eq
 800da56:	011b      	lsleq	r3, r3, #4
 800da58:	3004      	addeq	r0, #4
 800da5a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800da5e:	bf04      	itt	eq
 800da60:	009b      	lsleq	r3, r3, #2
 800da62:	3002      	addeq	r0, #2
 800da64:	2b00      	cmp	r3, #0
 800da66:	db04      	blt.n	800da72 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800da68:	3001      	adds	r0, #1
 800da6a:	4770      	bx	lr
 800da6c:	2000      	movs	r0, #0
 800da6e:	e7ea      	b.n	800da46 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800da70:	2020      	movs	r0, #32
 800da72:	4770      	bx	lr

0800da74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800da74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da78:	b087      	sub	sp, #28
 800da7a:	460d      	mov	r5, r1
 800da7c:	4616      	mov	r6, r2
 800da7e:	4698      	mov	r8, r3
 800da80:	4601      	mov	r1, r0
 800da82:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800da86:	b120      	cbz	r0, 800da92 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800da88:	b11a      	cbz	r2, 800da92 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800da8a:	2d1f      	cmp	r5, #31
 800da8c:	d801      	bhi.n	800da92 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800da8e:	2b1f      	cmp	r3, #31
 800da90:	d904      	bls.n	800da9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800da92:	2000      	movs	r0, #0
 800da94:	6038      	str	r0, [r7, #0]
 800da96:	b007      	add	sp, #28
 800da98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da9c:	b97d      	cbnz	r5, 800dabe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800da9e:	b143      	cbz	r3, 800dab2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800daa0:	4602      	mov	r2, r0
 800daa2:	462b      	mov	r3, r5
 800daa4:	4641      	mov	r1, r8
 800daa6:	4630      	mov	r0, r6
 800daa8:	e9cd 4700 	strd	r4, r7, [sp]
 800daac:	f7ff ffe2 	bl	800da74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800dab0:	e7f1      	b.n	800da96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800dab2:	f04f 33ff 	mov.w	r3, #4294967295
 800dab6:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800daba:	603b      	str	r3, [r7, #0]
 800dabc:	e7eb      	b.n	800da96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800dabe:	fa32 fa05 	lsrs.w	sl, r2, r5
 800dac2:	d106      	bne.n	800dad2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800dac4:	4346      	muls	r6, r0
 800dac6:	fbb6 f0f4 	udiv	r0, r6, r4
 800daca:	fb04 6610 	mls	r6, r4, r0, r6
 800dace:	603e      	str	r6, [r7, #0]
 800dad0:	e7e1      	b.n	800da96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800dad2:	2201      	movs	r2, #1
 800dad4:	fa00 fb05 	lsl.w	fp, r0, r5
 800dad8:	40aa      	lsls	r2, r5
 800dada:	fbbb f9f4 	udiv	r9, fp, r4
 800dade:	3a01      	subs	r2, #1
 800dae0:	fb0a f309 	mul.w	r3, sl, r9
 800dae4:	fb04 b919 	mls	r9, r4, r9, fp
 800dae8:	4016      	ands	r6, r2
 800daea:	9303      	str	r3, [sp, #12]
 800daec:	4630      	mov	r0, r6
 800daee:	f7ff ffa3 	bl	800da38 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800daf2:	462b      	mov	r3, r5
 800daf4:	460a      	mov	r2, r1
 800daf6:	4601      	mov	r1, r0
 800daf8:	4630      	mov	r0, r6
 800dafa:	e9cd 4700 	strd	r4, r7, [sp]
 800dafe:	f7ff ffb9 	bl	800da74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800db02:	4606      	mov	r6, r0
 800db04:	4648      	mov	r0, r9
 800db06:	eb05 0108 	add.w	r1, r5, r8
 800db0a:	f7ff ff95 	bl	800da38 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800db0e:	ab05      	add	r3, sp, #20
 800db10:	464a      	mov	r2, r9
 800db12:	e9cd 4300 	strd	r4, r3, [sp]
 800db16:	4603      	mov	r3, r0
 800db18:	4650      	mov	r0, sl
 800db1a:	f7ff ffab 	bl	800da74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800db1e:	6839      	ldr	r1, [r7, #0]
 800db20:	9a05      	ldr	r2, [sp, #20]
 800db22:	9b03      	ldr	r3, [sp, #12]
 800db24:	4411      	add	r1, r2
 800db26:	fbb1 f2f4 	udiv	r2, r1, r4
 800db2a:	18d3      	adds	r3, r2, r3
 800db2c:	fb04 1412 	mls	r4, r4, r2, r1
 800db30:	441e      	add	r6, r3
 800db32:	603c      	str	r4, [r7, #0]
 800db34:	4430      	add	r0, r6
 800db36:	e7ae      	b.n	800da96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800db38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800db38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800db3c:	b085      	sub	sp, #20
 800db3e:	f1b0 0900 	subs.w	r9, r0, #0
 800db42:	461d      	mov	r5, r3
 800db44:	4617      	mov	r7, r2
 800db46:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800db48:	bfbb      	ittet	lt
 800db4a:	f1c9 0900 	rsblt	r9, r9, #0
 800db4e:	f04f 36ff 	movlt.w	r6, #4294967295
 800db52:	2601      	movge	r6, #1
 800db54:	6823      	ldrlt	r3, [r4, #0]
 800db56:	bfbc      	itt	lt
 800db58:	425b      	neglt	r3, r3
 800db5a:	6023      	strlt	r3, [r4, #0]
 800db5c:	2a00      	cmp	r2, #0
 800db5e:	da04      	bge.n	800db6a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800db60:	6823      	ldr	r3, [r4, #0]
 800db62:	4257      	negs	r7, r2
 800db64:	4276      	negs	r6, r6
 800db66:	425b      	negs	r3, r3
 800db68:	6023      	str	r3, [r4, #0]
 800db6a:	2d00      	cmp	r5, #0
 800db6c:	4638      	mov	r0, r7
 800db6e:	bfba      	itte	lt
 800db70:	426d      	neglt	r5, r5
 800db72:	f04f 38ff 	movlt.w	r8, #4294967295
 800db76:	f04f 0801 	movge.w	r8, #1
 800db7a:	f7ff ff5d 	bl	800da38 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800db7e:	ab03      	add	r3, sp, #12
 800db80:	463a      	mov	r2, r7
 800db82:	e9cd 5300 	strd	r5, r3, [sp]
 800db86:	4603      	mov	r3, r0
 800db88:	4648      	mov	r0, r9
 800db8a:	f7ff ff73 	bl	800da74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800db8e:	6823      	ldr	r3, [r4, #0]
 800db90:	9a03      	ldr	r2, [sp, #12]
 800db92:	4546      	cmp	r6, r8
 800db94:	441a      	add	r2, r3
 800db96:	fb92 f3f5 	sdiv	r3, r2, r5
 800db9a:	4418      	add	r0, r3
 800db9c:	fb05 2313 	mls	r3, r5, r3, r2
 800dba0:	bf18      	it	ne
 800dba2:	4240      	negne	r0, r0
 800dba4:	1c72      	adds	r2, r6, #1
 800dba6:	6023      	str	r3, [r4, #0]
 800dba8:	d105      	bne.n	800dbb6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800dbaa:	2b00      	cmp	r3, #0
 800dbac:	f1c3 0200 	rsb	r2, r3, #0
 800dbb0:	db0b      	blt.n	800dbca <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800dbb2:	6022      	str	r2, [r4, #0]
 800dbb4:	e006      	b.n	800dbc4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800dbb6:	2e01      	cmp	r6, #1
 800dbb8:	d104      	bne.n	800dbc4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800dbba:	2b00      	cmp	r3, #0
 800dbbc:	da02      	bge.n	800dbc4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800dbbe:	442b      	add	r3, r5
 800dbc0:	3801      	subs	r0, #1
 800dbc2:	6023      	str	r3, [r4, #0]
 800dbc4:	b005      	add	sp, #20
 800dbc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dbca:	3801      	subs	r0, #1
 800dbcc:	1b52      	subs	r2, r2, r5
 800dbce:	e7f0      	b.n	800dbb2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800dbd0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800dbd0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800dbd4:	4c1c      	ldr	r4, [pc, #112]	@ (800dc48 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800dbd6:	4605      	mov	r5, r0
 800dbd8:	6807      	ldr	r7, [r0, #0]
 800dbda:	69a3      	ldr	r3, [r4, #24]
 800dbdc:	b92b      	cbnz	r3, 800dbea <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800dbde:	6840      	ldr	r0, [r0, #4]
 800dbe0:	e9c5 7000 	strd	r7, r0, [r5]
 800dbe4:	b004      	add	sp, #16
 800dbe6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dbea:	f04f 0802 	mov.w	r8, #2
 800dbee:	68a2      	ldr	r2, [r4, #8]
 800dbf0:	ae04      	add	r6, sp, #16
 800dbf2:	6820      	ldr	r0, [r4, #0]
 800dbf4:	fb93 f1f8 	sdiv	r1, r3, r8
 800dbf8:	440a      	add	r2, r1
 800dbfa:	69e1      	ldr	r1, [r4, #28]
 800dbfc:	f846 2d04 	str.w	r2, [r6, #-4]!
 800dc00:	463a      	mov	r2, r7
 800dc02:	9600      	str	r6, [sp, #0]
 800dc04:	f7ff ff98 	bl	800db38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dc08:	69a3      	ldr	r3, [r4, #24]
 800dc0a:	4607      	mov	r7, r0
 800dc0c:	686a      	ldr	r2, [r5, #4]
 800dc0e:	6a21      	ldr	r1, [r4, #32]
 800dc10:	9600      	str	r6, [sp, #0]
 800dc12:	6860      	ldr	r0, [r4, #4]
 800dc14:	f7ff ff90 	bl	800db38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dc18:	69a3      	ldr	r3, [r4, #24]
 800dc1a:	6962      	ldr	r2, [r4, #20]
 800dc1c:	4407      	add	r7, r0
 800dc1e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800dc20:	9600      	str	r6, [sp, #0]
 800dc22:	68e0      	ldr	r0, [r4, #12]
 800dc24:	fb93 f8f8 	sdiv	r8, r3, r8
 800dc28:	4442      	add	r2, r8
 800dc2a:	9203      	str	r2, [sp, #12]
 800dc2c:	682a      	ldr	r2, [r5, #0]
 800dc2e:	f7ff ff83 	bl	800db38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dc32:	4680      	mov	r8, r0
 800dc34:	9600      	str	r6, [sp, #0]
 800dc36:	69a3      	ldr	r3, [r4, #24]
 800dc38:	686a      	ldr	r2, [r5, #4]
 800dc3a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800dc3c:	6920      	ldr	r0, [r4, #16]
 800dc3e:	f7ff ff7b 	bl	800db38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dc42:	4440      	add	r0, r8
 800dc44:	e7cc      	b.n	800dbe0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800dc46:	bf00      	nop
 800dc48:	200150cc 	.word	0x200150cc

0800dc4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800dc4c:	4b07      	ldr	r3, [pc, #28]	@ (800dc6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800dc4e:	781b      	ldrb	r3, [r3, #0]
 800dc50:	2b01      	cmp	r3, #1
 800dc52:	d109      	bne.n	800dc68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800dc54:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dc58:	f9b0 2000 	ldrsh.w	r2, [r0]
 800dc5c:	8003      	strh	r3, [r0, #0]
 800dc5e:	4b04      	ldr	r3, [pc, #16]	@ (800dc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800dc60:	881b      	ldrh	r3, [r3, #0]
 800dc62:	3b01      	subs	r3, #1
 800dc64:	1a9b      	subs	r3, r3, r2
 800dc66:	800b      	strh	r3, [r1, #0]
 800dc68:	4770      	bx	lr
 800dc6a:	bf00      	nop
 800dc6c:	200150b8 	.word	0x200150b8
 800dc70:	200150b4 	.word	0x200150b4

0800dc74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800dc74:	4b07      	ldr	r3, [pc, #28]	@ (800dc94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800dc76:	b510      	push	{r4, lr}
 800dc78:	781b      	ldrb	r3, [r3, #0]
 800dc7a:	2b01      	cmp	r3, #1
 800dc7c:	d108      	bne.n	800dc90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800dc7e:	4b06      	ldr	r3, [pc, #24]	@ (800dc98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800dc80:	880c      	ldrh	r4, [r1, #0]
 800dc82:	881b      	ldrh	r3, [r3, #0]
 800dc84:	f9b0 2000 	ldrsh.w	r2, [r0]
 800dc88:	3b01      	subs	r3, #1
 800dc8a:	1b1b      	subs	r3, r3, r4
 800dc8c:	8003      	strh	r3, [r0, #0]
 800dc8e:	800a      	strh	r2, [r1, #0]
 800dc90:	bd10      	pop	{r4, pc}
 800dc92:	bf00      	nop
 800dc94:	200150b8 	.word	0x200150b8
 800dc98:	200150b4 	.word	0x200150b4

0800dc9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800dc9c:	4b0a      	ldr	r3, [pc, #40]	@ (800dcc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800dc9e:	b510      	push	{r4, lr}
 800dca0:	781b      	ldrb	r3, [r3, #0]
 800dca2:	2b01      	cmp	r3, #1
 800dca4:	d10e      	bne.n	800dcc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800dca6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800dcaa:	8843      	ldrh	r3, [r0, #2]
 800dcac:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dcb0:	18ca      	adds	r2, r1, r3
 800dcb2:	4b06      	ldr	r3, [pc, #24]	@ (800dccc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800dcb4:	8044      	strh	r4, [r0, #2]
 800dcb6:	881b      	ldrh	r3, [r3, #0]
 800dcb8:	1a9b      	subs	r3, r3, r2
 800dcba:	8003      	strh	r3, [r0, #0]
 800dcbc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dcc0:	8081      	strh	r1, [r0, #4]
 800dcc2:	80c3      	strh	r3, [r0, #6]
 800dcc4:	bd10      	pop	{r4, pc}
 800dcc6:	bf00      	nop
 800dcc8:	200150b8 	.word	0x200150b8
 800dccc:	200150b4 	.word	0x200150b4

0800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800dcd0:	4b08      	ldr	r3, [pc, #32]	@ (800dcf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800dcd2:	781b      	ldrb	r3, [r3, #0]
 800dcd4:	2b01      	cmp	r3, #1
 800dcd6:	d10c      	bne.n	800dcf2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800dcd8:	8803      	ldrh	r3, [r0, #0]
 800dcda:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800dcde:	8842      	ldrh	r2, [r0, #2]
 800dce0:	8002      	strh	r2, [r0, #0]
 800dce2:	185a      	adds	r2, r3, r1
 800dce4:	4b04      	ldr	r3, [pc, #16]	@ (800dcf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800dce6:	881b      	ldrh	r3, [r3, #0]
 800dce8:	1a9b      	subs	r3, r3, r2
 800dcea:	8043      	strh	r3, [r0, #2]
 800dcec:	88c3      	ldrh	r3, [r0, #6]
 800dcee:	80c1      	strh	r1, [r0, #6]
 800dcf0:	8083      	strh	r3, [r0, #4]
 800dcf2:	4770      	bx	lr
 800dcf4:	200150b8 	.word	0x200150b8
 800dcf8:	200150b4 	.word	0x200150b4

0800dcfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800dcfc:	4b07      	ldr	r3, [pc, #28]	@ (800dd1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800dcfe:	b510      	push	{r4, lr}
 800dd00:	781b      	ldrb	r3, [r3, #0]
 800dd02:	2b01      	cmp	r3, #1
 800dd04:	d108      	bne.n	800dd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800dd06:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dd0a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dd0e:	8003      	strh	r3, [r0, #0]
 800dd10:	8893      	ldrh	r3, [r2, #4]
 800dd12:	3b01      	subs	r3, #1
 800dd14:	1b1b      	subs	r3, r3, r4
 800dd16:	800b      	strh	r3, [r1, #0]
 800dd18:	bd10      	pop	{r4, pc}
 800dd1a:	bf00      	nop
 800dd1c:	200150b8 	.word	0x200150b8

0800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800dd20:	4b0a      	ldr	r3, [pc, #40]	@ (800dd4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800dd22:	460a      	mov	r2, r1
 800dd24:	b510      	push	{r4, lr}
 800dd26:	781b      	ldrb	r3, [r3, #0]
 800dd28:	2b01      	cmp	r3, #1
 800dd2a:	d10d      	bne.n	800dd48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800dd2c:	8881      	ldrh	r1, [r0, #4]
 800dd2e:	8803      	ldrh	r3, [r0, #0]
 800dd30:	440b      	add	r3, r1
 800dd32:	4601      	mov	r1, r0
 800dd34:	3b01      	subs	r3, #1
 800dd36:	f821 3b02 	strh.w	r3, [r1], #2
 800dd3a:	f7ff ffdf 	bl	800dcfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800dd3e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dd42:	88c2      	ldrh	r2, [r0, #6]
 800dd44:	80c3      	strh	r3, [r0, #6]
 800dd46:	8082      	strh	r2, [r0, #4]
 800dd48:	bd10      	pop	{r4, pc}
 800dd4a:	bf00      	nop
 800dd4c:	200150b8 	.word	0x200150b8

0800dd50 <_ZN8touchgfx11Application13requestRedrawEv>:
 800dd50:	4b06      	ldr	r3, [pc, #24]	@ (800dd6c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800dd52:	2100      	movs	r1, #0
 800dd54:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dd58:	4b05      	ldr	r3, [pc, #20]	@ (800dd70 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800dd5a:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800dd5e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dd62:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800dd66:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800dd6a:	4770      	bx	lr
 800dd6c:	200150b4 	.word	0x200150b4
 800dd70:	200150b6 	.word	0x200150b6

0800dd74 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800dd74:	4b03      	ldr	r3, [pc, #12]	@ (800dd84 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800dd76:	6818      	ldr	r0, [r3, #0]
 800dd78:	b110      	cbz	r0, 800dd80 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800dd7a:	6803      	ldr	r3, [r0, #0]
 800dd7c:	699b      	ldr	r3, [r3, #24]
 800dd7e:	4718      	bx	r3
 800dd80:	4770      	bx	lr
 800dd82:	bf00      	nop
 800dd84:	200150fc 	.word	0x200150fc

0800dd88 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800dd88:	4770      	bx	lr
	...

0800dd8c <_ZN8touchgfx11Application4drawEv>:
 800dd8c:	4b09      	ldr	r3, [pc, #36]	@ (800ddb4 <_ZN8touchgfx11Application4drawEv+0x28>)
 800dd8e:	b507      	push	{r0, r1, r2, lr}
 800dd90:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dd94:	2100      	movs	r1, #0
 800dd96:	4b08      	ldr	r3, [pc, #32]	@ (800ddb8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800dd98:	9100      	str	r1, [sp, #0]
 800dd9a:	4669      	mov	r1, sp
 800dd9c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dda0:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dda4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dda8:	6803      	ldr	r3, [r0, #0]
 800ddaa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ddac:	4798      	blx	r3
 800ddae:	b003      	add	sp, #12
 800ddb0:	f85d fb04 	ldr.w	pc, [sp], #4
 800ddb4:	200150b4 	.word	0x200150b4
 800ddb8:	200150b6 	.word	0x200150b6

0800ddbc <_ZN8touchgfx11Application10invalidateEv>:
 800ddbc:	4b09      	ldr	r3, [pc, #36]	@ (800dde4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800ddbe:	b082      	sub	sp, #8
 800ddc0:	2100      	movs	r1, #0
 800ddc2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ddc6:	4b08      	ldr	r3, [pc, #32]	@ (800dde8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800ddc8:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ddcc:	aa02      	add	r2, sp, #8
 800ddce:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ddd2:	9100      	str	r1, [sp, #0]
 800ddd4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ddd8:	6803      	ldr	r3, [r0, #0]
 800ddda:	e912 0006 	ldmdb	r2, {r1, r2}
 800ddde:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dde0:	b002      	add	sp, #8
 800dde2:	4718      	bx	r3
 800dde4:	200150b4 	.word	0x200150b4
 800dde8:	200150b6 	.word	0x200150b6

0800ddec <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ddec:	4b03      	ldr	r3, [pc, #12]	@ (800ddfc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ddee:	6818      	ldr	r0, [r3, #0]
 800ddf0:	b110      	cbz	r0, 800ddf8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ddf2:	6803      	ldr	r3, [r0, #0]
 800ddf4:	69db      	ldr	r3, [r3, #28]
 800ddf6:	4718      	bx	r3
 800ddf8:	4770      	bx	lr
 800ddfa:	bf00      	nop
 800ddfc:	200150fc 	.word	0x200150fc

0800de00 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800de00:	4b03      	ldr	r3, [pc, #12]	@ (800de10 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800de02:	6818      	ldr	r0, [r3, #0]
 800de04:	b110      	cbz	r0, 800de0c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800de06:	6803      	ldr	r3, [r0, #0]
 800de08:	6a1b      	ldr	r3, [r3, #32]
 800de0a:	4718      	bx	r3
 800de0c:	4770      	bx	lr
 800de0e:	bf00      	nop
 800de10:	200150fc 	.word	0x200150fc

0800de14 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800de14:	2300      	movs	r3, #0
 800de16:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800de1a:	4770      	bx	lr

0800de1c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800de1c:	4b03      	ldr	r3, [pc, #12]	@ (800de2c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800de1e:	6818      	ldr	r0, [r3, #0]
 800de20:	b110      	cbz	r0, 800de28 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800de22:	6803      	ldr	r3, [r0, #0]
 800de24:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800de26:	4718      	bx	r3
 800de28:	4770      	bx	lr
 800de2a:	bf00      	nop
 800de2c:	200150fc 	.word	0x200150fc

0800de30 <_ZN8touchgfx11ApplicationD1Ev>:
 800de30:	4770      	bx	lr

0800de32 <_ZN8touchgfx11ApplicationD0Ev>:
 800de32:	b510      	push	{r4, lr}
 800de34:	4604      	mov	r4, r0
 800de36:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800de3a:	f010 fd90 	bl	801e95e <_ZdlPvj>
 800de3e:	4620      	mov	r0, r4
 800de40:	bd10      	pop	{r4, pc}

0800de42 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800de42:	b510      	push	{r4, lr}
 800de44:	f9b1 4000 	ldrsh.w	r4, [r1]
 800de48:	888a      	ldrh	r2, [r1, #4]
 800de4a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800de4e:	4422      	add	r2, r4
 800de50:	b212      	sxth	r2, r2
 800de52:	4293      	cmp	r3, r2
 800de54:	da15      	bge.n	800de82 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800de56:	8882      	ldrh	r2, [r0, #4]
 800de58:	4413      	add	r3, r2
 800de5a:	b21b      	sxth	r3, r3
 800de5c:	429c      	cmp	r4, r3
 800de5e:	da10      	bge.n	800de82 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800de60:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800de64:	88c9      	ldrh	r1, [r1, #6]
 800de66:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800de6a:	4419      	add	r1, r3
 800de6c:	b209      	sxth	r1, r1
 800de6e:	428a      	cmp	r2, r1
 800de70:	da07      	bge.n	800de82 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800de72:	88c0      	ldrh	r0, [r0, #6]
 800de74:	4410      	add	r0, r2
 800de76:	b200      	sxth	r0, r0
 800de78:	4283      	cmp	r3, r0
 800de7a:	bfac      	ite	ge
 800de7c:	2000      	movge	r0, #0
 800de7e:	2001      	movlt	r0, #1
 800de80:	bd10      	pop	{r4, pc}
 800de82:	2000      	movs	r0, #0
 800de84:	e7fc      	b.n	800de80 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800de86 <_ZN8touchgfx4Rect10restrictToEss>:
 800de86:	f9b0 3000 	ldrsh.w	r3, [r0]
 800de8a:	2b00      	cmp	r3, #0
 800de8c:	b510      	push	{r4, lr}
 800de8e:	da04      	bge.n	800de9a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800de90:	8884      	ldrh	r4, [r0, #4]
 800de92:	4423      	add	r3, r4
 800de94:	8083      	strh	r3, [r0, #4]
 800de96:	2300      	movs	r3, #0
 800de98:	8003      	strh	r3, [r0, #0]
 800de9a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800de9e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dea2:	1b09      	subs	r1, r1, r4
 800dea4:	428b      	cmp	r3, r1
 800dea6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800deaa:	bfc8      	it	gt
 800deac:	8081      	strhgt	r1, [r0, #4]
 800deae:	2b00      	cmp	r3, #0
 800deb0:	da04      	bge.n	800debc <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800deb2:	88c1      	ldrh	r1, [r0, #6]
 800deb4:	440b      	add	r3, r1
 800deb6:	80c3      	strh	r3, [r0, #6]
 800deb8:	2300      	movs	r3, #0
 800deba:	8043      	strh	r3, [r0, #2]
 800debc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800dec0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800dec4:	1a52      	subs	r2, r2, r1
 800dec6:	4293      	cmp	r3, r2
 800dec8:	bfc8      	it	gt
 800deca:	80c2      	strhgt	r2, [r0, #6]
 800decc:	bd10      	pop	{r4, pc}
	...

0800ded0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800ded0:	4b10      	ldr	r3, [pc, #64]	@ (800df14 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800ded2:	b510      	push	{r4, lr}
 800ded4:	460c      	mov	r4, r1
 800ded6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800deda:	4b0f      	ldr	r3, [pc, #60]	@ (800df18 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800dedc:	4620      	mov	r0, r4
 800dede:	f9b3 1000 	ldrsh.w	r1, [r3]
 800dee2:	f7ff ffd0 	bl	800de86 <_ZN8touchgfx4Rect10restrictToEss>
 800dee6:	4b0d      	ldr	r3, [pc, #52]	@ (800df1c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800dee8:	6818      	ldr	r0, [r3, #0]
 800deea:	b190      	cbz	r0, 800df12 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800deec:	6803      	ldr	r3, [r0, #0]
 800deee:	4621      	mov	r1, r4
 800def0:	689b      	ldr	r3, [r3, #8]
 800def2:	4798      	blx	r3
 800def4:	4b0a      	ldr	r3, [pc, #40]	@ (800df20 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800def6:	6818      	ldr	r0, [r3, #0]
 800def8:	b118      	cbz	r0, 800df02 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800defa:	6803      	ldr	r3, [r0, #0]
 800defc:	4621      	mov	r1, r4
 800defe:	689b      	ldr	r3, [r3, #8]
 800df00:	4798      	blx	r3
 800df02:	4b08      	ldr	r3, [pc, #32]	@ (800df24 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800df04:	4621      	mov	r1, r4
 800df06:	6818      	ldr	r0, [r3, #0]
 800df08:	6803      	ldr	r3, [r0, #0]
 800df0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df0e:	69db      	ldr	r3, [r3, #28]
 800df10:	4718      	bx	r3
 800df12:	bd10      	pop	{r4, pc}
 800df14:	200150b6 	.word	0x200150b6
 800df18:	200150b4 	.word	0x200150b4
 800df1c:	200150fc 	.word	0x200150fc
 800df20:	200150f8 	.word	0x200150f8
 800df24:	200150c0 	.word	0x200150c0

0800df28 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800df28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800df2a:	4606      	mov	r6, r0
 800df2c:	4608      	mov	r0, r1
 800df2e:	460f      	mov	r7, r1
 800df30:	f7fc fce9 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800df34:	b9e8      	cbnz	r0, 800df72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800df36:	f9b7 5000 	ldrsh.w	r5, [r7]
 800df3a:	f9b6 4000 	ldrsh.w	r4, [r6]
 800df3e:	42a5      	cmp	r5, r4
 800df40:	db17      	blt.n	800df72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800df42:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800df46:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800df4a:	429a      	cmp	r2, r3
 800df4c:	db11      	blt.n	800df72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800df4e:	88b9      	ldrh	r1, [r7, #4]
 800df50:	440d      	add	r5, r1
 800df52:	88b1      	ldrh	r1, [r6, #4]
 800df54:	440c      	add	r4, r1
 800df56:	b22d      	sxth	r5, r5
 800df58:	b224      	sxth	r4, r4
 800df5a:	42a5      	cmp	r5, r4
 800df5c:	dc09      	bgt.n	800df72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800df5e:	88f8      	ldrh	r0, [r7, #6]
 800df60:	4410      	add	r0, r2
 800df62:	88f2      	ldrh	r2, [r6, #6]
 800df64:	4413      	add	r3, r2
 800df66:	b200      	sxth	r0, r0
 800df68:	b21b      	sxth	r3, r3
 800df6a:	4298      	cmp	r0, r3
 800df6c:	bfcc      	ite	gt
 800df6e:	2000      	movgt	r0, #0
 800df70:	2001      	movle	r0, #1
 800df72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800df74 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800df74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800df76:	4604      	mov	r4, r0
 800df78:	4608      	mov	r0, r1
 800df7a:	460d      	mov	r5, r1
 800df7c:	f7fc fcc3 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800df80:	b978      	cbnz	r0, 800dfa2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800df82:	4620      	mov	r0, r4
 800df84:	f7fc fcbf 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800df88:	f9b5 6000 	ldrsh.w	r6, [r5]
 800df8c:	b150      	cbz	r0, 800dfa4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800df8e:	8026      	strh	r6, [r4, #0]
 800df90:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800df94:	8063      	strh	r3, [r4, #2]
 800df96:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800df9a:	80a3      	strh	r3, [r4, #4]
 800df9c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800dfa0:	80e3      	strh	r3, [r4, #6]
 800dfa2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dfa4:	f9b4 1000 	ldrsh.w	r1, [r4]
 800dfa8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800dfac:	42b1      	cmp	r1, r6
 800dfae:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800dfb2:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800dfb6:	460f      	mov	r7, r1
 800dfb8:	88ed      	ldrh	r5, [r5, #6]
 800dfba:	bfa8      	it	ge
 800dfbc:	4637      	movge	r7, r6
 800dfbe:	4293      	cmp	r3, r2
 800dfc0:	4618      	mov	r0, r3
 800dfc2:	4466      	add	r6, ip
 800dfc4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800dfc8:	bfa8      	it	ge
 800dfca:	4610      	movge	r0, r2
 800dfcc:	442a      	add	r2, r5
 800dfce:	88e5      	ldrh	r5, [r4, #6]
 800dfd0:	4461      	add	r1, ip
 800dfd2:	b236      	sxth	r6, r6
 800dfd4:	8027      	strh	r7, [r4, #0]
 800dfd6:	442b      	add	r3, r5
 800dfd8:	b209      	sxth	r1, r1
 800dfda:	b212      	sxth	r2, r2
 800dfdc:	8060      	strh	r0, [r4, #2]
 800dfde:	b21b      	sxth	r3, r3
 800dfe0:	428e      	cmp	r6, r1
 800dfe2:	bfac      	ite	ge
 800dfe4:	ebc7 0106 	rsbge	r1, r7, r6
 800dfe8:	ebc7 0101 	rsblt	r1, r7, r1
 800dfec:	429a      	cmp	r2, r3
 800dfee:	bfac      	ite	ge
 800dff0:	ebc0 0202 	rsbge	r2, r0, r2
 800dff4:	ebc0 0203 	rsblt	r2, r0, r3
 800dff8:	80a1      	strh	r1, [r4, #4]
 800dffa:	80e2      	strh	r2, [r4, #6]
 800dffc:	e7d1      	b.n	800dfa2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800e000 <_ZN8touchgfx11Application11getInstanceEv>:
 800e000:	4b01      	ldr	r3, [pc, #4]	@ (800e008 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800e002:	6818      	ldr	r0, [r3, #0]
 800e004:	4770      	bx	lr
 800e006:	bf00      	nop
 800e008:	2001510c 	.word	0x2001510c

0800e00c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800e00c:	2300      	movs	r3, #0
 800e00e:	b510      	push	{r4, lr}
 800e010:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800e014:	4604      	mov	r4, r0
 800e016:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800e01a:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800e01e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800e022:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800e026:	429a      	cmp	r2, r3
 800e028:	d90e      	bls.n	800e048 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800e02a:	18e2      	adds	r2, r4, r3
 800e02c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800e030:	b122      	cbz	r2, 800e03c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800e032:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800e036:	6803      	ldr	r3, [r0, #0]
 800e038:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e03a:	4798      	blx	r3
 800e03c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800e040:	3301      	adds	r3, #1
 800e042:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800e046:	e7ea      	b.n	800e01e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800e048:	bd10      	pop	{r4, pc}

0800e04a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800e04a:	2300      	movs	r3, #0
 800e04c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800e050:	30a4      	adds	r0, #164	@ 0xa4
 800e052:	f820 3c24 	strh.w	r3, [r0, #-36]
 800e056:	f802 3b01 	strb.w	r3, [r2], #1
 800e05a:	4282      	cmp	r2, r0
 800e05c:	d1fb      	bne.n	800e056 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800e05e:	4770      	bx	lr

0800e060 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800e060:	b570      	push	{r4, r5, r6, lr}
 800e062:	4c0b      	ldr	r4, [pc, #44]	@ (800e090 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800e064:	4605      	mov	r5, r0
 800e066:	460e      	mov	r6, r1
 800e068:	6820      	ldr	r0, [r4, #0]
 800e06a:	b110      	cbz	r0, 800e072 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800e06c:	6803      	ldr	r3, [r0, #0]
 800e06e:	695b      	ldr	r3, [r3, #20]
 800e070:	4798      	blx	r3
 800e072:	1d28      	adds	r0, r5, #4
 800e074:	f7ff ffe9 	bl	800e04a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800e078:	6026      	str	r6, [r4, #0]
 800e07a:	6833      	ldr	r3, [r6, #0]
 800e07c:	4630      	mov	r0, r6
 800e07e:	68db      	ldr	r3, [r3, #12]
 800e080:	4798      	blx	r3
 800e082:	682b      	ldr	r3, [r5, #0]
 800e084:	4628      	mov	r0, r5
 800e086:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e088:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e08c:	4718      	bx	r3
 800e08e:	bf00      	nop
 800e090:	200150fc 	.word	0x200150fc

0800e094 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800e094:	2300      	movs	r3, #0
 800e096:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800e09a:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800e09e:	461a      	mov	r2, r3
 800e0a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e0a2:	461c      	mov	r4, r3
 800e0a4:	461d      	mov	r5, r3
 800e0a6:	459c      	cmp	ip, r3
 800e0a8:	dd1a      	ble.n	800e0e0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800e0aa:	18c6      	adds	r6, r0, r3
 800e0ac:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800e0b0:	b16e      	cbz	r6, 800e0ce <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800e0b2:	429a      	cmp	r2, r3
 800e0b4:	d008      	beq.n	800e0c8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800e0b6:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800e0ba:	fa1f fe82 	uxth.w	lr, r2
 800e0be:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800e0c2:	1887      	adds	r7, r0, r2
 800e0c4:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800e0c8:	3201      	adds	r2, #1
 800e0ca:	3301      	adds	r3, #1
 800e0cc:	e7eb      	b.n	800e0a6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800e0ce:	4299      	cmp	r1, r3
 800e0d0:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800e0d4:	bfa8      	it	ge
 800e0d6:	3501      	addge	r5, #1
 800e0d8:	429e      	cmp	r6, r3
 800e0da:	bfc8      	it	gt
 800e0dc:	3401      	addgt	r4, #1
 800e0de:	e7f4      	b.n	800e0ca <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800e0e0:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800e0e4:	1b49      	subs	r1, r1, r5
 800e0e6:	1b1b      	subs	r3, r3, r4
 800e0e8:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800e0ec:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800e0f0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800e0f4:	4293      	cmp	r3, r2
 800e0f6:	dd03      	ble.n	800e100 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800e0f8:	3b01      	subs	r3, #1
 800e0fa:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800e0fe:	e7f7      	b.n	800e0f0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800e100:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800e104 <_ZN8touchgfx11Application15handleTickEventEv>:
 800e104:	b570      	push	{r4, r5, r6, lr}
 800e106:	4d16      	ldr	r5, [pc, #88]	@ (800e160 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800e108:	4604      	mov	r4, r0
 800e10a:	6828      	ldr	r0, [r5, #0]
 800e10c:	b140      	cbz	r0, 800e120 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800e10e:	7a03      	ldrb	r3, [r0, #8]
 800e110:	b933      	cbnz	r3, 800e120 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800e112:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800e116:	6803      	ldr	r3, [r0, #0]
 800e118:	689b      	ldr	r3, [r3, #8]
 800e11a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e11e:	4718      	bx	r3
 800e120:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800e124:	4e0f      	ldr	r6, [pc, #60]	@ (800e164 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800e126:	b973      	cbnz	r3, 800e146 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800e128:	b168      	cbz	r0, 800e146 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800e12a:	7a03      	ldrb	r3, [r0, #8]
 800e12c:	b15b      	cbz	r3, 800e146 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800e12e:	6830      	ldr	r0, [r6, #0]
 800e130:	b110      	cbz	r0, 800e138 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800e132:	6803      	ldr	r3, [r0, #0]
 800e134:	691b      	ldr	r3, [r3, #16]
 800e136:	4798      	blx	r3
 800e138:	6828      	ldr	r0, [r5, #0]
 800e13a:	6803      	ldr	r3, [r0, #0]
 800e13c:	68db      	ldr	r3, [r3, #12]
 800e13e:	4798      	blx	r3
 800e140:	2301      	movs	r3, #1
 800e142:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800e146:	3404      	adds	r4, #4
 800e148:	4620      	mov	r0, r4
 800e14a:	f7ff ff5f 	bl	800e00c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800e14e:	4620      	mov	r0, r4
 800e150:	f7ff ffa0 	bl	800e094 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800e154:	6830      	ldr	r0, [r6, #0]
 800e156:	b110      	cbz	r0, 800e15e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800e158:	6803      	ldr	r3, [r0, #0]
 800e15a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e15c:	e7dd      	b.n	800e11a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800e15e:	bd70      	pop	{r4, r5, r6, pc}
 800e160:	20015100 	.word	0x20015100
 800e164:	200150fc 	.word	0x200150fc

0800e168 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800e168:	4603      	mov	r3, r0
 800e16a:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800e16e:	2200      	movs	r2, #0
 800e170:	801a      	strh	r2, [r3, #0]
 800e172:	3308      	adds	r3, #8
 800e174:	f823 2c06 	strh.w	r2, [r3, #-6]
 800e178:	f823 2c04 	strh.w	r2, [r3, #-4]
 800e17c:	f823 2c02 	strh.w	r2, [r3, #-2]
 800e180:	428b      	cmp	r3, r1
 800e182:	d1f5      	bne.n	800e170 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800e184:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800e188:	4770      	bx	lr
	...

0800e18c <_ZN8touchgfx11ApplicationC1Ev>:
 800e18c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e18e:	4b1d      	ldr	r3, [pc, #116]	@ (800e204 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800e190:	4606      	mov	r6, r0
 800e192:	4604      	mov	r4, r0
 800e194:	2500      	movs	r5, #0
 800e196:	f846 3b04 	str.w	r3, [r6], #4
 800e19a:	22a8      	movs	r2, #168	@ 0xa8
 800e19c:	2100      	movs	r1, #0
 800e19e:	4630      	mov	r0, r6
 800e1a0:	f010 fea8 	bl	801eef4 <memset>
 800e1a4:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800e1a8:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800e1ac:	4f16      	ldr	r7, [pc, #88]	@ (800e208 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800e1ae:	f7ff ffdb 	bl	800e168 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e1b2:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800e1b6:	f7ff ffd7 	bl	800e168 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e1ba:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800e1be:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800e1c2:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800e1c6:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800e1ca:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800e1ce:	490f      	ldr	r1, [pc, #60]	@ (800e20c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800e1d0:	480f      	ldr	r0, [pc, #60]	@ (800e210 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800e1d2:	f010 fabb 	bl	801e74c <CRC_Lock>
 800e1d6:	4b0f      	ldr	r3, [pc, #60]	@ (800e214 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800e1d8:	b158      	cbz	r0, 800e1f2 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800e1da:	801d      	strh	r5, [r3, #0]
 800e1dc:	2300      	movs	r3, #0
 800e1de:	4a0e      	ldr	r2, [pc, #56]	@ (800e218 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800e1e0:	4630      	mov	r0, r6
 800e1e2:	6013      	str	r3, [r2, #0]
 800e1e4:	4a0d      	ldr	r2, [pc, #52]	@ (800e21c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800e1e6:	603b      	str	r3, [r7, #0]
 800e1e8:	6013      	str	r3, [r2, #0]
 800e1ea:	f7ff ff2e 	bl	800e04a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800e1ee:	4620      	mov	r0, r4
 800e1f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e1f2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800e1f6:	2002      	movs	r0, #2
 800e1f8:	801a      	strh	r2, [r3, #0]
 800e1fa:	6038      	str	r0, [r7, #0]
 800e1fc:	f001 fa58 	bl	800f6b0 <_ZN8touchgfx6Screen4drawEv>
 800e200:	e7ec      	b.n	800e1dc <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800e202:	bf00      	nop
 800e204:	0802165c 	.word	0x0802165c
 800e208:	200150fc 	.word	0x200150fc
 800e20c:	b5e8b5cd 	.word	0xb5e8b5cd
 800e210:	f407a5c2 	.word	0xf407a5c2
 800e214:	20000044 	.word	0x20000044
 800e218:	2001510c 	.word	0x2001510c
 800e21c:	20015100 	.word	0x20015100

0800e220 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800e220:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800e224:	3b01      	subs	r3, #1
 800e226:	b29b      	uxth	r3, r3
 800e228:	428b      	cmp	r3, r1
 800e22a:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800e22e:	b510      	push	{r4, lr}
 800e230:	d908      	bls.n	800e244 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800e232:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800e236:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800e23a:	681a      	ldr	r2, [r3, #0]
 800e23c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800e240:	685a      	ldr	r2, [r3, #4]
 800e242:	6062      	str	r2, [r4, #4]
 800e244:	bd10      	pop	{r4, pc}
	...

0800e248 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800e248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e24c:	b08f      	sub	sp, #60	@ 0x3c
 800e24e:	4b8f      	ldr	r3, [pc, #572]	@ (800e48c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800e250:	4683      	mov	fp, r0
 800e252:	ac0a      	add	r4, sp, #40	@ 0x28
 800e254:	e884 0006 	stmia.w	r4, {r1, r2}
 800e258:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e25c:	4620      	mov	r0, r4
 800e25e:	4b8c      	ldr	r3, [pc, #560]	@ (800e490 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800e260:	f9b3 1000 	ldrsh.w	r1, [r3]
 800e264:	f7ff fe0f 	bl	800de86 <_ZN8touchgfx4Rect10restrictToEss>
 800e268:	4620      	mov	r0, r4
 800e26a:	f7fc fb4c 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e26e:	2800      	cmp	r0, #0
 800e270:	d16a      	bne.n	800e348 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e272:	9403      	str	r4, [sp, #12]
 800e274:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800e278:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800e27c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800e280:	9301      	str	r3, [sp, #4]
 800e282:	35a4      	adds	r5, #164	@ 0xa4
 800e284:	b15c      	cbz	r4, 800e29e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800e286:	4629      	mov	r1, r5
 800e288:	9803      	ldr	r0, [sp, #12]
 800e28a:	f7ff fe4d 	bl	800df28 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e28e:	3c01      	subs	r4, #1
 800e290:	b118      	cbz	r0, 800e29a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800e292:	b2a1      	uxth	r1, r4
 800e294:	9801      	ldr	r0, [sp, #4]
 800e296:	f7ff ffc3 	bl	800e220 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e29a:	3d08      	subs	r5, #8
 800e29c:	e7f2      	b.n	800e284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800e29e:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800e2a2:	f10a 33ff 	add.w	r3, sl, #4294967295
 800e2a6:	f8cd a010 	str.w	sl, [sp, #16]
 800e2aa:	9302      	str	r3, [sp, #8]
 800e2ac:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800e2b0:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800e2b4:	9306      	str	r3, [sp, #24]
 800e2b6:	445c      	add	r4, fp
 800e2b8:	2500      	movs	r5, #0
 800e2ba:	4626      	mov	r6, r4
 800e2bc:	f8cd a014 	str.w	sl, [sp, #20]
 800e2c0:	462f      	mov	r7, r5
 800e2c2:	9b05      	ldr	r3, [sp, #20]
 800e2c4:	2b00      	cmp	r3, #0
 800e2c6:	d073      	beq.n	800e3b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e2c8:	9903      	ldr	r1, [sp, #12]
 800e2ca:	4630      	mov	r0, r6
 800e2cc:	f7ff fdb9 	bl	800de42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e2d0:	b350      	cbz	r0, 800e328 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800e2d2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800e2d6:	f9b6 c000 	ldrsh.w	ip, [r6]
 800e2da:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800e2de:	45e6      	cmp	lr, ip
 800e2e0:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800e2e4:	db33      	blt.n	800e34e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800e2e6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800e2ea:	88b3      	ldrh	r3, [r6, #4]
 800e2ec:	4472      	add	r2, lr
 800e2ee:	4463      	add	r3, ip
 800e2f0:	b212      	sxth	r2, r2
 800e2f2:	b21b      	sxth	r3, r3
 800e2f4:	429a      	cmp	r2, r3
 800e2f6:	dc2a      	bgt.n	800e34e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800e2f8:	fa1f f289 	uxth.w	r2, r9
 800e2fc:	88f3      	ldrh	r3, [r6, #6]
 800e2fe:	45c8      	cmp	r8, r9
 800e300:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800e304:	4413      	add	r3, r2
 800e306:	fa1f fc88 	uxth.w	ip, r8
 800e30a:	b29b      	uxth	r3, r3
 800e30c:	fa0f fe83 	sxth.w	lr, r3
 800e310:	db0f      	blt.n	800e332 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800e312:	eba3 030c 	sub.w	r3, r3, ip
 800e316:	1ac9      	subs	r1, r1, r3
 800e318:	b209      	sxth	r1, r1
 800e31a:	2900      	cmp	r1, #0
 800e31c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800e320:	dd12      	ble.n	800e348 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e322:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800e326:	4605      	mov	r5, r0
 800e328:	9b05      	ldr	r3, [sp, #20]
 800e32a:	3e08      	subs	r6, #8
 800e32c:	3b01      	subs	r3, #1
 800e32e:	9305      	str	r3, [sp, #20]
 800e330:	e7c7      	b.n	800e2c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800e332:	4461      	add	r1, ip
 800e334:	b209      	sxth	r1, r1
 800e336:	4571      	cmp	r1, lr
 800e338:	dc38      	bgt.n	800e3ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e33a:	eba2 020c 	sub.w	r2, r2, ip
 800e33e:	b212      	sxth	r2, r2
 800e340:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800e344:	2a00      	cmp	r2, #0
 800e346:	dcee      	bgt.n	800e326 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e348:	b00f      	add	sp, #60	@ 0x3c
 800e34a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e34e:	45c8      	cmp	r8, r9
 800e350:	db2c      	blt.n	800e3ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e352:	88f3      	ldrh	r3, [r6, #6]
 800e354:	4499      	add	r9, r3
 800e356:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800e35a:	4498      	add	r8, r3
 800e35c:	fa0f f989 	sxth.w	r9, r9
 800e360:	fa0f f888 	sxth.w	r8, r8
 800e364:	45c1      	cmp	r9, r8
 800e366:	db21      	blt.n	800e3ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e368:	fa1f f28c 	uxth.w	r2, ip
 800e36c:	88b3      	ldrh	r3, [r6, #4]
 800e36e:	45e6      	cmp	lr, ip
 800e370:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800e374:	4413      	add	r3, r2
 800e376:	fa1f f88e 	uxth.w	r8, lr
 800e37a:	b29b      	uxth	r3, r3
 800e37c:	fa0f f983 	sxth.w	r9, r3
 800e380:	db0a      	blt.n	800e398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800e382:	eba3 0308 	sub.w	r3, r3, r8
 800e386:	1ac9      	subs	r1, r1, r3
 800e388:	b209      	sxth	r1, r1
 800e38a:	2900      	cmp	r1, #0
 800e38c:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800e390:	ddda      	ble.n	800e348 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e392:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800e396:	e7c6      	b.n	800e326 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e398:	4441      	add	r1, r8
 800e39a:	b209      	sxth	r1, r1
 800e39c:	4549      	cmp	r1, r9
 800e39e:	dc05      	bgt.n	800e3ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e3a0:	eba2 0208 	sub.w	r2, r2, r8
 800e3a4:	b212      	sxth	r2, r2
 800e3a6:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800e3aa:	e7cb      	b.n	800e344 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800e3ac:	4607      	mov	r7, r0
 800e3ae:	e7bb      	b.n	800e328 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800e3b0:	2d00      	cmp	r5, #0
 800e3b2:	d181      	bne.n	800e2b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800e3b4:	2f00      	cmp	r7, #0
 800e3b6:	f000 81dd 	beq.w	800e774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800e3ba:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800e3be:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800e3c2:	b2b3      	uxth	r3, r6
 800e3c4:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800e3c8:	9305      	str	r3, [sp, #20]
 800e3ca:	9a05      	ldr	r2, [sp, #20]
 800e3cc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800e3d0:	4413      	add	r3, r2
 800e3d2:	b2ba      	uxth	r2, r7
 800e3d4:	4492      	add	sl, r2
 800e3d6:	b29b      	uxth	r3, r3
 800e3d8:	fa1f fa8a 	uxth.w	sl, sl
 800e3dc:	fa0f f883 	sxth.w	r8, r3
 800e3e0:	fa0f f98a 	sxth.w	r9, sl
 800e3e4:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800e3e8:	9b04      	ldr	r3, [sp, #16]
 800e3ea:	2b00      	cmp	r3, #0
 800e3ec:	d052      	beq.n	800e494 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800e3ee:	9903      	ldr	r1, [sp, #12]
 800e3f0:	4620      	mov	r0, r4
 800e3f2:	f7ff fd26 	bl	800de42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e3f6:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800e3fa:	b1c0      	cbz	r0, 800e42e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e3fc:	f9b4 e000 	ldrsh.w	lr, [r4]
 800e400:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800e404:	4576      	cmp	r6, lr
 800e406:	dc22      	bgt.n	800e44e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800e408:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800e40c:	44f4      	add	ip, lr
 800e40e:	fa0f fc8c 	sxth.w	ip, ip
 800e412:	45e0      	cmp	r8, ip
 800e414:	db1b      	blt.n	800e44e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800e416:	428f      	cmp	r7, r1
 800e418:	fa1f fc81 	uxth.w	ip, r1
 800e41c:	88e1      	ldrh	r1, [r4, #6]
 800e41e:	dc0d      	bgt.n	800e43c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800e420:	ebaa 0c0c 	sub.w	ip, sl, ip
 800e424:	f8a4 9002 	strh.w	r9, [r4, #2]
 800e428:	eba1 010c 	sub.w	r1, r1, ip
 800e42c:	80e1      	strh	r1, [r4, #6]
 800e42e:	4628      	mov	r0, r5
 800e430:	9904      	ldr	r1, [sp, #16]
 800e432:	3c08      	subs	r4, #8
 800e434:	4605      	mov	r5, r0
 800e436:	3901      	subs	r1, #1
 800e438:	9104      	str	r1, [sp, #16]
 800e43a:	e7d3      	b.n	800e3e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800e43c:	4461      	add	r1, ip
 800e43e:	b209      	sxth	r1, r1
 800e440:	4549      	cmp	r1, r9
 800e442:	dcf5      	bgt.n	800e430 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e444:	eba2 0c0c 	sub.w	ip, r2, ip
 800e448:	f8a4 c006 	strh.w	ip, [r4, #6]
 800e44c:	e7ef      	b.n	800e42e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e44e:	428f      	cmp	r7, r1
 800e450:	dcee      	bgt.n	800e430 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e452:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800e456:	4461      	add	r1, ip
 800e458:	b209      	sxth	r1, r1
 800e45a:	4589      	cmp	r9, r1
 800e45c:	dbe8      	blt.n	800e430 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e45e:	4576      	cmp	r6, lr
 800e460:	fa1f fc8e 	uxth.w	ip, lr
 800e464:	88a1      	ldrh	r1, [r4, #4]
 800e466:	dc07      	bgt.n	800e478 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800e468:	eba3 0c0c 	sub.w	ip, r3, ip
 800e46c:	f8a4 8000 	strh.w	r8, [r4]
 800e470:	eba1 010c 	sub.w	r1, r1, ip
 800e474:	80a1      	strh	r1, [r4, #4]
 800e476:	e7da      	b.n	800e42e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e478:	4461      	add	r1, ip
 800e47a:	b209      	sxth	r1, r1
 800e47c:	4588      	cmp	r8, r1
 800e47e:	dbd7      	blt.n	800e430 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e480:	9905      	ldr	r1, [sp, #20]
 800e482:	eba1 0c0c 	sub.w	ip, r1, ip
 800e486:	f8a4 c004 	strh.w	ip, [r4, #4]
 800e48a:	e7d0      	b.n	800e42e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e48c:	200150b6 	.word	0x200150b6
 800e490:	200150b4 	.word	0x200150b4
 800e494:	2d00      	cmp	r5, #0
 800e496:	f000 816d 	beq.w	800e774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800e49a:	9b06      	ldr	r3, [sp, #24]
 800e49c:	445b      	add	r3, fp
 800e49e:	461c      	mov	r4, r3
 800e4a0:	9b02      	ldr	r3, [sp, #8]
 800e4a2:	3301      	adds	r3, #1
 800e4a4:	f000 8166 	beq.w	800e774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800e4a8:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800e4ac:	9803      	ldr	r0, [sp, #12]
 800e4ae:	4629      	mov	r1, r5
 800e4b0:	f7ff fd3a 	bl	800df28 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e4b4:	b120      	cbz	r0, 800e4c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800e4b6:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800e4ba:	9801      	ldr	r0, [sp, #4]
 800e4bc:	f7ff feb0 	bl	800e220 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e4c0:	9903      	ldr	r1, [sp, #12]
 800e4c2:	4628      	mov	r0, r5
 800e4c4:	f7ff fcbd 	bl	800de42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e4c8:	2800      	cmp	r0, #0
 800e4ca:	f000 809c 	beq.w	800e606 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800e4ce:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800e4d2:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800e4d6:	fa1f f189 	uxth.w	r1, r9
 800e4da:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800e4de:	9309      	str	r3, [sp, #36]	@ 0x24
 800e4e0:	eb01 0c03 	add.w	ip, r1, r3
 800e4e4:	b283      	uxth	r3, r0
 800e4e6:	4548      	cmp	r0, r9
 800e4e8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800e4ec:	fa1f fa8c 	uxth.w	sl, ip
 800e4f0:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800e4f4:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800e4f8:	eb03 050c 	add.w	r5, r3, ip
 800e4fc:	b2ad      	uxth	r5, r5
 800e4fe:	9505      	str	r5, [sp, #20]
 800e500:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800e504:	9504      	str	r5, [sp, #16]
 800e506:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800e50a:	f340 8099 	ble.w	800e640 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800e50e:	1a5b      	subs	r3, r3, r1
 800e510:	4596      	cmp	lr, r2
 800e512:	fa0f f08a 	sxth.w	r0, sl
 800e516:	b29b      	uxth	r3, r3
 800e518:	b21e      	sxth	r6, r3
 800e51a:	dd2e      	ble.n	800e57a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800e51c:	9f02      	ldr	r7, [sp, #8]
 800e51e:	fa1f fe8e 	uxth.w	lr, lr
 800e522:	b292      	uxth	r2, r2
 800e524:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800e528:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800e52c:	9f04      	ldr	r7, [sp, #16]
 800e52e:	ebae 0102 	sub.w	r1, lr, r2
 800e532:	44a6      	add	lr, r4
 800e534:	1a3f      	subs	r7, r7, r0
 800e536:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800e53a:	b289      	uxth	r1, r1
 800e53c:	4402      	add	r2, r0
 800e53e:	fa0f fe8e 	sxth.w	lr, lr
 800e542:	b20d      	sxth	r5, r1
 800e544:	b212      	sxth	r2, r2
 800e546:	436f      	muls	r7, r5
 800e548:	ebae 0202 	sub.w	r2, lr, r2
 800e54c:	4372      	muls	r2, r6
 800e54e:	4297      	cmp	r7, r2
 800e550:	db09      	blt.n	800e566 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800e552:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800e556:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800e55a:	449c      	add	ip, r3
 800e55c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800e560:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800e564:	e686      	b.n	800e274 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e566:	4421      	add	r1, r4
 800e568:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800e56c:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800e570:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800e574:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800e578:	e67c      	b.n	800e274 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e57a:	9f04      	ldr	r7, [sp, #16]
 800e57c:	42b8      	cmp	r0, r7
 800e57e:	da27      	bge.n	800e5d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800e580:	9902      	ldr	r1, [sp, #8]
 800e582:	1a3f      	subs	r7, r7, r0
 800e584:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800e588:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800e58c:	eb05 010e 	add.w	r1, r5, lr
 800e590:	fa1f f881 	uxth.w	r8, r1
 800e594:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800e598:	4411      	add	r1, r2
 800e59a:	fa0f f988 	sxth.w	r9, r8
 800e59e:	eba2 020e 	sub.w	r2, r2, lr
 800e5a2:	eba1 0108 	sub.w	r1, r1, r8
 800e5a6:	4372      	muls	r2, r6
 800e5a8:	b289      	uxth	r1, r1
 800e5aa:	fa0f f881 	sxth.w	r8, r1
 800e5ae:	fb08 f707 	mul.w	r7, r8, r7
 800e5b2:	42ba      	cmp	r2, r7
 800e5b4:	dc06      	bgt.n	800e5c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800e5b6:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800e5ba:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800e5be:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800e5c2:	e7ca      	b.n	800e55a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800e5c4:	4429      	add	r1, r5
 800e5c6:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800e5ca:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800e5ce:	e651      	b.n	800e274 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e5d0:	9805      	ldr	r0, [sp, #20]
 800e5d2:	2d06      	cmp	r5, #6
 800e5d4:	ebaa 0000 	sub.w	r0, sl, r0
 800e5d8:	b280      	uxth	r0, r0
 800e5da:	fa0f fe80 	sxth.w	lr, r0
 800e5de:	d817      	bhi.n	800e610 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800e5e0:	9b04      	ldr	r3, [sp, #16]
 800e5e2:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800e5e6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800e5ea:	1c6b      	adds	r3, r5, #1
 800e5ec:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800e5f0:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800e5f4:	9b01      	ldr	r3, [sp, #4]
 800e5f6:	9801      	ldr	r0, [sp, #4]
 800e5f8:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e5fc:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e600:	805a      	strh	r2, [r3, #2]
 800e602:	809e      	strh	r6, [r3, #4]
 800e604:	80d9      	strh	r1, [r3, #6]
 800e606:	9b02      	ldr	r3, [sp, #8]
 800e608:	3c08      	subs	r4, #8
 800e60a:	3b01      	subs	r3, #1
 800e60c:	9302      	str	r3, [sp, #8]
 800e60e:	e747      	b.n	800e4a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800e610:	9a02      	ldr	r2, [sp, #8]
 800e612:	45b6      	cmp	lr, r6
 800e614:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e618:	db0d      	blt.n	800e636 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800e61a:	449c      	add	ip, r3
 800e61c:	445a      	add	r2, fp
 800e61e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800e622:	fa1f fc8c 	uxth.w	ip, ip
 800e626:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800e62a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800e62e:	448c      	add	ip, r1
 800e630:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800e634:	e61e      	b.n	800e274 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e636:	445a      	add	r2, fp
 800e638:	4484      	add	ip, r0
 800e63a:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800e63e:	e78f      	b.n	800e560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800e640:	fa1f f18e 	uxth.w	r1, lr
 800e644:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800e648:	b293      	uxth	r3, r2
 800e64a:	4596      	cmp	lr, r2
 800e64c:	eb01 0806 	add.w	r8, r1, r6
 800e650:	9306      	str	r3, [sp, #24]
 800e652:	fa1f f888 	uxth.w	r8, r8
 800e656:	9f06      	ldr	r7, [sp, #24]
 800e658:	fa0f f388 	sxth.w	r3, r8
 800e65c:	9307      	str	r3, [sp, #28]
 800e65e:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800e662:	443b      	add	r3, r7
 800e664:	b29b      	uxth	r3, r3
 800e666:	9308      	str	r3, [sp, #32]
 800e668:	da24      	bge.n	800e6b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800e66a:	9905      	ldr	r1, [sp, #20]
 800e66c:	eba3 0308 	sub.w	r3, r3, r8
 800e670:	eba2 020e 	sub.w	r2, r2, lr
 800e674:	eba9 0000 	sub.w	r0, r9, r0
 800e678:	ebaa 0401 	sub.w	r4, sl, r1
 800e67c:	b29b      	uxth	r3, r3
 800e67e:	b2a4      	uxth	r4, r4
 800e680:	b219      	sxth	r1, r3
 800e682:	b225      	sxth	r5, r4
 800e684:	4348      	muls	r0, r1
 800e686:	436a      	muls	r2, r5
 800e688:	4282      	cmp	r2, r0
 800e68a:	9a02      	ldr	r2, [sp, #8]
 800e68c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e690:	445a      	add	r2, fp
 800e692:	dc06      	bgt.n	800e6a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800e694:	9b07      	ldr	r3, [sp, #28]
 800e696:	44a4      	add	ip, r4
 800e698:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800e69c:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800e6a0:	e75e      	b.n	800e560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800e6a2:	9904      	ldr	r1, [sp, #16]
 800e6a4:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800e6a8:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800e6ac:	4433      	add	r3, r6
 800e6ae:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800e6b2:	e5df      	b.n	800e274 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e6b4:	9f06      	ldr	r7, [sp, #24]
 800e6b6:	9b04      	ldr	r3, [sp, #16]
 800e6b8:	1bc9      	subs	r1, r1, r7
 800e6ba:	fa0f f78a 	sxth.w	r7, sl
 800e6be:	b289      	uxth	r1, r1
 800e6c0:	429f      	cmp	r7, r3
 800e6c2:	fa0f fe81 	sxth.w	lr, r1
 800e6c6:	dd23      	ble.n	800e710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 800e6c8:	9a05      	ldr	r2, [sp, #20]
 800e6ca:	eba9 0000 	sub.w	r0, r9, r0
 800e6ce:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800e6d2:	ebaa 0202 	sub.w	r2, sl, r2
 800e6d6:	9d07      	ldr	r5, [sp, #28]
 800e6d8:	fb0e f000 	mul.w	r0, lr, r0
 800e6dc:	b292      	uxth	r2, r2
 800e6de:	eba5 0a03 	sub.w	sl, r5, r3
 800e6e2:	9b02      	ldr	r3, [sp, #8]
 800e6e4:	b214      	sxth	r4, r2
 800e6e6:	00db      	lsls	r3, r3, #3
 800e6e8:	fb04 fa0a 	mul.w	sl, r4, sl
 800e6ec:	445b      	add	r3, fp
 800e6ee:	4550      	cmp	r0, sl
 800e6f0:	db03      	blt.n	800e6fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 800e6f2:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800e6f6:	4494      	add	ip, r2
 800e6f8:	e732      	b.n	800e560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800e6fa:	9a04      	ldr	r2, [sp, #16]
 800e6fc:	4431      	add	r1, r6
 800e6fe:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800e702:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800e706:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800e70a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800e70e:	e75c      	b.n	800e5ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800e710:	9b08      	ldr	r3, [sp, #32]
 800e712:	2d06      	cmp	r5, #6
 800e714:	eba3 0308 	sub.w	r3, r3, r8
 800e718:	b29b      	uxth	r3, r3
 800e71a:	b218      	sxth	r0, r3
 800e71c:	d813      	bhi.n	800e746 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 800e71e:	9b07      	ldr	r3, [sp, #28]
 800e720:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800e724:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800e728:	1c6b      	adds	r3, r5, #1
 800e72a:	9901      	ldr	r1, [sp, #4]
 800e72c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800e730:	9b01      	ldr	r3, [sp, #4]
 800e732:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800e736:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e73a:	805a      	strh	r2, [r3, #2]
 800e73c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e73e:	f8a3 e006 	strh.w	lr, [r3, #6]
 800e742:	809a      	strh	r2, [r3, #4]
 800e744:	e75f      	b.n	800e606 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800e746:	9c02      	ldr	r4, [sp, #8]
 800e748:	4570      	cmp	r0, lr
 800e74a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800e74e:	db0d      	blt.n	800e76c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 800e750:	4431      	add	r1, r6
 800e752:	9b06      	ldr	r3, [sp, #24]
 800e754:	445c      	add	r4, fp
 800e756:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800e75a:	b289      	uxth	r1, r1
 800e75c:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800e760:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800e764:	4419      	add	r1, r3
 800e766:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800e76a:	e583      	b.n	800e274 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e76c:	445c      	add	r4, fp
 800e76e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800e772:	e79b      	b.n	800e6ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800e774:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800e778:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800e77c:	1e65      	subs	r5, r4, #1
 800e77e:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800e782:	b2ad      	uxth	r5, r5
 800e784:	42b5      	cmp	r5, r6
 800e786:	d044      	beq.n	800e812 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800e788:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800e78c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800e790:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800e794:	4282      	cmp	r2, r0
 800e796:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800e79a:	d11f      	bne.n	800e7dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800e79c:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800e7a0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800e7a4:	459c      	cmp	ip, r3
 800e7a6:	d119      	bne.n	800e7dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800e7a8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800e7ac:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800e7b0:	19d8      	adds	r0, r3, r7
 800e7b2:	b200      	sxth	r0, r0
 800e7b4:	4288      	cmp	r0, r1
 800e7b6:	d109      	bne.n	800e7cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800e7b8:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800e7bc:	4413      	add	r3, r2
 800e7be:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800e7c2:	4629      	mov	r1, r5
 800e7c4:	9801      	ldr	r0, [sp, #4]
 800e7c6:	f7ff fd2b 	bl	800e220 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e7ca:	e003      	b.n	800e7d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800e7cc:	4411      	add	r1, r2
 800e7ce:	b209      	sxth	r1, r1
 800e7d0:	42b9      	cmp	r1, r7
 800e7d2:	d0f3      	beq.n	800e7bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 800e7d4:	3d01      	subs	r5, #1
 800e7d6:	3c08      	subs	r4, #8
 800e7d8:	b2ad      	uxth	r5, r5
 800e7da:	e7d3      	b.n	800e784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800e7dc:	42b9      	cmp	r1, r7
 800e7de:	d1f9      	bne.n	800e7d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800e7e0:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800e7e4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800e7e8:	4299      	cmp	r1, r3
 800e7ea:	d1f3      	bne.n	800e7d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800e7ec:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800e7f0:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800e7f4:	181f      	adds	r7, r3, r0
 800e7f6:	b23f      	sxth	r7, r7
 800e7f8:	42ba      	cmp	r2, r7
 800e7fa:	d105      	bne.n	800e808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 800e7fc:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800e800:	440b      	add	r3, r1
 800e802:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800e806:	e7dc      	b.n	800e7c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 800e808:	440a      	add	r2, r1
 800e80a:	b212      	sxth	r2, r2
 800e80c:	4290      	cmp	r0, r2
 800e80e:	d1e1      	bne.n	800e7d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800e810:	e7f6      	b.n	800e800 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 800e812:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800e816:	2e07      	cmp	r6, #7
 800e818:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800e81c:	d812      	bhi.n	800e844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 800e81e:	1c75      	adds	r5, r6, #1
 800e820:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800e824:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800e828:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800e82c:	9d01      	ldr	r5, [sp, #4]
 800e82e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800e832:	442c      	add	r4, r5
 800e834:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800e838:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800e83c:	8061      	strh	r1, [r4, #2]
 800e83e:	80a2      	strh	r2, [r4, #4]
 800e840:	80e3      	strh	r3, [r4, #6]
 800e842:	e581      	b.n	800e348 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e844:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800e848:	3e01      	subs	r6, #1
 800e84a:	445c      	add	r4, fp
 800e84c:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800e850:	f04f 37ff 	mov.w	r7, #4294967295
 800e854:	2500      	movs	r5, #0
 800e856:	9305      	str	r3, [sp, #20]
 800e858:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800e85c:	1e72      	subs	r2, r6, #1
 800e85e:	9302      	str	r3, [sp, #8]
 800e860:	4691      	mov	r9, r2
 800e862:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800e866:	9304      	str	r3, [sp, #16]
 800e868:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800e86c:	f1b9 3fff 	cmp.w	r9, #4294967295
 800e870:	6818      	ldr	r0, [r3, #0]
 800e872:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e876:	9207      	str	r2, [sp, #28]
 800e878:	bf16      	itet	ne
 800e87a:	9905      	ldrne	r1, [sp, #20]
 800e87c:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800e880:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800e884:	9306      	str	r3, [sp, #24]
 800e886:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800e88a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800e88e:	fb18 f801 	smulbb	r8, r8, r1
 800e892:	6859      	ldr	r1, [r3, #4]
 800e894:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e898:	4671      	mov	r1, lr
 800e89a:	a80c      	add	r0, sp, #48	@ 0x30
 800e89c:	f7ff fb6a 	bl	800df74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e8a0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800e8a4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800e8a8:	f04f 0c08 	mov.w	ip, #8
 800e8ac:	9b04      	ldr	r3, [sp, #16]
 800e8ae:	9a02      	ldr	r2, [sp, #8]
 800e8b0:	fb10 f001 	smulbb	r0, r0, r1
 800e8b4:	fb02 8803 	mla	r8, r2, r3, r8
 800e8b8:	eba0 0108 	sub.w	r1, r0, r8
 800e8bc:	fb90 f0fc 	sdiv	r0, r0, ip
 800e8c0:	4288      	cmp	r0, r1
 800e8c2:	dc20      	bgt.n	800e906 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 800e8c4:	4551      	cmp	r1, sl
 800e8c6:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e8ca:	da03      	bge.n	800e8d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 800e8cc:	b1d9      	cbz	r1, 800e906 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 800e8ce:	468a      	mov	sl, r1
 800e8d0:	464f      	mov	r7, r9
 800e8d2:	4635      	mov	r5, r6
 800e8d4:	f109 39ff 	add.w	r9, r9, #4294967295
 800e8d8:	f119 0f02 	cmn.w	r9, #2
 800e8dc:	d1c6      	bne.n	800e86c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 800e8de:	4616      	mov	r6, r2
 800e8e0:	3201      	adds	r2, #1
 800e8e2:	f1a4 0408 	sub.w	r4, r4, #8
 800e8e6:	d1b7      	bne.n	800e858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 800e8e8:	9b01      	ldr	r3, [sp, #4]
 800e8ea:	b2ac      	uxth	r4, r5
 800e8ec:	00ed      	lsls	r5, r5, #3
 800e8ee:	1958      	adds	r0, r3, r5
 800e8f0:	1c7b      	adds	r3, r7, #1
 800e8f2:	d10b      	bne.n	800e90c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 800e8f4:	4601      	mov	r1, r0
 800e8f6:	9803      	ldr	r0, [sp, #12]
 800e8f8:	f7ff fb3c 	bl	800df74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e8fc:	4621      	mov	r1, r4
 800e8fe:	9801      	ldr	r0, [sp, #4]
 800e900:	f7ff fc8e 	bl	800e220 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e904:	e4b6      	b.n	800e274 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e906:	464f      	mov	r7, r9
 800e908:	4635      	mov	r5, r6
 800e90a:	e7ed      	b.n	800e8e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 800e90c:	9b01      	ldr	r3, [sp, #4]
 800e90e:	00ff      	lsls	r7, r7, #3
 800e910:	445d      	add	r5, fp
 800e912:	19d9      	adds	r1, r3, r7
 800e914:	445f      	add	r7, fp
 800e916:	f7ff fb2d 	bl	800df74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e91a:	9b03      	ldr	r3, [sp, #12]
 800e91c:	cb03      	ldmia	r3!, {r0, r1}
 800e91e:	9b03      	ldr	r3, [sp, #12]
 800e920:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800e924:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800e928:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800e92c:	6869      	ldr	r1, [r5, #4]
 800e92e:	c303      	stmia	r3!, {r0, r1}
 800e930:	e7e4      	b.n	800e8fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 800e932:	bf00      	nop

0800e934 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800e934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e938:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800e93c:	b09b      	sub	sp, #108	@ 0x6c
 800e93e:	4604      	mov	r4, r0
 800e940:	4630      	mov	r0, r6
 800e942:	f7fb ffe0 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e946:	4605      	mov	r5, r0
 800e948:	b948      	cbnz	r0, 800e95e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800e94a:	6823      	ldr	r3, [r4, #0]
 800e94c:	4620      	mov	r0, r4
 800e94e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e950:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e954:	4798      	blx	r3
 800e956:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800e95a:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800e95e:	4bc5      	ldr	r3, [pc, #788]	@ (800ec74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 800e960:	681b      	ldr	r3, [r3, #0]
 800e962:	2b00      	cmp	r3, #0
 800e964:	d03f      	beq.n	800e9e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800e966:	4dc4      	ldr	r5, [pc, #784]	@ (800ec78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800e968:	4628      	mov	r0, r5
 800e96a:	f7fb ffcc 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e96e:	4606      	mov	r6, r0
 800e970:	2800      	cmp	r0, #0
 800e972:	d138      	bne.n	800e9e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800e974:	4628      	mov	r0, r5
 800e976:	f7ff f991 	bl	800dc9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e97a:	6823      	ldr	r3, [r4, #0]
 800e97c:	6829      	ldr	r1, [r5, #0]
 800e97e:	4620      	mov	r0, r4
 800e980:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e982:	686a      	ldr	r2, [r5, #4]
 800e984:	4798      	blx	r3
 800e986:	802e      	strh	r6, [r5, #0]
 800e988:	806e      	strh	r6, [r5, #2]
 800e98a:	80ae      	strh	r6, [r5, #4]
 800e98c:	80ee      	strh	r6, [r5, #6]
 800e98e:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800e992:	4dba      	ldr	r5, [pc, #744]	@ (800ec7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800e994:	4640      	mov	r0, r8
 800e996:	f7ff fbe7 	bl	800e168 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e99a:	882e      	ldrh	r6, [r5, #0]
 800e99c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800e9a0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800e9a4:	4633      	mov	r3, r6
 800e9a6:	42bb      	cmp	r3, r7
 800e9a8:	d224      	bcs.n	800e9f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800e9aa:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800e9ae:	2907      	cmp	r1, #7
 800e9b0:	d816      	bhi.n	800e9e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800e9b2:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800e9b6:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800e9ba:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800e9be:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800e9c2:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800e9c6:	1c4a      	adds	r2, r1, #1
 800e9c8:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800e9cc:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800e9d0:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800e9d4:	f8a2 a002 	strh.w	sl, [r2, #2]
 800e9d8:	f8a2 e004 	strh.w	lr, [r2, #4]
 800e9dc:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e9e0:	3301      	adds	r3, #1
 800e9e2:	b29b      	uxth	r3, r3
 800e9e4:	e7df      	b.n	800e9a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800e9e6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800e9ea:	2b00      	cmp	r3, #0
 800e9ec:	d1cf      	bne.n	800e98e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800e9ee:	b01b      	add	sp, #108	@ 0x6c
 800e9f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e9f4:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800e9f8:	42b3      	cmp	r3, r6
 800e9fa:	d90c      	bls.n	800ea16 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800e9fc:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800ea00:	6822      	ldr	r2, [r4, #0]
 800ea02:	3601      	adds	r6, #1
 800ea04:	4620      	mov	r0, r4
 800ea06:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800ea08:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800ea0c:	b2b6      	uxth	r6, r6
 800ea0e:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800ea12:	47b8      	blx	r7
 800ea14:	e7ee      	b.n	800e9f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800ea16:	4a9a      	ldr	r2, [pc, #616]	@ (800ec80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800ea18:	6813      	ldr	r3, [r2, #0]
 800ea1a:	4691      	mov	r9, r2
 800ea1c:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800ea20:	2b01      	cmp	r3, #1
 800ea22:	f040 80e0 	bne.w	800ebe6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 800ea26:	8829      	ldrh	r1, [r5, #0]
 800ea28:	2600      	movs	r6, #0
 800ea2a:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800ea2e:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800ea32:	33ae      	adds	r3, #174	@ 0xae
 800ea34:	428f      	cmp	r7, r1
 800ea36:	f103 0308 	add.w	r3, r3, #8
 800ea3a:	dd0a      	ble.n	800ea52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800ea3c:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800ea40:	3101      	adds	r1, #1
 800ea42:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800ea46:	4402      	add	r2, r0
 800ea48:	b212      	sxth	r2, r2
 800ea4a:	4296      	cmp	r6, r2
 800ea4c:	bfb8      	it	lt
 800ea4e:	4616      	movlt	r6, r2
 800ea50:	e7f0      	b.n	800ea34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800ea52:	4b8c      	ldr	r3, [pc, #560]	@ (800ec84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800ea54:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 800ec80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 800ea58:	881b      	ldrh	r3, [r3, #0]
 800ea5a:	2b0f      	cmp	r3, #15
 800ea5c:	bf8c      	ite	hi
 800ea5e:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800ea62:	f04f 0b01 	movls.w	fp, #1
 800ea66:	2300      	movs	r3, #0
 800ea68:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800ea6c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800ea70:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800ea74:	4b82      	ldr	r3, [pc, #520]	@ (800ec80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800ea76:	4438      	add	r0, r7
 800ea78:	b207      	sxth	r7, r0
 800ea7a:	6818      	ldr	r0, [r3, #0]
 800ea7c:	42b7      	cmp	r7, r6
 800ea7e:	6803      	ldr	r3, [r0, #0]
 800ea80:	f280 8083 	bge.w	800eb8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 800ea84:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800ea88:	4798      	blx	r3
 800ea8a:	eb07 030b 	add.w	r3, r7, fp
 800ea8e:	4298      	cmp	r0, r3
 800ea90:	da07      	bge.n	800eaa2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800ea92:	42b0      	cmp	r0, r6
 800ea94:	da05      	bge.n	800eaa2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800ea96:	4287      	cmp	r7, r0
 800ea98:	dd6c      	ble.n	800eb74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800ea9a:	2f00      	cmp	r7, #0
 800ea9c:	dd6a      	ble.n	800eb74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800ea9e:	4630      	mov	r0, r6
 800eaa0:	e004      	b.n	800eaac <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 800eaa2:	4287      	cmp	r7, r0
 800eaa4:	dcfb      	bgt.n	800ea9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 800eaa6:	42b0      	cmp	r0, r6
 800eaa8:	bfa8      	it	ge
 800eaaa:	4630      	movge	r0, r6
 800eaac:	4b76      	ldr	r3, [pc, #472]	@ (800ec88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800eaae:	1bc0      	subs	r0, r0, r7
 800eab0:	2200      	movs	r2, #0
 800eab2:	f8ad 7016 	strh.w	r7, [sp, #22]
 800eab6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800eaba:	882f      	ldrh	r7, [r5, #0]
 800eabc:	f8ad 2014 	strh.w	r2, [sp, #20]
 800eac0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800eac4:	f8ad 001a 	strh.w	r0, [sp, #26]
 800eac8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800eacc:	42bb      	cmp	r3, r7
 800eace:	d9cd      	bls.n	800ea6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 800ead0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800ead4:	ab07      	add	r3, sp, #28
 800ead6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800eada:	6851      	ldr	r1, [r2, #4]
 800eadc:	c303      	stmia	r3!, {r0, r1}
 800eade:	a905      	add	r1, sp, #20
 800eae0:	a807      	add	r0, sp, #28
 800eae2:	f7ff f9ae 	bl	800de42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800eae6:	2800      	cmp	r0, #0
 800eae8:	d04c      	beq.n	800eb84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 800eaea:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800eaee:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800eaf2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800eaf6:	4686      	mov	lr, r0
 800eaf8:	4290      	cmp	r0, r2
 800eafa:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800eafe:	4450      	add	r0, sl
 800eb00:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800eb04:	bfb8      	it	lt
 800eb06:	4696      	movlt	lr, r2
 800eb08:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800eb0c:	4452      	add	r2, sl
 800eb0e:	b280      	uxth	r0, r0
 800eb10:	4299      	cmp	r1, r3
 800eb12:	468c      	mov	ip, r1
 800eb14:	b292      	uxth	r2, r2
 800eb16:	9302      	str	r3, [sp, #8]
 800eb18:	bfb8      	it	lt
 800eb1a:	469c      	movlt	ip, r3
 800eb1c:	b203      	sxth	r3, r0
 800eb1e:	fa0f fa82 	sxth.w	sl, r2
 800eb22:	f8ad e01c 	strh.w	lr, [sp, #28]
 800eb26:	f8ad c01e 	strh.w	ip, [sp, #30]
 800eb2a:	4553      	cmp	r3, sl
 800eb2c:	bfb8      	it	lt
 800eb2e:	4602      	movlt	r2, r0
 800eb30:	9b02      	ldr	r3, [sp, #8]
 800eb32:	eba2 020e 	sub.w	r2, r2, lr
 800eb36:	f8ad 2020 	strh.w	r2, [sp, #32]
 800eb3a:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800eb3e:	4411      	add	r1, r2
 800eb40:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800eb44:	4413      	add	r3, r2
 800eb46:	b289      	uxth	r1, r1
 800eb48:	b29b      	uxth	r3, r3
 800eb4a:	b208      	sxth	r0, r1
 800eb4c:	b21a      	sxth	r2, r3
 800eb4e:	4290      	cmp	r0, r2
 800eb50:	bfb8      	it	lt
 800eb52:	460b      	movlt	r3, r1
 800eb54:	eba3 030c 	sub.w	r3, r3, ip
 800eb58:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800eb5c:	a807      	add	r0, sp, #28
 800eb5e:	f7fb fed2 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800eb62:	b920      	cbnz	r0, 800eb6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 800eb64:	6823      	ldr	r3, [r4, #0]
 800eb66:	a907      	add	r1, sp, #28
 800eb68:	4620      	mov	r0, r4
 800eb6a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800eb6c:	4798      	blx	r3
 800eb6e:	3701      	adds	r7, #1
 800eb70:	b2bf      	uxth	r7, r7
 800eb72:	e7a9      	b.n	800eac8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 800eb74:	f8d9 0000 	ldr.w	r0, [r9]
 800eb78:	2101      	movs	r1, #1
 800eb7a:	6803      	ldr	r3, [r0, #0]
 800eb7c:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800eb80:	4798      	blx	r3
 800eb82:	e773      	b.n	800ea6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 800eb84:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800eb88:	e7e8      	b.n	800eb5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 800eb8a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800eb8c:	4798      	blx	r3
 800eb8e:	4b3f      	ldr	r3, [pc, #252]	@ (800ec8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800eb90:	781b      	ldrb	r3, [r3, #0]
 800eb92:	2b00      	cmp	r3, #0
 800eb94:	f43f af2b 	beq.w	800e9ee <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800eb98:	2300      	movs	r3, #0
 800eb9a:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800eb9e:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800eba2:	882b      	ldrh	r3, [r5, #0]
 800eba4:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800eba8:	42ab      	cmp	r3, r5
 800ebaa:	f4bf af20 	bcs.w	800e9ee <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800ebae:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800ebb2:	2907      	cmp	r1, #7
 800ebb4:	d814      	bhi.n	800ebe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 800ebb6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800ebba:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800ebbe:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800ebc2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800ebc6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800ebca:	1c4a      	adds	r2, r1, #1
 800ebcc:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800ebd0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800ebd4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800ebd8:	f8a2 c002 	strh.w	ip, [r2, #2]
 800ebdc:	8097      	strh	r7, [r2, #4]
 800ebde:	80d6      	strh	r6, [r2, #6]
 800ebe0:	3301      	adds	r3, #1
 800ebe2:	b29b      	uxth	r3, r3
 800ebe4:	e7e0      	b.n	800eba8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 800ebe6:	2b02      	cmp	r3, #2
 800ebe8:	f040 8133 	bne.w	800ee52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 800ebec:	4b28      	ldr	r3, [pc, #160]	@ (800ec90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800ebee:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800ebf2:	781b      	ldrb	r3, [r3, #0]
 800ebf4:	2b01      	cmp	r3, #1
 800ebf6:	f000 8098 	beq.w	800ed2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800ebfa:	882a      	ldrh	r2, [r5, #0]
 800ebfc:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800ec00:	3201      	adds	r2, #1
 800ec02:	b292      	uxth	r2, r2
 800ec04:	2900      	cmp	r1, #0
 800ec06:	d0c2      	beq.n	800eb8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800ec08:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800ec0c:	4694      	mov	ip, r2
 800ec0e:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800ec12:	f04f 0900 	mov.w	r9, #0
 800ec16:	441e      	add	r6, r3
 800ec18:	b236      	sxth	r6, r6
 800ec1a:	fa1f f38c 	uxth.w	r3, ip
 800ec1e:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800ec22:	4299      	cmp	r1, r3
 800ec24:	f240 80be 	bls.w	800eda4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 800ec28:	4427      	add	r7, r4
 800ec2a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800ec2e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800ec32:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800ec36:	4283      	cmp	r3, r0
 800ec38:	f340 80a0 	ble.w	800ed7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 800ec3c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800ec40:	46e1      	mov	r9, ip
 800ec42:	4406      	add	r6, r0
 800ec44:	b236      	sxth	r6, r6
 800ec46:	429e      	cmp	r6, r3
 800ec48:	bfa8      	it	ge
 800ec4a:	461e      	movge	r6, r3
 800ec4c:	f10c 0c01 	add.w	ip, ip, #1
 800ec50:	e7e3      	b.n	800ec1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 800ec52:	d10a      	bne.n	800ec6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 800ec54:	4562      	cmp	r2, ip
 800ec56:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800ec5a:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800ec5e:	bfb8      	it	lt
 800ec60:	4662      	movlt	r2, ip
 800ec62:	4288      	cmp	r0, r1
 800ec64:	bfb8      	it	lt
 800ec66:	461f      	movlt	r7, r3
 800ec68:	e086      	b.n	800ed78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 800ec6a:	428a      	cmp	r2, r1
 800ec6c:	bfb8      	it	lt
 800ec6e:	460a      	movlt	r2, r1
 800ec70:	e082      	b.n	800ed78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 800ec72:	bf00      	nop
 800ec74:	200150f8 	.word	0x200150f8
 800ec78:	20015104 	.word	0x20015104
 800ec7c:	20000044 	.word	0x20000044
 800ec80:	200150c0 	.word	0x200150c0
 800ec84:	200150b6 	.word	0x200150b6
 800ec88:	200150b4 	.word	0x200150b4
 800ec8c:	200150be 	.word	0x200150be
 800ec90:	200150b8 	.word	0x200150b8
 800ec94:	19a1      	adds	r1, r4, r6
 800ec96:	ab07      	add	r3, sp, #28
 800ec98:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800ec9c:	6849      	ldr	r1, [r1, #4]
 800ec9e:	c303      	stmia	r3!, {r0, r1}
 800eca0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800eca4:	a807      	add	r0, sp, #28
 800eca6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ecaa:	2b13      	cmp	r3, #19
 800ecac:	440b      	add	r3, r1
 800ecae:	bfd8      	it	le
 800ecb0:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800ecb4:	1a9b      	subs	r3, r3, r2
 800ecb6:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ecba:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ecbe:	f7ff f807 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ecc2:	a807      	add	r0, sp, #28
 800ecc4:	f7fb fe1f 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ecc8:	bb78      	cbnz	r0, 800ed2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800ecca:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800ecce:	4426      	add	r6, r4
 800ecd0:	f8d9 0000 	ldr.w	r0, [r9]
 800ecd4:	f1bc 0f14 	cmp.w	ip, #20
 800ecd8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800ecdc:	f8d0 e000 	ldr.w	lr, [r0]
 800ece0:	bfa8      	it	ge
 800ece2:	f04f 0c14 	movge.w	ip, #20
 800ece6:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800ecea:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ecee:	fa1f fc8c 	uxth.w	ip, ip
 800ecf2:	f8cd c000 	str.w	ip, [sp]
 800ecf6:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800ecfa:	47d8      	blx	fp
 800ecfc:	4683      	mov	fp, r0
 800ecfe:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800ed02:	a807      	add	r0, sp, #28
 800ed04:	f7fe ffca 	bl	800dc9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ed08:	6823      	ldr	r3, [r4, #0]
 800ed0a:	4620      	mov	r0, r4
 800ed0c:	a907      	add	r1, sp, #28
 800ed0e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ed10:	4798      	blx	r3
 800ed12:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800ed16:	eba0 000b 	sub.w	r0, r0, fp
 800ed1a:	b200      	sxth	r0, r0
 800ed1c:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800ed20:	b918      	cbnz	r0, 800ed2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800ed22:	b2b9      	uxth	r1, r7
 800ed24:	4650      	mov	r0, sl
 800ed26:	f7ff fa7b 	bl	800e220 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ed2a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800ed2e:	f1bb 0f00 	cmp.w	fp, #0
 800ed32:	f43f af2c 	beq.w	800eb8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800ed36:	882b      	ldrh	r3, [r5, #0]
 800ed38:	2700      	movs	r7, #0
 800ed3a:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800ed3e:	3301      	adds	r3, #1
 800ed40:	b29b      	uxth	r3, r3
 800ed42:	b299      	uxth	r1, r3
 800ed44:	00fe      	lsls	r6, r7, #3
 800ed46:	458b      	cmp	fp, r1
 800ed48:	d9a4      	bls.n	800ec94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 800ed4a:	4426      	add	r6, r4
 800ed4c:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800ed50:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800ed54:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800ed58:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800ed5c:	4408      	add	r0, r1
 800ed5e:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800ed62:	4461      	add	r1, ip
 800ed64:	b200      	sxth	r0, r0
 800ed66:	b209      	sxth	r1, r1
 800ed68:	4288      	cmp	r0, r1
 800ed6a:	f6bf af72 	bge.w	800ec52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 800ed6e:	4584      	cmp	ip, r0
 800ed70:	4662      	mov	r2, ip
 800ed72:	461f      	mov	r7, r3
 800ed74:	bfb8      	it	lt
 800ed76:	4602      	movlt	r2, r0
 800ed78:	3301      	adds	r3, #1
 800ed7a:	e7e2      	b.n	800ed42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 800ed7c:	d10e      	bne.n	800ed9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 800ed7e:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800ed82:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800ed86:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800ed8a:	4473      	add	r3, lr
 800ed8c:	b21b      	sxth	r3, r3
 800ed8e:	429e      	cmp	r6, r3
 800ed90:	bfa8      	it	ge
 800ed92:	461e      	movge	r6, r3
 800ed94:	4287      	cmp	r7, r0
 800ed96:	bfb8      	it	lt
 800ed98:	46e1      	movlt	r9, ip
 800ed9a:	e757      	b.n	800ec4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 800ed9c:	4286      	cmp	r6, r0
 800ed9e:	bfa8      	it	ge
 800eda0:	4606      	movge	r6, r0
 800eda2:	e753      	b.n	800ec4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 800eda4:	eb0a 0007 	add.w	r0, sl, r7
 800eda8:	4427      	add	r7, r4
 800edaa:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800edae:	f1bb 0f13 	cmp.w	fp, #19
 800edb2:	bfdc      	itt	le
 800edb4:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800edb8:	445e      	addle	r6, fp
 800edba:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800edbe:	bfd8      	it	le
 800edc0:	b236      	sxthle	r6, r6
 800edc2:	f7fb fda0 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800edc6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800edca:	2800      	cmp	r0, #0
 800edcc:	f47f af1a 	bne.w	800ec04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 800edd0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800edd4:	fa1f fb8b 	uxth.w	fp, fp
 800edd8:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800eddc:	1ab6      	subs	r6, r6, r2
 800edde:	4829      	ldr	r0, [pc, #164]	@ (800ee84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 800ede0:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800ede4:	2e14      	cmp	r6, #20
 800ede6:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800edea:	6800      	ldr	r0, [r0, #0]
 800edec:	bfa8      	it	ge
 800edee:	2614      	movge	r6, #20
 800edf0:	f8ad 101c 	strh.w	r1, [sp, #28]
 800edf4:	f8ad 201e 	strh.w	r2, [sp, #30]
 800edf8:	b289      	uxth	r1, r1
 800edfa:	f8ad 3020 	strh.w	r3, [sp, #32]
 800edfe:	b2b6      	uxth	r6, r6
 800ee00:	f8d0 c000 	ldr.w	ip, [r0]
 800ee04:	b292      	uxth	r2, r2
 800ee06:	455e      	cmp	r6, fp
 800ee08:	bf94      	ite	ls
 800ee0a:	9600      	strls	r6, [sp, #0]
 800ee0c:	f8cd b000 	strhi.w	fp, [sp]
 800ee10:	b29b      	uxth	r3, r3
 800ee12:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800ee16:	47b0      	blx	r6
 800ee18:	6823      	ldr	r3, [r4, #0]
 800ee1a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800ee1e:	a907      	add	r1, sp, #28
 800ee20:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ee22:	4620      	mov	r0, r4
 800ee24:	4798      	blx	r3
 800ee26:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800ee2a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800ee2e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800ee32:	1a5b      	subs	r3, r3, r1
 800ee34:	440a      	add	r2, r1
 800ee36:	b21b      	sxth	r3, r3
 800ee38:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800ee3c:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800ee40:	2b00      	cmp	r3, #0
 800ee42:	f47f aeda 	bne.w	800ebfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 800ee46:	fa1f f189 	uxth.w	r1, r9
 800ee4a:	4650      	mov	r0, sl
 800ee4c:	f7ff f9e8 	bl	800e220 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ee50:	e6d3      	b.n	800ebfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 800ee52:	882e      	ldrh	r6, [r5, #0]
 800ee54:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800ee58:	42b3      	cmp	r3, r6
 800ee5a:	f67f ae98 	bls.w	800eb8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800ee5e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800ee62:	ab07      	add	r3, sp, #28
 800ee64:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800ee68:	6851      	ldr	r1, [r2, #4]
 800ee6a:	c303      	stmia	r3!, {r0, r1}
 800ee6c:	a807      	add	r0, sp, #28
 800ee6e:	f7fb fd4a 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ee72:	b920      	cbnz	r0, 800ee7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 800ee74:	6823      	ldr	r3, [r4, #0]
 800ee76:	a907      	add	r1, sp, #28
 800ee78:	4620      	mov	r0, r4
 800ee7a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ee7c:	4798      	blx	r3
 800ee7e:	3601      	adds	r6, #1
 800ee80:	b2b6      	uxth	r6, r6
 800ee82:	e7e7      	b.n	800ee54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 800ee84:	200150c0 	.word	0x200150c0

0800ee88 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800ee88:	4b03      	ldr	r3, [pc, #12]	@ (800ee98 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800ee8a:	2200      	movs	r2, #0
 800ee8c:	801a      	strh	r2, [r3, #0]
 800ee8e:	805a      	strh	r2, [r3, #2]
 800ee90:	809a      	strh	r2, [r3, #4]
 800ee92:	80da      	strh	r2, [r3, #6]
 800ee94:	4770      	bx	lr
 800ee96:	bf00      	nop
 800ee98:	20015104 	.word	0x20015104

0800ee9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ee9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eea0:	b09d      	sub	sp, #116	@ 0x74
 800eea2:	4606      	mov	r6, r0
 800eea4:	4614      	mov	r4, r2
 800eea6:	468a      	mov	sl, r1
 800eea8:	a803      	add	r0, sp, #12
 800eeaa:	461d      	mov	r5, r3
 800eeac:	f000 fd7a 	bl	800f9a4 <_ZN8touchgfx12TextProviderC1Ev>
 800eeb0:	6833      	ldr	r3, [r6, #0]
 800eeb2:	4630      	mov	r0, r6
 800eeb4:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800eeb8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800eeba:	4798      	blx	r3
 800eebc:	6833      	ldr	r3, [r6, #0]
 800eebe:	4607      	mov	r7, r0
 800eec0:	4630      	mov	r0, r6
 800eec2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800eec4:	4798      	blx	r3
 800eec6:	462a      	mov	r2, r5
 800eec8:	2500      	movs	r5, #0
 800eeca:	4621      	mov	r1, r4
 800eecc:	9000      	str	r0, [sp, #0]
 800eece:	463b      	mov	r3, r7
 800eed0:	462c      	mov	r4, r5
 800eed2:	46a9      	mov	r9, r5
 800eed4:	46a8      	mov	r8, r5
 800eed6:	a803      	add	r0, sp, #12
 800eed8:	f000 fdbf 	bl	800fa5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800eedc:	2300      	movs	r3, #0
 800eede:	9302      	str	r3, [sp, #8]
 800eee0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800eee4:	429c      	cmp	r4, r3
 800eee6:	d002      	beq.n	800eeee <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800eee8:	455c      	cmp	r4, fp
 800eeea:	bf18      	it	ne
 800eeec:	4625      	movne	r5, r4
 800eeee:	ab02      	add	r3, sp, #8
 800eef0:	4632      	mov	r2, r6
 800eef2:	4651      	mov	r1, sl
 800eef4:	a803      	add	r0, sp, #12
 800eef6:	f001 f8b5 	bl	8010064 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800eefa:	4604      	mov	r4, r0
 800eefc:	b108      	cbz	r0, 800ef02 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800eefe:	280a      	cmp	r0, #10
 800ef00:	d10a      	bne.n	800ef18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800ef02:	45c1      	cmp	r9, r8
 800ef04:	bf38      	it	cc
 800ef06:	46c1      	movcc	r9, r8
 800ef08:	f04f 0800 	mov.w	r8, #0
 800ef0c:	2c00      	cmp	r4, #0
 800ef0e:	d1e5      	bne.n	800eedc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ef10:	4648      	mov	r0, r9
 800ef12:	b01d      	add	sp, #116	@ 0x74
 800ef14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef18:	9a02      	ldr	r2, [sp, #8]
 800ef1a:	2a00      	cmp	r2, #0
 800ef1c:	d0de      	beq.n	800eedc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ef1e:	7b57      	ldrb	r7, [r2, #13]
 800ef20:	4629      	mov	r1, r5
 800ef22:	6833      	ldr	r3, [r6, #0]
 800ef24:	007f      	lsls	r7, r7, #1
 800ef26:	8894      	ldrh	r4, [r2, #4]
 800ef28:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ef2a:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 800ef2e:	7a97      	ldrb	r7, [r2, #10]
 800ef30:	4307      	orrs	r7, r0
 800ef32:	4630      	mov	r0, r6
 800ef34:	4798      	blx	r3
 800ef36:	4438      	add	r0, r7
 800ef38:	4480      	add	r8, r0
 800ef3a:	fa1f f888 	uxth.w	r8, r8
 800ef3e:	e7e5      	b.n	800ef0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800ef40 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ef40:	b508      	push	{r3, lr}
 800ef42:	6803      	ldr	r3, [r0, #0]
 800ef44:	68db      	ldr	r3, [r3, #12]
 800ef46:	4798      	blx	r3
 800ef48:	b128      	cbz	r0, 800ef56 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ef4a:	7b43      	ldrb	r3, [r0, #13]
 800ef4c:	7a80      	ldrb	r0, [r0, #10]
 800ef4e:	005b      	lsls	r3, r3, #1
 800ef50:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ef54:	4318      	orrs	r0, r3
 800ef56:	bd08      	pop	{r3, pc}

0800ef58 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800ef58:	b40e      	push	{r1, r2, r3}
 800ef5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef5c:	b09e      	sub	sp, #120	@ 0x78
 800ef5e:	4605      	mov	r5, r0
 800ef60:	ab23      	add	r3, sp, #140	@ 0x8c
 800ef62:	a805      	add	r0, sp, #20
 800ef64:	f853 4b04 	ldr.w	r4, [r3], #4
 800ef68:	9303      	str	r3, [sp, #12]
 800ef6a:	f000 fd1b 	bl	800f9a4 <_ZN8touchgfx12TextProviderC1Ev>
 800ef6e:	682b      	ldr	r3, [r5, #0]
 800ef70:	4628      	mov	r0, r5
 800ef72:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ef74:	4798      	blx	r3
 800ef76:	682b      	ldr	r3, [r5, #0]
 800ef78:	4606      	mov	r6, r0
 800ef7a:	4628      	mov	r0, r5
 800ef7c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ef7e:	4798      	blx	r3
 800ef80:	4633      	mov	r3, r6
 800ef82:	4621      	mov	r1, r4
 800ef84:	ae1e      	add	r6, sp, #120	@ 0x78
 800ef86:	2400      	movs	r4, #0
 800ef88:	9000      	str	r0, [sp, #0]
 800ef8a:	9a03      	ldr	r2, [sp, #12]
 800ef8c:	a805      	add	r0, sp, #20
 800ef8e:	f000 fd64 	bl	800fa5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ef92:	f846 4d68 	str.w	r4, [r6, #-104]!
 800ef96:	462a      	mov	r2, r5
 800ef98:	4633      	mov	r3, r6
 800ef9a:	4621      	mov	r1, r4
 800ef9c:	a805      	add	r0, sp, #20
 800ef9e:	f001 f861 	bl	8010064 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800efa2:	b300      	cbz	r0, 800efe6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 800efa4:	280a      	cmp	r0, #10
 800efa6:	d01a      	beq.n	800efde <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 800efa8:	9f04      	ldr	r7, [sp, #16]
 800efaa:	b1c7      	cbz	r7, 800efde <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 800efac:	7b78      	ldrb	r0, [r7, #13]
 800efae:	7a3b      	ldrb	r3, [r7, #8]
 800efb0:	00c1      	lsls	r1, r0, #3
 800efb2:	88ea      	ldrh	r2, [r5, #6]
 800efb4:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800efb8:	4319      	orrs	r1, r3
 800efba:	0643      	lsls	r3, r0, #25
 800efbc:	ea4f 1000 	mov.w	r0, r0, lsl #4
 800efc0:	bf48      	it	mi
 800efc2:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 800efc6:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800efca:	bf48      	it	mi
 800efcc:	b219      	sxthmi	r1, r3
 800efce:	79fb      	ldrb	r3, [r7, #7]
 800efd0:	4303      	orrs	r3, r0
 800efd2:	4413      	add	r3, r2
 800efd4:	1a5b      	subs	r3, r3, r1
 800efd6:	b21b      	sxth	r3, r3
 800efd8:	429c      	cmp	r4, r3
 800efda:	bfb8      	it	lt
 800efdc:	461c      	movlt	r4, r3
 800efde:	4633      	mov	r3, r6
 800efe0:	462a      	mov	r2, r5
 800efe2:	2100      	movs	r1, #0
 800efe4:	e7da      	b.n	800ef9c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800efe6:	b2a0      	uxth	r0, r4
 800efe8:	b01e      	add	sp, #120	@ 0x78
 800efea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800efee:	b003      	add	sp, #12
 800eff0:	4770      	bx	lr

0800eff2 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800eff2:	7a43      	ldrb	r3, [r0, #9]
 800eff4:	8880      	ldrh	r0, [r0, #4]
 800eff6:	4418      	add	r0, r3
 800eff8:	b280      	uxth	r0, r0
 800effa:	4770      	bx	lr

0800effc <_ZNK8touchgfx4Font13getFontHeightEv>:
 800effc:	6803      	ldr	r3, [r0, #0]
 800effe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f000:	4718      	bx	r3

0800f002 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800f002:	b40e      	push	{r1, r2, r3}
 800f004:	b570      	push	{r4, r5, r6, lr}
 800f006:	b09d      	sub	sp, #116	@ 0x74
 800f008:	4604      	mov	r4, r0
 800f00a:	ab21      	add	r3, sp, #132	@ 0x84
 800f00c:	a803      	add	r0, sp, #12
 800f00e:	f853 5b04 	ldr.w	r5, [r3], #4
 800f012:	9302      	str	r3, [sp, #8]
 800f014:	f000 fcc6 	bl	800f9a4 <_ZN8touchgfx12TextProviderC1Ev>
 800f018:	6823      	ldr	r3, [r4, #0]
 800f01a:	4620      	mov	r0, r4
 800f01c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f01e:	4798      	blx	r3
 800f020:	6823      	ldr	r3, [r4, #0]
 800f022:	4606      	mov	r6, r0
 800f024:	4620      	mov	r0, r4
 800f026:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f028:	2401      	movs	r4, #1
 800f02a:	4798      	blx	r3
 800f02c:	4633      	mov	r3, r6
 800f02e:	9000      	str	r0, [sp, #0]
 800f030:	4629      	mov	r1, r5
 800f032:	9a02      	ldr	r2, [sp, #8]
 800f034:	a803      	add	r0, sp, #12
 800f036:	f000 fd10 	bl	800fa5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f03a:	a803      	add	r0, sp, #12
 800f03c:	f001 f8de 	bl	80101fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f040:	b2a3      	uxth	r3, r4
 800f042:	b138      	cbz	r0, 800f054 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 800f044:	280a      	cmp	r0, #10
 800f046:	a803      	add	r0, sp, #12
 800f048:	bf04      	itt	eq
 800f04a:	3301      	addeq	r3, #1
 800f04c:	b21c      	sxtheq	r4, r3
 800f04e:	f001 f8d5 	bl	80101fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f052:	e7f5      	b.n	800f040 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800f054:	4618      	mov	r0, r3
 800f056:	b01d      	add	sp, #116	@ 0x74
 800f058:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f05c:	b003      	add	sp, #12
 800f05e:	4770      	bx	lr

0800f060 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800f060:	b40e      	push	{r1, r2, r3}
 800f062:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f064:	b09e      	sub	sp, #120	@ 0x78
 800f066:	4604      	mov	r4, r0
 800f068:	ab23      	add	r3, sp, #140	@ 0x8c
 800f06a:	a805      	add	r0, sp, #20
 800f06c:	f853 5b04 	ldr.w	r5, [r3], #4
 800f070:	9303      	str	r3, [sp, #12]
 800f072:	f000 fc97 	bl	800f9a4 <_ZN8touchgfx12TextProviderC1Ev>
 800f076:	6823      	ldr	r3, [r4, #0]
 800f078:	4620      	mov	r0, r4
 800f07a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f07c:	4798      	blx	r3
 800f07e:	6823      	ldr	r3, [r4, #0]
 800f080:	4606      	mov	r6, r0
 800f082:	4620      	mov	r0, r4
 800f084:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f086:	4798      	blx	r3
 800f088:	4633      	mov	r3, r6
 800f08a:	4629      	mov	r1, r5
 800f08c:	9000      	str	r0, [sp, #0]
 800f08e:	9a03      	ldr	r2, [sp, #12]
 800f090:	a805      	add	r0, sp, #20
 800f092:	f000 fce2 	bl	800fa5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f096:	ad1e      	add	r5, sp, #120	@ 0x78
 800f098:	2100      	movs	r1, #0
 800f09a:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 800f09e:	4622      	mov	r2, r4
 800f0a0:	a805      	add	r0, sp, #20
 800f0a2:	f845 1d68 	str.w	r1, [r5, #-104]!
 800f0a6:	462b      	mov	r3, r5
 800f0a8:	f000 ffdc 	bl	8010064 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f0ac:	b1d8      	cbz	r0, 800f0e6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800f0ae:	280a      	cmp	r0, #10
 800f0b0:	d012      	beq.n	800f0d8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800f0b2:	9804      	ldr	r0, [sp, #16]
 800f0b4:	b180      	cbz	r0, 800f0d8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800f0b6:	7b47      	ldrb	r7, [r0, #13]
 800f0b8:	88e2      	ldrh	r2, [r4, #6]
 800f0ba:	00fb      	lsls	r3, r7, #3
 800f0bc:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f0c0:	7a03      	ldrb	r3, [r0, #8]
 800f0c2:	430b      	orrs	r3, r1
 800f0c4:	0679      	lsls	r1, r7, #25
 800f0c6:	bf44      	itt	mi
 800f0c8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f0cc:	b21b      	sxthmi	r3, r3
 800f0ce:	1ad3      	subs	r3, r2, r3
 800f0d0:	b21b      	sxth	r3, r3
 800f0d2:	429e      	cmp	r6, r3
 800f0d4:	bfa8      	it	ge
 800f0d6:	461e      	movge	r6, r3
 800f0d8:	462b      	mov	r3, r5
 800f0da:	4622      	mov	r2, r4
 800f0dc:	2100      	movs	r1, #0
 800f0de:	a805      	add	r0, sp, #20
 800f0e0:	f000 ffc0 	bl	8010064 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f0e4:	e7e2      	b.n	800f0ac <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800f0e6:	4630      	mov	r0, r6
 800f0e8:	b01e      	add	sp, #120	@ 0x78
 800f0ea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f0ee:	b003      	add	sp, #12
 800f0f0:	4770      	bx	lr

0800f0f2 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800f0f2:	b513      	push	{r0, r1, r4, lr}
 800f0f4:	6803      	ldr	r3, [r0, #0]
 800f0f6:	2400      	movs	r4, #0
 800f0f8:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f0fc:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f100:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f104:	4669      	mov	r1, sp
 800f106:	691b      	ldr	r3, [r3, #16]
 800f108:	9400      	str	r4, [sp, #0]
 800f10a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f10e:	4798      	blx	r3
 800f110:	b002      	add	sp, #8
 800f112:	bd10      	pop	{r4, pc}

0800f114 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800f114:	b538      	push	{r3, r4, r5, lr}
 800f116:	680b      	ldr	r3, [r1, #0]
 800f118:	460c      	mov	r4, r1
 800f11a:	4605      	mov	r5, r0
 800f11c:	68db      	ldr	r3, [r3, #12]
 800f11e:	4798      	blx	r3
 800f120:	6823      	ldr	r3, [r4, #0]
 800f122:	4620      	mov	r0, r4
 800f124:	4629      	mov	r1, r5
 800f126:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f128:	4798      	blx	r3
 800f12a:	4628      	mov	r0, r5
 800f12c:	bd38      	pop	{r3, r4, r5, pc}

0800f12e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800f12e:	b410      	push	{r4}
 800f130:	880a      	ldrh	r2, [r1, #0]
 800f132:	8884      	ldrh	r4, [r0, #4]
 800f134:	4422      	add	r2, r4
 800f136:	800a      	strh	r2, [r1, #0]
 800f138:	884a      	ldrh	r2, [r1, #2]
 800f13a:	88c4      	ldrh	r4, [r0, #6]
 800f13c:	4422      	add	r2, r4
 800f13e:	804a      	strh	r2, [r1, #2]
 800f140:	6940      	ldr	r0, [r0, #20]
 800f142:	b120      	cbz	r0, 800f14e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800f144:	6803      	ldr	r3, [r0, #0]
 800f146:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f14a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f14c:	4718      	bx	r3
 800f14e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f152:	4770      	bx	lr

0800f154 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800f154:	b570      	push	{r4, r5, r6, lr}
 800f156:	8882      	ldrh	r2, [r0, #4]
 800f158:	460c      	mov	r4, r1
 800f15a:	880b      	ldrh	r3, [r1, #0]
 800f15c:	4605      	mov	r5, r0
 800f15e:	4413      	add	r3, r2
 800f160:	800b      	strh	r3, [r1, #0]
 800f162:	884b      	ldrh	r3, [r1, #2]
 800f164:	88c2      	ldrh	r2, [r0, #6]
 800f166:	4413      	add	r3, r2
 800f168:	804b      	strh	r3, [r1, #2]
 800f16a:	1d01      	adds	r1, r0, #4
 800f16c:	4620      	mov	r0, r4
 800f16e:	f7fb fb87 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 800f172:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f176:	2b00      	cmp	r3, #0
 800f178:	dd0b      	ble.n	800f192 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f17a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f17e:	2b00      	cmp	r3, #0
 800f180:	dd07      	ble.n	800f192 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f182:	6968      	ldr	r0, [r5, #20]
 800f184:	b128      	cbz	r0, 800f192 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f186:	6803      	ldr	r3, [r0, #0]
 800f188:	4621      	mov	r1, r4
 800f18a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f18c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f190:	4718      	bx	r3
 800f192:	bd70      	pop	{r4, r5, r6, pc}

0800f194 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800f194:	b570      	push	{r4, r5, r6, lr}
 800f196:	8882      	ldrh	r2, [r0, #4]
 800f198:	460c      	mov	r4, r1
 800f19a:	880b      	ldrh	r3, [r1, #0]
 800f19c:	4605      	mov	r5, r0
 800f19e:	4413      	add	r3, r2
 800f1a0:	800b      	strh	r3, [r1, #0]
 800f1a2:	884b      	ldrh	r3, [r1, #2]
 800f1a4:	88c2      	ldrh	r2, [r0, #6]
 800f1a6:	4413      	add	r3, r2
 800f1a8:	804b      	strh	r3, [r1, #2]
 800f1aa:	1d01      	adds	r1, r0, #4
 800f1ac:	4620      	mov	r0, r4
 800f1ae:	f7fb fb67 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 800f1b2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f1b6:	2b00      	cmp	r3, #0
 800f1b8:	dd19      	ble.n	800f1ee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800f1ba:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f1be:	2b00      	cmp	r3, #0
 800f1c0:	dd15      	ble.n	800f1ee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800f1c2:	6968      	ldr	r0, [r5, #20]
 800f1c4:	b128      	cbz	r0, 800f1d2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800f1c6:	6803      	ldr	r3, [r0, #0]
 800f1c8:	4621      	mov	r1, r4
 800f1ca:	691b      	ldr	r3, [r3, #16]
 800f1cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f1d0:	4718      	bx	r3
 800f1d2:	4b07      	ldr	r3, [pc, #28]	@ (800f1f0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800f1d4:	681b      	ldr	r3, [r3, #0]
 800f1d6:	3304      	adds	r3, #4
 800f1d8:	429d      	cmp	r5, r3
 800f1da:	d108      	bne.n	800f1ee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800f1dc:	f7fe ff10 	bl	800e000 <_ZN8touchgfx11Application11getInstanceEv>
 800f1e0:	6803      	ldr	r3, [r0, #0]
 800f1e2:	6821      	ldr	r1, [r4, #0]
 800f1e4:	6862      	ldr	r2, [r4, #4]
 800f1e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f1e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f1ec:	4718      	bx	r3
 800f1ee:	bd70      	pop	{r4, r5, r6, pc}
 800f1f0:	200150fc 	.word	0x200150fc

0800f1f4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800f1f4:	b570      	push	{r4, r5, r6, lr}
 800f1f6:	4604      	mov	r4, r0
 800f1f8:	4616      	mov	r6, r2
 800f1fa:	460d      	mov	r5, r1
 800f1fc:	b901      	cbnz	r1, 800f200 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800f1fe:	b192      	cbz	r2, 800f226 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800f200:	6823      	ldr	r3, [r4, #0]
 800f202:	4620      	mov	r0, r4
 800f204:	699b      	ldr	r3, [r3, #24]
 800f206:	4798      	blx	r3
 800f208:	88e2      	ldrh	r2, [r4, #6]
 800f20a:	88a1      	ldrh	r1, [r4, #4]
 800f20c:	4620      	mov	r0, r4
 800f20e:	4432      	add	r2, r6
 800f210:	4429      	add	r1, r5
 800f212:	b212      	sxth	r2, r2
 800f214:	b209      	sxth	r1, r1
 800f216:	f7f3 f83a 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 800f21a:	6823      	ldr	r3, [r4, #0]
 800f21c:	4620      	mov	r0, r4
 800f21e:	699b      	ldr	r3, [r3, #24]
 800f220:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f224:	4718      	bx	r3
 800f226:	bd70      	pop	{r4, r5, r6, pc}

0800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800f228:	b510      	push	{r4, lr}
 800f22a:	2300      	movs	r3, #0
 800f22c:	4604      	mov	r4, r0
 800f22e:	4608      	mov	r0, r1
 800f230:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800f234:	8023      	strh	r3, [r4, #0]
 800f236:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f23a:	8063      	strh	r3, [r4, #2]
 800f23c:	6803      	ldr	r3, [r0, #0]
 800f23e:	80a1      	strh	r1, [r4, #4]
 800f240:	4621      	mov	r1, r4
 800f242:	80e2      	strh	r2, [r4, #6]
 800f244:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f246:	4798      	blx	r3
 800f248:	4620      	mov	r0, r4
 800f24a:	bd10      	pop	{r4, pc}

0800f24c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800f24c:	b530      	push	{r4, r5, lr}
 800f24e:	8083      	strh	r3, [r0, #4]
 800f250:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800f254:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800f258:	80c3      	strh	r3, [r0, #6]
 800f25a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800f25e:	6141      	str	r1, [r0, #20]
 800f260:	7203      	strb	r3, [r0, #8]
 800f262:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f266:	8302      	strh	r2, [r0, #24]
 800f268:	7243      	strb	r3, [r0, #9]
 800f26a:	7a83      	ldrb	r3, [r0, #10]
 800f26c:	f365 0306 	bfi	r3, r5, #0, #7
 800f270:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800f274:	f365 13c7 	bfi	r3, r5, #7, #1
 800f278:	7283      	strb	r3, [r0, #10]
 800f27a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800f27e:	72c3      	strb	r3, [r0, #11]
 800f280:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 800f284:	7303      	strb	r3, [r0, #12]
 800f286:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 800f28a:	81c3      	strh	r3, [r0, #14]
 800f28c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800f290:	8203      	strh	r3, [r0, #16]
 800f292:	4b01      	ldr	r3, [pc, #4]	@ (800f298 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800f294:	6003      	str	r3, [r0, #0]
 800f296:	bd30      	pop	{r4, r5, pc}
 800f298:	080216b0 	.word	0x080216b0

0800f29c <_ZNK8touchgfx9ConstFont4findEt>:
 800f29c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f29e:	6944      	ldr	r4, [r0, #20]
 800f2a0:	b3bc      	cbz	r4, 800f312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f2a2:	88a3      	ldrh	r3, [r4, #4]
 800f2a4:	8b02      	ldrh	r2, [r0, #24]
 800f2a6:	1acb      	subs	r3, r1, r3
 800f2a8:	f102 32ff 	add.w	r2, r2, #4294967295
 800f2ac:	d431      	bmi.n	800f312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f2ae:	4293      	cmp	r3, r2
 800f2b0:	dd0c      	ble.n	800f2cc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800f2b2:	230e      	movs	r3, #14
 800f2b4:	fb03 4302 	mla	r3, r3, r2, r4
 800f2b8:	889b      	ldrh	r3, [r3, #4]
 800f2ba:	1a5b      	subs	r3, r3, r1
 800f2bc:	1ad3      	subs	r3, r2, r3
 800f2be:	429a      	cmp	r2, r3
 800f2c0:	db27      	blt.n	800f312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f2c2:	2b00      	cmp	r3, #0
 800f2c4:	bfbc      	itt	lt
 800f2c6:	2302      	movlt	r3, #2
 800f2c8:	fb92 f3f3 	sdivlt	r3, r2, r3
 800f2cc:	2500      	movs	r5, #0
 800f2ce:	260e      	movs	r6, #14
 800f2d0:	4295      	cmp	r5, r2
 800f2d2:	dc1e      	bgt.n	800f312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f2d4:	fb06 4003 	mla	r0, r6, r3, r4
 800f2d8:	8887      	ldrh	r7, [r0, #4]
 800f2da:	42b9      	cmp	r1, r7
 800f2dc:	d01a      	beq.n	800f314 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800f2de:	d20d      	bcs.n	800f2fc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800f2e0:	1e5a      	subs	r2, r3, #1
 800f2e2:	4295      	cmp	r5, r2
 800f2e4:	dc15      	bgt.n	800f312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f2e6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800f2ea:	1a5b      	subs	r3, r3, r1
 800f2ec:	1ad3      	subs	r3, r2, r3
 800f2ee:	429a      	cmp	r2, r3
 800f2f0:	db0f      	blt.n	800f312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f2f2:	429d      	cmp	r5, r3
 800f2f4:	ddec      	ble.n	800f2d0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f2f6:	1953      	adds	r3, r2, r5
 800f2f8:	105b      	asrs	r3, r3, #1
 800f2fa:	e7e9      	b.n	800f2d0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f2fc:	1c5d      	adds	r5, r3, #1
 800f2fe:	42aa      	cmp	r2, r5
 800f300:	db07      	blt.n	800f312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f302:	8a43      	ldrh	r3, [r0, #18]
 800f304:	1acb      	subs	r3, r1, r3
 800f306:	442b      	add	r3, r5
 800f308:	429d      	cmp	r5, r3
 800f30a:	dc02      	bgt.n	800f312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f30c:	429a      	cmp	r2, r3
 800f30e:	dadf      	bge.n	800f2d0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f310:	e7f1      	b.n	800f2f6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800f312:	2000      	movs	r0, #0
 800f314:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f316 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800f316:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f318:	4604      	mov	r4, r0
 800f31a:	4617      	mov	r7, r2
 800f31c:	461e      	mov	r6, r3
 800f31e:	b911      	cbnz	r1, 800f326 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800f320:	2500      	movs	r5, #0
 800f322:	4628      	mov	r0, r5
 800f324:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f326:	290a      	cmp	r1, #10
 800f328:	d0fa      	beq.n	800f320 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f32a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800f32e:	4291      	cmp	r1, r2
 800f330:	d0f6      	beq.n	800f320 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f332:	f242 020b 	movw	r2, #8203	@ 0x200b
 800f336:	4291      	cmp	r1, r2
 800f338:	d0f2      	beq.n	800f320 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f33a:	f7ff ffaf 	bl	800f29c <_ZNK8touchgfx9ConstFont4findEt>
 800f33e:	4605      	mov	r5, r0
 800f340:	b950      	cbnz	r0, 800f358 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800f342:	6823      	ldr	r3, [r4, #0]
 800f344:	4620      	mov	r0, r4
 800f346:	691b      	ldr	r3, [r3, #16]
 800f348:	4798      	blx	r3
 800f34a:	4601      	mov	r1, r0
 800f34c:	4620      	mov	r0, r4
 800f34e:	f7ff ffa5 	bl	800f29c <_ZNK8touchgfx9ConstFont4findEt>
 800f352:	4605      	mov	r5, r0
 800f354:	2800      	cmp	r0, #0
 800f356:	d0e3      	beq.n	800f320 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f358:	6823      	ldr	r3, [r4, #0]
 800f35a:	4629      	mov	r1, r5
 800f35c:	4620      	mov	r0, r4
 800f35e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f360:	4798      	blx	r3
 800f362:	6038      	str	r0, [r7, #0]
 800f364:	6823      	ldr	r3, [r4, #0]
 800f366:	4620      	mov	r0, r4
 800f368:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f36a:	4798      	blx	r3
 800f36c:	7030      	strb	r0, [r6, #0]
 800f36e:	e7d8      	b.n	800f322 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800f370 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800f370:	2000      	movs	r0, #0
 800f372:	4770      	bx	lr

0800f374 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800f374:	2001      	movs	r0, #1
 800f376:	4770      	bx	lr

0800f378 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800f378:	2002      	movs	r0, #2
 800f37a:	4770      	bx	lr

0800f37c <_ZN8touchgfx6ScreenD1Ev>:
 800f37c:	4770      	bx	lr

0800f37e <_ZN8touchgfx12GestureEventD1Ev>:
 800f37e:	4770      	bx	lr

0800f380 <_ZN8touchgfx9DragEventD1Ev>:
 800f380:	4770      	bx	lr

0800f382 <_ZN8touchgfx10ClickEventD1Ev>:
 800f382:	4770      	bx	lr

0800f384 <_ZN8touchgfx10ClickEventD0Ev>:
 800f384:	b510      	push	{r4, lr}
 800f386:	4604      	mov	r4, r0
 800f388:	210c      	movs	r1, #12
 800f38a:	f00f fae8 	bl	801e95e <_ZdlPvj>
 800f38e:	4620      	mov	r0, r4
 800f390:	bd10      	pop	{r4, pc}

0800f392 <_ZN8touchgfx9DragEventD0Ev>:
 800f392:	b510      	push	{r4, lr}
 800f394:	4604      	mov	r4, r0
 800f396:	2110      	movs	r1, #16
 800f398:	f00f fae1 	bl	801e95e <_ZdlPvj>
 800f39c:	4620      	mov	r0, r4
 800f39e:	bd10      	pop	{r4, pc}

0800f3a0 <_ZN8touchgfx12GestureEventD0Ev>:
 800f3a0:	b510      	push	{r4, lr}
 800f3a2:	4604      	mov	r4, r0
 800f3a4:	210c      	movs	r1, #12
 800f3a6:	f00f fada 	bl	801e95e <_ZdlPvj>
 800f3aa:	4620      	mov	r0, r4
 800f3ac:	bd10      	pop	{r4, pc}

0800f3ae <_ZN8touchgfx6ScreenD0Ev>:
 800f3ae:	b510      	push	{r4, lr}
 800f3b0:	4604      	mov	r4, r0
 800f3b2:	213c      	movs	r1, #60	@ 0x3c
 800f3b4:	f00f fad3 	bl	801e95e <_ZdlPvj>
 800f3b8:	4620      	mov	r0, r4
 800f3ba:	bd10      	pop	{r4, pc}

0800f3bc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800f3bc:	b530      	push	{r4, r5, lr}
 800f3be:	460d      	mov	r5, r1
 800f3c0:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800f3c2:	b087      	sub	sp, #28
 800f3c4:	4604      	mov	r4, r0
 800f3c6:	b301      	cbz	r1, 800f40a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800f3c8:	a801      	add	r0, sp, #4
 800f3ca:	f7ff ff2d 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f3ce:	892a      	ldrh	r2, [r5, #8]
 800f3d0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f3d4:	7928      	ldrb	r0, [r5, #4]
 800f3d6:	1ad2      	subs	r2, r2, r3
 800f3d8:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800f3da:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f3de:	441a      	add	r2, r3
 800f3e0:	896b      	ldrh	r3, [r5, #10]
 800f3e2:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800f3e6:	f88d 0010 	strb.w	r0, [sp, #16]
 800f3ea:	1b5b      	subs	r3, r3, r5
 800f3ec:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 800f3ee:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800f3f0:	442b      	add	r3, r5
 800f3f2:	4d07      	ldr	r5, [pc, #28]	@ (800f410 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800f3f4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800f3f8:	a903      	add	r1, sp, #12
 800f3fa:	9503      	str	r5, [sp, #12]
 800f3fc:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f400:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f404:	6803      	ldr	r3, [r0, #0]
 800f406:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f408:	4798      	blx	r3
 800f40a:	b007      	add	sp, #28
 800f40c:	bd30      	pop	{r4, r5, pc}
 800f40e:	bf00      	nop
 800f410:	08021740 	.word	0x08021740

0800f414 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800f414:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f418:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800f41a:	b08a      	sub	sp, #40	@ 0x28
 800f41c:	4604      	mov	r4, r0
 800f41e:	460d      	mov	r5, r1
 800f420:	b113      	cbz	r3, 800f428 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800f422:	790b      	ldrb	r3, [r1, #4]
 800f424:	2b00      	cmp	r3, #0
 800f426:	d044      	beq.n	800f4b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f428:	f104 0804 	add.w	r8, r4, #4
 800f42c:	a803      	add	r0, sp, #12
 800f42e:	4641      	mov	r1, r8
 800f430:	f7ff fefa 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f434:	792b      	ldrb	r3, [r5, #4]
 800f436:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800f43a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800f43e:	b983      	cbnz	r3, 800f462 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800f440:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 800f444:	892a      	ldrh	r2, [r5, #8]
 800f446:	88e9      	ldrh	r1, [r5, #6]
 800f448:	4640      	mov	r0, r8
 800f44a:	1b92      	subs	r2, r2, r6
 800f44c:	9301      	str	r3, [sp, #4]
 800f44e:	1bc9      	subs	r1, r1, r7
 800f450:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 800f454:	b212      	sxth	r2, r2
 800f456:	9300      	str	r3, [sp, #0]
 800f458:	b209      	sxth	r1, r1
 800f45a:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 800f45e:	f7fb f92d 	bl	800a6bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800f462:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800f464:	b329      	cbz	r1, 800f4b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f466:	a805      	add	r0, sp, #20
 800f468:	f7ff fede 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f46c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800f470:	792b      	ldrb	r3, [r5, #4]
 800f472:	a907      	add	r1, sp, #28
 800f474:	1abf      	subs	r7, r7, r2
 800f476:	88ea      	ldrh	r2, [r5, #6]
 800f478:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800f47a:	4417      	add	r7, r2
 800f47c:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 800f47e:	f88d 3020 	strb.w	r3, [sp, #32]
 800f482:	4417      	add	r7, r2
 800f484:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800f488:	1ab6      	subs	r6, r6, r2
 800f48a:	892a      	ldrh	r2, [r5, #8]
 800f48c:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800f490:	4416      	add	r6, r2
 800f492:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800f494:	4416      	add	r6, r2
 800f496:	4a08      	ldr	r2, [pc, #32]	@ (800f4b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800f498:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800f49c:	2600      	movs	r6, #0
 800f49e:	9207      	str	r2, [sp, #28]
 800f4a0:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 800f4a4:	6803      	ldr	r3, [r0, #0]
 800f4a6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f4a8:	4798      	blx	r3
 800f4aa:	792b      	ldrb	r3, [r5, #4]
 800f4ac:	b10b      	cbz	r3, 800f4b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f4ae:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800f4b2:	b00a      	add	sp, #40	@ 0x28
 800f4b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f4b8:	08021718 	.word	0x08021718

0800f4bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800f4bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f4c0:	460c      	mov	r4, r1
 800f4c2:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800f4c4:	b088      	sub	sp, #32
 800f4c6:	4605      	mov	r5, r0
 800f4c8:	2900      	cmp	r1, #0
 800f4ca:	d06d      	beq.n	800f5a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800f4cc:	4668      	mov	r0, sp
 800f4ce:	f7ff feab 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f4d2:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 800f4d4:	88e3      	ldrh	r3, [r4, #6]
 800f4d6:	f9bd 8000 	ldrsh.w	r8, [sp]
 800f4da:	440b      	add	r3, r1
 800f4dc:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800f4e0:	b21b      	sxth	r3, r3
 800f4e2:	4543      	cmp	r3, r8
 800f4e4:	db31      	blt.n	800f54a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f4e6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800f4ea:	44c4      	add	ip, r8
 800f4ec:	fa0f fc8c 	sxth.w	ip, ip
 800f4f0:	4563      	cmp	r3, ip
 800f4f2:	da2a      	bge.n	800f54a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f4f4:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 800f4f6:	8926      	ldrh	r6, [r4, #8]
 800f4f8:	4416      	add	r6, r2
 800f4fa:	b236      	sxth	r6, r6
 800f4fc:	42be      	cmp	r6, r7
 800f4fe:	db24      	blt.n	800f54a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f500:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800f504:	4438      	add	r0, r7
 800f506:	b200      	sxth	r0, r0
 800f508:	4286      	cmp	r6, r0
 800f50a:	da1e      	bge.n	800f54a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f50c:	8963      	ldrh	r3, [r4, #10]
 800f50e:	4419      	add	r1, r3
 800f510:	b209      	sxth	r1, r1
 800f512:	4541      	cmp	r1, r8
 800f514:	db08      	blt.n	800f528 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f516:	4561      	cmp	r1, ip
 800f518:	da06      	bge.n	800f528 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f51a:	89a3      	ldrh	r3, [r4, #12]
 800f51c:	441a      	add	r2, r3
 800f51e:	b212      	sxth	r2, r2
 800f520:	42ba      	cmp	r2, r7
 800f522:	db01      	blt.n	800f528 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f524:	4282      	cmp	r2, r0
 800f526:	db10      	blt.n	800f54a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f528:	4b21      	ldr	r3, [pc, #132]	@ (800f5b0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800f52a:	a904      	add	r1, sp, #16
 800f52c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800f52e:	9304      	str	r3, [sp, #16]
 800f530:	2302      	movs	r3, #2
 800f532:	f88d 3014 	strb.w	r3, [sp, #20]
 800f536:	2300      	movs	r3, #0
 800f538:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f53c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f540:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f544:	6803      	ldr	r3, [r0, #0]
 800f546:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f548:	4798      	blx	r3
 800f54a:	1d29      	adds	r1, r5, #4
 800f54c:	a802      	add	r0, sp, #8
 800f54e:	f7ff fe6b 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f552:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f556:	88e0      	ldrh	r0, [r4, #6]
 800f558:	eba3 0808 	sub.w	r8, r3, r8
 800f55c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f560:	7921      	ldrb	r1, [r4, #4]
 800f562:	fa1f f888 	uxth.w	r8, r8
 800f566:	1bdf      	subs	r7, r3, r7
 800f568:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 800f56c:	b2bb      	uxth	r3, r7
 800f56e:	4440      	add	r0, r8
 800f570:	8922      	ldrh	r2, [r4, #8]
 800f572:	8967      	ldrh	r7, [r4, #10]
 800f574:	4460      	add	r0, ip
 800f576:	89a4      	ldrh	r4, [r4, #12]
 800f578:	441a      	add	r2, r3
 800f57a:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 800f57c:	44b8      	add	r8, r7
 800f57e:	4423      	add	r3, r4
 800f580:	f8ad 0016 	strh.w	r0, [sp, #22]
 800f584:	4432      	add	r2, r6
 800f586:	44e0      	add	r8, ip
 800f588:	4433      	add	r3, r6
 800f58a:	4c0a      	ldr	r4, [pc, #40]	@ (800f5b4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800f58c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800f58e:	f88d 1014 	strb.w	r1, [sp, #20]
 800f592:	a904      	add	r1, sp, #16
 800f594:	9404      	str	r4, [sp, #16]
 800f596:	f8ad 2018 	strh.w	r2, [sp, #24]
 800f59a:	f8ad 801a 	strh.w	r8, [sp, #26]
 800f59e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f5a2:	6803      	ldr	r3, [r0, #0]
 800f5a4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f5a6:	4798      	blx	r3
 800f5a8:	b008      	add	sp, #32
 800f5aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f5ae:	bf00      	nop
 800f5b0:	08021718 	.word	0x08021718
 800f5b4:	0802172c 	.word	0x0802172c

0800f5b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800f5b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f5ba:	4604      	mov	r4, r0
 800f5bc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800f5c0:	3201      	adds	r2, #1
 800f5c2:	d112      	bne.n	800f5ea <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800f5c4:	2500      	movs	r5, #0
 800f5c6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f5ca:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f5ce:	6803      	ldr	r3, [r0, #0]
 800f5d0:	9500      	str	r5, [sp, #0]
 800f5d2:	466d      	mov	r5, sp
 800f5d4:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f5d8:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f5dc:	4629      	mov	r1, r5
 800f5de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f5e0:	4798      	blx	r3
 800f5e2:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f5e6:	e884 0003 	stmia.w	r4, {r0, r1}
 800f5ea:	4620      	mov	r0, r4
 800f5ec:	b003      	add	sp, #12
 800f5ee:	bd30      	pop	{r4, r5, pc}

0800f5f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800f5f0:	b513      	push	{r0, r1, r4, lr}
 800f5f2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800f5f6:	4604      	mov	r4, r0
 800f5f8:	3301      	adds	r3, #1
 800f5fa:	d109      	bne.n	800f610 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800f5fc:	4601      	mov	r1, r0
 800f5fe:	4668      	mov	r0, sp
 800f600:	f7ff fe12 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f604:	f8bd 3000 	ldrh.w	r3, [sp]
 800f608:	8423      	strh	r3, [r4, #32]
 800f60a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f60e:	8463      	strh	r3, [r4, #34]	@ 0x22
 800f610:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800f614:	b002      	add	sp, #8
 800f616:	bd10      	pop	{r4, pc}

0800f618 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800f618:	b513      	push	{r0, r1, r4, lr}
 800f61a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 800f61e:	4604      	mov	r4, r0
 800f620:	3301      	adds	r3, #1
 800f622:	d109      	bne.n	800f638 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800f624:	4601      	mov	r1, r0
 800f626:	4668      	mov	r0, sp
 800f628:	f7ff fdfe 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f62c:	f8bd 3000 	ldrh.w	r3, [sp]
 800f630:	8423      	strh	r3, [r4, #32]
 800f632:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f636:	8463      	strh	r3, [r4, #34]	@ 0x22
 800f638:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 800f63c:	b002      	add	sp, #8
 800f63e:	bd10      	pop	{r4, pc}

0800f640 <_ZN8touchgfx6ScreenC1Ev>:
 800f640:	b570      	push	{r4, r5, r6, lr}
 800f642:	4b17      	ldr	r3, [pc, #92]	@ (800f6a0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800f644:	4605      	mov	r5, r0
 800f646:	4a17      	ldr	r2, [pc, #92]	@ (800f6a4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800f648:	2101      	movs	r1, #1
 800f64a:	f845 3b04 	str.w	r3, [r5], #4
 800f64e:	2300      	movs	r3, #0
 800f650:	6042      	str	r2, [r0, #4]
 800f652:	4604      	mov	r4, r0
 800f654:	8103      	strh	r3, [r0, #8]
 800f656:	8143      	strh	r3, [r0, #10]
 800f658:	8183      	strh	r3, [r0, #12]
 800f65a:	81c3      	strh	r3, [r0, #14]
 800f65c:	8203      	strh	r3, [r0, #16]
 800f65e:	8243      	strh	r3, [r0, #18]
 800f660:	8283      	strh	r3, [r0, #20]
 800f662:	82c3      	strh	r3, [r0, #22]
 800f664:	6203      	str	r3, [r0, #32]
 800f666:	8483      	strh	r3, [r0, #36]	@ 0x24
 800f668:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800f66a:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 800f66e:	6343      	str	r3, [r0, #52]	@ 0x34
 800f670:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800f674:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 800f678:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800f67c:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 800f680:	4b09      	ldr	r3, [pc, #36]	@ (800f6a8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800f682:	4628      	mov	r0, r5
 800f684:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f688:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800f68a:	4a08      	ldr	r2, [pc, #32]	@ (800f6ac <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800f68c:	f9b2 1000 	ldrsh.w	r1, [r2]
 800f690:	4798      	blx	r3
 800f692:	6863      	ldr	r3, [r4, #4]
 800f694:	4628      	mov	r0, r5
 800f696:	4631      	mov	r1, r6
 800f698:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f69a:	4798      	blx	r3
 800f69c:	4620      	mov	r0, r4
 800f69e:	bd70      	pop	{r4, r5, r6, pc}
 800f6a0:	08021754 	.word	0x08021754
 800f6a4:	0802126c 	.word	0x0802126c
 800f6a8:	200150b6 	.word	0x200150b6
 800f6ac:	200150b4 	.word	0x200150b4

0800f6b0 <_ZN8touchgfx6Screen4drawEv>:
 800f6b0:	4b09      	ldr	r3, [pc, #36]	@ (800f6d8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800f6b2:	b507      	push	{r0, r1, r2, lr}
 800f6b4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f6b8:	2100      	movs	r1, #0
 800f6ba:	4b08      	ldr	r3, [pc, #32]	@ (800f6dc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800f6bc:	9100      	str	r1, [sp, #0]
 800f6be:	4669      	mov	r1, sp
 800f6c0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f6c4:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f6c8:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f6cc:	6803      	ldr	r3, [r0, #0]
 800f6ce:	689b      	ldr	r3, [r3, #8]
 800f6d0:	4798      	blx	r3
 800f6d2:	b003      	add	sp, #12
 800f6d4:	f85d fb04 	ldr.w	pc, [sp], #4
 800f6d8:	200150b4 	.word	0x200150b4
 800f6dc:	200150b6 	.word	0x200150b6

0800f6e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800f6e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6e4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800f6e8:	b089      	sub	sp, #36	@ 0x24
 800f6ea:	4680      	mov	r8, r0
 800f6ec:	460c      	mov	r4, r1
 800f6ee:	2b00      	cmp	r3, #0
 800f6f0:	4615      	mov	r5, r2
 800f6f2:	dd0e      	ble.n	800f712 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f6f4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f6f8:	2b00      	cmp	r3, #0
 800f6fa:	dd0a      	ble.n	800f712 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f6fc:	4628      	mov	r0, r5
 800f6fe:	f7ff ff5b 	bl	800f5b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f702:	4621      	mov	r1, r4
 800f704:	f7fe fb9d 	bl	800de42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f708:	69eb      	ldr	r3, [r5, #28]
 800f70a:	b928      	cbnz	r0, 800f718 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800f70c:	461d      	mov	r5, r3
 800f70e:	2b00      	cmp	r3, #0
 800f710:	d1f4      	bne.n	800f6fc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800f712:	b009      	add	sp, #36	@ 0x24
 800f714:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f718:	ae04      	add	r6, sp, #16
 800f71a:	2b00      	cmp	r3, #0
 800f71c:	f000 80b5 	beq.w	800f88a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f720:	682b      	ldr	r3, [r5, #0]
 800f722:	4629      	mov	r1, r5
 800f724:	a802      	add	r0, sp, #8
 800f726:	68db      	ldr	r3, [r3, #12]
 800f728:	4798      	blx	r3
 800f72a:	4628      	mov	r0, r5
 800f72c:	f7ff ff60 	bl	800f5f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f730:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800f734:	4407      	add	r7, r0
 800f736:	4628      	mov	r0, r5
 800f738:	f7ff ff6e 	bl	800f618 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f73c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f740:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f744:	b23f      	sxth	r7, r7
 800f746:	4418      	add	r0, r3
 800f748:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f74c:	4621      	mov	r1, r4
 800f74e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f752:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f756:	4630      	mov	r0, r6
 800f758:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f75c:	f8ad 7010 	strh.w	r7, [sp, #16]
 800f760:	f7fb f88e 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 800f764:	4628      	mov	r0, r5
 800f766:	f7ff ff27 	bl	800f5b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f76a:	ab06      	add	r3, sp, #24
 800f76c:	4602      	mov	r2, r0
 800f76e:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f772:	e883 0003 	stmia.w	r3, {r0, r1}
 800f776:	4611      	mov	r1, r2
 800f778:	4618      	mov	r0, r3
 800f77a:	f7fb f881 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 800f77e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f782:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f786:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800f78a:	4299      	cmp	r1, r3
 800f78c:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800f790:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800f794:	d10b      	bne.n	800f7ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f796:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f79a:	4552      	cmp	r2, sl
 800f79c:	d107      	bne.n	800f7ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f79e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f7a2:	455a      	cmp	r2, fp
 800f7a4:	d103      	bne.n	800f7ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f7a6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f7aa:	454a      	cmp	r2, r9
 800f7ac:	d06d      	beq.n	800f88a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f7ae:	f1bb 0f00 	cmp.w	fp, #0
 800f7b2:	dd65      	ble.n	800f880 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f7b4:	f1b9 0f00 	cmp.w	r9, #0
 800f7b8:	dd62      	ble.n	800f880 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f7ba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f7be:	fa1f f08a 	uxth.w	r0, sl
 800f7c2:	4552      	cmp	r2, sl
 800f7c4:	9000      	str	r0, [sp, #0]
 800f7c6:	da12      	bge.n	800f7ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800f7c8:	9301      	str	r3, [sp, #4]
 800f7ca:	9b00      	ldr	r3, [sp, #0]
 800f7cc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f7d0:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f7d4:	1a9a      	subs	r2, r3, r2
 800f7d6:	f8ad 1010 	strh.w	r1, [sp, #16]
 800f7da:	4631      	mov	r1, r6
 800f7dc:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f7e0:	4640      	mov	r0, r8
 800f7e2:	f8ad 2016 	strh.w	r2, [sp, #22]
 800f7e6:	69ea      	ldr	r2, [r5, #28]
 800f7e8:	f7ff ff7a 	bl	800f6e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f7ec:	9b01      	ldr	r3, [sp, #4]
 800f7ee:	f9b4 2000 	ldrsh.w	r2, [r4]
 800f7f2:	b29f      	uxth	r7, r3
 800f7f4:	429a      	cmp	r2, r3
 800f7f6:	da0d      	bge.n	800f814 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800f7f8:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f7fc:	1aba      	subs	r2, r7, r2
 800f7fe:	f8ad a012 	strh.w	sl, [sp, #18]
 800f802:	4631      	mov	r1, r6
 800f804:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f808:	4640      	mov	r0, r8
 800f80a:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f80e:	69ea      	ldr	r2, [r5, #28]
 800f810:	f7ff ff66 	bl	800f6e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f814:	8822      	ldrh	r2, [r4, #0]
 800f816:	445f      	add	r7, fp
 800f818:	88a3      	ldrh	r3, [r4, #4]
 800f81a:	b2bf      	uxth	r7, r7
 800f81c:	4413      	add	r3, r2
 800f81e:	b23a      	sxth	r2, r7
 800f820:	b29b      	uxth	r3, r3
 800f822:	b219      	sxth	r1, r3
 800f824:	4291      	cmp	r1, r2
 800f826:	dd0d      	ble.n	800f844 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800f828:	1bdb      	subs	r3, r3, r7
 800f82a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f82e:	f8ad a012 	strh.w	sl, [sp, #18]
 800f832:	4631      	mov	r1, r6
 800f834:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f838:	4640      	mov	r0, r8
 800f83a:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f83e:	69ea      	ldr	r2, [r5, #28]
 800f840:	f7ff ff4e 	bl	800f6e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f844:	88e2      	ldrh	r2, [r4, #6]
 800f846:	8863      	ldrh	r3, [r4, #2]
 800f848:	4413      	add	r3, r2
 800f84a:	9a00      	ldr	r2, [sp, #0]
 800f84c:	444a      	add	r2, r9
 800f84e:	b29b      	uxth	r3, r3
 800f850:	fa1f f982 	uxth.w	r9, r2
 800f854:	b219      	sxth	r1, r3
 800f856:	fa0f f289 	sxth.w	r2, r9
 800f85a:	428a      	cmp	r2, r1
 800f85c:	da15      	bge.n	800f88a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f85e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f862:	eba3 0309 	sub.w	r3, r3, r9
 800f866:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f86a:	f8ad 1014 	strh.w	r1, [sp, #20]
 800f86e:	4631      	mov	r1, r6
 800f870:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f874:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f878:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f87c:	69ea      	ldr	r2, [r5, #28]
 800f87e:	e001      	b.n	800f884 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800f880:	69ea      	ldr	r2, [r5, #28]
 800f882:	4621      	mov	r1, r4
 800f884:	4640      	mov	r0, r8
 800f886:	f7ff ff2b 	bl	800f6e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f88a:	4628      	mov	r0, r5
 800f88c:	f7ff fe94 	bl	800f5b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f890:	6861      	ldr	r1, [r4, #4]
 800f892:	4602      	mov	r2, r0
 800f894:	4633      	mov	r3, r6
 800f896:	6820      	ldr	r0, [r4, #0]
 800f898:	c303      	stmia	r3!, {r0, r1}
 800f89a:	4611      	mov	r1, r2
 800f89c:	4630      	mov	r0, r6
 800f89e:	f7fa ffef 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 800f8a2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f8a6:	2b00      	cmp	r3, #0
 800f8a8:	f77f af33 	ble.w	800f712 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f8ac:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f8b0:	2b00      	cmp	r3, #0
 800f8b2:	f77f af2e 	ble.w	800f712 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f8b6:	4628      	mov	r0, r5
 800f8b8:	f7ff fe9a 	bl	800f5f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f8bc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800f8c0:	1a18      	subs	r0, r3, r0
 800f8c2:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f8c6:	4628      	mov	r0, r5
 800f8c8:	f7ff fea6 	bl	800f618 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f8cc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f8d0:	4631      	mov	r1, r6
 800f8d2:	1a18      	subs	r0, r3, r0
 800f8d4:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f8d8:	4628      	mov	r0, r5
 800f8da:	682b      	ldr	r3, [r5, #0]
 800f8dc:	689b      	ldr	r3, [r3, #8]
 800f8de:	4798      	blx	r3
 800f8e0:	e717      	b.n	800f712 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800f8e2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800f8e2:	b570      	push	{r4, r5, r6, lr}
 800f8e4:	1d06      	adds	r6, r0, #4
 800f8e6:	b086      	sub	sp, #24
 800f8e8:	460c      	mov	r4, r1
 800f8ea:	2300      	movs	r3, #0
 800f8ec:	4631      	mov	r1, r6
 800f8ee:	4605      	mov	r5, r0
 800f8f0:	a802      	add	r0, sp, #8
 800f8f2:	9301      	str	r3, [sp, #4]
 800f8f4:	f7ff fc98 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f8f8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f8fc:	8822      	ldrh	r2, [r4, #0]
 800f8fe:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800f902:	1ad2      	subs	r2, r2, r3
 800f904:	8863      	ldrh	r3, [r4, #2]
 800f906:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f90a:	1a5b      	subs	r3, r3, r1
 800f90c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800f910:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f914:	aa01      	add	r2, sp, #4
 800f916:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f91a:	4630      	mov	r0, r6
 800f91c:	f8ad 1016 	strh.w	r1, [sp, #22]
 800f920:	a904      	add	r1, sp, #16
 800f922:	f8ad 3012 	strh.w	r3, [sp, #18]
 800f926:	f7fb f883 	bl	800aa30 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800f92a:	9a01      	ldr	r2, [sp, #4]
 800f92c:	b11a      	cbz	r2, 800f936 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800f92e:	4621      	mov	r1, r4
 800f930:	4628      	mov	r0, r5
 800f932:	f7ff fed5 	bl	800f6e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f936:	b006      	add	sp, #24
 800f938:	bd70      	pop	{r4, r5, r6, pc}

0800f93a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800f93a:	4602      	mov	r2, r0
 800f93c:	b530      	push	{r4, r5, lr}
 800f93e:	4604      	mov	r4, r0
 800f940:	b085      	sub	sp, #20
 800f942:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f946:	460d      	mov	r5, r1
 800f948:	466b      	mov	r3, sp
 800f94a:	6851      	ldr	r1, [r2, #4]
 800f94c:	c303      	stmia	r3!, {r0, r1}
 800f94e:	4629      	mov	r1, r5
 800f950:	4668      	mov	r0, sp
 800f952:	f7fa ff95 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 800f956:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800f95a:	b12b      	cbz	r3, 800f968 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800f95c:	4669      	mov	r1, sp
 800f95e:	4620      	mov	r0, r4
 800f960:	f7ff ffbf 	bl	800f8e2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f964:	b005      	add	sp, #20
 800f966:	bd30      	pop	{r4, r5, pc}
 800f968:	3404      	adds	r4, #4
 800f96a:	a802      	add	r0, sp, #8
 800f96c:	4621      	mov	r1, r4
 800f96e:	f7ff fc5b 	bl	800f228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f972:	f8bd 3000 	ldrh.w	r3, [sp]
 800f976:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f97a:	4669      	mov	r1, sp
 800f97c:	4620      	mov	r0, r4
 800f97e:	1a9b      	subs	r3, r3, r2
 800f980:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800f984:	f8ad 3000 	strh.w	r3, [sp]
 800f988:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f98c:	1a9b      	subs	r3, r3, r2
 800f98e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f992:	f7fb f814 	bl	800a9be <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f996:	e7e5      	b.n	800f964 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800f998 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f998:	460b      	mov	r3, r1
 800f99a:	680a      	ldr	r2, [r1, #0]
 800f99c:	1d01      	adds	r1, r0, #4
 800f99e:	6992      	ldr	r2, [r2, #24]
 800f9a0:	4618      	mov	r0, r3
 800f9a2:	4710      	bx	r2

0800f9a4 <_ZN8touchgfx12TextProviderC1Ev>:
 800f9a4:	b538      	push	{r3, r4, r5, lr}
 800f9a6:	2500      	movs	r5, #0
 800f9a8:	2302      	movs	r3, #2
 800f9aa:	4604      	mov	r4, r0
 800f9ac:	220e      	movs	r2, #14
 800f9ae:	7403      	strb	r3, [r0, #16]
 800f9b0:	4629      	mov	r1, r5
 800f9b2:	6145      	str	r5, [r0, #20]
 800f9b4:	7605      	strb	r5, [r0, #24]
 800f9b6:	83c5      	strh	r5, [r0, #30]
 800f9b8:	8405      	strh	r5, [r0, #32]
 800f9ba:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800f9bc:	8705      	strh	r5, [r0, #56]	@ 0x38
 800f9be:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 800f9c0:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 800f9c4:	e9c0 5500 	strd	r5, r5, [r0]
 800f9c8:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 800f9cc:	304c      	adds	r0, #76	@ 0x4c
 800f9ce:	f00f fa91 	bl	801eef4 <memset>
 800f9d2:	2301      	movs	r3, #1
 800f9d4:	4620      	mov	r0, r4
 800f9d6:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 800f9da:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f9de:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 800f9e2:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 800f9e6:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 800f9ea:	f7f3 fbb7 	bl	800315c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800f9ee:	4620      	mov	r0, r4
 800f9f0:	bd38      	pop	{r3, r4, r5, pc}

0800f9f2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 800f9f2:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f9f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f9f8:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 800f9fa:	fab0 f080 	clz	r0, r0
 800f9fe:	0940      	lsrs	r0, r0, #5
 800fa00:	4770      	bx	lr

0800fa02 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800fa02:	b530      	push	{r4, r5, lr}
 800fa04:	2500      	movs	r5, #0
 800fa06:	2401      	movs	r4, #1
 800fa08:	6843      	ldr	r3, [r0, #4]
 800fa0a:	b913      	cbnz	r3, 800fa12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800fa0c:	6803      	ldr	r3, [r0, #0]
 800fa0e:	b313      	cbz	r3, 800fa56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800fa10:	6043      	str	r3, [r0, #4]
 800fa12:	7e03      	ldrb	r3, [r0, #24]
 800fa14:	b143      	cbz	r3, 800fa28 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800fa16:	6943      	ldr	r3, [r0, #20]
 800fa18:	b12b      	cbz	r3, 800fa26 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800fa1a:	881a      	ldrh	r2, [r3, #0]
 800fa1c:	b11a      	cbz	r2, 800fa26 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800fa1e:	1c9a      	adds	r2, r3, #2
 800fa20:	6142      	str	r2, [r0, #20]
 800fa22:	8818      	ldrh	r0, [r3, #0]
 800fa24:	bd30      	pop	{r4, r5, pc}
 800fa26:	7605      	strb	r5, [r0, #24]
 800fa28:	6843      	ldr	r3, [r0, #4]
 800fa2a:	8819      	ldrh	r1, [r3, #0]
 800fa2c:	b199      	cbz	r1, 800fa56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800fa2e:	1c9a      	adds	r2, r3, #2
 800fa30:	2902      	cmp	r1, #2
 800fa32:	6042      	str	r2, [r0, #4]
 800fa34:	d1f5      	bne.n	800fa22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800fa36:	7c03      	ldrb	r3, [r0, #16]
 800fa38:	2b01      	cmp	r3, #1
 800fa3a:	d8e5      	bhi.n	800fa08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800fa3c:	1c5a      	adds	r2, r3, #1
 800fa3e:	3302      	adds	r3, #2
 800fa40:	7402      	strb	r2, [r0, #16]
 800fa42:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800fa46:	6143      	str	r3, [r0, #20]
 800fa48:	2b00      	cmp	r3, #0
 800fa4a:	d0dd      	beq.n	800fa08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800fa4c:	881b      	ldrh	r3, [r3, #0]
 800fa4e:	2b00      	cmp	r3, #0
 800fa50:	d0da      	beq.n	800fa08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800fa52:	7604      	strb	r4, [r0, #24]
 800fa54:	e7d8      	b.n	800fa08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800fa56:	2000      	movs	r0, #0
 800fa58:	e7e4      	b.n	800fa24 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800fa5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800fa5a:	6001      	str	r1, [r0, #0]
 800fa5c:	2100      	movs	r1, #0
 800fa5e:	b430      	push	{r4, r5}
 800fa60:	6041      	str	r1, [r0, #4]
 800fa62:	6815      	ldr	r5, [r2, #0]
 800fa64:	6085      	str	r5, [r0, #8]
 800fa66:	6852      	ldr	r2, [r2, #4]
 800fa68:	6443      	str	r3, [r0, #68]	@ 0x44
 800fa6a:	9b02      	ldr	r3, [sp, #8]
 800fa6c:	60c2      	str	r2, [r0, #12]
 800fa6e:	7401      	strb	r1, [r0, #16]
 800fa70:	6141      	str	r1, [r0, #20]
 800fa72:	7601      	strb	r1, [r0, #24]
 800fa74:	8701      	strh	r1, [r0, #56]	@ 0x38
 800fa76:	8401      	strh	r1, [r0, #32]
 800fa78:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 800fa7c:	6483      	str	r3, [r0, #72]	@ 0x48
 800fa7e:	bc30      	pop	{r4, r5}
 800fa80:	f7f3 bb6c 	b.w	800315c <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800fa84 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 800fa84:	b408      	push	{r3}
 800fa86:	b510      	push	{r4, lr}
 800fa88:	b085      	sub	sp, #20
 800fa8a:	ac07      	add	r4, sp, #28
 800fa8c:	f854 3b04 	ldr.w	r3, [r4], #4
 800fa90:	9300      	str	r3, [sp, #0]
 800fa92:	4613      	mov	r3, r2
 800fa94:	4622      	mov	r2, r4
 800fa96:	9403      	str	r4, [sp, #12]
 800fa98:	f7ff ffdf 	bl	800fa5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fa9c:	b005      	add	sp, #20
 800fa9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800faa2:	b001      	add	sp, #4
 800faa4:	4770      	bx	lr

0800faa6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800faa6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800faa8:	4605      	mov	r5, r0
 800faaa:	4608      	mov	r0, r1
 800faac:	b1f1      	cbz	r1, 800faec <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 800faae:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 800fab2:	460b      	mov	r3, r1
 800fab4:	f101 0708 	add.w	r7, r1, #8
 800fab8:	4622      	mov	r2, r4
 800faba:	6818      	ldr	r0, [r3, #0]
 800fabc:	3308      	adds	r3, #8
 800fabe:	f853 1c04 	ldr.w	r1, [r3, #-4]
 800fac2:	4626      	mov	r6, r4
 800fac4:	42bb      	cmp	r3, r7
 800fac6:	c603      	stmia	r6!, {r0, r1}
 800fac8:	4634      	mov	r4, r6
 800faca:	d1f6      	bne.n	800faba <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800facc:	6818      	ldr	r0, [r3, #0]
 800face:	6030      	str	r0, [r6, #0]
 800fad0:	4610      	mov	r0, r2
 800fad2:	889b      	ldrh	r3, [r3, #4]
 800fad4:	80b3      	strh	r3, [r6, #4]
 800fad6:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 800fada:	015b      	lsls	r3, r3, #5
 800fadc:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800fae0:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 800fae4:	430b      	orrs	r3, r1
 800fae6:	425b      	negs	r3, r3
 800fae8:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 800faec:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800faee <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800faee:	b538      	push	{r3, r4, r5, lr}
 800faf0:	460c      	mov	r4, r1
 800faf2:	6811      	ldr	r1, [r2, #0]
 800faf4:	4610      	mov	r0, r2
 800faf6:	68cd      	ldr	r5, [r1, #12]
 800faf8:	4619      	mov	r1, r3
 800fafa:	47a8      	blx	r5
 800fafc:	2800      	cmp	r0, #0
 800fafe:	bf08      	it	eq
 800fb00:	4620      	moveq	r0, r4
 800fb02:	bd38      	pop	{r3, r4, r5, pc}

0800fb04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800fb04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fb06:	4604      	mov	r4, r0
 800fb08:	4615      	mov	r5, r2
 800fb0a:	4608      	mov	r0, r1
 800fb0c:	b93a      	cbnz	r2, 800fb1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800fb0e:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800fb12:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 800fb16:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 800fb1a:	4628      	mov	r0, r5
 800fb1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fb1e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800fb22:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 800fb26:	8893      	ldrh	r3, [r2, #4]
 800fb28:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800fb2c:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800fb30:	79ee      	ldrb	r6, [r5, #7]
 800fb32:	4316      	orrs	r6, r2
 800fb34:	19da      	adds	r2, r3, r7
 800fb36:	b291      	uxth	r1, r2
 800fb38:	b2b7      	uxth	r7, r6
 800fb3a:	291d      	cmp	r1, #29
 800fb3c:	d87b      	bhi.n	800fc36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 800fb3e:	2201      	movs	r2, #1
 800fb40:	10f6      	asrs	r6, r6, #3
 800fb42:	408a      	lsls	r2, r1
 800fb44:	4974      	ldr	r1, [pc, #464]	@ (800fd18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 800fb46:	420a      	tst	r2, r1
 800fb48:	d12e      	bne.n	800fba8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800fb4a:	f412 7f60 	tst.w	r2, #896	@ 0x380
 800fb4e:	d072      	beq.n	800fc36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 800fb50:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 800fb54:	462b      	mov	r3, r5
 800fb56:	f105 0e08 	add.w	lr, r5, #8
 800fb5a:	4615      	mov	r5, r2
 800fb5c:	6818      	ldr	r0, [r3, #0]
 800fb5e:	3308      	adds	r3, #8
 800fb60:	f853 1c04 	ldr.w	r1, [r3, #-4]
 800fb64:	4694      	mov	ip, r2
 800fb66:	4573      	cmp	r3, lr
 800fb68:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800fb6c:	4662      	mov	r2, ip
 800fb6e:	d1f5      	bne.n	800fb5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 800fb70:	6818      	ldr	r0, [r3, #0]
 800fb72:	f8cc 0000 	str.w	r0, [ip]
 800fb76:	889b      	ldrh	r3, [r3, #4]
 800fb78:	f8ac 3004 	strh.w	r3, [ip, #4]
 800fb7c:	b2b3      	uxth	r3, r6
 800fb7e:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 800fb82:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 800fb86:	1aca      	subs	r2, r1, r3
 800fb88:	1bcf      	subs	r7, r1, r7
 800fb8a:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 800fb8e:	b292      	uxth	r2, r2
 800fb90:	1afb      	subs	r3, r7, r3
 800fb92:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800fb96:	10d2      	asrs	r2, r2, #3
 800fb98:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 800fb9c:	4302      	orrs	r2, r0
 800fb9e:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 800fba2:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800fba6:	e7b8      	b.n	800fb1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800fba8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800fbaa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fbae:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 800fbb0:	f640 6333 	movw	r3, #3635	@ 0xe33
 800fbb4:	4299      	cmp	r1, r3
 800fbb6:	d110      	bne.n	800fbda <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 800fbb8:	6803      	ldr	r3, [r0, #0]
 800fbba:	68db      	ldr	r3, [r3, #12]
 800fbbc:	4798      	blx	r3
 800fbbe:	7b41      	ldrb	r1, [r0, #13]
 800fbc0:	00cb      	lsls	r3, r1, #3
 800fbc2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fbc6:	7a03      	ldrb	r3, [r0, #8]
 800fbc8:	0648      	lsls	r0, r1, #25
 800fbca:	ea43 0302 	orr.w	r3, r3, r2
 800fbce:	bf44      	itt	mi
 800fbd0:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fbd4:	b21b      	sxthmi	r3, r3
 800fbd6:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800fbda:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 800fbde:	462a      	mov	r2, r5
 800fbe0:	f105 0c08 	add.w	ip, r5, #8
 800fbe4:	443b      	add	r3, r7
 800fbe6:	4433      	add	r3, r6
 800fbe8:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 800fbec:	b29b      	uxth	r3, r3
 800fbee:	4635      	mov	r5, r6
 800fbf0:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800fbf4:	6810      	ldr	r0, [r2, #0]
 800fbf6:	3208      	adds	r2, #8
 800fbf8:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800fbfc:	4637      	mov	r7, r6
 800fbfe:	4562      	cmp	r2, ip
 800fc00:	c703      	stmia	r7!, {r0, r1}
 800fc02:	463e      	mov	r6, r7
 800fc04:	d1f6      	bne.n	800fbf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 800fc06:	6810      	ldr	r0, [r2, #0]
 800fc08:	6038      	str	r0, [r7, #0]
 800fc0a:	8892      	ldrh	r2, [r2, #4]
 800fc0c:	80ba      	strh	r2, [r7, #4]
 800fc0e:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800fc12:	10db      	asrs	r3, r3, #3
 800fc14:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800fc18:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800fc1c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800fc20:	4313      	orrs	r3, r2
 800fc22:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 800fc26:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800fc2a:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800fc2e:	1a9b      	subs	r3, r3, r2
 800fc30:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 800fc34:	e771      	b.n	800fb1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800fc36:	f023 0204 	bic.w	r2, r3, #4
 800fc3a:	f640 611b 	movw	r1, #3611	@ 0xe1b
 800fc3e:	428a      	cmp	r2, r1
 800fc40:	d003      	beq.n	800fc4a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 800fc42:	f640 621d 	movw	r2, #3613	@ 0xe1d
 800fc46:	4293      	cmp	r3, r2
 800fc48:	d120      	bne.n	800fc8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 800fc4a:	3b01      	subs	r3, #1
 800fc4c:	4602      	mov	r2, r0
 800fc4e:	4629      	mov	r1, r5
 800fc50:	4620      	mov	r0, r4
 800fc52:	b29b      	uxth	r3, r3
 800fc54:	f7ff ff4b 	bl	800faee <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800fc58:	7b41      	ldrb	r1, [r0, #13]
 800fc5a:	00cb      	lsls	r3, r1, #3
 800fc5c:	0649      	lsls	r1, r1, #25
 800fc5e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fc62:	7a03      	ldrb	r3, [r0, #8]
 800fc64:	ea43 0302 	orr.w	r3, r3, r2
 800fc68:	bf44      	itt	mi
 800fc6a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fc6e:	b21b      	sxthmi	r3, r3
 800fc70:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800fc74:	7b6b      	ldrb	r3, [r5, #13]
 800fc76:	7aaa      	ldrb	r2, [r5, #10]
 800fc78:	005b      	lsls	r3, r3, #1
 800fc7a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800fc7e:	4313      	orrs	r3, r2
 800fc80:	115a      	asrs	r2, r3, #5
 800fc82:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800fc86:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800fc8a:	e035      	b.n	800fcf8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 800fc8c:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800fc90:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 800fc94:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 800fc98:	7a2a      	ldrb	r2, [r5, #8]
 800fc9a:	ea42 0201 	orr.w	r2, r2, r1
 800fc9e:	f640 6109 	movw	r1, #3593	@ 0xe09
 800fca2:	bf1c      	itt	ne
 800fca4:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 800fca8:	b212      	sxthne	r2, r2
 800fcaa:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800fcae:	f023 0210 	bic.w	r2, r3, #16
 800fcb2:	428a      	cmp	r2, r1
 800fcb4:	d003      	beq.n	800fcbe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 800fcb6:	f640 6213 	movw	r2, #3603	@ 0xe13
 800fcba:	4293      	cmp	r3, r2
 800fcbc:	d129      	bne.n	800fd12 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 800fcbe:	7b6e      	ldrb	r6, [r5, #13]
 800fcc0:	4629      	mov	r1, r5
 800fcc2:	0076      	lsls	r6, r6, #1
 800fcc4:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800fcc8:	7aae      	ldrb	r6, [r5, #10]
 800fcca:	4316      	orrs	r6, r2
 800fccc:	f640 6213 	movw	r2, #3603	@ 0xe13
 800fcd0:	4293      	cmp	r3, r2
 800fcd2:	4602      	mov	r2, r0
 800fcd4:	4620      	mov	r0, r4
 800fcd6:	bf16      	itet	ne
 800fcd8:	f103 33ff 	addne.w	r3, r3, #4294967295
 800fcdc:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 800fce0:	b29b      	uxthne	r3, r3
 800fce2:	f7ff ff04 	bl	800faee <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800fce6:	7b43      	ldrb	r3, [r0, #13]
 800fce8:	7a82      	ldrb	r2, [r0, #10]
 800fcea:	005b      	lsls	r3, r3, #1
 800fcec:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800fcf0:	4313      	orrs	r3, r2
 800fcf2:	1af6      	subs	r6, r6, r3
 800fcf4:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 800fcf8:	7b69      	ldrb	r1, [r5, #13]
 800fcfa:	00cb      	lsls	r3, r1, #3
 800fcfc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fd00:	7a2b      	ldrb	r3, [r5, #8]
 800fd02:	4313      	orrs	r3, r2
 800fd04:	064a      	lsls	r2, r1, #25
 800fd06:	bf44      	itt	mi
 800fd08:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fd0c:	b21b      	sxthmi	r3, r3
 800fd0e:	1bdb      	subs	r3, r3, r7
 800fd10:	e747      	b.n	800fba2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 800fd12:	2300      	movs	r3, #0
 800fd14:	e7b7      	b.n	800fc86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 800fd16:	bf00      	nop
 800fd18:	3fc00079 	.word	0x3fc00079

0800fd1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800fd1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd20:	4604      	mov	r4, r0
 800fd22:	b942      	cbnz	r2, 800fd36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800fd24:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fd28:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 800fd2c:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 800fd30:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800fd34:	e047      	b.n	800fdc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800fd36:	7b51      	ldrb	r1, [r2, #13]
 800fd38:	8893      	ldrh	r3, [r2, #4]
 800fd3a:	010d      	lsls	r5, r1, #4
 800fd3c:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 800fd40:	79d5      	ldrb	r5, [r2, #7]
 800fd42:	4305      	orrs	r5, r0
 800fd44:	2d04      	cmp	r5, #4
 800fd46:	bfcc      	ite	gt
 800fd48:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800fd4c:	f04f 0e01 	movle.w	lr, #1
 800fd50:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 800fd54:	f200 80ab 	bhi.w	800feae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800fd58:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 800fd5c:	4283      	cmp	r3, r0
 800fd5e:	d216      	bcs.n	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fd60:	f240 605b 	movw	r0, #1627	@ 0x65b
 800fd64:	4283      	cmp	r3, r0
 800fd66:	d859      	bhi.n	800fe1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800fd68:	f240 6057 	movw	r0, #1623	@ 0x657
 800fd6c:	4283      	cmp	r3, r0
 800fd6e:	d20e      	bcs.n	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fd70:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800fd74:	d24a      	bcs.n	800fe0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800fd76:	f240 604e 	movw	r0, #1614	@ 0x64e
 800fd7a:	4283      	cmp	r3, r0
 800fd7c:	d207      	bcs.n	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fd7e:	f240 601a 	movw	r0, #1562	@ 0x61a
 800fd82:	4283      	cmp	r3, r0
 800fd84:	d02a      	beq.n	800fddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fd86:	d821      	bhi.n	800fdcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800fd88:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 800fd8c:	d35b      	bcc.n	800fe46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800fd8e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 800fd92:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800fd96:	f040 80d0 	bne.w	800ff3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800fd9a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 800fd9e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800fda2:	f040 80ca 	bne.w	800ff3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800fda6:	00cb      	lsls	r3, r1, #3
 800fda8:	0649      	lsls	r1, r1, #25
 800fdaa:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800fdae:	7a13      	ldrb	r3, [r2, #8]
 800fdb0:	ea43 0300 	orr.w	r3, r3, r0
 800fdb4:	bf44      	itt	mi
 800fdb6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fdba:	b21b      	sxthmi	r3, r3
 800fdbc:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800fdc0:	1b5d      	subs	r5, r3, r5
 800fdc2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800fdc6:	4610      	mov	r0, r2
 800fdc8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fdcc:	f240 604b 	movw	r0, #1611	@ 0x64b
 800fdd0:	4283      	cmp	r3, r0
 800fdd2:	d338      	bcc.n	800fe46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800fdd4:	f240 604c 	movw	r0, #1612	@ 0x64c
 800fdd8:	4283      	cmp	r3, r0
 800fdda:	d9d8      	bls.n	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fddc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 800fde0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 800fde4:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800fde8:	f040 80f3 	bne.w	800ffd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 800fdec:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800fdf0:	f040 80ef 	bne.w	800ffd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 800fdf4:	00cb      	lsls	r3, r1, #3
 800fdf6:	064e      	lsls	r6, r1, #25
 800fdf8:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800fdfc:	7a13      	ldrb	r3, [r2, #8]
 800fdfe:	ea43 0300 	orr.w	r3, r3, r0
 800fe02:	bf44      	itt	mi
 800fe04:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fe08:	b21b      	sxthmi	r3, r3
 800fe0a:	e7d9      	b.n	800fdc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800fe0c:	f240 6054 	movw	r0, #1620	@ 0x654
 800fe10:	4283      	cmp	r3, r0
 800fe12:	d8e3      	bhi.n	800fddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fe14:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800fe18:	d9e0      	bls.n	800fddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fe1a:	e7b8      	b.n	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fe1c:	f240 6074 	movw	r0, #1652	@ 0x674
 800fe20:	4283      	cmp	r3, r0
 800fe22:	d0b4      	beq.n	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fe24:	d82d      	bhi.n	800fe82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800fe26:	f240 605e 	movw	r0, #1630	@ 0x65e
 800fe2a:	4283      	cmp	r3, r0
 800fe2c:	d804      	bhi.n	800fe38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800fe2e:	f240 605d 	movw	r0, #1629	@ 0x65d
 800fe32:	4283      	cmp	r3, r0
 800fe34:	d3d2      	bcc.n	800fddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fe36:	e7aa      	b.n	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fe38:	f240 605f 	movw	r0, #1631	@ 0x65f
 800fe3c:	4283      	cmp	r3, r0
 800fe3e:	d0cd      	beq.n	800fddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fe40:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 800fe44:	d0a3      	beq.n	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fe46:	00cb      	lsls	r3, r1, #3
 800fe48:	0649      	lsls	r1, r1, #25
 800fe4a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800fe4e:	7a13      	ldrb	r3, [r2, #8]
 800fe50:	ea43 0300 	orr.w	r3, r3, r0
 800fe54:	bf44      	itt	mi
 800fe56:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fe5a:	b21b      	sxthmi	r3, r3
 800fe5c:	1b5d      	subs	r5, r3, r5
 800fe5e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800fe62:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800fe66:	7b53      	ldrb	r3, [r2, #13]
 800fe68:	015b      	lsls	r3, r3, #5
 800fe6a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800fe6e:	7993      	ldrb	r3, [r2, #6]
 800fe70:	430b      	orrs	r3, r1
 800fe72:	2105      	movs	r1, #5
 800fe74:	005b      	lsls	r3, r3, #1
 800fe76:	fb93 f3f1 	sdiv	r3, r3, r1
 800fe7a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800fe7e:	440b      	add	r3, r1
 800fe80:	e756      	b.n	800fd30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800fe82:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 800fe86:	4283      	cmp	r3, r0
 800fe88:	d809      	bhi.n	800fe9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800fe8a:	f240 60df 	movw	r0, #1759	@ 0x6df
 800fe8e:	4283      	cmp	r3, r0
 800fe90:	f4bf af7d 	bcs.w	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fe94:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 800fe98:	2b05      	cmp	r3, #5
 800fe9a:	d8d4      	bhi.n	800fe46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800fe9c:	e777      	b.n	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fe9e:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 800fea2:	4283      	cmp	r3, r0
 800fea4:	d09a      	beq.n	800fddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fea6:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 800feaa:	4283      	cmp	r3, r0
 800feac:	e7ca      	b.n	800fe44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800feae:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 800feb2:	d22b      	bcs.n	800ff0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800feb4:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 800feb8:	4283      	cmp	r3, r0
 800feba:	d28f      	bcs.n	800fddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800febc:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 800fec0:	4283      	cmp	r3, r0
 800fec2:	d816      	bhi.n	800fef2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800fec4:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 800fec8:	4283      	cmp	r3, r0
 800feca:	f4bf af60 	bcs.w	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fece:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 800fed2:	4283      	cmp	r3, r0
 800fed4:	d80a      	bhi.n	800feec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800fed6:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 800feda:	4283      	cmp	r3, r0
 800fedc:	f4bf af57 	bcs.w	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fee0:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 800fee4:	4283      	cmp	r3, r0
 800fee6:	f43f af79 	beq.w	800fddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800feea:	e7ac      	b.n	800fe46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800feec:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 800fef0:	e7f8      	b.n	800fee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800fef2:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 800fef6:	4283      	cmp	r3, r0
 800fef8:	d802      	bhi.n	800ff00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800fefa:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 800fefe:	e798      	b.n	800fe32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800ff00:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 800ff04:	4283      	cmp	r3, r0
 800ff06:	f47f af42 	bne.w	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ff0a:	e767      	b.n	800fddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ff0c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 800ff10:	4283      	cmp	r3, r0
 800ff12:	f43f af63 	beq.w	800fddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ff16:	d802      	bhi.n	800ff1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800ff18:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 800ff1c:	e7f2      	b.n	800ff04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800ff1e:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 800ff22:	4283      	cmp	r3, r0
 800ff24:	d805      	bhi.n	800ff32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800ff26:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 800ff2a:	4283      	cmp	r3, r0
 800ff2c:	f4ff af2f 	bcc.w	800fd8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ff30:	e754      	b.n	800fddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ff32:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 800ff36:	4283      	cmp	r3, r0
 800ff38:	e7af      	b.n	800fe9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800ff3a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800ff3e:	4617      	mov	r7, r2
 800ff40:	f102 0808 	add.w	r8, r2, #8
 800ff44:	4666      	mov	r6, ip
 800ff46:	6838      	ldr	r0, [r7, #0]
 800ff48:	3708      	adds	r7, #8
 800ff4a:	f857 1c04 	ldr.w	r1, [r7, #-4]
 800ff4e:	46e6      	mov	lr, ip
 800ff50:	4547      	cmp	r7, r8
 800ff52:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800ff56:	46f4      	mov	ip, lr
 800ff58:	d1f5      	bne.n	800ff46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800ff5a:	6838      	ldr	r0, [r7, #0]
 800ff5c:	f8ce 0000 	str.w	r0, [lr]
 800ff60:	88b9      	ldrh	r1, [r7, #4]
 800ff62:	f8ae 1004 	strh.w	r1, [lr, #4]
 800ff66:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800ff6a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800ff6e:	d009      	beq.n	800ff84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 800ff70:	7b51      	ldrb	r1, [r2, #13]
 800ff72:	7992      	ldrb	r2, [r2, #6]
 800ff74:	0149      	lsls	r1, r1, #5
 800ff76:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800ff7a:	4311      	orrs	r1, r2
 800ff7c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ff80:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800ff84:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800ff88:	b2ad      	uxth	r5, r5
 800ff8a:	d00d      	beq.n	800ffa8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 800ff8c:	442b      	add	r3, r5
 800ff8e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800ff92:	b29b      	uxth	r3, r3
 800ff94:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800ff98:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800ff9c:	10db      	asrs	r3, r3, #3
 800ff9e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800ffa2:	4313      	orrs	r3, r2
 800ffa4:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800ffa8:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800ffac:	00cb      	lsls	r3, r1, #3
 800ffae:	064f      	lsls	r7, r1, #25
 800ffb0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800ffb4:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800ffb8:	ea43 0302 	orr.w	r3, r3, r2
 800ffbc:	bf44      	itt	mi
 800ffbe:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800ffc2:	b21b      	sxthmi	r3, r3
 800ffc4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800ffc8:	1b5b      	subs	r3, r3, r5
 800ffca:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800ffce:	4632      	mov	r2, r6
 800ffd0:	e6f9      	b.n	800fdc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800ffd2:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800ffd6:	4617      	mov	r7, r2
 800ffd8:	f102 0908 	add.w	r9, r2, #8
 800ffdc:	4666      	mov	r6, ip
 800ffde:	6838      	ldr	r0, [r7, #0]
 800ffe0:	3708      	adds	r7, #8
 800ffe2:	f857 1c04 	ldr.w	r1, [r7, #-4]
 800ffe6:	46e0      	mov	r8, ip
 800ffe8:	454f      	cmp	r7, r9
 800ffea:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800ffee:	46c4      	mov	ip, r8
 800fff0:	d1f5      	bne.n	800ffde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 800fff2:	6838      	ldr	r0, [r7, #0]
 800fff4:	f8c8 0000 	str.w	r0, [r8]
 800fff8:	88b9      	ldrh	r1, [r7, #4]
 800fffa:	f8a8 1004 	strh.w	r1, [r8, #4]
 800fffe:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8010002:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8010006:	d009      	beq.n	801001c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8010008:	7b51      	ldrb	r1, [r2, #13]
 801000a:	7992      	ldrb	r2, [r2, #6]
 801000c:	0149      	lsls	r1, r1, #5
 801000e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8010012:	4311      	orrs	r1, r2
 8010014:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8010018:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 801001c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8010020:	d00e      	beq.n	8010040 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8010022:	eba3 030e 	sub.w	r3, r3, lr
 8010026:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801002a:	b29b      	uxth	r3, r3
 801002c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8010030:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8010034:	10db      	asrs	r3, r3, #3
 8010036:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801003a:	4313      	orrs	r3, r2
 801003c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8010040:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8010044:	00cb      	lsls	r3, r1, #3
 8010046:	0648      	lsls	r0, r1, #25
 8010048:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801004c:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8010050:	ea43 0302 	orr.w	r3, r3, r2
 8010054:	bf44      	itt	mi
 8010056:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801005a:	b21b      	sxthmi	r3, r3
 801005c:	1b5d      	subs	r5, r3, r5
 801005e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8010062:	e7b4      	b.n	800ffce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

08010064 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8010064:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010068:	461e      	mov	r6, r3
 801006a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801006c:	4604      	mov	r4, r0
 801006e:	4617      	mov	r7, r2
 8010070:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010074:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8010078:	f7f3 f82e 	bl	80030d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801007c:	4605      	mov	r5, r0
 801007e:	b918      	cbnz	r0, 8010088 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8010080:	6030      	str	r0, [r6, #0]
 8010082:	4628      	mov	r0, r5
 8010084:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010088:	683b      	ldr	r3, [r7, #0]
 801008a:	4601      	mov	r1, r0
 801008c:	4638      	mov	r0, r7
 801008e:	68db      	ldr	r3, [r3, #12]
 8010090:	4798      	blx	r3
 8010092:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8010096:	4602      	mov	r2, r0
 8010098:	6030      	str	r0, [r6, #0]
 801009a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801009e:	d213      	bcs.n	80100c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80100a0:	4643      	mov	r3, r8
 80100a2:	4639      	mov	r1, r7
 80100a4:	4620      	mov	r0, r4
 80100a6:	f7ff fe39 	bl	800fd1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80100aa:	6030      	str	r0, [r6, #0]
 80100ac:	6833      	ldr	r3, [r6, #0]
 80100ae:	b143      	cbz	r3, 80100c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80100b0:	7b5a      	ldrb	r2, [r3, #13]
 80100b2:	7a9b      	ldrb	r3, [r3, #10]
 80100b4:	0052      	lsls	r2, r2, #1
 80100b6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80100ba:	4313      	orrs	r3, r2
 80100bc:	bf0c      	ite	eq
 80100be:	2301      	moveq	r3, #1
 80100c0:	2300      	movne	r3, #0
 80100c2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80100c6:	e7dc      	b.n	8010082 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80100c8:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80100cc:	b29b      	uxth	r3, r3
 80100ce:	2b7f      	cmp	r3, #127	@ 0x7f
 80100d0:	d804      	bhi.n	80100dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80100d2:	4639      	mov	r1, r7
 80100d4:	4620      	mov	r0, r4
 80100d6:	f7ff fd15 	bl	800fb04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80100da:	e7e6      	b.n	80100aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80100dc:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80100e0:	2b00      	cmp	r3, #0
 80100e2:	d0e3      	beq.n	80100ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80100e4:	f640 1302 	movw	r3, #2306	@ 0x902
 80100e8:	429d      	cmp	r5, r3
 80100ea:	d1df      	bne.n	80100ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80100ec:	4601      	mov	r1, r0
 80100ee:	4620      	mov	r0, r4
 80100f0:	f7ff fcd9 	bl	800faa6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80100f4:	e7d9      	b.n	80100aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080100f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80100f6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80100fa:	461e      	mov	r6, r3
 80100fc:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80100fe:	4604      	mov	r4, r0
 8010100:	4617      	mov	r7, r2
 8010102:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010106:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801010a:	f7f2 ffe5 	bl	80030d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801010e:	4605      	mov	r5, r0
 8010110:	b918      	cbnz	r0, 801011a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8010112:	6030      	str	r0, [r6, #0]
 8010114:	4628      	mov	r0, r5
 8010116:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801011a:	683b      	ldr	r3, [r7, #0]
 801011c:	4601      	mov	r1, r0
 801011e:	4638      	mov	r0, r7
 8010120:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8010124:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8010128:	47c8      	blx	r9
 801012a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801012e:	4602      	mov	r2, r0
 8010130:	6030      	str	r0, [r6, #0]
 8010132:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8010136:	d213      	bcs.n	8010160 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8010138:	4643      	mov	r3, r8
 801013a:	4639      	mov	r1, r7
 801013c:	4620      	mov	r0, r4
 801013e:	f7ff fded 	bl	800fd1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8010142:	6030      	str	r0, [r6, #0]
 8010144:	6833      	ldr	r3, [r6, #0]
 8010146:	b143      	cbz	r3, 801015a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8010148:	7b5a      	ldrb	r2, [r3, #13]
 801014a:	7a9b      	ldrb	r3, [r3, #10]
 801014c:	0052      	lsls	r2, r2, #1
 801014e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8010152:	4313      	orrs	r3, r2
 8010154:	bf0c      	ite	eq
 8010156:	2301      	moveq	r3, #1
 8010158:	2300      	movne	r3, #0
 801015a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801015e:	e7d9      	b.n	8010114 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8010160:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8010164:	b29b      	uxth	r3, r3
 8010166:	2b7f      	cmp	r3, #127	@ 0x7f
 8010168:	d804      	bhi.n	8010174 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801016a:	4639      	mov	r1, r7
 801016c:	4620      	mov	r0, r4
 801016e:	f7ff fcc9 	bl	800fb04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8010172:	e7e6      	b.n	8010142 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8010174:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8010178:	2b00      	cmp	r3, #0
 801017a:	d0e3      	beq.n	8010144 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801017c:	f640 1302 	movw	r3, #2306	@ 0x902
 8010180:	429d      	cmp	r5, r3
 8010182:	d1df      	bne.n	8010144 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8010184:	4601      	mov	r1, r0
 8010186:	4620      	mov	r0, r4
 8010188:	f7ff fc8d 	bl	800faa6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801018c:	e7d9      	b.n	8010142 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801018e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801018e:	b510      	push	{r4, lr}
 8010190:	4604      	mov	r4, r0
 8010192:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8010196:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8010198:	b1e1      	cbz	r1, 80101d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 801019a:	2b0a      	cmp	r3, #10
 801019c:	d02d      	beq.n	80101fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 801019e:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 80101a0:	3901      	subs	r1, #1
 80101a2:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80101a6:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 80101a8:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 80101ac:	1c51      	adds	r1, r2, #1
 80101ae:	b289      	uxth	r1, r1
 80101b0:	2901      	cmp	r1, #1
 80101b2:	bf8a      	itet	hi
 80101b4:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80101b8:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 80101ba:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 80101bc:	1c5a      	adds	r2, r3, #1
 80101be:	8722      	strh	r2, [r4, #56]	@ 0x38
 80101c0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80101c2:	4413      	add	r3, r2
 80101c4:	b29b      	uxth	r3, r3
 80101c6:	2b09      	cmp	r3, #9
 80101c8:	bf88      	it	hi
 80101ca:	3b0a      	subhi	r3, #10
 80101cc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80101d0:	8458      	strh	r0, [r3, #34]	@ 0x22
 80101d2:	e7de      	b.n	8010192 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80101d4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80101d6:	2b0a      	cmp	r3, #10
 80101d8:	d00f      	beq.n	80101fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 80101da:	4620      	mov	r0, r4
 80101dc:	f7ff fc11 	bl	800fa02 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80101e0:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80101e2:	1c5a      	adds	r2, r3, #1
 80101e4:	8722      	strh	r2, [r4, #56]	@ 0x38
 80101e6:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80101e8:	4413      	add	r3, r2
 80101ea:	b29b      	uxth	r3, r3
 80101ec:	2b09      	cmp	r3, #9
 80101ee:	bf88      	it	hi
 80101f0:	3b0a      	subhi	r3, #10
 80101f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80101f6:	8458      	strh	r0, [r3, #34]	@ 0x22
 80101f8:	e7ec      	b.n	80101d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80101fa:	bd10      	pop	{r4, pc}

080101fc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80101fc:	b538      	push	{r3, r4, r5, lr}
 80101fe:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8010200:	4604      	mov	r4, r0
 8010202:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8010206:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8010208:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801020a:	3a01      	subs	r2, #1
 801020c:	8702      	strh	r2, [r0, #56]	@ 0x38
 801020e:	1c5a      	adds	r2, r3, #1
 8010210:	b292      	uxth	r2, r2
 8010212:	2a09      	cmp	r2, #9
 8010214:	bf8a      	itet	hi
 8010216:	3b09      	subhi	r3, #9
 8010218:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 801021a:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801021c:	f7ff ffb7 	bl	801018e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8010220:	8c23      	ldrh	r3, [r4, #32]
 8010222:	2b01      	cmp	r3, #1
 8010224:	bf9c      	itt	ls
 8010226:	3301      	addls	r3, #1
 8010228:	8423      	strhls	r3, [r4, #32]
 801022a:	8be3      	ldrh	r3, [r4, #30]
 801022c:	b90b      	cbnz	r3, 8010232 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801022e:	2302      	movs	r3, #2
 8010230:	83e3      	strh	r3, [r4, #30]
 8010232:	8be3      	ldrh	r3, [r4, #30]
 8010234:	4628      	mov	r0, r5
 8010236:	3b01      	subs	r3, #1
 8010238:	b29b      	uxth	r3, r3
 801023a:	83e3      	strh	r3, [r4, #30]
 801023c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010240:	8365      	strh	r5, [r4, #26]
 8010242:	bd38      	pop	{r3, r4, r5, pc}

08010244 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8010244:	428a      	cmp	r2, r1
 8010246:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801024a:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 801024c:	d932      	bls.n	80102b4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 801024e:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8010250:	1a54      	subs	r4, r2, r1
 8010252:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8010256:	19ee      	adds	r6, r5, r7
 8010258:	fa1f fe84 	uxth.w	lr, r4
 801025c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8010260:	3e01      	subs	r6, #1
 8010262:	b2b4      	uxth	r4, r6
 8010264:	eba4 090e 	sub.w	r9, r4, lr
 8010268:	fa1f f989 	uxth.w	r9, r9
 801026c:	2c09      	cmp	r4, #9
 801026e:	4626      	mov	r6, r4
 8010270:	bf88      	it	hi
 8010272:	f1a4 060a 	subhi.w	r6, r4, #10
 8010276:	f1bc 0f00 	cmp.w	ip, #0
 801027a:	f104 34ff 	add.w	r4, r4, #4294967295
 801027e:	bf08      	it	eq
 8010280:	f04f 0c02 	moveq.w	ip, #2
 8010284:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8010288:	b2a4      	uxth	r4, r4
 801028a:	f10c 3cff 	add.w	ip, ip, #4294967295
 801028e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8010292:	454c      	cmp	r4, r9
 8010294:	fa1f fc8c 	uxth.w	ip, ip
 8010298:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801029c:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 80102a0:	d1e4      	bne.n	801026c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80102a2:	eba5 050e 	sub.w	r5, r5, lr
 80102a6:	eb0e 0408 	add.w	r4, lr, r8
 80102aa:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 80102ae:	8705      	strh	r5, [r0, #56]	@ 0x38
 80102b0:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 80102b4:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 80102b6:	250a      	movs	r5, #10
 80102b8:	1a64      	subs	r4, r4, r1
 80102ba:	4439      	add	r1, r7
 80102bc:	b289      	uxth	r1, r1
 80102be:	8704      	strh	r4, [r0, #56]	@ 0x38
 80102c0:	2909      	cmp	r1, #9
 80102c2:	bf88      	it	hi
 80102c4:	390a      	subhi	r1, #10
 80102c6:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80102c8:	b18a      	cbz	r2, 80102ee <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 80102ca:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 80102cc:	3a01      	subs	r2, #1
 80102ce:	3101      	adds	r1, #1
 80102d0:	b292      	uxth	r2, r2
 80102d2:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80102d6:	8701      	strh	r1, [r0, #56]	@ 0x38
 80102d8:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80102da:	b901      	cbnz	r1, 80102de <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 80102dc:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80102de:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80102e0:	3901      	subs	r1, #1
 80102e2:	b289      	uxth	r1, r1
 80102e4:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80102e6:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80102ea:	844c      	strh	r4, [r1, #34]	@ 0x22
 80102ec:	e7ec      	b.n	80102c8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 80102ee:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80102f2:	f7ff bf4c 	b.w	801018e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080102f6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80102f6:	b570      	push	{r4, r5, r6, lr}
 80102f8:	2500      	movs	r5, #0
 80102fa:	4295      	cmp	r5, r2
 80102fc:	d011      	beq.n	8010322 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80102fe:	8bc4      	ldrh	r4, [r0, #30]
 8010300:	f831 6b02 	ldrh.w	r6, [r1], #2
 8010304:	4414      	add	r4, r2
 8010306:	3c01      	subs	r4, #1
 8010308:	1b64      	subs	r4, r4, r5
 801030a:	b2a4      	uxth	r4, r4
 801030c:	2c01      	cmp	r4, #1
 801030e:	bf88      	it	hi
 8010310:	3c02      	subhi	r4, #2
 8010312:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8010316:	8b64      	ldrh	r4, [r4, #26]
 8010318:	42b4      	cmp	r4, r6
 801031a:	d117      	bne.n	801034c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801031c:	3501      	adds	r5, #1
 801031e:	b2ad      	uxth	r5, r5
 8010320:	e7eb      	b.n	80102fa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8010322:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8010326:	2400      	movs	r4, #0
 8010328:	4413      	add	r3, r2
 801032a:	b2a2      	uxth	r2, r4
 801032c:	429a      	cmp	r2, r3
 801032e:	da0f      	bge.n	8010350 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8010330:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8010332:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8010336:	3401      	adds	r4, #1
 8010338:	4432      	add	r2, r6
 801033a:	b292      	uxth	r2, r2
 801033c:	2a09      	cmp	r2, #9
 801033e:	bf88      	it	hi
 8010340:	3a0a      	subhi	r2, #10
 8010342:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8010346:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8010348:	42aa      	cmp	r2, r5
 801034a:	d0ee      	beq.n	801032a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801034c:	2000      	movs	r0, #0
 801034e:	bd70      	pop	{r4, r5, r6, pc}
 8010350:	2001      	movs	r0, #1
 8010352:	e7fc      	b.n	801034e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08010354 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8010354:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010358:	4605      	mov	r5, r0
 801035a:	4616      	mov	r6, r2
 801035c:	1c8c      	adds	r4, r1, #2
 801035e:	8809      	ldrh	r1, [r1, #0]
 8010360:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8010364:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8010368:	42b3      	cmp	r3, r6
 801036a:	d124      	bne.n	80103b6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801036c:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8010370:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8010374:	f001 070f 	and.w	r7, r1, #15
 8010378:	4652      	mov	r2, sl
 801037a:	f8cd 8000 	str.w	r8, [sp]
 801037e:	464b      	mov	r3, r9
 8010380:	4621      	mov	r1, r4
 8010382:	4628      	mov	r0, r5
 8010384:	f7ff ffb7 	bl	80102f6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8010388:	4683      	mov	fp, r0
 801038a:	b168      	cbz	r0, 80103a8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801038c:	eb0a 0109 	add.w	r1, sl, r9
 8010390:	463a      	mov	r2, r7
 8010392:	4628      	mov	r0, r5
 8010394:	4441      	add	r1, r8
 8010396:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801039a:	4649      	mov	r1, r9
 801039c:	f7ff ff52 	bl	8010244 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80103a0:	4658      	mov	r0, fp
 80103a2:	b003      	add	sp, #12
 80103a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80103a8:	eb07 010a 	add.w	r1, r7, sl
 80103ac:	4449      	add	r1, r9
 80103ae:	4441      	add	r1, r8
 80103b0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80103b4:	e7d2      	b.n	801035c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80103b6:	f04f 0b00 	mov.w	fp, #0
 80103ba:	e7f1      	b.n	80103a0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080103bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80103bc:	b570      	push	{r4, r5, r6, lr}
 80103be:	8810      	ldrh	r0, [r2, #0]
 80103c0:	4298      	cmp	r0, r3
 80103c2:	d817      	bhi.n	80103f4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80103c4:	1e48      	subs	r0, r1, #1
 80103c6:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80103ca:	4298      	cmp	r0, r3
 80103cc:	d312      	bcc.n	80103f4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80103ce:	2400      	movs	r4, #0
 80103d0:	428c      	cmp	r4, r1
 80103d2:	d20f      	bcs.n	80103f4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80103d4:	1860      	adds	r0, r4, r1
 80103d6:	1040      	asrs	r0, r0, #1
 80103d8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80103dc:	0085      	lsls	r5, r0, #2
 80103de:	42b3      	cmp	r3, r6
 80103e0:	d902      	bls.n	80103e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80103e2:	3001      	adds	r0, #1
 80103e4:	b284      	uxth	r4, r0
 80103e6:	e7f3      	b.n	80103d0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80103e8:	d201      	bcs.n	80103ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80103ea:	b281      	uxth	r1, r0
 80103ec:	e7f0      	b.n	80103d0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80103ee:	442a      	add	r2, r5
 80103f0:	8850      	ldrh	r0, [r2, #2]
 80103f2:	bd70      	pop	{r4, r5, r6, pc}
 80103f4:	2000      	movs	r0, #0
 80103f6:	e7fc      	b.n	80103f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080103f8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80103f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80103fc:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 80103fe:	4604      	mov	r4, r0
 8010400:	260b      	movs	r6, #11
 8010402:	886f      	ldrh	r7, [r5, #2]
 8010404:	087f      	lsrs	r7, r7, #1
 8010406:	3e01      	subs	r6, #1
 8010408:	d013      	beq.n	8010432 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801040a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801040c:	462a      	mov	r2, r5
 801040e:	4639      	mov	r1, r7
 8010410:	4620      	mov	r0, r4
 8010412:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010416:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801041a:	4643      	mov	r3, r8
 801041c:	f7ff ffce 	bl	80103bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8010420:	b138      	cbz	r0, 8010432 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8010422:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8010426:	4642      	mov	r2, r8
 8010428:	4620      	mov	r0, r4
 801042a:	f7ff ff93 	bl	8010354 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801042e:	2800      	cmp	r0, #0
 8010430:	d1e9      	bne.n	8010406 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8010432:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08010438 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8010438:	b570      	push	{r4, r5, r6, lr}
 801043a:	694a      	ldr	r2, [r1, #20]
 801043c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 801043e:	684b      	ldr	r3, [r1, #4]
 8010440:	1b54      	subs	r4, r2, r5
 8010442:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8010444:	f000 8106 	beq.w	8010654 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8010448:	1b9b      	subs	r3, r3, r6
 801044a:	d003      	beq.n	8010454 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801044c:	4363      	muls	r3, r4
 801044e:	2210      	movs	r2, #16
 8010450:	fb93 f3f2 	sdiv	r3, r3, r2
 8010454:	680c      	ldr	r4, [r1, #0]
 8010456:	698a      	ldr	r2, [r1, #24]
 8010458:	1b65      	subs	r5, r4, r5
 801045a:	f000 80fd 	beq.w	8010658 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801045e:	1b92      	subs	r2, r2, r6
 8010460:	d003      	beq.n	801046a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8010462:	436a      	muls	r2, r5
 8010464:	2410      	movs	r4, #16
 8010466:	fb92 f2f4 	sdiv	r2, r2, r4
 801046a:	1a9b      	subs	r3, r3, r2
 801046c:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 8010694 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8010470:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8010474:	460a      	mov	r2, r1
 8010476:	ee07 3a90 	vmov	s15, r3
 801047a:	f100 040c 	add.w	r4, r0, #12
 801047e:	4603      	mov	r3, r0
 8010480:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010484:	ee67 7a84 	vmul.f32	s15, s15, s8
 8010488:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801048c:	eeb1 6a43 	vneg.f32	s12, s6
 8010490:	edd2 7a02 	vldr	s15, [r2, #8]
 8010494:	3214      	adds	r2, #20
 8010496:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801049a:	ece3 6a01 	vstmia	r3!, {s13}
 801049e:	429c      	cmp	r4, r3
 80104a0:	ed52 7a02 	vldr	s15, [r2, #-8]
 80104a4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80104a8:	edc3 7a02 	vstr	s15, [r3, #8]
 80104ac:	ed52 7a01 	vldr	s15, [r2, #-4]
 80104b0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80104b4:	edc3 7a05 	vstr	s15, [r3, #20]
 80104b8:	d1ea      	bne.n	8010490 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80104ba:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80104bc:	698b      	ldr	r3, [r1, #24]
 80104be:	edd0 4a02 	vldr	s9, [r0, #8]
 80104c2:	1a9b      	subs	r3, r3, r2
 80104c4:	edd0 3a00 	vldr	s7, [r0]
 80104c8:	edd0 6a01 	vldr	s13, [r0, #4]
 80104cc:	ee07 3a90 	vmov	s15, r3
 80104d0:	684b      	ldr	r3, [r1, #4]
 80104d2:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80104d6:	ed90 5a05 	vldr	s10, [r0, #20]
 80104da:	1a9b      	subs	r3, r3, r2
 80104dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80104e0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80104e4:	ed90 2a03 	vldr	s4, [r0, #12]
 80104e8:	ee07 3a10 	vmov	s14, r3
 80104ec:	edd0 5a04 	vldr	s11, [r0, #16]
 80104f0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80104f4:	ed90 1a07 	vldr	s2, [r0, #28]
 80104f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80104fc:	edd0 2a06 	vldr	s5, [r0, #24]
 8010500:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8010504:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8010508:	ee27 7a04 	vmul.f32	s14, s14, s8
 801050c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8010510:	eee6 7a87 	vfma.f32	s15, s13, s14
 8010514:	ee67 7a83 	vmul.f32	s15, s15, s6
 8010518:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 801051c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801051e:	694a      	ldr	r2, [r1, #20]
 8010520:	1b13      	subs	r3, r2, r4
 8010522:	ee07 3a10 	vmov	s14, r3
 8010526:	680b      	ldr	r3, [r1, #0]
 8010528:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801052c:	1b1b      	subs	r3, r3, r4
 801052e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010532:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8010536:	ee07 3a10 	vmov	s14, r3
 801053a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801053e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010542:	eee6 4a87 	vfma.f32	s9, s13, s14
 8010546:	ee64 4a86 	vmul.f32	s9, s9, s12
 801054a:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 801054e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8010550:	698b      	ldr	r3, [r1, #24]
 8010552:	1a9b      	subs	r3, r3, r2
 8010554:	ee06 3a90 	vmov	s13, r3
 8010558:	684b      	ldr	r3, [r1, #4]
 801055a:	1a9b      	subs	r3, r3, r2
 801055c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010560:	ee07 3a10 	vmov	s14, r3
 8010564:	ee66 6a84 	vmul.f32	s13, s13, s8
 8010568:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801056c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8010570:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010574:	eee5 6a87 	vfma.f32	s13, s11, s14
 8010578:	ee66 6a83 	vmul.f32	s13, s13, s6
 801057c:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8010580:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8010582:	694a      	ldr	r2, [r1, #20]
 8010584:	1b13      	subs	r3, r2, r4
 8010586:	ee07 3a10 	vmov	s14, r3
 801058a:	680b      	ldr	r3, [r1, #0]
 801058c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010590:	1b1b      	subs	r3, r3, r4
 8010592:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010596:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801059a:	ee07 3a10 	vmov	s14, r3
 801059e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80105a2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80105a6:	eea5 5a87 	vfma.f32	s10, s11, s14
 80105aa:	edd0 5a08 	vldr	s11, [r0, #32]
 80105ae:	ee31 1a65 	vsub.f32	s2, s2, s11
 80105b2:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80105b6:	ee25 5a06 	vmul.f32	s10, s10, s12
 80105ba:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 80105be:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80105c0:	698b      	ldr	r3, [r1, #24]
 80105c2:	1a9b      	subs	r3, r3, r2
 80105c4:	ee07 3a10 	vmov	s14, r3
 80105c8:	684b      	ldr	r3, [r1, #4]
 80105ca:	1a9b      	subs	r3, r3, r2
 80105cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80105d0:	ee01 3a90 	vmov	s3, r3
 80105d4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80105d8:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80105dc:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80105e0:	ee61 1a84 	vmul.f32	s3, s3, s8
 80105e4:	eea1 7a21 	vfma.f32	s14, s2, s3
 80105e8:	ee27 7a03 	vmul.f32	s14, s14, s6
 80105ec:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80105f0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80105f2:	694a      	ldr	r2, [r1, #20]
 80105f4:	1b13      	subs	r3, r2, r4
 80105f6:	ee03 3a10 	vmov	s6, r3
 80105fa:	680b      	ldr	r3, [r1, #0]
 80105fc:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8010600:	1b1b      	subs	r3, r3, r4
 8010602:	ee23 3a04 	vmul.f32	s6, s6, s8
 8010606:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801060a:	ee03 3a10 	vmov	s6, r3
 801060e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8010612:	ee23 4a04 	vmul.f32	s8, s6, s8
 8010616:	eee1 5a04 	vfma.f32	s11, s2, s8
 801061a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801061e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8010622:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8010626:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801062a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801062e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010632:	dd13      	ble.n	801065c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8010634:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8010638:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801063c:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801063e:	eee3 7a87 	vfma.f32	s15, s7, s14
 8010642:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8010646:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801064a:	dd15      	ble.n	8010678 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801064c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8010650:	6403      	str	r3, [r0, #64]	@ 0x40
 8010652:	bd70      	pop	{r4, r5, r6, pc}
 8010654:	4623      	mov	r3, r4
 8010656:	e6fd      	b.n	8010454 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8010658:	462a      	mov	r2, r5
 801065a:	e706      	b.n	801046a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801065c:	d502      	bpl.n	8010664 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801065e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8010662:	e7e9      	b.n	8010638 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8010664:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8010668:	eea3 2a85 	vfma.f32	s4, s7, s10
 801066c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8010670:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010674:	dade      	bge.n	8010634 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8010676:	e7f2      	b.n	801065e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8010678:	d502      	bpl.n	8010680 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801067a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801067e:	e7e7      	b.n	8010650 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8010680:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8010684:	eee3 4a86 	vfma.f32	s9, s7, s12
 8010688:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801068c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010690:	dadc      	bge.n	801064c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8010692:	e7f2      	b.n	801067a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8010694:	3d800000 	.word	0x3d800000

08010698 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8010698:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801069c:	2714      	movs	r7, #20
 801069e:	435f      	muls	r7, r3
 80106a0:	eb02 0c07 	add.w	ip, r2, r7
 80106a4:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80106a8:	f115 0e0f 	adds.w	lr, r5, #15
 80106ac:	f100 80a2 	bmi.w	80107f4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80106b0:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80106b4:	9c08      	ldr	r4, [sp, #32]
 80106b6:	2614      	movs	r6, #20
 80106b8:	f8c0 e014 	str.w	lr, [r0, #20]
 80106bc:	4366      	muls	r6, r4
 80106be:	eb02 0806 	add.w	r8, r2, r6
 80106c2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80106c6:	f115 040f 	adds.w	r4, r5, #15
 80106ca:	f100 809f 	bmi.w	801080c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80106ce:	1124      	asrs	r4, r4, #4
 80106d0:	eba4 040e 	sub.w	r4, r4, lr
 80106d4:	6184      	str	r4, [r0, #24]
 80106d6:	2c00      	cmp	r4, #0
 80106d8:	f000 808a 	beq.w	80107f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80106dc:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80106e0:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80106e4:	5995      	ldr	r5, [r2, r6]
 80106e6:	eba4 0809 	sub.w	r8, r4, r9
 80106ea:	59d4      	ldr	r4, [r2, r7]
 80106ec:	eba5 0a04 	sub.w	sl, r5, r4
 80106f0:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80106f4:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80106f8:	fb0e fe05 	mul.w	lr, lr, r5
 80106fc:	fb0a ee19 	mls	lr, sl, r9, lr
 8010700:	fb08 e404 	mla	r4, r8, r4, lr
 8010704:	3c01      	subs	r4, #1
 8010706:	19a4      	adds	r4, r4, r6
 8010708:	f100 808c 	bmi.w	8010824 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801070c:	fb94 fef6 	sdiv	lr, r4, r6
 8010710:	fb06 441e 	mls	r4, r6, lr, r4
 8010714:	f8c0 e000 	str.w	lr, [r0]
 8010718:	6104      	str	r4, [r0, #16]
 801071a:	2d00      	cmp	r5, #0
 801071c:	f2c0 8095 	blt.w	801084a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8010720:	fb95 f4f6 	sdiv	r4, r5, r6
 8010724:	fb06 5514 	mls	r5, r6, r4, r5
 8010728:	6044      	str	r4, [r0, #4]
 801072a:	6085      	str	r5, [r0, #8]
 801072c:	60c6      	str	r6, [r0, #12]
 801072e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8010732:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8010736:	6945      	ldr	r5, [r0, #20]
 8010738:	59d2      	ldr	r2, [r2, r7]
 801073a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801073e:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 801086c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8010742:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8010746:	ee07 4a10 	vmov	s14, r4
 801074a:	6804      	ldr	r4, [r0, #0]
 801074c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8010750:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010754:	ee07 2a90 	vmov	s15, r2
 8010758:	ee27 7a26 	vmul.f32	s14, s14, s13
 801075c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010760:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010764:	edd3 6a00 	vldr	s13, [r3]
 8010768:	eee6 6a07 	vfma.f32	s13, s12, s14
 801076c:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8010770:	eee6 6a27 	vfma.f32	s13, s12, s15
 8010774:	edc0 6a07 	vstr	s13, [r0, #28]
 8010778:	edd0 6a01 	vldr	s13, [r0, #4]
 801077c:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8010780:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010784:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8010788:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801078c:	ed80 6a08 	vstr	s12, [r0, #32]
 8010790:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8010792:	6242      	str	r2, [r0, #36]	@ 0x24
 8010794:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8010798:	ed93 6a03 	vldr	s12, [r3, #12]
 801079c:	eea5 6a87 	vfma.f32	s12, s11, s14
 80107a0:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80107a4:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80107a8:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 80107ac:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80107b0:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 80107b4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80107b8:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 80107bc:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80107be:	6302      	str	r2, [r0, #48]	@ 0x30
 80107c0:	ed93 6a06 	vldr	s12, [r3, #24]
 80107c4:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 80107c8:	eea5 6a87 	vfma.f32	s12, s11, s14
 80107cc:	eeb0 7a46 	vmov.f32	s14, s12
 80107d0:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 80107d4:	eea6 7a27 	vfma.f32	s14, s12, s15
 80107d8:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80107dc:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 80107e0:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 80107e4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80107e8:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 80107ec:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80107ee:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80107f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80107f4:	2410      	movs	r4, #16
 80107f6:	f1c5 0501 	rsb	r5, r5, #1
 80107fa:	fb9e fef4 	sdiv	lr, lr, r4
 80107fe:	f015 050f 	ands.w	r5, r5, #15
 8010802:	bf18      	it	ne
 8010804:	2501      	movne	r5, #1
 8010806:	ebae 0e05 	sub.w	lr, lr, r5
 801080a:	e753      	b.n	80106b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801080c:	f04f 0910 	mov.w	r9, #16
 8010810:	f1c5 0501 	rsb	r5, r5, #1
 8010814:	fb94 f4f9 	sdiv	r4, r4, r9
 8010818:	f015 050f 	ands.w	r5, r5, #15
 801081c:	bf18      	it	ne
 801081e:	2501      	movne	r5, #1
 8010820:	1b64      	subs	r4, r4, r5
 8010822:	e755      	b.n	80106d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8010824:	4264      	negs	r4, r4
 8010826:	fb94 fef6 	sdiv	lr, r4, r6
 801082a:	f1ce 0800 	rsb	r8, lr, #0
 801082e:	fb06 441e 	mls	r4, r6, lr, r4
 8010832:	f8c0 8000 	str.w	r8, [r0]
 8010836:	6104      	str	r4, [r0, #16]
 8010838:	2c00      	cmp	r4, #0
 801083a:	f43f af6e 	beq.w	801071a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801083e:	ea6f 0e0e 	mvn.w	lr, lr
 8010842:	1b34      	subs	r4, r6, r4
 8010844:	f8c0 e000 	str.w	lr, [r0]
 8010848:	e766      	b.n	8010718 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801084a:	426d      	negs	r5, r5
 801084c:	fb95 f4f6 	sdiv	r4, r5, r6
 8010850:	f1c4 0e00 	rsb	lr, r4, #0
 8010854:	fb06 5514 	mls	r5, r6, r4, r5
 8010858:	f8c0 e004 	str.w	lr, [r0, #4]
 801085c:	6085      	str	r5, [r0, #8]
 801085e:	2d00      	cmp	r5, #0
 8010860:	f43f af64 	beq.w	801072c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8010864:	43e4      	mvns	r4, r4
 8010866:	1b75      	subs	r5, r6, r5
 8010868:	6044      	str	r4, [r0, #4]
 801086a:	e75e      	b.n	801072a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801086c:	3d800000 	.word	0x3d800000

08010870 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8010870:	4602      	mov	r2, r0
 8010872:	b148      	cbz	r0, 8010888 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8010874:	2300      	movs	r3, #0
 8010876:	b298      	uxth	r0, r3
 8010878:	3301      	adds	r3, #1
 801087a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801087e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8010882:	2900      	cmp	r1, #0
 8010884:	d1f7      	bne.n	8010876 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8010886:	4770      	bx	lr
 8010888:	4770      	bx	lr

0801088a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801088a:	b530      	push	{r4, r5, lr}
 801088c:	4604      	mov	r4, r0
 801088e:	b159      	cbz	r1, 80108a8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8010890:	b148      	cbz	r0, 80108a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8010892:	2300      	movs	r3, #0
 8010894:	b298      	uxth	r0, r3
 8010896:	4282      	cmp	r2, r0
 8010898:	d905      	bls.n	80108a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801089a:	5ccd      	ldrb	r5, [r1, r3]
 801089c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80108a0:	3301      	adds	r3, #1
 80108a2:	2d00      	cmp	r5, #0
 80108a4:	d1f6      	bne.n	8010894 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80108a6:	bd30      	pop	{r4, r5, pc}
 80108a8:	4608      	mov	r0, r1
 80108aa:	e7fc      	b.n	80108a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080108ac <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80108ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80108ae:	b08b      	sub	sp, #44	@ 0x2c
 80108b0:	468c      	mov	ip, r1
 80108b2:	4604      	mov	r4, r0
 80108b4:	2100      	movs	r1, #0
 80108b6:	261f      	movs	r6, #31
 80108b8:	af01      	add	r7, sp, #4
 80108ba:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 80108be:	1e71      	subs	r1, r6, #1
 80108c0:	fb94 fef3 	sdiv	lr, r4, r3
 80108c4:	fb03 441e 	mls	r4, r3, lr, r4
 80108c8:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80108cc:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80108d0:	b2ec      	uxtb	r4, r5
 80108d2:	2d09      	cmp	r5, #9
 80108d4:	bfd4      	ite	le
 80108d6:	3430      	addle	r4, #48	@ 0x30
 80108d8:	3457      	addgt	r4, #87	@ 0x57
 80108da:	b2e4      	uxtb	r4, r4
 80108dc:	55bc      	strb	r4, [r7, r6]
 80108de:	4674      	mov	r4, lr
 80108e0:	b974      	cbnz	r4, 8010900 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80108e2:	2800      	cmp	r0, #0
 80108e4:	da05      	bge.n	80108f2 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80108e6:	ab0a      	add	r3, sp, #40	@ 0x28
 80108e8:	4419      	add	r1, r3
 80108ea:	232d      	movs	r3, #45	@ 0x2d
 80108ec:	f801 3c24 	strb.w	r3, [r1, #-36]
 80108f0:	1eb1      	subs	r1, r6, #2
 80108f2:	3101      	adds	r1, #1
 80108f4:	4660      	mov	r0, ip
 80108f6:	4439      	add	r1, r7
 80108f8:	f7ff ffc7 	bl	801088a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80108fc:	b00b      	add	sp, #44	@ 0x2c
 80108fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010900:	460e      	mov	r6, r1
 8010902:	e7dc      	b.n	80108be <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08010904 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8010904:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010906:	468c      	mov	ip, r1
 8010908:	b08b      	sub	sp, #44	@ 0x2c
 801090a:	2100      	movs	r1, #0
 801090c:	ae01      	add	r6, sp, #4
 801090e:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8010912:	211f      	movs	r1, #31
 8010914:	fbb0 f7f3 	udiv	r7, r0, r3
 8010918:	fb03 0517 	mls	r5, r3, r7, r0
 801091c:	4638      	mov	r0, r7
 801091e:	b2ec      	uxtb	r4, r5
 8010920:	2d09      	cmp	r5, #9
 8010922:	bfd4      	ite	le
 8010924:	3430      	addle	r4, #48	@ 0x30
 8010926:	3457      	addgt	r4, #87	@ 0x57
 8010928:	b2e4      	uxtb	r4, r4
 801092a:	558c      	strb	r4, [r1, r6]
 801092c:	1e4c      	subs	r4, r1, #1
 801092e:	b92f      	cbnz	r7, 801093c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8010930:	4431      	add	r1, r6
 8010932:	4660      	mov	r0, ip
 8010934:	f7ff ffa9 	bl	801088a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8010938:	b00b      	add	sp, #44	@ 0x2c
 801093a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801093c:	4621      	mov	r1, r4
 801093e:	e7e9      	b.n	8010914 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08010940 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8010940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010944:	b085      	sub	sp, #20
 8010946:	4691      	mov	r9, r2
 8010948:	6802      	ldr	r2, [r0, #0]
 801094a:	4688      	mov	r8, r1
 801094c:	461c      	mov	r4, r3
 801094e:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 8010952:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8010956:	4683      	mov	fp, r0
 8010958:	4610      	mov	r0, r2
 801095a:	9103      	str	r1, [sp, #12]
 801095c:	9302      	str	r3, [sp, #8]
 801095e:	9201      	str	r2, [sp, #4]
 8010960:	f7ff ff86 	bl	8010870 <_ZN8touchgfx7Unicode6strlenEPKt>
 8010964:	f1b8 0f00 	cmp.w	r8, #0
 8010968:	bf0c      	ite	eq
 801096a:	4684      	moveq	ip, r0
 801096c:	f100 0c01 	addne.w	ip, r0, #1
 8010970:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 8010974:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8010978:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801097a:	fa1f fc8c 	uxth.w	ip, ip
 801097e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8010980:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8010984:	9903      	ldr	r1, [sp, #12]
 8010986:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801098a:	d041      	beq.n	8010a10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801098c:	d834      	bhi.n	80109f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801098e:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8010992:	d059      	beq.n	8010a48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8010994:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8010998:	d03a      	beq.n	8010a10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801099a:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 801099e:	d034      	beq.n	8010a0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80109a0:	2400      	movs	r4, #0
 80109a2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 80109a6:	3a01      	subs	r2, #1
 80109a8:	b169      	cbz	r1, 80109c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80109aa:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80109ac:	458c      	cmp	ip, r1
 80109ae:	da09      	bge.n	80109c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80109b0:	eba1 010c 	sub.w	r1, r1, ip
 80109b4:	b289      	uxth	r1, r1
 80109b6:	b933      	cbnz	r3, 80109c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80109b8:	2e00      	cmp	r6, #0
 80109ba:	d051      	beq.n	8010a60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80109bc:	2800      	cmp	r0, #0
 80109be:	d04f      	beq.n	8010a60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80109c0:	440c      	add	r4, r1
 80109c2:	b2a4      	uxth	r4, r4
 80109c4:	2100      	movs	r1, #0
 80109c6:	682b      	ldr	r3, [r5, #0]
 80109c8:	4293      	cmp	r3, r2
 80109ca:	da07      	bge.n	80109dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80109cc:	f1b8 0f00 	cmp.w	r8, #0
 80109d0:	d004      	beq.n	80109dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80109d2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80109d6:	682b      	ldr	r3, [r5, #0]
 80109d8:	3301      	adds	r3, #1
 80109da:	602b      	str	r3, [r5, #0]
 80109dc:	2730      	movs	r7, #48	@ 0x30
 80109de:	2c00      	cmp	r4, #0
 80109e0:	d04e      	beq.n	8010a80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80109e2:	682e      	ldr	r6, [r5, #0]
 80109e4:	3c01      	subs	r4, #1
 80109e6:	42b2      	cmp	r2, r6
 80109e8:	b2a4      	uxth	r4, r4
 80109ea:	dd49      	ble.n	8010a80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80109ec:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80109f0:	682b      	ldr	r3, [r5, #0]
 80109f2:	3301      	adds	r3, #1
 80109f4:	602b      	str	r3, [r5, #0]
 80109f6:	e7f2      	b.n	80109de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80109f8:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 80109fc:	d01d      	beq.n	8010a3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80109fe:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8010a02:	d002      	beq.n	8010a0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8010a04:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8010a08:	e7c9      	b.n	801099e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8010a0a:	4684      	mov	ip, r0
 8010a0c:	f04f 0800 	mov.w	r8, #0
 8010a10:	2c00      	cmp	r4, #0
 8010a12:	d0c6      	beq.n	80109a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010a14:	b947      	cbnz	r7, 8010a28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8010a16:	2801      	cmp	r0, #1
 8010a18:	d106      	bne.n	8010a28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8010a1a:	8814      	ldrh	r4, [r2, #0]
 8010a1c:	2c30      	cmp	r4, #48	@ 0x30
 8010a1e:	bf02      	ittt	eq
 8010a20:	3202      	addeq	r2, #2
 8010a22:	4638      	moveq	r0, r7
 8010a24:	f8cb 2000 	streq.w	r2, [fp]
 8010a28:	45bc      	cmp	ip, r7
 8010a2a:	da14      	bge.n	8010a56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8010a2c:	b2bf      	uxth	r7, r7
 8010a2e:	eba7 040c 	sub.w	r4, r7, ip
 8010a32:	46bc      	mov	ip, r7
 8010a34:	b2a4      	uxth	r4, r4
 8010a36:	2600      	movs	r6, #0
 8010a38:	e7b3      	b.n	80109a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010a3a:	4684      	mov	ip, r0
 8010a3c:	b16c      	cbz	r4, 8010a5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8010a3e:	42b8      	cmp	r0, r7
 8010a40:	dd00      	ble.n	8010a44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8010a42:	b2b8      	uxth	r0, r7
 8010a44:	2400      	movs	r4, #0
 8010a46:	e003      	b.n	8010a50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8010a48:	f04f 0c01 	mov.w	ip, #1
 8010a4c:	2400      	movs	r4, #0
 8010a4e:	4660      	mov	r0, ip
 8010a50:	4626      	mov	r6, r4
 8010a52:	46a0      	mov	r8, r4
 8010a54:	e7a5      	b.n	80109a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010a56:	2400      	movs	r4, #0
 8010a58:	e7ed      	b.n	8010a36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8010a5a:	4626      	mov	r6, r4
 8010a5c:	46a0      	mov	r8, r4
 8010a5e:	e7a0      	b.n	80109a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010a60:	2900      	cmp	r1, #0
 8010a62:	d0b0      	beq.n	80109c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8010a64:	2720      	movs	r7, #32
 8010a66:	682e      	ldr	r6, [r5, #0]
 8010a68:	2900      	cmp	r1, #0
 8010a6a:	d0ac      	beq.n	80109c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8010a6c:	3901      	subs	r1, #1
 8010a6e:	4296      	cmp	r6, r2
 8010a70:	b289      	uxth	r1, r1
 8010a72:	daa7      	bge.n	80109c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8010a74:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8010a78:	682b      	ldr	r3, [r5, #0]
 8010a7a:	3301      	adds	r3, #1
 8010a7c:	602b      	str	r3, [r5, #0]
 8010a7e:	e7f2      	b.n	8010a66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8010a80:	b188      	cbz	r0, 8010aa6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8010a82:	682b      	ldr	r3, [r5, #0]
 8010a84:	3801      	subs	r0, #1
 8010a86:	429a      	cmp	r2, r3
 8010a88:	b280      	uxth	r0, r0
 8010a8a:	dd0c      	ble.n	8010aa6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8010a8c:	f8db 3000 	ldr.w	r3, [fp]
 8010a90:	1c9c      	adds	r4, r3, #2
 8010a92:	f8cb 4000 	str.w	r4, [fp]
 8010a96:	881c      	ldrh	r4, [r3, #0]
 8010a98:	682b      	ldr	r3, [r5, #0]
 8010a9a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8010a9e:	682b      	ldr	r3, [r5, #0]
 8010aa0:	3301      	adds	r3, #1
 8010aa2:	602b      	str	r3, [r5, #0]
 8010aa4:	e7ec      	b.n	8010a80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8010aa6:	2620      	movs	r6, #32
 8010aa8:	b151      	cbz	r1, 8010ac0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8010aaa:	6828      	ldr	r0, [r5, #0]
 8010aac:	3901      	subs	r1, #1
 8010aae:	4282      	cmp	r2, r0
 8010ab0:	b289      	uxth	r1, r1
 8010ab2:	dd05      	ble.n	8010ac0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8010ab4:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8010ab8:	682b      	ldr	r3, [r5, #0]
 8010aba:	3301      	adds	r3, #1
 8010abc:	602b      	str	r3, [r5, #0]
 8010abe:	e7f3      	b.n	8010aa8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8010ac0:	b005      	add	sp, #20
 8010ac2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010ac6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8010ac6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010aca:	2400      	movs	r4, #0
 8010acc:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8010ad0:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8010ad4:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8010ad8:	8014      	strh	r4, [r2, #0]
 8010ada:	701c      	strb	r4, [r3, #0]
 8010adc:	f888 4000 	strb.w	r4, [r8]
 8010ae0:	f88c 4000 	strb.w	r4, [ip]
 8010ae4:	f88e 4000 	strb.w	r4, [lr]
 8010ae8:	703c      	strb	r4, [r7, #0]
 8010aea:	6804      	ldr	r4, [r0, #0]
 8010aec:	b1a4      	cbz	r4, 8010b18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8010aee:	8824      	ldrh	r4, [r4, #0]
 8010af0:	f04f 0901 	mov.w	r9, #1
 8010af4:	b314      	cbz	r4, 8010b3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8010af6:	2c2b      	cmp	r4, #43	@ 0x2b
 8010af8:	d001      	beq.n	8010afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8010afa:	2c20      	cmp	r4, #32
 8010afc:	d110      	bne.n	8010b20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8010afe:	8014      	strh	r4, [r2, #0]
 8010b00:	6804      	ldr	r4, [r0, #0]
 8010b02:	b10c      	cbz	r4, 8010b08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8010b04:	3402      	adds	r4, #2
 8010b06:	6004      	str	r4, [r0, #0]
 8010b08:	680c      	ldr	r4, [r1, #0]
 8010b0a:	b10c      	cbz	r4, 8010b10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8010b0c:	3401      	adds	r4, #1
 8010b0e:	600c      	str	r4, [r1, #0]
 8010b10:	6804      	ldr	r4, [r0, #0]
 8010b12:	b17c      	cbz	r4, 8010b34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8010b14:	8824      	ldrh	r4, [r4, #0]
 8010b16:	e7ed      	b.n	8010af4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8010b18:	680c      	ldr	r4, [r1, #0]
 8010b1a:	b17c      	cbz	r4, 8010b3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8010b1c:	7824      	ldrb	r4, [r4, #0]
 8010b1e:	e7e7      	b.n	8010af0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8010b20:	2c2d      	cmp	r4, #45	@ 0x2d
 8010b22:	d102      	bne.n	8010b2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8010b24:	f883 9000 	strb.w	r9, [r3]
 8010b28:	e7ea      	b.n	8010b00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8010b2a:	2c23      	cmp	r4, #35	@ 0x23
 8010b2c:	d107      	bne.n	8010b3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8010b2e:	f888 9000 	strb.w	r9, [r8]
 8010b32:	e7e5      	b.n	8010b00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8010b34:	680c      	ldr	r4, [r1, #0]
 8010b36:	b10c      	cbz	r4, 8010b3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8010b38:	7824      	ldrb	r4, [r4, #0]
 8010b3a:	e7db      	b.n	8010af4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8010b3c:	2400      	movs	r4, #0
 8010b3e:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8010b42:	2b09      	cmp	r3, #9
 8010b44:	d901      	bls.n	8010b4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8010b46:	2c2a      	cmp	r4, #42	@ 0x2a
 8010b48:	d122      	bne.n	8010b90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8010b4a:	2301      	movs	r3, #1
 8010b4c:	2c30      	cmp	r4, #48	@ 0x30
 8010b4e:	f88e 3000 	strb.w	r3, [lr]
 8010b52:	d10d      	bne.n	8010b70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8010b54:	f88c 3000 	strb.w	r3, [ip]
 8010b58:	6803      	ldr	r3, [r0, #0]
 8010b5a:	b10b      	cbz	r3, 8010b60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8010b5c:	3302      	adds	r3, #2
 8010b5e:	6003      	str	r3, [r0, #0]
 8010b60:	680b      	ldr	r3, [r1, #0]
 8010b62:	b10b      	cbz	r3, 8010b68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8010b64:	3301      	adds	r3, #1
 8010b66:	600b      	str	r3, [r1, #0]
 8010b68:	6803      	ldr	r3, [r0, #0]
 8010b6a:	2b00      	cmp	r3, #0
 8010b6c:	d02f      	beq.n	8010bce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8010b6e:	881c      	ldrh	r4, [r3, #0]
 8010b70:	2c2a      	cmp	r4, #42	@ 0x2a
 8010b72:	d135      	bne.n	8010be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8010b74:	f04f 33ff 	mov.w	r3, #4294967295
 8010b78:	6033      	str	r3, [r6, #0]
 8010b7a:	6803      	ldr	r3, [r0, #0]
 8010b7c:	b10b      	cbz	r3, 8010b82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8010b7e:	3302      	adds	r3, #2
 8010b80:	6003      	str	r3, [r0, #0]
 8010b82:	680b      	ldr	r3, [r1, #0]
 8010b84:	b10b      	cbz	r3, 8010b8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8010b86:	3301      	adds	r3, #1
 8010b88:	600b      	str	r3, [r1, #0]
 8010b8a:	6803      	ldr	r3, [r0, #0]
 8010b8c:	b31b      	cbz	r3, 8010bd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8010b8e:	881c      	ldrh	r4, [r3, #0]
 8010b90:	2c2e      	cmp	r4, #46	@ 0x2e
 8010b92:	d11a      	bne.n	8010bca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010b94:	2301      	movs	r3, #1
 8010b96:	703b      	strb	r3, [r7, #0]
 8010b98:	6803      	ldr	r3, [r0, #0]
 8010b9a:	b10b      	cbz	r3, 8010ba0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8010b9c:	3302      	adds	r3, #2
 8010b9e:	6003      	str	r3, [r0, #0]
 8010ba0:	680b      	ldr	r3, [r1, #0]
 8010ba2:	b10b      	cbz	r3, 8010ba8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8010ba4:	3301      	adds	r3, #1
 8010ba6:	600b      	str	r3, [r1, #0]
 8010ba8:	6803      	ldr	r3, [r0, #0]
 8010baa:	2b00      	cmp	r3, #0
 8010bac:	d036      	beq.n	8010c1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8010bae:	881b      	ldrh	r3, [r3, #0]
 8010bb0:	2b2a      	cmp	r3, #42	@ 0x2a
 8010bb2:	d137      	bne.n	8010c24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8010bb4:	f04f 33ff 	mov.w	r3, #4294967295
 8010bb8:	602b      	str	r3, [r5, #0]
 8010bba:	6803      	ldr	r3, [r0, #0]
 8010bbc:	b10b      	cbz	r3, 8010bc2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8010bbe:	3302      	adds	r3, #2
 8010bc0:	6003      	str	r3, [r0, #0]
 8010bc2:	680b      	ldr	r3, [r1, #0]
 8010bc4:	b10b      	cbz	r3, 8010bca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010bc6:	3301      	adds	r3, #1
 8010bc8:	600b      	str	r3, [r1, #0]
 8010bca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010bce:	680c      	ldr	r4, [r1, #0]
 8010bd0:	b134      	cbz	r4, 8010be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8010bd2:	7824      	ldrb	r4, [r4, #0]
 8010bd4:	e7cc      	b.n	8010b70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8010bd6:	680b      	ldr	r3, [r1, #0]
 8010bd8:	2b00      	cmp	r3, #0
 8010bda:	d0f6      	beq.n	8010bca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010bdc:	781c      	ldrb	r4, [r3, #0]
 8010bde:	e7d7      	b.n	8010b90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8010be0:	2300      	movs	r3, #0
 8010be2:	220a      	movs	r2, #10
 8010be4:	6033      	str	r3, [r6, #0]
 8010be6:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8010bea:	fa1f f38c 	uxth.w	r3, ip
 8010bee:	2b09      	cmp	r3, #9
 8010bf0:	d8ce      	bhi.n	8010b90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8010bf2:	6833      	ldr	r3, [r6, #0]
 8010bf4:	fb02 c303 	mla	r3, r2, r3, ip
 8010bf8:	6033      	str	r3, [r6, #0]
 8010bfa:	6803      	ldr	r3, [r0, #0]
 8010bfc:	b10b      	cbz	r3, 8010c02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8010bfe:	3302      	adds	r3, #2
 8010c00:	6003      	str	r3, [r0, #0]
 8010c02:	680b      	ldr	r3, [r1, #0]
 8010c04:	b10b      	cbz	r3, 8010c0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8010c06:	3301      	adds	r3, #1
 8010c08:	600b      	str	r3, [r1, #0]
 8010c0a:	6803      	ldr	r3, [r0, #0]
 8010c0c:	b10b      	cbz	r3, 8010c12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8010c0e:	881c      	ldrh	r4, [r3, #0]
 8010c10:	e7e9      	b.n	8010be6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010c12:	680c      	ldr	r4, [r1, #0]
 8010c14:	2c00      	cmp	r4, #0
 8010c16:	d0e6      	beq.n	8010be6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010c18:	7824      	ldrb	r4, [r4, #0]
 8010c1a:	e7e4      	b.n	8010be6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010c1c:	680b      	ldr	r3, [r1, #0]
 8010c1e:	b10b      	cbz	r3, 8010c24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8010c20:	781b      	ldrb	r3, [r3, #0]
 8010c22:	e7c5      	b.n	8010bb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8010c24:	2200      	movs	r2, #0
 8010c26:	240a      	movs	r4, #10
 8010c28:	602a      	str	r2, [r5, #0]
 8010c2a:	3b30      	subs	r3, #48	@ 0x30
 8010c2c:	682a      	ldr	r2, [r5, #0]
 8010c2e:	b29e      	uxth	r6, r3
 8010c30:	2e09      	cmp	r6, #9
 8010c32:	d813      	bhi.n	8010c5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8010c34:	fb04 3302 	mla	r3, r4, r2, r3
 8010c38:	602b      	str	r3, [r5, #0]
 8010c3a:	6803      	ldr	r3, [r0, #0]
 8010c3c:	b10b      	cbz	r3, 8010c42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8010c3e:	3302      	adds	r3, #2
 8010c40:	6003      	str	r3, [r0, #0]
 8010c42:	680b      	ldr	r3, [r1, #0]
 8010c44:	b10b      	cbz	r3, 8010c4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8010c46:	3301      	adds	r3, #1
 8010c48:	600b      	str	r3, [r1, #0]
 8010c4a:	6803      	ldr	r3, [r0, #0]
 8010c4c:	b10b      	cbz	r3, 8010c52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8010c4e:	881b      	ldrh	r3, [r3, #0]
 8010c50:	e7eb      	b.n	8010c2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010c52:	680b      	ldr	r3, [r1, #0]
 8010c54:	2b00      	cmp	r3, #0
 8010c56:	d0e8      	beq.n	8010c2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010c58:	781b      	ldrb	r3, [r3, #0]
 8010c5a:	e7e6      	b.n	8010c2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010c5c:	2a06      	cmp	r2, #6
 8010c5e:	bfa8      	it	ge
 8010c60:	2206      	movge	r2, #6
 8010c62:	602a      	str	r2, [r5, #0]
 8010c64:	e7b1      	b.n	8010bca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08010c66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8010c66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c6a:	b0a3      	sub	sp, #140	@ 0x8c
 8010c6c:	2600      	movs	r6, #0
 8010c6e:	4607      	mov	r7, r0
 8010c70:	4688      	mov	r8, r1
 8010c72:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 8010c76:	4631      	mov	r1, r6
 8010c78:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8010c7a:	4648      	mov	r0, r9
 8010c7c:	960d      	str	r6, [sp, #52]	@ 0x34
 8010c7e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8010c82:	2242      	movs	r2, #66	@ 0x42
 8010c84:	f00e f936 	bl	801eef4 <memset>
 8010c88:	b15f      	cbz	r7, 8010ca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8010c8a:	f108 3aff 	add.w	sl, r8, #4294967295
 8010c8e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010c90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010c92:	b152      	cbz	r2, 8010caa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8010c94:	8812      	ldrh	r2, [r2, #0]
 8010c96:	b10a      	cbz	r2, 8010c9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8010c98:	459a      	cmp	sl, r3
 8010c9a:	dc2e      	bgt.n	8010cfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8010c9c:	2200      	movs	r2, #0
 8010c9e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8010ca2:	4638      	mov	r0, r7
 8010ca4:	b023      	add	sp, #140	@ 0x8c
 8010ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010caa:	9a08      	ldr	r2, [sp, #32]
 8010cac:	2a00      	cmp	r2, #0
 8010cae:	d0f5      	beq.n	8010c9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8010cb0:	7812      	ldrb	r2, [r2, #0]
 8010cb2:	e7f0      	b.n	8010c96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8010cb4:	2d00      	cmp	r5, #0
 8010cb6:	d0ea      	beq.n	8010c8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010cb8:	782a      	ldrb	r2, [r5, #0]
 8010cba:	b142      	cbz	r2, 8010cce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8010cbc:	2a25      	cmp	r2, #37	@ 0x25
 8010cbe:	d001      	beq.n	8010cc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8010cc0:	459a      	cmp	sl, r3
 8010cc2:	dc08      	bgt.n	8010cd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8010cc4:	f1bb 0f00 	cmp.w	fp, #0
 8010cc8:	d121      	bne.n	8010d0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8010cca:	2d00      	cmp	r5, #0
 8010ccc:	d0df      	beq.n	8010c8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010cce:	782a      	ldrb	r2, [r5, #0]
 8010cd0:	f04f 0b00 	mov.w	fp, #0
 8010cd4:	e01d      	b.n	8010d12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8010cd6:	f1bb 0f00 	cmp.w	fp, #0
 8010cda:	d077      	beq.n	8010dcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 8010cdc:	f8bb 2000 	ldrh.w	r2, [fp]
 8010ce0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8010ce4:	f1bb 0f00 	cmp.w	fp, #0
 8010ce8:	d002      	beq.n	8010cf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8010cea:	f10b 0202 	add.w	r2, fp, #2
 8010cee:	9209      	str	r2, [sp, #36]	@ 0x24
 8010cf0:	b10d      	cbz	r5, 8010cf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8010cf2:	3501      	adds	r5, #1
 8010cf4:	9508      	str	r5, [sp, #32]
 8010cf6:	3301      	adds	r3, #1
 8010cf8:	930d      	str	r3, [sp, #52]	@ 0x34
 8010cfa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010cfc:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8010d00:	f1bb 0f00 	cmp.w	fp, #0
 8010d04:	d0d6      	beq.n	8010cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8010d06:	f8bb 2000 	ldrh.w	r2, [fp]
 8010d0a:	2a00      	cmp	r2, #0
 8010d0c:	d1d6      	bne.n	8010cbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8010d0e:	f8bb 2000 	ldrh.w	r2, [fp]
 8010d12:	2a00      	cmp	r2, #0
 8010d14:	d0bb      	beq.n	8010c8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010d16:	459a      	cmp	sl, r3
 8010d18:	ddb9      	ble.n	8010c8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010d1a:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8010d1e:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8010d22:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8010d26:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8010d2a:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8010d2e:	960e      	str	r6, [sp, #56]	@ 0x38
 8010d30:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8010d34:	960f      	str	r6, [sp, #60]	@ 0x3c
 8010d36:	f1bb 0f00 	cmp.w	fp, #0
 8010d3a:	d002      	beq.n	8010d42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8010d3c:	f10b 0302 	add.w	r3, fp, #2
 8010d40:	9309      	str	r3, [sp, #36]	@ 0x24
 8010d42:	b10d      	cbz	r5, 8010d48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8010d44:	1c6b      	adds	r3, r5, #1
 8010d46:	9308      	str	r3, [sp, #32]
 8010d48:	ab0f      	add	r3, sp, #60	@ 0x3c
 8010d4a:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8010d4e:	a908      	add	r1, sp, #32
 8010d50:	a809      	add	r0, sp, #36	@ 0x24
 8010d52:	9305      	str	r3, [sp, #20]
 8010d54:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8010d58:	9304      	str	r3, [sp, #16]
 8010d5a:	ab0e      	add	r3, sp, #56	@ 0x38
 8010d5c:	9303      	str	r3, [sp, #12]
 8010d5e:	ab0c      	add	r3, sp, #48	@ 0x30
 8010d60:	9302      	str	r3, [sp, #8]
 8010d62:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8010d66:	9301      	str	r3, [sp, #4]
 8010d68:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8010d6c:	9300      	str	r3, [sp, #0]
 8010d6e:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8010d72:	f7ff fea8 	bl	8010ac6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8010d76:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010d78:	2b00      	cmp	r3, #0
 8010d7a:	bfbf      	itttt	lt
 8010d7c:	6823      	ldrlt	r3, [r4, #0]
 8010d7e:	3404      	addlt	r4, #4
 8010d80:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8010d84:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8010d86:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8010d88:	2b00      	cmp	r3, #0
 8010d8a:	bfbe      	ittt	lt
 8010d8c:	6823      	ldrlt	r3, [r4, #0]
 8010d8e:	3404      	addlt	r4, #4
 8010d90:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8010d94:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8010d98:	bfb8      	it	lt
 8010d9a:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8010d9c:	b1d9      	cbz	r1, 8010dd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 8010d9e:	880b      	ldrh	r3, [r1, #0]
 8010da0:	2b69      	cmp	r3, #105	@ 0x69
 8010da2:	d01f      	beq.n	8010de4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010da4:	d82f      	bhi.n	8010e06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 8010da6:	2b58      	cmp	r3, #88	@ 0x58
 8010da8:	d01c      	beq.n	8010de4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010daa:	d818      	bhi.n	8010dde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 8010dac:	2b25      	cmp	r3, #37	@ 0x25
 8010dae:	d034      	beq.n	8010e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 8010db0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010db2:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8010db6:	f1bb 0f00 	cmp.w	fp, #0
 8010dba:	f000 80b7 	beq.w	8010f2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 8010dbe:	f8bb 5000 	ldrh.w	r5, [fp]
 8010dc2:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8010dc6:	3301      	adds	r3, #1
 8010dc8:	930d      	str	r3, [sp, #52]	@ 0x34
 8010dca:	e029      	b.n	8010e20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8010dcc:	b10d      	cbz	r5, 8010dd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 8010dce:	782a      	ldrb	r2, [r5, #0]
 8010dd0:	e786      	b.n	8010ce0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8010dd2:	462a      	mov	r2, r5
 8010dd4:	e784      	b.n	8010ce0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8010dd6:	2a00      	cmp	r2, #0
 8010dd8:	d0ea      	beq.n	8010db0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8010dda:	7813      	ldrb	r3, [r2, #0]
 8010ddc:	e7e0      	b.n	8010da0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 8010dde:	3b63      	subs	r3, #99	@ 0x63
 8010de0:	2b01      	cmp	r3, #1
 8010de2:	d8e5      	bhi.n	8010db0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8010de4:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8010de8:	b329      	cbz	r1, 8010e36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 8010dea:	880b      	ldrh	r3, [r1, #0]
 8010dec:	2b69      	cmp	r3, #105	@ 0x69
 8010dee:	d063      	beq.n	8010eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8010df0:	d825      	bhi.n	8010e3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 8010df2:	2b63      	cmp	r3, #99	@ 0x63
 8010df4:	d038      	beq.n	8010e68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 8010df6:	2b64      	cmp	r3, #100	@ 0x64
 8010df8:	d05e      	beq.n	8010eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8010dfa:	2b58      	cmp	r3, #88	@ 0x58
 8010dfc:	d07a      	beq.n	8010ef4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 8010dfe:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8010e02:	4625      	mov	r5, r4
 8010e04:	e036      	b.n	8010e74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010e06:	2b73      	cmp	r3, #115	@ 0x73
 8010e08:	d0ec      	beq.n	8010de4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010e0a:	d802      	bhi.n	8010e12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 8010e0c:	2b6f      	cmp	r3, #111	@ 0x6f
 8010e0e:	d1cf      	bne.n	8010db0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8010e10:	e7e8      	b.n	8010de4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010e12:	2b75      	cmp	r3, #117	@ 0x75
 8010e14:	d0e6      	beq.n	8010de4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010e16:	2b78      	cmp	r3, #120	@ 0x78
 8010e18:	e7f9      	b.n	8010e0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 8010e1a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010e1c:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8010e20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010e22:	b10b      	cbz	r3, 8010e28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 8010e24:	3302      	adds	r3, #2
 8010e26:	9309      	str	r3, [sp, #36]	@ 0x24
 8010e28:	9b08      	ldr	r3, [sp, #32]
 8010e2a:	2b00      	cmp	r3, #0
 8010e2c:	f43f af2f 	beq.w	8010c8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010e30:	3301      	adds	r3, #1
 8010e32:	9308      	str	r3, [sp, #32]
 8010e34:	e72b      	b.n	8010c8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010e36:	2a00      	cmp	r2, #0
 8010e38:	d0e1      	beq.n	8010dfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8010e3a:	7813      	ldrb	r3, [r2, #0]
 8010e3c:	e7d6      	b.n	8010dec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 8010e3e:	2b73      	cmp	r3, #115	@ 0x73
 8010e40:	d036      	beq.n	8010eb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 8010e42:	d807      	bhi.n	8010e54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 8010e44:	2b6f      	cmp	r3, #111	@ 0x6f
 8010e46:	d1da      	bne.n	8010dfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8010e48:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010e4a:	1d25      	adds	r5, r4, #4
 8010e4c:	2308      	movs	r3, #8
 8010e4e:	eba8 0202 	sub.w	r2, r8, r2
 8010e52:	e049      	b.n	8010ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8010e54:	2b75      	cmp	r3, #117	@ 0x75
 8010e56:	d042      	beq.n	8010ede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 8010e58:	2b78      	cmp	r3, #120	@ 0x78
 8010e5a:	d1d0      	bne.n	8010dfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8010e5c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010e5e:	1d25      	adds	r5, r4, #4
 8010e60:	2310      	movs	r3, #16
 8010e62:	eba8 0202 	sub.w	r2, r8, r2
 8010e66:	e03f      	b.n	8010ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8010e68:	6823      	ldr	r3, [r4, #0]
 8010e6a:	1d25      	adds	r5, r4, #4
 8010e6c:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 8010e70:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8010e74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010e76:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8010e7a:	2b00      	cmp	r3, #0
 8010e7c:	d051      	beq.n	8010f22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 8010e7e:	881a      	ldrh	r2, [r3, #0]
 8010e80:	a80d      	add	r0, sp, #52	@ 0x34
 8010e82:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8010e86:	462c      	mov	r4, r5
 8010e88:	9005      	str	r0, [sp, #20]
 8010e8a:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8010e8e:	9004      	str	r0, [sp, #16]
 8010e90:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8010e92:	9003      	str	r0, [sp, #12]
 8010e94:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8010e98:	9002      	str	r0, [sp, #8]
 8010e9a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8010e9c:	9001      	str	r0, [sp, #4]
 8010e9e:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8010ea2:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8010ea6:	9000      	str	r0, [sp, #0]
 8010ea8:	a810      	add	r0, sp, #64	@ 0x40
 8010eaa:	f7ff fd49 	bl	8010940 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8010eae:	e7b7      	b.n	8010e20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8010eb0:	1d25      	adds	r5, r4, #4
 8010eb2:	6823      	ldr	r3, [r4, #0]
 8010eb4:	9310      	str	r3, [sp, #64]	@ 0x40
 8010eb6:	e7dd      	b.n	8010e74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010eb8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010eba:	230a      	movs	r3, #10
 8010ebc:	4649      	mov	r1, r9
 8010ebe:	6820      	ldr	r0, [r4, #0]
 8010ec0:	eba8 0202 	sub.w	r2, r8, r2
 8010ec4:	1d25      	adds	r5, r4, #4
 8010ec6:	b292      	uxth	r2, r2
 8010ec8:	f7ff fcf0 	bl	80108ac <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8010ecc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8010ed0:	2b2d      	cmp	r3, #45	@ 0x2d
 8010ed2:	d1cf      	bne.n	8010e74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010ed4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010ed8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010eda:	3302      	adds	r3, #2
 8010edc:	e7ea      	b.n	8010eb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 8010ede:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010ee0:	1d25      	adds	r5, r4, #4
 8010ee2:	230a      	movs	r3, #10
 8010ee4:	eba8 0202 	sub.w	r2, r8, r2
 8010ee8:	b292      	uxth	r2, r2
 8010eea:	4649      	mov	r1, r9
 8010eec:	6820      	ldr	r0, [r4, #0]
 8010eee:	f7ff fd09 	bl	8010904 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8010ef2:	e7bf      	b.n	8010e74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010ef4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010ef6:	2310      	movs	r3, #16
 8010ef8:	4649      	mov	r1, r9
 8010efa:	6820      	ldr	r0, [r4, #0]
 8010efc:	eba8 0202 	sub.w	r2, r8, r2
 8010f00:	1d25      	adds	r5, r4, #4
 8010f02:	b292      	uxth	r2, r2
 8010f04:	f7ff fcfe 	bl	8010904 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8010f08:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 8010f0c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8010f10:	2b00      	cmp	r3, #0
 8010f12:	d0af      	beq.n	8010e74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010f14:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8010f18:	2919      	cmp	r1, #25
 8010f1a:	d8f7      	bhi.n	8010f0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8010f1c:	3b20      	subs	r3, #32
 8010f1e:	8013      	strh	r3, [r2, #0]
 8010f20:	e7f4      	b.n	8010f0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8010f22:	9a08      	ldr	r2, [sp, #32]
 8010f24:	2a00      	cmp	r2, #0
 8010f26:	d0ab      	beq.n	8010e80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8010f28:	7812      	ldrb	r2, [r2, #0]
 8010f2a:	e7a9      	b.n	8010e80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8010f2c:	2d00      	cmp	r5, #0
 8010f2e:	f43f af48 	beq.w	8010dc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 8010f32:	782d      	ldrb	r5, [r5, #0]
 8010f34:	e745      	b.n	8010dc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

08010f36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8010f36:	b507      	push	{r0, r1, r2, lr}
 8010f38:	9300      	str	r3, [sp, #0]
 8010f3a:	4613      	mov	r3, r2
 8010f3c:	2200      	movs	r2, #0
 8010f3e:	f7ff fe92 	bl	8010c66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8010f42:	b003      	add	sp, #12
 8010f44:	f85d fb04 	ldr.w	pc, [sp], #4

08010f48 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8010f48:	b40c      	push	{r2, r3}
 8010f4a:	b507      	push	{r0, r1, r2, lr}
 8010f4c:	ab04      	add	r3, sp, #16
 8010f4e:	f853 2b04 	ldr.w	r2, [r3], #4
 8010f52:	9301      	str	r3, [sp, #4]
 8010f54:	f7ff ffef 	bl	8010f36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8010f58:	b003      	add	sp, #12
 8010f5a:	f85d eb04 	ldr.w	lr, [sp], #4
 8010f5e:	b002      	add	sp, #8
 8010f60:	4770      	bx	lr
	...

08010f64 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8010f64:	4b01      	ldr	r3, [pc, #4]	@ (8010f6c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8010f66:	6018      	str	r0, [r3, #0]
 8010f68:	4770      	bx	lr
 8010f6a:	bf00      	nop
 8010f6c:	20015120 	.word	0x20015120

08010f70 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8010f70:	4b06      	ldr	r3, [pc, #24]	@ (8010f8c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8010f72:	881a      	ldrh	r2, [r3, #0]
 8010f74:	4282      	cmp	r2, r0
 8010f76:	d807      	bhi.n	8010f88 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8010f78:	4b05      	ldr	r3, [pc, #20]	@ (8010f90 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8010f7a:	881b      	ldrh	r3, [r3, #0]
 8010f7c:	4413      	add	r3, r2
 8010f7e:	4298      	cmp	r0, r3
 8010f80:	bfac      	ite	ge
 8010f82:	2000      	movge	r0, #0
 8010f84:	2001      	movlt	r0, #1
 8010f86:	4770      	bx	lr
 8010f88:	2000      	movs	r0, #0
 8010f8a:	4770      	bx	lr
 8010f8c:	20015140 	.word	0x20015140
 8010f90:	20015144 	.word	0x20015144

08010f94 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8010f94:	b508      	push	{r3, lr}
 8010f96:	4601      	mov	r1, r0
 8010f98:	f7ff ffea 	bl	8010f70 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8010f9c:	b118      	cbz	r0, 8010fa6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8010f9e:	4b02      	ldr	r3, [pc, #8]	@ (8010fa8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8010fa0:	681b      	ldr	r3, [r3, #0]
 8010fa2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8010fa6:	bd08      	pop	{r3, pc}
 8010fa8:	20015124 	.word	0x20015124

08010fac <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8010fac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010fae:	4c24      	ldr	r4, [pc, #144]	@ (8011040 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8010fb0:	6823      	ldr	r3, [r4, #0]
 8010fb2:	2b00      	cmp	r3, #0
 8010fb4:	d042      	beq.n	801103c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8010fb6:	4a23      	ldr	r2, [pc, #140]	@ (8011044 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8010fb8:	4d23      	ldr	r5, [pc, #140]	@ (8011048 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8010fba:	8811      	ldrh	r1, [r2, #0]
 8010fbc:	f8b5 c000 	ldrh.w	ip, [r5]
 8010fc0:	4822      	ldr	r0, [pc, #136]	@ (801104c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8010fc2:	4461      	add	r1, ip
 8010fc4:	1c4a      	adds	r2, r1, #1
 8010fc6:	008f      	lsls	r7, r1, #2
 8010fc8:	f022 0201 	bic.w	r2, r2, #1
 8010fcc:	19de      	adds	r6, r3, r7
 8010fce:	0412      	lsls	r2, r2, #16
 8010fd0:	6006      	str	r6, [r0, #0]
 8010fd2:	4e1f      	ldr	r6, [pc, #124]	@ (8011050 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8010fd4:	0c12      	lsrs	r2, r2, #16
 8010fd6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8010fda:	19da      	adds	r2, r3, r7
 8010fdc:	6032      	str	r2, [r6, #0]
 8010fde:	220e      	movs	r2, #14
 8010fe0:	fb02 f20c 	mul.w	r2, r2, ip
 8010fe4:	3203      	adds	r2, #3
 8010fe6:	f022 0203 	bic.w	r2, r2, #3
 8010fea:	443a      	add	r2, r7
 8010fec:	4f19      	ldr	r7, [pc, #100]	@ (8011054 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8010fee:	4413      	add	r3, r2
 8010ff0:	603b      	str	r3, [r7, #0]
 8010ff2:	2300      	movs	r3, #0
 8010ff4:	4f18      	ldr	r7, [pc, #96]	@ (8011058 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8010ff6:	469c      	mov	ip, r3
 8010ff8:	803b      	strh	r3, [r7, #0]
 8010ffa:	4f18      	ldr	r7, [pc, #96]	@ (801105c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8010ffc:	683f      	ldr	r7, [r7, #0]
 8010ffe:	1aba      	subs	r2, r7, r2
 8011000:	4f17      	ldr	r7, [pc, #92]	@ (8011060 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8011002:	603a      	str	r2, [r7, #0]
 8011004:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8011008:	4a16      	ldr	r2, [pc, #88]	@ (8011064 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801100a:	8013      	strh	r3, [r2, #0]
 801100c:	428b      	cmp	r3, r1
 801100e:	d10d      	bne.n	801102c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8011010:	882d      	ldrh	r5, [r5, #0]
 8011012:	2300      	movs	r3, #0
 8011014:	6830      	ldr	r0, [r6, #0]
 8011016:	240e      	movs	r4, #14
 8011018:	429d      	cmp	r5, r3
 801101a:	d90f      	bls.n	801103c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801101c:	fb04 0203 	mla	r2, r4, r3, r0
 8011020:	3301      	adds	r3, #1
 8011022:	7b11      	ldrb	r1, [r2, #12]
 8011024:	f36f 1145 	bfc	r1, #5, #1
 8011028:	7311      	strb	r1, [r2, #12]
 801102a:	e7f5      	b.n	8011018 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801102c:	6822      	ldr	r2, [r4, #0]
 801102e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8011032:	6802      	ldr	r2, [r0, #0]
 8011034:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8011038:	3301      	adds	r3, #1
 801103a:	e7e7      	b.n	801100c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801103c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801103e:	bf00      	nop
 8011040:	20015124 	.word	0x20015124
 8011044:	20015140 	.word	0x20015140
 8011048:	20015144 	.word	0x20015144
 801104c:	20015138 	.word	0x20015138
 8011050:	20015128 	.word	0x20015128
 8011054:	20015130 	.word	0x20015130
 8011058:	20015142 	.word	0x20015142
 801105c:	2001512c 	.word	0x2001512c
 8011060:	2001513c 	.word	0x2001513c
 8011064:	20015134 	.word	0x20015134

08011068 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8011068:	4b06      	ldr	r3, [pc, #24]	@ (8011084 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801106a:	681b      	ldr	r3, [r3, #0]
 801106c:	b943      	cbnz	r3, 8011080 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801106e:	b139      	cbz	r1, 8011080 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8011070:	4b05      	ldr	r3, [pc, #20]	@ (8011088 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8011072:	801a      	strh	r2, [r3, #0]
 8011074:	4b05      	ldr	r3, [pc, #20]	@ (801108c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8011076:	6019      	str	r1, [r3, #0]
 8011078:	4b05      	ldr	r3, [pc, #20]	@ (8011090 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801107a:	6018      	str	r0, [r3, #0]
 801107c:	f7ff bf96 	b.w	8010fac <_ZN8touchgfx6Bitmap10clearCacheEv>
 8011080:	4770      	bx	lr
 8011082:	bf00      	nop
 8011084:	20015130 	.word	0x20015130
 8011088:	20015144 	.word	0x20015144
 801108c:	2001512c 	.word	0x2001512c
 8011090:	20015124 	.word	0x20015124

08011094 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8011094:	b470      	push	{r4, r5, r6}
 8011096:	4c07      	ldr	r4, [pc, #28]	@ (80110b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8011098:	4605      	mov	r5, r0
 801109a:	4610      	mov	r0, r2
 801109c:	9a03      	ldr	r2, [sp, #12]
 801109e:	6826      	ldr	r6, [r4, #0]
 80110a0:	b936      	cbnz	r6, 80110b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80110a2:	6025      	str	r5, [r4, #0]
 80110a4:	4c04      	ldr	r4, [pc, #16]	@ (80110b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80110a6:	8021      	strh	r1, [r4, #0]
 80110a8:	4619      	mov	r1, r3
 80110aa:	bc70      	pop	{r4, r5, r6}
 80110ac:	f7ff bfdc 	b.w	8011068 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80110b0:	bc70      	pop	{r4, r5, r6}
 80110b2:	4770      	bx	lr
 80110b4:	20015148 	.word	0x20015148
 80110b8:	20015140 	.word	0x20015140

080110bc <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80110bc:	4a12      	ldr	r2, [pc, #72]	@ (8011108 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80110be:	8803      	ldrh	r3, [r0, #0]
 80110c0:	8812      	ldrh	r2, [r2, #0]
 80110c2:	4293      	cmp	r3, r2
 80110c4:	d207      	bcs.n	80110d6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80110c6:	4a11      	ldr	r2, [pc, #68]	@ (801110c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80110c8:	2114      	movs	r1, #20
 80110ca:	6812      	ldr	r2, [r2, #0]
 80110cc:	fb01 2303 	mla	r3, r1, r3, r2
 80110d0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80110d4:	4770      	bx	lr
 80110d6:	490e      	ldr	r1, [pc, #56]	@ (8011110 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80110d8:	8809      	ldrh	r1, [r1, #0]
 80110da:	4411      	add	r1, r2
 80110dc:	428b      	cmp	r3, r1
 80110de:	da04      	bge.n	80110ea <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80110e0:	1a9b      	subs	r3, r3, r2
 80110e2:	4a0c      	ldr	r2, [pc, #48]	@ (8011114 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80110e4:	210e      	movs	r1, #14
 80110e6:	6812      	ldr	r2, [r2, #0]
 80110e8:	e7f0      	b.n	80110cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80110ea:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80110ee:	4293      	cmp	r3, r2
 80110f0:	d108      	bne.n	8011104 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80110f2:	4b09      	ldr	r3, [pc, #36]	@ (8011118 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80110f4:	781b      	ldrb	r3, [r3, #0]
 80110f6:	b91b      	cbnz	r3, 8011100 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80110f8:	4b08      	ldr	r3, [pc, #32]	@ (801111c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80110fa:	f9b3 0000 	ldrsh.w	r0, [r3]
 80110fe:	4770      	bx	lr
 8011100:	4b07      	ldr	r3, [pc, #28]	@ (8011120 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8011102:	e7fa      	b.n	80110fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8011104:	2000      	movs	r0, #0
 8011106:	4770      	bx	lr
 8011108:	20015140 	.word	0x20015140
 801110c:	20015148 	.word	0x20015148
 8011110:	20015144 	.word	0x20015144
 8011114:	20015128 	.word	0x20015128
 8011118:	200150b8 	.word	0x200150b8
 801111c:	200150ba 	.word	0x200150ba
 8011120:	200150bc 	.word	0x200150bc

08011124 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8011124:	4a12      	ldr	r2, [pc, #72]	@ (8011170 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8011126:	8803      	ldrh	r3, [r0, #0]
 8011128:	8812      	ldrh	r2, [r2, #0]
 801112a:	4293      	cmp	r3, r2
 801112c:	d207      	bcs.n	801113e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801112e:	4a11      	ldr	r2, [pc, #68]	@ (8011174 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8011130:	2114      	movs	r1, #20
 8011132:	6812      	ldr	r2, [r2, #0]
 8011134:	fb01 2303 	mla	r3, r1, r3, r2
 8011138:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801113c:	4770      	bx	lr
 801113e:	490e      	ldr	r1, [pc, #56]	@ (8011178 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8011140:	8809      	ldrh	r1, [r1, #0]
 8011142:	4411      	add	r1, r2
 8011144:	428b      	cmp	r3, r1
 8011146:	da04      	bge.n	8011152 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8011148:	1a9b      	subs	r3, r3, r2
 801114a:	4a0c      	ldr	r2, [pc, #48]	@ (801117c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801114c:	210e      	movs	r1, #14
 801114e:	6812      	ldr	r2, [r2, #0]
 8011150:	e7f0      	b.n	8011134 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8011152:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8011156:	4293      	cmp	r3, r2
 8011158:	d108      	bne.n	801116c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801115a:	4b09      	ldr	r3, [pc, #36]	@ (8011180 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801115c:	781b      	ldrb	r3, [r3, #0]
 801115e:	b91b      	cbnz	r3, 8011168 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8011160:	4b08      	ldr	r3, [pc, #32]	@ (8011184 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8011162:	f9b3 0000 	ldrsh.w	r0, [r3]
 8011166:	4770      	bx	lr
 8011168:	4b07      	ldr	r3, [pc, #28]	@ (8011188 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801116a:	e7fa      	b.n	8011162 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801116c:	2000      	movs	r0, #0
 801116e:	4770      	bx	lr
 8011170:	20015140 	.word	0x20015140
 8011174:	20015148 	.word	0x20015148
 8011178:	20015144 	.word	0x20015144
 801117c:	20015128 	.word	0x20015128
 8011180:	200150b8 	.word	0x200150b8
 8011184:	200150bc 	.word	0x200150bc
 8011188:	200150ba 	.word	0x200150ba

0801118c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801118c:	4a1f      	ldr	r2, [pc, #124]	@ (801120c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801118e:	b510      	push	{r4, lr}
 8011190:	880b      	ldrh	r3, [r1, #0]
 8011192:	8812      	ldrh	r2, [r2, #0]
 8011194:	4293      	cmp	r3, r2
 8011196:	d213      	bcs.n	80111c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8011198:	4a1d      	ldr	r2, [pc, #116]	@ (8011210 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801119a:	2114      	movs	r1, #20
 801119c:	6812      	ldr	r2, [r2, #0]
 801119e:	fb01 2303 	mla	r3, r1, r3, r2
 80111a2:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80111a6:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80111aa:	8a1a      	ldrh	r2, [r3, #16]
 80111ac:	8a5b      	ldrh	r3, [r3, #18]
 80111ae:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80111b2:	8004      	strh	r4, [r0, #0]
 80111b4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80111b8:	8041      	strh	r1, [r0, #2]
 80111ba:	8082      	strh	r2, [r0, #4]
 80111bc:	80c3      	strh	r3, [r0, #6]
 80111be:	e00e      	b.n	80111de <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80111c0:	4914      	ldr	r1, [pc, #80]	@ (8011214 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80111c2:	8809      	ldrh	r1, [r1, #0]
 80111c4:	4411      	add	r1, r2
 80111c6:	428b      	cmp	r3, r1
 80111c8:	da0a      	bge.n	80111e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80111ca:	1a9b      	subs	r3, r3, r2
 80111cc:	4a12      	ldr	r2, [pc, #72]	@ (8011218 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80111ce:	210e      	movs	r1, #14
 80111d0:	6812      	ldr	r2, [r2, #0]
 80111d2:	fb01 2303 	mla	r3, r1, r3, r2
 80111d6:	681a      	ldr	r2, [r3, #0]
 80111d8:	6002      	str	r2, [r0, #0]
 80111da:	685a      	ldr	r2, [r3, #4]
 80111dc:	6042      	str	r2, [r0, #4]
 80111de:	bd10      	pop	{r4, pc}
 80111e0:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80111e4:	4293      	cmp	r3, r2
 80111e6:	d10b      	bne.n	8011200 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80111e8:	4b0c      	ldr	r3, [pc, #48]	@ (801121c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80111ea:	f9b3 1000 	ldrsh.w	r1, [r3]
 80111ee:	4b0c      	ldr	r3, [pc, #48]	@ (8011220 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80111f0:	8081      	strh	r1, [r0, #4]
 80111f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80111f6:	2300      	movs	r3, #0
 80111f8:	80c2      	strh	r2, [r0, #6]
 80111fa:	8003      	strh	r3, [r0, #0]
 80111fc:	8043      	strh	r3, [r0, #2]
 80111fe:	e7ee      	b.n	80111de <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8011200:	2300      	movs	r3, #0
 8011202:	8003      	strh	r3, [r0, #0]
 8011204:	8043      	strh	r3, [r0, #2]
 8011206:	8083      	strh	r3, [r0, #4]
 8011208:	e7d8      	b.n	80111bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801120a:	bf00      	nop
 801120c:	20015140 	.word	0x20015140
 8011210:	20015148 	.word	0x20015148
 8011214:	20015144 	.word	0x20015144
 8011218:	20015128 	.word	0x20015128
 801121c:	200150b4 	.word	0x200150b4
 8011220:	200150b6 	.word	0x200150b6

08011224 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8011224:	4a17      	ldr	r2, [pc, #92]	@ (8011284 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8011226:	8803      	ldrh	r3, [r0, #0]
 8011228:	8812      	ldrh	r2, [r2, #0]
 801122a:	4293      	cmp	r3, r2
 801122c:	d213      	bcs.n	8011256 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801122e:	4a16      	ldr	r2, [pc, #88]	@ (8011288 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8011230:	2114      	movs	r1, #20
 8011232:	6812      	ldr	r2, [r2, #0]
 8011234:	fb01 2303 	mla	r3, r1, r3, r2
 8011238:	8a1a      	ldrh	r2, [r3, #16]
 801123a:	8919      	ldrh	r1, [r3, #8]
 801123c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8011240:	428a      	cmp	r2, r1
 8011242:	db1d      	blt.n	8011280 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8011244:	8a58      	ldrh	r0, [r3, #18]
 8011246:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801124a:	895b      	ldrh	r3, [r3, #10]
 801124c:	4298      	cmp	r0, r3
 801124e:	bfac      	ite	ge
 8011250:	2000      	movge	r0, #0
 8011252:	2001      	movlt	r0, #1
 8011254:	4770      	bx	lr
 8011256:	490d      	ldr	r1, [pc, #52]	@ (801128c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8011258:	8809      	ldrh	r1, [r1, #0]
 801125a:	4411      	add	r1, r2
 801125c:	428b      	cmp	r3, r1
 801125e:	da0d      	bge.n	801127c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8011260:	1a9b      	subs	r3, r3, r2
 8011262:	4a0b      	ldr	r2, [pc, #44]	@ (8011290 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8011264:	210e      	movs	r1, #14
 8011266:	6812      	ldr	r2, [r2, #0]
 8011268:	fb01 2303 	mla	r3, r1, r3, r2
 801126c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8011270:	891a      	ldrh	r2, [r3, #8]
 8011272:	4291      	cmp	r1, r2
 8011274:	db04      	blt.n	8011280 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8011276:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801127a:	e7e6      	b.n	801124a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801127c:	2000      	movs	r0, #0
 801127e:	4770      	bx	lr
 8011280:	2001      	movs	r0, #1
 8011282:	4770      	bx	lr
 8011284:	20015140 	.word	0x20015140
 8011288:	20015148 	.word	0x20015148
 801128c:	20015144 	.word	0x20015144
 8011290:	20015128 	.word	0x20015128

08011294 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8011294:	4a12      	ldr	r2, [pc, #72]	@ (80112e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8011296:	8803      	ldrh	r3, [r0, #0]
 8011298:	8811      	ldrh	r1, [r2, #0]
 801129a:	428b      	cmp	r3, r1
 801129c:	d20b      	bcs.n	80112b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801129e:	4a11      	ldr	r2, [pc, #68]	@ (80112e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80112a0:	6812      	ldr	r2, [r2, #0]
 80112a2:	b112      	cbz	r2, 80112aa <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80112a4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80112a8:	b9c0      	cbnz	r0, 80112dc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80112aa:	4a0f      	ldr	r2, [pc, #60]	@ (80112e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80112ac:	6811      	ldr	r1, [r2, #0]
 80112ae:	2214      	movs	r2, #20
 80112b0:	4353      	muls	r3, r2
 80112b2:	58c8      	ldr	r0, [r1, r3]
 80112b4:	4770      	bx	lr
 80112b6:	4a0d      	ldr	r2, [pc, #52]	@ (80112ec <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80112b8:	8812      	ldrh	r2, [r2, #0]
 80112ba:	440a      	add	r2, r1
 80112bc:	4293      	cmp	r3, r2
 80112be:	da04      	bge.n	80112ca <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80112c0:	4a08      	ldr	r2, [pc, #32]	@ (80112e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80112c2:	6812      	ldr	r2, [r2, #0]
 80112c4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80112c8:	4770      	bx	lr
 80112ca:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80112ce:	4293      	cmp	r3, r2
 80112d0:	d103      	bne.n	80112da <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80112d2:	4b07      	ldr	r3, [pc, #28]	@ (80112f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80112d4:	681b      	ldr	r3, [r3, #0]
 80112d6:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 80112d8:	4770      	bx	lr
 80112da:	2000      	movs	r0, #0
 80112dc:	4770      	bx	lr
 80112de:	bf00      	nop
 80112e0:	20015140 	.word	0x20015140
 80112e4:	20015124 	.word	0x20015124
 80112e8:	20015148 	.word	0x20015148
 80112ec:	20015144 	.word	0x20015144
 80112f0:	200150c0 	.word	0x200150c0

080112f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80112f4:	4b24      	ldr	r3, [pc, #144]	@ (8011388 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80112f6:	8802      	ldrh	r2, [r0, #0]
 80112f8:	8818      	ldrh	r0, [r3, #0]
 80112fa:	4282      	cmp	r2, r0
 80112fc:	d221      	bcs.n	8011342 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80112fe:	4b23      	ldr	r3, [pc, #140]	@ (801138c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8011300:	6819      	ldr	r1, [r3, #0]
 8011302:	2314      	movs	r3, #20
 8011304:	fb03 1302 	mla	r3, r3, r2, r1
 8011308:	6858      	ldr	r0, [r3, #4]
 801130a:	2800      	cmp	r0, #0
 801130c:	d03a      	beq.n	8011384 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801130e:	4920      	ldr	r1, [pc, #128]	@ (8011390 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8011310:	6809      	ldr	r1, [r1, #0]
 8011312:	2900      	cmp	r1, #0
 8011314:	d036      	beq.n	8011384 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8011316:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801131a:	2900      	cmp	r1, #0
 801131c:	d032      	beq.n	8011384 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801131e:	891a      	ldrh	r2, [r3, #8]
 8011320:	8958      	ldrh	r0, [r3, #10]
 8011322:	4350      	muls	r0, r2
 8011324:	7c5a      	ldrb	r2, [r3, #17]
 8011326:	7cdb      	ldrb	r3, [r3, #19]
 8011328:	0952      	lsrs	r2, r2, #5
 801132a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801132e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8011332:	2b0b      	cmp	r3, #11
 8011334:	bf18      	it	ne
 8011336:	0040      	lslne	r0, r0, #1
 8011338:	3003      	adds	r0, #3
 801133a:	f020 0003 	bic.w	r0, r0, #3
 801133e:	4408      	add	r0, r1
 8011340:	4770      	bx	lr
 8011342:	4b14      	ldr	r3, [pc, #80]	@ (8011394 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8011344:	881b      	ldrh	r3, [r3, #0]
 8011346:	4403      	add	r3, r0
 8011348:	429a      	cmp	r2, r3
 801134a:	da1a      	bge.n	8011382 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801134c:	4b12      	ldr	r3, [pc, #72]	@ (8011398 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801134e:	1a10      	subs	r0, r2, r0
 8011350:	210e      	movs	r1, #14
 8011352:	681b      	ldr	r3, [r3, #0]
 8011354:	fb01 3000 	mla	r0, r1, r0, r3
 8011358:	7b03      	ldrb	r3, [r0, #12]
 801135a:	f003 031f 	and.w	r3, r3, #31
 801135e:	2b0b      	cmp	r3, #11
 8011360:	d10b      	bne.n	801137a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8011362:	8903      	ldrh	r3, [r0, #8]
 8011364:	8940      	ldrh	r0, [r0, #10]
 8011366:	4358      	muls	r0, r3
 8011368:	4b09      	ldr	r3, [pc, #36]	@ (8011390 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801136a:	3003      	adds	r0, #3
 801136c:	6819      	ldr	r1, [r3, #0]
 801136e:	f020 0303 	bic.w	r3, r0, #3
 8011372:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8011376:	4418      	add	r0, r3
 8011378:	4770      	bx	lr
 801137a:	2b0d      	cmp	r3, #13
 801137c:	d101      	bne.n	8011382 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801137e:	300d      	adds	r0, #13
 8011380:	4770      	bx	lr
 8011382:	2000      	movs	r0, #0
 8011384:	4770      	bx	lr
 8011386:	bf00      	nop
 8011388:	20015140 	.word	0x20015140
 801138c:	20015148 	.word	0x20015148
 8011390:	20015124 	.word	0x20015124
 8011394:	20015144 	.word	0x20015144
 8011398:	20015128 	.word	0x20015128

0801139c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801139c:	4a17      	ldr	r2, [pc, #92]	@ (80113fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801139e:	b510      	push	{r4, lr}
 80113a0:	8803      	ldrh	r3, [r0, #0]
 80113a2:	8812      	ldrh	r2, [r2, #0]
 80113a4:	4293      	cmp	r3, r2
 80113a6:	d20c      	bcs.n	80113c2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80113a8:	4a15      	ldr	r2, [pc, #84]	@ (8011400 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80113aa:	2114      	movs	r1, #20
 80113ac:	6812      	ldr	r2, [r2, #0]
 80113ae:	fb01 2303 	mla	r3, r1, r3, r2
 80113b2:	7c58      	ldrb	r0, [r3, #17]
 80113b4:	0942      	lsrs	r2, r0, #5
 80113b6:	7cd8      	ldrb	r0, [r3, #19]
 80113b8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80113bc:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80113c0:	bd10      	pop	{r4, pc}
 80113c2:	4910      	ldr	r1, [pc, #64]	@ (8011404 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80113c4:	8809      	ldrh	r1, [r1, #0]
 80113c6:	4411      	add	r1, r2
 80113c8:	428b      	cmp	r3, r1
 80113ca:	da09      	bge.n	80113e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80113cc:	1a9b      	subs	r3, r3, r2
 80113ce:	4a0e      	ldr	r2, [pc, #56]	@ (8011408 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80113d0:	210e      	movs	r1, #14
 80113d2:	6812      	ldr	r2, [r2, #0]
 80113d4:	fb01 2303 	mla	r3, r1, r3, r2
 80113d8:	7b18      	ldrb	r0, [r3, #12]
 80113da:	f000 001f 	and.w	r0, r0, #31
 80113de:	e7ef      	b.n	80113c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80113e0:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80113e4:	4293      	cmp	r3, r2
 80113e6:	d106      	bne.n	80113f6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80113e8:	f7f1 f846 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 80113ec:	6803      	ldr	r3, [r0, #0]
 80113ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80113f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80113f4:	4718      	bx	r3
 80113f6:	2000      	movs	r0, #0
 80113f8:	e7e2      	b.n	80113c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80113fa:	bf00      	nop
 80113fc:	20015140 	.word	0x20015140
 8011400:	20015148 	.word	0x20015148
 8011404:	20015144 	.word	0x20015144
 8011408:	20015128 	.word	0x20015128

0801140c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801140c:	2010      	movs	r0, #16
 801140e:	4770      	bx	lr

08011410 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8011410:	2000      	movs	r0, #0
 8011412:	4770      	bx	lr

08011414 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8011414:	4b02      	ldr	r3, [pc, #8]	@ (8011420 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8011416:	8818      	ldrh	r0, [r3, #0]
 8011418:	0040      	lsls	r0, r0, #1
 801141a:	b280      	uxth	r0, r0
 801141c:	4770      	bx	lr
 801141e:	bf00      	nop
 8011420:	200150ba 	.word	0x200150ba

08011424 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8011424:	2bff      	cmp	r3, #255	@ 0xff
 8011426:	d050      	beq.n	80114ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8011428:	2a0b      	cmp	r2, #11
 801142a:	d04a      	beq.n	80114c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801142c:	d80e      	bhi.n	801144c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801142e:	2a03      	cmp	r2, #3
 8011430:	d03f      	beq.n	80114b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8011432:	d804      	bhi.n	801143e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8011434:	2a01      	cmp	r2, #1
 8011436:	d03e      	beq.n	80114b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8011438:	d93f      	bls.n	80114ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801143a:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 801143c:	4770      	bx	lr
 801143e:	2a09      	cmp	r2, #9
 8011440:	d03f      	beq.n	80114c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8011442:	d83c      	bhi.n	80114be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8011444:	2a08      	cmp	r2, #8
 8011446:	d03a      	beq.n	80114be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8011448:	2000      	movs	r0, #0
 801144a:	4770      	bx	lr
 801144c:	2a2f      	cmp	r2, #47	@ 0x2f
 801144e:	d024      	beq.n	801149a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8011450:	d80d      	bhi.n	801146e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8011452:	2a2d      	cmp	r2, #45	@ 0x2d
 8011454:	d014      	beq.n	8011480 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8011456:	d826      	bhi.n	80114a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8011458:	2a2c      	cmp	r2, #44	@ 0x2c
 801145a:	d1f5      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801145c:	684b      	ldr	r3, [r1, #4]
 801145e:	781b      	ldrb	r3, [r3, #0]
 8011460:	2b01      	cmp	r3, #1
 8011462:	d018      	beq.n	8011496 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8011464:	d323      	bcc.n	80114ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8011466:	2b02      	cmp	r3, #2
 8011468:	d1ee      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801146a:	68c0      	ldr	r0, [r0, #12]
 801146c:	4770      	bx	lr
 801146e:	2a31      	cmp	r2, #49	@ 0x31
 8011470:	d004      	beq.n	801147c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8011472:	d328      	bcc.n	80114c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8011474:	2a32      	cmp	r2, #50	@ 0x32
 8011476:	d026      	beq.n	80114c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8011478:	2a33      	cmp	r2, #51	@ 0x33
 801147a:	d1e5      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801147c:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 801147e:	4770      	bx	lr
 8011480:	684b      	ldr	r3, [r1, #4]
 8011482:	781b      	ldrb	r3, [r3, #0]
 8011484:	2b01      	cmp	r3, #1
 8011486:	d004      	beq.n	8011492 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8011488:	d30b      	bcc.n	80114a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801148a:	2b02      	cmp	r3, #2
 801148c:	d1dc      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801148e:	6940      	ldr	r0, [r0, #20]
 8011490:	4770      	bx	lr
 8011492:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8011494:	4770      	bx	lr
 8011496:	69c0      	ldr	r0, [r0, #28]
 8011498:	4770      	bx	lr
 801149a:	684b      	ldr	r3, [r1, #4]
 801149c:	781b      	ldrb	r3, [r3, #0]
 801149e:	2b00      	cmp	r3, #0
 80114a0:	d1d2      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80114a2:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 80114a4:	4770      	bx	lr
 80114a6:	684b      	ldr	r3, [r1, #4]
 80114a8:	781b      	ldrb	r3, [r3, #0]
 80114aa:	2b00      	cmp	r3, #0
 80114ac:	d1cc      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80114ae:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 80114b0:	4770      	bx	lr
 80114b2:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 80114b4:	4770      	bx	lr
 80114b6:	6d40      	ldr	r0, [r0, #84]	@ 0x54
 80114b8:	4770      	bx	lr
 80114ba:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 80114bc:	4770      	bx	lr
 80114be:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
 80114c0:	4770      	bx	lr
 80114c2:	6e40      	ldr	r0, [r0, #100]	@ 0x64
 80114c4:	4770      	bx	lr
 80114c6:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
 80114c8:	4770      	bx	lr
 80114ca:	2a0b      	cmp	r2, #11
 80114cc:	d049      	beq.n	8011562 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80114ce:	d80e      	bhi.n	80114ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80114d0:	2a03      	cmp	r2, #3
 80114d2:	d040      	beq.n	8011556 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80114d4:	d804      	bhi.n	80114e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80114d6:	2a01      	cmp	r2, #1
 80114d8:	d03f      	beq.n	801155a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80114da:	d940      	bls.n	801155e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80114dc:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 80114de:	4770      	bx	lr
 80114e0:	2a09      	cmp	r2, #9
 80114e2:	d03e      	beq.n	8011562 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80114e4:	d801      	bhi.n	80114ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80114e6:	2a08      	cmp	r2, #8
 80114e8:	d1ae      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80114ea:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 80114ec:	4770      	bx	lr
 80114ee:	2a2f      	cmp	r2, #47	@ 0x2f
 80114f0:	d024      	beq.n	801153c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80114f2:	d80d      	bhi.n	8011510 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80114f4:	2a2d      	cmp	r2, #45	@ 0x2d
 80114f6:	d014      	beq.n	8011522 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80114f8:	d826      	bhi.n	8011548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80114fa:	2a2c      	cmp	r2, #44	@ 0x2c
 80114fc:	d1a4      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80114fe:	684b      	ldr	r3, [r1, #4]
 8011500:	781b      	ldrb	r3, [r3, #0]
 8011502:	2b01      	cmp	r3, #1
 8011504:	d018      	beq.n	8011538 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8011506:	d324      	bcc.n	8011552 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8011508:	2b02      	cmp	r3, #2
 801150a:	d19d      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801150c:	6900      	ldr	r0, [r0, #16]
 801150e:	4770      	bx	lr
 8011510:	2a31      	cmp	r2, #49	@ 0x31
 8011512:	d004      	beq.n	801151e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8011514:	d327      	bcc.n	8011566 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8011516:	2a32      	cmp	r2, #50	@ 0x32
 8011518:	d025      	beq.n	8011566 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801151a:	2a33      	cmp	r2, #51	@ 0x33
 801151c:	d194      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801151e:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 8011520:	4770      	bx	lr
 8011522:	684b      	ldr	r3, [r1, #4]
 8011524:	781b      	ldrb	r3, [r3, #0]
 8011526:	2b01      	cmp	r3, #1
 8011528:	d004      	beq.n	8011534 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801152a:	d30b      	bcc.n	8011544 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801152c:	2b02      	cmp	r3, #2
 801152e:	d18b      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011530:	6980      	ldr	r0, [r0, #24]
 8011532:	4770      	bx	lr
 8011534:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8011536:	4770      	bx	lr
 8011538:	6a00      	ldr	r0, [r0, #32]
 801153a:	4770      	bx	lr
 801153c:	684b      	ldr	r3, [r1, #4]
 801153e:	781b      	ldrb	r3, [r3, #0]
 8011540:	2b00      	cmp	r3, #0
 8011542:	d181      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011544:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8011546:	4770      	bx	lr
 8011548:	684b      	ldr	r3, [r1, #4]
 801154a:	781b      	ldrb	r3, [r3, #0]
 801154c:	2b00      	cmp	r3, #0
 801154e:	f47f af7b 	bne.w	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011552:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8011554:	4770      	bx	lr
 8011556:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 8011558:	4770      	bx	lr
 801155a:	6d80      	ldr	r0, [r0, #88]	@ 0x58
 801155c:	4770      	bx	lr
 801155e:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8011560:	4770      	bx	lr
 8011562:	6e80      	ldr	r0, [r0, #104]	@ 0x68
 8011564:	4770      	bx	lr
 8011566:	6f00      	ldr	r0, [r0, #112]	@ 0x70
 8011568:	4770      	bx	lr

0801156a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801156a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801156e:	b087      	sub	sp, #28
 8011570:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8011572:	9205      	str	r2, [sp, #20]
 8011574:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8011578:	9101      	str	r1, [sp, #4]
 801157a:	9202      	str	r2, [sp, #8]
 801157c:	6841      	ldr	r1, [r0, #4]
 801157e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8011582:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8011586:	fb01 2404 	mla	r4, r1, r4, r2
 801158a:	6802      	ldr	r2, [r0, #0]
 801158c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011590:	f8de 2000 	ldr.w	r2, [lr]
 8011594:	9203      	str	r2, [sp, #12]
 8011596:	f8de 2004 	ldr.w	r2, [lr, #4]
 801159a:	3204      	adds	r2, #4
 801159c:	9204      	str	r2, [sp, #16]
 801159e:	9a02      	ldr	r2, [sp, #8]
 80115a0:	43d6      	mvns	r6, r2
 80115a2:	b2f6      	uxtb	r6, r6
 80115a4:	9a01      	ldr	r2, [sp, #4]
 80115a6:	2a00      	cmp	r2, #0
 80115a8:	dc03      	bgt.n	80115b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80115aa:	9a05      	ldr	r2, [sp, #20]
 80115ac:	2a00      	cmp	r2, #0
 80115ae:	f340 8129 	ble.w	8011804 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80115b2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80115b4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80115b8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80115bc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80115be:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80115c2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80115c6:	2b00      	cmp	r3, #0
 80115c8:	dd0e      	ble.n	80115e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80115ca:	1408      	asrs	r0, r1, #16
 80115cc:	d405      	bmi.n	80115da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80115ce:	4560      	cmp	r0, ip
 80115d0:	da03      	bge.n	80115da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80115d2:	1410      	asrs	r0, r2, #16
 80115d4:	d401      	bmi.n	80115da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80115d6:	42b8      	cmp	r0, r7
 80115d8:	db07      	blt.n	80115ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80115da:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80115dc:	3b01      	subs	r3, #1
 80115de:	3402      	adds	r4, #2
 80115e0:	4401      	add	r1, r0
 80115e2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80115e4:	4402      	add	r2, r0
 80115e6:	e7ee      	b.n	80115c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80115e8:	d071      	beq.n	80116ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80115ea:	1e58      	subs	r0, r3, #1
 80115ec:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80115ee:	fb05 1500 	mla	r5, r5, r0, r1
 80115f2:	142d      	asrs	r5, r5, #16
 80115f4:	d45f      	bmi.n	80116b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80115f6:	4565      	cmp	r5, ip
 80115f8:	da5d      	bge.n	80116b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80115fa:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80115fc:	fb05 2000 	mla	r0, r5, r0, r2
 8011600:	1400      	asrs	r0, r0, #16
 8011602:	d458      	bmi.n	80116b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011604:	42b8      	cmp	r0, r7
 8011606:	da56      	bge.n	80116b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011608:	4699      	mov	r9, r3
 801160a:	46a2      	mov	sl, r4
 801160c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8011610:	f1b9 0f00 	cmp.w	r9, #0
 8011614:	dd57      	ble.n	80116c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8011616:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801161a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801161e:	9803      	ldr	r0, [sp, #12]
 8011620:	140d      	asrs	r5, r1, #16
 8011622:	f109 39ff 	add.w	r9, r9, #4294967295
 8011626:	fb07 000c 	mla	r0, r7, ip, r0
 801162a:	5d40      	ldrb	r0, [r0, r5]
 801162c:	9d04      	ldr	r5, [sp, #16]
 801162e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011632:	f8ba 5000 	ldrh.w	r5, [sl]
 8011636:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801163a:	122f      	asrs	r7, r5, #8
 801163c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8011640:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011644:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011648:	00ed      	lsls	r5, r5, #3
 801164a:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801164e:	fb17 f706 	smulbb	r7, r7, r6
 8011652:	b2ed      	uxtb	r5, r5
 8011654:	fb18 f806 	smulbb	r8, r8, r6
 8011658:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801165c:	10c7      	asrs	r7, r0, #3
 801165e:	fb15 f506 	smulbb	r5, r5, r6
 8011662:	00c0      	lsls	r0, r0, #3
 8011664:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8011668:	fa1f fc8c 	uxth.w	ip, ip
 801166c:	b2c0      	uxtb	r0, r0
 801166e:	fb07 870b 	mla	r7, r7, fp, r8
 8011672:	fb00 500b 	mla	r0, r0, fp, r5
 8011676:	f10c 0501 	add.w	r5, ip, #1
 801167a:	b2bf      	uxth	r7, r7
 801167c:	b280      	uxth	r0, r0
 801167e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011682:	f107 0801 	add.w	r8, r7, #1
 8011686:	1c45      	adds	r5, r0, #1
 8011688:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801168c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011690:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011694:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011696:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801169a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801169e:	4401      	add	r1, r0
 80116a0:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80116a4:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80116a6:	ea45 0c0c 	orr.w	ip, r5, ip
 80116aa:	4402      	add	r2, r0
 80116ac:	ea4c 0c08 	orr.w	ip, ip, r8
 80116b0:	f82a cb02 	strh.w	ip, [sl], #2
 80116b4:	e7ac      	b.n	8011610 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80116b6:	f04f 0800 	mov.w	r8, #0
 80116ba:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80116be:	eb03 0008 	add.w	r0, r3, r8
 80116c2:	2800      	cmp	r0, #0
 80116c4:	dc41      	bgt.n	801174a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80116c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80116ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80116ce:	9b01      	ldr	r3, [sp, #4]
 80116d0:	2b00      	cmp	r3, #0
 80116d2:	f340 8097 	ble.w	8011804 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80116d6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80116da:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80116dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80116e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80116e4:	eef0 6a62 	vmov.f32	s13, s5
 80116e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80116ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 80116f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80116f4:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80116f8:	eef0 6a43 	vmov.f32	s13, s6
 80116fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011700:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8011704:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011708:	ee61 7a27 	vmul.f32	s15, s2, s15
 801170c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011710:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011714:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011718:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801171c:	ee12 2a90 	vmov	r2, s5
 8011720:	eef0 2a47 	vmov.f32	s5, s14
 8011724:	fb92 f3f3 	sdiv	r3, r2, r3
 8011728:	ee13 2a10 	vmov	r2, s6
 801172c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801172e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011730:	eeb0 3a67 	vmov.f32	s6, s15
 8011734:	fb92 f3f3 	sdiv	r3, r2, r3
 8011738:	9314      	str	r3, [sp, #80]	@ 0x50
 801173a:	9b01      	ldr	r3, [sp, #4]
 801173c:	9a05      	ldr	r2, [sp, #20]
 801173e:	3b01      	subs	r3, #1
 8011740:	9301      	str	r3, [sp, #4]
 8011742:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011744:	bf08      	it	eq
 8011746:	4613      	moveq	r3, r2
 8011748:	e72c      	b.n	80115a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801174a:	140f      	asrs	r7, r1, #16
 801174c:	d453      	bmi.n	80117f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801174e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011752:	42bd      	cmp	r5, r7
 8011754:	dd4f      	ble.n	80117f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011756:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801175a:	d44c      	bmi.n	80117f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801175c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011760:	4560      	cmp	r0, ip
 8011762:	dd48      	ble.n	80117f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011764:	9803      	ldr	r0, [sp, #12]
 8011766:	b22d      	sxth	r5, r5
 8011768:	fb0c 0505 	mla	r5, ip, r5, r0
 801176c:	5de8      	ldrb	r0, [r5, r7]
 801176e:	9d04      	ldr	r5, [sp, #16]
 8011770:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011774:	f06f 0501 	mvn.w	r5, #1
 8011778:	fb05 fb08 	mul.w	fp, r5, r8
 801177c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011780:	f834 500b 	ldrh.w	r5, [r4, fp]
 8011784:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011788:	122f      	asrs	r7, r5, #8
 801178a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801178e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011792:	00ed      	lsls	r5, r5, #3
 8011794:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8011798:	fb17 f706 	smulbb	r7, r7, r6
 801179c:	b2ed      	uxtb	r5, r5
 801179e:	fb19 f906 	smulbb	r9, r9, r6
 80117a2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80117a6:	10c7      	asrs	r7, r0, #3
 80117a8:	fb15 f506 	smulbb	r5, r5, r6
 80117ac:	00c0      	lsls	r0, r0, #3
 80117ae:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80117b2:	fa1f fc8c 	uxth.w	ip, ip
 80117b6:	b2c0      	uxtb	r0, r0
 80117b8:	fb07 970a 	mla	r7, r7, sl, r9
 80117bc:	fb00 500a 	mla	r0, r0, sl, r5
 80117c0:	f10c 0501 	add.w	r5, ip, #1
 80117c4:	b2bf      	uxth	r7, r7
 80117c6:	b280      	uxth	r0, r0
 80117c8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80117cc:	f107 0901 	add.w	r9, r7, #1
 80117d0:	1c45      	adds	r5, r0, #1
 80117d2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80117d6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80117da:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80117de:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80117e2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80117e6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80117ea:	ea45 0c0c 	orr.w	ip, r5, ip
 80117ee:	ea4c 0c09 	orr.w	ip, ip, r9
 80117f2:	f824 c00b 	strh.w	ip, [r4, fp]
 80117f6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80117f8:	f108 38ff 	add.w	r8, r8, #4294967295
 80117fc:	4401      	add	r1, r0
 80117fe:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8011800:	4402      	add	r2, r0
 8011802:	e75c      	b.n	80116be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8011804:	b007      	add	sp, #28
 8011806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801180a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801180a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801180e:	b085      	sub	sp, #20
 8011810:	4693      	mov	fp, r2
 8011812:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011816:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8011818:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801181a:	6870      	ldr	r0, [r6, #4]
 801181c:	9100      	str	r1, [sp, #0]
 801181e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8011822:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8011826:	fb00 2404 	mla	r4, r0, r4, r2
 801182a:	6832      	ldr	r2, [r6, #0]
 801182c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011830:	682a      	ldr	r2, [r5, #0]
 8011832:	9201      	str	r2, [sp, #4]
 8011834:	686a      	ldr	r2, [r5, #4]
 8011836:	3204      	adds	r2, #4
 8011838:	9202      	str	r2, [sp, #8]
 801183a:	9a00      	ldr	r2, [sp, #0]
 801183c:	2a00      	cmp	r2, #0
 801183e:	dc03      	bgt.n	8011848 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011840:	f1bb 0f00 	cmp.w	fp, #0
 8011844:	f340 80a0 	ble.w	8011988 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8011848:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801184a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801184e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011852:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011854:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011858:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801185c:	2b00      	cmp	r3, #0
 801185e:	dd0c      	ble.n	801187a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011860:	1406      	asrs	r6, r0, #16
 8011862:	d405      	bmi.n	8011870 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011864:	454e      	cmp	r6, r9
 8011866:	da03      	bge.n	8011870 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011868:	1416      	asrs	r6, r2, #16
 801186a:	d401      	bmi.n	8011870 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801186c:	4546      	cmp	r6, r8
 801186e:	db05      	blt.n	801187c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011870:	4470      	add	r0, lr
 8011872:	4462      	add	r2, ip
 8011874:	3b01      	subs	r3, #1
 8011876:	3402      	adds	r4, #2
 8011878:	e7f0      	b.n	801185c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801187a:	d00f      	beq.n	801189c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801187c:	1e5e      	subs	r6, r3, #1
 801187e:	fb0e 0706 	mla	r7, lr, r6, r0
 8011882:	143f      	asrs	r7, r7, #16
 8011884:	d541      	bpl.n	801190a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8011886:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801188a:	4698      	mov	r8, r3
 801188c:	9603      	str	r6, [sp, #12]
 801188e:	f1b8 0f00 	cmp.w	r8, #0
 8011892:	dc59      	bgt.n	8011948 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011894:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011898:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801189c:	9b00      	ldr	r3, [sp, #0]
 801189e:	2b00      	cmp	r3, #0
 80118a0:	dd72      	ble.n	8011988 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80118a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80118a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80118a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80118ac:	eeb0 6a62 	vmov.f32	s12, s5
 80118b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80118b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80118b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80118bc:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80118c0:	eeb0 6a43 	vmov.f32	s12, s6
 80118c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80118c8:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80118cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80118d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80118d4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80118d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80118dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80118e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80118e4:	ee12 2a90 	vmov	r2, s5
 80118e8:	eef0 2a47 	vmov.f32	s5, s14
 80118ec:	fb92 fef3 	sdiv	lr, r2, r3
 80118f0:	ee13 2a10 	vmov	r2, s6
 80118f4:	eeb0 3a67 	vmov.f32	s6, s15
 80118f8:	fb92 fcf3 	sdiv	ip, r2, r3
 80118fc:	9b00      	ldr	r3, [sp, #0]
 80118fe:	3b01      	subs	r3, #1
 8011900:	9300      	str	r3, [sp, #0]
 8011902:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011904:	bf08      	it	eq
 8011906:	465b      	moveq	r3, fp
 8011908:	e797      	b.n	801183a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801190a:	454f      	cmp	r7, r9
 801190c:	dabb      	bge.n	8011886 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801190e:	fb0c 2606 	mla	r6, ip, r6, r2
 8011912:	1436      	asrs	r6, r6, #16
 8011914:	d4b7      	bmi.n	8011886 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011916:	4546      	cmp	r6, r8
 8011918:	dab5      	bge.n	8011886 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801191a:	461e      	mov	r6, r3
 801191c:	46a0      	mov	r8, r4
 801191e:	2e00      	cmp	r6, #0
 8011920:	ddb8      	ble.n	8011894 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8011922:	1417      	asrs	r7, r2, #16
 8011924:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8011928:	9901      	ldr	r1, [sp, #4]
 801192a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801192e:	4462      	add	r2, ip
 8011930:	4470      	add	r0, lr
 8011932:	fb0a 1707 	mla	r7, sl, r7, r1
 8011936:	9902      	ldr	r1, [sp, #8]
 8011938:	3e01      	subs	r6, #1
 801193a:	f817 7009 	ldrb.w	r7, [r7, r9]
 801193e:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8011942:	f828 7b02 	strh.w	r7, [r8], #2
 8011946:	e7ea      	b.n	801191e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8011948:	ea5f 4920 	movs.w	r9, r0, asr #16
 801194c:	d417      	bmi.n	801197e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801194e:	68ae      	ldr	r6, [r5, #8]
 8011950:	454e      	cmp	r6, r9
 8011952:	dd14      	ble.n	801197e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8011954:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011958:	d411      	bmi.n	801197e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801195a:	68ef      	ldr	r7, [r5, #12]
 801195c:	4557      	cmp	r7, sl
 801195e:	dd0e      	ble.n	801197e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8011960:	9f01      	ldr	r7, [sp, #4]
 8011962:	b236      	sxth	r6, r6
 8011964:	f06f 0101 	mvn.w	r1, #1
 8011968:	fb0a 7606 	mla	r6, sl, r6, r7
 801196c:	9f02      	ldr	r7, [sp, #8]
 801196e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8011972:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8011976:	fb01 f608 	mul.w	r6, r1, r8
 801197a:	9903      	ldr	r1, [sp, #12]
 801197c:	538f      	strh	r7, [r1, r6]
 801197e:	4470      	add	r0, lr
 8011980:	4462      	add	r2, ip
 8011982:	f108 38ff 	add.w	r8, r8, #4294967295
 8011986:	e782      	b.n	801188e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011988:	b005      	add	sp, #20
 801198a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801198e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801198e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011992:	b087      	sub	sp, #28
 8011994:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8011996:	9205      	str	r2, [sp, #20]
 8011998:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801199c:	9102      	str	r1, [sp, #8]
 801199e:	9203      	str	r2, [sp, #12]
 80119a0:	6861      	ldr	r1, [r4, #4]
 80119a2:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 80119a6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80119aa:	fb01 2000 	mla	r0, r1, r0, r2
 80119ae:	6822      	ldr	r2, [r4, #0]
 80119b0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80119b4:	9200      	str	r2, [sp, #0]
 80119b6:	f8dc 2000 	ldr.w	r2, [ip]
 80119ba:	9204      	str	r2, [sp, #16]
 80119bc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80119c0:	3204      	adds	r2, #4
 80119c2:	9201      	str	r2, [sp, #4]
 80119c4:	9a03      	ldr	r2, [sp, #12]
 80119c6:	43d5      	mvns	r5, r2
 80119c8:	b2ed      	uxtb	r5, r5
 80119ca:	9a02      	ldr	r2, [sp, #8]
 80119cc:	2a00      	cmp	r2, #0
 80119ce:	dc03      	bgt.n	80119d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80119d0:	9a05      	ldr	r2, [sp, #20]
 80119d2:	2a00      	cmp	r2, #0
 80119d4:	f340 812c 	ble.w	8011c30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80119d8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80119da:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80119de:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80119e2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80119e4:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80119e8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80119ec:	2b00      	cmp	r3, #0
 80119ee:	dd10      	ble.n	8011a12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80119f0:	140c      	asrs	r4, r1, #16
 80119f2:	d405      	bmi.n	8011a00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80119f4:	4574      	cmp	r4, lr
 80119f6:	da03      	bge.n	8011a00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80119f8:	1414      	asrs	r4, r2, #16
 80119fa:	d401      	bmi.n	8011a00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80119fc:	42bc      	cmp	r4, r7
 80119fe:	db09      	blt.n	8011a14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8011a00:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8011a02:	3b01      	subs	r3, #1
 8011a04:	9800      	ldr	r0, [sp, #0]
 8011a06:	4421      	add	r1, r4
 8011a08:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8011a0a:	3002      	adds	r0, #2
 8011a0c:	4422      	add	r2, r4
 8011a0e:	9000      	str	r0, [sp, #0]
 8011a10:	e7ec      	b.n	80119ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8011a12:	d071      	beq.n	8011af8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8011a14:	1e5c      	subs	r4, r3, #1
 8011a16:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8011a18:	fb06 1604 	mla	r6, r6, r4, r1
 8011a1c:	1436      	asrs	r6, r6, #16
 8011a1e:	d45d      	bmi.n	8011adc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011a20:	4576      	cmp	r6, lr
 8011a22:	da5b      	bge.n	8011adc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011a24:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8011a26:	fb06 2404 	mla	r4, r6, r4, r2
 8011a2a:	1424      	asrs	r4, r4, #16
 8011a2c:	d456      	bmi.n	8011adc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011a2e:	42bc      	cmp	r4, r7
 8011a30:	da54      	bge.n	8011adc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011a32:	4698      	mov	r8, r3
 8011a34:	f8dd 9000 	ldr.w	r9, [sp]
 8011a38:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8011a3c:	f1b8 0f00 	cmp.w	r8, #0
 8011a40:	dd54      	ble.n	8011aec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8011a42:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8011a46:	1414      	asrs	r4, r2, #16
 8011a48:	9804      	ldr	r0, [sp, #16]
 8011a4a:	140e      	asrs	r6, r1, #16
 8011a4c:	f108 38ff 	add.w	r8, r8, #4294967295
 8011a50:	fb07 0404 	mla	r4, r7, r4, r0
 8011a54:	9801      	ldr	r0, [sp, #4]
 8011a56:	f814 e006 	ldrb.w	lr, [r4, r6]
 8011a5a:	f8b9 4000 	ldrh.w	r4, [r9]
 8011a5e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011a62:	1227      	asrs	r7, r4, #8
 8011a64:	eb00 0b0e 	add.w	fp, r0, lr
 8011a68:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8011a6c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011a70:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011a72:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8011a76:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011a7a:	4401      	add	r1, r0
 8011a7c:	fb16 f60a 	smulbb	r6, r6, sl
 8011a80:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8011a82:	fb1b fb0a 	smulbb	fp, fp, sl
 8011a86:	fb07 6705 	mla	r7, r7, r5, r6
 8011a8a:	10e6      	asrs	r6, r4, #3
 8011a8c:	00e4      	lsls	r4, r4, #3
 8011a8e:	4402      	add	r2, r0
 8011a90:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011a94:	b2bf      	uxth	r7, r7
 8011a96:	b2e4      	uxtb	r4, r4
 8011a98:	fb06 b605 	mla	r6, r6, r5, fp
 8011a9c:	fb14 f405 	smulbb	r4, r4, r5
 8011aa0:	b2b6      	uxth	r6, r6
 8011aa2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8011aa6:	1c7c      	adds	r4, r7, #1
 8011aa8:	f106 0b01 	add.w	fp, r6, #1
 8011aac:	fa1f fe8e 	uxth.w	lr, lr
 8011ab0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8011ab4:	f10e 0401 	add.w	r4, lr, #1
 8011ab8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8011abc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8011ac0:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8011ac4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8011ac8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8011acc:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8011ad0:	4327      	orrs	r7, r4
 8011ad2:	ea47 070b 	orr.w	r7, r7, fp
 8011ad6:	f829 7b02 	strh.w	r7, [r9], #2
 8011ada:	e7af      	b.n	8011a3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8011adc:	f04f 0e00 	mov.w	lr, #0
 8011ae0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8011ae4:	eb03 040e 	add.w	r4, r3, lr
 8011ae8:	2c00      	cmp	r4, #0
 8011aea:	dc43      	bgt.n	8011b74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8011aec:	9a00      	ldr	r2, [sp, #0]
 8011aee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011af2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8011af6:	9300      	str	r3, [sp, #0]
 8011af8:	9b02      	ldr	r3, [sp, #8]
 8011afa:	2b00      	cmp	r3, #0
 8011afc:	f340 8098 	ble.w	8011c30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8011b00:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011b04:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011b06:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011b0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011b0e:	eef0 6a62 	vmov.f32	s13, s5
 8011b12:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011b16:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011b1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011b1e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8011b22:	eef0 6a43 	vmov.f32	s13, s6
 8011b26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011b2a:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8011b2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011b32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011b36:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011b3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011b3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011b42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011b46:	ee12 2a90 	vmov	r2, s5
 8011b4a:	eef0 2a47 	vmov.f32	s5, s14
 8011b4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b52:	ee13 2a10 	vmov	r2, s6
 8011b56:	9313      	str	r3, [sp, #76]	@ 0x4c
 8011b58:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011b5a:	eeb0 3a67 	vmov.f32	s6, s15
 8011b5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b62:	9314      	str	r3, [sp, #80]	@ 0x50
 8011b64:	9b02      	ldr	r3, [sp, #8]
 8011b66:	9a05      	ldr	r2, [sp, #20]
 8011b68:	3b01      	subs	r3, #1
 8011b6a:	9302      	str	r3, [sp, #8]
 8011b6c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011b6e:	bf08      	it	eq
 8011b70:	4613      	moveq	r3, r2
 8011b72:	e72a      	b.n	80119ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011b74:	140f      	asrs	r7, r1, #16
 8011b76:	d454      	bmi.n	8011c22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011b78:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8011b7c:	42be      	cmp	r6, r7
 8011b7e:	dd50      	ble.n	8011c22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011b80:	ea5f 4822 	movs.w	r8, r2, asr #16
 8011b84:	d44d      	bmi.n	8011c22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011b86:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8011b8a:	4544      	cmp	r4, r8
 8011b8c:	dd49      	ble.n	8011c22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011b8e:	9c04      	ldr	r4, [sp, #16]
 8011b90:	b236      	sxth	r6, r6
 8011b92:	f06f 0001 	mvn.w	r0, #1
 8011b96:	fb08 4606 	mla	r6, r8, r6, r4
 8011b9a:	9c01      	ldr	r4, [sp, #4]
 8011b9c:	fb00 fa0e 	mul.w	sl, r0, lr
 8011ba0:	9800      	ldr	r0, [sp, #0]
 8011ba2:	f816 8007 	ldrb.w	r8, [r6, r7]
 8011ba6:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8011baa:	eb04 0b08 	add.w	fp, r4, r8
 8011bae:	f830 400a 	ldrh.w	r4, [r0, sl]
 8011bb2:	9801      	ldr	r0, [sp, #4]
 8011bb4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8011bb8:	1227      	asrs	r7, r4, #8
 8011bba:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011bbe:	fb16 f609 	smulbb	r6, r6, r9
 8011bc2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011bc6:	f810 8008 	ldrb.w	r8, [r0, r8]
 8011bca:	fb1b fb09 	smulbb	fp, fp, r9
 8011bce:	fb07 6705 	mla	r7, r7, r5, r6
 8011bd2:	10e6      	asrs	r6, r4, #3
 8011bd4:	00e4      	lsls	r4, r4, #3
 8011bd6:	9800      	ldr	r0, [sp, #0]
 8011bd8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011bdc:	b2bf      	uxth	r7, r7
 8011bde:	b2e4      	uxtb	r4, r4
 8011be0:	fb06 b605 	mla	r6, r6, r5, fp
 8011be4:	fb14 f405 	smulbb	r4, r4, r5
 8011be8:	b2b6      	uxth	r6, r6
 8011bea:	fb08 4809 	mla	r8, r8, r9, r4
 8011bee:	1c7c      	adds	r4, r7, #1
 8011bf0:	f106 0b01 	add.w	fp, r6, #1
 8011bf4:	fa1f f888 	uxth.w	r8, r8
 8011bf8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8011bfc:	f108 0401 	add.w	r4, r8, #1
 8011c00:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8011c04:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8011c08:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8011c0c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8011c10:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8011c14:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8011c18:	4327      	orrs	r7, r4
 8011c1a:	ea47 070b 	orr.w	r7, r7, fp
 8011c1e:	f820 700a 	strh.w	r7, [r0, sl]
 8011c22:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011c24:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011c28:	4401      	add	r1, r0
 8011c2a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8011c2c:	4402      	add	r2, r0
 8011c2e:	e759      	b.n	8011ae4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8011c30:	b007      	add	sp, #28
 8011c32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08011c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c3c:	b085      	sub	sp, #20
 8011c3e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011c42:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8011c44:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8011c46:	9203      	str	r2, [sp, #12]
 8011c48:	6870      	ldr	r0, [r6, #4]
 8011c4a:	686f      	ldr	r7, [r5, #4]
 8011c4c:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8011c50:	3704      	adds	r7, #4
 8011c52:	9101      	str	r1, [sp, #4]
 8011c54:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8011c58:	fb00 2404 	mla	r4, r0, r4, r2
 8011c5c:	6832      	ldr	r2, [r6, #0]
 8011c5e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011c62:	682a      	ldr	r2, [r5, #0]
 8011c64:	9202      	str	r2, [sp, #8]
 8011c66:	9a01      	ldr	r2, [sp, #4]
 8011c68:	2a00      	cmp	r2, #0
 8011c6a:	dc03      	bgt.n	8011c74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011c6c:	9a03      	ldr	r2, [sp, #12]
 8011c6e:	2a00      	cmp	r2, #0
 8011c70:	f340 80cc 	ble.w	8011e0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8011c74:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8011c76:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011c7a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011c7e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011c80:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011c84:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011c88:	2b00      	cmp	r3, #0
 8011c8a:	dd0d      	ble.n	8011ca8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011c8c:	1406      	asrs	r6, r0, #16
 8011c8e:	d405      	bmi.n	8011c9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011c90:	454e      	cmp	r6, r9
 8011c92:	da03      	bge.n	8011c9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011c94:	1416      	asrs	r6, r2, #16
 8011c96:	d401      	bmi.n	8011c9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011c98:	4546      	cmp	r6, r8
 8011c9a:	db06      	blt.n	8011caa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011c9c:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8011c9e:	4460      	add	r0, ip
 8011ca0:	3b01      	subs	r3, #1
 8011ca2:	3402      	adds	r4, #2
 8011ca4:	4432      	add	r2, r6
 8011ca6:	e7ef      	b.n	8011c88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8011ca8:	d00f      	beq.n	8011cca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011caa:	1e5e      	subs	r6, r3, #1
 8011cac:	fb0c 0e06 	mla	lr, ip, r6, r0
 8011cb0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8011cb4:	d543      	bpl.n	8011d3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8011cb6:	4698      	mov	r8, r3
 8011cb8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8011cbc:	f1b8 0f00 	cmp.w	r8, #0
 8011cc0:	dc71      	bgt.n	8011da6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8011cc2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011cc6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011cca:	9b01      	ldr	r3, [sp, #4]
 8011ccc:	2b00      	cmp	r3, #0
 8011cce:	f340 809d 	ble.w	8011e0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8011cd2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011cd6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011cd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011cdc:	eeb0 6a62 	vmov.f32	s12, s5
 8011ce0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011ce4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011ce8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011cec:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8011cf0:	eeb0 6a43 	vmov.f32	s12, s6
 8011cf4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011cf8:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8011cfc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011d00:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011d04:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011d08:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011d0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011d10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011d14:	ee12 2a90 	vmov	r2, s5
 8011d18:	eef0 2a47 	vmov.f32	s5, s14
 8011d1c:	fb92 fcf3 	sdiv	ip, r2, r3
 8011d20:	ee13 2a10 	vmov	r2, s6
 8011d24:	eeb0 3a67 	vmov.f32	s6, s15
 8011d28:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d2c:	9312      	str	r3, [sp, #72]	@ 0x48
 8011d2e:	9b01      	ldr	r3, [sp, #4]
 8011d30:	9a03      	ldr	r2, [sp, #12]
 8011d32:	3b01      	subs	r3, #1
 8011d34:	9301      	str	r3, [sp, #4]
 8011d36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011d38:	bf08      	it	eq
 8011d3a:	4613      	moveq	r3, r2
 8011d3c:	e793      	b.n	8011c66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8011d3e:	45ce      	cmp	lr, r9
 8011d40:	dab9      	bge.n	8011cb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011d42:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8011d44:	fb01 2606 	mla	r6, r1, r6, r2
 8011d48:	1436      	asrs	r6, r6, #16
 8011d4a:	d4b4      	bmi.n	8011cb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011d4c:	4546      	cmp	r6, r8
 8011d4e:	dab2      	bge.n	8011cb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011d50:	4698      	mov	r8, r3
 8011d52:	46a2      	mov	sl, r4
 8011d54:	f1b8 0f00 	cmp.w	r8, #0
 8011d58:	ddb3      	ble.n	8011cc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8011d5a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011d5e:	1416      	asrs	r6, r2, #16
 8011d60:	9902      	ldr	r1, [sp, #8]
 8011d62:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8011d66:	f108 38ff 	add.w	r8, r8, #4294967295
 8011d6a:	4460      	add	r0, ip
 8011d6c:	fb09 1606 	mla	r6, r9, r6, r1
 8011d70:	4928      	ldr	r1, [pc, #160]	@ (8011e14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8011d72:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8011d76:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011d7a:	eb07 0b0e 	add.w	fp, r7, lr
 8011d7e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8011d82:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8011d86:	00f6      	lsls	r6, r6, #3
 8011d88:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8011d8c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8011d8e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8011d92:	440a      	add	r2, r1
 8011d94:	ea49 0606 	orr.w	r6, r9, r6
 8011d98:	f817 900e 	ldrb.w	r9, [r7, lr]
 8011d9c:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8011da0:	f82a 6b02 	strh.w	r6, [sl], #2
 8011da4:	e7d6      	b.n	8011d54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011da6:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011daa:	d429      	bmi.n	8011e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011dac:	68ae      	ldr	r6, [r5, #8]
 8011dae:	454e      	cmp	r6, r9
 8011db0:	dd26      	ble.n	8011e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011db2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8011db6:	d423      	bmi.n	8011e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011db8:	68e9      	ldr	r1, [r5, #12]
 8011dba:	4559      	cmp	r1, fp
 8011dbc:	dd20      	ble.n	8011e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011dbe:	fa0f fe86 	sxth.w	lr, r6
 8011dc2:	9902      	ldr	r1, [sp, #8]
 8011dc4:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8011dc8:	f06f 0101 	mvn.w	r1, #1
 8011dcc:	f81e e009 	ldrb.w	lr, [lr, r9]
 8011dd0:	fb01 f908 	mul.w	r9, r1, r8
 8011dd4:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8011dd8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011ddc:	eb07 060e 	add.w	r6, r7, lr
 8011de0:	f896 b002 	ldrb.w	fp, [r6, #2]
 8011de4:	7876      	ldrb	r6, [r6, #1]
 8011de6:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8011dea:	00f6      	lsls	r6, r6, #3
 8011dec:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8011df0:	ea4b 0606 	orr.w	r6, fp, r6
 8011df4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8011df8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8011dfc:	f82a 6009 	strh.w	r6, [sl, r9]
 8011e00:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8011e02:	4460      	add	r0, ip
 8011e04:	f108 38ff 	add.w	r8, r8, #4294967295
 8011e08:	440a      	add	r2, r1
 8011e0a:	e757      	b.n	8011cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011e0c:	b005      	add	sp, #20
 8011e0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e12:	bf00      	nop
 8011e14:	fffff800 	.word	0xfffff800

08011e18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e1c:	b087      	sub	sp, #28
 8011e1e:	468b      	mov	fp, r1
 8011e20:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011e24:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8011e26:	9204      	str	r2, [sp, #16]
 8011e28:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8011e2c:	6841      	ldr	r1, [r0, #4]
 8011e2e:	9205      	str	r2, [sp, #20]
 8011e30:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8011e34:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8011e38:	fb01 2404 	mla	r4, r1, r4, r2
 8011e3c:	6802      	ldr	r2, [r0, #0]
 8011e3e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011e42:	f8dc 2000 	ldr.w	r2, [ip]
 8011e46:	9201      	str	r2, [sp, #4]
 8011e48:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8011e4c:	3204      	adds	r2, #4
 8011e4e:	9202      	str	r2, [sp, #8]
 8011e50:	f1bb 0f00 	cmp.w	fp, #0
 8011e54:	dc03      	bgt.n	8011e5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8011e56:	9a04      	ldr	r2, [sp, #16]
 8011e58:	2a00      	cmp	r2, #0
 8011e5a:	f340 8138 	ble.w	80120ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8011e5e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011e60:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8011e64:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011e68:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011e6a:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8011e6e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011e72:	2b00      	cmp	r3, #0
 8011e74:	dd0e      	ble.n	8011e94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011e76:	1402      	asrs	r2, r0, #16
 8011e78:	d405      	bmi.n	8011e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011e7a:	42ba      	cmp	r2, r7
 8011e7c:	da03      	bge.n	8011e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011e7e:	140a      	asrs	r2, r1, #16
 8011e80:	d401      	bmi.n	8011e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011e82:	42b2      	cmp	r2, r6
 8011e84:	db07      	blt.n	8011e96 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011e86:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011e88:	3b01      	subs	r3, #1
 8011e8a:	3402      	adds	r4, #2
 8011e8c:	4410      	add	r0, r2
 8011e8e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011e90:	4411      	add	r1, r2
 8011e92:	e7ee      	b.n	8011e72 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8011e94:	d019      	beq.n	8011eca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8011e96:	1e5a      	subs	r2, r3, #1
 8011e98:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8011e9a:	fb05 0502 	mla	r5, r5, r2, r0
 8011e9e:	142d      	asrs	r5, r5, #16
 8011ea0:	d409      	bmi.n	8011eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011ea2:	42bd      	cmp	r5, r7
 8011ea4:	da07      	bge.n	8011eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011ea6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8011ea8:	fb05 1202 	mla	r2, r5, r2, r1
 8011eac:	1412      	asrs	r2, r2, #16
 8011eae:	d402      	bmi.n	8011eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011eb0:	42b2      	cmp	r2, r6
 8011eb2:	f2c0 80ac 	blt.w	801200e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8011eb6:	f04f 0e00 	mov.w	lr, #0
 8011eba:	eb03 020e 	add.w	r2, r3, lr
 8011ebe:	2a00      	cmp	r2, #0
 8011ec0:	dc3e      	bgt.n	8011f40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011ec2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011ec6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011eca:	f1bb 0f00 	cmp.w	fp, #0
 8011ece:	f340 80fe 	ble.w	80120ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8011ed2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011ed6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011ed8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011edc:	f1bb 0b01 	subs.w	fp, fp, #1
 8011ee0:	eeb0 6a62 	vmov.f32	s12, s5
 8011ee4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011ee8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011eec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011ef0:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8011ef4:	eeb0 6a43 	vmov.f32	s12, s6
 8011ef8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011efc:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8011f00:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011f04:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011f08:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011f0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011f10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011f14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011f18:	ee12 2a90 	vmov	r2, s5
 8011f1c:	eef0 2a47 	vmov.f32	s5, s14
 8011f20:	fb92 f3f3 	sdiv	r3, r2, r3
 8011f24:	ee13 2a10 	vmov	r2, s6
 8011f28:	9313      	str	r3, [sp, #76]	@ 0x4c
 8011f2a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011f2c:	eeb0 3a67 	vmov.f32	s6, s15
 8011f30:	fb92 f3f3 	sdiv	r3, r2, r3
 8011f34:	9a04      	ldr	r2, [sp, #16]
 8011f36:	9314      	str	r3, [sp, #80]	@ 0x50
 8011f38:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011f3a:	bf08      	it	eq
 8011f3c:	4613      	moveq	r3, r2
 8011f3e:	e787      	b.n	8011e50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011f40:	1406      	asrs	r6, r0, #16
 8011f42:	d45d      	bmi.n	8012000 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011f44:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8011f48:	42b5      	cmp	r5, r6
 8011f4a:	dd59      	ble.n	8012000 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011f4c:	140f      	asrs	r7, r1, #16
 8011f4e:	d457      	bmi.n	8012000 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011f50:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8011f54:	42ba      	cmp	r2, r7
 8011f56:	dd53      	ble.n	8012000 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011f58:	9a01      	ldr	r2, [sp, #4]
 8011f5a:	b22d      	sxth	r5, r5
 8011f5c:	fb07 2505 	mla	r5, r7, r5, r2
 8011f60:	5daa      	ldrb	r2, [r5, r6]
 8011f62:	9d02      	ldr	r5, [sp, #8]
 8011f64:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011f68:	0e2e      	lsrs	r6, r5, #24
 8011f6a:	d049      	beq.n	8012000 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011f6c:	f06f 0201 	mvn.w	r2, #1
 8011f70:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011f74:	fb02 f20e 	mul.w	r2, r2, lr
 8011f78:	f834 8002 	ldrh.w	r8, [r4, r2]
 8011f7c:	9203      	str	r2, [sp, #12]
 8011f7e:	9a05      	ldr	r2, [sp, #20]
 8011f80:	ea4f 2728 	mov.w	r7, r8, asr #8
 8011f84:	4356      	muls	r6, r2
 8011f86:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011f8a:	1c72      	adds	r2, r6, #1
 8011f8c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011f90:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011f94:	b2ed      	uxtb	r5, r5
 8011f96:	1212      	asrs	r2, r2, #8
 8011f98:	fa1f f982 	uxth.w	r9, r2
 8011f9c:	43d2      	mvns	r2, r2
 8011f9e:	fb16 f609 	smulbb	r6, r6, r9
 8011fa2:	b2d2      	uxtb	r2, r2
 8011fa4:	fb15 f509 	smulbb	r5, r5, r9
 8011fa8:	fb07 6702 	mla	r7, r7, r2, r6
 8011fac:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8011fb0:	fb1a fa09 	smulbb	sl, sl, r9
 8011fb4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011fb8:	b2bf      	uxth	r7, r7
 8011fba:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011fbe:	fa5f f888 	uxtb.w	r8, r8
 8011fc2:	fb06 a602 	mla	r6, r6, r2, sl
 8011fc6:	fb08 5502 	mla	r5, r8, r2, r5
 8011fca:	1c7a      	adds	r2, r7, #1
 8011fcc:	b2b6      	uxth	r6, r6
 8011fce:	b2ad      	uxth	r5, r5
 8011fd0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011fd4:	9a03      	ldr	r2, [sp, #12]
 8011fd6:	f105 0a01 	add.w	sl, r5, #1
 8011fda:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8011fde:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011fe2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011fe6:	ea4a 0707 	orr.w	r7, sl, r7
 8011fea:	f106 0a01 	add.w	sl, r6, #1
 8011fee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011ff2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011ff6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8011ffa:	ea47 070a 	orr.w	r7, r7, sl
 8011ffe:	52a7      	strh	r7, [r4, r2]
 8012000:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012002:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012006:	4410      	add	r0, r2
 8012008:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801200a:	4411      	add	r1, r2
 801200c:	e755      	b.n	8011eba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801200e:	f04f 0800 	mov.w	r8, #0
 8012012:	eba3 0208 	sub.w	r2, r3, r8
 8012016:	2a00      	cmp	r2, #0
 8012018:	f77f af53 	ble.w	8011ec2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801201c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8012020:	140a      	asrs	r2, r1, #16
 8012022:	9f01      	ldr	r7, [sp, #4]
 8012024:	1405      	asrs	r5, r0, #16
 8012026:	fb06 7202 	mla	r2, r6, r2, r7
 801202a:	5d52      	ldrb	r2, [r2, r5]
 801202c:	9d02      	ldr	r5, [sp, #8]
 801202e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8012032:	0e2e      	lsrs	r6, r5, #24
 8012034:	d044      	beq.n	80120c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8012036:	9a05      	ldr	r2, [sp, #20]
 8012038:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801203c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8012040:	4356      	muls	r6, r2
 8012042:	ea4f 272e 	mov.w	r7, lr, asr #8
 8012046:	1c72      	adds	r2, r6, #1
 8012048:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801204c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8012050:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012054:	b2ed      	uxtb	r5, r5
 8012056:	1212      	asrs	r2, r2, #8
 8012058:	fa1f f982 	uxth.w	r9, r2
 801205c:	43d2      	mvns	r2, r2
 801205e:	fb16 f609 	smulbb	r6, r6, r9
 8012062:	b2d2      	uxtb	r2, r2
 8012064:	fb15 f509 	smulbb	r5, r5, r9
 8012068:	fb07 6702 	mla	r7, r7, r2, r6
 801206c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012070:	fb1a fa09 	smulbb	sl, sl, r9
 8012074:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012078:	b2bf      	uxth	r7, r7
 801207a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801207e:	fa5f fe8e 	uxtb.w	lr, lr
 8012082:	fb06 a602 	mla	r6, r6, r2, sl
 8012086:	fb0e 5502 	mla	r5, lr, r2, r5
 801208a:	1c7a      	adds	r2, r7, #1
 801208c:	b2b6      	uxth	r6, r6
 801208e:	b2ad      	uxth	r5, r5
 8012090:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012094:	f105 0a01 	add.w	sl, r5, #1
 8012098:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801209c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80120a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80120a4:	ea4a 0707 	orr.w	r7, sl, r7
 80120a8:	f106 0a01 	add.w	sl, r6, #1
 80120ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80120b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80120b4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80120b8:	ea47 070a 	orr.w	r7, r7, sl
 80120bc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80120c0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80120c2:	f108 0801 	add.w	r8, r8, #1
 80120c6:	4410      	add	r0, r2
 80120c8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80120ca:	4411      	add	r1, r2
 80120cc:	e7a1      	b.n	8012012 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80120ce:	b007      	add	sp, #28
 80120d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080120d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80120d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120d8:	b085      	sub	sp, #20
 80120da:	468b      	mov	fp, r1
 80120dc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80120e0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80120e2:	9203      	str	r2, [sp, #12]
 80120e4:	6841      	ldr	r1, [r0, #4]
 80120e6:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80120ea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80120ee:	fb01 2404 	mla	r4, r1, r4, r2
 80120f2:	6802      	ldr	r2, [r0, #0]
 80120f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80120f8:	f8de 2000 	ldr.w	r2, [lr]
 80120fc:	9200      	str	r2, [sp, #0]
 80120fe:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012102:	3204      	adds	r2, #4
 8012104:	9201      	str	r2, [sp, #4]
 8012106:	f1bb 0f00 	cmp.w	fp, #0
 801210a:	dc03      	bgt.n	8012114 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801210c:	9a03      	ldr	r2, [sp, #12]
 801210e:	2a00      	cmp	r2, #0
 8012110:	f340 8153 	ble.w	80123ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8012114:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012116:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801211a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801211e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012120:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8012124:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012128:	2b00      	cmp	r3, #0
 801212a:	dd0e      	ble.n	801214a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801212c:	1408      	asrs	r0, r1, #16
 801212e:	d405      	bmi.n	801213c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012130:	42b8      	cmp	r0, r7
 8012132:	da03      	bge.n	801213c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012134:	1410      	asrs	r0, r2, #16
 8012136:	d401      	bmi.n	801213c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012138:	42b0      	cmp	r0, r6
 801213a:	db07      	blt.n	801214c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801213c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801213e:	3b01      	subs	r3, #1
 8012140:	3402      	adds	r4, #2
 8012142:	4401      	add	r1, r0
 8012144:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012146:	4402      	add	r2, r0
 8012148:	e7ee      	b.n	8012128 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801214a:	d017      	beq.n	801217c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801214c:	1e58      	subs	r0, r3, #1
 801214e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8012150:	fb05 1500 	mla	r5, r5, r0, r1
 8012154:	142d      	asrs	r5, r5, #16
 8012156:	d409      	bmi.n	801216c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012158:	42bd      	cmp	r5, r7
 801215a:	da07      	bge.n	801216c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801215c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801215e:	fb05 2000 	mla	r0, r5, r0, r2
 8012162:	1400      	asrs	r0, r0, #16
 8012164:	d402      	bmi.n	801216c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012166:	42b0      	cmp	r0, r6
 8012168:	f2c0 80bc 	blt.w	80122e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801216c:	2600      	movs	r6, #0
 801216e:	1998      	adds	r0, r3, r6
 8012170:	2800      	cmp	r0, #0
 8012172:	dc3e      	bgt.n	80121f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8012174:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012178:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801217c:	f1bb 0f00 	cmp.w	fp, #0
 8012180:	f340 811b 	ble.w	80123ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8012184:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012188:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801218a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801218e:	f1bb 0b01 	subs.w	fp, fp, #1
 8012192:	eeb0 6a62 	vmov.f32	s12, s5
 8012196:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801219a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801219e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80121a2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80121a6:	eeb0 6a43 	vmov.f32	s12, s6
 80121aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80121ae:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80121b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80121b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80121ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80121be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80121c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80121c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80121ca:	ee12 2a90 	vmov	r2, s5
 80121ce:	eef0 2a47 	vmov.f32	s5, s14
 80121d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80121d6:	ee13 2a10 	vmov	r2, s6
 80121da:	9311      	str	r3, [sp, #68]	@ 0x44
 80121dc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80121de:	eeb0 3a67 	vmov.f32	s6, s15
 80121e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80121e6:	9a03      	ldr	r2, [sp, #12]
 80121e8:	9312      	str	r3, [sp, #72]	@ 0x48
 80121ea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80121ec:	bf08      	it	eq
 80121ee:	4613      	moveq	r3, r2
 80121f0:	e789      	b.n	8012106 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80121f2:	140f      	asrs	r7, r1, #16
 80121f4:	d426      	bmi.n	8012244 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80121f6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80121fa:	42bd      	cmp	r5, r7
 80121fc:	dd22      	ble.n	8012244 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80121fe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012202:	d41f      	bmi.n	8012244 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012204:	f8de 000c 	ldr.w	r0, [lr, #12]
 8012208:	4560      	cmp	r0, ip
 801220a:	dd1b      	ble.n	8012244 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801220c:	9800      	ldr	r0, [sp, #0]
 801220e:	b22d      	sxth	r5, r5
 8012210:	fb0c 0505 	mla	r5, ip, r5, r0
 8012214:	5de8      	ldrb	r0, [r5, r7]
 8012216:	9d01      	ldr	r5, [sp, #4]
 8012218:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801221c:	0e07      	lsrs	r7, r0, #24
 801221e:	2fff      	cmp	r7, #255	@ 0xff
 8012220:	d116      	bne.n	8012250 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012222:	f06f 0501 	mvn.w	r5, #1
 8012226:	fb05 f706 	mul.w	r7, r5, r6
 801222a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801222e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8012232:	0945      	lsrs	r5, r0, #5
 8012234:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8012238:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801223c:	ea4c 0505 	orr.w	r5, ip, r5
 8012240:	4305      	orrs	r5, r0
 8012242:	53e5      	strh	r5, [r4, r7]
 8012244:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012246:	3e01      	subs	r6, #1
 8012248:	4401      	add	r1, r0
 801224a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801224c:	4402      	add	r2, r0
 801224e:	e78e      	b.n	801216e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8012250:	b2fd      	uxtb	r5, r7
 8012252:	2f00      	cmp	r7, #0
 8012254:	d0f6      	beq.n	8012244 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012256:	f06f 0701 	mvn.w	r7, #1
 801225a:	fa1f f985 	uxth.w	r9, r5
 801225e:	43ed      	mvns	r5, r5
 8012260:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8012264:	4377      	muls	r7, r6
 8012266:	fb1a fa09 	smulbb	sl, sl, r9
 801226a:	b2ed      	uxtb	r5, r5
 801226c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8012270:	9702      	str	r7, [sp, #8]
 8012272:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8012276:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801227a:	fb17 f709 	smulbb	r7, r7, r9
 801227e:	b2c0      	uxtb	r0, r0
 8012280:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012284:	fb10 f009 	smulbb	r0, r0, r9
 8012288:	fb0c 7c05 	mla	ip, ip, r5, r7
 801228c:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8012290:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012294:	fa1f fc8c 	uxth.w	ip, ip
 8012298:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801229c:	fa5f f888 	uxtb.w	r8, r8
 80122a0:	fb07 a705 	mla	r7, r7, r5, sl
 80122a4:	fb08 0005 	mla	r0, r8, r5, r0
 80122a8:	f10c 0501 	add.w	r5, ip, #1
 80122ac:	b2bf      	uxth	r7, r7
 80122ae:	b280      	uxth	r0, r0
 80122b0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80122b4:	f100 0a01 	add.w	sl, r0, #1
 80122b8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80122bc:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80122c0:	9802      	ldr	r0, [sp, #8]
 80122c2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80122c6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80122ca:	f107 0a01 	add.w	sl, r7, #1
 80122ce:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80122d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80122d6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80122da:	ea4c 0c0a 	orr.w	ip, ip, sl
 80122de:	f824 c000 	strh.w	ip, [r4, r0]
 80122e2:	e7af      	b.n	8012244 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80122e4:	f04f 0800 	mov.w	r8, #0
 80122e8:	eba3 0008 	sub.w	r0, r3, r8
 80122ec:	2800      	cmp	r0, #0
 80122ee:	f77f af41 	ble.w	8012174 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80122f2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80122f6:	1410      	asrs	r0, r2, #16
 80122f8:	9f00      	ldr	r7, [sp, #0]
 80122fa:	140d      	asrs	r5, r1, #16
 80122fc:	fb06 7000 	mla	r0, r6, r0, r7
 8012300:	5d40      	ldrb	r0, [r0, r5]
 8012302:	9d01      	ldr	r5, [sp, #4]
 8012304:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8012308:	0e2e      	lsrs	r6, r5, #24
 801230a:	2eff      	cmp	r6, #255	@ 0xff
 801230c:	d112      	bne.n	8012334 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801230e:	482c      	ldr	r0, [pc, #176]	@ (80123c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8012310:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8012314:	0968      	lsrs	r0, r5, #5
 8012316:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801231a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801231e:	4330      	orrs	r0, r6
 8012320:	4328      	orrs	r0, r5
 8012322:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8012326:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012328:	f108 0801 	add.w	r8, r8, #1
 801232c:	4401      	add	r1, r0
 801232e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012330:	4402      	add	r2, r0
 8012332:	e7d9      	b.n	80122e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012334:	b2f0      	uxtb	r0, r6
 8012336:	2e00      	cmp	r6, #0
 8012338:	d0f5      	beq.n	8012326 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801233a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801233e:	fa1f f980 	uxth.w	r9, r0
 8012342:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012346:	43c0      	mvns	r0, r0
 8012348:	ea4f 272c 	mov.w	r7, ip, asr #8
 801234c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012350:	fb16 f609 	smulbb	r6, r6, r9
 8012354:	b2c0      	uxtb	r0, r0
 8012356:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801235a:	b2ed      	uxtb	r5, r5
 801235c:	fb1a fa09 	smulbb	sl, sl, r9
 8012360:	fb07 6700 	mla	r7, r7, r0, r6
 8012364:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8012368:	fb15 f509 	smulbb	r5, r5, r9
 801236c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012370:	b2bf      	uxth	r7, r7
 8012372:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012376:	fa5f fc8c 	uxtb.w	ip, ip
 801237a:	fb06 a600 	mla	r6, r6, r0, sl
 801237e:	fb0c 5500 	mla	r5, ip, r0, r5
 8012382:	1c78      	adds	r0, r7, #1
 8012384:	b2b6      	uxth	r6, r6
 8012386:	b2ad      	uxth	r5, r5
 8012388:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801238c:	f105 0a01 	add.w	sl, r5, #1
 8012390:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8012394:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012398:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801239c:	ea4a 0707 	orr.w	r7, sl, r7
 80123a0:	f106 0a01 	add.w	sl, r6, #1
 80123a4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80123a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80123ac:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80123b0:	ea47 070a 	orr.w	r7, r7, sl
 80123b4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80123b8:	e7b5      	b.n	8012326 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80123ba:	b005      	add	sp, #20
 80123bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80123c0:	fffff800 	.word	0xfffff800

080123c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80123c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123c8:	b087      	sub	sp, #28
 80123ca:	468b      	mov	fp, r1
 80123cc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80123d0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80123d2:	9204      	str	r2, [sp, #16]
 80123d4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80123d8:	6861      	ldr	r1, [r4, #4]
 80123da:	9205      	str	r2, [sp, #20]
 80123dc:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80123e0:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80123e4:	fb01 2000 	mla	r0, r1, r0, r2
 80123e8:	6822      	ldr	r2, [r4, #0]
 80123ea:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80123ee:	f8de 2000 	ldr.w	r2, [lr]
 80123f2:	9201      	str	r2, [sp, #4]
 80123f4:	f8de 2004 	ldr.w	r2, [lr, #4]
 80123f8:	9202      	str	r2, [sp, #8]
 80123fa:	f1bb 0f00 	cmp.w	fp, #0
 80123fe:	dc03      	bgt.n	8012408 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8012400:	9a04      	ldr	r2, [sp, #16]
 8012402:	2a00      	cmp	r2, #0
 8012404:	f340 8142 	ble.w	801268c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8012408:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801240a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801240e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012412:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012414:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8012418:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801241c:	2b00      	cmp	r3, #0
 801241e:	dd0e      	ble.n	801243e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8012420:	140c      	asrs	r4, r1, #16
 8012422:	d405      	bmi.n	8012430 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012424:	42bc      	cmp	r4, r7
 8012426:	da03      	bge.n	8012430 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012428:	1414      	asrs	r4, r2, #16
 801242a:	d401      	bmi.n	8012430 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801242c:	42b4      	cmp	r4, r6
 801242e:	db07      	blt.n	8012440 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012430:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8012432:	3b01      	subs	r3, #1
 8012434:	3002      	adds	r0, #2
 8012436:	4421      	add	r1, r4
 8012438:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801243a:	4422      	add	r2, r4
 801243c:	e7ee      	b.n	801241c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801243e:	d019      	beq.n	8012474 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012440:	1e5c      	subs	r4, r3, #1
 8012442:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8012444:	fb05 1504 	mla	r5, r5, r4, r1
 8012448:	142d      	asrs	r5, r5, #16
 801244a:	d409      	bmi.n	8012460 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801244c:	42bd      	cmp	r5, r7
 801244e:	da07      	bge.n	8012460 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012450:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8012452:	fb05 2404 	mla	r4, r5, r4, r2
 8012456:	1424      	asrs	r4, r4, #16
 8012458:	d402      	bmi.n	8012460 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801245a:	42b4      	cmp	r4, r6
 801245c:	f2c0 80b1 	blt.w	80125c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8012460:	f04f 0800 	mov.w	r8, #0
 8012464:	eb03 0408 	add.w	r4, r3, r8
 8012468:	2c00      	cmp	r4, #0
 801246a:	dc3e      	bgt.n	80124ea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801246c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012470:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012474:	f1bb 0f00 	cmp.w	fp, #0
 8012478:	f340 8108 	ble.w	801268c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801247c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012480:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012482:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012486:	f1bb 0b01 	subs.w	fp, fp, #1
 801248a:	eeb0 6a62 	vmov.f32	s12, s5
 801248e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012492:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012496:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801249a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801249e:	eeb0 6a43 	vmov.f32	s12, s6
 80124a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80124a6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80124aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80124ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80124b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80124b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80124ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80124be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80124c2:	ee12 2a90 	vmov	r2, s5
 80124c6:	eef0 2a47 	vmov.f32	s5, s14
 80124ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80124ce:	ee13 2a10 	vmov	r2, s6
 80124d2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80124d4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80124d6:	eeb0 3a67 	vmov.f32	s6, s15
 80124da:	fb92 f3f3 	sdiv	r3, r2, r3
 80124de:	9a04      	ldr	r2, [sp, #16]
 80124e0:	9314      	str	r3, [sp, #80]	@ 0x50
 80124e2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80124e4:	bf08      	it	eq
 80124e6:	4613      	moveq	r3, r2
 80124e8:	e787      	b.n	80123fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80124ea:	140e      	asrs	r6, r1, #16
 80124ec:	d462      	bmi.n	80125b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80124ee:	f8de 5008 	ldr.w	r5, [lr, #8]
 80124f2:	42b5      	cmp	r5, r6
 80124f4:	dd5e      	ble.n	80125b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80124f6:	1417      	asrs	r7, r2, #16
 80124f8:	d45c      	bmi.n	80125b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80124fa:	f8de 400c 	ldr.w	r4, [lr, #12]
 80124fe:	42bc      	cmp	r4, r7
 8012500:	dd58      	ble.n	80125b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012502:	b22d      	sxth	r5, r5
 8012504:	9c02      	ldr	r4, [sp, #8]
 8012506:	fb07 6505 	mla	r5, r7, r5, r6
 801250a:	5d66      	ldrb	r6, [r4, r5]
 801250c:	2e00      	cmp	r6, #0
 801250e:	d051      	beq.n	80125b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012510:	9c01      	ldr	r4, [sp, #4]
 8012512:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8012516:	f06f 0401 	mvn.w	r4, #1
 801251a:	fb04 f408 	mul.w	r4, r4, r8
 801251e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8012522:	5b05      	ldrh	r5, [r0, r4]
 8012524:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012528:	9403      	str	r4, [sp, #12]
 801252a:	9c05      	ldr	r4, [sp, #20]
 801252c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012530:	4366      	muls	r6, r4
 8012532:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8012536:	1c74      	adds	r4, r6, #1
 8012538:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801253c:	122e      	asrs	r6, r5, #8
 801253e:	1224      	asrs	r4, r4, #8
 8012540:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8012544:	00ed      	lsls	r5, r5, #3
 8012546:	b2a7      	uxth	r7, r4
 8012548:	43e4      	mvns	r4, r4
 801254a:	b2ed      	uxtb	r5, r5
 801254c:	b2e4      	uxtb	r4, r4
 801254e:	fb16 f604 	smulbb	r6, r6, r4
 8012552:	fb15 f504 	smulbb	r5, r5, r4
 8012556:	fb0c 6c07 	mla	ip, ip, r7, r6
 801255a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801255e:	fb1a fa04 	smulbb	sl, sl, r4
 8012562:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8012566:	fa1f fc8c 	uxth.w	ip, ip
 801256a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801256e:	fa5f f989 	uxtb.w	r9, r9
 8012572:	fb06 a607 	mla	r6, r6, r7, sl
 8012576:	f10c 0401 	add.w	r4, ip, #1
 801257a:	fb09 5507 	mla	r5, r9, r7, r5
 801257e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012582:	9c03      	ldr	r4, [sp, #12]
 8012584:	b2ad      	uxth	r5, r5
 8012586:	b2b6      	uxth	r6, r6
 8012588:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801258c:	f105 0a01 	add.w	sl, r5, #1
 8012590:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012594:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012598:	ea4a 0c0c 	orr.w	ip, sl, ip
 801259c:	f106 0a01 	add.w	sl, r6, #1
 80125a0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80125a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80125a8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80125ac:	ea4c 0c0a 	orr.w	ip, ip, sl
 80125b0:	f820 c004 	strh.w	ip, [r0, r4]
 80125b4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80125b6:	f108 38ff 	add.w	r8, r8, #4294967295
 80125ba:	4421      	add	r1, r4
 80125bc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80125be:	4422      	add	r2, r4
 80125c0:	e750      	b.n	8012464 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80125c2:	f04f 0900 	mov.w	r9, #0
 80125c6:	eba3 0409 	sub.w	r4, r3, r9
 80125ca:	2c00      	cmp	r4, #0
 80125cc:	f77f af4e 	ble.w	801246c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80125d0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80125d4:	140d      	asrs	r5, r1, #16
 80125d6:	1414      	asrs	r4, r2, #16
 80125d8:	fb06 5404 	mla	r4, r6, r4, r5
 80125dc:	9d02      	ldr	r5, [sp, #8]
 80125de:	5d2e      	ldrb	r6, [r5, r4]
 80125e0:	2e00      	cmp	r6, #0
 80125e2:	d04c      	beq.n	801267e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80125e4:	9d01      	ldr	r5, [sp, #4]
 80125e6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80125ea:	9c05      	ldr	r4, [sp, #20]
 80125ec:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80125f0:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80125f4:	4366      	muls	r6, r4
 80125f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80125fa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80125fe:	1c74      	adds	r4, r6, #1
 8012600:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8012604:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8012608:	122e      	asrs	r6, r5, #8
 801260a:	1224      	asrs	r4, r4, #8
 801260c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8012610:	00ed      	lsls	r5, r5, #3
 8012612:	b2a7      	uxth	r7, r4
 8012614:	43e4      	mvns	r4, r4
 8012616:	b2ed      	uxtb	r5, r5
 8012618:	b2e4      	uxtb	r4, r4
 801261a:	fb16 f604 	smulbb	r6, r6, r4
 801261e:	fb15 f504 	smulbb	r5, r5, r4
 8012622:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012626:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801262a:	fb1a fa04 	smulbb	sl, sl, r4
 801262e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012632:	fa1f fc8c 	uxth.w	ip, ip
 8012636:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801263a:	fa5f f888 	uxtb.w	r8, r8
 801263e:	fb06 a607 	mla	r6, r6, r7, sl
 8012642:	f10c 0401 	add.w	r4, ip, #1
 8012646:	fb08 5507 	mla	r5, r8, r7, r5
 801264a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801264e:	b2ad      	uxth	r5, r5
 8012650:	b2b6      	uxth	r6, r6
 8012652:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012656:	f105 0a01 	add.w	sl, r5, #1
 801265a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801265e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012662:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012666:	f106 0a01 	add.w	sl, r6, #1
 801266a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801266e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012672:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012676:	ea4c 0c0a 	orr.w	ip, ip, sl
 801267a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801267e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8012680:	f109 0901 	add.w	r9, r9, #1
 8012684:	4421      	add	r1, r4
 8012686:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8012688:	4422      	add	r2, r4
 801268a:	e79c      	b.n	80125c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801268c:	b007      	add	sp, #28
 801268e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012692 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012692:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012696:	b085      	sub	sp, #20
 8012698:	468b      	mov	fp, r1
 801269a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801269e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80126a0:	9203      	str	r2, [sp, #12]
 80126a2:	6861      	ldr	r1, [r4, #4]
 80126a4:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80126a8:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 80126ac:	fb01 2000 	mla	r0, r1, r0, r2
 80126b0:	6822      	ldr	r2, [r4, #0]
 80126b2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80126b6:	f8d8 2000 	ldr.w	r2, [r8]
 80126ba:	9200      	str	r2, [sp, #0]
 80126bc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80126c0:	9201      	str	r2, [sp, #4]
 80126c2:	f1bb 0f00 	cmp.w	fp, #0
 80126c6:	dc03      	bgt.n	80126d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80126c8:	9a03      	ldr	r2, [sp, #12]
 80126ca:	2a00      	cmp	r2, #0
 80126cc:	f340 8146 	ble.w	801295c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80126d0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80126d2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80126d6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80126da:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80126dc:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80126e0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80126e4:	2b00      	cmp	r3, #0
 80126e6:	dd0e      	ble.n	8012706 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80126e8:	140c      	asrs	r4, r1, #16
 80126ea:	d405      	bmi.n	80126f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80126ec:	42bc      	cmp	r4, r7
 80126ee:	da03      	bge.n	80126f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80126f0:	1414      	asrs	r4, r2, #16
 80126f2:	d401      	bmi.n	80126f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80126f4:	42b4      	cmp	r4, r6
 80126f6:	db07      	blt.n	8012708 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80126f8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80126fa:	3b01      	subs	r3, #1
 80126fc:	3002      	adds	r0, #2
 80126fe:	4421      	add	r1, r4
 8012700:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8012702:	4422      	add	r2, r4
 8012704:	e7ee      	b.n	80126e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012706:	d017      	beq.n	8012738 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012708:	1e5c      	subs	r4, r3, #1
 801270a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801270c:	fb05 1504 	mla	r5, r5, r4, r1
 8012710:	142d      	asrs	r5, r5, #16
 8012712:	d409      	bmi.n	8012728 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012714:	42bd      	cmp	r5, r7
 8012716:	da07      	bge.n	8012728 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012718:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801271a:	fb05 2404 	mla	r4, r5, r4, r2
 801271e:	1424      	asrs	r4, r4, #16
 8012720:	d402      	bmi.n	8012728 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012722:	42b4      	cmp	r4, r6
 8012724:	f2c0 80b3 	blt.w	801288e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8012728:	2600      	movs	r6, #0
 801272a:	199c      	adds	r4, r3, r6
 801272c:	2c00      	cmp	r4, #0
 801272e:	dc3e      	bgt.n	80127ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012730:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012734:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012738:	f1bb 0f00 	cmp.w	fp, #0
 801273c:	f340 810e 	ble.w	801295c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8012740:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012744:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012746:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801274a:	f1bb 0b01 	subs.w	fp, fp, #1
 801274e:	eeb0 6a62 	vmov.f32	s12, s5
 8012752:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012756:	ee31 1a05 	vadd.f32	s2, s2, s10
 801275a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801275e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8012762:	eeb0 6a43 	vmov.f32	s12, s6
 8012766:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801276a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801276e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012772:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012776:	ee77 2a62 	vsub.f32	s5, s14, s5
 801277a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801277e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012782:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012786:	ee12 2a90 	vmov	r2, s5
 801278a:	eef0 2a47 	vmov.f32	s5, s14
 801278e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012792:	ee13 2a10 	vmov	r2, s6
 8012796:	9311      	str	r3, [sp, #68]	@ 0x44
 8012798:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801279a:	eeb0 3a67 	vmov.f32	s6, s15
 801279e:	fb92 f3f3 	sdiv	r3, r2, r3
 80127a2:	9a03      	ldr	r2, [sp, #12]
 80127a4:	9312      	str	r3, [sp, #72]	@ 0x48
 80127a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80127a8:	bf08      	it	eq
 80127aa:	4613      	moveq	r3, r2
 80127ac:	e789      	b.n	80126c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80127ae:	140f      	asrs	r7, r1, #16
 80127b0:	d418      	bmi.n	80127e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80127b2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80127b6:	42bd      	cmp	r5, r7
 80127b8:	dd14      	ble.n	80127e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80127ba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80127be:	d411      	bmi.n	80127e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80127c0:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80127c4:	4564      	cmp	r4, ip
 80127c6:	dd0d      	ble.n	80127e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80127c8:	b22d      	sxth	r5, r5
 80127ca:	9c01      	ldr	r4, [sp, #4]
 80127cc:	fb0c 7505 	mla	r5, ip, r5, r7
 80127d0:	5d64      	ldrb	r4, [r4, r5]
 80127d2:	2cff      	cmp	r4, #255	@ 0xff
 80127d4:	d10c      	bne.n	80127f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80127d6:	9c00      	ldr	r4, [sp, #0]
 80127d8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80127dc:	f06f 0401 	mvn.w	r4, #1
 80127e0:	4374      	muls	r4, r6
 80127e2:	5305      	strh	r5, [r0, r4]
 80127e4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80127e6:	3e01      	subs	r6, #1
 80127e8:	4421      	add	r1, r4
 80127ea:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80127ec:	4422      	add	r2, r4
 80127ee:	e79c      	b.n	801272a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80127f0:	2c00      	cmp	r4, #0
 80127f2:	d0f7      	beq.n	80127e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80127f4:	9f00      	ldr	r7, [sp, #0]
 80127f6:	fa1f fc84 	uxth.w	ip, r4
 80127fa:	43e4      	mvns	r4, r4
 80127fc:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8012800:	f06f 0501 	mvn.w	r5, #1
 8012804:	b2e4      	uxtb	r4, r4
 8012806:	4375      	muls	r5, r6
 8012808:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801280c:	9502      	str	r5, [sp, #8]
 801280e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8012812:	5b45      	ldrh	r5, [r0, r5]
 8012814:	122f      	asrs	r7, r5, #8
 8012816:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801281a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801281e:	00ed      	lsls	r5, r5, #3
 8012820:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8012824:	fb17 f704 	smulbb	r7, r7, r4
 8012828:	b2ed      	uxtb	r5, r5
 801282a:	fb1a fa04 	smulbb	sl, sl, r4
 801282e:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8012832:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8012836:	fb15 f504 	smulbb	r5, r5, r4
 801283a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801283e:	fa1f fe8e 	uxth.w	lr, lr
 8012842:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012846:	fa5f f989 	uxtb.w	r9, r9
 801284a:	fb07 a70c 	mla	r7, r7, ip, sl
 801284e:	f10e 0401 	add.w	r4, lr, #1
 8012852:	fb09 550c 	mla	r5, r9, ip, r5
 8012856:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801285a:	9c02      	ldr	r4, [sp, #8]
 801285c:	b2ad      	uxth	r5, r5
 801285e:	b2bf      	uxth	r7, r7
 8012860:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8012864:	f105 0a01 	add.w	sl, r5, #1
 8012868:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801286c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012870:	ea4a 0e0e 	orr.w	lr, sl, lr
 8012874:	f107 0a01 	add.w	sl, r7, #1
 8012878:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801287c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012880:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012884:	ea4e 0e0a 	orr.w	lr, lr, sl
 8012888:	f820 e004 	strh.w	lr, [r0, r4]
 801288c:	e7aa      	b.n	80127e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801288e:	f04f 0900 	mov.w	r9, #0
 8012892:	eba3 0409 	sub.w	r4, r3, r9
 8012896:	2c00      	cmp	r4, #0
 8012898:	f77f af4a 	ble.w	8012730 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801289c:	1414      	asrs	r4, r2, #16
 801289e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80128a2:	140d      	asrs	r5, r1, #16
 80128a4:	fb06 5504 	mla	r5, r6, r4, r5
 80128a8:	9c01      	ldr	r4, [sp, #4]
 80128aa:	5d64      	ldrb	r4, [r4, r5]
 80128ac:	2cff      	cmp	r4, #255	@ 0xff
 80128ae:	d10b      	bne.n	80128c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80128b0:	9c00      	ldr	r4, [sp, #0]
 80128b2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80128b6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80128ba:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80128bc:	f109 0901 	add.w	r9, r9, #1
 80128c0:	4421      	add	r1, r4
 80128c2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80128c4:	4422      	add	r2, r4
 80128c6:	e7e4      	b.n	8012892 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80128c8:	2c00      	cmp	r4, #0
 80128ca:	d0f6      	beq.n	80128ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80128cc:	9e00      	ldr	r6, [sp, #0]
 80128ce:	b2a7      	uxth	r7, r4
 80128d0:	43e4      	mvns	r4, r4
 80128d2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80128d6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80128da:	b2e4      	uxtb	r4, r4
 80128dc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80128e0:	122e      	asrs	r6, r5, #8
 80128e2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80128e6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80128ea:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80128ee:	00ed      	lsls	r5, r5, #3
 80128f0:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80128f4:	fb16 f604 	smulbb	r6, r6, r4
 80128f8:	b2ed      	uxtb	r5, r5
 80128fa:	fb1a fa04 	smulbb	sl, sl, r4
 80128fe:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012902:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012906:	fb15 f504 	smulbb	r5, r5, r4
 801290a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801290e:	fa1f fc8c 	uxth.w	ip, ip
 8012912:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012916:	fa5f fe8e 	uxtb.w	lr, lr
 801291a:	fb06 a607 	mla	r6, r6, r7, sl
 801291e:	f10c 0401 	add.w	r4, ip, #1
 8012922:	fb0e 5507 	mla	r5, lr, r7, r5
 8012926:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801292a:	b2ad      	uxth	r5, r5
 801292c:	b2b6      	uxth	r6, r6
 801292e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012932:	f105 0a01 	add.w	sl, r5, #1
 8012936:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801293a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801293e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012942:	f106 0a01 	add.w	sl, r6, #1
 8012946:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801294a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801294e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012952:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012956:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801295a:	e7ae      	b.n	80128ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801295c:	b005      	add	sp, #20
 801295e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012962 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012962:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012966:	b085      	sub	sp, #20
 8012968:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801296a:	9203      	str	r2, [sp, #12]
 801296c:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8012970:	9100      	str	r1, [sp, #0]
 8012972:	9201      	str	r2, [sp, #4]
 8012974:	6841      	ldr	r1, [r0, #4]
 8012976:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801297a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801297e:	fb01 2404 	mla	r4, r1, r4, r2
 8012982:	6802      	ldr	r2, [r0, #0]
 8012984:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012988:	f8de 2000 	ldr.w	r2, [lr]
 801298c:	9202      	str	r2, [sp, #8]
 801298e:	9a01      	ldr	r2, [sp, #4]
 8012990:	43d6      	mvns	r6, r2
 8012992:	b2f6      	uxtb	r6, r6
 8012994:	9a00      	ldr	r2, [sp, #0]
 8012996:	2a00      	cmp	r2, #0
 8012998:	dc03      	bgt.n	80129a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801299a:	9a03      	ldr	r2, [sp, #12]
 801299c:	2a00      	cmp	r2, #0
 801299e:	f340 8124 	ble.w	8012bea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80129a2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80129a4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80129a8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80129ac:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80129ae:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80129b2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80129b6:	2b00      	cmp	r3, #0
 80129b8:	dd0e      	ble.n	80129d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80129ba:	1408      	asrs	r0, r1, #16
 80129bc:	d405      	bmi.n	80129ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80129be:	4560      	cmp	r0, ip
 80129c0:	da03      	bge.n	80129ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80129c2:	1410      	asrs	r0, r2, #16
 80129c4:	d401      	bmi.n	80129ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80129c6:	42b8      	cmp	r0, r7
 80129c8:	db07      	blt.n	80129da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80129ca:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80129cc:	3b01      	subs	r3, #1
 80129ce:	3402      	adds	r4, #2
 80129d0:	4401      	add	r1, r0
 80129d2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80129d4:	4402      	add	r2, r0
 80129d6:	e7ee      	b.n	80129b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80129d8:	d06e      	beq.n	8012ab8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80129da:	1e58      	subs	r0, r3, #1
 80129dc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80129de:	fb05 1500 	mla	r5, r5, r0, r1
 80129e2:	142d      	asrs	r5, r5, #16
 80129e4:	d45c      	bmi.n	8012aa0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80129e6:	4565      	cmp	r5, ip
 80129e8:	da5a      	bge.n	8012aa0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80129ea:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80129ec:	fb05 2000 	mla	r0, r5, r0, r2
 80129f0:	1400      	asrs	r0, r0, #16
 80129f2:	d455      	bmi.n	8012aa0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80129f4:	42b8      	cmp	r0, r7
 80129f6:	da53      	bge.n	8012aa0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80129f8:	4699      	mov	r9, r3
 80129fa:	46a2      	mov	sl, r4
 80129fc:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8012a00:	f1b9 0f00 	cmp.w	r9, #0
 8012a04:	dd54      	ble.n	8012ab0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012a06:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012a0a:	140d      	asrs	r5, r1, #16
 8012a0c:	1410      	asrs	r0, r2, #16
 8012a0e:	f109 39ff 	add.w	r9, r9, #4294967295
 8012a12:	fb07 5000 	mla	r0, r7, r0, r5
 8012a16:	9d02      	ldr	r5, [sp, #8]
 8012a18:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8012a1c:	f8ba 5000 	ldrh.w	r5, [sl]
 8012a20:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012a24:	122f      	asrs	r7, r5, #8
 8012a26:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8012a2a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012a2e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012a32:	00ed      	lsls	r5, r5, #3
 8012a34:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8012a38:	fb17 f706 	smulbb	r7, r7, r6
 8012a3c:	b2ed      	uxtb	r5, r5
 8012a3e:	fb18 f806 	smulbb	r8, r8, r6
 8012a42:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8012a46:	10c7      	asrs	r7, r0, #3
 8012a48:	fb15 f506 	smulbb	r5, r5, r6
 8012a4c:	00c0      	lsls	r0, r0, #3
 8012a4e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012a52:	fa1f fc8c 	uxth.w	ip, ip
 8012a56:	b2c0      	uxtb	r0, r0
 8012a58:	fb07 870b 	mla	r7, r7, fp, r8
 8012a5c:	fb00 500b 	mla	r0, r0, fp, r5
 8012a60:	f10c 0501 	add.w	r5, ip, #1
 8012a64:	b2bf      	uxth	r7, r7
 8012a66:	b280      	uxth	r0, r0
 8012a68:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012a6c:	f107 0801 	add.w	r8, r7, #1
 8012a70:	1c45      	adds	r5, r0, #1
 8012a72:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8012a76:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012a7a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012a7e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012a80:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012a84:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012a88:	4401      	add	r1, r0
 8012a8a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8012a8e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012a90:	ea45 0c0c 	orr.w	ip, r5, ip
 8012a94:	4402      	add	r2, r0
 8012a96:	ea4c 0c08 	orr.w	ip, ip, r8
 8012a9a:	f82a cb02 	strh.w	ip, [sl], #2
 8012a9e:	e7af      	b.n	8012a00 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012aa0:	f04f 0800 	mov.w	r8, #0
 8012aa4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8012aa8:	eb03 0008 	add.w	r0, r3, r8
 8012aac:	2800      	cmp	r0, #0
 8012aae:	dc41      	bgt.n	8012b34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8012ab0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012ab4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012ab8:	9b00      	ldr	r3, [sp, #0]
 8012aba:	2b00      	cmp	r3, #0
 8012abc:	f340 8095 	ble.w	8012bea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8012ac0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012ac4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012ac6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012aca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012ace:	eef0 6a62 	vmov.f32	s13, s5
 8012ad2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012ad6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012ada:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012ade:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8012ae2:	eef0 6a43 	vmov.f32	s13, s6
 8012ae6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012aea:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8012aee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012af2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012af6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012afa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012afe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012b02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012b06:	ee12 2a90 	vmov	r2, s5
 8012b0a:	eef0 2a47 	vmov.f32	s5, s14
 8012b0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012b12:	ee13 2a10 	vmov	r2, s6
 8012b16:	9311      	str	r3, [sp, #68]	@ 0x44
 8012b18:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012b1a:	eeb0 3a67 	vmov.f32	s6, s15
 8012b1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012b22:	9312      	str	r3, [sp, #72]	@ 0x48
 8012b24:	9b00      	ldr	r3, [sp, #0]
 8012b26:	9a03      	ldr	r2, [sp, #12]
 8012b28:	3b01      	subs	r3, #1
 8012b2a:	9300      	str	r3, [sp, #0]
 8012b2c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012b2e:	bf08      	it	eq
 8012b30:	4613      	moveq	r3, r2
 8012b32:	e72f      	b.n	8012994 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8012b34:	140f      	asrs	r7, r1, #16
 8012b36:	d451      	bmi.n	8012bdc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012b38:	f8de 5008 	ldr.w	r5, [lr, #8]
 8012b3c:	42bd      	cmp	r5, r7
 8012b3e:	dd4d      	ble.n	8012bdc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012b40:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012b44:	d44a      	bmi.n	8012bdc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012b46:	f8de 000c 	ldr.w	r0, [lr, #12]
 8012b4a:	4560      	cmp	r0, ip
 8012b4c:	dd46      	ble.n	8012bdc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012b4e:	b22d      	sxth	r5, r5
 8012b50:	9802      	ldr	r0, [sp, #8]
 8012b52:	fb0c 7505 	mla	r5, ip, r5, r7
 8012b56:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8012b5a:	f06f 0501 	mvn.w	r5, #1
 8012b5e:	fb05 fb08 	mul.w	fp, r5, r8
 8012b62:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012b66:	f834 500b 	ldrh.w	r5, [r4, fp]
 8012b6a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012b6e:	122f      	asrs	r7, r5, #8
 8012b70:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8012b74:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012b78:	00ed      	lsls	r5, r5, #3
 8012b7a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8012b7e:	fb17 f706 	smulbb	r7, r7, r6
 8012b82:	b2ed      	uxtb	r5, r5
 8012b84:	fb19 f906 	smulbb	r9, r9, r6
 8012b88:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8012b8c:	10c7      	asrs	r7, r0, #3
 8012b8e:	fb15 f506 	smulbb	r5, r5, r6
 8012b92:	00c0      	lsls	r0, r0, #3
 8012b94:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012b98:	fa1f fc8c 	uxth.w	ip, ip
 8012b9c:	b2c0      	uxtb	r0, r0
 8012b9e:	fb07 970a 	mla	r7, r7, sl, r9
 8012ba2:	fb00 500a 	mla	r0, r0, sl, r5
 8012ba6:	f10c 0501 	add.w	r5, ip, #1
 8012baa:	b2bf      	uxth	r7, r7
 8012bac:	b280      	uxth	r0, r0
 8012bae:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012bb2:	f107 0901 	add.w	r9, r7, #1
 8012bb6:	1c45      	adds	r5, r0, #1
 8012bb8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8012bbc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012bc0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012bc4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012bc8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012bcc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8012bd0:	ea45 0c0c 	orr.w	ip, r5, ip
 8012bd4:	ea4c 0c09 	orr.w	ip, ip, r9
 8012bd8:	f824 c00b 	strh.w	ip, [r4, fp]
 8012bdc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012bde:	f108 38ff 	add.w	r8, r8, #4294967295
 8012be2:	4401      	add	r1, r0
 8012be4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012be6:	4402      	add	r2, r0
 8012be8:	e75e      	b.n	8012aa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8012bea:	b005      	add	sp, #20
 8012bec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012bf0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012bf4:	b085      	sub	sp, #20
 8012bf6:	4693      	mov	fp, r2
 8012bf8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012bfc:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8012bfe:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8012c00:	6870      	ldr	r0, [r6, #4]
 8012c02:	9101      	str	r1, [sp, #4]
 8012c04:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8012c08:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8012c0c:	fb00 2404 	mla	r4, r0, r4, r2
 8012c10:	6832      	ldr	r2, [r6, #0]
 8012c12:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012c16:	682a      	ldr	r2, [r5, #0]
 8012c18:	9202      	str	r2, [sp, #8]
 8012c1a:	9a01      	ldr	r2, [sp, #4]
 8012c1c:	2a00      	cmp	r2, #0
 8012c1e:	dc03      	bgt.n	8012c28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8012c20:	f1bb 0f00 	cmp.w	fp, #0
 8012c24:	f340 809a 	ble.w	8012d5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8012c28:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012c2a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012c2e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8012c32:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012c34:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8012c38:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012c3c:	2b00      	cmp	r3, #0
 8012c3e:	dd0c      	ble.n	8012c5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8012c40:	1406      	asrs	r6, r0, #16
 8012c42:	d405      	bmi.n	8012c50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012c44:	454e      	cmp	r6, r9
 8012c46:	da03      	bge.n	8012c50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012c48:	1416      	asrs	r6, r2, #16
 8012c4a:	d401      	bmi.n	8012c50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012c4c:	4546      	cmp	r6, r8
 8012c4e:	db05      	blt.n	8012c5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012c50:	4470      	add	r0, lr
 8012c52:	4462      	add	r2, ip
 8012c54:	3b01      	subs	r3, #1
 8012c56:	3402      	adds	r4, #2
 8012c58:	e7f0      	b.n	8012c3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8012c5a:	d00f      	beq.n	8012c7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8012c5c:	1e5e      	subs	r6, r3, #1
 8012c5e:	fb0e 0706 	mla	r7, lr, r6, r0
 8012c62:	143f      	asrs	r7, r7, #16
 8012c64:	d541      	bpl.n	8012cea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8012c66:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8012c6a:	4698      	mov	r8, r3
 8012c6c:	9603      	str	r6, [sp, #12]
 8012c6e:	f1b8 0f00 	cmp.w	r8, #0
 8012c72:	dc56      	bgt.n	8012d22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8012c74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012c78:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012c7c:	9b01      	ldr	r3, [sp, #4]
 8012c7e:	2b00      	cmp	r3, #0
 8012c80:	dd6c      	ble.n	8012d5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8012c82:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012c86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012c88:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012c8c:	eeb0 6a62 	vmov.f32	s12, s5
 8012c90:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012c94:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012c98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012c9c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8012ca0:	eeb0 6a43 	vmov.f32	s12, s6
 8012ca4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ca8:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8012cac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012cb0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012cb4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012cb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012cbc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012cc0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012cc4:	ee12 2a90 	vmov	r2, s5
 8012cc8:	eef0 2a47 	vmov.f32	s5, s14
 8012ccc:	fb92 fef3 	sdiv	lr, r2, r3
 8012cd0:	ee13 2a10 	vmov	r2, s6
 8012cd4:	eeb0 3a67 	vmov.f32	s6, s15
 8012cd8:	fb92 fcf3 	sdiv	ip, r2, r3
 8012cdc:	9b01      	ldr	r3, [sp, #4]
 8012cde:	3b01      	subs	r3, #1
 8012ce0:	9301      	str	r3, [sp, #4]
 8012ce2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012ce4:	bf08      	it	eq
 8012ce6:	465b      	moveq	r3, fp
 8012ce8:	e797      	b.n	8012c1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8012cea:	454f      	cmp	r7, r9
 8012cec:	dabb      	bge.n	8012c66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012cee:	fb0c 2606 	mla	r6, ip, r6, r2
 8012cf2:	1436      	asrs	r6, r6, #16
 8012cf4:	d4b7      	bmi.n	8012c66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012cf6:	4546      	cmp	r6, r8
 8012cf8:	dab5      	bge.n	8012c66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012cfa:	461e      	mov	r6, r3
 8012cfc:	46a0      	mov	r8, r4
 8012cfe:	2e00      	cmp	r6, #0
 8012d00:	ddb8      	ble.n	8012c74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012d02:	1417      	asrs	r7, r2, #16
 8012d04:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8012d08:	ea4f 4920 	mov.w	r9, r0, asr #16
 8012d0c:	9902      	ldr	r1, [sp, #8]
 8012d0e:	4470      	add	r0, lr
 8012d10:	4462      	add	r2, ip
 8012d12:	fb0a 9707 	mla	r7, sl, r7, r9
 8012d16:	3e01      	subs	r6, #1
 8012d18:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8012d1c:	f828 7b02 	strh.w	r7, [r8], #2
 8012d20:	e7ed      	b.n	8012cfe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8012d22:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012d26:	d414      	bmi.n	8012d52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012d28:	68ae      	ldr	r6, [r5, #8]
 8012d2a:	454e      	cmp	r6, r9
 8012d2c:	dd11      	ble.n	8012d52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012d2e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8012d32:	d40e      	bmi.n	8012d52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012d34:	68ef      	ldr	r7, [r5, #12]
 8012d36:	4557      	cmp	r7, sl
 8012d38:	dd0b      	ble.n	8012d52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012d3a:	b236      	sxth	r6, r6
 8012d3c:	f06f 0101 	mvn.w	r1, #1
 8012d40:	9f02      	ldr	r7, [sp, #8]
 8012d42:	fb0a 9606 	mla	r6, sl, r6, r9
 8012d46:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8012d4a:	fb01 f608 	mul.w	r6, r1, r8
 8012d4e:	9903      	ldr	r1, [sp, #12]
 8012d50:	538f      	strh	r7, [r1, r6]
 8012d52:	4470      	add	r0, lr
 8012d54:	4462      	add	r2, ip
 8012d56:	f108 38ff 	add.w	r8, r8, #4294967295
 8012d5a:	e788      	b.n	8012c6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012d5c:	b005      	add	sp, #20
 8012d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012d62 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012d62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d66:	b087      	sub	sp, #28
 8012d68:	468b      	mov	fp, r1
 8012d6a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012d6e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8012d70:	9203      	str	r2, [sp, #12]
 8012d72:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012d76:	6841      	ldr	r1, [r0, #4]
 8012d78:	9204      	str	r2, [sp, #16]
 8012d7a:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8012d7e:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8012d82:	fb01 2505 	mla	r5, r1, r5, r2
 8012d86:	6802      	ldr	r2, [r0, #0]
 8012d88:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8012d8c:	f8d9 2000 	ldr.w	r2, [r9]
 8012d90:	9201      	str	r2, [sp, #4]
 8012d92:	f1bb 0f00 	cmp.w	fp, #0
 8012d96:	dc03      	bgt.n	8012da0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012d98:	9a03      	ldr	r2, [sp, #12]
 8012d9a:	2a00      	cmp	r2, #0
 8012d9c:	f340 8158 	ble.w	8013050 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8012da0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012da2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8012da6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8012daa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012dac:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8012db0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012db4:	2b00      	cmp	r3, #0
 8012db6:	dd0e      	ble.n	8012dd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012db8:	1402      	asrs	r2, r0, #16
 8012dba:	d405      	bmi.n	8012dc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012dbc:	42ba      	cmp	r2, r7
 8012dbe:	da03      	bge.n	8012dc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012dc0:	140a      	asrs	r2, r1, #16
 8012dc2:	d401      	bmi.n	8012dc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012dc4:	42b2      	cmp	r2, r6
 8012dc6:	db07      	blt.n	8012dd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012dc8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012dca:	3b01      	subs	r3, #1
 8012dcc:	3502      	adds	r5, #2
 8012dce:	4410      	add	r0, r2
 8012dd0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012dd2:	4411      	add	r1, r2
 8012dd4:	e7ee      	b.n	8012db4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012dd6:	d017      	beq.n	8012e08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012dd8:	1e5a      	subs	r2, r3, #1
 8012dda:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8012ddc:	fb04 0402 	mla	r4, r4, r2, r0
 8012de0:	1424      	asrs	r4, r4, #16
 8012de2:	d409      	bmi.n	8012df8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012de4:	42bc      	cmp	r4, r7
 8012de6:	da07      	bge.n	8012df8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012de8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8012dea:	fb04 1202 	mla	r2, r4, r2, r1
 8012dee:	1412      	asrs	r2, r2, #16
 8012df0:	d402      	bmi.n	8012df8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012df2:	42b2      	cmp	r2, r6
 8012df4:	f2c0 80bf 	blt.w	8012f76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012df8:	2700      	movs	r7, #0
 8012dfa:	19da      	adds	r2, r3, r7
 8012dfc:	2a00      	cmp	r2, #0
 8012dfe:	dc3e      	bgt.n	8012e7e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012e00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012e04:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8012e08:	f1bb 0f00 	cmp.w	fp, #0
 8012e0c:	f340 8120 	ble.w	8013050 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8012e10:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012e14:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012e16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012e1a:	f1bb 0b01 	subs.w	fp, fp, #1
 8012e1e:	eeb0 6a62 	vmov.f32	s12, s5
 8012e22:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012e26:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012e2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012e2e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8012e32:	eeb0 6a43 	vmov.f32	s12, s6
 8012e36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012e3a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8012e3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012e42:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012e46:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012e4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012e4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012e52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012e56:	ee12 2a90 	vmov	r2, s5
 8012e5a:	eef0 2a47 	vmov.f32	s5, s14
 8012e5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012e62:	ee13 2a10 	vmov	r2, s6
 8012e66:	9313      	str	r3, [sp, #76]	@ 0x4c
 8012e68:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012e6a:	eeb0 3a67 	vmov.f32	s6, s15
 8012e6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012e72:	9a03      	ldr	r2, [sp, #12]
 8012e74:	9314      	str	r3, [sp, #80]	@ 0x50
 8012e76:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012e78:	bf08      	it	eq
 8012e7a:	4613      	moveq	r3, r2
 8012e7c:	e789      	b.n	8012d92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012e7e:	1406      	asrs	r6, r0, #16
 8012e80:	d42d      	bmi.n	8012ede <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012e82:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8012e86:	42b4      	cmp	r4, r6
 8012e88:	dd29      	ble.n	8012ede <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012e8a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8012e8e:	d426      	bmi.n	8012ede <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012e90:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8012e94:	4562      	cmp	r2, ip
 8012e96:	dd22      	ble.n	8012ede <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012e98:	b224      	sxth	r4, r4
 8012e9a:	9a01      	ldr	r2, [sp, #4]
 8012e9c:	fb0c 6404 	mla	r4, ip, r4, r6
 8012ea0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8012ea4:	0e22      	lsrs	r2, r4, #24
 8012ea6:	d01a      	beq.n	8012ede <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012ea8:	9e04      	ldr	r6, [sp, #16]
 8012eaa:	4372      	muls	r2, r6
 8012eac:	1c56      	adds	r6, r2, #1
 8012eae:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8012eb2:	0a26      	lsrs	r6, r4, #8
 8012eb4:	1212      	asrs	r2, r2, #8
 8012eb6:	9605      	str	r6, [sp, #20]
 8012eb8:	2aff      	cmp	r2, #255	@ 0xff
 8012eba:	d116      	bne.n	8012eea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8012ebc:	f06f 0201 	mvn.w	r2, #1
 8012ec0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8012ec4:	fb02 fc07 	mul.w	ip, r2, r7
 8012ec8:	0962      	lsrs	r2, r4, #5
 8012eca:	f026 0607 	bic.w	r6, r6, #7
 8012ece:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012ed2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8012ed6:	4316      	orrs	r6, r2
 8012ed8:	4326      	orrs	r6, r4
 8012eda:	f825 600c 	strh.w	r6, [r5, ip]
 8012ede:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012ee0:	3f01      	subs	r7, #1
 8012ee2:	4410      	add	r0, r2
 8012ee4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012ee6:	4411      	add	r1, r2
 8012ee8:	e787      	b.n	8012dfa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012eea:	f06f 0601 	mvn.w	r6, #1
 8012eee:	fa1f fa82 	uxth.w	sl, r2
 8012ef2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8012ef6:	43d2      	mvns	r2, r2
 8012ef8:	437e      	muls	r6, r7
 8012efa:	b2e4      	uxtb	r4, r4
 8012efc:	fb1c fc0a 	smulbb	ip, ip, sl
 8012f00:	b2d2      	uxtb	r2, r2
 8012f02:	f835 8006 	ldrh.w	r8, [r5, r6]
 8012f06:	fb14 f40a 	smulbb	r4, r4, sl
 8012f0a:	9602      	str	r6, [sp, #8]
 8012f0c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8012f10:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8012f14:	fb16 f60a 	smulbb	r6, r6, sl
 8012f18:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8012f1c:	fb0e ce02 	mla	lr, lr, r2, ip
 8012f20:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8012f24:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012f28:	fa1f fe8e 	uxth.w	lr, lr
 8012f2c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8012f30:	fa5f f888 	uxtb.w	r8, r8
 8012f34:	fb0c 6c02 	mla	ip, ip, r2, r6
 8012f38:	fb08 4402 	mla	r4, r8, r2, r4
 8012f3c:	f10e 0201 	add.w	r2, lr, #1
 8012f40:	fa1f fc8c 	uxth.w	ip, ip
 8012f44:	b2a4      	uxth	r4, r4
 8012f46:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8012f4a:	9a02      	ldr	r2, [sp, #8]
 8012f4c:	1c66      	adds	r6, r4, #1
 8012f4e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8012f52:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8012f56:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012f5a:	ea46 0e0e 	orr.w	lr, r6, lr
 8012f5e:	f10c 0601 	add.w	r6, ip, #1
 8012f62:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8012f66:	0976      	lsrs	r6, r6, #5
 8012f68:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8012f6c:	ea4e 0e06 	orr.w	lr, lr, r6
 8012f70:	f825 e002 	strh.w	lr, [r5, r2]
 8012f74:	e7b3      	b.n	8012ede <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012f76:	f04f 0800 	mov.w	r8, #0
 8012f7a:	eba3 0208 	sub.w	r2, r3, r8
 8012f7e:	2a00      	cmp	r2, #0
 8012f80:	f77f af3e 	ble.w	8012e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012f84:	1404      	asrs	r4, r0, #16
 8012f86:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8012f8a:	140a      	asrs	r2, r1, #16
 8012f8c:	fb06 4202 	mla	r2, r6, r2, r4
 8012f90:	9c01      	ldr	r4, [sp, #4]
 8012f92:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8012f96:	0e22      	lsrs	r2, r4, #24
 8012f98:	d015      	beq.n	8012fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8012f9a:	9e04      	ldr	r6, [sp, #16]
 8012f9c:	4372      	muls	r2, r6
 8012f9e:	1c56      	adds	r6, r2, #1
 8012fa0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8012fa4:	0a26      	lsrs	r6, r4, #8
 8012fa6:	1212      	asrs	r2, r2, #8
 8012fa8:	2aff      	cmp	r2, #255	@ 0xff
 8012faa:	d113      	bne.n	8012fd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8012fac:	0962      	lsrs	r2, r4, #5
 8012fae:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8012fb2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012fb6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8012fba:	f026 0607 	bic.w	r6, r6, #7
 8012fbe:	4316      	orrs	r6, r2
 8012fc0:	4326      	orrs	r6, r4
 8012fc2:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8012fc6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012fc8:	f108 0801 	add.w	r8, r8, #1
 8012fcc:	4410      	add	r0, r2
 8012fce:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012fd0:	4411      	add	r1, r2
 8012fd2:	e7d2      	b.n	8012f7a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8012fd4:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8012fd8:	fa1f fa82 	uxth.w	sl, r2
 8012fdc:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8012fe0:	43d2      	mvns	r2, r2
 8012fe2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012fe6:	fb17 f70a 	smulbb	r7, r7, sl
 8012fea:	b2d2      	uxtb	r2, r2
 8012fec:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012ff0:	b2e4      	uxtb	r4, r4
 8012ff2:	b2f6      	uxtb	r6, r6
 8012ff4:	fb0c 7c02 	mla	ip, ip, r2, r7
 8012ff8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012ffc:	fb14 f40a 	smulbb	r4, r4, sl
 8013000:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013004:	fa1f fc8c 	uxth.w	ip, ip
 8013008:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801300c:	fb16 f60a 	smulbb	r6, r6, sl
 8013010:	fa5f fe8e 	uxtb.w	lr, lr
 8013014:	fb0e 4402 	mla	r4, lr, r2, r4
 8013018:	fb07 6702 	mla	r7, r7, r2, r6
 801301c:	f10c 0201 	add.w	r2, ip, #1
 8013020:	b2a4      	uxth	r4, r4
 8013022:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8013026:	1c66      	adds	r6, r4, #1
 8013028:	b2bf      	uxth	r7, r7
 801302a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801302e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8013032:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8013036:	ea46 0c0c 	orr.w	ip, r6, ip
 801303a:	1c7e      	adds	r6, r7, #1
 801303c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8013040:	0976      	lsrs	r6, r6, #5
 8013042:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013046:	ea4c 0c06 	orr.w	ip, ip, r6
 801304a:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801304e:	e7ba      	b.n	8012fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8013050:	b007      	add	sp, #28
 8013052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013058 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801305c:	b085      	sub	sp, #20
 801305e:	468b      	mov	fp, r1
 8013060:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013064:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013066:	9203      	str	r2, [sp, #12]
 8013068:	6841      	ldr	r1, [r0, #4]
 801306a:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801306e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013072:	fb01 2404 	mla	r4, r1, r4, r2
 8013076:	6802      	ldr	r2, [r0, #0]
 8013078:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801307c:	f8d8 2000 	ldr.w	r2, [r8]
 8013080:	9201      	str	r2, [sp, #4]
 8013082:	f1bb 0f00 	cmp.w	fp, #0
 8013086:	dc03      	bgt.n	8013090 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013088:	9a03      	ldr	r2, [sp, #12]
 801308a:	2a00      	cmp	r2, #0
 801308c:	f340 814f 	ble.w	801332e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8013090:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013092:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8013096:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801309a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801309c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80130a0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80130a4:	2b00      	cmp	r3, #0
 80130a6:	dd0e      	ble.n	80130c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80130a8:	1408      	asrs	r0, r1, #16
 80130aa:	d405      	bmi.n	80130b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80130ac:	42b8      	cmp	r0, r7
 80130ae:	da03      	bge.n	80130b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80130b0:	1410      	asrs	r0, r2, #16
 80130b2:	d401      	bmi.n	80130b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80130b4:	42b0      	cmp	r0, r6
 80130b6:	db07      	blt.n	80130c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80130b8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80130ba:	3b01      	subs	r3, #1
 80130bc:	3402      	adds	r4, #2
 80130be:	4401      	add	r1, r0
 80130c0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80130c2:	4402      	add	r2, r0
 80130c4:	e7ee      	b.n	80130a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80130c6:	d017      	beq.n	80130f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80130c8:	1e58      	subs	r0, r3, #1
 80130ca:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80130cc:	fb05 1500 	mla	r5, r5, r0, r1
 80130d0:	142d      	asrs	r5, r5, #16
 80130d2:	d409      	bmi.n	80130e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80130d4:	42bd      	cmp	r5, r7
 80130d6:	da07      	bge.n	80130e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80130d8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80130da:	fb05 2000 	mla	r0, r5, r0, r2
 80130de:	1400      	asrs	r0, r0, #16
 80130e0:	d402      	bmi.n	80130e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80130e2:	42b0      	cmp	r0, r6
 80130e4:	f2c0 80ba 	blt.w	801325c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80130e8:	2600      	movs	r6, #0
 80130ea:	1998      	adds	r0, r3, r6
 80130ec:	2800      	cmp	r0, #0
 80130ee:	dc3e      	bgt.n	801316e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80130f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80130f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80130f8:	f1bb 0f00 	cmp.w	fp, #0
 80130fc:	f340 8117 	ble.w	801332e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8013100:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013104:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013106:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801310a:	f1bb 0b01 	subs.w	fp, fp, #1
 801310e:	eeb0 6a62 	vmov.f32	s12, s5
 8013112:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013116:	ee31 1a05 	vadd.f32	s2, s2, s10
 801311a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801311e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013122:	eeb0 6a43 	vmov.f32	s12, s6
 8013126:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801312a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801312e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013132:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013136:	ee77 2a62 	vsub.f32	s5, s14, s5
 801313a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801313e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013142:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013146:	ee12 2a90 	vmov	r2, s5
 801314a:	eef0 2a47 	vmov.f32	s5, s14
 801314e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013152:	ee13 2a10 	vmov	r2, s6
 8013156:	9311      	str	r3, [sp, #68]	@ 0x44
 8013158:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801315a:	eeb0 3a67 	vmov.f32	s6, s15
 801315e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013162:	9a03      	ldr	r2, [sp, #12]
 8013164:	9312      	str	r3, [sp, #72]	@ 0x48
 8013166:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013168:	bf08      	it	eq
 801316a:	4613      	moveq	r3, r2
 801316c:	e789      	b.n	8013082 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801316e:	140f      	asrs	r7, r1, #16
 8013170:	d424      	bmi.n	80131bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013172:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8013176:	42bd      	cmp	r5, r7
 8013178:	dd20      	ble.n	80131bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801317a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801317e:	d41d      	bmi.n	80131bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013180:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8013184:	4560      	cmp	r0, ip
 8013186:	dd19      	ble.n	80131bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013188:	b22d      	sxth	r5, r5
 801318a:	9801      	ldr	r0, [sp, #4]
 801318c:	fb0c 7505 	mla	r5, ip, r5, r7
 8013190:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8013194:	0e07      	lsrs	r7, r0, #24
 8013196:	2fff      	cmp	r7, #255	@ 0xff
 8013198:	d116      	bne.n	80131c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801319a:	f06f 0501 	mvn.w	r5, #1
 801319e:	fb05 f706 	mul.w	r7, r5, r6
 80131a2:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80131a6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80131aa:	0945      	lsrs	r5, r0, #5
 80131ac:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80131b0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80131b4:	ea4c 0505 	orr.w	r5, ip, r5
 80131b8:	4305      	orrs	r5, r0
 80131ba:	53e5      	strh	r5, [r4, r7]
 80131bc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80131be:	3e01      	subs	r6, #1
 80131c0:	4401      	add	r1, r0
 80131c2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80131c4:	4402      	add	r2, r0
 80131c6:	e790      	b.n	80130ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80131c8:	b2fd      	uxtb	r5, r7
 80131ca:	2f00      	cmp	r7, #0
 80131cc:	d0f6      	beq.n	80131bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80131ce:	f06f 0701 	mvn.w	r7, #1
 80131d2:	fa1f f985 	uxth.w	r9, r5
 80131d6:	43ed      	mvns	r5, r5
 80131d8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80131dc:	4377      	muls	r7, r6
 80131de:	fb1a fa09 	smulbb	sl, sl, r9
 80131e2:	b2ed      	uxtb	r5, r5
 80131e4:	f834 e007 	ldrh.w	lr, [r4, r7]
 80131e8:	9702      	str	r7, [sp, #8]
 80131ea:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80131ee:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80131f2:	fb17 f709 	smulbb	r7, r7, r9
 80131f6:	b2c0      	uxtb	r0, r0
 80131f8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80131fc:	fb10 f009 	smulbb	r0, r0, r9
 8013200:	fb0c 7c05 	mla	ip, ip, r5, r7
 8013204:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8013208:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801320c:	fa1f fc8c 	uxth.w	ip, ip
 8013210:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013214:	fa5f fe8e 	uxtb.w	lr, lr
 8013218:	fb07 a705 	mla	r7, r7, r5, sl
 801321c:	fb0e 0005 	mla	r0, lr, r5, r0
 8013220:	f10c 0501 	add.w	r5, ip, #1
 8013224:	b2bf      	uxth	r7, r7
 8013226:	b280      	uxth	r0, r0
 8013228:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801322c:	f100 0a01 	add.w	sl, r0, #1
 8013230:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013234:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8013238:	9802      	ldr	r0, [sp, #8]
 801323a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801323e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013242:	f107 0a01 	add.w	sl, r7, #1
 8013246:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801324a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801324e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013252:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013256:	f824 c000 	strh.w	ip, [r4, r0]
 801325a:	e7af      	b.n	80131bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801325c:	f04f 0e00 	mov.w	lr, #0
 8013260:	eba3 000e 	sub.w	r0, r3, lr
 8013264:	2800      	cmp	r0, #0
 8013266:	f77f af43 	ble.w	80130f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801326a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801326e:	140d      	asrs	r5, r1, #16
 8013270:	1410      	asrs	r0, r2, #16
 8013272:	fb06 5000 	mla	r0, r6, r0, r5
 8013276:	9d01      	ldr	r5, [sp, #4]
 8013278:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801327c:	0e2e      	lsrs	r6, r5, #24
 801327e:	2eff      	cmp	r6, #255	@ 0xff
 8013280:	d112      	bne.n	80132a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8013282:	482c      	ldr	r0, [pc, #176]	@ (8013334 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8013284:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8013288:	0968      	lsrs	r0, r5, #5
 801328a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801328e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013292:	4330      	orrs	r0, r6
 8013294:	4328      	orrs	r0, r5
 8013296:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801329a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801329c:	f10e 0e01 	add.w	lr, lr, #1
 80132a0:	4401      	add	r1, r0
 80132a2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80132a4:	4402      	add	r2, r0
 80132a6:	e7db      	b.n	8013260 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80132a8:	b2f0      	uxtb	r0, r6
 80132aa:	2e00      	cmp	r6, #0
 80132ac:	d0f5      	beq.n	801329a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80132ae:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80132b2:	fa1f f980 	uxth.w	r9, r0
 80132b6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80132ba:	43c0      	mvns	r0, r0
 80132bc:	ea4f 272c 	mov.w	r7, ip, asr #8
 80132c0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80132c4:	fb16 f609 	smulbb	r6, r6, r9
 80132c8:	b2c0      	uxtb	r0, r0
 80132ca:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80132ce:	b2ed      	uxtb	r5, r5
 80132d0:	fb1a fa09 	smulbb	sl, sl, r9
 80132d4:	fb07 6700 	mla	r7, r7, r0, r6
 80132d8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80132dc:	fb15 f509 	smulbb	r5, r5, r9
 80132e0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80132e4:	b2bf      	uxth	r7, r7
 80132e6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80132ea:	fa5f fc8c 	uxtb.w	ip, ip
 80132ee:	fb06 a600 	mla	r6, r6, r0, sl
 80132f2:	fb0c 5500 	mla	r5, ip, r0, r5
 80132f6:	1c78      	adds	r0, r7, #1
 80132f8:	b2b6      	uxth	r6, r6
 80132fa:	b2ad      	uxth	r5, r5
 80132fc:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8013300:	f105 0a01 	add.w	sl, r5, #1
 8013304:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013308:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801330c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013310:	ea4a 0707 	orr.w	r7, sl, r7
 8013314:	f106 0a01 	add.w	sl, r6, #1
 8013318:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801331c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013320:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013324:	ea47 070a 	orr.w	r7, r7, sl
 8013328:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801332c:	e7b5      	b.n	801329a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801332e:	b005      	add	sp, #20
 8013330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013334:	fffff800 	.word	0xfffff800

08013338 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013338:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801333c:	b087      	sub	sp, #28
 801333e:	468b      	mov	fp, r1
 8013340:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013344:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8013346:	9203      	str	r2, [sp, #12]
 8013348:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801334c:	6841      	ldr	r1, [r0, #4]
 801334e:	9204      	str	r2, [sp, #16]
 8013350:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8013354:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013358:	fb01 2404 	mla	r4, r1, r4, r2
 801335c:	6802      	ldr	r2, [r0, #0]
 801335e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013362:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8013366:	3201      	adds	r2, #1
 8013368:	f022 0201 	bic.w	r2, r2, #1
 801336c:	9200      	str	r2, [sp, #0]
 801336e:	f8d9 2000 	ldr.w	r2, [r9]
 8013372:	9201      	str	r2, [sp, #4]
 8013374:	f1bb 0f00 	cmp.w	fp, #0
 8013378:	dc03      	bgt.n	8013382 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801337a:	9a03      	ldr	r2, [sp, #12]
 801337c:	2a00      	cmp	r2, #0
 801337e:	f340 816a 	ble.w	8013656 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8013382:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013384:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8013388:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801338c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801338e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8013392:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013396:	2b00      	cmp	r3, #0
 8013398:	dd0e      	ble.n	80133b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801339a:	1402      	asrs	r2, r0, #16
 801339c:	d405      	bmi.n	80133aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801339e:	42ba      	cmp	r2, r7
 80133a0:	da03      	bge.n	80133aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80133a2:	140a      	asrs	r2, r1, #16
 80133a4:	d401      	bmi.n	80133aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80133a6:	42b2      	cmp	r2, r6
 80133a8:	db07      	blt.n	80133ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80133aa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80133ac:	3b01      	subs	r3, #1
 80133ae:	3402      	adds	r4, #2
 80133b0:	4410      	add	r0, r2
 80133b2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80133b4:	4411      	add	r1, r2
 80133b6:	e7ee      	b.n	8013396 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80133b8:	d017      	beq.n	80133ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80133ba:	1e5a      	subs	r2, r3, #1
 80133bc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80133be:	fb05 0502 	mla	r5, r5, r2, r0
 80133c2:	142d      	asrs	r5, r5, #16
 80133c4:	d409      	bmi.n	80133da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80133c6:	42bd      	cmp	r5, r7
 80133c8:	da07      	bge.n	80133da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80133ca:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80133cc:	fb05 1202 	mla	r2, r5, r2, r1
 80133d0:	1412      	asrs	r2, r2, #16
 80133d2:	d402      	bmi.n	80133da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80133d4:	42b2      	cmp	r2, r6
 80133d6:	f2c0 80c8 	blt.w	801356a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80133da:	2700      	movs	r7, #0
 80133dc:	19da      	adds	r2, r3, r7
 80133de:	2a00      	cmp	r2, #0
 80133e0:	dc3e      	bgt.n	8013460 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80133e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80133e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80133ea:	f1bb 0f00 	cmp.w	fp, #0
 80133ee:	f340 8132 	ble.w	8013656 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80133f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80133f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80133f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80133fc:	f1bb 0b01 	subs.w	fp, fp, #1
 8013400:	eeb0 6a62 	vmov.f32	s12, s5
 8013404:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013408:	ee31 1a05 	vadd.f32	s2, s2, s10
 801340c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013410:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013414:	eeb0 6a43 	vmov.f32	s12, s6
 8013418:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801341c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013420:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013424:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013428:	ee77 2a62 	vsub.f32	s5, s14, s5
 801342c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013430:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013434:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013438:	ee12 2a90 	vmov	r2, s5
 801343c:	eef0 2a47 	vmov.f32	s5, s14
 8013440:	fb92 f3f3 	sdiv	r3, r2, r3
 8013444:	ee13 2a10 	vmov	r2, s6
 8013448:	9313      	str	r3, [sp, #76]	@ 0x4c
 801344a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801344c:	eeb0 3a67 	vmov.f32	s6, s15
 8013450:	fb92 f3f3 	sdiv	r3, r2, r3
 8013454:	9a03      	ldr	r2, [sp, #12]
 8013456:	9314      	str	r3, [sp, #80]	@ 0x50
 8013458:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801345a:	bf08      	it	eq
 801345c:	4613      	moveq	r3, r2
 801345e:	e789      	b.n	8013374 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013460:	1405      	asrs	r5, r0, #16
 8013462:	d436      	bmi.n	80134d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8013464:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8013468:	42aa      	cmp	r2, r5
 801346a:	dd32      	ble.n	80134d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801346c:	140e      	asrs	r6, r1, #16
 801346e:	d430      	bmi.n	80134d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8013470:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8013474:	42b2      	cmp	r2, r6
 8013476:	dd2c      	ble.n	80134d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8013478:	9a00      	ldr	r2, [sp, #0]
 801347a:	fb06 5502 	mla	r5, r6, r2, r5
 801347e:	9e01      	ldr	r6, [sp, #4]
 8013480:	086a      	lsrs	r2, r5, #1
 8013482:	5cb2      	ldrb	r2, [r6, r2]
 8013484:	07ee      	lsls	r6, r5, #31
 8013486:	bf54      	ite	pl
 8013488:	f002 020f 	andpl.w	r2, r2, #15
 801348c:	1112      	asrmi	r2, r2, #4
 801348e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013492:	b2d2      	uxtb	r2, r2
 8013494:	b1ea      	cbz	r2, 80134d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8013496:	9d04      	ldr	r5, [sp, #16]
 8013498:	436a      	muls	r2, r5
 801349a:	1c55      	adds	r5, r2, #1
 801349c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80134a0:	4d6e      	ldr	r5, [pc, #440]	@ (801365c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80134a2:	1212      	asrs	r2, r2, #8
 80134a4:	682d      	ldr	r5, [r5, #0]
 80134a6:	2aff      	cmp	r2, #255	@ 0xff
 80134a8:	ea4f 2615 	mov.w	r6, r5, lsr #8
 80134ac:	9605      	str	r6, [sp, #20]
 80134ae:	d116      	bne.n	80134de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80134b0:	f06f 0201 	mvn.w	r2, #1
 80134b4:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80134b8:	fb02 fc07 	mul.w	ip, r2, r7
 80134bc:	096a      	lsrs	r2, r5, #5
 80134be:	f026 0607 	bic.w	r6, r6, #7
 80134c2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80134c6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80134ca:	4316      	orrs	r6, r2
 80134cc:	432e      	orrs	r6, r5
 80134ce:	f824 600c 	strh.w	r6, [r4, ip]
 80134d2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80134d4:	3f01      	subs	r7, #1
 80134d6:	4410      	add	r0, r2
 80134d8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80134da:	4411      	add	r1, r2
 80134dc:	e77e      	b.n	80133dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80134de:	f06f 0601 	mvn.w	r6, #1
 80134e2:	fa1f fa82 	uxth.w	sl, r2
 80134e6:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80134ea:	43d2      	mvns	r2, r2
 80134ec:	437e      	muls	r6, r7
 80134ee:	b2ed      	uxtb	r5, r5
 80134f0:	fb1c fc0a 	smulbb	ip, ip, sl
 80134f4:	b2d2      	uxtb	r2, r2
 80134f6:	f834 8006 	ldrh.w	r8, [r4, r6]
 80134fa:	fb15 f50a 	smulbb	r5, r5, sl
 80134fe:	9602      	str	r6, [sp, #8]
 8013500:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8013504:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8013508:	fb16 f60a 	smulbb	r6, r6, sl
 801350c:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8013510:	fb0e ce02 	mla	lr, lr, r2, ip
 8013514:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8013518:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801351c:	fa1f fe8e 	uxth.w	lr, lr
 8013520:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8013524:	fa5f f888 	uxtb.w	r8, r8
 8013528:	fb0c 6c02 	mla	ip, ip, r2, r6
 801352c:	fb08 5502 	mla	r5, r8, r2, r5
 8013530:	f10e 0201 	add.w	r2, lr, #1
 8013534:	fa1f fc8c 	uxth.w	ip, ip
 8013538:	b2ad      	uxth	r5, r5
 801353a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801353e:	9a02      	ldr	r2, [sp, #8]
 8013540:	1c6e      	adds	r6, r5, #1
 8013542:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8013546:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801354a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801354e:	ea46 0e0e 	orr.w	lr, r6, lr
 8013552:	f10c 0601 	add.w	r6, ip, #1
 8013556:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801355a:	0976      	lsrs	r6, r6, #5
 801355c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013560:	ea4e 0e06 	orr.w	lr, lr, r6
 8013564:	f824 e002 	strh.w	lr, [r4, r2]
 8013568:	e7b3      	b.n	80134d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801356a:	f04f 0800 	mov.w	r8, #0
 801356e:	eba3 0208 	sub.w	r2, r3, r8
 8013572:	2a00      	cmp	r2, #0
 8013574:	f77f af35 	ble.w	80133e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013578:	1402      	asrs	r2, r0, #16
 801357a:	9e00      	ldr	r6, [sp, #0]
 801357c:	140d      	asrs	r5, r1, #16
 801357e:	fb06 2505 	mla	r5, r6, r5, r2
 8013582:	9e01      	ldr	r6, [sp, #4]
 8013584:	086a      	lsrs	r2, r5, #1
 8013586:	07ed      	lsls	r5, r5, #31
 8013588:	5cb2      	ldrb	r2, [r6, r2]
 801358a:	bf54      	ite	pl
 801358c:	f002 020f 	andpl.w	r2, r2, #15
 8013590:	1112      	asrmi	r2, r2, #4
 8013592:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013596:	b2d2      	uxtb	r2, r2
 8013598:	b1c2      	cbz	r2, 80135cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801359a:	9d04      	ldr	r5, [sp, #16]
 801359c:	436a      	muls	r2, r5
 801359e:	1c55      	adds	r5, r2, #1
 80135a0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80135a4:	4d2d      	ldr	r5, [pc, #180]	@ (801365c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80135a6:	1212      	asrs	r2, r2, #8
 80135a8:	682e      	ldr	r6, [r5, #0]
 80135aa:	2aff      	cmp	r2, #255	@ 0xff
 80135ac:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80135b0:	d113      	bne.n	80135da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80135b2:	0972      	lsrs	r2, r6, #5
 80135b4:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80135b8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80135bc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80135c0:	f025 0507 	bic.w	r5, r5, #7
 80135c4:	4315      	orrs	r5, r2
 80135c6:	4335      	orrs	r5, r6
 80135c8:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80135cc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80135ce:	f108 0801 	add.w	r8, r8, #1
 80135d2:	4410      	add	r0, r2
 80135d4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80135d6:	4411      	add	r1, r2
 80135d8:	e7c9      	b.n	801356e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80135da:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80135de:	fa1f fa82 	uxth.w	sl, r2
 80135e2:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80135e6:	43d2      	mvns	r2, r2
 80135e8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80135ec:	fb17 f70a 	smulbb	r7, r7, sl
 80135f0:	b2d2      	uxtb	r2, r2
 80135f2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80135f6:	b2f6      	uxtb	r6, r6
 80135f8:	b2ed      	uxtb	r5, r5
 80135fa:	fb0c 7c02 	mla	ip, ip, r2, r7
 80135fe:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8013602:	fb16 f60a 	smulbb	r6, r6, sl
 8013606:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801360a:	fa1f fc8c 	uxth.w	ip, ip
 801360e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013612:	fb15 f50a 	smulbb	r5, r5, sl
 8013616:	fa5f fe8e 	uxtb.w	lr, lr
 801361a:	fb0e 6602 	mla	r6, lr, r2, r6
 801361e:	fb07 5702 	mla	r7, r7, r2, r5
 8013622:	f10c 0201 	add.w	r2, ip, #1
 8013626:	b2b6      	uxth	r6, r6
 8013628:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801362c:	1c75      	adds	r5, r6, #1
 801362e:	b2bf      	uxth	r7, r7
 8013630:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013634:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8013638:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801363c:	ea45 0c0c 	orr.w	ip, r5, ip
 8013640:	1c7d      	adds	r5, r7, #1
 8013642:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8013646:	096d      	lsrs	r5, r5, #5
 8013648:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801364c:	ea4c 0c05 	orr.w	ip, ip, r5
 8013650:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8013654:	e7ba      	b.n	80135cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013656:	b007      	add	sp, #28
 8013658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801365c:	200150c8 	.word	0x200150c8

08013660 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013664:	b087      	sub	sp, #28
 8013666:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801366a:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 8013974 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801366e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8013670:	9101      	str	r1, [sp, #4]
 8013672:	9205      	str	r2, [sp, #20]
 8013674:	6841      	ldr	r1, [r0, #4]
 8013676:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 801367a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801367e:	fb01 2404 	mla	r4, r1, r4, r2
 8013682:	6802      	ldr	r2, [r0, #0]
 8013684:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013688:	f8db 2008 	ldr.w	r2, [fp, #8]
 801368c:	3201      	adds	r2, #1
 801368e:	f022 0201 	bic.w	r2, r2, #1
 8013692:	9202      	str	r2, [sp, #8]
 8013694:	f8db 2000 	ldr.w	r2, [fp]
 8013698:	9203      	str	r2, [sp, #12]
 801369a:	9a01      	ldr	r2, [sp, #4]
 801369c:	2a00      	cmp	r2, #0
 801369e:	dc03      	bgt.n	80136a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80136a0:	9a05      	ldr	r2, [sp, #20]
 80136a2:	2a00      	cmp	r2, #0
 80136a4:	f340 8162 	ble.w	801396c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80136a8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80136aa:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80136ae:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80136b2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80136b4:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80136b8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80136bc:	2b00      	cmp	r3, #0
 80136be:	dd0e      	ble.n	80136de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80136c0:	1402      	asrs	r2, r0, #16
 80136c2:	d405      	bmi.n	80136d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80136c4:	42ba      	cmp	r2, r7
 80136c6:	da03      	bge.n	80136d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80136c8:	140a      	asrs	r2, r1, #16
 80136ca:	d401      	bmi.n	80136d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80136cc:	42b2      	cmp	r2, r6
 80136ce:	db07      	blt.n	80136e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80136d0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80136d2:	3b01      	subs	r3, #1
 80136d4:	3402      	adds	r4, #2
 80136d6:	4410      	add	r0, r2
 80136d8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80136da:	4411      	add	r1, r2
 80136dc:	e7ee      	b.n	80136bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80136de:	d017      	beq.n	8013710 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80136e0:	1e5a      	subs	r2, r3, #1
 80136e2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80136e4:	fb05 0502 	mla	r5, r5, r2, r0
 80136e8:	142d      	asrs	r5, r5, #16
 80136ea:	d409      	bmi.n	8013700 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80136ec:	42bd      	cmp	r5, r7
 80136ee:	da07      	bge.n	8013700 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80136f0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80136f2:	fb05 1202 	mla	r2, r5, r2, r1
 80136f6:	1412      	asrs	r2, r2, #16
 80136f8:	d402      	bmi.n	8013700 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80136fa:	42b2      	cmp	r2, r6
 80136fc:	f2c0 80c3 	blt.w	8013886 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8013700:	2500      	movs	r5, #0
 8013702:	195a      	adds	r2, r3, r5
 8013704:	2a00      	cmp	r2, #0
 8013706:	dc3f      	bgt.n	8013788 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013708:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801370c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013710:	9b01      	ldr	r3, [sp, #4]
 8013712:	2b00      	cmp	r3, #0
 8013714:	f340 812a 	ble.w	801396c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8013718:	ee30 0a04 	vadd.f32	s0, s0, s8
 801371c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801371e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013722:	eeb0 6a62 	vmov.f32	s12, s5
 8013726:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801372a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801372e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013732:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013736:	eeb0 6a43 	vmov.f32	s12, s6
 801373a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801373e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013742:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013746:	ee61 7a27 	vmul.f32	s15, s2, s15
 801374a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801374e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013752:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013756:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801375a:	ee12 2a90 	vmov	r2, s5
 801375e:	eef0 2a47 	vmov.f32	s5, s14
 8013762:	fb92 f3f3 	sdiv	r3, r2, r3
 8013766:	ee13 2a10 	vmov	r2, s6
 801376a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801376c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801376e:	eeb0 3a67 	vmov.f32	s6, s15
 8013772:	fb92 f3f3 	sdiv	r3, r2, r3
 8013776:	9314      	str	r3, [sp, #80]	@ 0x50
 8013778:	9b01      	ldr	r3, [sp, #4]
 801377a:	9a05      	ldr	r2, [sp, #20]
 801377c:	3b01      	subs	r3, #1
 801377e:	9301      	str	r3, [sp, #4]
 8013780:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013782:	bf08      	it	eq
 8013784:	4613      	moveq	r3, r2
 8013786:	e788      	b.n	801369a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013788:	1406      	asrs	r6, r0, #16
 801378a:	d42c      	bmi.n	80137e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801378c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8013790:	42b2      	cmp	r2, r6
 8013792:	dd28      	ble.n	80137e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013794:	140f      	asrs	r7, r1, #16
 8013796:	d426      	bmi.n	80137e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013798:	f8db 200c 	ldr.w	r2, [fp, #12]
 801379c:	42ba      	cmp	r2, r7
 801379e:	dd22      	ble.n	80137e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80137a0:	9a02      	ldr	r2, [sp, #8]
 80137a2:	fb07 6602 	mla	r6, r7, r2, r6
 80137a6:	9f03      	ldr	r7, [sp, #12]
 80137a8:	0872      	lsrs	r2, r6, #1
 80137aa:	07f6      	lsls	r6, r6, #31
 80137ac:	5cba      	ldrb	r2, [r7, r2]
 80137ae:	bf54      	ite	pl
 80137b0:	f002 020f 	andpl.w	r2, r2, #15
 80137b4:	1112      	asrmi	r2, r2, #4
 80137b6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80137ba:	b2d2      	uxtb	r2, r2
 80137bc:	2aff      	cmp	r2, #255	@ 0xff
 80137be:	d118      	bne.n	80137f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80137c0:	f06f 0601 	mvn.w	r6, #1
 80137c4:	f8d8 2000 	ldr.w	r2, [r8]
 80137c8:	fb06 f705 	mul.w	r7, r6, r5
 80137cc:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 80137d0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80137d4:	0956      	lsrs	r6, r2, #5
 80137d6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80137da:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80137de:	ea4c 0606 	orr.w	r6, ip, r6
 80137e2:	4316      	orrs	r6, r2
 80137e4:	53e6      	strh	r6, [r4, r7]
 80137e6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80137e8:	3d01      	subs	r5, #1
 80137ea:	4410      	add	r0, r2
 80137ec:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80137ee:	4411      	add	r1, r2
 80137f0:	e787      	b.n	8013702 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80137f2:	2a00      	cmp	r2, #0
 80137f4:	d0f7      	beq.n	80137e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80137f6:	f06f 0601 	mvn.w	r6, #1
 80137fa:	f8d8 c000 	ldr.w	ip, [r8]
 80137fe:	fa1f f982 	uxth.w	r9, r2
 8013802:	43d2      	mvns	r2, r2
 8013804:	436e      	muls	r6, r5
 8013806:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801380a:	b2d2      	uxtb	r2, r2
 801380c:	f834 e006 	ldrh.w	lr, [r4, r6]
 8013810:	fb1a fa09 	smulbb	sl, sl, r9
 8013814:	9604      	str	r6, [sp, #16]
 8013816:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801381a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801381e:	fb16 f609 	smulbb	r6, r6, r9
 8013822:	fa5f fc8c 	uxtb.w	ip, ip
 8013826:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801382a:	fb1c fc09 	smulbb	ip, ip, r9
 801382e:	fb07 6702 	mla	r7, r7, r2, r6
 8013832:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013836:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801383a:	b2bf      	uxth	r7, r7
 801383c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013840:	fa5f fe8e 	uxtb.w	lr, lr
 8013844:	fb06 a602 	mla	r6, r6, r2, sl
 8013848:	fb0e cc02 	mla	ip, lr, r2, ip
 801384c:	1c7a      	adds	r2, r7, #1
 801384e:	b2b6      	uxth	r6, r6
 8013850:	fa1f fc8c 	uxth.w	ip, ip
 8013854:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013858:	9a04      	ldr	r2, [sp, #16]
 801385a:	f10c 0a01 	add.w	sl, ip, #1
 801385e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013862:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8013866:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801386a:	ea4a 0707 	orr.w	r7, sl, r7
 801386e:	f106 0a01 	add.w	sl, r6, #1
 8013872:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013876:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801387a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801387e:	ea47 070a 	orr.w	r7, r7, sl
 8013882:	52a7      	strh	r7, [r4, r2]
 8013884:	e7af      	b.n	80137e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013886:	f04f 0e00 	mov.w	lr, #0
 801388a:	eba3 020e 	sub.w	r2, r3, lr
 801388e:	2a00      	cmp	r2, #0
 8013890:	f77f af3a 	ble.w	8013708 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013894:	1402      	asrs	r2, r0, #16
 8013896:	9e02      	ldr	r6, [sp, #8]
 8013898:	140d      	asrs	r5, r1, #16
 801389a:	fb06 2505 	mla	r5, r6, r5, r2
 801389e:	9e03      	ldr	r6, [sp, #12]
 80138a0:	086a      	lsrs	r2, r5, #1
 80138a2:	07ed      	lsls	r5, r5, #31
 80138a4:	5cb2      	ldrb	r2, [r6, r2]
 80138a6:	bf54      	ite	pl
 80138a8:	f002 020f 	andpl.w	r2, r2, #15
 80138ac:	1112      	asrmi	r2, r2, #4
 80138ae:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80138b2:	b2d2      	uxtb	r2, r2
 80138b4:	2aff      	cmp	r2, #255	@ 0xff
 80138b6:	d115      	bne.n	80138e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80138b8:	f8d8 5000 	ldr.w	r5, [r8]
 80138bc:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 80138c0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80138c4:	096a      	lsrs	r2, r5, #5
 80138c6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80138ca:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80138ce:	4332      	orrs	r2, r6
 80138d0:	432a      	orrs	r2, r5
 80138d2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80138d6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80138d8:	f10e 0e01 	add.w	lr, lr, #1
 80138dc:	4410      	add	r0, r2
 80138de:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80138e0:	4411      	add	r1, r2
 80138e2:	e7d2      	b.n	801388a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80138e4:	2a00      	cmp	r2, #0
 80138e6:	d0f6      	beq.n	80138d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80138e8:	f8d8 7000 	ldr.w	r7, [r8]
 80138ec:	fa1f f982 	uxth.w	r9, r2
 80138f0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80138f4:	43d2      	mvns	r2, r2
 80138f6:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80138fa:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80138fe:	ea4f 262c 	mov.w	r6, ip, asr #8
 8013902:	fb15 f509 	smulbb	r5, r5, r9
 8013906:	b2d2      	uxtb	r2, r2
 8013908:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801390c:	b2ff      	uxtb	r7, r7
 801390e:	fb1a fa09 	smulbb	sl, sl, r9
 8013912:	fb06 5602 	mla	r6, r6, r2, r5
 8013916:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801391a:	fb17 f709 	smulbb	r7, r7, r9
 801391e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013922:	b2b6      	uxth	r6, r6
 8013924:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8013928:	fa5f fc8c 	uxtb.w	ip, ip
 801392c:	fb05 a502 	mla	r5, r5, r2, sl
 8013930:	fb0c 7702 	mla	r7, ip, r2, r7
 8013934:	1c72      	adds	r2, r6, #1
 8013936:	b2ad      	uxth	r5, r5
 8013938:	b2bf      	uxth	r7, r7
 801393a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801393e:	f107 0a01 	add.w	sl, r7, #1
 8013942:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8013946:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801394a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801394e:	ea4a 0606 	orr.w	r6, sl, r6
 8013952:	f105 0a01 	add.w	sl, r5, #1
 8013956:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801395a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801395e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013962:	ea46 060a 	orr.w	r6, r6, sl
 8013966:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801396a:	e7b4      	b.n	80138d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801396c:	b007      	add	sp, #28
 801396e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013972:	bf00      	nop
 8013974:	200150c8 	.word	0x200150c8

08013978 <_ZN8touchgfx8LCD16bppD1Ev>:
 8013978:	4770      	bx	lr

0801397a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801397a:	4770      	bx	lr

0801397c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801397c:	4770      	bx	lr

0801397e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801397e:	4770      	bx	lr

08013980 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8013980:	4770      	bx	lr

08013982 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8013982:	4770      	bx	lr

08013984 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8013984:	4770      	bx	lr

08013986 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8013986:	4770      	bx	lr

08013988 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8013988:	4770      	bx	lr

0801398a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801398a:	4770      	bx	lr

0801398c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801398c:	4770      	bx	lr

0801398e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801398e:	4770      	bx	lr

08013990 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013990:	4770      	bx	lr

08013992 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8013992:	4770      	bx	lr

08013994 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8013994:	4770      	bx	lr

08013996 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013996:	4770      	bx	lr

08013998 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8013998:	4770      	bx	lr

0801399a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801399a:	4770      	bx	lr

0801399c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801399c:	4770      	bx	lr

0801399e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801399e:	4770      	bx	lr

080139a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80139a0:	4770      	bx	lr

080139a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80139a2:	4770      	bx	lr

080139a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80139a4:	4770      	bx	lr

080139a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80139a6:	4770      	bx	lr

080139a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80139a8:	4770      	bx	lr

080139aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80139aa:	4770      	bx	lr

080139ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80139ac:	4770      	bx	lr

080139ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80139ae:	4770      	bx	lr

080139b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80139b0:	4770      	bx	lr

080139b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80139b2:	4770      	bx	lr

080139b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80139b4:	4770      	bx	lr

080139b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80139b6:	4770      	bx	lr

080139b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80139b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80139bc:	b088      	sub	sp, #32
 80139be:	4606      	mov	r6, r0
 80139c0:	4688      	mov	r8, r1
 80139c2:	4691      	mov	r9, r2
 80139c4:	ac08      	add	r4, sp, #32
 80139c6:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80139ca:	4620      	mov	r0, r4
 80139cc:	f7fd fc62 	bl	8011294 <_ZNK8touchgfx6Bitmap7getDataEv>
 80139d0:	6833      	ldr	r3, [r6, #0]
 80139d2:	4605      	mov	r5, r0
 80139d4:	4620      	mov	r0, r4
 80139d6:	699f      	ldr	r7, [r3, #24]
 80139d8:	f7fd fb70 	bl	80110bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80139dc:	4682      	mov	sl, r0
 80139de:	4620      	mov	r0, r4
 80139e0:	f7fd fba0 	bl	8011124 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80139e4:	9500      	str	r5, [sp, #0]
 80139e6:	464b      	mov	r3, r9
 80139e8:	4642      	mov	r2, r8
 80139ea:	4631      	mov	r1, r6
 80139ec:	e9cd a001 	strd	sl, r0, [sp, #4]
 80139f0:	a806      	add	r0, sp, #24
 80139f2:	47b8      	blx	r7
 80139f4:	4628      	mov	r0, r5
 80139f6:	b008      	add	sp, #32
 80139f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080139fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80139fc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8013a00:	2300      	movs	r3, #0
 8013a02:	9300      	str	r3, [sp, #0]
 8013a04:	4b3d      	ldr	r3, [pc, #244]	@ (8013afc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8013a06:	781b      	ldrb	r3, [r3, #0]
 8013a08:	2b00      	cmp	r3, #0
 8013a0a:	d137      	bne.n	8013a7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8013a0c:	4a3c      	ldr	r2, [pc, #240]	@ (8013b00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8013a0e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013a12:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013a16:	2b00      	cmp	r3, #0
 8013a18:	d132      	bne.n	8013a80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8013a1a:	4b3a      	ldr	r3, [pc, #232]	@ (8013b04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8013a1c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013a20:	ac02      	add	r4, sp, #8
 8013a22:	6808      	ldr	r0, [r1, #0]
 8013a24:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013a28:	ab02      	add	r3, sp, #8
 8013a2a:	6849      	ldr	r1, [r1, #4]
 8013a2c:	4d36      	ldr	r5, [pc, #216]	@ (8013b08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8013a2e:	c303      	stmia	r3!, {r0, r1}
 8013a30:	4669      	mov	r1, sp
 8013a32:	4620      	mov	r0, r4
 8013a34:	f7fa f974 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013a38:	4668      	mov	r0, sp
 8013a3a:	f7fa f949 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013a3e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8013a42:	f8bd 2000 	ldrh.w	r2, [sp]
 8013a46:	462f      	mov	r7, r5
 8013a48:	6828      	ldr	r0, [r5, #0]
 8013a4a:	4413      	add	r3, r2
 8013a4c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8013a50:	f8ad 3008 	strh.w	r3, [sp, #8]
 8013a54:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013a58:	4413      	add	r3, r2
 8013a5a:	f8ad 300a 	strh.w	r3, [sp, #10]
 8013a5e:	6803      	ldr	r3, [r0, #0]
 8013a60:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013a62:	4798      	blx	r3
 8013a64:	f010 0f01 	tst.w	r0, #1
 8013a68:	d00c      	beq.n	8013a84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8013a6a:	6828      	ldr	r0, [r5, #0]
 8013a6c:	6803      	ldr	r3, [r0, #0]
 8013a6e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8013a72:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8013a74:	4798      	blx	r3
 8013a76:	b004      	add	sp, #16
 8013a78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013a7c:	4a21      	ldr	r2, [pc, #132]	@ (8013b04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8013a7e:	e7c6      	b.n	8013a0e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8013a80:	4b1f      	ldr	r3, [pc, #124]	@ (8013b00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8013a82:	e7cb      	b.n	8013a1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8013a84:	6838      	ldr	r0, [r7, #0]
 8013a86:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8013a8a:	6803      	ldr	r3, [r0, #0]
 8013a8c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8013a90:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8013a94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013a96:	4798      	blx	r3
 8013a98:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8013a9c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013aa0:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8013aa4:	fb16 3602 	smlabb	r6, r6, r2, r3
 8013aa8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013aac:	6838      	ldr	r0, [r7, #0]
 8013aae:	6803      	ldr	r3, [r0, #0]
 8013ab0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013ab2:	4798      	blx	r3
 8013ab4:	4a12      	ldr	r2, [pc, #72]	@ (8013b00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8013ab6:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8013aba:	8813      	ldrh	r3, [r2, #0]
 8013abc:	4691      	mov	r9, r2
 8013abe:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8013ac2:	435d      	muls	r5, r3
 8013ac4:	fb03 1404 	mla	r4, r3, r4, r1
 8013ac8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013acc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013ad0:	6838      	ldr	r0, [r7, #0]
 8013ad2:	42ac      	cmp	r4, r5
 8013ad4:	6803      	ldr	r3, [r0, #0]
 8013ad6:	d20e      	bcs.n	8013af6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8013ad8:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 8013adc:	4632      	mov	r2, r6
 8013ade:	4643      	mov	r3, r8
 8013ae0:	4621      	mov	r1, r4
 8013ae2:	47d0      	blx	sl
 8013ae4:	f8b9 3000 	ldrh.w	r3, [r9]
 8013ae8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013aec:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8013af0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013af4:	e7ec      	b.n	8013ad0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8013af6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013af8:	4798      	blx	r3
 8013afa:	e7bc      	b.n	8013a76 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8013afc:	200150b8 	.word	0x200150b8
 8013b00:	200150ba 	.word	0x200150ba
 8013b04:	200150bc 	.word	0x200150bc
 8013b08:	200150c0 	.word	0x200150c0

08013b0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8013b0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b10:	b08b      	sub	sp, #44	@ 0x2c
 8013b12:	460f      	mov	r7, r1
 8013b14:	4616      	mov	r6, r2
 8013b16:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8013b1a:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8013b1e:	f1bb 0f00 	cmp.w	fp, #0
 8013b22:	d04a      	beq.n	8013bba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8013b24:	6810      	ldr	r0, [r2, #0]
 8013b26:	ad06      	add	r5, sp, #24
 8013b28:	6851      	ldr	r1, [r2, #4]
 8013b2a:	c503      	stmia	r5!, {r0, r1}
 8013b2c:	6818      	ldr	r0, [r3, #0]
 8013b2e:	ad08      	add	r5, sp, #32
 8013b30:	6859      	ldr	r1, [r3, #4]
 8013b32:	c503      	stmia	r5!, {r0, r1}
 8013b34:	a806      	add	r0, sp, #24
 8013b36:	f7fa f8cb 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013b3a:	4631      	mov	r1, r6
 8013b3c:	a808      	add	r0, sp, #32
 8013b3e:	f7fa f8ef 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013b42:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013b46:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8013b4a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8013b4e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8013b52:	fb16 2103 	smlabb	r1, r6, r3, r2
 8013b56:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8013b5a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8013b5e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8013b62:	4f5f      	ldr	r7, [pc, #380]	@ (8013ce0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8013b64:	440a      	add	r2, r1
 8013b66:	6838      	ldr	r0, [r7, #0]
 8013b68:	46b9      	mov	r9, r7
 8013b6a:	f8ad 2020 	strh.w	r2, [sp, #32]
 8013b6e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8013b72:	4413      	add	r3, r2
 8013b74:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8013b78:	6803      	ldr	r3, [r0, #0]
 8013b7a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013b7c:	4798      	blx	r3
 8013b7e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8013b82:	d11d      	bne.n	8013bc0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8013b84:	b9fc      	cbnz	r4, 8013bc6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8013b86:	f010 0f01 	tst.w	r0, #1
 8013b8a:	d01c      	beq.n	8013bc6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8013b8c:	f8d9 0000 	ldr.w	r0, [r9]
 8013b90:	2700      	movs	r7, #0
 8013b92:	b2ad      	uxth	r5, r5
 8013b94:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8013b98:	6801      	ldr	r1, [r0, #0]
 8013b9a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8013b9e:	f8cd b00c 	str.w	fp, [sp, #12]
 8013ba2:	9501      	str	r5, [sp, #4]
 8013ba4:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8013ba8:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8013bac:	9402      	str	r4, [sp, #8]
 8013bae:	fa1f f488 	uxth.w	r4, r8
 8013bb2:	9400      	str	r4, [sp, #0]
 8013bb4:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 8013bb6:	4631      	mov	r1, r6
 8013bb8:	47a0      	blx	r4
 8013bba:	b00b      	add	sp, #44	@ 0x2c
 8013bbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013bc0:	f010 0f04 	tst.w	r0, #4
 8013bc4:	e7e1      	b.n	8013b8a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8013bc6:	f8d9 0000 	ldr.w	r0, [r9]
 8013bca:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8013bce:	6803      	ldr	r3, [r0, #0]
 8013bd0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013bd2:	4798      	blx	r3
 8013bd4:	4b43      	ldr	r3, [pc, #268]	@ (8013ce4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8013bd6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8013bda:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8013bde:	881a      	ldrh	r2, [r3, #0]
 8013be0:	469a      	mov	sl, r3
 8013be2:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8013be6:	fb05 f502 	mul.w	r5, r5, r2
 8013bea:	fb02 1404 	mla	r4, r2, r4, r1
 8013bee:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013bf2:	d059      	beq.n	8013ca8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8013bf4:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8013bf8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013bfc:	fa1f f28b 	uxth.w	r2, fp
 8013c00:	469e      	mov	lr, r3
 8013c02:	fa1f f989 	uxth.w	r9, r9
 8013c06:	42ac      	cmp	r4, r5
 8013c08:	d264      	bcs.n	8013cd4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8013c0a:	eb04 0a07 	add.w	sl, r4, r7
 8013c0e:	4554      	cmp	r4, sl
 8013c10:	d23d      	bcs.n	8013c8e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8013c12:	8821      	ldrh	r1, [r4, #0]
 8013c14:	f836 3b02 	ldrh.w	r3, [r6], #2
 8013c18:	1208      	asrs	r0, r1, #8
 8013c1a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013c1e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8013c22:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8013c26:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013c2a:	00c9      	lsls	r1, r1, #3
 8013c2c:	fb10 f009 	smulbb	r0, r0, r9
 8013c30:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8013c34:	b2c9      	uxtb	r1, r1
 8013c36:	fb0c 0c02 	mla	ip, ip, r2, r0
 8013c3a:	10d8      	asrs	r0, r3, #3
 8013c3c:	fb1b fb09 	smulbb	fp, fp, r9
 8013c40:	00db      	lsls	r3, r3, #3
 8013c42:	fa1f fc8c 	uxth.w	ip, ip
 8013c46:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8013c4a:	fb11 f109 	smulbb	r1, r1, r9
 8013c4e:	b2db      	uxtb	r3, r3
 8013c50:	fb00 b002 	mla	r0, r0, r2, fp
 8013c54:	f10c 0b01 	add.w	fp, ip, #1
 8013c58:	fb03 1302 	mla	r3, r3, r2, r1
 8013c5c:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8013c60:	b29b      	uxth	r3, r3
 8013c62:	b280      	uxth	r0, r0
 8013c64:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8013c68:	f103 0c01 	add.w	ip, r3, #1
 8013c6c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013c70:	1c43      	adds	r3, r0, #1
 8013c72:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8013c76:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013c7a:	0940      	lsrs	r0, r0, #5
 8013c7c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8013c80:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013c84:	ea4c 0c00 	orr.w	ip, ip, r0
 8013c88:	f824 cb02 	strh.w	ip, [r4], #2
 8013c8c:	e7bf      	b.n	8013c0e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8013c8e:	f8be 3000 	ldrh.w	r3, [lr]
 8013c92:	eba3 0308 	sub.w	r3, r3, r8
 8013c96:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013c9a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013c9e:	eba3 0308 	sub.w	r3, r3, r8
 8013ca2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013ca6:	e7ae      	b.n	8013c06 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8013ca8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013cac:	f8d9 0000 	ldr.w	r0, [r9]
 8013cb0:	42ac      	cmp	r4, r5
 8013cb2:	6803      	ldr	r3, [r0, #0]
 8013cb4:	d20e      	bcs.n	8013cd4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8013cb6:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 8013cba:	4632      	mov	r2, r6
 8013cbc:	463b      	mov	r3, r7
 8013cbe:	4621      	mov	r1, r4
 8013cc0:	47c0      	blx	r8
 8013cc2:	f8ba 3000 	ldrh.w	r3, [sl]
 8013cc6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013cca:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013cce:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013cd2:	e7eb      	b.n	8013cac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8013cd4:	4b02      	ldr	r3, [pc, #8]	@ (8013ce0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8013cd6:	6818      	ldr	r0, [r3, #0]
 8013cd8:	6803      	ldr	r3, [r0, #0]
 8013cda:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013cdc:	4798      	blx	r3
 8013cde:	e76c      	b.n	8013bba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8013ce0:	200150c0 	.word	0x200150c0
 8013ce4:	200150ba 	.word	0x200150ba

08013ce8 <_ZN8touchgfx8LCD16bppD0Ev>:
 8013ce8:	b510      	push	{r4, lr}
 8013cea:	4604      	mov	r4, r0
 8013cec:	2188      	movs	r1, #136	@ 0x88
 8013cee:	f00a fe36 	bl	801e95e <_ZdlPvj>
 8013cf2:	4620      	mov	r0, r4
 8013cf4:	bd10      	pop	{r4, pc}

08013cf6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8013cf6:	b510      	push	{r4, lr}
 8013cf8:	4604      	mov	r4, r0
 8013cfa:	2104      	movs	r1, #4
 8013cfc:	f00a fe2f 	bl	801e95e <_ZdlPvj>
 8013d00:	4620      	mov	r0, r4
 8013d02:	bd10      	pop	{r4, pc}

08013d04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8013d04:	b510      	push	{r4, lr}
 8013d06:	4604      	mov	r4, r0
 8013d08:	2104      	movs	r1, #4
 8013d0a:	f00a fe28 	bl	801e95e <_ZdlPvj>
 8013d0e:	4620      	mov	r0, r4
 8013d10:	bd10      	pop	{r4, pc}

08013d12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8013d12:	b510      	push	{r4, lr}
 8013d14:	4604      	mov	r4, r0
 8013d16:	f640 0144 	movw	r1, #2116	@ 0x844
 8013d1a:	f00a fe20 	bl	801e95e <_ZdlPvj>
 8013d1e:	4620      	mov	r0, r4
 8013d20:	bd10      	pop	{r4, pc}

08013d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013d22:	b510      	push	{r4, lr}
 8013d24:	4604      	mov	r4, r0
 8013d26:	2104      	movs	r1, #4
 8013d28:	f00a fe19 	bl	801e95e <_ZdlPvj>
 8013d2c:	4620      	mov	r0, r4
 8013d2e:	bd10      	pop	{r4, pc}

08013d30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8013d30:	b510      	push	{r4, lr}
 8013d32:	4604      	mov	r4, r0
 8013d34:	2104      	movs	r1, #4
 8013d36:	f00a fe12 	bl	801e95e <_ZdlPvj>
 8013d3a:	4620      	mov	r0, r4
 8013d3c:	bd10      	pop	{r4, pc}

08013d3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013d3e:	b510      	push	{r4, lr}
 8013d40:	4604      	mov	r4, r0
 8013d42:	2104      	movs	r1, #4
 8013d44:	f00a fe0b 	bl	801e95e <_ZdlPvj>
 8013d48:	4620      	mov	r0, r4
 8013d4a:	bd10      	pop	{r4, pc}

08013d4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013d4c:	b510      	push	{r4, lr}
 8013d4e:	4604      	mov	r4, r0
 8013d50:	2104      	movs	r1, #4
 8013d52:	f00a fe04 	bl	801e95e <_ZdlPvj>
 8013d56:	4620      	mov	r0, r4
 8013d58:	bd10      	pop	{r4, pc}

08013d5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013d5a:	b510      	push	{r4, lr}
 8013d5c:	4604      	mov	r4, r0
 8013d5e:	2104      	movs	r1, #4
 8013d60:	f00a fdfd 	bl	801e95e <_ZdlPvj>
 8013d64:	4620      	mov	r0, r4
 8013d66:	bd10      	pop	{r4, pc}

08013d68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8013d68:	b510      	push	{r4, lr}
 8013d6a:	4604      	mov	r4, r0
 8013d6c:	2104      	movs	r1, #4
 8013d6e:	f00a fdf6 	bl	801e95e <_ZdlPvj>
 8013d72:	4620      	mov	r0, r4
 8013d74:	bd10      	pop	{r4, pc}

08013d76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013d76:	b510      	push	{r4, lr}
 8013d78:	4604      	mov	r4, r0
 8013d7a:	2104      	movs	r1, #4
 8013d7c:	f00a fdef 	bl	801e95e <_ZdlPvj>
 8013d80:	4620      	mov	r0, r4
 8013d82:	bd10      	pop	{r4, pc}

08013d84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8013d84:	b510      	push	{r4, lr}
 8013d86:	4604      	mov	r4, r0
 8013d88:	2104      	movs	r1, #4
 8013d8a:	f00a fde8 	bl	801e95e <_ZdlPvj>
 8013d8e:	4620      	mov	r0, r4
 8013d90:	bd10      	pop	{r4, pc}

08013d92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013d92:	b510      	push	{r4, lr}
 8013d94:	4604      	mov	r4, r0
 8013d96:	2104      	movs	r1, #4
 8013d98:	f00a fde1 	bl	801e95e <_ZdlPvj>
 8013d9c:	4620      	mov	r0, r4
 8013d9e:	bd10      	pop	{r4, pc}

08013da0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013da0:	b510      	push	{r4, lr}
 8013da2:	4604      	mov	r4, r0
 8013da4:	2104      	movs	r1, #4
 8013da6:	f00a fdda 	bl	801e95e <_ZdlPvj>
 8013daa:	4620      	mov	r0, r4
 8013dac:	bd10      	pop	{r4, pc}

08013dae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013dae:	b510      	push	{r4, lr}
 8013db0:	4604      	mov	r4, r0
 8013db2:	2104      	movs	r1, #4
 8013db4:	f00a fdd3 	bl	801e95e <_ZdlPvj>
 8013db8:	4620      	mov	r0, r4
 8013dba:	bd10      	pop	{r4, pc}

08013dbc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013dbc:	b510      	push	{r4, lr}
 8013dbe:	4604      	mov	r4, r0
 8013dc0:	2104      	movs	r1, #4
 8013dc2:	f00a fdcc 	bl	801e95e <_ZdlPvj>
 8013dc6:	4620      	mov	r0, r4
 8013dc8:	bd10      	pop	{r4, pc}

08013dca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013dca:	b510      	push	{r4, lr}
 8013dcc:	4604      	mov	r4, r0
 8013dce:	2104      	movs	r1, #4
 8013dd0:	f00a fdc5 	bl	801e95e <_ZdlPvj>
 8013dd4:	4620      	mov	r0, r4
 8013dd6:	bd10      	pop	{r4, pc}

08013dd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8013dd8:	b510      	push	{r4, lr}
 8013dda:	4604      	mov	r4, r0
 8013ddc:	2104      	movs	r1, #4
 8013dde:	f00a fdbe 	bl	801e95e <_ZdlPvj>
 8013de2:	4620      	mov	r0, r4
 8013de4:	bd10      	pop	{r4, pc}

08013de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013de6:	b510      	push	{r4, lr}
 8013de8:	4604      	mov	r4, r0
 8013dea:	2104      	movs	r1, #4
 8013dec:	f00a fdb7 	bl	801e95e <_ZdlPvj>
 8013df0:	4620      	mov	r0, r4
 8013df2:	bd10      	pop	{r4, pc}

08013df4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013df4:	b510      	push	{r4, lr}
 8013df6:	4604      	mov	r4, r0
 8013df8:	2104      	movs	r1, #4
 8013dfa:	f00a fdb0 	bl	801e95e <_ZdlPvj>
 8013dfe:	4620      	mov	r0, r4
 8013e00:	bd10      	pop	{r4, pc}

08013e02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013e02:	b510      	push	{r4, lr}
 8013e04:	4604      	mov	r4, r0
 8013e06:	2104      	movs	r1, #4
 8013e08:	f00a fda9 	bl	801e95e <_ZdlPvj>
 8013e0c:	4620      	mov	r0, r4
 8013e0e:	bd10      	pop	{r4, pc}

08013e10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013e10:	b510      	push	{r4, lr}
 8013e12:	4604      	mov	r4, r0
 8013e14:	2104      	movs	r1, #4
 8013e16:	f00a fda2 	bl	801e95e <_ZdlPvj>
 8013e1a:	4620      	mov	r0, r4
 8013e1c:	bd10      	pop	{r4, pc}

08013e1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013e1e:	b510      	push	{r4, lr}
 8013e20:	4604      	mov	r4, r0
 8013e22:	2104      	movs	r1, #4
 8013e24:	f00a fd9b 	bl	801e95e <_ZdlPvj>
 8013e28:	4620      	mov	r0, r4
 8013e2a:	bd10      	pop	{r4, pc}

08013e2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013e2c:	b510      	push	{r4, lr}
 8013e2e:	4604      	mov	r4, r0
 8013e30:	2104      	movs	r1, #4
 8013e32:	f00a fd94 	bl	801e95e <_ZdlPvj>
 8013e36:	4620      	mov	r0, r4
 8013e38:	bd10      	pop	{r4, pc}

08013e3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013e3a:	b510      	push	{r4, lr}
 8013e3c:	4604      	mov	r4, r0
 8013e3e:	2104      	movs	r1, #4
 8013e40:	f00a fd8d 	bl	801e95e <_ZdlPvj>
 8013e44:	4620      	mov	r0, r4
 8013e46:	bd10      	pop	{r4, pc}

08013e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013e48:	b510      	push	{r4, lr}
 8013e4a:	4604      	mov	r4, r0
 8013e4c:	2104      	movs	r1, #4
 8013e4e:	f00a fd86 	bl	801e95e <_ZdlPvj>
 8013e52:	4620      	mov	r0, r4
 8013e54:	bd10      	pop	{r4, pc}

08013e56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013e56:	b510      	push	{r4, lr}
 8013e58:	4604      	mov	r4, r0
 8013e5a:	2104      	movs	r1, #4
 8013e5c:	f00a fd7f 	bl	801e95e <_ZdlPvj>
 8013e60:	4620      	mov	r0, r4
 8013e62:	bd10      	pop	{r4, pc}

08013e64 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013e64:	b510      	push	{r4, lr}
 8013e66:	4604      	mov	r4, r0
 8013e68:	2104      	movs	r1, #4
 8013e6a:	f00a fd78 	bl	801e95e <_ZdlPvj>
 8013e6e:	4620      	mov	r0, r4
 8013e70:	bd10      	pop	{r4, pc}

08013e72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8013e72:	b510      	push	{r4, lr}
 8013e74:	4604      	mov	r4, r0
 8013e76:	2104      	movs	r1, #4
 8013e78:	f00a fd71 	bl	801e95e <_ZdlPvj>
 8013e7c:	4620      	mov	r0, r4
 8013e7e:	bd10      	pop	{r4, pc}

08013e80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8013e80:	b510      	push	{r4, lr}
 8013e82:	4604      	mov	r4, r0
 8013e84:	2104      	movs	r1, #4
 8013e86:	f00a fd6a 	bl	801e95e <_ZdlPvj>
 8013e8a:	4620      	mov	r0, r4
 8013e8c:	bd10      	pop	{r4, pc}

08013e8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8013e8e:	b510      	push	{r4, lr}
 8013e90:	4604      	mov	r4, r0
 8013e92:	2104      	movs	r1, #4
 8013e94:	f00a fd63 	bl	801e95e <_ZdlPvj>
 8013e98:	4620      	mov	r0, r4
 8013e9a:	bd10      	pop	{r4, pc}

08013e9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8013e9c:	b510      	push	{r4, lr}
 8013e9e:	4604      	mov	r4, r0
 8013ea0:	2104      	movs	r1, #4
 8013ea2:	f00a fd5c 	bl	801e95e <_ZdlPvj>
 8013ea6:	4620      	mov	r0, r4
 8013ea8:	bd10      	pop	{r4, pc}
	...

08013eac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8013eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013eb0:	b08f      	sub	sp, #60	@ 0x3c
 8013eb2:	461c      	mov	r4, r3
 8013eb4:	9205      	str	r2, [sp, #20]
 8013eb6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013eba:	9100      	str	r1, [sp, #0]
 8013ebc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8013ebe:	9201      	str	r2, [sp, #4]
 8013ec0:	2a00      	cmp	r2, #0
 8013ec2:	f000 8116 	beq.w	80140f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 8013ec6:	6820      	ldr	r0, [r4, #0]
 8013ec8:	aa0a      	add	r2, sp, #40	@ 0x28
 8013eca:	6861      	ldr	r1, [r4, #4]
 8013ecc:	c203      	stmia	r2!, {r0, r1}
 8013ece:	6818      	ldr	r0, [r3, #0]
 8013ed0:	aa0c      	add	r2, sp, #48	@ 0x30
 8013ed2:	6859      	ldr	r1, [r3, #4]
 8013ed4:	c203      	stmia	r2!, {r0, r1}
 8013ed6:	a80a      	add	r0, sp, #40	@ 0x28
 8013ed8:	f7f9 fefa 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013edc:	4621      	mov	r1, r4
 8013ede:	a80c      	add	r0, sp, #48	@ 0x30
 8013ee0:	f7f9 ff1e 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013ee4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8013ee8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8013eec:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8013ef0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8013ef4:	bfdb      	ittet	le
 8013ef6:	b2b3      	uxthle	r3, r6
 8013ef8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8013efc:	2301      	movgt	r3, #1
 8013efe:	fb92 f3f3 	sdivle	r3, r2, r3
 8013f02:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8013f06:	441d      	add	r5, r3
 8013f08:	fb92 f1f3 	sdiv	r1, r2, r3
 8013f0c:	fa1f fc81 	uxth.w	ip, r1
 8013f10:	3d01      	subs	r5, #1
 8013f12:	fb0c 2413 	mls	r4, ip, r3, r2
 8013f16:	4661      	mov	r1, ip
 8013f18:	fb14 f406 	smulbb	r4, r4, r6
 8013f1c:	4404      	add	r4, r0
 8013f1e:	fb95 f5f3 	sdiv	r5, r5, r3
 8013f22:	b2a4      	uxth	r4, r4
 8013f24:	b131      	cbz	r1, 8013f34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 8013f26:	9b05      	ldr	r3, [sp, #20]
 8013f28:	9900      	ldr	r1, [sp, #0]
 8013f2a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8013f2e:	ba1b      	rev	r3, r3
 8013f30:	4419      	add	r1, r3
 8013f32:	9100      	str	r1, [sp, #0]
 8013f34:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8013f38:	b2ad      	uxth	r5, r5
 8013f3a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8013f3e:	4418      	add	r0, r3
 8013f40:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8013f44:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8013f48:	00ad      	lsls	r5, r5, #2
 8013f4a:	441a      	add	r2, r3
 8013f4c:	4b6a      	ldr	r3, [pc, #424]	@ (80140f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8013f4e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8013f52:	6818      	ldr	r0, [r3, #0]
 8013f54:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8013f58:	6803      	ldr	r3, [r0, #0]
 8013f5a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013f5c:	4798      	blx	r3
 8013f5e:	4967      	ldr	r1, [pc, #412]	@ (80140fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8013f60:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8013f64:	2c00      	cmp	r4, #0
 8013f66:	880b      	ldrh	r3, [r1, #0]
 8013f68:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8013f6c:	bf0c      	ite	eq
 8013f6e:	46c6      	moveq	lr, r8
 8013f70:	f04f 0e00 	movne.w	lr, #0
 8013f74:	9109      	str	r1, [sp, #36]	@ 0x24
 8013f76:	fb03 c202 	mla	r2, r3, r2, ip
 8013f7a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8013f7e:	4373      	muls	r3, r6
 8013f80:	fa1f fe8e 	uxth.w	lr, lr
 8013f84:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013f88:	9103      	str	r1, [sp, #12]
 8013f8a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013f8e:	9306      	str	r3, [sp, #24]
 8013f90:	1d2b      	adds	r3, r5, #4
 8013f92:	9307      	str	r3, [sp, #28]
 8013f94:	9b01      	ldr	r3, [sp, #4]
 8013f96:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8013f9a:	2300      	movs	r3, #0
 8013f9c:	b292      	uxth	r2, r2
 8013f9e:	9302      	str	r3, [sp, #8]
 8013fa0:	9204      	str	r2, [sp, #16]
 8013fa2:	9a06      	ldr	r2, [sp, #24]
 8013fa4:	4282      	cmp	r2, r0
 8013fa6:	f240 809f 	bls.w	80140e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 8013faa:	b963      	cbnz	r3, 8013fc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8013fac:	9b00      	ldr	r3, [sp, #0]
 8013fae:	781a      	ldrb	r2, [r3, #0]
 8013fb0:	0993      	lsrs	r3, r2, #6
 8013fb2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8013fb6:	9202      	str	r2, [sp, #8]
 8013fb8:	1e5a      	subs	r2, r3, #1
 8013fba:	2a02      	cmp	r2, #2
 8013fbc:	d815      	bhi.n	8013fea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8013fbe:	9a00      	ldr	r2, [sp, #0]
 8013fc0:	b29b      	uxth	r3, r3
 8013fc2:	3201      	adds	r2, #1
 8013fc4:	9200      	str	r2, [sp, #0]
 8013fc6:	b1b4      	cbz	r4, 8013ff6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 8013fc8:	429c      	cmp	r4, r3
 8013fca:	bf91      	iteee	ls
 8013fcc:	1b1c      	subls	r4, r3, r4
 8013fce:	1ae4      	subhi	r4, r4, r3
 8013fd0:	4671      	movhi	r1, lr
 8013fd2:	f04f 0a00 	movhi.w	sl, #0
 8013fd6:	bf9b      	ittet	ls
 8013fd8:	fa1f fa84 	uxthls.w	sl, r4
 8013fdc:	2400      	movls	r4, #0
 8013fde:	b2a4      	uxthhi	r4, r4
 8013fe0:	fa1f f188 	uxthls.w	r1, r8
 8013fe4:	4653      	mov	r3, sl
 8013fe6:	468e      	mov	lr, r1
 8013fe8:	e7db      	b.n	8013fa2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 8013fea:	9a00      	ldr	r2, [sp, #0]
 8013fec:	9b00      	ldr	r3, [sp, #0]
 8013fee:	3202      	adds	r2, #2
 8013ff0:	785b      	ldrb	r3, [r3, #1]
 8013ff2:	9200      	str	r2, [sp, #0]
 8013ff4:	e7e7      	b.n	8013fc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8013ff6:	2202      	movs	r2, #2
 8013ff8:	9907      	ldr	r1, [sp, #28]
 8013ffa:	4573      	cmp	r3, lr
 8013ffc:	4615      	mov	r5, r2
 8013ffe:	9a02      	ldr	r2, [sp, #8]
 8014000:	bf24      	itt	cs
 8014002:	eba3 0a0e 	subcs.w	sl, r3, lr
 8014006:	46f1      	movcs	r9, lr
 8014008:	fb15 1202 	smlabb	r2, r5, r2, r1
 801400c:	9905      	ldr	r1, [sp, #20]
 801400e:	bf34      	ite	cc
 8014010:	4699      	movcc	r9, r3
 8014012:	fa1f fa8a 	uxthcs.w	sl, sl
 8014016:	f831 c002 	ldrh.w	ip, [r1, r2]
 801401a:	bf38      	it	cc
 801401c:	ebae 0103 	subcc.w	r1, lr, r3
 8014020:	9a01      	ldr	r2, [sp, #4]
 8014022:	bf2e      	itee	cs
 8014024:	4621      	movcs	r1, r4
 8014026:	b289      	uxthcc	r1, r1
 8014028:	46a2      	movcc	sl, r4
 801402a:	2aff      	cmp	r2, #255	@ 0xff
 801402c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014030:	d105      	bne.n	801403e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 8014032:	4481      	add	r9, r0
 8014034:	4581      	cmp	r9, r0
 8014036:	d045      	beq.n	80140c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8014038:	f820 cb02 	strh.w	ip, [r0], #2
 801403c:	e7fa      	b.n	8014034 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 801403e:	ea4f 222c 	mov.w	r2, ip, asr #8
 8014042:	9d03      	ldr	r5, [sp, #12]
 8014044:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8014048:	4481      	add	r9, r0
 801404a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801404e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8014052:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8014056:	fa5f fc8c 	uxtb.w	ip, ip
 801405a:	436a      	muls	r2, r5
 801405c:	fb0b fb05 	mul.w	fp, fp, r5
 8014060:	fb0c fc05 	mul.w	ip, ip, r5
 8014064:	9208      	str	r2, [sp, #32]
 8014066:	4581      	cmp	r9, r0
 8014068:	d02c      	beq.n	80140c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 801406a:	8802      	ldrh	r2, [r0, #0]
 801406c:	9d04      	ldr	r5, [sp, #16]
 801406e:	1216      	asrs	r6, r2, #8
 8014070:	9f04      	ldr	r7, [sp, #16]
 8014072:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014076:	fb16 f605 	smulbb	r6, r6, r5
 801407a:	9d08      	ldr	r5, [sp, #32]
 801407c:	442e      	add	r6, r5
 801407e:	10d5      	asrs	r5, r2, #3
 8014080:	00d2      	lsls	r2, r2, #3
 8014082:	b2b6      	uxth	r6, r6
 8014084:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8014088:	b2d2      	uxtb	r2, r2
 801408a:	fb15 f507 	smulbb	r5, r5, r7
 801408e:	fb12 f207 	smulbb	r2, r2, r7
 8014092:	1c77      	adds	r7, r6, #1
 8014094:	445d      	add	r5, fp
 8014096:	4462      	add	r2, ip
 8014098:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801409c:	b2ad      	uxth	r5, r5
 801409e:	b292      	uxth	r2, r2
 80140a0:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80140a4:	1c57      	adds	r7, r2, #1
 80140a6:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 80140aa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80140ae:	4316      	orrs	r6, r2
 80140b0:	1c6a      	adds	r2, r5, #1
 80140b2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80140b6:	096d      	lsrs	r5, r5, #5
 80140b8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80140bc:	432e      	orrs	r6, r5
 80140be:	f820 6b02 	strh.w	r6, [r0], #2
 80140c2:	e7d0      	b.n	8014066 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 80140c4:	4573      	cmp	r3, lr
 80140c6:	d38d      	bcc.n	8013fe4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 80140c8:	fa1f f188 	uxth.w	r1, r8
 80140cc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 80140d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80140d2:	1a64      	subs	r4, r4, r1
 80140d4:	881b      	ldrh	r3, [r3, #0]
 80140d6:	b2a4      	uxth	r4, r4
 80140d8:	eba3 0308 	sub.w	r3, r3, r8
 80140dc:	2c00      	cmp	r4, #0
 80140de:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80140e2:	bf18      	it	ne
 80140e4:	2100      	movne	r1, #0
 80140e6:	e77d      	b.n	8013fe4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 80140e8:	4b03      	ldr	r3, [pc, #12]	@ (80140f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80140ea:	6818      	ldr	r0, [r3, #0]
 80140ec:	6803      	ldr	r3, [r0, #0]
 80140ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80140f0:	4798      	blx	r3
 80140f2:	b00f      	add	sp, #60	@ 0x3c
 80140f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80140f8:	200150c0 	.word	0x200150c0
 80140fc:	200150ba 	.word	0x200150ba

08014100 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8014100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014104:	b09f      	sub	sp, #124	@ 0x7c
 8014106:	461d      	mov	r5, r3
 8014108:	4604      	mov	r4, r0
 801410a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801410c:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8014110:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8014114:	9209      	str	r2, [sp, #36]	@ 0x24
 8014116:	2a00      	cmp	r2, #0
 8014118:	f000 81ed 	beq.w	80144f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 801411c:	6828      	ldr	r0, [r5, #0]
 801411e:	aa1a      	add	r2, sp, #104	@ 0x68
 8014120:	6869      	ldr	r1, [r5, #4]
 8014122:	c203      	stmia	r2!, {r0, r1}
 8014124:	6818      	ldr	r0, [r3, #0]
 8014126:	aa1c      	add	r2, sp, #112	@ 0x70
 8014128:	6859      	ldr	r1, [r3, #4]
 801412a:	c203      	stmia	r2!, {r0, r1}
 801412c:	a81a      	add	r0, sp, #104	@ 0x68
 801412e:	f7f9 fdcf 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014132:	4629      	mov	r1, r5
 8014134:	a81c      	add	r0, sp, #112	@ 0x70
 8014136:	f7f9 fdf3 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801413a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801413e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8014142:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8014146:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801414a:	bfdb      	ittet	le
 801414c:	b29a      	uxthle	r2, r3
 801414e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8014152:	2201      	movgt	r2, #1
 8014154:	fb91 f2f2 	sdivle	r2, r1, r2
 8014158:	9202      	str	r2, [sp, #8]
 801415a:	9802      	ldr	r0, [sp, #8]
 801415c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8014160:	9902      	ldr	r1, [sp, #8]
 8014162:	fb92 f0f0 	sdiv	r0, r2, r0
 8014166:	b280      	uxth	r0, r0
 8014168:	4488      	add	r8, r1
 801416a:	9010      	str	r0, [sp, #64]	@ 0x40
 801416c:	f108 38ff 	add.w	r8, r8, #4294967295
 8014170:	9802      	ldr	r0, [sp, #8]
 8014172:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8014174:	fb05 2510 	mls	r5, r5, r0, r2
 8014178:	fb98 f8f1 	sdiv	r8, r8, r1
 801417c:	fb15 f503 	smulbb	r5, r5, r3
 8014180:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8014184:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8014188:	f108 0801 	add.w	r8, r8, #1
 801418c:	440d      	add	r5, r1
 801418e:	4419      	add	r1, r3
 8014190:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8014194:	fa1f f888 	uxth.w	r8, r8
 8014198:	441a      	add	r2, r3
 801419a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801419e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 80141a2:	b2ad      	uxth	r5, r5
 80141a4:	9304      	str	r3, [sp, #16]
 80141a6:	4b94      	ldr	r3, [pc, #592]	@ (80143f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 80141a8:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 80141ac:	6818      	ldr	r0, [r3, #0]
 80141ae:	6803      	ldr	r3, [r0, #0]
 80141b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80141b2:	4798      	blx	r3
 80141b4:	4b91      	ldr	r3, [pc, #580]	@ (80143fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 80141b6:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 80141ba:	2d00      	cmp	r5, #0
 80141bc:	881a      	ldrh	r2, [r3, #0]
 80141be:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 80141c2:	fb02 f606 	mul.w	r6, r2, r6
 80141c6:	fb02 7101 	mla	r1, r2, r1, r7
 80141ca:	9318      	str	r3, [sp, #96]	@ 0x60
 80141cc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80141d0:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 80141d4:	f04f 0100 	mov.w	r1, #0
 80141d8:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 80141dc:	930f      	str	r3, [sp, #60]	@ 0x3c
 80141de:	4b88      	ldr	r3, [pc, #544]	@ (8014400 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 80141e0:	920a      	str	r2, [sp, #40]	@ 0x28
 80141e2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80141e4:	eba3 0304 	sub.w	r3, r3, r4
 80141e8:	910d      	str	r1, [sp, #52]	@ 0x34
 80141ea:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 80141ee:	9319      	str	r3, [sp, #100]	@ 0x64
 80141f0:	f108 0204 	add.w	r2, r8, #4
 80141f4:	9211      	str	r2, [sp, #68]	@ 0x44
 80141f6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80141f8:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 80141fc:	9215      	str	r2, [sp, #84]	@ 0x54
 80141fe:	9a04      	ldr	r2, [sp, #16]
 8014200:	bf18      	it	ne
 8014202:	2200      	movne	r2, #0
 8014204:	b292      	uxth	r2, r2
 8014206:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8014208:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801420a:	fa11 f383 	uxtah	r3, r1, r3
 801420e:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8014210:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8014214:	3304      	adds	r3, #4
 8014216:	9306      	str	r3, [sp, #24]
 8014218:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801421a:	4283      	cmp	r3, r0
 801421c:	f240 8166 	bls.w	80144ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 8014220:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8014224:	f04f 0a01 	mov.w	sl, #1
 8014228:	9902      	ldr	r1, [sp, #8]
 801422a:	9e06      	ldr	r6, [sp, #24]
 801422c:	46d3      	mov	fp, sl
 801422e:	4657      	mov	r7, sl
 8014230:	7836      	ldrb	r6, [r6, #0]
 8014232:	fbb5 f3f3 	udiv	r3, r5, r3
 8014236:	1acb      	subs	r3, r1, r3
 8014238:	9612      	str	r6, [sp, #72]	@ 0x48
 801423a:	3601      	adds	r6, #1
 801423c:	b29b      	uxth	r3, r3
 801423e:	9605      	str	r6, [sp, #20]
 8014240:	9316      	str	r3, [sp, #88]	@ 0x58
 8014242:	9b06      	ldr	r3, [sp, #24]
 8014244:	7859      	ldrb	r1, [r3, #1]
 8014246:	789b      	ldrb	r3, [r3, #2]
 8014248:	021b      	lsls	r3, r3, #8
 801424a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801424e:	9906      	ldr	r1, [sp, #24]
 8014250:	78c9      	ldrb	r1, [r1, #3]
 8014252:	430b      	orrs	r3, r1
 8014254:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8014256:	4419      	add	r1, r3
 8014258:	1c4e      	adds	r6, r1, #1
 801425a:	7849      	ldrb	r1, [r1, #1]
 801425c:	9603      	str	r6, [sp, #12]
 801425e:	0209      	lsls	r1, r1, #8
 8014260:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014262:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8014266:	5cf3      	ldrb	r3, [r6, r3]
 8014268:	4319      	orrs	r1, r3
 801426a:	b28b      	uxth	r3, r1
 801426c:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8014270:	930c      	str	r3, [sp, #48]	@ 0x30
 8014272:	2300      	movs	r3, #0
 8014274:	9307      	str	r3, [sp, #28]
 8014276:	469c      	mov	ip, r3
 8014278:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801427c:	930e      	str	r3, [sp, #56]	@ 0x38
 801427e:	2d00      	cmp	r5, #0
 8014280:	d07e      	beq.n	8014380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 8014282:	42af      	cmp	r7, r5
 8014284:	d26e      	bcs.n	8014364 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 8014286:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014288:	1bed      	subs	r5, r5, r7
 801428a:	9201      	str	r2, [sp, #4]
 801428c:	4283      	cmp	r3, r0
 801428e:	b2ad      	uxth	r5, r5
 8014290:	d802      	bhi.n	8014298 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 8014292:	e073      	b.n	801437c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8014294:	2b00      	cmp	r3, #0
 8014296:	d15f      	bne.n	8014358 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 8014298:	9b03      	ldr	r3, [sp, #12]
 801429a:	f1cb 0207 	rsb	r2, fp, #7
 801429e:	785b      	ldrb	r3, [r3, #1]
 80142a0:	4093      	lsls	r3, r2
 80142a2:	005b      	lsls	r3, r3, #1
 80142a4:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80142a8:	9b03      	ldr	r3, [sp, #12]
 80142aa:	781b      	ldrb	r3, [r3, #0]
 80142ac:	fa43 f30b 	asr.w	r3, r3, fp
 80142b0:	b2db      	uxtb	r3, r3
 80142b2:	4313      	orrs	r3, r2
 80142b4:	f10b 0201 	add.w	r2, fp, #1
 80142b8:	fa5f fb82 	uxtb.w	fp, r2
 80142bc:	9a03      	ldr	r2, [sp, #12]
 80142be:	b29f      	uxth	r7, r3
 80142c0:	f1bb 0f08 	cmp.w	fp, #8
 80142c4:	bf13      	iteet	ne
 80142c6:	3201      	addne	r2, #1
 80142c8:	3202      	addeq	r2, #2
 80142ca:	f04f 0b00 	moveq.w	fp, #0
 80142ce:	9203      	strne	r2, [sp, #12]
 80142d0:	bf08      	it	eq
 80142d2:	9203      	streq	r2, [sp, #12]
 80142d4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80142d6:	42ba      	cmp	r2, r7
 80142d8:	d309      	bcc.n	80142ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 80142da:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 80142de:	2301      	movs	r3, #1
 80142e0:	9a05      	ldr	r2, [sp, #20]
 80142e2:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 80142e6:	d30e      	bcc.n	8014306 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80142e8:	469a      	mov	sl, r3
 80142ea:	2600      	movs	r6, #0
 80142ec:	e035      	b.n	801435a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 80142ee:	9b05      	ldr	r3, [sp, #20]
 80142f0:	429f      	cmp	r7, r3
 80142f2:	d318      	bcc.n	8014326 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 80142f4:	eb04 030a 	add.w	r3, r4, sl
 80142f8:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 80142fc:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8014300:	f10a 0301 	add.w	r3, sl, #1
 8014304:	b29b      	uxth	r3, r3
 8014306:	9a05      	ldr	r2, [sp, #20]
 8014308:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801430c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8014310:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8014312:	7116      	strb	r6, [r2, #4]
 8014314:	f10a 0601 	add.w	r6, sl, #1
 8014318:	80d1      	strh	r1, [r2, #6]
 801431a:	7156      	strb	r6, [r2, #5]
 801431c:	9a05      	ldr	r2, [sp, #20]
 801431e:	3201      	adds	r2, #1
 8014320:	b292      	uxth	r2, r2
 8014322:	9205      	str	r2, [sp, #20]
 8014324:	e7e0      	b.n	80142e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 8014326:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801432a:	463a      	mov	r2, r7
 801432c:	795b      	ldrb	r3, [r3, #5]
 801432e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8014332:	4426      	add	r6, r4
 8014334:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8014336:	eb01 0c06 	add.w	ip, r1, r6
 801433a:	f1bc 0f00 	cmp.w	ip, #0
 801433e:	dd07      	ble.n	8014350 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 8014340:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8014344:	f892 c004 	ldrb.w	ip, [r2, #4]
 8014348:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801434c:	88d2      	ldrh	r2, [r2, #6]
 801434e:	e7f1      	b.n	8014334 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 8014350:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8014354:	b29b      	uxth	r3, r3
 8014356:	e7c3      	b.n	80142e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 8014358:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801435a:	970c      	str	r7, [sp, #48]	@ 0x30
 801435c:	46b4      	mov	ip, r6
 801435e:	9a01      	ldr	r2, [sp, #4]
 8014360:	461f      	mov	r7, r3
 8014362:	e78c      	b.n	801427e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 8014364:	1b7b      	subs	r3, r7, r5
 8014366:	eb0c 0605 	add.w	r6, ip, r5
 801436a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801436e:	b29b      	uxth	r3, r3
 8014370:	b2b6      	uxth	r6, r6
 8014372:	9201      	str	r2, [sp, #4]
 8014374:	2500      	movs	r5, #0
 8014376:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8014378:	4282      	cmp	r2, r0
 801437a:	d88b      	bhi.n	8014294 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801437c:	9a01      	ldr	r2, [sp, #4]
 801437e:	e74b      	b.n	8014218 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 8014380:	4297      	cmp	r7, r2
 8014382:	d332      	bcc.n	80143ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 8014384:	1abb      	subs	r3, r7, r2
 8014386:	9208      	str	r2, [sp, #32]
 8014388:	9501      	str	r5, [sp, #4]
 801438a:	b29b      	uxth	r3, r3
 801438c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801438e:	29ff      	cmp	r1, #255	@ 0xff
 8014390:	9908      	ldr	r1, [sp, #32]
 8014392:	eb0c 0601 	add.w	r6, ip, r1
 8014396:	d135      	bne.n	8014404 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8014398:	f1a0 0e02 	sub.w	lr, r0, #2
 801439c:	b2b6      	uxth	r6, r6
 801439e:	45b4      	cmp	ip, r6
 80143a0:	f040 808c 	bne.w	80144bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 80143a4:	9908      	ldr	r1, [sp, #32]
 80143a6:	4297      	cmp	r7, r2
 80143a8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80143ac:	d3e2      	bcc.n	8014374 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 80143ae:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80143b0:	9904      	ldr	r1, [sp, #16]
 80143b2:	8812      	ldrh	r2, [r2, #0]
 80143b4:	1a52      	subs	r2, r2, r1
 80143b6:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80143b8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80143bc:	9a07      	ldr	r2, [sp, #28]
 80143be:	3201      	adds	r2, #1
 80143c0:	428a      	cmp	r2, r1
 80143c2:	9207      	str	r2, [sp, #28]
 80143c4:	f040 8087 	bne.w	80144d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 80143c8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80143cc:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 80143d0:	9b04      	ldr	r3, [sp, #16]
 80143d2:	1bed      	subs	r5, r5, r7
 80143d4:	b2ad      	uxth	r5, r5
 80143d6:	2d00      	cmp	r5, #0
 80143d8:	bf08      	it	eq
 80143da:	461a      	moveq	r2, r3
 80143dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80143de:	bf18      	it	ne
 80143e0:	2200      	movne	r2, #0
 80143e2:	3301      	adds	r3, #1
 80143e4:	b292      	uxth	r2, r2
 80143e6:	930d      	str	r3, [sp, #52]	@ 0x34
 80143e8:	e70d      	b.n	8014206 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 80143ea:	1bd1      	subs	r1, r2, r7
 80143ec:	9708      	str	r7, [sp, #32]
 80143ee:	b28b      	uxth	r3, r1
 80143f0:	9301      	str	r3, [sp, #4]
 80143f2:	462b      	mov	r3, r5
 80143f4:	e7ca      	b.n	801438c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 80143f6:	bf00      	nop
 80143f8:	200150c0 	.word	0x200150c0
 80143fc:	200150ba 	.word	0x200150ba
 8014400:	fffff7fb 	.word	0xfffff7fb
 8014404:	b2b6      	uxth	r6, r6
 8014406:	900b      	str	r0, [sp, #44]	@ 0x2c
 8014408:	45b4      	cmp	ip, r6
 801440a:	d0cb      	beq.n	80143a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 801440c:	f10c 0101 	add.w	r1, ip, #1
 8014410:	44a4      	add	ip, r4
 8014412:	9117      	str	r1, [sp, #92]	@ 0x5c
 8014414:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8014418:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801441a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801441e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8014420:	ea4f 2825 	mov.w	r8, r5, asr #8
 8014424:	f8b1 c000 	ldrh.w	ip, [r1]
 8014428:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801442a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801442e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8014432:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8014436:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801443a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801443e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8014442:	fb1e fe01 	smulbb	lr, lr, r1
 8014446:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8014448:	fa5f fc8c 	uxtb.w	ip, ip
 801444c:	fb08 e801 	mla	r8, r8, r1, lr
 8014450:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8014454:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8014456:	00ed      	lsls	r5, r5, #3
 8014458:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801445c:	fa1f f888 	uxth.w	r8, r8
 8014460:	fb19 f901 	smulbb	r9, r9, r1
 8014464:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8014466:	b2ed      	uxtb	r5, r5
 8014468:	fb0e 9e01 	mla	lr, lr, r1, r9
 801446c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801446e:	fb1c fc01 	smulbb	ip, ip, r1
 8014472:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8014474:	fa1f fe8e 	uxth.w	lr, lr
 8014478:	fb05 c501 	mla	r5, r5, r1, ip
 801447c:	f108 0c01 	add.w	ip, r8, #1
 8014480:	f10e 0901 	add.w	r9, lr, #1
 8014484:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8014486:	b2ad      	uxth	r5, r5
 8014488:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801448c:	f105 0c01 	add.w	ip, r5, #1
 8014490:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8014494:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8014498:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801449c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80144a0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80144a4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80144a8:	ea4c 0808 	orr.w	r8, ip, r8
 80144ac:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 80144b0:	ea48 0809 	orr.w	r8, r8, r9
 80144b4:	f821 8b02 	strh.w	r8, [r1], #2
 80144b8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80144ba:	e7a5      	b.n	8014408 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 80144bc:	f10c 0801 	add.w	r8, ip, #1
 80144c0:	44a4      	add	ip, r4
 80144c2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80144c4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80144c8:	fa1f fc88 	uxth.w	ip, r8
 80144cc:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80144d0:	f82e 5f02 	strh.w	r5, [lr, #2]!
 80144d4:	e763      	b.n	801439e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 80144d6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80144da:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80144de:	1aad      	subs	r5, r5, r2
 80144e0:	b2ad      	uxth	r5, r5
 80144e2:	2d00      	cmp	r5, #0
 80144e4:	bf18      	it	ne
 80144e6:	2200      	movne	r2, #0
 80144e8:	9201      	str	r2, [sp, #4]
 80144ea:	e744      	b.n	8014376 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 80144ec:	4b03      	ldr	r3, [pc, #12]	@ (80144fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 80144ee:	6818      	ldr	r0, [r3, #0]
 80144f0:	6803      	ldr	r3, [r0, #0]
 80144f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80144f4:	4798      	blx	r3
 80144f6:	b01f      	add	sp, #124	@ 0x7c
 80144f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144fc:	200150c0 	.word	0x200150c0

08014500 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8014500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014504:	b08f      	sub	sp, #60	@ 0x3c
 8014506:	461c      	mov	r4, r3
 8014508:	460f      	mov	r7, r1
 801450a:	9203      	str	r2, [sp, #12]
 801450c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014510:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8014512:	9202      	str	r2, [sp, #8]
 8014514:	2a00      	cmp	r2, #0
 8014516:	f000 8128 	beq.w	801476a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801451a:	6820      	ldr	r0, [r4, #0]
 801451c:	aa0a      	add	r2, sp, #40	@ 0x28
 801451e:	6861      	ldr	r1, [r4, #4]
 8014520:	c203      	stmia	r2!, {r0, r1}
 8014522:	6818      	ldr	r0, [r3, #0]
 8014524:	aa0c      	add	r2, sp, #48	@ 0x30
 8014526:	6859      	ldr	r1, [r3, #4]
 8014528:	c203      	stmia	r2!, {r0, r1}
 801452a:	a80a      	add	r0, sp, #40	@ 0x28
 801452c:	f7f9 fbd0 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014530:	4621      	mov	r1, r4
 8014532:	a80c      	add	r0, sp, #48	@ 0x30
 8014534:	f7f9 fbf4 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014538:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801453c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8014540:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8014544:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8014548:	bfdb      	ittet	le
 801454a:	b2b3      	uxthle	r3, r6
 801454c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8014550:	2301      	movgt	r3, #1
 8014552:	fb92 f3f3 	sdivle	r3, r2, r3
 8014556:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801455a:	441d      	add	r5, r3
 801455c:	fb92 f1f3 	sdiv	r1, r2, r3
 8014560:	fa1f fc81 	uxth.w	ip, r1
 8014564:	3d01      	subs	r5, #1
 8014566:	fb0c 2413 	mls	r4, ip, r3, r2
 801456a:	4661      	mov	r1, ip
 801456c:	fb14 f406 	smulbb	r4, r4, r6
 8014570:	4404      	add	r4, r0
 8014572:	fb95 f5f3 	sdiv	r5, r5, r3
 8014576:	b2a4      	uxth	r4, r4
 8014578:	b121      	cbz	r1, 8014584 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 801457a:	9b03      	ldr	r3, [sp, #12]
 801457c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8014580:	ba1b      	rev	r3, r3
 8014582:	441f      	add	r7, r3
 8014584:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8014588:	b2ad      	uxth	r5, r5
 801458a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801458e:	4418      	add	r0, r3
 8014590:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8014594:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8014598:	00ad      	lsls	r5, r5, #2
 801459a:	441a      	add	r2, r3
 801459c:	4b74      	ldr	r3, [pc, #464]	@ (8014770 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801459e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80145a2:	6818      	ldr	r0, [r3, #0]
 80145a4:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80145a8:	6803      	ldr	r3, [r0, #0]
 80145aa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80145ac:	4798      	blx	r3
 80145ae:	4a71      	ldr	r2, [pc, #452]	@ (8014774 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80145b0:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80145b4:	2c00      	cmp	r4, #0
 80145b6:	8813      	ldrh	r3, [r2, #0]
 80145b8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80145bc:	bf0c      	ite	eq
 80145be:	46c8      	moveq	r8, r9
 80145c0:	f04f 0800 	movne.w	r8, #0
 80145c4:	9209      	str	r2, [sp, #36]	@ 0x24
 80145c6:	fb03 c101 	mla	r1, r3, r1, ip
 80145ca:	4373      	muls	r3, r6
 80145cc:	fa1f f888 	uxth.w	r8, r8
 80145d0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80145d4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80145d8:	9304      	str	r3, [sp, #16]
 80145da:	1d2b      	adds	r3, r5, #4
 80145dc:	9305      	str	r3, [sp, #20]
 80145de:	2300      	movs	r3, #0
 80145e0:	9301      	str	r3, [sp, #4]
 80145e2:	9a04      	ldr	r2, [sp, #16]
 80145e4:	4282      	cmp	r2, r0
 80145e6:	f240 80bb 	bls.w	8014760 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80145ea:	b95b      	cbnz	r3, 8014604 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 80145ec:	783a      	ldrb	r2, [r7, #0]
 80145ee:	0993      	lsrs	r3, r2, #6
 80145f0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80145f4:	9201      	str	r2, [sp, #4]
 80145f6:	1e5a      	subs	r2, r3, #1
 80145f8:	2a02      	cmp	r2, #2
 80145fa:	bf8d      	iteet	hi
 80145fc:	787b      	ldrbhi	r3, [r7, #1]
 80145fe:	3701      	addls	r7, #1
 8014600:	b29b      	uxthls	r3, r3
 8014602:	3702      	addhi	r7, #2
 8014604:	b184      	cbz	r4, 8014628 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 8014606:	429c      	cmp	r4, r3
 8014608:	bf91      	iteee	ls
 801460a:	1b1c      	subls	r4, r3, r4
 801460c:	1ae4      	subhi	r4, r4, r3
 801460e:	46c4      	movhi	ip, r8
 8014610:	f04f 0a00 	movhi.w	sl, #0
 8014614:	bf9b      	ittet	ls
 8014616:	fa1f fa84 	uxthls.w	sl, r4
 801461a:	2400      	movls	r4, #0
 801461c:	b2a4      	uxthhi	r4, r4
 801461e:	fa1f fc89 	uxthls.w	ip, r9
 8014622:	4653      	mov	r3, sl
 8014624:	46e0      	mov	r8, ip
 8014626:	e7dc      	b.n	80145e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 8014628:	2204      	movs	r2, #4
 801462a:	9905      	ldr	r1, [sp, #20]
 801462c:	4543      	cmp	r3, r8
 801462e:	4615      	mov	r5, r2
 8014630:	9a01      	ldr	r2, [sp, #4]
 8014632:	bf24      	itt	cs
 8014634:	eba3 0a08 	subcs.w	sl, r3, r8
 8014638:	46c6      	movcs	lr, r8
 801463a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801463e:	9903      	ldr	r1, [sp, #12]
 8014640:	bf3c      	itt	cc
 8014642:	eba8 0c03 	subcc.w	ip, r8, r3
 8014646:	469e      	movcc	lr, r3
 8014648:	588a      	ldr	r2, [r1, r2]
 801464a:	bf26      	itte	cs
 801464c:	fa1f fa8a 	uxthcs.w	sl, sl
 8014650:	46a4      	movcs	ip, r4
 8014652:	fa1f fc8c 	uxthcc.w	ip, ip
 8014656:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801465a:	bf38      	it	cc
 801465c:	46a2      	movcc	sl, r4
 801465e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8014662:	2900      	cmp	r1, #0
 8014664:	d066      	beq.n	8014734 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8014666:	29ff      	cmp	r1, #255	@ 0xff
 8014668:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801466c:	d114      	bne.n	8014698 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801466e:	9d02      	ldr	r5, [sp, #8]
 8014670:	2dff      	cmp	r5, #255	@ 0xff
 8014672:	d111      	bne.n	8014698 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8014674:	0951      	lsrs	r1, r2, #5
 8014676:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801467a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801467e:	4486      	add	lr, r0
 8014680:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8014684:	f026 0607 	bic.w	r6, r6, #7
 8014688:	430e      	orrs	r6, r1
 801468a:	4316      	orrs	r6, r2
 801468c:	b2b6      	uxth	r6, r6
 801468e:	4586      	cmp	lr, r0
 8014690:	d051      	beq.n	8014736 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8014692:	f820 6b02 	strh.w	r6, [r0], #2
 8014696:	e7fa      	b.n	801468e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8014698:	9d02      	ldr	r5, [sp, #8]
 801469a:	b2f6      	uxtb	r6, r6
 801469c:	4486      	add	lr, r0
 801469e:	4369      	muls	r1, r5
 80146a0:	1c4d      	adds	r5, r1, #1
 80146a2:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80146a6:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80146aa:	b2d2      	uxtb	r2, r2
 80146ac:	122d      	asrs	r5, r5, #8
 80146ae:	ea6f 0b05 	mvn.w	fp, r5
 80146b2:	b2ad      	uxth	r5, r5
 80146b4:	fb11 f105 	smulbb	r1, r1, r5
 80146b8:	fa5f fb8b 	uxtb.w	fp, fp
 80146bc:	fb16 f605 	smulbb	r6, r6, r5
 80146c0:	fb12 f205 	smulbb	r2, r2, r5
 80146c4:	b289      	uxth	r1, r1
 80146c6:	b2b6      	uxth	r6, r6
 80146c8:	b292      	uxth	r2, r2
 80146ca:	9106      	str	r1, [sp, #24]
 80146cc:	9607      	str	r6, [sp, #28]
 80146ce:	9208      	str	r2, [sp, #32]
 80146d0:	4586      	cmp	lr, r0
 80146d2:	d030      	beq.n	8014736 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80146d4:	8802      	ldrh	r2, [r0, #0]
 80146d6:	9906      	ldr	r1, [sp, #24]
 80146d8:	1216      	asrs	r6, r2, #8
 80146da:	10d5      	asrs	r5, r2, #3
 80146dc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80146e0:	00d2      	lsls	r2, r2, #3
 80146e2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80146e6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80146ea:	b2d2      	uxtb	r2, r2
 80146ec:	fb06 160b 	mla	r6, r6, fp, r1
 80146f0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80146f4:	9907      	ldr	r1, [sp, #28]
 80146f6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80146fa:	b2b6      	uxth	r6, r6
 80146fc:	fb05 150b 	mla	r5, r5, fp, r1
 8014700:	9908      	ldr	r1, [sp, #32]
 8014702:	fb02 120b 	mla	r2, r2, fp, r1
 8014706:	1c71      	adds	r1, r6, #1
 8014708:	b2ad      	uxth	r5, r5
 801470a:	b292      	uxth	r2, r2
 801470c:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8014710:	1c51      	adds	r1, r2, #1
 8014712:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8014716:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801471a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801471e:	4316      	orrs	r6, r2
 8014720:	1c6a      	adds	r2, r5, #1
 8014722:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8014726:	096d      	lsrs	r5, r5, #5
 8014728:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801472c:	432e      	orrs	r6, r5
 801472e:	f820 6b02 	strh.w	r6, [r0], #2
 8014732:	e7cd      	b.n	80146d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8014734:	4470      	add	r0, lr
 8014736:	4543      	cmp	r3, r8
 8014738:	f4ff af73 	bcc.w	8014622 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801473c:	fa1f fc89 	uxth.w	ip, r9
 8014740:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8014744:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014746:	eba4 040c 	sub.w	r4, r4, ip
 801474a:	881b      	ldrh	r3, [r3, #0]
 801474c:	b2a4      	uxth	r4, r4
 801474e:	eba3 0309 	sub.w	r3, r3, r9
 8014752:	2c00      	cmp	r4, #0
 8014754:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014758:	bf18      	it	ne
 801475a:	f04f 0c00 	movne.w	ip, #0
 801475e:	e760      	b.n	8014622 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8014760:	4b03      	ldr	r3, [pc, #12]	@ (8014770 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8014762:	6818      	ldr	r0, [r3, #0]
 8014764:	6803      	ldr	r3, [r0, #0]
 8014766:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014768:	4798      	blx	r3
 801476a:	b00f      	add	sp, #60	@ 0x3c
 801476c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014770:	200150c0 	.word	0x200150c0
 8014774:	200150ba 	.word	0x200150ba

08014778 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8014778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801477c:	b093      	sub	sp, #76	@ 0x4c
 801477e:	461c      	mov	r4, r3
 8014780:	9205      	str	r2, [sp, #20]
 8014782:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8014786:	9101      	str	r1, [sp, #4]
 8014788:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801478a:	9202      	str	r2, [sp, #8]
 801478c:	2a00      	cmp	r2, #0
 801478e:	f000 812e 	beq.w	80149ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 8014792:	6820      	ldr	r0, [r4, #0]
 8014794:	aa0e      	add	r2, sp, #56	@ 0x38
 8014796:	6861      	ldr	r1, [r4, #4]
 8014798:	c203      	stmia	r2!, {r0, r1}
 801479a:	6818      	ldr	r0, [r3, #0]
 801479c:	aa10      	add	r2, sp, #64	@ 0x40
 801479e:	6859      	ldr	r1, [r3, #4]
 80147a0:	c203      	stmia	r2!, {r0, r1}
 80147a2:	a80e      	add	r0, sp, #56	@ 0x38
 80147a4:	f7f9 fa94 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80147a8:	4621      	mov	r1, r4
 80147aa:	a810      	add	r0, sp, #64	@ 0x40
 80147ac:	f7f9 fab8 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80147b0:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80147b4:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80147b8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80147bc:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 80147c0:	bfdb      	ittet	le
 80147c2:	b2b3      	uxthle	r3, r6
 80147c4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80147c8:	2301      	movgt	r3, #1
 80147ca:	fb92 f3f3 	sdivle	r3, r2, r3
 80147ce:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80147d2:	441d      	add	r5, r3
 80147d4:	fb92 f1f3 	sdiv	r1, r2, r3
 80147d8:	fa1f fc81 	uxth.w	ip, r1
 80147dc:	3d01      	subs	r5, #1
 80147de:	fb0c 2413 	mls	r4, ip, r3, r2
 80147e2:	4661      	mov	r1, ip
 80147e4:	fb14 f406 	smulbb	r4, r4, r6
 80147e8:	4404      	add	r4, r0
 80147ea:	fb95 f5f3 	sdiv	r5, r5, r3
 80147ee:	b2a4      	uxth	r4, r4
 80147f0:	b131      	cbz	r1, 8014800 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 80147f2:	9b05      	ldr	r3, [sp, #20]
 80147f4:	9901      	ldr	r1, [sp, #4]
 80147f6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80147fa:	ba1b      	rev	r3, r3
 80147fc:	4419      	add	r1, r3
 80147fe:	9101      	str	r1, [sp, #4]
 8014800:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8014804:	b2ad      	uxth	r5, r5
 8014806:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801480a:	4418      	add	r0, r3
 801480c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8014810:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8014814:	00ad      	lsls	r5, r5, #2
 8014816:	441a      	add	r2, r3
 8014818:	4b76      	ldr	r3, [pc, #472]	@ (80149f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801481a:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801481e:	6818      	ldr	r0, [r3, #0]
 8014820:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8014824:	6803      	ldr	r3, [r0, #0]
 8014826:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014828:	4798      	blx	r3
 801482a:	4973      	ldr	r1, [pc, #460]	@ (80149f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801482c:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8014830:	2c00      	cmp	r4, #0
 8014832:	880b      	ldrh	r3, [r1, #0]
 8014834:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8014838:	910d      	str	r1, [sp, #52]	@ 0x34
 801483a:	fb03 c202 	mla	r2, r3, r2, ip
 801483e:	bf08      	it	eq
 8014840:	46dc      	moveq	ip, fp
 8014842:	fb03 f306 	mul.w	r3, r3, r6
 8014846:	bf18      	it	ne
 8014848:	f04f 0c00 	movne.w	ip, #0
 801484c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014850:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014854:	fa1f fc8c 	uxth.w	ip, ip
 8014858:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801485c:	9106      	str	r1, [sp, #24]
 801485e:	9308      	str	r3, [sp, #32]
 8014860:	1d2b      	adds	r3, r5, #4
 8014862:	9309      	str	r3, [sp, #36]	@ 0x24
 8014864:	9b02      	ldr	r3, [sp, #8]
 8014866:	43da      	mvns	r2, r3
 8014868:	2300      	movs	r3, #0
 801486a:	b2d2      	uxtb	r2, r2
 801486c:	9303      	str	r3, [sp, #12]
 801486e:	9207      	str	r2, [sp, #28]
 8014870:	9a08      	ldr	r2, [sp, #32]
 8014872:	4282      	cmp	r2, r0
 8014874:	f240 80b6 	bls.w	80149e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 8014878:	b963      	cbnz	r3, 8014894 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801487a:	9b01      	ldr	r3, [sp, #4]
 801487c:	781a      	ldrb	r2, [r3, #0]
 801487e:	0993      	lsrs	r3, r2, #6
 8014880:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8014884:	9203      	str	r2, [sp, #12]
 8014886:	1e5a      	subs	r2, r3, #1
 8014888:	2a02      	cmp	r2, #2
 801488a:	d815      	bhi.n	80148b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 801488c:	9a01      	ldr	r2, [sp, #4]
 801488e:	b29b      	uxth	r3, r3
 8014890:	3201      	adds	r2, #1
 8014892:	9201      	str	r2, [sp, #4]
 8014894:	b1b4      	cbz	r4, 80148c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 8014896:	429c      	cmp	r4, r3
 8014898:	bf91      	iteee	ls
 801489a:	1b1c      	subls	r4, r3, r4
 801489c:	1ae4      	subhi	r4, r4, r3
 801489e:	4666      	movhi	r6, ip
 80148a0:	f04f 0800 	movhi.w	r8, #0
 80148a4:	bf9b      	ittet	ls
 80148a6:	fa1f f884 	uxthls.w	r8, r4
 80148aa:	2400      	movls	r4, #0
 80148ac:	b2a4      	uxthhi	r4, r4
 80148ae:	fa1f f68b 	uxthls.w	r6, fp
 80148b2:	4643      	mov	r3, r8
 80148b4:	46b4      	mov	ip, r6
 80148b6:	e7db      	b.n	8014870 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 80148b8:	9a01      	ldr	r2, [sp, #4]
 80148ba:	9b01      	ldr	r3, [sp, #4]
 80148bc:	3202      	adds	r2, #2
 80148be:	785b      	ldrb	r3, [r3, #1]
 80148c0:	9201      	str	r2, [sp, #4]
 80148c2:	e7e7      	b.n	8014894 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 80148c4:	2203      	movs	r2, #3
 80148c6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80148c8:	4563      	cmp	r3, ip
 80148ca:	4615      	mov	r5, r2
 80148cc:	9a03      	ldr	r2, [sp, #12]
 80148ce:	bf2c      	ite	cs
 80148d0:	eba3 080c 	subcs.w	r8, r3, ip
 80148d4:	ebac 0603 	subcc.w	r6, ip, r3
 80148d8:	fb15 1202 	smlabb	r2, r5, r2, r1
 80148dc:	9905      	ldr	r1, [sp, #20]
 80148de:	bf24      	itt	cs
 80148e0:	fa1f f888 	uxthcs.w	r8, r8
 80148e4:	46e1      	movcs	r9, ip
 80148e6:	eb01 0502 	add.w	r5, r1, r2
 80148ea:	9902      	ldr	r1, [sp, #8]
 80148ec:	bf2f      	iteee	cs
 80148ee:	4626      	movcs	r6, r4
 80148f0:	b2b6      	uxthcc	r6, r6
 80148f2:	4699      	movcc	r9, r3
 80148f4:	46a0      	movcc	r8, r4
 80148f6:	29ff      	cmp	r1, #255	@ 0xff
 80148f8:	d04a      	beq.n	8014990 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 80148fa:	9f06      	ldr	r7, [sp, #24]
 80148fc:	46ca      	mov	sl, r9
 80148fe:	78a9      	ldrb	r1, [r5, #2]
 8014900:	9004      	str	r0, [sp, #16]
 8014902:	4379      	muls	r1, r7
 8014904:	910a      	str	r1, [sp, #40]	@ 0x28
 8014906:	7869      	ldrb	r1, [r5, #1]
 8014908:	4379      	muls	r1, r7
 801490a:	910b      	str	r1, [sp, #44]	@ 0x2c
 801490c:	9905      	ldr	r1, [sp, #20]
 801490e:	5c8a      	ldrb	r2, [r1, r2]
 8014910:	437a      	muls	r2, r7
 8014912:	920c      	str	r2, [sp, #48]	@ 0x30
 8014914:	f1ba 0f00 	cmp.w	sl, #0
 8014918:	d03d      	beq.n	8014996 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801491a:	9a04      	ldr	r2, [sp, #16]
 801491c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8014920:	9f07      	ldr	r7, [sp, #28]
 8014922:	8812      	ldrh	r2, [r2, #0]
 8014924:	fa1f fa8a 	uxth.w	sl, sl
 8014928:	46be      	mov	lr, r7
 801492a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801492c:	1215      	asrs	r5, r2, #8
 801492e:	10d1      	asrs	r1, r2, #3
 8014930:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8014934:	00d2      	lsls	r2, r2, #3
 8014936:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801493a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801493e:	b2d2      	uxtb	r2, r2
 8014940:	fb05 750e 	mla	r5, r5, lr, r7
 8014944:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8014948:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801494a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801494e:	b2ad      	uxth	r5, r5
 8014950:	fb01 710e 	mla	r1, r1, lr, r7
 8014954:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8014956:	fb02 720e 	mla	r2, r2, lr, r7
 801495a:	f105 0e01 	add.w	lr, r5, #1
 801495e:	b289      	uxth	r1, r1
 8014960:	b292      	uxth	r2, r2
 8014962:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8014966:	f102 0e01 	add.w	lr, r2, #1
 801496a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801496e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8014972:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014976:	4315      	orrs	r5, r2
 8014978:	1c4a      	adds	r2, r1, #1
 801497a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801497e:	9a04      	ldr	r2, [sp, #16]
 8014980:	0949      	lsrs	r1, r1, #5
 8014982:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8014986:	430d      	orrs	r5, r1
 8014988:	f822 5b02 	strh.w	r5, [r2], #2
 801498c:	9204      	str	r2, [sp, #16]
 801498e:	e7c1      	b.n	8014914 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 8014990:	4649      	mov	r1, r9
 8014992:	4686      	mov	lr, r0
 8014994:	b999      	cbnz	r1, 80149be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 8014996:	4563      	cmp	r3, ip
 8014998:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801499c:	d389      	bcc.n	80148b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801499e:	fa1f f68b 	uxth.w	r6, fp
 80149a2:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 80149a6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80149a8:	1ba4      	subs	r4, r4, r6
 80149aa:	881b      	ldrh	r3, [r3, #0]
 80149ac:	b2a4      	uxth	r4, r4
 80149ae:	eba3 030b 	sub.w	r3, r3, fp
 80149b2:	2c00      	cmp	r4, #0
 80149b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80149b8:	bf18      	it	ne
 80149ba:	2600      	movne	r6, #0
 80149bc:	e779      	b.n	80148b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 80149be:	78aa      	ldrb	r2, [r5, #2]
 80149c0:	3901      	subs	r1, #1
 80149c2:	4f0e      	ldr	r7, [pc, #56]	@ (80149fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 80149c4:	b289      	uxth	r1, r1
 80149c6:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 80149ca:	786a      	ldrb	r2, [r5, #1]
 80149cc:	00d2      	lsls	r2, r2, #3
 80149ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80149d2:	ea4a 0202 	orr.w	r2, sl, r2
 80149d6:	f895 a000 	ldrb.w	sl, [r5]
 80149da:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 80149de:	f82e 2b02 	strh.w	r2, [lr], #2
 80149e2:	e7d7      	b.n	8014994 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 80149e4:	4b03      	ldr	r3, [pc, #12]	@ (80149f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 80149e6:	6818      	ldr	r0, [r3, #0]
 80149e8:	6803      	ldr	r3, [r0, #0]
 80149ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80149ec:	4798      	blx	r3
 80149ee:	b013      	add	sp, #76	@ 0x4c
 80149f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149f4:	200150c0 	.word	0x200150c0
 80149f8:	200150ba 	.word	0x200150ba
 80149fc:	fffff800 	.word	0xfffff800

08014a00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8014a00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a04:	b09d      	sub	sp, #116	@ 0x74
 8014a06:	461c      	mov	r4, r3
 8014a08:	4683      	mov	fp, r0
 8014a0a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8014a0c:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8014a10:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8014a14:	920e      	str	r2, [sp, #56]	@ 0x38
 8014a16:	2a00      	cmp	r2, #0
 8014a18:	f000 81e4 	beq.w	8014de4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 8014a1c:	6820      	ldr	r0, [r4, #0]
 8014a1e:	aa18      	add	r2, sp, #96	@ 0x60
 8014a20:	6861      	ldr	r1, [r4, #4]
 8014a22:	c203      	stmia	r2!, {r0, r1}
 8014a24:	6818      	ldr	r0, [r3, #0]
 8014a26:	aa1a      	add	r2, sp, #104	@ 0x68
 8014a28:	6859      	ldr	r1, [r3, #4]
 8014a2a:	c203      	stmia	r2!, {r0, r1}
 8014a2c:	a818      	add	r0, sp, #96	@ 0x60
 8014a2e:	f7f9 f94f 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014a32:	4621      	mov	r1, r4
 8014a34:	a81a      	add	r0, sp, #104	@ 0x68
 8014a36:	f7f9 f973 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014a3a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8014a3e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8014a42:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8014a46:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8014a4a:	bfdb      	ittet	le
 8014a4c:	b29a      	uxthle	r2, r3
 8014a4e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8014a52:	2201      	movgt	r2, #1
 8014a54:	fb91 f2f2 	sdivle	r2, r1, r2
 8014a58:	9202      	str	r2, [sp, #8]
 8014a5a:	9802      	ldr	r0, [sp, #8]
 8014a5c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8014a60:	9902      	ldr	r1, [sp, #8]
 8014a62:	fb92 f0f0 	sdiv	r0, r2, r0
 8014a66:	b280      	uxth	r0, r0
 8014a68:	440c      	add	r4, r1
 8014a6a:	900f      	str	r0, [sp, #60]	@ 0x3c
 8014a6c:	3c01      	subs	r4, #1
 8014a6e:	9802      	ldr	r0, [sp, #8]
 8014a70:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8014a72:	fb05 2510 	mls	r5, r5, r0, r2
 8014a76:	fb94 f4f1 	sdiv	r4, r4, r1
 8014a7a:	fb15 f503 	smulbb	r5, r5, r3
 8014a7e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8014a82:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8014a86:	3401      	adds	r4, #1
 8014a88:	440d      	add	r5, r1
 8014a8a:	4419      	add	r1, r3
 8014a8c:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8014a90:	b2a4      	uxth	r4, r4
 8014a92:	441a      	add	r2, r3
 8014a94:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8014a98:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8014a9c:	00a4      	lsls	r4, r4, #2
 8014a9e:	9306      	str	r3, [sp, #24]
 8014aa0:	b2ad      	uxth	r5, r5
 8014aa2:	4bb3      	ldr	r3, [pc, #716]	@ (8014d70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8014aa4:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8014aa8:	6818      	ldr	r0, [r3, #0]
 8014aaa:	6803      	ldr	r3, [r0, #0]
 8014aac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014aae:	4798      	blx	r3
 8014ab0:	4bb0      	ldr	r3, [pc, #704]	@ (8014d74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 8014ab2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8014ab6:	2d00      	cmp	r5, #0
 8014ab8:	881a      	ldrh	r2, [r3, #0]
 8014aba:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8014abe:	fb02 f606 	mul.w	r6, r2, r6
 8014ac2:	fb02 7101 	mla	r1, r2, r1, r7
 8014ac6:	9316      	str	r3, [sp, #88]	@ 0x58
 8014ac8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8014acc:	4baa      	ldr	r3, [pc, #680]	@ (8014d78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 8014ace:	bf18      	it	ne
 8014ad0:	2100      	movne	r1, #0
 8014ad2:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8014ad6:	eba3 030b 	sub.w	r3, r3, fp
 8014ada:	920a      	str	r2, [sp, #40]	@ 0x28
 8014adc:	f104 0204 	add.w	r2, r4, #4
 8014ae0:	9317      	str	r3, [sp, #92]	@ 0x5c
 8014ae2:	9213      	str	r2, [sp, #76]	@ 0x4c
 8014ae4:	9a06      	ldr	r2, [sp, #24]
 8014ae6:	bf08      	it	eq
 8014ae8:	4611      	moveq	r1, r2
 8014aea:	2200      	movs	r2, #0
 8014aec:	b289      	uxth	r1, r1
 8014aee:	920d      	str	r2, [sp, #52]	@ 0x34
 8014af0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014af2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014af4:	fa12 f383 	uxtah	r3, r2, r3
 8014af8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014afa:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8014afe:	3304      	adds	r3, #4
 8014b00:	9308      	str	r3, [sp, #32]
 8014b02:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014b04:	4543      	cmp	r3, r8
 8014b06:	f240 8168 	bls.w	8014dda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 8014b0a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8014b0e:	f04f 0e01 	mov.w	lr, #1
 8014b12:	9a02      	ldr	r2, [sp, #8]
 8014b14:	9808      	ldr	r0, [sp, #32]
 8014b16:	fbb5 f3f3 	udiv	r3, r5, r3
 8014b1a:	1ad3      	subs	r3, r2, r3
 8014b1c:	7800      	ldrb	r0, [r0, #0]
 8014b1e:	b29b      	uxth	r3, r3
 8014b20:	9010      	str	r0, [sp, #64]	@ 0x40
 8014b22:	3001      	adds	r0, #1
 8014b24:	9314      	str	r3, [sp, #80]	@ 0x50
 8014b26:	9b08      	ldr	r3, [sp, #32]
 8014b28:	9007      	str	r0, [sp, #28]
 8014b2a:	785a      	ldrb	r2, [r3, #1]
 8014b2c:	789b      	ldrb	r3, [r3, #2]
 8014b2e:	021b      	lsls	r3, r3, #8
 8014b30:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8014b34:	9a08      	ldr	r2, [sp, #32]
 8014b36:	78d2      	ldrb	r2, [r2, #3]
 8014b38:	4313      	orrs	r3, r2
 8014b3a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014b3c:	441a      	add	r2, r3
 8014b3e:	1c50      	adds	r0, r2, #1
 8014b40:	7852      	ldrb	r2, [r2, #1]
 8014b42:	9005      	str	r0, [sp, #20]
 8014b44:	0212      	lsls	r2, r2, #8
 8014b46:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014b48:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8014b4c:	5cc3      	ldrb	r3, [r0, r3]
 8014b4e:	431a      	orrs	r2, r3
 8014b50:	b293      	uxth	r3, r2
 8014b52:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8014b56:	930b      	str	r3, [sp, #44]	@ 0x2c
 8014b58:	2300      	movs	r3, #0
 8014b5a:	9309      	str	r3, [sp, #36]	@ 0x24
 8014b5c:	2301      	movs	r3, #1
 8014b5e:	9301      	str	r3, [sp, #4]
 8014b60:	9304      	str	r3, [sp, #16]
 8014b62:	2300      	movs	r3, #0
 8014b64:	9303      	str	r3, [sp, #12]
 8014b66:	2d00      	cmp	r5, #0
 8014b68:	d07d      	beq.n	8014c66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 8014b6a:	45ae      	cmp	lr, r5
 8014b6c:	d26c      	bcs.n	8014c48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 8014b6e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014b70:	eba5 050e 	sub.w	r5, r5, lr
 8014b74:	460c      	mov	r4, r1
 8014b76:	4543      	cmp	r3, r8
 8014b78:	b2ad      	uxth	r5, r5
 8014b7a:	d802      	bhi.n	8014b82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 8014b7c:	e071      	b.n	8014c62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 8014b7e:	2b00      	cmp	r3, #0
 8014b80:	d15d      	bne.n	8014c3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 8014b82:	9b05      	ldr	r3, [sp, #20]
 8014b84:	9a04      	ldr	r2, [sp, #16]
 8014b86:	785b      	ldrb	r3, [r3, #1]
 8014b88:	f1c2 0207 	rsb	r2, r2, #7
 8014b8c:	9904      	ldr	r1, [sp, #16]
 8014b8e:	4093      	lsls	r3, r2
 8014b90:	005b      	lsls	r3, r3, #1
 8014b92:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8014b96:	9b05      	ldr	r3, [sp, #20]
 8014b98:	781b      	ldrb	r3, [r3, #0]
 8014b9a:	410b      	asrs	r3, r1
 8014b9c:	3101      	adds	r1, #1
 8014b9e:	b2c9      	uxtb	r1, r1
 8014ba0:	b2db      	uxtb	r3, r3
 8014ba2:	2908      	cmp	r1, #8
 8014ba4:	9104      	str	r1, [sp, #16]
 8014ba6:	9905      	ldr	r1, [sp, #20]
 8014ba8:	ea43 0302 	orr.w	r3, r3, r2
 8014bac:	bf0c      	ite	eq
 8014bae:	3102      	addeq	r1, #2
 8014bb0:	3101      	addne	r1, #1
 8014bb2:	b29a      	uxth	r2, r3
 8014bb4:	bf05      	ittet	eq
 8014bb6:	9105      	streq	r1, [sp, #20]
 8014bb8:	2100      	moveq	r1, #0
 8014bba:	9105      	strne	r1, [sp, #20]
 8014bbc:	9104      	streq	r1, [sp, #16]
 8014bbe:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8014bc0:	4291      	cmp	r1, r2
 8014bc2:	d30a      	bcc.n	8014bda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 8014bc4:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8014bc8:	2301      	movs	r3, #1
 8014bca:	9907      	ldr	r1, [sp, #28]
 8014bcc:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8014bd0:	d30f      	bcc.n	8014bf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8014bd2:	2100      	movs	r1, #0
 8014bd4:	9301      	str	r3, [sp, #4]
 8014bd6:	9103      	str	r1, [sp, #12]
 8014bd8:	e032      	b.n	8014c40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8014bda:	9b07      	ldr	r3, [sp, #28]
 8014bdc:	429a      	cmp	r2, r3
 8014bde:	d318      	bcc.n	8014c12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 8014be0:	9b01      	ldr	r3, [sp, #4]
 8014be2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8014be6:	445b      	add	r3, fp
 8014be8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8014bec:	9b01      	ldr	r3, [sp, #4]
 8014bee:	3301      	adds	r3, #1
 8014bf0:	b29b      	uxth	r3, r3
 8014bf2:	9907      	ldr	r1, [sp, #28]
 8014bf4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8014bf8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8014bfc:	7108      	strb	r0, [r1, #4]
 8014bfe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8014c00:	80c8      	strh	r0, [r1, #6]
 8014c02:	9801      	ldr	r0, [sp, #4]
 8014c04:	3001      	adds	r0, #1
 8014c06:	7148      	strb	r0, [r1, #5]
 8014c08:	9907      	ldr	r1, [sp, #28]
 8014c0a:	3101      	adds	r1, #1
 8014c0c:	b289      	uxth	r1, r1
 8014c0e:	9107      	str	r1, [sp, #28]
 8014c10:	e7df      	b.n	8014bd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8014c12:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8014c16:	4611      	mov	r1, r2
 8014c18:	795b      	ldrb	r3, [r3, #5]
 8014c1a:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8014c1e:	4458      	add	r0, fp
 8014c20:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8014c22:	4406      	add	r6, r0
 8014c24:	2e00      	cmp	r6, #0
 8014c26:	dd06      	ble.n	8014c36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8014c28:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8014c2c:	790e      	ldrb	r6, [r1, #4]
 8014c2e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8014c32:	88c9      	ldrh	r1, [r1, #6]
 8014c34:	e7f4      	b.n	8014c20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 8014c36:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8014c3a:	b29b      	uxth	r3, r3
 8014c3c:	e7c5      	b.n	8014bca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8014c3e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8014c40:	4621      	mov	r1, r4
 8014c42:	920b      	str	r2, [sp, #44]	@ 0x2c
 8014c44:	469e      	mov	lr, r3
 8014c46:	e78e      	b.n	8014b66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 8014c48:	9a03      	ldr	r2, [sp, #12]
 8014c4a:	ebae 0305 	sub.w	r3, lr, r5
 8014c4e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8014c52:	442a      	add	r2, r5
 8014c54:	b29b      	uxth	r3, r3
 8014c56:	b292      	uxth	r2, r2
 8014c58:	9203      	str	r2, [sp, #12]
 8014c5a:	2500      	movs	r5, #0
 8014c5c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8014c5e:	4542      	cmp	r2, r8
 8014c60:	d88d      	bhi.n	8014b7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 8014c62:	4621      	mov	r1, r4
 8014c64:	e74d      	b.n	8014b02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 8014c66:	458e      	cmp	lr, r1
 8014c68:	f04f 0900 	mov.w	r9, #0
 8014c6c:	bf2b      	itete	cs
 8014c6e:	ebae 0301 	subcs.w	r3, lr, r1
 8014c72:	eba1 040e 	subcc.w	r4, r1, lr
 8014c76:	462c      	movcs	r4, r5
 8014c78:	462b      	movcc	r3, r5
 8014c7a:	bf27      	ittee	cs
 8014c7c:	b29b      	uxthcs	r3, r3
 8014c7e:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8014c80:	b2a4      	uxthcc	r4, r4
 8014c82:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8014c86:	9a03      	ldr	r2, [sp, #12]
 8014c88:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8014c8a:	444a      	add	r2, r9
 8014c8c:	4548      	cmp	r0, r9
 8014c8e:	b292      	uxth	r2, r2
 8014c90:	d074      	beq.n	8014d7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 8014c92:	2004      	movs	r0, #4
 8014c94:	445a      	add	r2, fp
 8014c96:	4605      	mov	r5, r0
 8014c98:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8014c9c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014c9e:	fb15 0202 	smlabb	r2, r5, r2, r0
 8014ca2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014ca4:	5880      	ldr	r0, [r0, r2]
 8014ca6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8014caa:	d014      	beq.n	8014cd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8014cac:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8014cb0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8014cb4:	d112      	bne.n	8014cdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8014cb6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8014cb8:	2aff      	cmp	r2, #255	@ 0xff
 8014cba:	d10f      	bne.n	8014cdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8014cbc:	0942      	lsrs	r2, r0, #5
 8014cbe:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8014cc2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014cc6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014cca:	f025 0507 	bic.w	r5, r5, #7
 8014cce:	4315      	orrs	r5, r2
 8014cd0:	4305      	orrs	r5, r0
 8014cd2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8014cd6:	f109 0901 	add.w	r9, r9, #1
 8014cda:	e7d4      	b.n	8014c86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8014cdc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8014ce0:	b2ed      	uxtb	r5, r5
 8014ce2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014ce6:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014cea:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8014cee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014cf2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8014cf6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014cfa:	9215      	str	r2, [sp, #84]	@ 0x54
 8014cfc:	fa5f fc8c 	uxtb.w	ip, ip
 8014d00:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8014d02:	b2c0      	uxtb	r0, r0
 8014d04:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8014d08:	fb02 fa0a 	mul.w	sl, r2, sl
 8014d0c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8014d10:	f10a 0201 	add.w	r2, sl, #1
 8014d14:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8014d18:	1212      	asrs	r2, r2, #8
 8014d1a:	fa1f fa82 	uxth.w	sl, r2
 8014d1e:	43d2      	mvns	r2, r2
 8014d20:	fb16 f60a 	smulbb	r6, r6, sl
 8014d24:	b2d2      	uxtb	r2, r2
 8014d26:	fb10 f00a 	smulbb	r0, r0, sl
 8014d2a:	fb07 6702 	mla	r7, r7, r2, r6
 8014d2e:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8014d30:	fb0c 0002 	mla	r0, ip, r2, r0
 8014d34:	fb15 f50a 	smulbb	r5, r5, sl
 8014d38:	b2bf      	uxth	r7, r7
 8014d3a:	b280      	uxth	r0, r0
 8014d3c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8014d40:	fb06 5602 	mla	r6, r6, r2, r5
 8014d44:	1c7a      	adds	r2, r7, #1
 8014d46:	1c45      	adds	r5, r0, #1
 8014d48:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014d4c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014d50:	b2b6      	uxth	r6, r6
 8014d52:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014d56:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014d5a:	432f      	orrs	r7, r5
 8014d5c:	1c75      	adds	r5, r6, #1
 8014d5e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8014d62:	096d      	lsrs	r5, r5, #5
 8014d64:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014d68:	432f      	orrs	r7, r5
 8014d6a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8014d6e:	e7b2      	b.n	8014cd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8014d70:	200150c0 	.word	0x200150c0
 8014d74:	200150ba 	.word	0x200150ba
 8014d78:	fffff7fb 	.word	0xfffff7fb
 8014d7c:	9203      	str	r2, [sp, #12]
 8014d7e:	458e      	cmp	lr, r1
 8014d80:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8014d82:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8014d86:	f4ff af68 	bcc.w	8014c5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8014d8a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8014d8c:	9906      	ldr	r1, [sp, #24]
 8014d8e:	8812      	ldrh	r2, [r2, #0]
 8014d90:	1a52      	subs	r2, r2, r1
 8014d92:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8014d94:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8014d98:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014d9a:	3201      	adds	r2, #1
 8014d9c:	428a      	cmp	r2, r1
 8014d9e:	9209      	str	r2, [sp, #36]	@ 0x24
 8014da0:	d111      	bne.n	8014dc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 8014da2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8014da6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8014daa:	9b06      	ldr	r3, [sp, #24]
 8014dac:	eba5 0509 	sub.w	r5, r5, r9
 8014db0:	b2ad      	uxth	r5, r5
 8014db2:	2d00      	cmp	r5, #0
 8014db4:	bf08      	it	eq
 8014db6:	4619      	moveq	r1, r3
 8014db8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014dba:	bf18      	it	ne
 8014dbc:	2100      	movne	r1, #0
 8014dbe:	3301      	adds	r3, #1
 8014dc0:	b289      	uxth	r1, r1
 8014dc2:	930d      	str	r3, [sp, #52]	@ 0x34
 8014dc4:	e694      	b.n	8014af0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 8014dc6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8014dca:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8014dce:	1b2d      	subs	r5, r5, r4
 8014dd0:	b2ad      	uxth	r5, r5
 8014dd2:	2d00      	cmp	r5, #0
 8014dd4:	bf18      	it	ne
 8014dd6:	2400      	movne	r4, #0
 8014dd8:	e740      	b.n	8014c5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8014dda:	4b04      	ldr	r3, [pc, #16]	@ (8014dec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8014ddc:	6818      	ldr	r0, [r3, #0]
 8014dde:	6803      	ldr	r3, [r0, #0]
 8014de0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014de2:	4798      	blx	r3
 8014de4:	b01d      	add	sp, #116	@ 0x74
 8014de6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014dea:	bf00      	nop
 8014dec:	200150c0 	.word	0x200150c0

08014df0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8014df0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014df4:	b09f      	sub	sp, #124	@ 0x7c
 8014df6:	461d      	mov	r5, r3
 8014df8:	4604      	mov	r4, r0
 8014dfa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8014dfc:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8014e00:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8014e04:	920a      	str	r2, [sp, #40]	@ 0x28
 8014e06:	2a00      	cmp	r2, #0
 8014e08:	f000 81fe 	beq.w	8015208 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8014e0c:	6828      	ldr	r0, [r5, #0]
 8014e0e:	aa1a      	add	r2, sp, #104	@ 0x68
 8014e10:	6869      	ldr	r1, [r5, #4]
 8014e12:	c203      	stmia	r2!, {r0, r1}
 8014e14:	6818      	ldr	r0, [r3, #0]
 8014e16:	aa1c      	add	r2, sp, #112	@ 0x70
 8014e18:	6859      	ldr	r1, [r3, #4]
 8014e1a:	c203      	stmia	r2!, {r0, r1}
 8014e1c:	a81a      	add	r0, sp, #104	@ 0x68
 8014e1e:	f7f8 ff57 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014e22:	4629      	mov	r1, r5
 8014e24:	a81c      	add	r0, sp, #112	@ 0x70
 8014e26:	f7f8 ff7b 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014e2a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8014e2e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8014e32:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8014e36:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8014e3a:	bfdb      	ittet	le
 8014e3c:	b29a      	uxthle	r2, r3
 8014e3e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8014e42:	2201      	movgt	r2, #1
 8014e44:	fb91 f2f2 	sdivle	r2, r1, r2
 8014e48:	9201      	str	r2, [sp, #4]
 8014e4a:	9801      	ldr	r0, [sp, #4]
 8014e4c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8014e50:	9901      	ldr	r1, [sp, #4]
 8014e52:	fb92 f0f0 	sdiv	r0, r2, r0
 8014e56:	b280      	uxth	r0, r0
 8014e58:	440e      	add	r6, r1
 8014e5a:	9010      	str	r0, [sp, #64]	@ 0x40
 8014e5c:	3e01      	subs	r6, #1
 8014e5e:	9801      	ldr	r0, [sp, #4]
 8014e60:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8014e62:	fb05 2510 	mls	r5, r5, r0, r2
 8014e66:	fb96 f6f1 	sdiv	r6, r6, r1
 8014e6a:	fb15 f503 	smulbb	r5, r5, r3
 8014e6e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8014e72:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8014e76:	3601      	adds	r6, #1
 8014e78:	440d      	add	r5, r1
 8014e7a:	4419      	add	r1, r3
 8014e7c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8014e80:	b2b6      	uxth	r6, r6
 8014e82:	441a      	add	r2, r3
 8014e84:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8014e88:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8014e8c:	b2ad      	uxth	r5, r5
 8014e8e:	9304      	str	r3, [sp, #16]
 8014e90:	4b96      	ldr	r3, [pc, #600]	@ (80150ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8014e92:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8014e96:	6818      	ldr	r0, [r3, #0]
 8014e98:	6803      	ldr	r3, [r0, #0]
 8014e9a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014e9c:	4798      	blx	r3
 8014e9e:	4b94      	ldr	r3, [pc, #592]	@ (80150f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 8014ea0:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8014ea4:	2d00      	cmp	r5, #0
 8014ea6:	881a      	ldrh	r2, [r3, #0]
 8014ea8:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8014eac:	fb02 f707 	mul.w	r7, r2, r7
 8014eb0:	fb02 c101 	mla	r1, r2, r1, ip
 8014eb4:	9318      	str	r3, [sp, #96]	@ 0x60
 8014eb6:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8014eba:	4b8e      	ldr	r3, [pc, #568]	@ (80150f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 8014ebc:	bf18      	it	ne
 8014ebe:	2100      	movne	r1, #0
 8014ec0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8014ec4:	eba3 0304 	sub.w	r3, r3, r4
 8014ec8:	920b      	str	r2, [sp, #44]	@ 0x2c
 8014eca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014ecc:	9319      	str	r3, [sp, #100]	@ 0x64
 8014ece:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8014ed2:	f106 0204 	add.w	r2, r6, #4
 8014ed6:	9206      	str	r2, [sp, #24]
 8014ed8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8014eda:	ea6f 0202 	mvn.w	r2, r2
 8014ede:	b2d2      	uxtb	r2, r2
 8014ee0:	9215      	str	r2, [sp, #84]	@ 0x54
 8014ee2:	9a04      	ldr	r2, [sp, #16]
 8014ee4:	bf08      	it	eq
 8014ee6:	4611      	moveq	r1, r2
 8014ee8:	2200      	movs	r2, #0
 8014eea:	b289      	uxth	r1, r1
 8014eec:	920d      	str	r2, [sp, #52]	@ 0x34
 8014eee:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014ef0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014ef2:	fa12 f383 	uxtah	r3, r2, r3
 8014ef6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014ef8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8014efc:	3304      	adds	r3, #4
 8014efe:	9307      	str	r3, [sp, #28]
 8014f00:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014f02:	455b      	cmp	r3, fp
 8014f04:	f240 817b 	bls.w	80151fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 8014f08:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8014f0c:	f04f 0801 	mov.w	r8, #1
 8014f10:	9a01      	ldr	r2, [sp, #4]
 8014f12:	9807      	ldr	r0, [sp, #28]
 8014f14:	46c4      	mov	ip, r8
 8014f16:	f8cd 8008 	str.w	r8, [sp, #8]
 8014f1a:	7800      	ldrb	r0, [r0, #0]
 8014f1c:	fbb5 f3f3 	udiv	r3, r5, r3
 8014f20:	1ad3      	subs	r3, r2, r3
 8014f22:	9011      	str	r0, [sp, #68]	@ 0x44
 8014f24:	3001      	adds	r0, #1
 8014f26:	b29b      	uxth	r3, r3
 8014f28:	9005      	str	r0, [sp, #20]
 8014f2a:	9316      	str	r3, [sp, #88]	@ 0x58
 8014f2c:	9b07      	ldr	r3, [sp, #28]
 8014f2e:	785a      	ldrb	r2, [r3, #1]
 8014f30:	789b      	ldrb	r3, [r3, #2]
 8014f32:	021b      	lsls	r3, r3, #8
 8014f34:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8014f38:	9a07      	ldr	r2, [sp, #28]
 8014f3a:	78d2      	ldrb	r2, [r2, #3]
 8014f3c:	4313      	orrs	r3, r2
 8014f3e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014f40:	441a      	add	r2, r3
 8014f42:	1c50      	adds	r0, r2, #1
 8014f44:	7852      	ldrb	r2, [r2, #1]
 8014f46:	9003      	str	r0, [sp, #12]
 8014f48:	0212      	lsls	r2, r2, #8
 8014f4a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014f4c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8014f50:	5cc3      	ldrb	r3, [r0, r3]
 8014f52:	431a      	orrs	r2, r3
 8014f54:	b293      	uxth	r3, r2
 8014f56:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8014f5a:	930c      	str	r3, [sp, #48]	@ 0x30
 8014f5c:	2300      	movs	r3, #0
 8014f5e:	9308      	str	r3, [sp, #32]
 8014f60:	461a      	mov	r2, r3
 8014f62:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8014f66:	930e      	str	r3, [sp, #56]	@ 0x38
 8014f68:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8014f6c:	930f      	str	r3, [sp, #60]	@ 0x3c
 8014f6e:	2d00      	cmp	r5, #0
 8014f70:	d07d      	beq.n	801506e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 8014f72:	45ac      	cmp	ip, r5
 8014f74:	d26d      	bcs.n	8015052 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 8014f76:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014f78:	eba5 050c 	sub.w	r5, r5, ip
 8014f7c:	4608      	mov	r0, r1
 8014f7e:	455b      	cmp	r3, fp
 8014f80:	b2ad      	uxth	r5, r5
 8014f82:	d802      	bhi.n	8014f8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 8014f84:	e071      	b.n	801506a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 8014f86:	2b00      	cmp	r3, #0
 8014f88:	d15d      	bne.n	8015046 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8014f8a:	9b03      	ldr	r3, [sp, #12]
 8014f8c:	9a02      	ldr	r2, [sp, #8]
 8014f8e:	785b      	ldrb	r3, [r3, #1]
 8014f90:	f1c2 0207 	rsb	r2, r2, #7
 8014f94:	9902      	ldr	r1, [sp, #8]
 8014f96:	4093      	lsls	r3, r2
 8014f98:	005b      	lsls	r3, r3, #1
 8014f9a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8014f9e:	9b03      	ldr	r3, [sp, #12]
 8014fa0:	781b      	ldrb	r3, [r3, #0]
 8014fa2:	410b      	asrs	r3, r1
 8014fa4:	3101      	adds	r1, #1
 8014fa6:	b2c9      	uxtb	r1, r1
 8014fa8:	b2db      	uxtb	r3, r3
 8014faa:	2908      	cmp	r1, #8
 8014fac:	9102      	str	r1, [sp, #8]
 8014fae:	9903      	ldr	r1, [sp, #12]
 8014fb0:	ea43 0302 	orr.w	r3, r3, r2
 8014fb4:	bf0c      	ite	eq
 8014fb6:	3102      	addeq	r1, #2
 8014fb8:	3101      	addne	r1, #1
 8014fba:	b29a      	uxth	r2, r3
 8014fbc:	bf05      	ittet	eq
 8014fbe:	9103      	streq	r1, [sp, #12]
 8014fc0:	2100      	moveq	r1, #0
 8014fc2:	9103      	strne	r1, [sp, #12]
 8014fc4:	9102      	streq	r1, [sp, #8]
 8014fc6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014fc8:	4291      	cmp	r1, r2
 8014fca:	d30a      	bcc.n	8014fe2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8014fcc:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8014fd0:	2301      	movs	r3, #1
 8014fd2:	9905      	ldr	r1, [sp, #20]
 8014fd4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8014fd8:	d30f      	bcc.n	8014ffa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 8014fda:	2100      	movs	r1, #0
 8014fdc:	4698      	mov	r8, r3
 8014fde:	9100      	str	r1, [sp, #0]
 8014fe0:	e032      	b.n	8015048 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 8014fe2:	9b05      	ldr	r3, [sp, #20]
 8014fe4:	429a      	cmp	r2, r3
 8014fe6:	d318      	bcc.n	801501a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 8014fe8:	eb04 0308 	add.w	r3, r4, r8
 8014fec:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8014ff0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8014ff4:	f108 0301 	add.w	r3, r8, #1
 8014ff8:	b29b      	uxth	r3, r3
 8014ffa:	9905      	ldr	r1, [sp, #20]
 8014ffc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8015000:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8015004:	710e      	strb	r6, [r1, #4]
 8015006:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8015008:	80ce      	strh	r6, [r1, #6]
 801500a:	f108 0601 	add.w	r6, r8, #1
 801500e:	714e      	strb	r6, [r1, #5]
 8015010:	9905      	ldr	r1, [sp, #20]
 8015012:	3101      	adds	r1, #1
 8015014:	b289      	uxth	r1, r1
 8015016:	9105      	str	r1, [sp, #20]
 8015018:	e7df      	b.n	8014fda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801501a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801501e:	4611      	mov	r1, r2
 8015020:	795b      	ldrb	r3, [r3, #5]
 8015022:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8015026:	4426      	add	r6, r4
 8015028:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801502a:	4437      	add	r7, r6
 801502c:	2f00      	cmp	r7, #0
 801502e:	dd06      	ble.n	801503e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 8015030:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8015034:	790f      	ldrb	r7, [r1, #4]
 8015036:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801503a:	88c9      	ldrh	r1, [r1, #6]
 801503c:	e7f4      	b.n	8015028 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 801503e:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8015042:	b29b      	uxth	r3, r3
 8015044:	e7c5      	b.n	8014fd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 8015046:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8015048:	920c      	str	r2, [sp, #48]	@ 0x30
 801504a:	4601      	mov	r1, r0
 801504c:	9a00      	ldr	r2, [sp, #0]
 801504e:	469c      	mov	ip, r3
 8015050:	e78d      	b.n	8014f6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 8015052:	ebac 0305 	sub.w	r3, ip, r5
 8015056:	1957      	adds	r7, r2, r5
 8015058:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801505c:	b2ba      	uxth	r2, r7
 801505e:	b29b      	uxth	r3, r3
 8015060:	9200      	str	r2, [sp, #0]
 8015062:	2500      	movs	r5, #0
 8015064:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015066:	455a      	cmp	r2, fp
 8015068:	d88d      	bhi.n	8014f86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801506a:	4601      	mov	r1, r0
 801506c:	e748      	b.n	8014f00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 801506e:	458c      	cmp	ip, r1
 8015070:	bf27      	ittee	cs
 8015072:	ebac 0301 	subcs.w	r3, ip, r1
 8015076:	4628      	movcs	r0, r5
 8015078:	eba1 000c 	subcc.w	r0, r1, ip
 801507c:	462b      	movcc	r3, r5
 801507e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8015080:	bf27      	ittee	cs
 8015082:	b29b      	uxthcs	r3, r3
 8015084:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8015086:	b280      	uxthcc	r0, r0
 8015088:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801508c:	2dff      	cmp	r5, #255	@ 0xff
 801508e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8015090:	eb02 0705 	add.w	r7, r2, r5
 8015094:	b2bd      	uxth	r5, r7
 8015096:	9500      	str	r5, [sp, #0]
 8015098:	d12e      	bne.n	80150f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 801509a:	465e      	mov	r6, fp
 801509c:	9d00      	ldr	r5, [sp, #0]
 801509e:	42aa      	cmp	r2, r5
 80150a0:	f040 8083 	bne.w	80151aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 80150a4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80150a6:	458c      	cmp	ip, r1
 80150a8:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80150ac:	d3d9      	bcc.n	8015062 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80150ae:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80150b0:	9904      	ldr	r1, [sp, #16]
 80150b2:	8812      	ldrh	r2, [r2, #0]
 80150b4:	1a52      	subs	r2, r2, r1
 80150b6:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80150b8:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80150bc:	9a08      	ldr	r2, [sp, #32]
 80150be:	3201      	adds	r2, #1
 80150c0:	428a      	cmp	r2, r1
 80150c2:	9208      	str	r2, [sp, #32]
 80150c4:	f040 8091 	bne.w	80151ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 80150c8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80150cc:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 80150d0:	9b04      	ldr	r3, [sp, #16]
 80150d2:	eba5 050c 	sub.w	r5, r5, ip
 80150d6:	b2ad      	uxth	r5, r5
 80150d8:	2d00      	cmp	r5, #0
 80150da:	bf08      	it	eq
 80150dc:	4619      	moveq	r1, r3
 80150de:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80150e0:	bf18      	it	ne
 80150e2:	2100      	movne	r1, #0
 80150e4:	3301      	adds	r3, #1
 80150e6:	b289      	uxth	r1, r1
 80150e8:	930d      	str	r3, [sp, #52]	@ 0x34
 80150ea:	e700      	b.n	8014eee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 80150ec:	200150c0 	.word	0x200150c0
 80150f0:	200150ba 	.word	0x200150ba
 80150f4:	fffff7fb 	.word	0xfffff7fb
 80150f8:	46d9      	mov	r9, fp
 80150fa:	9d00      	ldr	r5, [sp, #0]
 80150fc:	42aa      	cmp	r2, r5
 80150fe:	d0d1      	beq.n	80150a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 8015100:	1c55      	adds	r5, r2, #1
 8015102:	4422      	add	r2, r4
 8015104:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8015108:	9a06      	ldr	r2, [sp, #24]
 801510a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801510e:	9517      	str	r5, [sp, #92]	@ 0x5c
 8015110:	4472      	add	r2, lr
 8015112:	9212      	str	r2, [sp, #72]	@ 0x48
 8015114:	f8b9 2000 	ldrh.w	r2, [r9]
 8015118:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801511a:	1216      	asrs	r6, r2, #8
 801511c:	f897 a002 	ldrb.w	sl, [r7, #2]
 8015120:	10d5      	asrs	r5, r2, #3
 8015122:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8015124:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015128:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801512c:	00d2      	lsls	r2, r2, #3
 801512e:	fb1a fa07 	smulbb	sl, sl, r7
 8015132:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8015136:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8015138:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801513c:	b2d2      	uxtb	r2, r2
 801513e:	fb06 a607 	mla	r6, r6, r7, sl
 8015142:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8015144:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8015148:	f897 a001 	ldrb.w	sl, [r7, #1]
 801514c:	b2b6      	uxth	r6, r6
 801514e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8015150:	fb1a fa07 	smulbb	sl, sl, r7
 8015154:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8015156:	fb05 a507 	mla	r5, r5, r7, sl
 801515a:	9f06      	ldr	r7, [sp, #24]
 801515c:	f106 0a01 	add.w	sl, r6, #1
 8015160:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8015164:	b2ad      	uxth	r5, r5
 8015166:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8015168:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801516c:	f105 0a01 	add.w	sl, r5, #1
 8015170:	fb1e fe07 	smulbb	lr, lr, r7
 8015174:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8015176:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801517a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801517e:	fb02 e207 	mla	r2, r2, r7, lr
 8015182:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015186:	b292      	uxth	r2, r2
 8015188:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801518c:	f102 0e01 	add.w	lr, r2, #1
 8015190:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8015194:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8015198:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801519c:	ea4e 0606 	orr.w	r6, lr, r6
 80151a0:	ea46 060a 	orr.w	r6, r6, sl
 80151a4:	f829 6b02 	strh.w	r6, [r9], #2
 80151a8:	e7a7      	b.n	80150fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 80151aa:	f102 0e01 	add.w	lr, r2, #1
 80151ae:	4422      	add	r2, r4
 80151b0:	9f06      	ldr	r7, [sp, #24]
 80151b2:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 80151b6:	9a06      	ldr	r2, [sp, #24]
 80151b8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80151bc:	eb02 0a05 	add.w	sl, r2, r5
 80151c0:	4a13      	ldr	r2, [pc, #76]	@ (8015210 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 80151c2:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80151c6:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80151ca:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80151ce:	00d2      	lsls	r2, r2, #3
 80151d0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80151d4:	ea49 0202 	orr.w	r2, r9, r2
 80151d8:	f817 9005 	ldrb.w	r9, [r7, r5]
 80151dc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80151e0:	f826 2b02 	strh.w	r2, [r6], #2
 80151e4:	fa1f f28e 	uxth.w	r2, lr
 80151e8:	e758      	b.n	801509c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 80151ea:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80151ee:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80151f2:	1a2d      	subs	r5, r5, r0
 80151f4:	b2ad      	uxth	r5, r5
 80151f6:	2d00      	cmp	r5, #0
 80151f8:	bf18      	it	ne
 80151fa:	2000      	movne	r0, #0
 80151fc:	e732      	b.n	8015064 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 80151fe:	4b05      	ldr	r3, [pc, #20]	@ (8015214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 8015200:	6818      	ldr	r0, [r3, #0]
 8015202:	6803      	ldr	r3, [r0, #0]
 8015204:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015206:	4798      	blx	r3
 8015208:	b01f      	add	sp, #124	@ 0x7c
 801520a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801520e:	bf00      	nop
 8015210:	fffff800 	.word	0xfffff800
 8015214:	200150c0 	.word	0x200150c0

08015218 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8015218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801521c:	b091      	sub	sp, #68	@ 0x44
 801521e:	469b      	mov	fp, r3
 8015220:	4616      	mov	r6, r2
 8015222:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015226:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801522a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801522e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 8015232:	4604      	mov	r4, r0
 8015234:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8015238:	4640      	mov	r0, r8
 801523a:	460d      	mov	r5, r1
 801523c:	4659      	mov	r1, fp
 801523e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8015242:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8015246:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801524a:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801524e:	f7f5 fb17 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 8015252:	4631      	mov	r1, r6
 8015254:	4640      	mov	r0, r8
 8015256:	f7f5 fb13 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 801525a:	4b74      	ldr	r3, [pc, #464]	@ (801542c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801525c:	8818      	ldrh	r0, [r3, #0]
 801525e:	4b74      	ldr	r3, [pc, #464]	@ (8015430 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8015260:	b202      	sxth	r2, r0
 8015262:	8819      	ldrh	r1, [r3, #0]
 8015264:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8015268:	b20e      	sxth	r6, r1
 801526a:	2b00      	cmp	r3, #0
 801526c:	da07      	bge.n	801527e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801526e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8015272:	4463      	add	r3, ip
 8015274:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8015278:	2300      	movs	r3, #0
 801527a:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801527e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8015282:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8015286:	1ad2      	subs	r2, r2, r3
 8015288:	4594      	cmp	ip, r2
 801528a:	bfc4      	itt	gt
 801528c:	1ac2      	subgt	r2, r0, r3
 801528e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8015292:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8015296:	2a00      	cmp	r2, #0
 8015298:	da07      	bge.n	80152aa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801529a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801529e:	4462      	add	r2, ip
 80152a0:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80152a4:	2200      	movs	r2, #0
 80152a6:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80152aa:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 80152ae:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80152b2:	eba6 060a 	sub.w	r6, r6, sl
 80152b6:	42b2      	cmp	r2, r6
 80152b8:	bfc4      	itt	gt
 80152ba:	eba1 020a 	subgt.w	r2, r1, sl
 80152be:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 80152c2:	4a5c      	ldr	r2, [pc, #368]	@ (8015434 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80152c4:	7812      	ldrb	r2, [r2, #0]
 80152c6:	b9a2      	cbnz	r2, 80152f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80152c8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80152cc:	4286      	cmp	r6, r0
 80152ce:	4640      	mov	r0, r8
 80152d0:	9303      	str	r3, [sp, #12]
 80152d2:	bf14      	ite	ne
 80152d4:	2600      	movne	r6, #0
 80152d6:	2601      	moveq	r6, #1
 80152d8:	f7f5 fb15 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 80152dc:	9b03      	ldr	r3, [sp, #12]
 80152de:	b160      	cbz	r0, 80152fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80152e0:	2300      	movs	r3, #0
 80152e2:	8023      	strh	r3, [r4, #0]
 80152e4:	8063      	strh	r3, [r4, #2]
 80152e6:	80a3      	strh	r3, [r4, #4]
 80152e8:	4620      	mov	r0, r4
 80152ea:	80e3      	strh	r3, [r4, #6]
 80152ec:	b011      	add	sp, #68	@ 0x44
 80152ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152f2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80152f6:	428e      	cmp	r6, r1
 80152f8:	e7e9      	b.n	80152ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80152fa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80152fe:	a90e      	add	r1, sp, #56	@ 0x38
 8015300:	900e      	str	r0, [sp, #56]	@ 0x38
 8015302:	a80c      	add	r0, sp, #48	@ 0x30
 8015304:	9205      	str	r2, [sp, #20]
 8015306:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801530a:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801530e:	9206      	str	r2, [sp, #24]
 8015310:	f8bb 2000 	ldrh.w	r2, [fp]
 8015314:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8015318:	1a9b      	subs	r3, r3, r2
 801531a:	b21b      	sxth	r3, r3
 801531c:	9303      	str	r3, [sp, #12]
 801531e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8015322:	f8df b118 	ldr.w	fp, [pc, #280]	@ 801543c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8015326:	ebaa 0a03 	sub.w	sl, sl, r3
 801532a:	fa0f f38a 	sxth.w	r3, sl
 801532e:	9304      	str	r3, [sp, #16]
 8015330:	9b03      	ldr	r3, [sp, #12]
 8015332:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8015336:	9b04      	ldr	r3, [sp, #16]
 8015338:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801533c:	9b05      	ldr	r3, [sp, #20]
 801533e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8015342:	9b06      	ldr	r3, [sp, #24]
 8015344:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8015348:	f7f8 fcea 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801534c:	4640      	mov	r0, r8
 801534e:	f7f8 fcbf 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015352:	a80e      	add	r0, sp, #56	@ 0x38
 8015354:	f7f8 fcbc 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015358:	4b37      	ldr	r3, [pc, #220]	@ (8015438 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801535a:	4628      	mov	r0, r5
 801535c:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8015360:	881b      	ldrh	r3, [r3, #0]
 8015362:	9307      	str	r3, [sp, #28]
 8015364:	682b      	ldr	r3, [r5, #0]
 8015366:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015368:	4798      	blx	r3
 801536a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801536e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8015372:	4681      	mov	r9, r0
 8015374:	f8db 0000 	ldr.w	r0, [fp]
 8015378:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801537c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801537e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8015382:	6803      	ldr	r3, [r0, #0]
 8015384:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015386:	4798      	blx	r3
 8015388:	4607      	mov	r7, r0
 801538a:	f8db 0000 	ldr.w	r0, [fp]
 801538e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8015392:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8015396:	6803      	ldr	r3, [r0, #0]
 8015398:	9109      	str	r1, [sp, #36]	@ 0x24
 801539a:	9208      	str	r2, [sp, #32]
 801539c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801539e:	4798      	blx	r3
 80153a0:	f010 0f01 	tst.w	r0, #1
 80153a4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80153a8:	d012      	beq.n	80153d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80153aa:	f8db 0000 	ldr.w	r0, [fp]
 80153ae:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80153b2:	6803      	ldr	r3, [r0, #0]
 80153b4:	9200      	str	r2, [sp, #0]
 80153b6:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 80153b8:	462b      	mov	r3, r5
 80153ba:	e898 0006 	ldmia.w	r8, {r1, r2}
 80153be:	47b0      	blx	r6
 80153c0:	9b03      	ldr	r3, [sp, #12]
 80153c2:	8023      	strh	r3, [r4, #0]
 80153c4:	9b04      	ldr	r3, [sp, #16]
 80153c6:	8063      	strh	r3, [r4, #2]
 80153c8:	9b05      	ldr	r3, [sp, #20]
 80153ca:	80a3      	strh	r3, [r4, #4]
 80153cc:	9b06      	ldr	r3, [sp, #24]
 80153ce:	e78b      	b.n	80152e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80153d0:	fb09 f202 	mul.w	r2, r9, r2
 80153d4:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 80153d8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80153dc:	440f      	add	r7, r1
 80153de:	b166      	cbz	r6, 80153fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80153e0:	9a07      	ldr	r2, [sp, #28]
 80153e2:	4592      	cmp	sl, r2
 80153e4:	d109      	bne.n	80153fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80153e6:	f8db 0000 	ldr.w	r0, [fp]
 80153ea:	fb09 f303 	mul.w	r3, r9, r3
 80153ee:	4629      	mov	r1, r5
 80153f0:	6802      	ldr	r2, [r0, #0]
 80153f2:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 80153f4:	463a      	mov	r2, r7
 80153f6:	47b0      	blx	r6
 80153f8:	e7e2      	b.n	80153c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80153fa:	fb0a f303 	mul.w	r3, sl, r3
 80153fe:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8015402:	f8df b038 	ldr.w	fp, [pc, #56]	@ 801543c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8015406:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801540a:	4545      	cmp	r5, r8
 801540c:	d2d8      	bcs.n	80153c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801540e:	f8db 0000 	ldr.w	r0, [fp]
 8015412:	4629      	mov	r1, r5
 8015414:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8015418:	4435      	add	r5, r6
 801541a:	6802      	ldr	r2, [r0, #0]
 801541c:	005b      	lsls	r3, r3, #1
 801541e:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 8015422:	463a      	mov	r2, r7
 8015424:	47d0      	blx	sl
 8015426:	444f      	add	r7, r9
 8015428:	e7ef      	b.n	801540a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801542a:	bf00      	nop
 801542c:	200150b4 	.word	0x200150b4
 8015430:	200150b6 	.word	0x200150b6
 8015434:	200150b8 	.word	0x200150b8
 8015438:	200150ba 	.word	0x200150ba
 801543c:	200150c0 	.word	0x200150c0

08015440 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8015440:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015442:	4606      	mov	r6, r0
 8015444:	b087      	sub	sp, #28
 8015446:	460c      	mov	r4, r1
 8015448:	4617      	mov	r7, r2
 801544a:	461d      	mov	r5, r3
 801544c:	b333      	cbz	r3, 801549c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801544e:	4608      	mov	r0, r1
 8015450:	f7f5 fa59 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015454:	bb10      	cbnz	r0, 801549c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8015456:	6820      	ldr	r0, [r4, #0]
 8015458:	ab04      	add	r3, sp, #16
 801545a:	6861      	ldr	r1, [r4, #4]
 801545c:	4c1b      	ldr	r4, [pc, #108]	@ (80154cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801545e:	c303      	stmia	r3!, {r0, r1}
 8015460:	a804      	add	r0, sp, #16
 8015462:	f7f8 fc35 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015466:	6820      	ldr	r0, [r4, #0]
 8015468:	6803      	ldr	r3, [r0, #0]
 801546a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801546c:	4798      	blx	r3
 801546e:	2dff      	cmp	r5, #255	@ 0xff
 8015470:	d016      	beq.n	80154a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8015472:	f010 0f08 	tst.w	r0, #8
 8015476:	6820      	ldr	r0, [r4, #0]
 8015478:	d015      	beq.n	80154a6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801547a:	2400      	movs	r4, #0
 801547c:	6801      	ldr	r1, [r0, #0]
 801547e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8015482:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015486:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801548a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801548e:	9401      	str	r4, [sp, #4]
 8015490:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8015494:	9400      	str	r4, [sp, #0]
 8015496:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 8015498:	4639      	mov	r1, r7
 801549a:	47a0      	blx	r4
 801549c:	b007      	add	sp, #28
 801549e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80154a0:	f010 0f02 	tst.w	r0, #2
 80154a4:	e7e7      	b.n	8015476 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80154a6:	6803      	ldr	r3, [r0, #0]
 80154a8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80154aa:	4798      	blx	r3
 80154ac:	4b08      	ldr	r3, [pc, #32]	@ (80154d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80154ae:	4601      	mov	r1, r0
 80154b0:	4630      	mov	r0, r6
 80154b2:	881a      	ldrh	r2, [r3, #0]
 80154b4:	6833      	ldr	r3, [r6, #0]
 80154b6:	e9cd 7500 	strd	r7, r5, [sp]
 80154ba:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 80154bc:	ab04      	add	r3, sp, #16
 80154be:	47a8      	blx	r5
 80154c0:	6820      	ldr	r0, [r4, #0]
 80154c2:	6803      	ldr	r3, [r0, #0]
 80154c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80154c6:	4798      	blx	r3
 80154c8:	e7e8      	b.n	801549c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80154ca:	bf00      	nop
 80154cc:	200150c0 	.word	0x200150c0
 80154d0:	200150ba 	.word	0x200150ba

080154d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80154d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80154d8:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 80154dc:	4688      	mov	r8, r1
 80154de:	4614      	mov	r4, r2
 80154e0:	461d      	mov	r5, r3
 80154e2:	9e08      	ldr	r6, [sp, #32]
 80154e4:	2f00      	cmp	r7, #0
 80154e6:	f000 80ab 	beq.w	8015640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80154ea:	4618      	mov	r0, r3
 80154ec:	f7f5 fa0b 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 80154f0:	2800      	cmp	r0, #0
 80154f2:	f040 80a5 	bne.w	8015640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80154f6:	f9b5 1000 	ldrsh.w	r1, [r5]
 80154fa:	2fff      	cmp	r7, #255	@ 0xff
 80154fc:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015500:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8015504:	fb04 1303 	mla	r3, r4, r3, r1
 8015508:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801550c:	eba4 0200 	sub.w	r2, r4, r0
 8015510:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8015514:	fb04 f505 	mul.w	r5, r4, r5
 8015518:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801551c:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8015520:	d04a      	beq.n	80155b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8015522:	b2bc      	uxth	r4, r7
 8015524:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8015528:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801552c:	fa5f f788 	uxtb.w	r7, r8
 8015530:	b2f3      	uxtb	r3, r6
 8015532:	0040      	lsls	r0, r0, #1
 8015534:	fb0e fe04 	mul.w	lr, lr, r4
 8015538:	4367      	muls	r7, r4
 801553a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801553e:	4363      	muls	r3, r4
 8015540:	fa1f fc8c 	uxth.w	ip, ip
 8015544:	42a9      	cmp	r1, r5
 8015546:	d27b      	bcs.n	8015640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8015548:	eb01 0900 	add.w	r9, r1, r0
 801554c:	4549      	cmp	r1, r9
 801554e:	d231      	bcs.n	80155b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8015550:	880a      	ldrh	r2, [r1, #0]
 8015552:	1214      	asrs	r4, r2, #8
 8015554:	10d6      	asrs	r6, r2, #3
 8015556:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801555a:	00d2      	lsls	r2, r2, #3
 801555c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015560:	b2d2      	uxtb	r2, r2
 8015562:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8015566:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801556a:	fb14 f40c 	smulbb	r4, r4, ip
 801556e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8015572:	fb12 f20c 	smulbb	r2, r2, ip
 8015576:	fb16 f60c 	smulbb	r6, r6, ip
 801557a:	4474      	add	r4, lr
 801557c:	441a      	add	r2, r3
 801557e:	b2a4      	uxth	r4, r4
 8015580:	443e      	add	r6, r7
 8015582:	b292      	uxth	r2, r2
 8015584:	f104 0a01 	add.w	sl, r4, #1
 8015588:	b2b6      	uxth	r6, r6
 801558a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801558e:	f102 0a01 	add.w	sl, r2, #1
 8015592:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8015596:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801559a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801559e:	4322      	orrs	r2, r4
 80155a0:	1c74      	adds	r4, r6, #1
 80155a2:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80155a6:	0976      	lsrs	r6, r6, #5
 80155a8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80155ac:	4332      	orrs	r2, r6
 80155ae:	f821 2b02 	strh.w	r2, [r1], #2
 80155b2:	e7cb      	b.n	801554c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 80155b4:	4441      	add	r1, r8
 80155b6:	e7c5      	b.n	8015544 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 80155b8:	0973      	lsrs	r3, r6, #5
 80155ba:	4f22      	ldr	r7, [pc, #136]	@ (8015644 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 80155bc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80155c0:	ea08 0707 	and.w	r7, r8, r7
 80155c4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80155c8:	433b      	orrs	r3, r7
 80155ca:	07e7      	lsls	r7, r4, #31
 80155cc:	ea43 0306 	orr.w	r3, r3, r6
 80155d0:	b29b      	uxth	r3, r3
 80155d2:	d50b      	bpl.n	80155ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 80155d4:	0040      	lsls	r0, r0, #1
 80155d6:	0052      	lsls	r2, r2, #1
 80155d8:	42a9      	cmp	r1, r5
 80155da:	d231      	bcs.n	8015640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80155dc:	180c      	adds	r4, r1, r0
 80155de:	42a1      	cmp	r1, r4
 80155e0:	d202      	bcs.n	80155e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80155e2:	f821 3b02 	strh.w	r3, [r1], #2
 80155e6:	e7fa      	b.n	80155de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 80155e8:	4411      	add	r1, r2
 80155ea:	e7f5      	b.n	80155d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 80155ec:	078e      	lsls	r6, r1, #30
 80155ee:	d008      	beq.n	8015602 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 80155f0:	0066      	lsls	r6, r4, #1
 80155f2:	460a      	mov	r2, r1
 80155f4:	42aa      	cmp	r2, r5
 80155f6:	d202      	bcs.n	80155fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80155f8:	8013      	strh	r3, [r2, #0]
 80155fa:	4432      	add	r2, r6
 80155fc:	e7fa      	b.n	80155f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 80155fe:	3102      	adds	r1, #2
 8015600:	3801      	subs	r0, #1
 8015602:	07c2      	lsls	r2, r0, #31
 8015604:	d50b      	bpl.n	801561e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 8015606:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801560a:	0066      	lsls	r6, r4, #1
 801560c:	3a01      	subs	r2, #1
 801560e:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8015612:	42aa      	cmp	r2, r5
 8015614:	d202      	bcs.n	801561c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8015616:	8013      	strh	r3, [r2, #0]
 8015618:	4432      	add	r2, r6
 801561a:	e7fa      	b.n	8015612 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 801561c:	3801      	subs	r0, #1
 801561e:	b178      	cbz	r0, 8015640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8015620:	1040      	asrs	r0, r0, #1
 8015622:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8015626:	0080      	lsls	r0, r0, #2
 8015628:	0064      	lsls	r4, r4, #1
 801562a:	42a9      	cmp	r1, r5
 801562c:	d208      	bcs.n	8015640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801562e:	180e      	adds	r6, r1, r0
 8015630:	460a      	mov	r2, r1
 8015632:	42b2      	cmp	r2, r6
 8015634:	d202      	bcs.n	801563c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8015636:	f842 3b04 	str.w	r3, [r2], #4
 801563a:	e7fa      	b.n	8015632 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 801563c:	4421      	add	r1, r4
 801563e:	e7f4      	b.n	801562a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 8015640:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015644:	00fff800 	.word	0x00fff800

08015648 <_ZN8touchgfx8LCD16bppC1Ev>:
 8015648:	2200      	movs	r2, #0
 801564a:	4912      	ldr	r1, [pc, #72]	@ (8015694 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801564c:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8015650:	6001      	str	r1, [r0, #0]
 8015652:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8015656:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801565a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801565e:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8015662:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8015666:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801566a:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801566e:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8015672:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8015676:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801567a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801567e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8015682:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8015686:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801568a:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801568e:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 8015692:	4770      	bx	lr
 8015694:	08021a0c 	.word	0x08021a0c

08015698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8015698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801569c:	b08d      	sub	sp, #52	@ 0x34
 801569e:	460d      	mov	r5, r1
 80156a0:	4604      	mov	r4, r0
 80156a2:	4699      	mov	r9, r3
 80156a4:	6808      	ldr	r0, [r1, #0]
 80156a6:	ab08      	add	r3, sp, #32
 80156a8:	6849      	ldr	r1, [r1, #4]
 80156aa:	c303      	stmia	r3!, {r0, r1}
 80156ac:	6810      	ldr	r0, [r2, #0]
 80156ae:	ab0a      	add	r3, sp, #40	@ 0x28
 80156b0:	6851      	ldr	r1, [r2, #4]
 80156b2:	c303      	stmia	r3!, {r0, r1}
 80156b4:	a808      	add	r0, sp, #32
 80156b6:	f7f8 fb0b 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80156ba:	4629      	mov	r1, r5
 80156bc:	a80a      	add	r0, sp, #40	@ 0x28
 80156be:	4d67      	ldr	r5, [pc, #412]	@ (801585c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80156c0:	f7f8 fb2e 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80156c4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80156c8:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 80156cc:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 80156d0:	6828      	ldr	r0, [r5, #0]
 80156d2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80156d6:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 80156da:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80156de:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80156e2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80156e6:	440a      	add	r2, r1
 80156e8:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80156ec:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 80156f0:	4413      	add	r3, r2
 80156f2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80156f6:	6803      	ldr	r3, [r0, #0]
 80156f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80156fa:	4798      	blx	r3
 80156fc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8015700:	d119      	bne.n	8015736 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8015702:	f010 0f20 	tst.w	r0, #32
 8015706:	6828      	ldr	r0, [r5, #0]
 8015708:	d018      	beq.n	801573c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801570a:	2500      	movs	r5, #0
 801570c:	6801      	ldr	r1, [r0, #0]
 801570e:	b2b6      	uxth	r6, r6
 8015710:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8015714:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8015718:	9601      	str	r6, [sp, #4]
 801571a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801571e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8015722:	9502      	str	r5, [sp, #8]
 8015724:	fa1f f588 	uxth.w	r5, r8
 8015728:	9500      	str	r5, [sp, #0]
 801572a:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 801572c:	4621      	mov	r1, r4
 801572e:	47a8      	blx	r5
 8015730:	b00d      	add	sp, #52	@ 0x34
 8015732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015736:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801573a:	e7e4      	b.n	8015706 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801573c:	6803      	ldr	r3, [r0, #0]
 801573e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015740:	4798      	blx	r3
 8015742:	4947      	ldr	r1, [pc, #284]	@ (8015860 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8015744:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8015748:	880b      	ldrh	r3, [r1, #0]
 801574a:	468a      	mov	sl, r1
 801574c:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8015750:	fb03 5202 	mla	r2, r3, r2, r5
 8015754:	4373      	muls	r3, r6
 8015756:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801575a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801575e:	9307      	str	r3, [sp, #28]
 8015760:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8015764:	9306      	str	r3, [sp, #24]
 8015766:	9b07      	ldr	r3, [sp, #28]
 8015768:	4298      	cmp	r0, r3
 801576a:	d270      	bcs.n	801584e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801576c:	9b06      	ldr	r3, [sp, #24]
 801576e:	4621      	mov	r1, r4
 8015770:	eb00 0b03 	add.w	fp, r0, r3
 8015774:	4558      	cmp	r0, fp
 8015776:	d25d      	bcs.n	8015834 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8015778:	f851 4b04 	ldr.w	r4, [r1], #4
 801577c:	0e23      	lsrs	r3, r4, #24
 801577e:	d014      	beq.n	80157aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8015780:	2bff      	cmp	r3, #255	@ 0xff
 8015782:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8015786:	d112      	bne.n	80157ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8015788:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801578c:	d10f      	bne.n	80157ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801578e:	0963      	lsrs	r3, r4, #5
 8015790:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8015794:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015798:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801579c:	f02c 0c07 	bic.w	ip, ip, #7
 80157a0:	ea43 0c0c 	orr.w	ip, r3, ip
 80157a4:	ea4c 0404 	orr.w	r4, ip, r4
 80157a8:	8004      	strh	r4, [r0, #0]
 80157aa:	3002      	adds	r0, #2
 80157ac:	e7e2      	b.n	8015774 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80157ae:	fb09 f303 	mul.w	r3, r9, r3
 80157b2:	8807      	ldrh	r7, [r0, #0]
 80157b4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80157b8:	fa5f fc8c 	uxtb.w	ip, ip
 80157bc:	1c5a      	adds	r2, r3, #1
 80157be:	123e      	asrs	r6, r7, #8
 80157c0:	10fd      	asrs	r5, r7, #3
 80157c2:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80157c6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80157ca:	00ff      	lsls	r7, r7, #3
 80157cc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80157d0:	1212      	asrs	r2, r2, #8
 80157d2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80157d6:	b293      	uxth	r3, r2
 80157d8:	43d2      	mvns	r2, r2
 80157da:	b2ff      	uxtb	r7, r7
 80157dc:	fb1e fe03 	smulbb	lr, lr, r3
 80157e0:	b2d2      	uxtb	r2, r2
 80157e2:	fb1c fc03 	smulbb	ip, ip, r3
 80157e6:	b2e4      	uxtb	r4, r4
 80157e8:	fb06 e602 	mla	r6, r6, r2, lr
 80157ec:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80157f0:	fb14 f403 	smulbb	r4, r4, r3
 80157f4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80157f8:	b2b6      	uxth	r6, r6
 80157fa:	fb05 c502 	mla	r5, r5, r2, ip
 80157fe:	fb07 4702 	mla	r7, r7, r2, r4
 8015802:	f106 0e01 	add.w	lr, r6, #1
 8015806:	b2ad      	uxth	r5, r5
 8015808:	b2bf      	uxth	r7, r7
 801580a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801580e:	f105 0c01 	add.w	ip, r5, #1
 8015812:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8015816:	1c7e      	adds	r6, r7, #1
 8015818:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801581c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8015820:	096d      	lsrs	r5, r5, #5
 8015822:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015826:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801582a:	ea46 060e 	orr.w	r6, r6, lr
 801582e:	432e      	orrs	r6, r5
 8015830:	8006      	strh	r6, [r0, #0]
 8015832:	e7ba      	b.n	80157aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8015834:	f8ba 3000 	ldrh.w	r3, [sl]
 8015838:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801583c:	eba3 0308 	sub.w	r3, r3, r8
 8015840:	eba4 0408 	sub.w	r4, r4, r8
 8015844:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015848:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801584c:	e78b      	b.n	8015766 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801584e:	4b03      	ldr	r3, [pc, #12]	@ (801585c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8015850:	6818      	ldr	r0, [r3, #0]
 8015852:	6803      	ldr	r3, [r0, #0]
 8015854:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015856:	4798      	blx	r3
 8015858:	e76a      	b.n	8015730 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801585a:	bf00      	nop
 801585c:	200150c0 	.word	0x200150c0
 8015860:	200150ba 	.word	0x200150ba

08015864 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8015864:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015868:	b085      	sub	sp, #20
 801586a:	6810      	ldr	r0, [r2, #0]
 801586c:	460c      	mov	r4, r1
 801586e:	6851      	ldr	r1, [r2, #4]
 8015870:	466d      	mov	r5, sp
 8015872:	4616      	mov	r6, r2
 8015874:	c503      	stmia	r5!, {r0, r1}
 8015876:	6818      	ldr	r0, [r3, #0]
 8015878:	6859      	ldr	r1, [r3, #4]
 801587a:	c503      	stmia	r5!, {r0, r1}
 801587c:	4668      	mov	r0, sp
 801587e:	4d2e      	ldr	r5, [pc, #184]	@ (8015938 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8015880:	f7f8 fa26 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015884:	4631      	mov	r1, r6
 8015886:	a802      	add	r0, sp, #8
 8015888:	4e2c      	ldr	r6, [pc, #176]	@ (801593c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801588a:	f7f8 fa49 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801588e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8015892:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8015896:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801589a:	6828      	ldr	r0, [r5, #0]
 801589c:	fb11 2103 	smlabb	r1, r1, r3, r2
 80158a0:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80158a4:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80158a8:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80158ac:	f8bd 1000 	ldrh.w	r1, [sp]
 80158b0:	440a      	add	r2, r1
 80158b2:	f8ad 2008 	strh.w	r2, [sp, #8]
 80158b6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80158ba:	4413      	add	r3, r2
 80158bc:	f8ad 300a 	strh.w	r3, [sp, #10]
 80158c0:	6803      	ldr	r3, [r0, #0]
 80158c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80158c4:	4798      	blx	r3
 80158c6:	8833      	ldrh	r3, [r6, #0]
 80158c8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80158cc:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80158d0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80158d4:	f8df e068 	ldr.w	lr, [pc, #104]	@ 8015940 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80158d8:	fb03 1202 	mla	r2, r3, r2, r1
 80158dc:	fb08 f303 	mul.w	r3, r8, r3
 80158e0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80158e4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80158e8:	4298      	cmp	r0, r3
 80158ea:	d21d      	bcs.n	8015928 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80158ec:	eb00 080c 	add.w	r8, r0, ip
 80158f0:	4540      	cmp	r0, r8
 80158f2:	d20f      	bcs.n	8015914 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80158f4:	f854 1b04 	ldr.w	r1, [r4], #4
 80158f8:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80158fc:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8015900:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8015904:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8015908:	ea42 0209 	orr.w	r2, r2, r9
 801590c:	430a      	orrs	r2, r1
 801590e:	f820 2b02 	strh.w	r2, [r0], #2
 8015912:	e7ed      	b.n	80158f0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8015914:	8832      	ldrh	r2, [r6, #0]
 8015916:	1bd2      	subs	r2, r2, r7
 8015918:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801591c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8015920:	1bd2      	subs	r2, r2, r7
 8015922:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8015926:	e7df      	b.n	80158e8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8015928:	6828      	ldr	r0, [r5, #0]
 801592a:	6803      	ldr	r3, [r0, #0]
 801592c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801592e:	4798      	blx	r3
 8015930:	b005      	add	sp, #20
 8015932:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015936:	bf00      	nop
 8015938:	200150c0 	.word	0x200150c0
 801593c:	200150ba 	.word	0x200150ba
 8015940:	fffff800 	.word	0xfffff800

08015944 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8015944:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015948:	b08e      	sub	sp, #56	@ 0x38
 801594a:	460e      	mov	r6, r1
 801594c:	4604      	mov	r4, r0
 801594e:	461d      	mov	r5, r3
 8015950:	6808      	ldr	r0, [r1, #0]
 8015952:	ab0a      	add	r3, sp, #40	@ 0x28
 8015954:	6849      	ldr	r1, [r1, #4]
 8015956:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 8015b2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801595a:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 8015b30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801595e:	c303      	stmia	r3!, {r0, r1}
 8015960:	6810      	ldr	r0, [r2, #0]
 8015962:	ab0c      	add	r3, sp, #48	@ 0x30
 8015964:	6851      	ldr	r1, [r2, #4]
 8015966:	c303      	stmia	r3!, {r0, r1}
 8015968:	a80a      	add	r0, sp, #40	@ 0x28
 801596a:	f7f8 f9b1 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801596e:	4631      	mov	r1, r6
 8015970:	a80c      	add	r0, sp, #48	@ 0x30
 8015972:	f7f8 f9d5 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015976:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801597a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801597e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8015982:	f8d8 0000 	ldr.w	r0, [r8]
 8015986:	fb11 2103 	smlabb	r1, r1, r3, r2
 801598a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801598e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8015992:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8015996:	440c      	add	r4, r1
 8015998:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801599c:	440a      	add	r2, r1
 801599e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80159a2:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80159a6:	4413      	add	r3, r2
 80159a8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80159ac:	6803      	ldr	r3, [r0, #0]
 80159ae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80159b0:	4798      	blx	r3
 80159b2:	2dff      	cmp	r5, #255	@ 0xff
 80159b4:	d124      	bne.n	8015a00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80159b6:	f010 0f01 	tst.w	r0, #1
 80159ba:	f8d8 0000 	ldr.w	r0, [r8]
 80159be:	d022      	beq.n	8015a06 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80159c0:	2100      	movs	r1, #0
 80159c2:	f04f 0e01 	mov.w	lr, #1
 80159c6:	f8d0 c000 	ldr.w	ip, [r0]
 80159ca:	b2b6      	uxth	r6, r6
 80159cc:	f8cd e018 	str.w	lr, [sp, #24]
 80159d0:	b2bf      	uxth	r7, r7
 80159d2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80159d6:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 80159da:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80159de:	f8b9 e000 	ldrh.w	lr, [r9]
 80159e2:	9503      	str	r5, [sp, #12]
 80159e4:	9601      	str	r6, [sp, #4]
 80159e6:	9700      	str	r7, [sp, #0]
 80159e8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80159ec:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80159f0:	9102      	str	r1, [sp, #8]
 80159f2:	4621      	mov	r1, r4
 80159f4:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 80159f8:	47a8      	blx	r5
 80159fa:	b00e      	add	sp, #56	@ 0x38
 80159fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015a00:	f010 0f04 	tst.w	r0, #4
 8015a04:	e7d9      	b.n	80159ba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8015a06:	6803      	ldr	r3, [r0, #0]
 8015a08:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015a0a:	4798      	blx	r3
 8015a0c:	f8b9 3000 	ldrh.w	r3, [r9]
 8015a10:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015a14:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8015a18:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8015a1c:	435e      	muls	r6, r3
 8015a1e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8015a22:	2dff      	cmp	r5, #255	@ 0xff
 8015a24:	fb03 1202 	mla	r2, r3, r2, r1
 8015a28:	ebac 0c07 	sub.w	ip, ip, r7
 8015a2c:	eba3 0707 	sub.w	r7, r3, r7
 8015a30:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015a34:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8015a38:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015a3c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8015a40:	d049      	beq.n	8015ad6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8015a42:	43eb      	mvns	r3, r5
 8015a44:	fa1f f985 	uxth.w	r9, r5
 8015a48:	b2db      	uxtb	r3, r3
 8015a4a:	42b0      	cmp	r0, r6
 8015a4c:	d266      	bcs.n	8015b1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8015a4e:	eb00 0a0e 	add.w	sl, r0, lr
 8015a52:	4550      	cmp	r0, sl
 8015a54:	4621      	mov	r1, r4
 8015a56:	f104 0403 	add.w	r4, r4, #3
 8015a5a:	d25b      	bcs.n	8015b14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8015a5c:	8802      	ldrh	r2, [r0, #0]
 8015a5e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8015a62:	ea4f 2822 	mov.w	r8, r2, asr #8
 8015a66:	fb11 f109 	smulbb	r1, r1, r9
 8015a6a:	10d5      	asrs	r5, r2, #3
 8015a6c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8015a70:	00d2      	lsls	r2, r2, #3
 8015a72:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015a76:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8015a7a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8015a7e:	fb08 1803 	mla	r8, r8, r3, r1
 8015a82:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8015a86:	b2d2      	uxtb	r2, r2
 8015a88:	fb11 f109 	smulbb	r1, r1, r9
 8015a8c:	fa1f f888 	uxth.w	r8, r8
 8015a90:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8015a94:	fb05 1503 	mla	r5, r5, r3, r1
 8015a98:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8015a9c:	fb11 f109 	smulbb	r1, r1, r9
 8015aa0:	b2ad      	uxth	r5, r5
 8015aa2:	fb02 1203 	mla	r2, r2, r3, r1
 8015aa6:	f108 0101 	add.w	r1, r8, #1
 8015aaa:	b292      	uxth	r2, r2
 8015aac:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8015ab0:	1c51      	adds	r1, r2, #1
 8015ab2:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8015ab6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015aba:	1c69      	adds	r1, r5, #1
 8015abc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8015ac0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015ac4:	096d      	lsrs	r5, r5, #5
 8015ac6:	ea42 0208 	orr.w	r2, r2, r8
 8015aca:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015ace:	432a      	orrs	r2, r5
 8015ad0:	f820 2b02 	strh.w	r2, [r0], #2
 8015ad4:	e7bd      	b.n	8015a52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8015ad6:	4a14      	ldr	r2, [pc, #80]	@ (8015b28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8015ad8:	42b0      	cmp	r0, r6
 8015ada:	d21f      	bcs.n	8015b1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8015adc:	eb00 050e 	add.w	r5, r0, lr
 8015ae0:	42a8      	cmp	r0, r5
 8015ae2:	4621      	mov	r1, r4
 8015ae4:	f104 0403 	add.w	r4, r4, #3
 8015ae8:	d210      	bcs.n	8015b0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8015aea:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8015aee:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8015af2:	00db      	lsls	r3, r3, #3
 8015af4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8015af8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8015afc:	430b      	orrs	r3, r1
 8015afe:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8015b02:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8015b06:	f820 3b02 	strh.w	r3, [r0], #2
 8015b0a:	e7e9      	b.n	8015ae0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8015b0c:	4438      	add	r0, r7
 8015b0e:	eb01 040c 	add.w	r4, r1, ip
 8015b12:	e7e1      	b.n	8015ad8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8015b14:	4438      	add	r0, r7
 8015b16:	eb01 040c 	add.w	r4, r1, ip
 8015b1a:	e796      	b.n	8015a4a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8015b1c:	4b03      	ldr	r3, [pc, #12]	@ (8015b2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8015b1e:	6818      	ldr	r0, [r3, #0]
 8015b20:	6803      	ldr	r3, [r0, #0]
 8015b22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015b24:	4798      	blx	r3
 8015b26:	e768      	b.n	80159fa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8015b28:	fffff800 	.word	0xfffff800
 8015b2c:	200150c0 	.word	0x200150c0
 8015b30:	200150ba 	.word	0x200150ba

08015b34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8015b34:	b4f0      	push	{r4, r5, r6, r7}
 8015b36:	4616      	mov	r6, r2
 8015b38:	461c      	mov	r4, r3
 8015b3a:	460d      	mov	r5, r1
 8015b3c:	9a04      	ldr	r2, [sp, #16]
 8015b3e:	2e01      	cmp	r6, #1
 8015b40:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015b44:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8015b48:	d012      	beq.n	8015b70 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8015b4a:	d303      	bcc.n	8015b54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8015b4c:	2e02      	cmp	r6, #2
 8015b4e:	d00a      	beq.n	8015b66 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8015b50:	bcf0      	pop	{r4, r5, r6, r7}
 8015b52:	4770      	bx	lr
 8015b54:	6805      	ldr	r5, [r0, #0]
 8015b56:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8015b5a:	68ed      	ldr	r5, [r5, #12]
 8015b5c:	4613      	mov	r3, r2
 8015b5e:	4622      	mov	r2, r4
 8015b60:	46ac      	mov	ip, r5
 8015b62:	bcf0      	pop	{r4, r5, r6, r7}
 8015b64:	4760      	bx	ip
 8015b66:	4621      	mov	r1, r4
 8015b68:	4628      	mov	r0, r5
 8015b6a:	bcf0      	pop	{r4, r5, r6, r7}
 8015b6c:	f7ff bd94 	b.w	8015698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8015b70:	4621      	mov	r1, r4
 8015b72:	4628      	mov	r0, r5
 8015b74:	bcf0      	pop	{r4, r5, r6, r7}
 8015b76:	f7ff bee5 	b.w	8015944 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08015b7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8015b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b80:	b093      	sub	sp, #76	@ 0x4c
 8015b82:	4681      	mov	r9, r0
 8015b84:	4688      	mov	r8, r1
 8015b86:	6810      	ldr	r0, [r2, #0]
 8015b88:	6851      	ldr	r1, [r2, #4]
 8015b8a:	ac0e      	add	r4, sp, #56	@ 0x38
 8015b8c:	4616      	mov	r6, r2
 8015b8e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8015b92:	4f6b      	ldr	r7, [pc, #428]	@ (8015d40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8015b94:	c403      	stmia	r4!, {r0, r1}
 8015b96:	6818      	ldr	r0, [r3, #0]
 8015b98:	ac10      	add	r4, sp, #64	@ 0x40
 8015b9a:	6859      	ldr	r1, [r3, #4]
 8015b9c:	c403      	stmia	r4!, {r0, r1}
 8015b9e:	a80e      	add	r0, sp, #56	@ 0x38
 8015ba0:	f7f8 f896 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015ba4:	4631      	mov	r1, r6
 8015ba6:	a810      	add	r0, sp, #64	@ 0x40
 8015ba8:	4e66      	ldr	r6, [pc, #408]	@ (8015d44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8015baa:	f7f8 f8b9 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015bae:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8015bb2:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8015bb6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8015bba:	6830      	ldr	r0, [r6, #0]
 8015bbc:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015bc0:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8015bc4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8015bc8:	4489      	add	r9, r1
 8015bca:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8015bce:	440a      	add	r2, r1
 8015bd0:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8015bd4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8015bd8:	4413      	add	r3, r2
 8015bda:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8015bde:	6803      	ldr	r3, [r0, #0]
 8015be0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015be2:	4798      	blx	r3
 8015be4:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8015be8:	6830      	ldr	r0, [r6, #0]
 8015bea:	d01d      	beq.n	8015c28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8015bec:	2200      	movs	r2, #0
 8015bee:	6801      	ldr	r1, [r0, #0]
 8015bf0:	b2a4      	uxth	r4, r4
 8015bf2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8015bf6:	b2ad      	uxth	r5, r5
 8015bf8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8015bfc:	220b      	movs	r2, #11
 8015bfe:	9207      	str	r2, [sp, #28]
 8015c00:	883a      	ldrh	r2, [r7, #0]
 8015c02:	9502      	str	r5, [sp, #8]
 8015c04:	9206      	str	r2, [sp, #24]
 8015c06:	2201      	movs	r2, #1
 8015c08:	9401      	str	r4, [sp, #4]
 8015c0a:	e9cd a204 	strd	sl, r2, [sp, #16]
 8015c0e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8015c12:	9203      	str	r2, [sp, #12]
 8015c14:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8015c18:	9200      	str	r2, [sp, #0]
 8015c1a:	4642      	mov	r2, r8
 8015c1c:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 8015c1e:	4649      	mov	r1, r9
 8015c20:	47a0      	blx	r4
 8015c22:	b013      	add	sp, #76	@ 0x4c
 8015c24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c28:	6803      	ldr	r3, [r0, #0]
 8015c2a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015c2c:	4798      	blx	r3
 8015c2e:	883b      	ldrh	r3, [r7, #0]
 8015c30:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8015c34:	f04f 0e04 	mov.w	lr, #4
 8015c38:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8015c3c:	435d      	muls	r5, r3
 8015c3e:	fb03 1202 	mla	r2, r3, r2, r1
 8015c42:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015c46:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8015c4a:	920c      	str	r2, [sp, #48]	@ 0x30
 8015c4c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8015c50:	1b12      	subs	r2, r2, r4
 8015c52:	920d      	str	r2, [sp, #52]	@ 0x34
 8015c54:	0062      	lsls	r2, r4, #1
 8015c56:	1b1c      	subs	r4, r3, r4
 8015c58:	920a      	str	r2, [sp, #40]	@ 0x28
 8015c5a:	0063      	lsls	r3, r4, #1
 8015c5c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8015c5e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015c60:	4298      	cmp	r0, r3
 8015c62:	d266      	bcs.n	8015d32 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8015c64:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015c66:	eb00 0b03 	add.w	fp, r0, r3
 8015c6a:	4558      	cmp	r0, fp
 8015c6c:	d25c      	bcs.n	8015d28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8015c6e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8015c72:	fb1e e303 	smlabb	r3, lr, r3, lr
 8015c76:	f858 2003 	ldr.w	r2, [r8, r3]
 8015c7a:	0e11      	lsrs	r1, r2, #24
 8015c7c:	d012      	beq.n	8015ca4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8015c7e:	29ff      	cmp	r1, #255	@ 0xff
 8015c80:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8015c84:	d110      	bne.n	8015ca8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8015c86:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8015c8a:	d10d      	bne.n	8015ca8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8015c8c:	0953      	lsrs	r3, r2, #5
 8015c8e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8015c92:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015c96:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8015c9a:	f027 0707 	bic.w	r7, r7, #7
 8015c9e:	431f      	orrs	r7, r3
 8015ca0:	433a      	orrs	r2, r7
 8015ca2:	8002      	strh	r2, [r0, #0]
 8015ca4:	3002      	adds	r0, #2
 8015ca6:	e7e0      	b.n	8015c6a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8015ca8:	fb0a f101 	mul.w	r1, sl, r1
 8015cac:	8806      	ldrh	r6, [r0, #0]
 8015cae:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8015cb2:	b2d2      	uxtb	r2, r2
 8015cb4:	1c4b      	adds	r3, r1, #1
 8015cb6:	1235      	asrs	r5, r6, #8
 8015cb8:	10f4      	asrs	r4, r6, #3
 8015cba:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8015cbe:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8015cc2:	00f6      	lsls	r6, r6, #3
 8015cc4:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8015cc8:	121b      	asrs	r3, r3, #8
 8015cca:	b2f6      	uxtb	r6, r6
 8015ccc:	b299      	uxth	r1, r3
 8015cce:	43db      	mvns	r3, r3
 8015cd0:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8015cd4:	fb1c fc01 	smulbb	ip, ip, r1
 8015cd8:	b2db      	uxtb	r3, r3
 8015cda:	fb12 f201 	smulbb	r2, r2, r1
 8015cde:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8015ce2:	fb05 c503 	mla	r5, r5, r3, ip
 8015ce6:	b2ff      	uxtb	r7, r7
 8015ce8:	fb06 2203 	mla	r2, r6, r3, r2
 8015cec:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8015cf0:	fb17 f701 	smulbb	r7, r7, r1
 8015cf4:	b2ad      	uxth	r5, r5
 8015cf6:	b292      	uxth	r2, r2
 8015cf8:	fb04 7403 	mla	r4, r4, r3, r7
 8015cfc:	f105 0c01 	add.w	ip, r5, #1
 8015d00:	1c57      	adds	r7, r2, #1
 8015d02:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8015d06:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8015d0a:	b2a4      	uxth	r4, r4
 8015d0c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8015d10:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015d14:	433d      	orrs	r5, r7
 8015d16:	1c67      	adds	r7, r4, #1
 8015d18:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8015d1c:	0964      	lsrs	r4, r4, #5
 8015d1e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8015d22:	4325      	orrs	r5, r4
 8015d24:	8005      	strh	r5, [r0, #0]
 8015d26:	e7bd      	b.n	8015ca4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8015d28:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015d2a:	4418      	add	r0, r3
 8015d2c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015d2e:	4499      	add	r9, r3
 8015d30:	e795      	b.n	8015c5e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8015d32:	4b04      	ldr	r3, [pc, #16]	@ (8015d44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8015d34:	6818      	ldr	r0, [r3, #0]
 8015d36:	6803      	ldr	r3, [r0, #0]
 8015d38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015d3a:	4798      	blx	r3
 8015d3c:	e771      	b.n	8015c22 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8015d3e:	bf00      	nop
 8015d40:	200150ba 	.word	0x200150ba
 8015d44:	200150c0 	.word	0x200150c0

08015d48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8015d48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d4c:	b087      	sub	sp, #28
 8015d4e:	4680      	mov	r8, r0
 8015d50:	460d      	mov	r5, r1
 8015d52:	4614      	mov	r4, r2
 8015d54:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8015d58:	2e00      	cmp	r6, #0
 8015d5a:	f000 80b9 	beq.w	8015ed0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8015d5e:	6810      	ldr	r0, [r2, #0]
 8015d60:	af02      	add	r7, sp, #8
 8015d62:	6851      	ldr	r1, [r2, #4]
 8015d64:	c703      	stmia	r7!, {r0, r1}
 8015d66:	6818      	ldr	r0, [r3, #0]
 8015d68:	af04      	add	r7, sp, #16
 8015d6a:	6859      	ldr	r1, [r3, #4]
 8015d6c:	c703      	stmia	r7!, {r0, r1}
 8015d6e:	a802      	add	r0, sp, #8
 8015d70:	f7f7 ffae 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015d74:	4621      	mov	r1, r4
 8015d76:	a804      	add	r0, sp, #16
 8015d78:	f7f7 ffd2 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015d7c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015d80:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015d84:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8015d88:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8015d8c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8015d90:	eb08 0401 	add.w	r4, r8, r1
 8015d94:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015d98:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8015d9c:	440a      	add	r2, r1
 8015d9e:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8015da2:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015da6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015daa:	4413      	add	r3, r2
 8015dac:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015db0:	4b49      	ldr	r3, [pc, #292]	@ (8015ed8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8015db2:	6818      	ldr	r0, [r3, #0]
 8015db4:	6803      	ldr	r3, [r0, #0]
 8015db6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015db8:	4798      	blx	r3
 8015dba:	4b48      	ldr	r3, [pc, #288]	@ (8015edc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8015dbc:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8015dc0:	2eff      	cmp	r6, #255	@ 0xff
 8015dc2:	881a      	ldrh	r2, [r3, #0]
 8015dc4:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8015dc8:	fb02 c101 	mla	r1, r2, r1, ip
 8015dcc:	fb02 f207 	mul.w	r2, r2, r7
 8015dd0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015dd4:	f105 0104 	add.w	r1, r5, #4
 8015dd8:	461d      	mov	r5, r3
 8015dda:	d05a      	beq.n	8015e92 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8015ddc:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8015de0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8015de4:	b2b6      	uxth	r6, r6
 8015de6:	9301      	str	r3, [sp, #4]
 8015de8:	fa1f fe8e 	uxth.w	lr, lr
 8015dec:	4282      	cmp	r2, r0
 8015dee:	d96a      	bls.n	8015ec6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8015df0:	eb00 0b0a 	add.w	fp, r0, sl
 8015df4:	4583      	cmp	fp, r0
 8015df6:	d940      	bls.n	8015e7a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8015df8:	8805      	ldrh	r5, [r0, #0]
 8015dfa:	f814 3b01 	ldrb.w	r3, [r4], #1
 8015dfe:	122f      	asrs	r7, r5, #8
 8015e00:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8015e04:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015e08:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015e0c:	00ed      	lsls	r5, r5, #3
 8015e0e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015e12:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8015e16:	fb17 f70e 	smulbb	r7, r7, lr
 8015e1a:	b2ed      	uxtb	r5, r5
 8015e1c:	fb19 f90e 	smulbb	r9, r9, lr
 8015e20:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015e24:	fb15 f50e 	smulbb	r5, r5, lr
 8015e28:	fb0c 7c06 	mla	ip, ip, r6, r7
 8015e2c:	10df      	asrs	r7, r3, #3
 8015e2e:	00db      	lsls	r3, r3, #3
 8015e30:	fa1f fc8c 	uxth.w	ip, ip
 8015e34:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015e38:	b2db      	uxtb	r3, r3
 8015e3a:	fb07 9706 	mla	r7, r7, r6, r9
 8015e3e:	f10c 0901 	add.w	r9, ip, #1
 8015e42:	fb03 5306 	mla	r3, r3, r6, r5
 8015e46:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8015e4a:	b29b      	uxth	r3, r3
 8015e4c:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8015e50:	b2bf      	uxth	r7, r7
 8015e52:	f103 0c01 	add.w	ip, r3, #1
 8015e56:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015e5a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015e5e:	ea4c 0c09 	orr.w	ip, ip, r9
 8015e62:	f107 0901 	add.w	r9, r7, #1
 8015e66:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8015e6a:	097f      	lsrs	r7, r7, #5
 8015e6c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8015e70:	ea4c 0c07 	orr.w	ip, ip, r7
 8015e74:	f820 cb02 	strh.w	ip, [r0], #2
 8015e78:	e7bc      	b.n	8015df4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8015e7a:	9b01      	ldr	r3, [sp, #4]
 8015e7c:	881b      	ldrh	r3, [r3, #0]
 8015e7e:	eba3 0308 	sub.w	r3, r3, r8
 8015e82:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015e86:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8015e8a:	eba3 0308 	sub.w	r3, r3, r8
 8015e8e:	441c      	add	r4, r3
 8015e90:	e7ac      	b.n	8015dec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8015e92:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8015e96:	4282      	cmp	r2, r0
 8015e98:	d915      	bls.n	8015ec6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8015e9a:	eb00 060a 	add.w	r6, r0, sl
 8015e9e:	4286      	cmp	r6, r0
 8015ea0:	d906      	bls.n	8015eb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8015ea2:	f814 3b01 	ldrb.w	r3, [r4], #1
 8015ea6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8015eaa:	f820 3b02 	strh.w	r3, [r0], #2
 8015eae:	e7f6      	b.n	8015e9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8015eb0:	882b      	ldrh	r3, [r5, #0]
 8015eb2:	eba3 0308 	sub.w	r3, r3, r8
 8015eb6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015eba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8015ebe:	eba3 0308 	sub.w	r3, r3, r8
 8015ec2:	441c      	add	r4, r3
 8015ec4:	e7e7      	b.n	8015e96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8015ec6:	4b04      	ldr	r3, [pc, #16]	@ (8015ed8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8015ec8:	6818      	ldr	r0, [r3, #0]
 8015eca:	6803      	ldr	r3, [r0, #0]
 8015ecc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015ece:	4798      	blx	r3
 8015ed0:	b007      	add	sp, #28
 8015ed2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ed6:	bf00      	nop
 8015ed8:	200150c0 	.word	0x200150c0
 8015edc:	200150ba 	.word	0x200150ba

08015ee0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8015ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ee4:	b091      	sub	sp, #68	@ 0x44
 8015ee6:	4680      	mov	r8, r0
 8015ee8:	460f      	mov	r7, r1
 8015eea:	4614      	mov	r4, r2
 8015eec:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8015ef0:	2d00      	cmp	r5, #0
 8015ef2:	d051      	beq.n	8015f98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8015ef4:	6810      	ldr	r0, [r2, #0]
 8015ef6:	ae0c      	add	r6, sp, #48	@ 0x30
 8015ef8:	6851      	ldr	r1, [r2, #4]
 8015efa:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 80160fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8015efe:	c603      	stmia	r6!, {r0, r1}
 8015f00:	6818      	ldr	r0, [r3, #0]
 8015f02:	ae0e      	add	r6, sp, #56	@ 0x38
 8015f04:	6859      	ldr	r1, [r3, #4]
 8015f06:	c603      	stmia	r6!, {r0, r1}
 8015f08:	a80c      	add	r0, sp, #48	@ 0x30
 8015f0a:	f7f7 fee1 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015f0e:	4621      	mov	r1, r4
 8015f10:	a80e      	add	r0, sp, #56	@ 0x38
 8015f12:	f7f7 ff05 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015f16:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8015f1a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8015f1e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8015f22:	f8d9 0000 	ldr.w	r0, [r9]
 8015f26:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015f2a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8015f2e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8015f32:	eb08 0401 	add.w	r4, r8, r1
 8015f36:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8015f3a:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8016100 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8015f3e:	440a      	add	r2, r1
 8015f40:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8015f44:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8015f48:	4413      	add	r3, r2
 8015f4a:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8015f4e:	6803      	ldr	r3, [r0, #0]
 8015f50:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015f52:	4798      	blx	r3
 8015f54:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8015f58:	f8d9 0000 	ldr.w	r0, [r9]
 8015f5c:	d01f      	beq.n	8015f9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8015f5e:	2200      	movs	r2, #0
 8015f60:	6801      	ldr	r1, [r0, #0]
 8015f62:	b2b6      	uxth	r6, r6
 8015f64:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8015f68:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8015f6c:	220b      	movs	r2, #11
 8015f6e:	9207      	str	r2, [sp, #28]
 8015f70:	f8b8 2000 	ldrh.w	r2, [r8]
 8015f74:	9601      	str	r6, [sp, #4]
 8015f76:	9206      	str	r2, [sp, #24]
 8015f78:	2201      	movs	r2, #1
 8015f7a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8015f7e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8015f82:	9203      	str	r2, [sp, #12]
 8015f84:	fa1f f28a 	uxth.w	r2, sl
 8015f88:	9202      	str	r2, [sp, #8]
 8015f8a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8015f8e:	9200      	str	r2, [sp, #0]
 8015f90:	463a      	mov	r2, r7
 8015f92:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 8015f94:	4621      	mov	r1, r4
 8015f96:	47a8      	blx	r5
 8015f98:	b011      	add	sp, #68	@ 0x44
 8015f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f9e:	6803      	ldr	r3, [r0, #0]
 8015fa0:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8015fa4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015fa6:	4798      	blx	r3
 8015fa8:	f8b8 2000 	ldrh.w	r2, [r8]
 8015fac:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8015fb0:	2dff      	cmp	r5, #255	@ 0xff
 8015fb2:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8015fb6:	fb0a fa02 	mul.w	sl, sl, r2
 8015fba:	fb02 1303 	mla	r3, r2, r3, r1
 8015fbe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015fc2:	d062      	beq.n	801608a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8015fc4:	ea6f 0c05 	mvn.w	ip, r5
 8015fc8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8015fcc:	b2ad      	uxth	r5, r5
 8015fce:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8015fd2:	fa5f fc8c 	uxtb.w	ip, ip
 8015fd6:	930a      	str	r3, [sp, #40]	@ 0x28
 8015fd8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015fda:	4298      	cmp	r0, r3
 8015fdc:	f080 8085 	bcs.w	80160ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8015fe0:	eb00 0b09 	add.w	fp, r0, r9
 8015fe4:	4558      	cmp	r0, fp
 8015fe6:	d246      	bcs.n	8016076 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8015fe8:	f814 eb01 	ldrb.w	lr, [r4], #1
 8015fec:	2303      	movs	r3, #3
 8015fee:	2204      	movs	r2, #4
 8015ff0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8015ff4:	8803      	ldrh	r3, [r0, #0]
 8015ff6:	eb07 0a0e 	add.w	sl, r7, lr
 8015ffa:	1219      	asrs	r1, r3, #8
 8015ffc:	10da      	asrs	r2, r3, #3
 8015ffe:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8016002:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8016006:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801600a:	00db      	lsls	r3, r3, #3
 801600c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8016010:	fb18 f805 	smulbb	r8, r8, r5
 8016014:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8016018:	fb1e fe05 	smulbb	lr, lr, r5
 801601c:	b2db      	uxtb	r3, r3
 801601e:	fb01 810c 	mla	r1, r1, ip, r8
 8016022:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016026:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801602a:	fb18 f805 	smulbb	r8, r8, r5
 801602e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8016032:	b289      	uxth	r1, r1
 8016034:	fb02 820c 	mla	r2, r2, ip, r8
 8016038:	fb03 e30c 	mla	r3, r3, ip, lr
 801603c:	f101 0801 	add.w	r8, r1, #1
 8016040:	b292      	uxth	r2, r2
 8016042:	b29b      	uxth	r3, r3
 8016044:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8016048:	f102 0801 	add.w	r8, r2, #1
 801604c:	f103 0e01 	add.w	lr, r3, #1
 8016050:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8016054:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8016058:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801605c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016060:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8016064:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8016068:	ea4e 0101 	orr.w	r1, lr, r1
 801606c:	ea41 0108 	orr.w	r1, r1, r8
 8016070:	f820 1b02 	strh.w	r1, [r0], #2
 8016074:	e7b6      	b.n	8015fe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8016076:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016078:	881b      	ldrh	r3, [r3, #0]
 801607a:	1b9b      	subs	r3, r3, r6
 801607c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016080:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8016084:	1b9b      	subs	r3, r3, r6
 8016086:	441c      	add	r4, r3
 8016088:	e7a6      	b.n	8015fd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801608a:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801608e:	2203      	movs	r2, #3
 8016090:	2504      	movs	r5, #4
 8016092:	4919      	ldr	r1, [pc, #100]	@ (80160f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8016094:	4550      	cmp	r0, sl
 8016096:	d228      	bcs.n	80160ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8016098:	eb00 0c09 	add.w	ip, r0, r9
 801609c:	4560      	cmp	r0, ip
 801609e:	4623      	mov	r3, r4
 80160a0:	d219      	bcs.n	80160d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80160a2:	f893 e000 	ldrb.w	lr, [r3]
 80160a6:	3401      	adds	r4, #1
 80160a8:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80160ac:	eb07 0b0e 	add.w	fp, r7, lr
 80160b0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80160b4:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80160b8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80160bc:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80160c0:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80160c4:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80160c8:	ea43 030b 	orr.w	r3, r3, fp
 80160cc:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80160d0:	f820 3b02 	strh.w	r3, [r0], #2
 80160d4:	e7e2      	b.n	801609c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80160d6:	f8b8 3000 	ldrh.w	r3, [r8]
 80160da:	1b9b      	subs	r3, r3, r6
 80160dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80160e0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80160e4:	1b9b      	subs	r3, r3, r6
 80160e6:	441c      	add	r4, r3
 80160e8:	e7d4      	b.n	8016094 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80160ea:	4b04      	ldr	r3, [pc, #16]	@ (80160fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80160ec:	6818      	ldr	r0, [r3, #0]
 80160ee:	6803      	ldr	r3, [r0, #0]
 80160f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80160f2:	4798      	blx	r3
 80160f4:	e750      	b.n	8015f98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80160f6:	bf00      	nop
 80160f8:	fffff800 	.word	0xfffff800
 80160fc:	200150c0 	.word	0x200150c0
 8016100:	200150ba 	.word	0x200150ba

08016104 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8016104:	b4f0      	push	{r4, r5, r6, r7}
 8016106:	460c      	mov	r4, r1
 8016108:	4611      	mov	r1, r2
 801610a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801610e:	461a      	mov	r2, r3
 8016110:	780f      	ldrb	r7, [r1, #0]
 8016112:	9b04      	ldr	r3, [sp, #16]
 8016114:	2f01      	cmp	r7, #1
 8016116:	784e      	ldrb	r6, [r1, #1]
 8016118:	d038      	beq.n	801618c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801611a:	d31f      	bcc.n	801615c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801611c:	2f02      	cmp	r7, #2
 801611e:	d14d      	bne.n	80161bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8016120:	2e03      	cmp	r6, #3
 8016122:	d84b      	bhi.n	80161bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8016124:	e8df f006 	tbb	[pc, r6]
 8016128:	17140702 	.word	0x17140702
 801612c:	9504      	str	r5, [sp, #16]
 801612e:	4620      	mov	r0, r4
 8016130:	bcf0      	pop	{r4, r5, r6, r7}
 8016132:	f7ff be09 	b.w	8015d48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8016136:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8016138:	2800      	cmp	r0, #0
 801613a:	d03f      	beq.n	80161bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801613c:	6806      	ldr	r6, [r0, #0]
 801613e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8016142:	68b5      	ldr	r5, [r6, #8]
 8016144:	4613      	mov	r3, r2
 8016146:	46ac      	mov	ip, r5
 8016148:	460a      	mov	r2, r1
 801614a:	4621      	mov	r1, r4
 801614c:	bcf0      	pop	{r4, r5, r6, r7}
 801614e:	4760      	bx	ip
 8016150:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8016154:	e7f0      	b.n	8016138 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8016156:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801615a:	e7ed      	b.n	8016138 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801615c:	2e03      	cmp	r6, #3
 801615e:	d82d      	bhi.n	80161bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8016160:	e8df f006 	tbb	[pc, r6]
 8016164:	110e0702 	.word	0x110e0702
 8016168:	9504      	str	r5, [sp, #16]
 801616a:	4620      	mov	r0, r4
 801616c:	bcf0      	pop	{r4, r5, r6, r7}
 801616e:	f7ff bd05 	b.w	8015b7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8016172:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8016174:	b310      	cbz	r0, 80161bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8016176:	6806      	ldr	r6, [r0, #0]
 8016178:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801617c:	68f5      	ldr	r5, [r6, #12]
 801617e:	e7e1      	b.n	8016144 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8016180:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8016184:	e7f6      	b.n	8016174 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8016186:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801618a:	e7f3      	b.n	8016174 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801618c:	2e03      	cmp	r6, #3
 801618e:	d815      	bhi.n	80161bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8016190:	e8df f006 	tbb	[pc, r6]
 8016194:	110e0702 	.word	0x110e0702
 8016198:	9504      	str	r5, [sp, #16]
 801619a:	4620      	mov	r0, r4
 801619c:	bcf0      	pop	{r4, r5, r6, r7}
 801619e:	f7ff be9f 	b.w	8015ee0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80161a2:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80161a4:	b150      	cbz	r0, 80161bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80161a6:	6806      	ldr	r6, [r0, #0]
 80161a8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80161ac:	6935      	ldr	r5, [r6, #16]
 80161ae:	e7c9      	b.n	8016144 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80161b0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80161b4:	e7f6      	b.n	80161a4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80161b6:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80161ba:	e7f3      	b.n	80161a4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80161bc:	bcf0      	pop	{r4, r5, r6, r7}
 80161be:	4770      	bx	lr

080161c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80161c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80161c4:	b087      	sub	sp, #28
 80161c6:	4604      	mov	r4, r0
 80161c8:	460e      	mov	r6, r1
 80161ca:	6810      	ldr	r0, [r2, #0]
 80161cc:	6851      	ldr	r1, [r2, #4]
 80161ce:	ad02      	add	r5, sp, #8
 80161d0:	4617      	mov	r7, r2
 80161d2:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 80161d6:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 8016408 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80161da:	c503      	stmia	r5!, {r0, r1}
 80161dc:	6818      	ldr	r0, [r3, #0]
 80161de:	ad04      	add	r5, sp, #16
 80161e0:	6859      	ldr	r1, [r3, #4]
 80161e2:	c503      	stmia	r5!, {r0, r1}
 80161e4:	a802      	add	r0, sp, #8
 80161e6:	f7f7 fd73 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80161ea:	4639      	mov	r1, r7
 80161ec:	a804      	add	r0, sp, #16
 80161ee:	f7f7 fd97 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80161f2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80161f6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80161fa:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80161fe:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8016202:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016206:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801620a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801620e:	440e      	add	r6, r1
 8016210:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016214:	440a      	add	r2, r1
 8016216:	f8ad 2010 	strh.w	r2, [sp, #16]
 801621a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801621e:	4413      	add	r3, r2
 8016220:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016224:	4b77      	ldr	r3, [pc, #476]	@ (8016404 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8016226:	6818      	ldr	r0, [r3, #0]
 8016228:	6803      	ldr	r3, [r0, #0]
 801622a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801622c:	4798      	blx	r3
 801622e:	f8b9 b000 	ldrh.w	fp, [r9]
 8016232:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016236:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801623a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801623e:	fb05 f50b 	mul.w	r5, r5, fp
 8016242:	fb0b 2303 	mla	r3, fp, r3, r2
 8016246:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801624a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801624e:	9300      	str	r3, [sp, #0]
 8016250:	d069      	beq.n	8016326 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8016252:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8016256:	4558      	cmp	r0, fp
 8016258:	f080 80cc 	bcs.w	80163f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801625c:	9b00      	ldr	r3, [sp, #0]
 801625e:	4631      	mov	r1, r6
 8016260:	18c3      	adds	r3, r0, r3
 8016262:	9301      	str	r3, [sp, #4]
 8016264:	9b01      	ldr	r3, [sp, #4]
 8016266:	4298      	cmp	r0, r3
 8016268:	d24f      	bcs.n	801630a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801626a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801626e:	2a00      	cmp	r2, #0
 8016270:	d048      	beq.n	8016304 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8016272:	fb0a f202 	mul.w	r2, sl, r2
 8016276:	1c53      	adds	r3, r2, #1
 8016278:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801627c:	121b      	asrs	r3, r3, #8
 801627e:	d041      	beq.n	8016304 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8016280:	8802      	ldrh	r2, [r0, #0]
 8016282:	b29e      	uxth	r6, r3
 8016284:	f8b4 c000 	ldrh.w	ip, [r4]
 8016288:	43db      	mvns	r3, r3
 801628a:	1215      	asrs	r5, r2, #8
 801628c:	b2db      	uxtb	r3, r3
 801628e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016292:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8016296:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801629a:	fb15 f503 	smulbb	r5, r5, r3
 801629e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80162a2:	00d2      	lsls	r2, r2, #3
 80162a4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80162a8:	fb07 5706 	mla	r7, r7, r6, r5
 80162ac:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80162b0:	b2d2      	uxtb	r2, r2
 80162b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80162b6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80162ba:	fb1e fe03 	smulbb	lr, lr, r3
 80162be:	b2bf      	uxth	r7, r7
 80162c0:	fb12 f203 	smulbb	r2, r2, r3
 80162c4:	fa5f fc8c 	uxtb.w	ip, ip
 80162c8:	fb05 e506 	mla	r5, r5, r6, lr
 80162cc:	f107 0e01 	add.w	lr, r7, #1
 80162d0:	fb0c 2c06 	mla	ip, ip, r6, r2
 80162d4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80162d8:	fa1f fc8c 	uxth.w	ip, ip
 80162dc:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 80162e0:	b2ad      	uxth	r5, r5
 80162e2:	f10c 0701 	add.w	r7, ip, #1
 80162e6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80162ea:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80162ee:	ea47 070e 	orr.w	r7, r7, lr
 80162f2:	f105 0e01 	add.w	lr, r5, #1
 80162f6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80162fa:	096d      	lsrs	r5, r5, #5
 80162fc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016300:	432f      	orrs	r7, r5
 8016302:	8007      	strh	r7, [r0, #0]
 8016304:	3002      	adds	r0, #2
 8016306:	3402      	adds	r4, #2
 8016308:	e7ac      	b.n	8016264 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801630a:	f8b9 3000 	ldrh.w	r3, [r9]
 801630e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8016312:	eba3 0308 	sub.w	r3, r3, r8
 8016316:	eba6 0608 	sub.w	r6, r6, r8
 801631a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801631e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8016322:	440e      	add	r6, r1
 8016324:	e797      	b.n	8016256 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8016326:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801632a:	42a8      	cmp	r0, r5
 801632c:	d262      	bcs.n	80163f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801632e:	9b00      	ldr	r3, [sp, #0]
 8016330:	4631      	mov	r1, r6
 8016332:	eb00 0b03 	add.w	fp, r0, r3
 8016336:	4558      	cmp	r0, fp
 8016338:	d24e      	bcs.n	80163d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801633a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801633e:	b12b      	cbz	r3, 801634c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8016340:	2bff      	cmp	r3, #255	@ 0xff
 8016342:	f8b4 e000 	ldrh.w	lr, [r4]
 8016346:	d104      	bne.n	8016352 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8016348:	f8a0 e000 	strh.w	lr, [r0]
 801634c:	3002      	adds	r0, #2
 801634e:	3402      	adds	r4, #2
 8016350:	e7f1      	b.n	8016336 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8016352:	8802      	ldrh	r2, [r0, #0]
 8016354:	b29f      	uxth	r7, r3
 8016356:	43db      	mvns	r3, r3
 8016358:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801635c:	1216      	asrs	r6, r2, #8
 801635e:	b2db      	uxtb	r3, r3
 8016360:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016364:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016368:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801636c:	00d2      	lsls	r2, r2, #3
 801636e:	fb16 f603 	smulbb	r6, r6, r3
 8016372:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016376:	b2d2      	uxtb	r2, r2
 8016378:	fb0c 6c07 	mla	ip, ip, r7, r6
 801637c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016380:	fb1a fa03 	smulbb	sl, sl, r3
 8016384:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016388:	fa1f fc8c 	uxth.w	ip, ip
 801638c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016390:	fb12 f303 	smulbb	r3, r2, r3
 8016394:	fa5f fe8e 	uxtb.w	lr, lr
 8016398:	fb06 a607 	mla	r6, r6, r7, sl
 801639c:	f10c 0201 	add.w	r2, ip, #1
 80163a0:	fb0e 3307 	mla	r3, lr, r7, r3
 80163a4:	b2b6      	uxth	r6, r6
 80163a6:	b29b      	uxth	r3, r3
 80163a8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80163ac:	f106 0a01 	add.w	sl, r6, #1
 80163b0:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 80163b4:	f103 0c01 	add.w	ip, r3, #1
 80163b8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80163bc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80163c0:	0976      	lsrs	r6, r6, #5
 80163c2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80163c6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80163ca:	ea4c 0c02 	orr.w	ip, ip, r2
 80163ce:	ea4c 0c06 	orr.w	ip, ip, r6
 80163d2:	f8a0 c000 	strh.w	ip, [r0]
 80163d6:	e7b9      	b.n	801634c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80163d8:	f8b9 3000 	ldrh.w	r3, [r9]
 80163dc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80163e0:	eba3 0308 	sub.w	r3, r3, r8
 80163e4:	eba6 0608 	sub.w	r6, r6, r8
 80163e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80163ec:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80163f0:	440e      	add	r6, r1
 80163f2:	e79a      	b.n	801632a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80163f4:	4b03      	ldr	r3, [pc, #12]	@ (8016404 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80163f6:	6818      	ldr	r0, [r3, #0]
 80163f8:	6803      	ldr	r3, [r0, #0]
 80163fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80163fc:	4798      	blx	r3
 80163fe:	b007      	add	sp, #28
 8016400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016404:	200150c0 	.word	0x200150c0
 8016408:	200150ba 	.word	0x200150ba

0801640c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801640c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016410:	b089      	sub	sp, #36	@ 0x24
 8016412:	4682      	mov	sl, r0
 8016414:	460f      	mov	r7, r1
 8016416:	4691      	mov	r9, r2
 8016418:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801641c:	4698      	mov	r8, r3
 801641e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8016420:	2e00      	cmp	r6, #0
 8016422:	d03d      	beq.n	80164a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8016424:	4608      	mov	r0, r1
 8016426:	f7fa fe49 	bl	80110bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801642a:	4605      	mov	r5, r0
 801642c:	4638      	mov	r0, r7
 801642e:	f7fa fe79 	bl	8011124 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016432:	f8ad 000e 	strh.w	r0, [sp, #14]
 8016436:	4638      	mov	r0, r7
 8016438:	f8ad 9008 	strh.w	r9, [sp, #8]
 801643c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8016440:	f8ad 800a 	strh.w	r8, [sp, #10]
 8016444:	f7fa ff26 	bl	8011294 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016448:	4605      	mov	r5, r0
 801644a:	4638      	mov	r0, r7
 801644c:	f7fa ff52 	bl	80112f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8016450:	4681      	mov	r9, r0
 8016452:	4638      	mov	r0, r7
 8016454:	f7fa ffa2 	bl	801139c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016458:	280b      	cmp	r0, #11
 801645a:	d821      	bhi.n	80164a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801645c:	e8df f000 	tbb	[pc, r0]
 8016460:	2006aebe 	.word	0x2006aebe
 8016464:	20202020 	.word	0x20202020
 8016468:	b5202020 	.word	0xb5202020
 801646c:	4bb0      	ldr	r3, [pc, #704]	@ (8016730 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801646e:	6818      	ldr	r0, [r3, #0]
 8016470:	6803      	ldr	r3, [r0, #0]
 8016472:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016474:	4798      	blx	r3
 8016476:	2eff      	cmp	r6, #255	@ 0xff
 8016478:	d101      	bne.n	801647e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801647a:	0683      	lsls	r3, r0, #26
 801647c:	d506      	bpl.n	801648c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801647e:	4633      	mov	r3, r6
 8016480:	4622      	mov	r2, r4
 8016482:	a902      	add	r1, sp, #8
 8016484:	4628      	mov	r0, r5
 8016486:	f7ff f907 	bl	8015698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801648a:	e009      	b.n	80164a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801648c:	4638      	mov	r0, r7
 801648e:	f7fa fec9 	bl	8011224 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016492:	b940      	cbnz	r0, 80164a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8016494:	4623      	mov	r3, r4
 8016496:	aa02      	add	r2, sp, #8
 8016498:	4629      	mov	r1, r5
 801649a:	4650      	mov	r0, sl
 801649c:	f7ff f9e2 	bl	8015864 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80164a0:	b009      	add	sp, #36	@ 0x24
 80164a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164a6:	f10d 0818 	add.w	r8, sp, #24
 80164aa:	4639      	mov	r1, r7
 80164ac:	af04      	add	r7, sp, #16
 80164ae:	4640      	mov	r0, r8
 80164b0:	f7fa fe6c 	bl	801118c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80164b4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80164b8:	e887 0003 	stmia.w	r7, {r0, r1}
 80164bc:	4638      	mov	r0, r7
 80164be:	4621      	mov	r1, r4
 80164c0:	f7f4 f9de 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 80164c4:	4638      	mov	r0, r7
 80164c6:	f7f4 fa1e 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 80164ca:	2800      	cmp	r0, #0
 80164cc:	d1d7      	bne.n	801647e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80164ce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80164d2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80164d6:	4293      	cmp	r3, r2
 80164d8:	dd12      	ble.n	8016500 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 80164da:	1a9b      	subs	r3, r3, r2
 80164dc:	f9b4 0000 	ldrsh.w	r0, [r4]
 80164e0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80164e4:	f8ad 0018 	strh.w	r0, [sp, #24]
 80164e8:	4628      	mov	r0, r5
 80164ea:	f8ad 201a 	strh.w	r2, [sp, #26]
 80164ee:	4642      	mov	r2, r8
 80164f0:	f8ad 101c 	strh.w	r1, [sp, #28]
 80164f4:	a902      	add	r1, sp, #8
 80164f6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80164fa:	4633      	mov	r3, r6
 80164fc:	f7ff f8cc 	bl	8015698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8016500:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8016504:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016508:	4293      	cmp	r3, r2
 801650a:	dd12      	ble.n	8016532 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801650c:	1a9b      	subs	r3, r3, r2
 801650e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8016512:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8016516:	f8ad 2018 	strh.w	r2, [sp, #24]
 801651a:	4642      	mov	r2, r8
 801651c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8016520:	4628      	mov	r0, r5
 8016522:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016526:	23ff      	movs	r3, #255	@ 0xff
 8016528:	f8ad 101e 	strh.w	r1, [sp, #30]
 801652c:	a902      	add	r1, sp, #8
 801652e:	f7ff f8b3 	bl	8015698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8016532:	463b      	mov	r3, r7
 8016534:	aa02      	add	r2, sp, #8
 8016536:	4629      	mov	r1, r5
 8016538:	4650      	mov	r0, sl
 801653a:	f7ff f993 	bl	8015864 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801653e:	88a2      	ldrh	r2, [r4, #4]
 8016540:	8823      	ldrh	r3, [r4, #0]
 8016542:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8016546:	4413      	add	r3, r2
 8016548:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801654c:	440a      	add	r2, r1
 801654e:	b29b      	uxth	r3, r3
 8016550:	b292      	uxth	r2, r2
 8016552:	b218      	sxth	r0, r3
 8016554:	b211      	sxth	r1, r2
 8016556:	4288      	cmp	r0, r1
 8016558:	dd12      	ble.n	8016580 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801655a:	1a9b      	subs	r3, r3, r2
 801655c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8016560:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8016564:	4642      	mov	r2, r8
 8016566:	f8ad 1018 	strh.w	r1, [sp, #24]
 801656a:	a902      	add	r1, sp, #8
 801656c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016570:	23ff      	movs	r3, #255	@ 0xff
 8016572:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016576:	4628      	mov	r0, r5
 8016578:	f8ad 601a 	strh.w	r6, [sp, #26]
 801657c:	f7ff f88c 	bl	8015698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8016580:	88e2      	ldrh	r2, [r4, #6]
 8016582:	8863      	ldrh	r3, [r4, #2]
 8016584:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8016588:	4413      	add	r3, r2
 801658a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801658e:	440a      	add	r2, r1
 8016590:	b29b      	uxth	r3, r3
 8016592:	b292      	uxth	r2, r2
 8016594:	b218      	sxth	r0, r3
 8016596:	b211      	sxth	r1, r2
 8016598:	4288      	cmp	r0, r1
 801659a:	dd81      	ble.n	80164a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801659c:	1a9b      	subs	r3, r3, r2
 801659e:	f9b4 6000 	ldrsh.w	r6, [r4]
 80165a2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80165a6:	4642      	mov	r2, r8
 80165a8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80165ac:	23ff      	movs	r3, #255	@ 0xff
 80165ae:	f8ad 6018 	strh.w	r6, [sp, #24]
 80165b2:	f8ad 101a 	strh.w	r1, [sp, #26]
 80165b6:	f8ad 001c 	strh.w	r0, [sp, #28]
 80165ba:	e762      	b.n	8016482 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 80165bc:	4633      	mov	r3, r6
 80165be:	4622      	mov	r2, r4
 80165c0:	a902      	add	r1, sp, #8
 80165c2:	4628      	mov	r0, r5
 80165c4:	f7ff f9be 	bl	8015944 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80165c8:	e76a      	b.n	80164a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80165ca:	e9cd 4600 	strd	r4, r6, [sp]
 80165ce:	ab02      	add	r3, sp, #8
 80165d0:	464a      	mov	r2, r9
 80165d2:	4629      	mov	r1, r5
 80165d4:	4650      	mov	r0, sl
 80165d6:	f7ff fd95 	bl	8016104 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80165da:	e761      	b.n	80164a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80165dc:	4638      	mov	r0, r7
 80165de:	f7fa fe21 	bl	8011224 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80165e2:	b950      	cbnz	r0, 80165fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 80165e4:	f8da 3000 	ldr.w	r3, [sl]
 80165e8:	aa02      	add	r2, sp, #8
 80165ea:	4629      	mov	r1, r5
 80165ec:	e9cd 6000 	strd	r6, r0, [sp]
 80165f0:	4650      	mov	r0, sl
 80165f2:	68de      	ldr	r6, [r3, #12]
 80165f4:	4623      	mov	r3, r4
 80165f6:	47b0      	blx	r6
 80165f8:	e752      	b.n	80164a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80165fa:	f10d 0818 	add.w	r8, sp, #24
 80165fe:	4639      	mov	r1, r7
 8016600:	af04      	add	r7, sp, #16
 8016602:	4640      	mov	r0, r8
 8016604:	f7fa fdc2 	bl	801118c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8016608:	e898 0003 	ldmia.w	r8, {r0, r1}
 801660c:	e887 0003 	stmia.w	r7, {r0, r1}
 8016610:	4638      	mov	r0, r7
 8016612:	4621      	mov	r1, r4
 8016614:	f7f4 f934 	bl	800a880 <_ZN8touchgfx4RectaNERKS0_>
 8016618:	4638      	mov	r0, r7
 801661a:	f7f4 f974 	bl	800a906 <_ZNK8touchgfx4Rect7isEmptyEv>
 801661e:	b138      	cbz	r0, 8016630 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8016620:	4623      	mov	r3, r4
 8016622:	9600      	str	r6, [sp, #0]
 8016624:	aa02      	add	r2, sp, #8
 8016626:	4649      	mov	r1, r9
 8016628:	4628      	mov	r0, r5
 801662a:	f7ff fdc9 	bl	80161c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801662e:	e737      	b.n	80164a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8016630:	f8da 3000 	ldr.w	r3, [sl]
 8016634:	aa02      	add	r2, sp, #8
 8016636:	4629      	mov	r1, r5
 8016638:	e9cd 6000 	strd	r6, r0, [sp]
 801663c:	4650      	mov	r0, sl
 801663e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8016642:	463b      	mov	r3, r7
 8016644:	47d8      	blx	fp
 8016646:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801664a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801664e:	4293      	cmp	r3, r2
 8016650:	dd13      	ble.n	801667a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8016652:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016656:	1a9b      	subs	r3, r3, r2
 8016658:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801665c:	f8ad 0018 	strh.w	r0, [sp, #24]
 8016660:	4628      	mov	r0, r5
 8016662:	f8ad 201a 	strh.w	r2, [sp, #26]
 8016666:	aa02      	add	r2, sp, #8
 8016668:	f8ad 101c 	strh.w	r1, [sp, #28]
 801666c:	4649      	mov	r1, r9
 801666e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8016672:	4643      	mov	r3, r8
 8016674:	9600      	str	r6, [sp, #0]
 8016676:	f7ff fda3 	bl	80161c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801667a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801667e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016682:	4293      	cmp	r3, r2
 8016684:	dd13      	ble.n	80166ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 8016686:	1a9b      	subs	r3, r3, r2
 8016688:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801668c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8016690:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016694:	aa02      	add	r2, sp, #8
 8016696:	f8ad 001a 	strh.w	r0, [sp, #26]
 801669a:	4628      	mov	r0, r5
 801669c:	f8ad 301c 	strh.w	r3, [sp, #28]
 80166a0:	4643      	mov	r3, r8
 80166a2:	f8ad 101e 	strh.w	r1, [sp, #30]
 80166a6:	4649      	mov	r1, r9
 80166a8:	9600      	str	r6, [sp, #0]
 80166aa:	f7ff fd89 	bl	80161c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80166ae:	88a2      	ldrh	r2, [r4, #4]
 80166b0:	8823      	ldrh	r3, [r4, #0]
 80166b2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80166b6:	4413      	add	r3, r2
 80166b8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80166bc:	440a      	add	r2, r1
 80166be:	b29b      	uxth	r3, r3
 80166c0:	b292      	uxth	r2, r2
 80166c2:	b218      	sxth	r0, r3
 80166c4:	b211      	sxth	r1, r2
 80166c6:	4288      	cmp	r0, r1
 80166c8:	dd13      	ble.n	80166f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 80166ca:	1a9b      	subs	r3, r3, r2
 80166cc:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80166d0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80166d4:	aa02      	add	r2, sp, #8
 80166d6:	f8ad 1018 	strh.w	r1, [sp, #24]
 80166da:	4649      	mov	r1, r9
 80166dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80166e0:	4643      	mov	r3, r8
 80166e2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80166e6:	4628      	mov	r0, r5
 80166e8:	9600      	str	r6, [sp, #0]
 80166ea:	f8ad 701a 	strh.w	r7, [sp, #26]
 80166ee:	f7ff fd67 	bl	80161c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80166f2:	88e2      	ldrh	r2, [r4, #6]
 80166f4:	8863      	ldrh	r3, [r4, #2]
 80166f6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80166fa:	4413      	add	r3, r2
 80166fc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8016700:	440a      	add	r2, r1
 8016702:	b29b      	uxth	r3, r3
 8016704:	b292      	uxth	r2, r2
 8016706:	b218      	sxth	r0, r3
 8016708:	b211      	sxth	r1, r2
 801670a:	4288      	cmp	r0, r1
 801670c:	f77f aec8 	ble.w	80164a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8016710:	f9b4 7000 	ldrsh.w	r7, [r4]
 8016714:	1a9b      	subs	r3, r3, r2
 8016716:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801671a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801671e:	4643      	mov	r3, r8
 8016720:	f8ad 7018 	strh.w	r7, [sp, #24]
 8016724:	f8ad 101a 	strh.w	r1, [sp, #26]
 8016728:	f8ad 001c 	strh.w	r0, [sp, #28]
 801672c:	9600      	str	r6, [sp, #0]
 801672e:	e779      	b.n	8016624 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8016730:	200150c0 	.word	0x200150c0

08016734 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8016734:	b180      	cbz	r0, 8016758 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8016736:	2903      	cmp	r1, #3
 8016738:	d81c      	bhi.n	8016774 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801673a:	e8df f001 	tbb	[pc, r1]
 801673e:	1d02      	.short	0x1d02
 8016740:	1f08      	.short	0x1f08
 8016742:	4b10      	ldr	r3, [pc, #64]	@ (8016784 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8016744:	8818      	ldrh	r0, [r3, #0]
 8016746:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801674a:	4240      	negs	r0, r0
 801674c:	4770      	bx	lr
 801674e:	4b0d      	ldr	r3, [pc, #52]	@ (8016784 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8016750:	8818      	ldrh	r0, [r3, #0]
 8016752:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8016756:	4770      	bx	lr
 8016758:	2903      	cmp	r1, #3
 801675a:	d80b      	bhi.n	8016774 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801675c:	a301      	add	r3, pc, #4	@ (adr r3, 8016764 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801675e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8016762:	bf00      	nop
 8016764:	08016779 	.word	0x08016779
 8016768:	0801674f 	.word	0x0801674f
 801676c:	0801677d 	.word	0x0801677d
 8016770:	08016743 	.word	0x08016743
 8016774:	2000      	movs	r0, #0
 8016776:	4770      	bx	lr
 8016778:	2001      	movs	r0, #1
 801677a:	4770      	bx	lr
 801677c:	f04f 30ff 	mov.w	r0, #4294967295
 8016780:	4770      	bx	lr
 8016782:	bf00      	nop
 8016784:	200150ba 	.word	0x200150ba

08016788 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8016788:	b180      	cbz	r0, 80167ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801678a:	2903      	cmp	r1, #3
 801678c:	d81c      	bhi.n	80167c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801678e:	e8df f001 	tbb	[pc, r1]
 8016792:	021d      	.short	0x021d
 8016794:	071f      	.short	0x071f
 8016796:	4b10      	ldr	r3, [pc, #64]	@ (80167d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8016798:	8818      	ldrh	r0, [r3, #0]
 801679a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801679e:	4770      	bx	lr
 80167a0:	4b0d      	ldr	r3, [pc, #52]	@ (80167d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80167a2:	8818      	ldrh	r0, [r3, #0]
 80167a4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80167a8:	4240      	negs	r0, r0
 80167aa:	4770      	bx	lr
 80167ac:	2903      	cmp	r1, #3
 80167ae:	d80b      	bhi.n	80167c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80167b0:	a301      	add	r3, pc, #4	@ (adr r3, 80167b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80167b2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80167b6:	bf00      	nop
 80167b8:	08016797 	.word	0x08016797
 80167bc:	080167d1 	.word	0x080167d1
 80167c0:	080167a1 	.word	0x080167a1
 80167c4:	080167cd 	.word	0x080167cd
 80167c8:	2000      	movs	r0, #0
 80167ca:	4770      	bx	lr
 80167cc:	2001      	movs	r0, #1
 80167ce:	4770      	bx	lr
 80167d0:	f04f 30ff 	mov.w	r0, #4294967295
 80167d4:	4770      	bx	lr
 80167d6:	bf00      	nop
 80167d8:	200150ba 	.word	0x200150ba

080167dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80167dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80167e0:	b099      	sub	sp, #100	@ 0x64
 80167e2:	910b      	str	r1, [sp, #44]	@ 0x2c
 80167e4:	a914      	add	r1, sp, #80	@ 0x50
 80167e6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 80167ea:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 80167ee:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 80167f2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 80167f6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 80167fa:	e881 000c 	stmia.w	r1, {r2, r3}
 80167fe:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8016802:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8016806:	9309      	str	r3, [sp, #36]	@ 0x24
 8016808:	f891 900d 	ldrb.w	r9, [r1, #13]
 801680c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8016810:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8016814:	9310      	str	r3, [sp, #64]	@ 0x40
 8016816:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801681a:	930c      	str	r3, [sp, #48]	@ 0x30
 801681c:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 8016820:	798f      	ldrb	r7, [r1, #6]
 8016822:	431f      	orrs	r7, r3
 8016824:	f000 8195 	beq.w	8016b52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8016828:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801682c:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8016830:	f891 9007 	ldrb.w	r9, [r1, #7]
 8016834:	ea59 0903 	orrs.w	r9, r9, r3
 8016838:	f000 818b 	beq.w	8016b52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801683c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8016840:	b29b      	uxth	r3, r3
 8016842:	2d00      	cmp	r5, #0
 8016844:	f000 812e 	beq.w	8016aa4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8016848:	1aed      	subs	r5, r5, r3
 801684a:	b2ad      	uxth	r5, r5
 801684c:	042b      	lsls	r3, r5, #16
 801684e:	d502      	bpl.n	8016856 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8016850:	1b64      	subs	r4, r4, r5
 8016852:	2500      	movs	r5, #0
 8016854:	b224      	sxth	r4, r4
 8016856:	f9b2 1000 	ldrsh.w	r1, [r2]
 801685a:	a814      	add	r0, sp, #80	@ 0x50
 801685c:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 8016860:	428c      	cmp	r4, r1
 8016862:	b28b      	uxth	r3, r1
 8016864:	bfbf      	itttt	lt
 8016866:	18ed      	addlt	r5, r5, r3
 8016868:	1b2c      	sublt	r4, r5, r4
 801686a:	b2a5      	uxthlt	r5, r4
 801686c:	460c      	movlt	r4, r1
 801686e:	8891      	ldrh	r1, [r2, #4]
 8016870:	440b      	add	r3, r1
 8016872:	4621      	mov	r1, r4
 8016874:	b21b      	sxth	r3, r3
 8016876:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016878:	88d3      	ldrh	r3, [r2, #6]
 801687a:	8852      	ldrh	r2, [r2, #2]
 801687c:	4413      	add	r3, r2
 801687e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016880:	b21b      	sxth	r3, r3
 8016882:	930d      	str	r3, [sp, #52]	@ 0x34
 8016884:	4bbd      	ldr	r3, [pc, #756]	@ (8016b7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8016886:	f893 b000 	ldrb.w	fp, [r3]
 801688a:	f10b 3cff 	add.w	ip, fp, #4294967295
 801688e:	f1dc 0300 	rsbs	r3, ip, #0
 8016892:	eb43 030c 	adc.w	r3, r3, ip
 8016896:	930e      	str	r3, [sp, #56]	@ 0x38
 8016898:	4653      	mov	r3, sl
 801689a:	f7f7 f88e 	bl	800d9ba <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801689e:	4621      	mov	r1, r4
 80168a0:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 80168a4:	4653      	mov	r3, sl
 80168a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80168a8:	a814      	add	r0, sp, #80	@ 0x50
 80168aa:	f7f7 f8a3 	bl	800d9f4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80168ae:	a918      	add	r1, sp, #96	@ 0x60
 80168b0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80168b4:	a817      	add	r0, sp, #92	@ 0x5c
 80168b6:	f7f7 f9c9 	bl	800dc4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80168ba:	f1ba 0f00 	cmp.w	sl, #0
 80168be:	f040 80f4 	bne.w	8016aaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80168c2:	f1bb 0f01 	cmp.w	fp, #1
 80168c6:	f040 80f8 	bne.w	8016aba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80168ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80168cc:	2b00      	cmp	r3, #0
 80168ce:	f040 8145 	bne.w	8016b5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80168d2:	b2ba      	uxth	r2, r7
 80168d4:	b905      	cbnz	r5, 80168d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80168d6:	b16e      	cbz	r6, 80168f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80168d8:	fb06 5302 	mla	r3, r6, r2, r5
 80168dc:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 80168de:	4631      	mov	r1, r6
 80168e0:	fb08 f303 	mul.w	r3, r8, r3
 80168e4:	f003 0607 	and.w	r6, r3, #7
 80168e8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80168ec:	9328      	str	r3, [sp, #160]	@ 0xa0
 80168ee:	eba9 0301 	sub.w	r3, r9, r1
 80168f2:	930a      	str	r3, [sp, #40]	@ 0x28
 80168f4:	4651      	mov	r1, sl
 80168f6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80168f8:	f7ff ff1c 	bl	8016734 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80168fc:	4681      	mov	r9, r0
 80168fe:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8016900:	f7ff ff42 	bl	8016788 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8016904:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016906:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016908:	4683      	mov	fp, r0
 801690a:	eba3 0a01 	sub.w	sl, r3, r1
 801690e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016910:	459a      	cmp	sl, r3
 8016912:	bfa8      	it	ge
 8016914:	469a      	movge	sl, r3
 8016916:	f1ba 0f00 	cmp.w	sl, #0
 801691a:	f340 811a 	ble.w	8016b52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801691e:	1b64      	subs	r4, r4, r5
 8016920:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8016922:	1b1c      	subs	r4, r3, r4
 8016924:	42bc      	cmp	r4, r7
 8016926:	bfd4      	ite	le
 8016928:	ebc5 0504 	rsble	r5, r5, r4
 801692c:	ebc5 0507 	rsbgt	r5, r5, r7
 8016930:	2d00      	cmp	r5, #0
 8016932:	f340 810e 	ble.w	8016b52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8016936:	1b52      	subs	r2, r2, r5
 8016938:	fb08 f302 	mul.w	r3, r8, r2
 801693c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801693e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016940:	2b00      	cmp	r3, #0
 8016942:	f040 8116 	bne.w	8016b72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8016946:	4b8e      	ldr	r3, [pc, #568]	@ (8016b80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8016948:	6818      	ldr	r0, [r3, #0]
 801694a:	6803      	ldr	r3, [r0, #0]
 801694c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801694e:	4798      	blx	r3
 8016950:	2301      	movs	r3, #1
 8016952:	4a8c      	ldr	r2, [pc, #560]	@ (8016b84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8016954:	fa03 f308 	lsl.w	r3, r3, r8
 8016958:	8811      	ldrh	r1, [r2, #0]
 801695a:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801695e:	3b01      	subs	r3, #1
 8016960:	b2db      	uxtb	r3, r3
 8016962:	930e      	str	r3, [sp, #56]	@ 0x38
 8016964:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 8016968:	fb01 2303 	mla	r3, r1, r3, r2
 801696c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016970:	930a      	str	r3, [sp, #40]	@ 0x28
 8016972:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8016974:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8016978:	9313      	str	r3, [sp, #76]	@ 0x4c
 801697a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801697c:	0a19      	lsrs	r1, r3, #8
 801697e:	b2cb      	uxtb	r3, r1
 8016980:	9312      	str	r3, [sp, #72]	@ 0x48
 8016982:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8016984:	b2db      	uxtb	r3, r3
 8016986:	9311      	str	r3, [sp, #68]	@ 0x44
 8016988:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801698a:	095a      	lsrs	r2, r3, #5
 801698c:	4b7e      	ldr	r3, [pc, #504]	@ (8016b88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 801698e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016992:	400b      	ands	r3, r1
 8016994:	4313      	orrs	r3, r2
 8016996:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8016998:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801699c:	4313      	orrs	r3, r2
 801699e:	b29b      	uxth	r3, r3
 80169a0:	9310      	str	r3, [sp, #64]	@ 0x40
 80169a2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80169a4:	781a      	ldrb	r2, [r3, #0]
 80169a6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80169aa:	fb05 b919 	mls	r9, r5, r9, fp
 80169ae:	4132      	asrs	r2, r6
 80169b0:	fb03 fb05 	mul.w	fp, r3, r5
 80169b4:	930d      	str	r3, [sp, #52]	@ 0x34
 80169b6:	b2d2      	uxtb	r2, r2
 80169b8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80169bc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80169c0:	f0c0 80f5 	bcc.w	8016bae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 80169c4:	46ae      	mov	lr, r5
 80169c6:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 80169ca:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80169ce:	f0c0 80dd 	bcc.w	8016b8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80169d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80169d4:	4013      	ands	r3, r2
 80169d6:	d055      	beq.n	8016a84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80169d8:	20ff      	movs	r0, #255	@ 0xff
 80169da:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80169dc:	fb90 f1f1 	sdiv	r1, r0, r1
 80169e0:	434b      	muls	r3, r1
 80169e2:	2bfe      	cmp	r3, #254	@ 0xfe
 80169e4:	dd03      	ble.n	80169ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 80169e6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80169e8:	4281      	cmp	r1, r0
 80169ea:	f000 80c4 	beq.w	8016b76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 80169ee:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80169f0:	f8bc 4000 	ldrh.w	r4, [ip]
 80169f4:	fb11 f303 	smulbb	r3, r1, r3
 80169f8:	1220      	asrs	r0, r4, #8
 80169fa:	b29b      	uxth	r3, r3
 80169fc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8016a00:	1c59      	adds	r1, r3, #1
 8016a02:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8016a06:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8016a0a:	10e1      	asrs	r1, r4, #3
 8016a0c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016a10:	00e4      	lsls	r4, r4, #3
 8016a12:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016a16:	b29f      	uxth	r7, r3
 8016a18:	43db      	mvns	r3, r3
 8016a1a:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8016a1e:	b2db      	uxtb	r3, r3
 8016a20:	b2e4      	uxtb	r4, r4
 8016a22:	9309      	str	r3, [sp, #36]	@ 0x24
 8016a24:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8016a26:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8016a2a:	fb13 f907 	smulbb	r9, r3, r7
 8016a2e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016a30:	fb00 9003 	mla	r0, r0, r3, r9
 8016a34:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8016a36:	fb13 f907 	smulbb	r9, r3, r7
 8016a3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016a3c:	b280      	uxth	r0, r0
 8016a3e:	fb01 9103 	mla	r1, r1, r3, r9
 8016a42:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8016a44:	fb13 f707 	smulbb	r7, r3, r7
 8016a48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016a4a:	b289      	uxth	r1, r1
 8016a4c:	fb04 7403 	mla	r4, r4, r3, r7
 8016a50:	1c43      	adds	r3, r0, #1
 8016a52:	b2a4      	uxth	r4, r4
 8016a54:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016a58:	f104 0901 	add.w	r9, r4, #1
 8016a5c:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8016a60:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8016a64:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8016a68:	ea49 0000 	orr.w	r0, r9, r0
 8016a6c:	f101 0901 	add.w	r9, r1, #1
 8016a70:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8016a74:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016a78:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016a7c:	ea40 0009 	orr.w	r0, r0, r9
 8016a80:	f8ac 0000 	strh.w	r0, [ip]
 8016a84:	4446      	add	r6, r8
 8016a86:	b2b6      	uxth	r6, r6
 8016a88:	2e07      	cmp	r6, #7
 8016a8a:	bf89      	itett	hi
 8016a8c:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 8016a8e:	fa42 f208 	asrls.w	r2, r2, r8
 8016a92:	2600      	movhi	r6, #0
 8016a94:	785a      	ldrbhi	r2, [r3, #1]
 8016a96:	bf8a      	itet	hi
 8016a98:	3301      	addhi	r3, #1
 8016a9a:	b2d2      	uxtbls	r2, r2
 8016a9c:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 8016a9e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016aa0:	449c      	add	ip, r3
 8016aa2:	e792      	b.n	80169ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8016aa4:	441c      	add	r4, r3
 8016aa6:	b224      	sxth	r4, r4
 8016aa8:	e6d5      	b.n	8016856 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8016aaa:	f1ba 0f01 	cmp.w	sl, #1
 8016aae:	f47f af0c 	bne.w	80168ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016ab2:	f1bb 0f01 	cmp.w	fp, #1
 8016ab6:	f47f af08 	bne.w	80168ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016aba:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 8016b80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 8016abe:	f8db 0000 	ldr.w	r0, [fp]
 8016ac2:	6803      	ldr	r3, [r0, #0]
 8016ac4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016ac6:	4798      	blx	r3
 8016ac8:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8016acc:	465a      	mov	r2, fp
 8016ace:	d006      	beq.n	8016ade <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8016ad0:	f1b8 0f04 	cmp.w	r8, #4
 8016ad4:	d140      	bne.n	8016b58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8016ad6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016ad8:	3300      	adds	r3, #0
 8016ada:	bf18      	it	ne
 8016adc:	2301      	movne	r3, #1
 8016ade:	0580      	lsls	r0, r0, #22
 8016ae0:	d56e      	bpl.n	8016bc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8016ae2:	f1b8 0f08 	cmp.w	r8, #8
 8016ae6:	d16b      	bne.n	8016bc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8016ae8:	2b00      	cmp	r3, #0
 8016aea:	bf0c      	ite	eq
 8016aec:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 8016af0:	f44f 7180 	movne.w	r1, #256	@ 0x100
 8016af4:	2d00      	cmp	r5, #0
 8016af6:	f47f aee8 	bne.w	80168ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016afa:	2e00      	cmp	r6, #0
 8016afc:	f47f aee5 	bne.w	80168ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016b00:	19e3      	adds	r3, r4, r7
 8016b02:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8016b04:	4283      	cmp	r3, r0
 8016b06:	f73f aee0 	bgt.w	80168ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016b0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016b0c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8016b0e:	444b      	add	r3, r9
 8016b10:	4283      	cmp	r3, r0
 8016b12:	f73f aeda 	bgt.w	80168ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016b16:	b2bf      	uxth	r7, r7
 8016b18:	f1b8 0f08 	cmp.w	r8, #8
 8016b1c:	6810      	ldr	r0, [r2, #0]
 8016b1e:	f04f 0500 	mov.w	r5, #0
 8016b22:	bf18      	it	ne
 8016b24:	3701      	addne	r7, #1
 8016b26:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 8016b2a:	6804      	ldr	r4, [r0, #0]
 8016b2c:	bf18      	it	ne
 8016b2e:	f027 0701 	bicne.w	r7, r7, #1
 8016b32:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8016b36:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8016b3a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016b3c:	bf18      	it	ne
 8016b3e:	b2bf      	uxthne	r7, r7
 8016b40:	9104      	str	r1, [sp, #16]
 8016b42:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8016b44:	e9cd 7900 	strd	r7, r9, [sp]
 8016b48:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8016b4c:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8016b4e:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 8016b50:	47a0      	blx	r4
 8016b52:	b019      	add	sp, #100	@ 0x64
 8016b54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b58:	2300      	movs	r3, #0
 8016b5a:	e7c0      	b.n	8016ade <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8016b5c:	2208      	movs	r2, #8
 8016b5e:	fb92 f3f8 	sdiv	r3, r2, r8
 8016b62:	1e5a      	subs	r2, r3, #1
 8016b64:	443a      	add	r2, r7
 8016b66:	fb92 f2f3 	sdiv	r2, r2, r3
 8016b6a:	fb12 f203 	smulbb	r2, r2, r3
 8016b6e:	b292      	uxth	r2, r2
 8016b70:	e6b0      	b.n	80168d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8016b72:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8016b74:	e6ec      	b.n	8016950 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8016b76:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8016b78:	e782      	b.n	8016a80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8016b7a:	bf00      	nop
 8016b7c:	200150b8 	.word	0x200150b8
 8016b80:	200150c0 	.word	0x200150c0
 8016b84:	200150ba 	.word	0x200150ba
 8016b88:	00fff800 	.word	0x00fff800
 8016b8c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8016b8e:	b153      	cbz	r3, 8016ba6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8016b90:	441e      	add	r6, r3
 8016b92:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8016b94:	b2b6      	uxth	r6, r6
 8016b96:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8016b9a:	f006 0607 	and.w	r6, r6, #7
 8016b9e:	781a      	ldrb	r2, [r3, #0]
 8016ba0:	9328      	str	r3, [sp, #160]	@ 0xa0
 8016ba2:	4132      	asrs	r2, r6
 8016ba4:	b2d2      	uxtb	r2, r2
 8016ba6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016ba8:	445b      	add	r3, fp
 8016baa:	930a      	str	r3, [sp, #40]	@ 0x28
 8016bac:	e706      	b.n	80169bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8016bae:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016bb0:	2b00      	cmp	r3, #0
 8016bb2:	d1ce      	bne.n	8016b52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8016bb4:	4b05      	ldr	r3, [pc, #20]	@ (8016bcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8016bb6:	6818      	ldr	r0, [r3, #0]
 8016bb8:	6803      	ldr	r3, [r0, #0]
 8016bba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016bbc:	4798      	blx	r3
 8016bbe:	e7c8      	b.n	8016b52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8016bc0:	2b00      	cmp	r3, #0
 8016bc2:	f43f ae82 	beq.w	80168ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016bc6:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8016bca:	e793      	b.n	8016af4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8016bcc:	200150c0 	.word	0x200150c0

08016bd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8016bd0:	b538      	push	{r3, r4, r5, lr}
 8016bd2:	4c15      	ldr	r4, [pc, #84]	@ (8016c28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8016bd4:	4605      	mov	r5, r0
 8016bd6:	7823      	ldrb	r3, [r4, #0]
 8016bd8:	f3bf 8f5b 	dmb	ish
 8016bdc:	07da      	lsls	r2, r3, #31
 8016bde:	d40b      	bmi.n	8016bf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8016be0:	4620      	mov	r0, r4
 8016be2:	f007 febe 	bl	801e962 <__cxa_guard_acquire>
 8016be6:	b138      	cbz	r0, 8016bf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8016be8:	4620      	mov	r0, r4
 8016bea:	f007 fec6 	bl	801e97a <__cxa_guard_release>
 8016bee:	4a0f      	ldr	r2, [pc, #60]	@ (8016c2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8016bf0:	490f      	ldr	r1, [pc, #60]	@ (8016c30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8016bf2:	4810      	ldr	r0, [pc, #64]	@ (8016c34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8016bf4:	f007 feae 	bl	801e954 <__aeabi_atexit>
 8016bf8:	4c0f      	ldr	r4, [pc, #60]	@ (8016c38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8016bfa:	7823      	ldrb	r3, [r4, #0]
 8016bfc:	f3bf 8f5b 	dmb	ish
 8016c00:	07db      	lsls	r3, r3, #31
 8016c02:	d40b      	bmi.n	8016c1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8016c04:	4620      	mov	r0, r4
 8016c06:	f007 feac 	bl	801e962 <__cxa_guard_acquire>
 8016c0a:	b138      	cbz	r0, 8016c1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8016c0c:	4620      	mov	r0, r4
 8016c0e:	f007 feb4 	bl	801e97a <__cxa_guard_release>
 8016c12:	4a06      	ldr	r2, [pc, #24]	@ (8016c2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8016c14:	4909      	ldr	r1, [pc, #36]	@ (8016c3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8016c16:	480a      	ldr	r0, [pc, #40]	@ (8016c40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8016c18:	f007 fe9c 	bl	801e954 <__aeabi_atexit>
 8016c1c:	4b05      	ldr	r3, [pc, #20]	@ (8016c34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8016c1e:	616b      	str	r3, [r5, #20]
 8016c20:	4b07      	ldr	r3, [pc, #28]	@ (8016c40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8016c22:	61ab      	str	r3, [r5, #24]
 8016c24:	bd38      	pop	{r3, r4, r5, pc}
 8016c26:	bf00      	nop
 8016c28:	20015198 	.word	0x20015198
 8016c2c:	20000000 	.word	0x20000000
 8016c30:	080139b3 	.word	0x080139b3
 8016c34:	20000090 	.word	0x20000090
 8016c38:	2001519c 	.word	0x2001519c
 8016c3c:	080139b1 	.word	0x080139b1
 8016c40:	20000094 	.word	0x20000094

08016c44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8016c44:	b538      	push	{r3, r4, r5, lr}
 8016c46:	4c15      	ldr	r4, [pc, #84]	@ (8016c9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8016c48:	4605      	mov	r5, r0
 8016c4a:	7823      	ldrb	r3, [r4, #0]
 8016c4c:	f3bf 8f5b 	dmb	ish
 8016c50:	07da      	lsls	r2, r3, #31
 8016c52:	d40b      	bmi.n	8016c6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8016c54:	4620      	mov	r0, r4
 8016c56:	f007 fe84 	bl	801e962 <__cxa_guard_acquire>
 8016c5a:	b138      	cbz	r0, 8016c6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8016c5c:	4620      	mov	r0, r4
 8016c5e:	f007 fe8c 	bl	801e97a <__cxa_guard_release>
 8016c62:	4a0f      	ldr	r2, [pc, #60]	@ (8016ca0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8016c64:	490f      	ldr	r1, [pc, #60]	@ (8016ca4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8016c66:	4810      	ldr	r0, [pc, #64]	@ (8016ca8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8016c68:	f007 fe74 	bl	801e954 <__aeabi_atexit>
 8016c6c:	4c0f      	ldr	r4, [pc, #60]	@ (8016cac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8016c6e:	7823      	ldrb	r3, [r4, #0]
 8016c70:	f3bf 8f5b 	dmb	ish
 8016c74:	07db      	lsls	r3, r3, #31
 8016c76:	d40b      	bmi.n	8016c90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8016c78:	4620      	mov	r0, r4
 8016c7a:	f007 fe72 	bl	801e962 <__cxa_guard_acquire>
 8016c7e:	b138      	cbz	r0, 8016c90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8016c80:	4620      	mov	r0, r4
 8016c82:	f007 fe7a 	bl	801e97a <__cxa_guard_release>
 8016c86:	4a06      	ldr	r2, [pc, #24]	@ (8016ca0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8016c88:	4909      	ldr	r1, [pc, #36]	@ (8016cb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8016c8a:	480a      	ldr	r0, [pc, #40]	@ (8016cb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8016c8c:	f007 fe62 	bl	801e954 <__aeabi_atexit>
 8016c90:	4b05      	ldr	r3, [pc, #20]	@ (8016ca8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8016c92:	60eb      	str	r3, [r5, #12]
 8016c94:	4b07      	ldr	r3, [pc, #28]	@ (8016cb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8016c96:	612b      	str	r3, [r5, #16]
 8016c98:	bd38      	pop	{r3, r4, r5, pc}
 8016c9a:	bf00      	nop
 8016c9c:	20015170 	.word	0x20015170
 8016ca0:	20000000 	.word	0x20000000
 8016ca4:	080139b7 	.word	0x080139b7
 8016ca8:	20000068 	.word	0x20000068
 8016cac:	20015174 	.word	0x20015174
 8016cb0:	080139b5 	.word	0x080139b5
 8016cb4:	2000006c 	.word	0x2000006c

08016cb8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8016cb8:	b510      	push	{r4, lr}
 8016cba:	4604      	mov	r4, r0
 8016cbc:	f7ff ff88 	bl	8016bd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8016cc0:	4620      	mov	r0, r4
 8016cc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016cc6:	f7ff bfbd 	b.w	8016c44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08016ccc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8016ccc:	b538      	push	{r3, r4, r5, lr}
 8016cce:	4c15      	ldr	r4, [pc, #84]	@ (8016d24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8016cd0:	4605      	mov	r5, r0
 8016cd2:	7823      	ldrb	r3, [r4, #0]
 8016cd4:	f3bf 8f5b 	dmb	ish
 8016cd8:	07da      	lsls	r2, r3, #31
 8016cda:	d40b      	bmi.n	8016cf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8016cdc:	4620      	mov	r0, r4
 8016cde:	f007 fe40 	bl	801e962 <__cxa_guard_acquire>
 8016ce2:	b138      	cbz	r0, 8016cf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8016ce4:	4620      	mov	r0, r4
 8016ce6:	f007 fe48 	bl	801e97a <__cxa_guard_release>
 8016cea:	4a0f      	ldr	r2, [pc, #60]	@ (8016d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8016cec:	490f      	ldr	r1, [pc, #60]	@ (8016d2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8016cee:	4810      	ldr	r0, [pc, #64]	@ (8016d30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8016cf0:	f007 fe30 	bl	801e954 <__aeabi_atexit>
 8016cf4:	4c0f      	ldr	r4, [pc, #60]	@ (8016d34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8016cf6:	7823      	ldrb	r3, [r4, #0]
 8016cf8:	f3bf 8f5b 	dmb	ish
 8016cfc:	07db      	lsls	r3, r3, #31
 8016cfe:	d40b      	bmi.n	8016d18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8016d00:	4620      	mov	r0, r4
 8016d02:	f007 fe2e 	bl	801e962 <__cxa_guard_acquire>
 8016d06:	b138      	cbz	r0, 8016d18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8016d08:	4620      	mov	r0, r4
 8016d0a:	f007 fe36 	bl	801e97a <__cxa_guard_release>
 8016d0e:	4a06      	ldr	r2, [pc, #24]	@ (8016d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8016d10:	4909      	ldr	r1, [pc, #36]	@ (8016d38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8016d12:	480a      	ldr	r0, [pc, #40]	@ (8016d3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8016d14:	f007 fe1e 	bl	801e954 <__aeabi_atexit>
 8016d18:	4b05      	ldr	r3, [pc, #20]	@ (8016d30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8016d1a:	626b      	str	r3, [r5, #36]	@ 0x24
 8016d1c:	4b07      	ldr	r3, [pc, #28]	@ (8016d3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8016d1e:	62ab      	str	r3, [r5, #40]	@ 0x28
 8016d20:	bd38      	pop	{r3, r4, r5, pc}
 8016d22:	bf00      	nop
 8016d24:	200151a0 	.word	0x200151a0
 8016d28:	20000000 	.word	0x20000000
 8016d2c:	080139ab 	.word	0x080139ab
 8016d30:	20000098 	.word	0x20000098
 8016d34:	200151a4 	.word	0x200151a4
 8016d38:	080139a9 	.word	0x080139a9
 8016d3c:	2000009c 	.word	0x2000009c

08016d40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8016d40:	b538      	push	{r3, r4, r5, lr}
 8016d42:	4c15      	ldr	r4, [pc, #84]	@ (8016d98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8016d44:	4605      	mov	r5, r0
 8016d46:	7823      	ldrb	r3, [r4, #0]
 8016d48:	f3bf 8f5b 	dmb	ish
 8016d4c:	07da      	lsls	r2, r3, #31
 8016d4e:	d40b      	bmi.n	8016d68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8016d50:	4620      	mov	r0, r4
 8016d52:	f007 fe06 	bl	801e962 <__cxa_guard_acquire>
 8016d56:	b138      	cbz	r0, 8016d68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8016d58:	4620      	mov	r0, r4
 8016d5a:	f007 fe0e 	bl	801e97a <__cxa_guard_release>
 8016d5e:	4a0f      	ldr	r2, [pc, #60]	@ (8016d9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8016d60:	490f      	ldr	r1, [pc, #60]	@ (8016da0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8016d62:	4810      	ldr	r0, [pc, #64]	@ (8016da4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8016d64:	f007 fdf6 	bl	801e954 <__aeabi_atexit>
 8016d68:	4c0f      	ldr	r4, [pc, #60]	@ (8016da8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8016d6a:	7823      	ldrb	r3, [r4, #0]
 8016d6c:	f3bf 8f5b 	dmb	ish
 8016d70:	07db      	lsls	r3, r3, #31
 8016d72:	d40b      	bmi.n	8016d8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8016d74:	4620      	mov	r0, r4
 8016d76:	f007 fdf4 	bl	801e962 <__cxa_guard_acquire>
 8016d7a:	b138      	cbz	r0, 8016d8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8016d7c:	4620      	mov	r0, r4
 8016d7e:	f007 fdfc 	bl	801e97a <__cxa_guard_release>
 8016d82:	4a06      	ldr	r2, [pc, #24]	@ (8016d9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8016d84:	4909      	ldr	r1, [pc, #36]	@ (8016dac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8016d86:	480a      	ldr	r0, [pc, #40]	@ (8016db0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8016d88:	f007 fde4 	bl	801e954 <__aeabi_atexit>
 8016d8c:	4b05      	ldr	r3, [pc, #20]	@ (8016da4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8016d8e:	61eb      	str	r3, [r5, #28]
 8016d90:	4b07      	ldr	r3, [pc, #28]	@ (8016db0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8016d92:	622b      	str	r3, [r5, #32]
 8016d94:	bd38      	pop	{r3, r4, r5, pc}
 8016d96:	bf00      	nop
 8016d98:	20015178 	.word	0x20015178
 8016d9c:	20000000 	.word	0x20000000
 8016da0:	080139af 	.word	0x080139af
 8016da4:	20000070 	.word	0x20000070
 8016da8:	2001517c 	.word	0x2001517c
 8016dac:	080139ad 	.word	0x080139ad
 8016db0:	20000074 	.word	0x20000074

08016db4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8016db4:	b510      	push	{r4, lr}
 8016db6:	4604      	mov	r4, r0
 8016db8:	f7ff ff88 	bl	8016ccc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8016dbc:	4620      	mov	r0, r4
 8016dbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016dc2:	f7ff bfbd 	b.w	8016d40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08016dc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8016dc8:	b538      	push	{r3, r4, r5, lr}
 8016dca:	4c15      	ldr	r4, [pc, #84]	@ (8016e20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8016dcc:	4605      	mov	r5, r0
 8016dce:	7823      	ldrb	r3, [r4, #0]
 8016dd0:	f3bf 8f5b 	dmb	ish
 8016dd4:	07da      	lsls	r2, r3, #31
 8016dd6:	d40b      	bmi.n	8016df0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8016dd8:	4620      	mov	r0, r4
 8016dda:	f007 fdc2 	bl	801e962 <__cxa_guard_acquire>
 8016dde:	b138      	cbz	r0, 8016df0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8016de0:	4620      	mov	r0, r4
 8016de2:	f007 fdca 	bl	801e97a <__cxa_guard_release>
 8016de6:	4a0f      	ldr	r2, [pc, #60]	@ (8016e24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8016de8:	490f      	ldr	r1, [pc, #60]	@ (8016e28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8016dea:	4810      	ldr	r0, [pc, #64]	@ (8016e2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8016dec:	f007 fdb2 	bl	801e954 <__aeabi_atexit>
 8016df0:	4c0f      	ldr	r4, [pc, #60]	@ (8016e30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8016df2:	7823      	ldrb	r3, [r4, #0]
 8016df4:	f3bf 8f5b 	dmb	ish
 8016df8:	07db      	lsls	r3, r3, #31
 8016dfa:	d40b      	bmi.n	8016e14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8016dfc:	4620      	mov	r0, r4
 8016dfe:	f007 fdb0 	bl	801e962 <__cxa_guard_acquire>
 8016e02:	b138      	cbz	r0, 8016e14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8016e04:	4620      	mov	r0, r4
 8016e06:	f007 fdb8 	bl	801e97a <__cxa_guard_release>
 8016e0a:	4a06      	ldr	r2, [pc, #24]	@ (8016e24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8016e0c:	4909      	ldr	r1, [pc, #36]	@ (8016e34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8016e0e:	480a      	ldr	r0, [pc, #40]	@ (8016e38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8016e10:	f007 fda0 	bl	801e954 <__aeabi_atexit>
 8016e14:	4b05      	ldr	r3, [pc, #20]	@ (8016e2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8016e16:	636b      	str	r3, [r5, #52]	@ 0x34
 8016e18:	4b07      	ldr	r3, [pc, #28]	@ (8016e38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8016e1a:	63ab      	str	r3, [r5, #56]	@ 0x38
 8016e1c:	bd38      	pop	{r3, r4, r5, pc}
 8016e1e:	bf00      	nop
 8016e20:	200151b0 	.word	0x200151b0
 8016e24:	20000000 	.word	0x20000000
 8016e28:	080139a3 	.word	0x080139a3
 8016e2c:	200000a8 	.word	0x200000a8
 8016e30:	200151b4 	.word	0x200151b4
 8016e34:	080139a1 	.word	0x080139a1
 8016e38:	200000ac 	.word	0x200000ac

08016e3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8016e3c:	b538      	push	{r3, r4, r5, lr}
 8016e3e:	4c15      	ldr	r4, [pc, #84]	@ (8016e94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8016e40:	4605      	mov	r5, r0
 8016e42:	7823      	ldrb	r3, [r4, #0]
 8016e44:	f3bf 8f5b 	dmb	ish
 8016e48:	07da      	lsls	r2, r3, #31
 8016e4a:	d40b      	bmi.n	8016e64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8016e4c:	4620      	mov	r0, r4
 8016e4e:	f007 fd88 	bl	801e962 <__cxa_guard_acquire>
 8016e52:	b138      	cbz	r0, 8016e64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8016e54:	4620      	mov	r0, r4
 8016e56:	f007 fd90 	bl	801e97a <__cxa_guard_release>
 8016e5a:	4a0f      	ldr	r2, [pc, #60]	@ (8016e98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8016e5c:	490f      	ldr	r1, [pc, #60]	@ (8016e9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8016e5e:	4810      	ldr	r0, [pc, #64]	@ (8016ea0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8016e60:	f007 fd78 	bl	801e954 <__aeabi_atexit>
 8016e64:	4c0f      	ldr	r4, [pc, #60]	@ (8016ea4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8016e66:	7823      	ldrb	r3, [r4, #0]
 8016e68:	f3bf 8f5b 	dmb	ish
 8016e6c:	07db      	lsls	r3, r3, #31
 8016e6e:	d40b      	bmi.n	8016e88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8016e70:	4620      	mov	r0, r4
 8016e72:	f007 fd76 	bl	801e962 <__cxa_guard_acquire>
 8016e76:	b138      	cbz	r0, 8016e88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8016e78:	4620      	mov	r0, r4
 8016e7a:	f007 fd7e 	bl	801e97a <__cxa_guard_release>
 8016e7e:	4a06      	ldr	r2, [pc, #24]	@ (8016e98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8016e80:	4909      	ldr	r1, [pc, #36]	@ (8016ea8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8016e82:	480a      	ldr	r0, [pc, #40]	@ (8016eac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8016e84:	f007 fd66 	bl	801e954 <__aeabi_atexit>
 8016e88:	4b05      	ldr	r3, [pc, #20]	@ (8016ea0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8016e8a:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8016e8c:	4b07      	ldr	r3, [pc, #28]	@ (8016eac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8016e8e:	632b      	str	r3, [r5, #48]	@ 0x30
 8016e90:	bd38      	pop	{r3, r4, r5, pc}
 8016e92:	bf00      	nop
 8016e94:	20015180 	.word	0x20015180
 8016e98:	20000000 	.word	0x20000000
 8016e9c:	080139a7 	.word	0x080139a7
 8016ea0:	20000078 	.word	0x20000078
 8016ea4:	20015184 	.word	0x20015184
 8016ea8:	080139a5 	.word	0x080139a5
 8016eac:	2000007c 	.word	0x2000007c

08016eb0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8016eb0:	b510      	push	{r4, lr}
 8016eb2:	4604      	mov	r4, r0
 8016eb4:	f7ff ff88 	bl	8016dc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8016eb8:	4620      	mov	r0, r4
 8016eba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016ebe:	f7ff bfbd 	b.w	8016e3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08016ec4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8016ec4:	b538      	push	{r3, r4, r5, lr}
 8016ec6:	4c15      	ldr	r4, [pc, #84]	@ (8016f1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8016ec8:	4605      	mov	r5, r0
 8016eca:	7823      	ldrb	r3, [r4, #0]
 8016ecc:	f3bf 8f5b 	dmb	ish
 8016ed0:	07da      	lsls	r2, r3, #31
 8016ed2:	d40b      	bmi.n	8016eec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8016ed4:	4620      	mov	r0, r4
 8016ed6:	f007 fd44 	bl	801e962 <__cxa_guard_acquire>
 8016eda:	b138      	cbz	r0, 8016eec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8016edc:	4620      	mov	r0, r4
 8016ede:	f007 fd4c 	bl	801e97a <__cxa_guard_release>
 8016ee2:	4a0f      	ldr	r2, [pc, #60]	@ (8016f20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8016ee4:	490f      	ldr	r1, [pc, #60]	@ (8016f24 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8016ee6:	4810      	ldr	r0, [pc, #64]	@ (8016f28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8016ee8:	f007 fd34 	bl	801e954 <__aeabi_atexit>
 8016eec:	4c0f      	ldr	r4, [pc, #60]	@ (8016f2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8016eee:	7823      	ldrb	r3, [r4, #0]
 8016ef0:	f3bf 8f5b 	dmb	ish
 8016ef4:	07db      	lsls	r3, r3, #31
 8016ef6:	d40b      	bmi.n	8016f10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8016ef8:	4620      	mov	r0, r4
 8016efa:	f007 fd32 	bl	801e962 <__cxa_guard_acquire>
 8016efe:	b138      	cbz	r0, 8016f10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8016f00:	4620      	mov	r0, r4
 8016f02:	f007 fd3a 	bl	801e97a <__cxa_guard_release>
 8016f06:	4a06      	ldr	r2, [pc, #24]	@ (8016f20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8016f08:	4909      	ldr	r1, [pc, #36]	@ (8016f30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8016f0a:	480a      	ldr	r0, [pc, #40]	@ (8016f34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8016f0c:	f007 fd22 	bl	801e954 <__aeabi_atexit>
 8016f10:	4b05      	ldr	r3, [pc, #20]	@ (8016f28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8016f12:	656b      	str	r3, [r5, #84]	@ 0x54
 8016f14:	4b07      	ldr	r3, [pc, #28]	@ (8016f34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8016f16:	65ab      	str	r3, [r5, #88]	@ 0x58
 8016f18:	bd38      	pop	{r3, r4, r5, pc}
 8016f1a:	bf00      	nop
 8016f1c:	200151b8 	.word	0x200151b8
 8016f20:	20000000 	.word	0x20000000
 8016f24:	08013993 	.word	0x08013993
 8016f28:	200000b0 	.word	0x200000b0
 8016f2c:	200151bc 	.word	0x200151bc
 8016f30:	08013991 	.word	0x08013991
 8016f34:	200000b4 	.word	0x200000b4

08016f38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8016f38:	b538      	push	{r3, r4, r5, lr}
 8016f3a:	4c15      	ldr	r4, [pc, #84]	@ (8016f90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8016f3c:	4605      	mov	r5, r0
 8016f3e:	7823      	ldrb	r3, [r4, #0]
 8016f40:	f3bf 8f5b 	dmb	ish
 8016f44:	07da      	lsls	r2, r3, #31
 8016f46:	d40b      	bmi.n	8016f60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8016f48:	4620      	mov	r0, r4
 8016f4a:	f007 fd0a 	bl	801e962 <__cxa_guard_acquire>
 8016f4e:	b138      	cbz	r0, 8016f60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8016f50:	4620      	mov	r0, r4
 8016f52:	f007 fd12 	bl	801e97a <__cxa_guard_release>
 8016f56:	4a0f      	ldr	r2, [pc, #60]	@ (8016f94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8016f58:	490f      	ldr	r1, [pc, #60]	@ (8016f98 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8016f5a:	4810      	ldr	r0, [pc, #64]	@ (8016f9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8016f5c:	f007 fcfa 	bl	801e954 <__aeabi_atexit>
 8016f60:	4c0f      	ldr	r4, [pc, #60]	@ (8016fa0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8016f62:	7823      	ldrb	r3, [r4, #0]
 8016f64:	f3bf 8f5b 	dmb	ish
 8016f68:	07db      	lsls	r3, r3, #31
 8016f6a:	d40b      	bmi.n	8016f84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8016f6c:	4620      	mov	r0, r4
 8016f6e:	f007 fcf8 	bl	801e962 <__cxa_guard_acquire>
 8016f72:	b138      	cbz	r0, 8016f84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8016f74:	4620      	mov	r0, r4
 8016f76:	f007 fd00 	bl	801e97a <__cxa_guard_release>
 8016f7a:	4a06      	ldr	r2, [pc, #24]	@ (8016f94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8016f7c:	4909      	ldr	r1, [pc, #36]	@ (8016fa4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8016f7e:	480a      	ldr	r0, [pc, #40]	@ (8016fa8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8016f80:	f007 fce8 	bl	801e954 <__aeabi_atexit>
 8016f84:	4b05      	ldr	r3, [pc, #20]	@ (8016f9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8016f86:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8016f88:	4b07      	ldr	r3, [pc, #28]	@ (8016fa8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8016f8a:	652b      	str	r3, [r5, #80]	@ 0x50
 8016f8c:	bd38      	pop	{r3, r4, r5, pc}
 8016f8e:	bf00      	nop
 8016f90:	200151c0 	.word	0x200151c0
 8016f94:	20000000 	.word	0x20000000
 8016f98:	08013997 	.word	0x08013997
 8016f9c:	200000b8 	.word	0x200000b8
 8016fa0:	200151c4 	.word	0x200151c4
 8016fa4:	08013995 	.word	0x08013995
 8016fa8:	200000bc 	.word	0x200000bc

08016fac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8016fac:	b538      	push	{r3, r4, r5, lr}
 8016fae:	4c15      	ldr	r4, [pc, #84]	@ (8017004 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8016fb0:	4605      	mov	r5, r0
 8016fb2:	7823      	ldrb	r3, [r4, #0]
 8016fb4:	f3bf 8f5b 	dmb	ish
 8016fb8:	07da      	lsls	r2, r3, #31
 8016fba:	d40b      	bmi.n	8016fd4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8016fbc:	4620      	mov	r0, r4
 8016fbe:	f007 fcd0 	bl	801e962 <__cxa_guard_acquire>
 8016fc2:	b138      	cbz	r0, 8016fd4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8016fc4:	4620      	mov	r0, r4
 8016fc6:	f007 fcd8 	bl	801e97a <__cxa_guard_release>
 8016fca:	4a0f      	ldr	r2, [pc, #60]	@ (8017008 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8016fcc:	490f      	ldr	r1, [pc, #60]	@ (801700c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8016fce:	4810      	ldr	r0, [pc, #64]	@ (8017010 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8016fd0:	f007 fcc0 	bl	801e954 <__aeabi_atexit>
 8016fd4:	4c0f      	ldr	r4, [pc, #60]	@ (8017014 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8016fd6:	7823      	ldrb	r3, [r4, #0]
 8016fd8:	f3bf 8f5b 	dmb	ish
 8016fdc:	07db      	lsls	r3, r3, #31
 8016fde:	d40b      	bmi.n	8016ff8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8016fe0:	4620      	mov	r0, r4
 8016fe2:	f007 fcbe 	bl	801e962 <__cxa_guard_acquire>
 8016fe6:	b138      	cbz	r0, 8016ff8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8016fe8:	4620      	mov	r0, r4
 8016fea:	f007 fcc6 	bl	801e97a <__cxa_guard_release>
 8016fee:	4a06      	ldr	r2, [pc, #24]	@ (8017008 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8016ff0:	4909      	ldr	r1, [pc, #36]	@ (8017018 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8016ff2:	480a      	ldr	r0, [pc, #40]	@ (801701c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8016ff4:	f007 fcae 	bl	801e954 <__aeabi_atexit>
 8016ff8:	4b05      	ldr	r3, [pc, #20]	@ (8017010 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8016ffa:	646b      	str	r3, [r5, #68]	@ 0x44
 8016ffc:	4b07      	ldr	r3, [pc, #28]	@ (801701c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8016ffe:	64ab      	str	r3, [r5, #72]	@ 0x48
 8017000:	bd38      	pop	{r3, r4, r5, pc}
 8017002:	bf00      	nop
 8017004:	20015188 	.word	0x20015188
 8017008:	20000000 	.word	0x20000000
 801700c:	0801399b 	.word	0x0801399b
 8017010:	20000080 	.word	0x20000080
 8017014:	2001518c 	.word	0x2001518c
 8017018:	08013999 	.word	0x08013999
 801701c:	20000084 	.word	0x20000084

08017020 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8017020:	b538      	push	{r3, r4, r5, lr}
 8017022:	4c15      	ldr	r4, [pc, #84]	@ (8017078 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8017024:	4605      	mov	r5, r0
 8017026:	7823      	ldrb	r3, [r4, #0]
 8017028:	f3bf 8f5b 	dmb	ish
 801702c:	07da      	lsls	r2, r3, #31
 801702e:	d40b      	bmi.n	8017048 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8017030:	4620      	mov	r0, r4
 8017032:	f007 fc96 	bl	801e962 <__cxa_guard_acquire>
 8017036:	b138      	cbz	r0, 8017048 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8017038:	4620      	mov	r0, r4
 801703a:	f007 fc9e 	bl	801e97a <__cxa_guard_release>
 801703e:	4a0f      	ldr	r2, [pc, #60]	@ (801707c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8017040:	490f      	ldr	r1, [pc, #60]	@ (8017080 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8017042:	4810      	ldr	r0, [pc, #64]	@ (8017084 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8017044:	f007 fc86 	bl	801e954 <__aeabi_atexit>
 8017048:	4c0f      	ldr	r4, [pc, #60]	@ (8017088 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801704a:	7823      	ldrb	r3, [r4, #0]
 801704c:	f3bf 8f5b 	dmb	ish
 8017050:	07db      	lsls	r3, r3, #31
 8017052:	d40b      	bmi.n	801706c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8017054:	4620      	mov	r0, r4
 8017056:	f007 fc84 	bl	801e962 <__cxa_guard_acquire>
 801705a:	b138      	cbz	r0, 801706c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801705c:	4620      	mov	r0, r4
 801705e:	f007 fc8c 	bl	801e97a <__cxa_guard_release>
 8017062:	4a06      	ldr	r2, [pc, #24]	@ (801707c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8017064:	4909      	ldr	r1, [pc, #36]	@ (801708c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8017066:	480a      	ldr	r0, [pc, #40]	@ (8017090 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8017068:	f007 fc74 	bl	801e954 <__aeabi_atexit>
 801706c:	4b05      	ldr	r3, [pc, #20]	@ (8017084 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801706e:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8017070:	4b07      	ldr	r3, [pc, #28]	@ (8017090 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8017072:	642b      	str	r3, [r5, #64]	@ 0x40
 8017074:	bd38      	pop	{r3, r4, r5, pc}
 8017076:	bf00      	nop
 8017078:	200151a8 	.word	0x200151a8
 801707c:	20000000 	.word	0x20000000
 8017080:	0801399f 	.word	0x0801399f
 8017084:	200000a0 	.word	0x200000a0
 8017088:	200151ac 	.word	0x200151ac
 801708c:	0801399d 	.word	0x0801399d
 8017090:	200000a4 	.word	0x200000a4

08017094 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8017094:	b510      	push	{r4, lr}
 8017096:	4604      	mov	r4, r0
 8017098:	f7ff ff14 	bl	8016ec4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801709c:	4620      	mov	r0, r4
 801709e:	f7ff ff85 	bl	8016fac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80170a2:	4620      	mov	r0, r4
 80170a4:	f7ff ff48 	bl	8016f38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80170a8:	4620      	mov	r0, r4
 80170aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80170ae:	f7ff bfb7 	b.w	8017020 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080170b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80170b4:	b538      	push	{r3, r4, r5, lr}
 80170b6:	4c15      	ldr	r4, [pc, #84]	@ (801710c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80170b8:	4605      	mov	r5, r0
 80170ba:	7823      	ldrb	r3, [r4, #0]
 80170bc:	f3bf 8f5b 	dmb	ish
 80170c0:	07da      	lsls	r2, r3, #31
 80170c2:	d40b      	bmi.n	80170dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80170c4:	4620      	mov	r0, r4
 80170c6:	f007 fc4c 	bl	801e962 <__cxa_guard_acquire>
 80170ca:	b138      	cbz	r0, 80170dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80170cc:	4620      	mov	r0, r4
 80170ce:	f007 fc54 	bl	801e97a <__cxa_guard_release>
 80170d2:	4a0f      	ldr	r2, [pc, #60]	@ (8017110 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80170d4:	490f      	ldr	r1, [pc, #60]	@ (8017114 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80170d6:	4810      	ldr	r0, [pc, #64]	@ (8017118 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80170d8:	f007 fc3c 	bl	801e954 <__aeabi_atexit>
 80170dc:	4c0f      	ldr	r4, [pc, #60]	@ (801711c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80170de:	7823      	ldrb	r3, [r4, #0]
 80170e0:	f3bf 8f5b 	dmb	ish
 80170e4:	07db      	lsls	r3, r3, #31
 80170e6:	d40b      	bmi.n	8017100 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80170e8:	4620      	mov	r0, r4
 80170ea:	f007 fc3a 	bl	801e962 <__cxa_guard_acquire>
 80170ee:	b138      	cbz	r0, 8017100 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80170f0:	4620      	mov	r0, r4
 80170f2:	f007 fc42 	bl	801e97a <__cxa_guard_release>
 80170f6:	4a06      	ldr	r2, [pc, #24]	@ (8017110 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80170f8:	4909      	ldr	r1, [pc, #36]	@ (8017120 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80170fa:	480a      	ldr	r0, [pc, #40]	@ (8017124 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80170fc:	f007 fc2a 	bl	801e954 <__aeabi_atexit>
 8017100:	4b05      	ldr	r3, [pc, #20]	@ (8017118 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8017102:	666b      	str	r3, [r5, #100]	@ 0x64
 8017104:	4b07      	ldr	r3, [pc, #28]	@ (8017124 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8017106:	66ab      	str	r3, [r5, #104]	@ 0x68
 8017108:	bd38      	pop	{r3, r4, r5, pc}
 801710a:	bf00      	nop
 801710c:	20015190 	.word	0x20015190
 8017110:	20000000 	.word	0x20000000
 8017114:	0801398b 	.word	0x0801398b
 8017118:	20000088 	.word	0x20000088
 801711c:	20015194 	.word	0x20015194
 8017120:	08013989 	.word	0x08013989
 8017124:	2000008c 	.word	0x2000008c

08017128 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8017128:	b538      	push	{r3, r4, r5, lr}
 801712a:	4c15      	ldr	r4, [pc, #84]	@ (8017180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801712c:	4605      	mov	r5, r0
 801712e:	7823      	ldrb	r3, [r4, #0]
 8017130:	f3bf 8f5b 	dmb	ish
 8017134:	07da      	lsls	r2, r3, #31
 8017136:	d40b      	bmi.n	8017150 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8017138:	4620      	mov	r0, r4
 801713a:	f007 fc12 	bl	801e962 <__cxa_guard_acquire>
 801713e:	b138      	cbz	r0, 8017150 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8017140:	4620      	mov	r0, r4
 8017142:	f007 fc1a 	bl	801e97a <__cxa_guard_release>
 8017146:	4a0f      	ldr	r2, [pc, #60]	@ (8017184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8017148:	490f      	ldr	r1, [pc, #60]	@ (8017188 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801714a:	4810      	ldr	r0, [pc, #64]	@ (801718c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801714c:	f007 fc02 	bl	801e954 <__aeabi_atexit>
 8017150:	4c0f      	ldr	r4, [pc, #60]	@ (8017190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8017152:	7823      	ldrb	r3, [r4, #0]
 8017154:	f3bf 8f5b 	dmb	ish
 8017158:	07db      	lsls	r3, r3, #31
 801715a:	d40b      	bmi.n	8017174 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801715c:	4620      	mov	r0, r4
 801715e:	f007 fc00 	bl	801e962 <__cxa_guard_acquire>
 8017162:	b138      	cbz	r0, 8017174 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8017164:	4620      	mov	r0, r4
 8017166:	f007 fc08 	bl	801e97a <__cxa_guard_release>
 801716a:	4a06      	ldr	r2, [pc, #24]	@ (8017184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801716c:	4909      	ldr	r1, [pc, #36]	@ (8017194 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801716e:	480a      	ldr	r0, [pc, #40]	@ (8017198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8017170:	f007 fbf0 	bl	801e954 <__aeabi_atexit>
 8017174:	4b05      	ldr	r3, [pc, #20]	@ (801718c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8017176:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8017178:	4b07      	ldr	r3, [pc, #28]	@ (8017198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801717a:	662b      	str	r3, [r5, #96]	@ 0x60
 801717c:	bd38      	pop	{r3, r4, r5, pc}
 801717e:	bf00      	nop
 8017180:	20015168 	.word	0x20015168
 8017184:	20000000 	.word	0x20000000
 8017188:	0801398f 	.word	0x0801398f
 801718c:	20000060 	.word	0x20000060
 8017190:	2001516c 	.word	0x2001516c
 8017194:	0801398d 	.word	0x0801398d
 8017198:	20000064 	.word	0x20000064

0801719c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801719c:	b510      	push	{r4, lr}
 801719e:	4604      	mov	r4, r0
 80171a0:	f7ff ff88 	bl	80170b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80171a4:	4620      	mov	r0, r4
 80171a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80171aa:	f7ff bfbd 	b.w	8017128 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080171b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80171b0:	b538      	push	{r3, r4, r5, lr}
 80171b2:	4c15      	ldr	r4, [pc, #84]	@ (8017208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80171b4:	4605      	mov	r5, r0
 80171b6:	7823      	ldrb	r3, [r4, #0]
 80171b8:	f3bf 8f5b 	dmb	ish
 80171bc:	07da      	lsls	r2, r3, #31
 80171be:	d40b      	bmi.n	80171d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80171c0:	4620      	mov	r0, r4
 80171c2:	f007 fbce 	bl	801e962 <__cxa_guard_acquire>
 80171c6:	b138      	cbz	r0, 80171d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80171c8:	4620      	mov	r0, r4
 80171ca:	f007 fbd6 	bl	801e97a <__cxa_guard_release>
 80171ce:	4a0f      	ldr	r2, [pc, #60]	@ (801720c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80171d0:	490f      	ldr	r1, [pc, #60]	@ (8017210 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80171d2:	4810      	ldr	r0, [pc, #64]	@ (8017214 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80171d4:	f007 fbbe 	bl	801e954 <__aeabi_atexit>
 80171d8:	4c0f      	ldr	r4, [pc, #60]	@ (8017218 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80171da:	7823      	ldrb	r3, [r4, #0]
 80171dc:	f3bf 8f5b 	dmb	ish
 80171e0:	07db      	lsls	r3, r3, #31
 80171e2:	d40b      	bmi.n	80171fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80171e4:	4620      	mov	r0, r4
 80171e6:	f007 fbbc 	bl	801e962 <__cxa_guard_acquire>
 80171ea:	b138      	cbz	r0, 80171fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80171ec:	4620      	mov	r0, r4
 80171ee:	f007 fbc4 	bl	801e97a <__cxa_guard_release>
 80171f2:	4a06      	ldr	r2, [pc, #24]	@ (801720c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80171f4:	4909      	ldr	r1, [pc, #36]	@ (801721c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80171f6:	480a      	ldr	r0, [pc, #40]	@ (8017220 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80171f8:	f007 fbac 	bl	801e954 <__aeabi_atexit>
 80171fc:	4b05      	ldr	r3, [pc, #20]	@ (8017214 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80171fe:	676b      	str	r3, [r5, #116]	@ 0x74
 8017200:	4b07      	ldr	r3, [pc, #28]	@ (8017220 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8017202:	67ab      	str	r3, [r5, #120]	@ 0x78
 8017204:	bd38      	pop	{r3, r4, r5, pc}
 8017206:	bf00      	nop
 8017208:	20015160 	.word	0x20015160
 801720c:	20000000 	.word	0x20000000
 8017210:	08013983 	.word	0x08013983
 8017214:	20000058 	.word	0x20000058
 8017218:	20015164 	.word	0x20015164
 801721c:	08013981 	.word	0x08013981
 8017220:	2000005c 	.word	0x2000005c

08017224 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8017224:	b538      	push	{r3, r4, r5, lr}
 8017226:	4c15      	ldr	r4, [pc, #84]	@ (801727c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8017228:	4605      	mov	r5, r0
 801722a:	7823      	ldrb	r3, [r4, #0]
 801722c:	f3bf 8f5b 	dmb	ish
 8017230:	07da      	lsls	r2, r3, #31
 8017232:	d40b      	bmi.n	801724c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8017234:	4620      	mov	r0, r4
 8017236:	f007 fb94 	bl	801e962 <__cxa_guard_acquire>
 801723a:	b138      	cbz	r0, 801724c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801723c:	4620      	mov	r0, r4
 801723e:	f007 fb9c 	bl	801e97a <__cxa_guard_release>
 8017242:	4a0f      	ldr	r2, [pc, #60]	@ (8017280 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8017244:	490f      	ldr	r1, [pc, #60]	@ (8017284 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8017246:	4810      	ldr	r0, [pc, #64]	@ (8017288 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8017248:	f007 fb84 	bl	801e954 <__aeabi_atexit>
 801724c:	4c0f      	ldr	r4, [pc, #60]	@ (801728c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801724e:	7823      	ldrb	r3, [r4, #0]
 8017250:	f3bf 8f5b 	dmb	ish
 8017254:	07db      	lsls	r3, r3, #31
 8017256:	d40b      	bmi.n	8017270 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8017258:	4620      	mov	r0, r4
 801725a:	f007 fb82 	bl	801e962 <__cxa_guard_acquire>
 801725e:	b138      	cbz	r0, 8017270 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8017260:	4620      	mov	r0, r4
 8017262:	f007 fb8a 	bl	801e97a <__cxa_guard_release>
 8017266:	4a06      	ldr	r2, [pc, #24]	@ (8017280 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8017268:	4909      	ldr	r1, [pc, #36]	@ (8017290 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801726a:	480a      	ldr	r0, [pc, #40]	@ (8017294 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801726c:	f007 fb72 	bl	801e954 <__aeabi_atexit>
 8017270:	4b05      	ldr	r3, [pc, #20]	@ (8017288 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8017272:	66eb      	str	r3, [r5, #108]	@ 0x6c
 8017274:	4b07      	ldr	r3, [pc, #28]	@ (8017294 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8017276:	672b      	str	r3, [r5, #112]	@ 0x70
 8017278:	bd38      	pop	{r3, r4, r5, pc}
 801727a:	bf00      	nop
 801727c:	20015158 	.word	0x20015158
 8017280:	20000000 	.word	0x20000000
 8017284:	08013987 	.word	0x08013987
 8017288:	20000050 	.word	0x20000050
 801728c:	2001515c 	.word	0x2001515c
 8017290:	08013985 	.word	0x08013985
 8017294:	20000054 	.word	0x20000054

08017298 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8017298:	b510      	push	{r4, lr}
 801729a:	4604      	mov	r4, r0
 801729c:	f7ff ff88 	bl	80171b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80172a0:	4620      	mov	r0, r4
 80172a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80172a6:	f7ff bfbd 	b.w	8017224 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080172aa <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80172aa:	b510      	push	{r4, lr}
 80172ac:	4604      	mov	r4, r0
 80172ae:	f7ff fff3 	bl	8017298 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80172b2:	4620      	mov	r0, r4
 80172b4:	f7ff ff72 	bl	801719c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80172b8:	4620      	mov	r0, r4
 80172ba:	f7ff fdf9 	bl	8016eb0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80172be:	4620      	mov	r0, r4
 80172c0:	f7ff fcfa 	bl	8016cb8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80172c4:	4620      	mov	r0, r4
 80172c6:	f7ff fd75 	bl	8016db4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80172ca:	4620      	mov	r0, r4
 80172cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80172d0:	f7ff bee0 	b.w	8017094 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080172d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 80172d4:	b538      	push	{r3, r4, r5, lr}
 80172d6:	4c0b      	ldr	r4, [pc, #44]	@ (8017304 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 80172d8:	4605      	mov	r5, r0
 80172da:	7823      	ldrb	r3, [r4, #0]
 80172dc:	f3bf 8f5b 	dmb	ish
 80172e0:	07db      	lsls	r3, r3, #31
 80172e2:	d40b      	bmi.n	80172fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80172e4:	4620      	mov	r0, r4
 80172e6:	f007 fb3c 	bl	801e962 <__cxa_guard_acquire>
 80172ea:	b138      	cbz	r0, 80172fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80172ec:	4620      	mov	r0, r4
 80172ee:	f007 fb44 	bl	801e97a <__cxa_guard_release>
 80172f2:	4a05      	ldr	r2, [pc, #20]	@ (8017308 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 80172f4:	4905      	ldr	r1, [pc, #20]	@ (801730c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 80172f6:	4806      	ldr	r0, [pc, #24]	@ (8017310 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80172f8:	f007 fb2c 	bl	801e954 <__aeabi_atexit>
 80172fc:	4b04      	ldr	r3, [pc, #16]	@ (8017310 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80172fe:	67eb      	str	r3, [r5, #124]	@ 0x7c
 8017300:	bd38      	pop	{r3, r4, r5, pc}
 8017302:	bf00      	nop
 8017304:	2001514c 	.word	0x2001514c
 8017308:	20000000 	.word	0x20000000
 801730c:	0801397f 	.word	0x0801397f
 8017310:	20000048 	.word	0x20000048

08017314 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8017314:	b538      	push	{r3, r4, r5, lr}
 8017316:	4c0b      	ldr	r4, [pc, #44]	@ (8017344 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8017318:	4605      	mov	r5, r0
 801731a:	7823      	ldrb	r3, [r4, #0]
 801731c:	f3bf 8f5b 	dmb	ish
 8017320:	07db      	lsls	r3, r3, #31
 8017322:	d40b      	bmi.n	801733c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8017324:	4620      	mov	r0, r4
 8017326:	f007 fb1c 	bl	801e962 <__cxa_guard_acquire>
 801732a:	b138      	cbz	r0, 801733c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801732c:	4620      	mov	r0, r4
 801732e:	f007 fb24 	bl	801e97a <__cxa_guard_release>
 8017332:	4a05      	ldr	r2, [pc, #20]	@ (8017348 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8017334:	4905      	ldr	r1, [pc, #20]	@ (801734c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8017336:	4806      	ldr	r0, [pc, #24]	@ (8017350 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8017338:	f007 fb0c 	bl	801e954 <__aeabi_atexit>
 801733c:	4b04      	ldr	r3, [pc, #16]	@ (8017350 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801733e:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 8017342:	bd38      	pop	{r3, r4, r5, pc}
 8017344:	20015150 	.word	0x20015150
 8017348:	20000000 	.word	0x20000000
 801734c:	0801397d 	.word	0x0801397d
 8017350:	2000004c 	.word	0x2000004c

08017354 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8017354:	b570      	push	{r4, r5, r6, lr}
 8017356:	4d0d      	ldr	r5, [pc, #52]	@ (801738c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8017358:	4606      	mov	r6, r0
 801735a:	4c0d      	ldr	r4, [pc, #52]	@ (8017390 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801735c:	782b      	ldrb	r3, [r5, #0]
 801735e:	f3bf 8f5b 	dmb	ish
 8017362:	f013 0f01 	tst.w	r3, #1
 8017366:	d10d      	bne.n	8017384 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8017368:	4628      	mov	r0, r5
 801736a:	f007 fafa 	bl	801e962 <__cxa_guard_acquire>
 801736e:	b148      	cbz	r0, 8017384 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8017370:	4b08      	ldr	r3, [pc, #32]	@ (8017394 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8017372:	4628      	mov	r0, r5
 8017374:	6023      	str	r3, [r4, #0]
 8017376:	f007 fb00 	bl	801e97a <__cxa_guard_release>
 801737a:	4a07      	ldr	r2, [pc, #28]	@ (8017398 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801737c:	4620      	mov	r0, r4
 801737e:	4907      	ldr	r1, [pc, #28]	@ (801739c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8017380:	f007 fae8 	bl	801e954 <__aeabi_atexit>
 8017384:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 8017388:	bd70      	pop	{r4, r5, r6, pc}
 801738a:	bf00      	nop
 801738c:	20015154 	.word	0x20015154
 8017390:	200151c8 	.word	0x200151c8
 8017394:	080217c0 	.word	0x080217c0
 8017398:	20000000 	.word	0x20000000
 801739c:	0801397b 	.word	0x0801397b

080173a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80173a0:	b510      	push	{r4, lr}
 80173a2:	4604      	mov	r4, r0
 80173a4:	f7ff ff96 	bl	80172d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 80173a8:	4620      	mov	r0, r4
 80173aa:	f7ff ffb3 	bl	8017314 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 80173ae:	4620      	mov	r0, r4
 80173b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80173b4:	f7ff bfce 	b.w	8017354 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080173b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80173b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173bc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 80173c0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 80173c4:	2d00      	cmp	r5, #0
 80173c6:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 80173ca:	fb05 4c0e 	mla	ip, r5, lr, r4
 80173ce:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 80173d2:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 80173d6:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 80173da:	eb02 0a0c 	add.w	sl, r2, ip
 80173de:	8808      	ldrh	r0, [r1, #0]
 80173e0:	f2c0 80b0 	blt.w	8017544 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80173e4:	45ab      	cmp	fp, r5
 80173e6:	f340 80ad 	ble.w	8017544 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80173ea:	2c00      	cmp	r4, #0
 80173ec:	f2c0 80a8 	blt.w	8017540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80173f0:	45a6      	cmp	lr, r4
 80173f2:	f340 80a5 	ble.w	8017540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80173f6:	f812 200c 	ldrb.w	r2, [r2, ip]
 80173fa:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80173fe:	1c62      	adds	r2, r4, #1
 8017400:	f100 80a3 	bmi.w	801754a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8017404:	4596      	cmp	lr, r2
 8017406:	f340 80a0 	ble.w	801754a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801740a:	f1b9 0f00 	cmp.w	r9, #0
 801740e:	f000 809c 	beq.w	801754a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8017412:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8017416:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801741a:	3501      	adds	r5, #1
 801741c:	f100 8099 	bmi.w	8017552 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8017420:	45ab      	cmp	fp, r5
 8017422:	f340 8096 	ble.w	8017552 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8017426:	2f00      	cmp	r7, #0
 8017428:	f000 8093 	beq.w	8017552 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801742c:	2c00      	cmp	r4, #0
 801742e:	f2c0 808e 	blt.w	801754e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8017432:	45a6      	cmp	lr, r4
 8017434:	f340 808b 	ble.w	801754e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8017438:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801743c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8017440:	3401      	adds	r4, #1
 8017442:	f100 8089 	bmi.w	8017558 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8017446:	45a6      	cmp	lr, r4
 8017448:	f340 8086 	ble.w	8017558 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801744c:	f1b9 0f00 	cmp.w	r9, #0
 8017450:	f000 8082 	beq.w	8017558 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8017454:	44d6      	add	lr, sl
 8017456:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801745a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801745e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8017462:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8017466:	fb19 fe07 	smulbb	lr, r9, r7
 801746a:	f1c7 0210 	rsb	r2, r7, #16
 801746e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8017472:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8017476:	eba2 0209 	sub.w	r2, r2, r9
 801747a:	ea44 0808 	orr.w	r8, r4, r8
 801747e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8017482:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8017486:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801748a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801748e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8017492:	ea44 0c0c 	orr.w	ip, r4, ip
 8017496:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801749a:	fb04 f40c 	mul.w	r4, r4, ip
 801749e:	fb02 4808 	mla	r8, r2, r8, r4
 80174a2:	041a      	lsls	r2, r3, #16
 80174a4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80174a8:	b2b4      	uxth	r4, r6
 80174aa:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80174ae:	43f6      	mvns	r6, r6
 80174b0:	4313      	orrs	r3, r2
 80174b2:	042a      	lsls	r2, r5, #16
 80174b4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80174b8:	b2f6      	uxtb	r6, r6
 80174ba:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80174be:	fb0e 8303 	mla	r3, lr, r3, r8
 80174c2:	432a      	orrs	r2, r5
 80174c4:	fb07 3202 	mla	r2, r7, r2, r3
 80174c8:	10c7      	asrs	r7, r0, #3
 80174ca:	0d53      	lsrs	r3, r2, #21
 80174cc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80174d0:	0952      	lsrs	r2, r2, #5
 80174d2:	fb17 f706 	smulbb	r7, r7, r6
 80174d6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80174da:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80174de:	431a      	orrs	r2, r3
 80174e0:	b293      	uxth	r3, r2
 80174e2:	1202      	asrs	r2, r0, #8
 80174e4:	121d      	asrs	r5, r3, #8
 80174e6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80174ea:	00c0      	lsls	r0, r0, #3
 80174ec:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80174f0:	fb12 f206 	smulbb	r2, r2, r6
 80174f4:	b2c0      	uxtb	r0, r0
 80174f6:	fb05 2504 	mla	r5, r5, r4, r2
 80174fa:	10da      	asrs	r2, r3, #3
 80174fc:	fb10 f006 	smulbb	r0, r0, r6
 8017500:	00db      	lsls	r3, r3, #3
 8017502:	b2ad      	uxth	r5, r5
 8017504:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8017508:	b2db      	uxtb	r3, r3
 801750a:	fb02 7204 	mla	r2, r2, r4, r7
 801750e:	fb03 0004 	mla	r0, r3, r4, r0
 8017512:	1c6b      	adds	r3, r5, #1
 8017514:	b292      	uxth	r2, r2
 8017516:	b280      	uxth	r0, r0
 8017518:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801751c:	1c43      	adds	r3, r0, #1
 801751e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8017522:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017526:	1c50      	adds	r0, r2, #1
 8017528:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801752c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017530:	0952      	lsrs	r2, r2, #5
 8017532:	432b      	orrs	r3, r5
 8017534:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017538:	4313      	orrs	r3, r2
 801753a:	800b      	strh	r3, [r1, #0]
 801753c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017540:	4680      	mov	r8, r0
 8017542:	e75c      	b.n	80173fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8017544:	4684      	mov	ip, r0
 8017546:	4680      	mov	r8, r0
 8017548:	e767      	b.n	801741a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801754a:	4684      	mov	ip, r0
 801754c:	e765      	b.n	801741a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801754e:	4605      	mov	r5, r0
 8017550:	e776      	b.n	8017440 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8017552:	4603      	mov	r3, r0
 8017554:	4605      	mov	r5, r0
 8017556:	e782      	b.n	801745e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8017558:	4603      	mov	r3, r0
 801755a:	e780      	b.n	801745e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801755c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801755c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017560:	b099      	sub	sp, #100	@ 0x64
 8017562:	9215      	str	r2, [sp, #84]	@ 0x54
 8017564:	9309      	str	r3, [sp, #36]	@ 0x24
 8017566:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8017568:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801756c:	9016      	str	r0, [sp, #88]	@ 0x58
 801756e:	930d      	str	r3, [sp, #52]	@ 0x34
 8017570:	6850      	ldr	r0, [r2, #4]
 8017572:	910c      	str	r1, [sp, #48]	@ 0x30
 8017574:	6812      	ldr	r2, [r2, #0]
 8017576:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801757a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801757e:	fb00 1303 	mla	r3, r0, r3, r1
 8017582:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8017586:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8017588:	681b      	ldr	r3, [r3, #0]
 801758a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801758c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801758e:	685e      	ldr	r6, [r3, #4]
 8017590:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017592:	3604      	adds	r6, #4
 8017594:	43db      	mvns	r3, r3
 8017596:	b2db      	uxtb	r3, r3
 8017598:	930a      	str	r3, [sp, #40]	@ 0x28
 801759a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801759c:	2b00      	cmp	r3, #0
 801759e:	dc03      	bgt.n	80175a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80175a0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80175a2:	2b00      	cmp	r3, #0
 80175a4:	f340 8225 	ble.w	80179f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80175a8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80175aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80175ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80175b2:	1e48      	subs	r0, r1, #1
 80175b4:	1e57      	subs	r7, r2, #1
 80175b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80175b8:	2b00      	cmp	r3, #0
 80175ba:	f340 80e3 	ble.w	8017784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80175be:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80175c2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80175c6:	d406      	bmi.n	80175d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80175c8:	4584      	cmp	ip, r0
 80175ca:	da04      	bge.n	80175d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80175cc:	2b00      	cmp	r3, #0
 80175ce:	db02      	blt.n	80175d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80175d0:	42bb      	cmp	r3, r7
 80175d2:	f2c0 80d8 	blt.w	8017786 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80175d6:	f11c 0c01 	adds.w	ip, ip, #1
 80175da:	f100 80c9 	bmi.w	8017770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80175de:	4561      	cmp	r1, ip
 80175e0:	f2c0 80c6 	blt.w	8017770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80175e4:	3301      	adds	r3, #1
 80175e6:	f100 80c3 	bmi.w	8017770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80175ea:	429a      	cmp	r2, r3
 80175ec:	f2c0 80c0 	blt.w	8017770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80175f0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80175f4:	4647      	mov	r7, r8
 80175f6:	f1bb 0f00 	cmp.w	fp, #0
 80175fa:	f340 80e3 	ble.w	80177c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80175fe:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8017600:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017604:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8017606:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801760a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801760e:	ea5f 422a 	movs.w	r2, sl, asr #16
 8017612:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017616:	689b      	ldr	r3, [r3, #8]
 8017618:	f100 8121 	bmi.w	801785e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801761c:	f103 39ff 	add.w	r9, r3, #4294967295
 8017620:	454a      	cmp	r2, r9
 8017622:	f280 811c 	bge.w	801785e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8017626:	f1bc 0f00 	cmp.w	ip, #0
 801762a:	f2c0 8118 	blt.w	801785e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801762e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8017632:	45cc      	cmp	ip, r9
 8017634:	f280 8113 	bge.w	801785e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8017638:	b21b      	sxth	r3, r3
 801763a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801763c:	fb0c 2203 	mla	r2, ip, r3, r2
 8017640:	eb04 0902 	add.w	r9, r4, r2
 8017644:	5ca2      	ldrb	r2, [r4, r2]
 8017646:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801764a:	2800      	cmp	r0, #0
 801764c:	f000 80fe 	beq.w	801784c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8017650:	f899 2001 	ldrb.w	r2, [r9, #1]
 8017654:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8017658:	9211      	str	r2, [sp, #68]	@ 0x44
 801765a:	b151      	cbz	r1, 8017672 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801765c:	eb09 0203 	add.w	r2, r9, r3
 8017660:	f819 3003 	ldrb.w	r3, [r9, r3]
 8017664:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8017668:	930f      	str	r3, [sp, #60]	@ 0x3c
 801766a:	7853      	ldrb	r3, [r2, #1]
 801766c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8017670:	9312      	str	r3, [sp, #72]	@ 0x48
 8017672:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8017674:	fb10 f201 	smulbb	r2, r0, r1
 8017678:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801767a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801767e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8017682:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8017686:	10d2      	asrs	r2, r2, #3
 8017688:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801768c:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8017690:	ea4c 0c03 	orr.w	ip, ip, r3
 8017694:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8017696:	041b      	lsls	r3, r3, #16
 8017698:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801769c:	4323      	orrs	r3, r4
 801769e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80176a0:	4353      	muls	r3, r2
 80176a2:	fb09 330c 	mla	r3, r9, ip, r3
 80176a6:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80176aa:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80176ae:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80176b2:	ea4c 0e0e 	orr.w	lr, ip, lr
 80176b6:	f1c1 0c10 	rsb	ip, r1, #16
 80176ba:	ebac 0c00 	sub.w	ip, ip, r0
 80176be:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80176c2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80176c6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80176ca:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80176cc:	0418      	lsls	r0, r3, #16
 80176ce:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80176d2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80176d6:	4318      	orrs	r0, r3
 80176d8:	fb02 c200 	mla	r2, r2, r0, ip
 80176dc:	8838      	ldrh	r0, [r7, #0]
 80176de:	0d53      	lsrs	r3, r2, #21
 80176e0:	0952      	lsrs	r2, r2, #5
 80176e2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80176e6:	1201      	asrs	r1, r0, #8
 80176e8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80176ec:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80176f0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80176f4:	00c0      	lsls	r0, r0, #3
 80176f6:	431a      	orrs	r2, r3
 80176f8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 80176fc:	fb11 f104 	smulbb	r1, r1, r4
 8017700:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8017704:	b292      	uxth	r2, r2
 8017706:	fb1e fe04 	smulbb	lr, lr, r4
 801770a:	b2c0      	uxtb	r0, r0
 801770c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8017710:	fb10 f004 	smulbb	r0, r0, r4
 8017714:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017718:	fb0c 1c03 	mla	ip, ip, r3, r1
 801771c:	10d1      	asrs	r1, r2, #3
 801771e:	00d2      	lsls	r2, r2, #3
 8017720:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8017724:	fa1f fc8c 	uxth.w	ip, ip
 8017728:	b2d2      	uxtb	r2, r2
 801772a:	fb01 e103 	mla	r1, r1, r3, lr
 801772e:	fb02 0303 	mla	r3, r2, r3, r0
 8017732:	b289      	uxth	r1, r1
 8017734:	b29a      	uxth	r2, r3
 8017736:	f10c 0301 	add.w	r3, ip, #1
 801773a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801773e:	1c53      	adds	r3, r2, #1
 8017740:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017744:	1c4a      	adds	r2, r1, #1
 8017746:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801774a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801774e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017752:	0949      	lsrs	r1, r1, #5
 8017754:	ea43 030c 	orr.w	r3, r3, ip
 8017758:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801775c:	430b      	orrs	r3, r1
 801775e:	803b      	strh	r3, [r7, #0]
 8017760:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8017762:	3702      	adds	r7, #2
 8017764:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017768:	449a      	add	sl, r3
 801776a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801776c:	441d      	add	r5, r3
 801776e:	e742      	b.n	80175f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017770:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8017772:	f108 0802 	add.w	r8, r8, #2
 8017776:	449a      	add	sl, r3
 8017778:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801777a:	441d      	add	r5, r3
 801777c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801777e:	3b01      	subs	r3, #1
 8017780:	9309      	str	r3, [sp, #36]	@ 0x24
 8017782:	e718      	b.n	80175b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8017784:	d023      	beq.n	80177ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8017786:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017788:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801778a:	3b01      	subs	r3, #1
 801778c:	fb00 a003 	mla	r0, r0, r3, sl
 8017790:	1400      	asrs	r0, r0, #16
 8017792:	f53f af2d 	bmi.w	80175f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8017796:	3901      	subs	r1, #1
 8017798:	4288      	cmp	r0, r1
 801779a:	f6bf af29 	bge.w	80175f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801779e:	9926      	ldr	r1, [sp, #152]	@ 0x98
 80177a0:	fb01 5303 	mla	r3, r1, r3, r5
 80177a4:	141b      	asrs	r3, r3, #16
 80177a6:	f53f af23 	bmi.w	80175f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80177aa:	3a01      	subs	r2, #1
 80177ac:	4293      	cmp	r3, r2
 80177ae:	f6bf af1f 	bge.w	80175f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80177b2:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80177b6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 80177ba:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 80177be:	f1be 0f00 	cmp.w	lr, #0
 80177c2:	dc6c      	bgt.n	801789e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80177c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80177c6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80177ca:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80177ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80177d0:	2b00      	cmp	r3, #0
 80177d2:	f340 810e 	ble.w	80179f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80177d6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80177da:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80177dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80177e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80177e4:	eef0 6a62 	vmov.f32	s13, s5
 80177e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80177ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 80177f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80177f4:	ee16 aa90 	vmov	sl, s13
 80177f8:	eef0 6a43 	vmov.f32	s13, s6
 80177fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017800:	ee16 5a90 	vmov	r5, s13
 8017804:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017808:	ee61 7a27 	vmul.f32	s15, s2, s15
 801780c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017810:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017814:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017818:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801781c:	ee12 2a90 	vmov	r2, s5
 8017820:	eef0 2a47 	vmov.f32	s5, s14
 8017824:	fb92 f3f3 	sdiv	r3, r2, r3
 8017828:	ee13 2a10 	vmov	r2, s6
 801782c:	9325      	str	r3, [sp, #148]	@ 0x94
 801782e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8017830:	eeb0 3a67 	vmov.f32	s6, s15
 8017834:	fb92 f3f3 	sdiv	r3, r2, r3
 8017838:	9326      	str	r3, [sp, #152]	@ 0x98
 801783a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801783c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801783e:	3b01      	subs	r3, #1
 8017840:	930c      	str	r3, [sp, #48]	@ 0x30
 8017842:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8017844:	bf08      	it	eq
 8017846:	4613      	moveq	r3, r2
 8017848:	9309      	str	r3, [sp, #36]	@ 0x24
 801784a:	e6a6      	b.n	801759a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801784c:	2900      	cmp	r1, #0
 801784e:	f43f af10 	beq.w	8017672 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8017852:	f819 3003 	ldrb.w	r3, [r9, r3]
 8017856:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801785a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801785c:	e709      	b.n	8017672 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801785e:	f112 0901 	adds.w	r9, r2, #1
 8017862:	f53f af7d 	bmi.w	8017760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8017866:	454b      	cmp	r3, r9
 8017868:	f6ff af7a 	blt.w	8017760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801786c:	f11c 0901 	adds.w	r9, ip, #1
 8017870:	f53f af76 	bmi.w	8017760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8017874:	45ce      	cmp	lr, r9
 8017876:	f6ff af73 	blt.w	8017760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801787a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801787c:	b21b      	sxth	r3, r3
 801787e:	9202      	str	r2, [sp, #8]
 8017880:	fa0f f28e 	sxth.w	r2, lr
 8017884:	9300      	str	r3, [sp, #0]
 8017886:	4633      	mov	r3, r6
 8017888:	9201      	str	r2, [sp, #4]
 801788a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801788c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8017890:	e9cd c003 	strd	ip, r0, [sp, #12]
 8017894:	4639      	mov	r1, r7
 8017896:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8017898:	f7ff fd8e 	bl	80173b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801789c:	e760      	b.n	8017760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801789e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80178a0:	ea4f 422a 	mov.w	r2, sl, asr #16
 80178a4:	1429      	asrs	r1, r5, #16
 80178a6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80178a8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80178ac:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80178b0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80178b4:	fb03 2101 	mla	r1, r3, r1, r2
 80178b8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80178ba:	440a      	add	r2, r1
 80178bc:	5c61      	ldrb	r1, [r4, r1]
 80178be:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80178c2:	f1bc 0f00 	cmp.w	ip, #0
 80178c6:	f000 808c 	beq.w	80179e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80178ca:	7857      	ldrb	r7, [r2, #1]
 80178cc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80178d0:	9413      	str	r4, [sp, #76]	@ 0x4c
 80178d2:	b140      	cbz	r0, 80178e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80178d4:	18d7      	adds	r7, r2, r3
 80178d6:	5cd3      	ldrb	r3, [r2, r3]
 80178d8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80178dc:	9310      	str	r3, [sp, #64]	@ 0x40
 80178de:	787b      	ldrb	r3, [r7, #1]
 80178e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80178e4:	9314      	str	r3, [sp, #80]	@ 0x50
 80178e6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80178e8:	fb1c f200 	smulbb	r2, ip, r0
 80178ec:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80178ee:	f10e 3eff 	add.w	lr, lr, #4294967295
 80178f2:	041f      	lsls	r7, r3, #16
 80178f4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80178f8:	10d2      	asrs	r2, r2, #3
 80178fa:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 80178fe:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8017902:	431f      	orrs	r7, r3
 8017904:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8017908:	9317      	str	r3, [sp, #92]	@ 0x5c
 801790a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801790c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801790e:	041b      	lsls	r3, r3, #16
 8017910:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017914:	ea43 030b 	orr.w	r3, r3, fp
 8017918:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801791c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8017920:	4353      	muls	r3, r2
 8017922:	fb04 3707 	mla	r7, r4, r7, r3
 8017926:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801792a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801792c:	ea43 0b01 	orr.w	fp, r3, r1
 8017930:	f1c0 0110 	rsb	r1, r0, #16
 8017934:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017936:	eba1 0c0c 	sub.w	ip, r1, ip
 801793a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801793e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8017942:	fb0c 770b 	mla	r7, ip, fp, r7
 8017946:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801794a:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801794e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8017952:	ea4c 0c0b 	orr.w	ip, ip, fp
 8017956:	fb02 770c 	mla	r7, r2, ip, r7
 801795a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801795c:	0d79      	lsrs	r1, r7, #21
 801795e:	8812      	ldrh	r2, [r2, #0]
 8017960:	097f      	lsrs	r7, r7, #5
 8017962:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8017966:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801796a:	430f      	orrs	r7, r1
 801796c:	1211      	asrs	r1, r2, #8
 801796e:	b2bb      	uxth	r3, r7
 8017970:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8017974:	10d7      	asrs	r7, r2, #3
 8017976:	fb11 f104 	smulbb	r1, r1, r4
 801797a:	1218      	asrs	r0, r3, #8
 801797c:	00d2      	lsls	r2, r2, #3
 801797e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017982:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8017986:	fb17 f704 	smulbb	r7, r7, r4
 801798a:	b2d2      	uxtb	r2, r2
 801798c:	fb00 1009 	mla	r0, r0, r9, r1
 8017990:	10d9      	asrs	r1, r3, #3
 8017992:	fb12 f204 	smulbb	r2, r2, r4
 8017996:	00db      	lsls	r3, r3, #3
 8017998:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801799c:	b280      	uxth	r0, r0
 801799e:	b2db      	uxtb	r3, r3
 80179a0:	fb01 7109 	mla	r1, r1, r9, r7
 80179a4:	fb03 2309 	mla	r3, r3, r9, r2
 80179a8:	1c42      	adds	r2, r0, #1
 80179aa:	b289      	uxth	r1, r1
 80179ac:	b29b      	uxth	r3, r3
 80179ae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80179b2:	1c4f      	adds	r7, r1, #1
 80179b4:	1c5a      	adds	r2, r3, #1
 80179b6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80179ba:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80179be:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80179c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80179c4:	0949      	lsrs	r1, r1, #5
 80179c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80179ca:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80179ce:	4310      	orrs	r0, r2
 80179d0:	4308      	orrs	r0, r1
 80179d2:	f823 0b02 	strh.w	r0, [r3], #2
 80179d6:	930e      	str	r3, [sp, #56]	@ 0x38
 80179d8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80179da:	449a      	add	sl, r3
 80179dc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80179de:	441d      	add	r5, r3
 80179e0:	e6ed      	b.n	80177be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80179e2:	2800      	cmp	r0, #0
 80179e4:	f43f af7f 	beq.w	80178e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80179e8:	5cd3      	ldrb	r3, [r2, r3]
 80179ea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80179ee:	9310      	str	r3, [sp, #64]	@ 0x40
 80179f0:	e779      	b.n	80178e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80179f2:	b019      	add	sp, #100	@ 0x64
 80179f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080179f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80179f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80179fc:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 8017a00:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8017a04:	f1b8 0f00 	cmp.w	r8, #0
 8017a08:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 8017a0c:	fb08 470e 	mla	r7, r8, lr, r4
 8017a10:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8017a14:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8017a18:	eb02 0907 	add.w	r9, r2, r7
 8017a1c:	8808      	ldrh	r0, [r1, #0]
 8017a1e:	db67      	blt.n	8017af0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8017a20:	45c2      	cmp	sl, r8
 8017a22:	dd65      	ble.n	8017af0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8017a24:	2c00      	cmp	r4, #0
 8017a26:	db61      	blt.n	8017aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8017a28:	45a6      	cmp	lr, r4
 8017a2a:	dd5f      	ble.n	8017aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8017a2c:	5dd2      	ldrb	r2, [r2, r7]
 8017a2e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8017a32:	1c62      	adds	r2, r4, #1
 8017a34:	d45f      	bmi.n	8017af6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8017a36:	4596      	cmp	lr, r2
 8017a38:	dd5d      	ble.n	8017af6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8017a3a:	2d00      	cmp	r5, #0
 8017a3c:	d05b      	beq.n	8017af6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8017a3e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8017a42:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8017a46:	f118 0801 	adds.w	r8, r8, #1
 8017a4a:	d458      	bmi.n	8017afe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8017a4c:	45c2      	cmp	sl, r8
 8017a4e:	dd56      	ble.n	8017afe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8017a50:	2e00      	cmp	r6, #0
 8017a52:	d054      	beq.n	8017afe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8017a54:	2c00      	cmp	r4, #0
 8017a56:	db50      	blt.n	8017afa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8017a58:	45a6      	cmp	lr, r4
 8017a5a:	dd4e      	ble.n	8017afa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8017a5c:	f819 200e 	ldrb.w	r2, [r9, lr]
 8017a60:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8017a64:	3401      	adds	r4, #1
 8017a66:	d407      	bmi.n	8017a78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8017a68:	45a6      	cmp	lr, r4
 8017a6a:	dd05      	ble.n	8017a78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8017a6c:	b125      	cbz	r5, 8017a78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8017a6e:	44ce      	add	lr, r9
 8017a70:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8017a74:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8017a78:	fb15 f406 	smulbb	r4, r5, r6
 8017a7c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8017a80:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8017a84:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8017a88:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017a8c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8017a90:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8017a94:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8017a98:	ea43 0c0c 	orr.w	ip, r3, ip
 8017a9c:	f1c6 0310 	rsb	r3, r6, #16
 8017aa0:	ea4e 0707 	orr.w	r7, lr, r7
 8017aa4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8017aa8:	1b5b      	subs	r3, r3, r5
 8017aaa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8017aae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017ab2:	437d      	muls	r5, r7
 8017ab4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8017ab8:	0403      	lsls	r3, r0, #16
 8017aba:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8017abe:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017ac2:	4318      	orrs	r0, r3
 8017ac4:	0413      	lsls	r3, r2, #16
 8017ac6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8017aca:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017ace:	fb04 c000 	mla	r0, r4, r0, ip
 8017ad2:	4313      	orrs	r3, r2
 8017ad4:	fb06 0003 	mla	r0, r6, r3, r0
 8017ad8:	0d43      	lsrs	r3, r0, #21
 8017ada:	0940      	lsrs	r0, r0, #5
 8017adc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017ae0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8017ae4:	4318      	orrs	r0, r3
 8017ae6:	8008      	strh	r0, [r1, #0]
 8017ae8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017aec:	4684      	mov	ip, r0
 8017aee:	e7a0      	b.n	8017a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8017af0:	4607      	mov	r7, r0
 8017af2:	4684      	mov	ip, r0
 8017af4:	e7a7      	b.n	8017a46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8017af6:	4607      	mov	r7, r0
 8017af8:	e7a5      	b.n	8017a46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8017afa:	4602      	mov	r2, r0
 8017afc:	e7b2      	b.n	8017a64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8017afe:	4602      	mov	r2, r0
 8017b00:	e7ba      	b.n	8017a78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08017b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017b02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b06:	b093      	sub	sp, #76	@ 0x4c
 8017b08:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017b0c:	920f      	str	r2, [sp, #60]	@ 0x3c
 8017b0e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8017b10:	9010      	str	r0, [sp, #64]	@ 0x40
 8017b12:	9108      	str	r1, [sp, #32]
 8017b14:	6850      	ldr	r0, [r2, #4]
 8017b16:	9306      	str	r3, [sp, #24]
 8017b18:	6812      	ldr	r2, [r2, #0]
 8017b1a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8017b1e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8017b22:	fb00 1303 	mla	r3, r0, r3, r1
 8017b26:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8017b2a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017b2c:	681b      	ldr	r3, [r3, #0]
 8017b2e:	9307      	str	r3, [sp, #28]
 8017b30:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017b32:	685f      	ldr	r7, [r3, #4]
 8017b34:	3704      	adds	r7, #4
 8017b36:	9b08      	ldr	r3, [sp, #32]
 8017b38:	2b00      	cmp	r3, #0
 8017b3a:	dc03      	bgt.n	8017b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8017b3c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017b3e:	2b00      	cmp	r3, #0
 8017b40:	f340 81b2 	ble.w	8017ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8017b44:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017b46:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017b4a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017b4e:	1e48      	subs	r0, r1, #1
 8017b50:	f102 3cff 	add.w	ip, r2, #4294967295
 8017b54:	9b06      	ldr	r3, [sp, #24]
 8017b56:	2b00      	cmp	r3, #0
 8017b58:	f340 80a9 	ble.w	8017cae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8017b5c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8017b60:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017b64:	d406      	bmi.n	8017b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017b66:	4586      	cmp	lr, r0
 8017b68:	da04      	bge.n	8017b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017b6a:	2b00      	cmp	r3, #0
 8017b6c:	db02      	blt.n	8017b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017b6e:	4563      	cmp	r3, ip
 8017b70:	f2c0 809e 	blt.w	8017cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8017b74:	f11e 0e01 	adds.w	lr, lr, #1
 8017b78:	f100 808f 	bmi.w	8017c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017b7c:	4571      	cmp	r1, lr
 8017b7e:	f2c0 808c 	blt.w	8017c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017b82:	3301      	adds	r3, #1
 8017b84:	f100 8089 	bmi.w	8017c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017b88:	429a      	cmp	r2, r3
 8017b8a:	f2c0 8086 	blt.w	8017c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017b8e:	f8dd b018 	ldr.w	fp, [sp, #24]
 8017b92:	46c8      	mov	r8, r9
 8017b94:	f1bb 0f00 	cmp.w	fp, #0
 8017b98:	f340 80a6 	ble.w	8017ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8017b9c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8017b9e:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8017ba2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017ba4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8017ba8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8017bac:	1422      	asrs	r2, r4, #16
 8017bae:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8017bb2:	689b      	ldr	r3, [r3, #8]
 8017bb4:	f100 80e3 	bmi.w	8017d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8017bb8:	f103 3aff 	add.w	sl, r3, #4294967295
 8017bbc:	4552      	cmp	r2, sl
 8017bbe:	f280 80de 	bge.w	8017d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8017bc2:	f1bc 0f00 	cmp.w	ip, #0
 8017bc6:	f2c0 80da 	blt.w	8017d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8017bca:	f10e 3aff 	add.w	sl, lr, #4294967295
 8017bce:	45d4      	cmp	ip, sl
 8017bd0:	f280 80d5 	bge.w	8017d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8017bd4:	b21b      	sxth	r3, r3
 8017bd6:	9d07      	ldr	r5, [sp, #28]
 8017bd8:	fb0c 2203 	mla	r2, ip, r3, r2
 8017bdc:	eb05 0a02 	add.w	sl, r5, r2
 8017be0:	5caa      	ldrb	r2, [r5, r2]
 8017be2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8017be6:	2800      	cmp	r0, #0
 8017be8:	f000 80c0 	beq.w	8017d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8017bec:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8017bf0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8017bf4:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017bf6:	b151      	cbz	r1, 8017c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8017bf8:	eb0a 0203 	add.w	r2, sl, r3
 8017bfc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8017c00:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017c04:	9309      	str	r3, [sp, #36]	@ 0x24
 8017c06:	7853      	ldrb	r3, [r2, #1]
 8017c08:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017c0c:	930c      	str	r3, [sp, #48]	@ 0x30
 8017c0e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017c10:	fb10 f201 	smulbb	r2, r0, r1
 8017c14:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8017c16:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017c1a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8017c1e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8017c22:	10d2      	asrs	r2, r2, #3
 8017c24:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8017c28:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8017c2c:	ea4c 0c03 	orr.w	ip, ip, r3
 8017c30:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017c32:	041b      	lsls	r3, r3, #16
 8017c34:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017c38:	432b      	orrs	r3, r5
 8017c3a:	4353      	muls	r3, r2
 8017c3c:	fb0a 330c 	mla	r3, sl, ip, r3
 8017c40:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8017c44:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8017c48:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8017c4c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8017c50:	f1c1 0c10 	rsb	ip, r1, #16
 8017c54:	ebac 0c00 	sub.w	ip, ip, r0
 8017c58:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8017c5c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8017c60:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8017c64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017c66:	0418      	lsls	r0, r3, #16
 8017c68:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8017c6c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8017c70:	4318      	orrs	r0, r3
 8017c72:	fb02 c200 	mla	r2, r2, r0, ip
 8017c76:	0d53      	lsrs	r3, r2, #21
 8017c78:	0952      	lsrs	r2, r2, #5
 8017c7a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017c7e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8017c82:	431a      	orrs	r2, r3
 8017c84:	f8a8 2000 	strh.w	r2, [r8]
 8017c88:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017c8a:	f108 0802 	add.w	r8, r8, #2
 8017c8e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017c92:	441c      	add	r4, r3
 8017c94:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017c96:	441e      	add	r6, r3
 8017c98:	e77c      	b.n	8017b94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017c9a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017c9c:	f109 0902 	add.w	r9, r9, #2
 8017ca0:	441c      	add	r4, r3
 8017ca2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017ca4:	441e      	add	r6, r3
 8017ca6:	9b06      	ldr	r3, [sp, #24]
 8017ca8:	3b01      	subs	r3, #1
 8017caa:	9306      	str	r3, [sp, #24]
 8017cac:	e752      	b.n	8017b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8017cae:	d020      	beq.n	8017cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8017cb0:	9b06      	ldr	r3, [sp, #24]
 8017cb2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8017cb4:	3b01      	subs	r3, #1
 8017cb6:	fb00 4003 	mla	r0, r0, r3, r4
 8017cba:	1400      	asrs	r0, r0, #16
 8017cbc:	f53f af67 	bmi.w	8017b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017cc0:	3901      	subs	r1, #1
 8017cc2:	4288      	cmp	r0, r1
 8017cc4:	f6bf af63 	bge.w	8017b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017cc8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8017cca:	fb01 6303 	mla	r3, r1, r3, r6
 8017cce:	141b      	asrs	r3, r3, #16
 8017cd0:	f53f af5d 	bmi.w	8017b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017cd4:	3a01      	subs	r2, #1
 8017cd6:	4293      	cmp	r3, r2
 8017cd8:	f6bf af59 	bge.w	8017b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017cdc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8017ce0:	46ca      	mov	sl, r9
 8017ce2:	f1b8 0f00 	cmp.w	r8, #0
 8017ce6:	dc67      	bgt.n	8017db8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8017ce8:	9b06      	ldr	r3, [sp, #24]
 8017cea:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017cee:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8017cf2:	9b08      	ldr	r3, [sp, #32]
 8017cf4:	2b00      	cmp	r3, #0
 8017cf6:	f340 80d7 	ble.w	8017ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8017cfa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017cfe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017d00:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017d04:	eeb0 6a62 	vmov.f32	s12, s5
 8017d08:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017d0c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017d10:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017d14:	ee16 4a10 	vmov	r4, s12
 8017d18:	eeb0 6a43 	vmov.f32	s12, s6
 8017d1c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017d20:	ee16 6a10 	vmov	r6, s12
 8017d24:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017d28:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017d2c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017d30:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017d34:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017d38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017d3c:	ee12 2a90 	vmov	r2, s5
 8017d40:	eef0 2a47 	vmov.f32	s5, s14
 8017d44:	fb92 f3f3 	sdiv	r3, r2, r3
 8017d48:	ee13 2a10 	vmov	r2, s6
 8017d4c:	931f      	str	r3, [sp, #124]	@ 0x7c
 8017d4e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017d50:	eeb0 3a67 	vmov.f32	s6, s15
 8017d54:	fb92 f3f3 	sdiv	r3, r2, r3
 8017d58:	9320      	str	r3, [sp, #128]	@ 0x80
 8017d5a:	9b08      	ldr	r3, [sp, #32]
 8017d5c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017d5e:	3b01      	subs	r3, #1
 8017d60:	9308      	str	r3, [sp, #32]
 8017d62:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017d64:	bf08      	it	eq
 8017d66:	4613      	moveq	r3, r2
 8017d68:	9306      	str	r3, [sp, #24]
 8017d6a:	e6e4      	b.n	8017b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8017d6c:	2900      	cmp	r1, #0
 8017d6e:	f43f af4e 	beq.w	8017c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8017d72:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8017d76:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017d7a:	9309      	str	r3, [sp, #36]	@ 0x24
 8017d7c:	e747      	b.n	8017c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8017d7e:	f112 0a01 	adds.w	sl, r2, #1
 8017d82:	d481      	bmi.n	8017c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017d84:	4553      	cmp	r3, sl
 8017d86:	f6ff af7f 	blt.w	8017c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017d8a:	f11c 0a01 	adds.w	sl, ip, #1
 8017d8e:	f53f af7b 	bmi.w	8017c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017d92:	45d6      	cmp	lr, sl
 8017d94:	f6ff af78 	blt.w	8017c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017d98:	b21b      	sxth	r3, r3
 8017d9a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8017d9e:	fa0f f28e 	sxth.w	r2, lr
 8017da2:	9300      	str	r3, [sp, #0]
 8017da4:	463b      	mov	r3, r7
 8017da6:	9201      	str	r2, [sp, #4]
 8017da8:	9a07      	ldr	r2, [sp, #28]
 8017daa:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8017dae:	4641      	mov	r1, r8
 8017db0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8017db2:	f7ff fe21 	bl	80179f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8017db6:	e767      	b.n	8017c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017db8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017dba:	1422      	asrs	r2, r4, #16
 8017dbc:	1431      	asrs	r1, r6, #16
 8017dbe:	9d07      	ldr	r5, [sp, #28]
 8017dc0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8017dc4:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8017dc8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017dcc:	fb03 2101 	mla	r1, r3, r1, r2
 8017dd0:	9a07      	ldr	r2, [sp, #28]
 8017dd2:	440a      	add	r2, r1
 8017dd4:	5c69      	ldrb	r1, [r5, r1]
 8017dd6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8017dda:	f1be 0f00 	cmp.w	lr, #0
 8017dde:	d05c      	beq.n	8017e9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8017de0:	f892 c001 	ldrb.w	ip, [r2, #1]
 8017de4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8017de8:	950d      	str	r5, [sp, #52]	@ 0x34
 8017dea:	b150      	cbz	r0, 8017e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8017dec:	eb02 0c03 	add.w	ip, r2, r3
 8017df0:	5cd3      	ldrb	r3, [r2, r3]
 8017df2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017df6:	930a      	str	r3, [sp, #40]	@ 0x28
 8017df8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8017dfc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017e00:	930e      	str	r3, [sp, #56]	@ 0x38
 8017e02:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017e04:	fb1e f200 	smulbb	r2, lr, r0
 8017e08:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8017e0a:	f108 38ff 	add.w	r8, r8, #4294967295
 8017e0e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017e12:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8017e16:	10d2      	asrs	r2, r2, #3
 8017e18:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 8017e1c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8017e20:	ea4c 0c03 	orr.w	ip, ip, r3
 8017e24:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8017e28:	9311      	str	r3, [sp, #68]	@ 0x44
 8017e2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017e2c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8017e2e:	041b      	lsls	r3, r3, #16
 8017e30:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017e34:	ea43 030b 	orr.w	r3, r3, fp
 8017e38:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017e3c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8017e40:	4353      	muls	r3, r2
 8017e42:	fb05 3c0c 	mla	ip, r5, ip, r3
 8017e46:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8017e4a:	ea43 0b01 	orr.w	fp, r3, r1
 8017e4e:	f1c0 0110 	rsb	r1, r0, #16
 8017e52:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017e54:	eba1 0e0e 	sub.w	lr, r1, lr
 8017e58:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8017e5c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8017e60:	fb0e cc0b 	mla	ip, lr, fp, ip
 8017e64:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017e68:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 8017e6c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8017e70:	ea4b 0e0e 	orr.w	lr, fp, lr
 8017e74:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017e78:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8017e7c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8017e80:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017e84:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8017e88:	ea43 0c0c 	orr.w	ip, r3, ip
 8017e8c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017e8e:	441c      	add	r4, r3
 8017e90:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017e92:	f82a cb02 	strh.w	ip, [sl], #2
 8017e96:	441e      	add	r6, r3
 8017e98:	e723      	b.n	8017ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8017e9a:	2800      	cmp	r0, #0
 8017e9c:	d0b1      	beq.n	8017e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8017e9e:	5cd3      	ldrb	r3, [r2, r3]
 8017ea0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017ea4:	930a      	str	r3, [sp, #40]	@ 0x28
 8017ea6:	e7ac      	b.n	8017e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8017ea8:	b013      	add	sp, #76	@ 0x4c
 8017eaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017eae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8017eae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017eb2:	880d      	ldrh	r5, [r1, #0]
 8017eb4:	b087      	sub	sp, #28
 8017eb6:	10ef      	asrs	r7, r5, #3
 8017eb8:	9103      	str	r1, [sp, #12]
 8017eba:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8017ebe:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 8017ec2:	00ed      	lsls	r5, r5, #3
 8017ec4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017ec8:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8017ecc:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8017ed0:	b2ed      	uxtb	r5, r5
 8017ed2:	9701      	str	r7, [sp, #4]
 8017ed4:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 8017ed8:	9502      	str	r5, [sp, #8]
 8017eda:	9d01      	ldr	r5, [sp, #4]
 8017edc:	9902      	ldr	r1, [sp, #8]
 8017ede:	022d      	lsls	r5, r5, #8
 8017ee0:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 8017ee4:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 8017ee8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8017eec:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8017ef0:	430d      	orrs	r5, r1
 8017ef2:	fb06 0709 	mla	r7, r6, r9, r0
 8017ef6:	2e00      	cmp	r6, #0
 8017ef8:	9505      	str	r5, [sp, #20]
 8017efa:	eb02 0c07 	add.w	ip, r2, r7
 8017efe:	f2c0 80b6 	blt.w	801806e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8017f02:	45b3      	cmp	fp, r6
 8017f04:	f340 80b3 	ble.w	801806e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8017f08:	2800      	cmp	r0, #0
 8017f0a:	f2c0 80ae 	blt.w	801806a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8017f0e:	4581      	cmp	r9, r0
 8017f10:	f340 80ab 	ble.w	801806a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8017f14:	5dd7      	ldrb	r7, [r2, r7]
 8017f16:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8017f1a:	441f      	add	r7, r3
 8017f1c:	1c42      	adds	r2, r0, #1
 8017f1e:	f100 80a9 	bmi.w	8018074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8017f22:	4591      	cmp	r9, r2
 8017f24:	f340 80a6 	ble.w	8018074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8017f28:	2c00      	cmp	r4, #0
 8017f2a:	f000 80a3 	beq.w	8018074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8017f2e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8017f32:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017f36:	441d      	add	r5, r3
 8017f38:	3601      	adds	r6, #1
 8017f3a:	f100 809f 	bmi.w	801807c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8017f3e:	45b3      	cmp	fp, r6
 8017f40:	f340 809c 	ble.w	801807c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8017f44:	f1be 0f00 	cmp.w	lr, #0
 8017f48:	f000 8098 	beq.w	801807c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8017f4c:	2800      	cmp	r0, #0
 8017f4e:	f2c0 8093 	blt.w	8018078 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8017f52:	4581      	cmp	r9, r0
 8017f54:	f340 8090 	ble.w	8018078 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8017f58:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8017f5c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017f60:	441e      	add	r6, r3
 8017f62:	3001      	adds	r0, #1
 8017f64:	f100 808d 	bmi.w	8018082 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8017f68:	4581      	cmp	r9, r0
 8017f6a:	f340 808a 	ble.w	8018082 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8017f6e:	2c00      	cmp	r4, #0
 8017f70:	f000 8087 	beq.w	8018082 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8017f74:	44e1      	add	r9, ip
 8017f76:	f899 2001 	ldrb.w	r2, [r9, #1]
 8017f7a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017f7e:	4413      	add	r3, r2
 8017f80:	b2a4      	uxth	r4, r4
 8017f82:	f897 c002 	ldrb.w	ip, [r7, #2]
 8017f86:	fa1f fe8e 	uxth.w	lr, lr
 8017f8a:	9901      	ldr	r1, [sp, #4]
 8017f8c:	fb04 fb0e 	mul.w	fp, r4, lr
 8017f90:	0124      	lsls	r4, r4, #4
 8017f92:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8017f96:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 8017f9a:	eba4 040b 	sub.w	r4, r4, fp
 8017f9e:	fa1f f08e 	uxth.w	r0, lr
 8017fa2:	b2a2      	uxth	r2, r4
 8017fa4:	78ac      	ldrb	r4, [r5, #2]
 8017fa6:	eba9 0900 	sub.w	r9, r9, r0
 8017faa:	fa1f fe88 	uxth.w	lr, r8
 8017fae:	4354      	muls	r4, r2
 8017fb0:	ea6f 0808 	mvn.w	r8, r8
 8017fb4:	fa1f f989 	uxth.w	r9, r9
 8017fb8:	fa5f f888 	uxtb.w	r8, r8
 8017fbc:	fb09 440c 	mla	r4, r9, ip, r4
 8017fc0:	f896 c002 	ldrb.w	ip, [r6, #2]
 8017fc4:	fb1a fa08 	smulbb	sl, sl, r8
 8017fc8:	fb00 440c 	mla	r4, r0, ip, r4
 8017fcc:	f893 c002 	ldrb.w	ip, [r3, #2]
 8017fd0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8017fd4:	787c      	ldrb	r4, [r7, #1]
 8017fd6:	783f      	ldrb	r7, [r7, #0]
 8017fd8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8017fdc:	fb0c ac0e 	mla	ip, ip, lr, sl
 8017fe0:	f895 a001 	ldrb.w	sl, [r5, #1]
 8017fe4:	782d      	ldrb	r5, [r5, #0]
 8017fe6:	fb02 fa0a 	mul.w	sl, r2, sl
 8017fea:	fa1f fc8c 	uxth.w	ip, ip
 8017fee:	436a      	muls	r2, r5
 8017ff0:	7835      	ldrb	r5, [r6, #0]
 8017ff2:	fb09 aa04 	mla	sl, r9, r4, sl
 8017ff6:	7874      	ldrb	r4, [r6, #1]
 8017ff8:	fb09 2207 	mla	r2, r9, r7, r2
 8017ffc:	fb00 aa04 	mla	sl, r0, r4, sl
 8018000:	785c      	ldrb	r4, [r3, #1]
 8018002:	fb00 2005 	mla	r0, r0, r5, r2
 8018006:	781b      	ldrb	r3, [r3, #0]
 8018008:	fb0b a404 	mla	r4, fp, r4, sl
 801800c:	fb11 fa08 	smulbb	sl, r1, r8
 8018010:	fb0b 0b03 	mla	fp, fp, r3, r0
 8018014:	9b02      	ldr	r3, [sp, #8]
 8018016:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801801a:	fb13 f808 	smulbb	r8, r3, r8
 801801e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8018022:	fb04 a40e 	mla	r4, r4, lr, sl
 8018026:	f10c 0301 	add.w	r3, ip, #1
 801802a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801802e:	b2a4      	uxth	r4, r4
 8018030:	fa1f fe8e 	uxth.w	lr, lr
 8018034:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018038:	f104 0a01 	add.w	sl, r4, #1
 801803c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 8018040:	f10e 0c01 	add.w	ip, lr, #1
 8018044:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8018048:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801804c:	0964      	lsrs	r4, r4, #5
 801804e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018052:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8018056:	ea4c 0c03 	orr.w	ip, ip, r3
 801805a:	9b03      	ldr	r3, [sp, #12]
 801805c:	ea4c 0c04 	orr.w	ip, ip, r4
 8018060:	f8a3 c000 	strh.w	ip, [r3]
 8018064:	b007      	add	sp, #28
 8018066:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801806a:	af05      	add	r7, sp, #20
 801806c:	e756      	b.n	8017f1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801806e:	ad05      	add	r5, sp, #20
 8018070:	462f      	mov	r7, r5
 8018072:	e761      	b.n	8017f38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8018074:	ad05      	add	r5, sp, #20
 8018076:	e75f      	b.n	8017f38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8018078:	ae05      	add	r6, sp, #20
 801807a:	e772      	b.n	8017f62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801807c:	ab05      	add	r3, sp, #20
 801807e:	461e      	mov	r6, r3
 8018080:	e77e      	b.n	8017f80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8018082:	ab05      	add	r3, sp, #20
 8018084:	e77c      	b.n	8017f80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08018086 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018086:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801808a:	b095      	sub	sp, #84	@ 0x54
 801808c:	9212      	str	r2, [sp, #72]	@ 0x48
 801808e:	9309      	str	r3, [sp, #36]	@ 0x24
 8018090:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8018092:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8018096:	9013      	str	r0, [sp, #76]	@ 0x4c
 8018098:	930f      	str	r3, [sp, #60]	@ 0x3c
 801809a:	6850      	ldr	r0, [r2, #4]
 801809c:	910e      	str	r1, [sp, #56]	@ 0x38
 801809e:	6812      	ldr	r2, [r2, #0]
 80180a0:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 80180a4:	fb00 1303 	mla	r3, r0, r3, r1
 80180a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80180ac:	930a      	str	r3, [sp, #40]	@ 0x28
 80180ae:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80180b0:	681b      	ldr	r3, [r3, #0]
 80180b2:	930d      	str	r3, [sp, #52]	@ 0x34
 80180b4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80180b6:	685c      	ldr	r4, [r3, #4]
 80180b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80180ba:	3404      	adds	r4, #4
 80180bc:	43db      	mvns	r3, r3
 80180be:	b2db      	uxtb	r3, r3
 80180c0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80180c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80180c4:	2b00      	cmp	r3, #0
 80180c6:	dc03      	bgt.n	80180d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80180c8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80180ca:	2b00      	cmp	r3, #0
 80180cc:	f340 8255 	ble.w	801857a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80180d0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80180d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80180d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80180da:	1e48      	subs	r0, r1, #1
 80180dc:	1e55      	subs	r5, r2, #1
 80180de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80180e0:	2b00      	cmp	r3, #0
 80180e2:	f340 80f9 	ble.w	80182d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80180e6:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 80180e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80180ea:	1436      	asrs	r6, r6, #16
 80180ec:	ea4f 4323 	mov.w	r3, r3, asr #16
 80180f0:	d406      	bmi.n	8018100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80180f2:	4286      	cmp	r6, r0
 80180f4:	da04      	bge.n	8018100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80180f6:	2b00      	cmp	r3, #0
 80180f8:	db02      	blt.n	8018100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80180fa:	42ab      	cmp	r3, r5
 80180fc:	f2c0 80ed 	blt.w	80182da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8018100:	3601      	adds	r6, #1
 8018102:	f100 80da 	bmi.w	80182ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018106:	42b1      	cmp	r1, r6
 8018108:	f2c0 80d7 	blt.w	80182ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801810c:	3301      	adds	r3, #1
 801810e:	f100 80d4 	bmi.w	80182ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018112:	429a      	cmp	r2, r3
 8018114:	f2c0 80d1 	blt.w	80182ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018118:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801811a:	9311      	str	r3, [sp, #68]	@ 0x44
 801811c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801811e:	930c      	str	r3, [sp, #48]	@ 0x30
 8018120:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018122:	2b00      	cmp	r3, #0
 8018124:	f340 80fa 	ble.w	801831c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8018128:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801812a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801812c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801812e:	68c6      	ldr	r6, [r0, #12]
 8018130:	141d      	asrs	r5, r3, #16
 8018132:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8018134:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8018138:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801813a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801813c:	1400      	asrs	r0, r0, #16
 801813e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8018142:	6892      	ldr	r2, [r2, #8]
 8018144:	f100 813e 	bmi.w	80183c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018148:	1e57      	subs	r7, r2, #1
 801814a:	42b8      	cmp	r0, r7
 801814c:	f280 813a 	bge.w	80183c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018150:	2d00      	cmp	r5, #0
 8018152:	f2c0 8137 	blt.w	80183c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018156:	1e77      	subs	r7, r6, #1
 8018158:	42bd      	cmp	r5, r7
 801815a:	f280 8133 	bge.w	80183c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801815e:	b212      	sxth	r2, r2
 8018160:	fb05 0002 	mla	r0, r5, r2, r0
 8018164:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8018166:	f815 a000 	ldrb.w	sl, [r5, r0]
 801816a:	182e      	adds	r6, r5, r0
 801816c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8018170:	eb04 050a 	add.w	r5, r4, sl
 8018174:	2b00      	cmp	r3, #0
 8018176:	f000 8117 	beq.w	80183a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801817a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801817e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018182:	44a4      	add	ip, r4
 8018184:	2900      	cmp	r1, #0
 8018186:	f000 8117 	beq.w	80183b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801818a:	18b0      	adds	r0, r6, r2
 801818c:	5cb2      	ldrb	r2, [r6, r2]
 801818e:	7840      	ldrb	r0, [r0, #1]
 8018190:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018194:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018198:	4422      	add	r2, r4
 801819a:	4420      	add	r0, r4
 801819c:	b29b      	uxth	r3, r3
 801819e:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80181a2:	b289      	uxth	r1, r1
 80181a4:	f895 b002 	ldrb.w	fp, [r5, #2]
 80181a8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80181aa:	fb03 f901 	mul.w	r9, r3, r1
 80181ae:	011b      	lsls	r3, r3, #4
 80181b0:	f8b6 e000 	ldrh.w	lr, [r6]
 80181b4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80181b8:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 80181bc:	eba3 0309 	sub.w	r3, r3, r9
 80181c0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 80181c4:	b289      	uxth	r1, r1
 80181c6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80181ca:	b29b      	uxth	r3, r3
 80181cc:	eba8 0801 	sub.w	r8, r8, r1
 80181d0:	435f      	muls	r7, r3
 80181d2:	fa1f f888 	uxth.w	r8, r8
 80181d6:	9310      	str	r3, [sp, #64]	@ 0x40
 80181d8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80181da:	fb08 770b 	mla	r7, r8, fp, r7
 80181de:	f892 b002 	ldrb.w	fp, [r2, #2]
 80181e2:	fb01 770b 	mla	r7, r1, fp, r7
 80181e6:	f890 b002 	ldrb.w	fp, [r0, #2]
 80181ea:	fb09 770b 	mla	r7, r9, fp, r7
 80181ee:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80181f2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 80181f6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80181fa:	fb1b fb03 	smulbb	fp, fp, r3
 80181fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018200:	fb07 b706 	mla	r7, r7, r6, fp
 8018204:	f895 b001 	ldrb.w	fp, [r5, #1]
 8018208:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801820c:	f89c c000 	ldrb.w	ip, [ip]
 8018210:	b2bf      	uxth	r7, r7
 8018212:	435d      	muls	r5, r3
 8018214:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018216:	fb08 550b 	mla	r5, r8, fp, r5
 801821a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801821e:	fb01 550b 	mla	r5, r1, fp, r5
 8018222:	f890 b001 	ldrb.w	fp, [r0, #1]
 8018226:	fb09 550b 	mla	r5, r9, fp, r5
 801822a:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801822e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018232:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8018236:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801823a:	fa5f fe8e 	uxtb.w	lr, lr
 801823e:	fb1b fb03 	smulbb	fp, fp, r3
 8018242:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018244:	fb03 f30c 	mul.w	r3, r3, ip
 8018248:	f892 c000 	ldrb.w	ip, [r2]
 801824c:	fb05 b506 	mla	r5, r5, r6, fp
 8018250:	fb08 330a 	mla	r3, r8, sl, r3
 8018254:	b2ad      	uxth	r5, r5
 8018256:	fb01 330c 	mla	r3, r1, ip, r3
 801825a:	f890 c000 	ldrb.w	ip, [r0]
 801825e:	f105 0b01 	add.w	fp, r5, #1
 8018262:	fb09 3c0c 	mla	ip, r9, ip, r3
 8018266:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018268:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801826c:	fb1e fe03 	smulbb	lr, lr, r3
 8018270:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8018274:	1c7b      	adds	r3, r7, #1
 8018276:	096d      	lsrs	r5, r5, #5
 8018278:	fb0c e606 	mla	r6, ip, r6, lr
 801827c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8018280:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018284:	b2b6      	uxth	r6, r6
 8018286:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801828a:	1c77      	adds	r7, r6, #1
 801828c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8018290:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018294:	431f      	orrs	r7, r3
 8018296:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018298:	433d      	orrs	r5, r7
 801829a:	801d      	strh	r5, [r3, #0]
 801829c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801829e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80182a0:	3302      	adds	r3, #2
 80182a2:	930c      	str	r3, [sp, #48]	@ 0x30
 80182a4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80182a6:	4413      	add	r3, r2
 80182a8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80182aa:	931f      	str	r3, [sp, #124]	@ 0x7c
 80182ac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80182ae:	4413      	add	r3, r2
 80182b0:	9320      	str	r3, [sp, #128]	@ 0x80
 80182b2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80182b4:	3b01      	subs	r3, #1
 80182b6:	9311      	str	r3, [sp, #68]	@ 0x44
 80182b8:	e732      	b.n	8018120 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80182ba:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80182bc:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 80182be:	4433      	add	r3, r6
 80182c0:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 80182c2:	931f      	str	r3, [sp, #124]	@ 0x7c
 80182c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80182c6:	4433      	add	r3, r6
 80182c8:	9320      	str	r3, [sp, #128]	@ 0x80
 80182ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80182cc:	3b01      	subs	r3, #1
 80182ce:	9309      	str	r3, [sp, #36]	@ 0x24
 80182d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80182d2:	3302      	adds	r3, #2
 80182d4:	930a      	str	r3, [sp, #40]	@ 0x28
 80182d6:	e702      	b.n	80180de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80182d8:	d027      	beq.n	801832a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80182da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80182dc:	9821      	ldr	r0, [sp, #132]	@ 0x84
 80182de:	3b01      	subs	r3, #1
 80182e0:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 80182e2:	fb00 5003 	mla	r0, r0, r3, r5
 80182e6:	1400      	asrs	r0, r0, #16
 80182e8:	f53f af16 	bmi.w	8018118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80182ec:	3901      	subs	r1, #1
 80182ee:	4288      	cmp	r0, r1
 80182f0:	f6bf af12 	bge.w	8018118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80182f4:	9922      	ldr	r1, [sp, #136]	@ 0x88
 80182f6:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80182f8:	fb01 0303 	mla	r3, r1, r3, r0
 80182fc:	141b      	asrs	r3, r3, #16
 80182fe:	f53f af0b 	bmi.w	8018118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018302:	3a01      	subs	r2, #1
 8018304:	4293      	cmp	r3, r2
 8018306:	f6bf af07 	bge.w	8018118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801830a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801830c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 8018310:	9311      	str	r3, [sp, #68]	@ 0x44
 8018312:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018314:	930c      	str	r3, [sp, #48]	@ 0x30
 8018316:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018318:	2b00      	cmp	r3, #0
 801831a:	dc70      	bgt.n	80183fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801831c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801831e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8018320:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018324:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018328:	930a      	str	r3, [sp, #40]	@ 0x28
 801832a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801832c:	2b00      	cmp	r3, #0
 801832e:	f340 8124 	ble.w	801857a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8018332:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018336:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8018338:	ee30 0a04 	vadd.f32	s0, s0, s8
 801833c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018340:	eef0 6a62 	vmov.f32	s13, s5
 8018344:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018348:	ee31 1a05 	vadd.f32	s2, s2, s10
 801834c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018350:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 8018354:	eef0 6a43 	vmov.f32	s13, s6
 8018358:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801835c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 8018360:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018364:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018368:	ee77 2a62 	vsub.f32	s5, s14, s5
 801836c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018370:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018374:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018378:	ee12 2a90 	vmov	r2, s5
 801837c:	eef0 2a47 	vmov.f32	s5, s14
 8018380:	fb92 f3f3 	sdiv	r3, r2, r3
 8018384:	ee13 2a10 	vmov	r2, s6
 8018388:	9321      	str	r3, [sp, #132]	@ 0x84
 801838a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801838c:	eeb0 3a67 	vmov.f32	s6, s15
 8018390:	fb92 f3f3 	sdiv	r3, r2, r3
 8018394:	9322      	str	r3, [sp, #136]	@ 0x88
 8018396:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018398:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801839a:	3b01      	subs	r3, #1
 801839c:	930e      	str	r3, [sp, #56]	@ 0x38
 801839e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80183a0:	bf08      	it	eq
 80183a2:	4613      	moveq	r3, r2
 80183a4:	9309      	str	r3, [sp, #36]	@ 0x24
 80183a6:	e68c      	b.n	80180c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80183a8:	b149      	cbz	r1, 80183be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80183aa:	5cb2      	ldrb	r2, [r6, r2]
 80183ac:	4628      	mov	r0, r5
 80183ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80183b2:	4422      	add	r2, r4
 80183b4:	46ac      	mov	ip, r5
 80183b6:	e6f1      	b.n	801819c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80183b8:	4628      	mov	r0, r5
 80183ba:	462a      	mov	r2, r5
 80183bc:	e6ee      	b.n	801819c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80183be:	4628      	mov	r0, r5
 80183c0:	462a      	mov	r2, r5
 80183c2:	e7f7      	b.n	80183b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80183c4:	1c47      	adds	r7, r0, #1
 80183c6:	f53f af69 	bmi.w	801829c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80183ca:	42ba      	cmp	r2, r7
 80183cc:	f6ff af66 	blt.w	801829c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80183d0:	1c6f      	adds	r7, r5, #1
 80183d2:	f53f af63 	bmi.w	801829c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80183d6:	42be      	cmp	r6, r7
 80183d8:	f6ff af60 	blt.w	801829c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80183dc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80183de:	b236      	sxth	r6, r6
 80183e0:	b212      	sxth	r2, r2
 80183e2:	9002      	str	r0, [sp, #8]
 80183e4:	9601      	str	r6, [sp, #4]
 80183e6:	9200      	str	r2, [sp, #0]
 80183e8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80183ea:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80183ee:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80183f2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 80183f6:	4623      	mov	r3, r4
 80183f8:	f7ff fd59 	bl	8017eae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80183fc:	e74e      	b.n	801829c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80183fe:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8018400:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8018402:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8018406:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8018408:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801840a:	1400      	asrs	r0, r0, #16
 801840c:	142d      	asrs	r5, r5, #16
 801840e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8018410:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8018414:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8018418:	fb02 5000 	mla	r0, r2, r0, r5
 801841c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801841e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8018422:	182e      	adds	r6, r5, r0
 8018424:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8018428:	eb04 0509 	add.w	r5, r4, r9
 801842c:	2b00      	cmp	r3, #0
 801842e:	f000 8096 	beq.w	801855e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8018432:	7877      	ldrb	r7, [r6, #1]
 8018434:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8018438:	4427      	add	r7, r4
 801843a:	2900      	cmp	r1, #0
 801843c:	f000 8097 	beq.w	801856e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8018440:	18b0      	adds	r0, r6, r2
 8018442:	5cb2      	ldrb	r2, [r6, r2]
 8018444:	7840      	ldrb	r0, [r0, #1]
 8018446:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801844a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801844e:	4422      	add	r2, r4
 8018450:	4420      	add	r0, r4
 8018452:	b29b      	uxth	r3, r3
 8018454:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8018456:	b289      	uxth	r1, r1
 8018458:	f895 b002 	ldrb.w	fp, [r5, #2]
 801845c:	f8b6 c000 	ldrh.w	ip, [r6]
 8018460:	fb03 f801 	mul.w	r8, r3, r1
 8018464:	011b      	lsls	r3, r3, #4
 8018466:	78be      	ldrb	r6, [r7, #2]
 8018468:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801846c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8018470:	eba3 0308 	sub.w	r3, r3, r8
 8018474:	f814 9009 	ldrb.w	r9, [r4, r9]
 8018478:	b289      	uxth	r1, r1
 801847a:	b29b      	uxth	r3, r3
 801847c:	ebae 0e01 	sub.w	lr, lr, r1
 8018480:	435e      	muls	r6, r3
 8018482:	fa1f fe8e 	uxth.w	lr, lr
 8018486:	9310      	str	r3, [sp, #64]	@ 0x40
 8018488:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801848a:	fb0e 660b 	mla	r6, lr, fp, r6
 801848e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8018492:	fb01 660b 	mla	r6, r1, fp, r6
 8018496:	f890 b002 	ldrb.w	fp, [r0, #2]
 801849a:	fb08 660b 	mla	r6, r8, fp, r6
 801849e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80184a2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 80184a6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80184aa:	fb1b fb03 	smulbb	fp, fp, r3
 80184ae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80184b0:	fb06 b60a 	mla	r6, r6, sl, fp
 80184b4:	f895 b001 	ldrb.w	fp, [r5, #1]
 80184b8:	787d      	ldrb	r5, [r7, #1]
 80184ba:	783f      	ldrb	r7, [r7, #0]
 80184bc:	b2b6      	uxth	r6, r6
 80184be:	435d      	muls	r5, r3
 80184c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80184c2:	fb0e 550b 	mla	r5, lr, fp, r5
 80184c6:	f892 b001 	ldrb.w	fp, [r2, #1]
 80184ca:	fb01 550b 	mla	r5, r1, fp, r5
 80184ce:	f890 b001 	ldrb.w	fp, [r0, #1]
 80184d2:	fb08 550b 	mla	r5, r8, fp, r5
 80184d6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80184da:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80184de:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80184e2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80184e6:	fa5f fc8c 	uxtb.w	ip, ip
 80184ea:	fb1b fb03 	smulbb	fp, fp, r3
 80184ee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80184f0:	437b      	muls	r3, r7
 80184f2:	7817      	ldrb	r7, [r2, #0]
 80184f4:	fb05 b50a 	mla	r5, r5, sl, fp
 80184f8:	fb0e 3309 	mla	r3, lr, r9, r3
 80184fc:	b2ad      	uxth	r5, r5
 80184fe:	fb01 3307 	mla	r3, r1, r7, r3
 8018502:	7807      	ldrb	r7, [r0, #0]
 8018504:	f105 0b01 	add.w	fp, r5, #1
 8018508:	fb08 3707 	mla	r7, r8, r7, r3
 801850c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801850e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8018512:	fb1c fc03 	smulbb	ip, ip, r3
 8018516:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801851a:	1c73      	adds	r3, r6, #1
 801851c:	096d      	lsrs	r5, r5, #5
 801851e:	fb07 c70a 	mla	r7, r7, sl, ip
 8018522:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8018526:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801852a:	b2bf      	uxth	r7, r7
 801852c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801852e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8018532:	1c7a      	adds	r2, r7, #1
 8018534:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8018538:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801853c:	4316      	orrs	r6, r2
 801853e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8018540:	432e      	orrs	r6, r5
 8018542:	f823 6b02 	strh.w	r6, [r3], #2
 8018546:	930c      	str	r3, [sp, #48]	@ 0x30
 8018548:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801854a:	4413      	add	r3, r2
 801854c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801854e:	931f      	str	r3, [sp, #124]	@ 0x7c
 8018550:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018552:	4413      	add	r3, r2
 8018554:	9320      	str	r3, [sp, #128]	@ 0x80
 8018556:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018558:	3b01      	subs	r3, #1
 801855a:	9311      	str	r3, [sp, #68]	@ 0x44
 801855c:	e6db      	b.n	8018316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801855e:	b149      	cbz	r1, 8018574 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8018560:	5cb2      	ldrb	r2, [r6, r2]
 8018562:	4628      	mov	r0, r5
 8018564:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018568:	4422      	add	r2, r4
 801856a:	462f      	mov	r7, r5
 801856c:	e771      	b.n	8018452 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801856e:	4628      	mov	r0, r5
 8018570:	462a      	mov	r2, r5
 8018572:	e76e      	b.n	8018452 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8018574:	4628      	mov	r0, r5
 8018576:	462a      	mov	r2, r5
 8018578:	e7f7      	b.n	801856a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801857a:	b015      	add	sp, #84	@ 0x54
 801857c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8018580:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018584:	880f      	ldrh	r7, [r1, #0]
 8018586:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801858a:	023c      	lsls	r4, r7, #8
 801858c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8018590:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 8018594:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 8018598:	017c      	lsls	r4, r7, #5
 801859a:	00ff      	lsls	r7, r7, #3
 801859c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80185a0:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 80185a4:	b2ff      	uxtb	r7, r7
 80185a6:	ea4b 0404 	orr.w	r4, fp, r4
 80185aa:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 80185ae:	4327      	orrs	r7, r4
 80185b0:	fb05 ca0e 	mla	sl, r5, lr, ip
 80185b4:	2d00      	cmp	r5, #0
 80185b6:	9701      	str	r7, [sp, #4]
 80185b8:	eb02 080a 	add.w	r8, r2, sl
 80185bc:	db7e      	blt.n	80186bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80185be:	45a9      	cmp	r9, r5
 80185c0:	dd7c      	ble.n	80186bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80185c2:	f1bc 0f00 	cmp.w	ip, #0
 80185c6:	db77      	blt.n	80186b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80185c8:	45e6      	cmp	lr, ip
 80185ca:	dd75      	ble.n	80186b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80185cc:	f812 700a 	ldrb.w	r7, [r2, sl]
 80185d0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80185d4:	441f      	add	r7, r3
 80185d6:	f11c 0201 	adds.w	r2, ip, #1
 80185da:	d472      	bmi.n	80186c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80185dc:	4596      	cmp	lr, r2
 80185de:	dd70      	ble.n	80186c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80185e0:	2800      	cmp	r0, #0
 80185e2:	d06e      	beq.n	80186c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80185e4:	f898 4001 	ldrb.w	r4, [r8, #1]
 80185e8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80185ec:	441c      	add	r4, r3
 80185ee:	3501      	adds	r5, #1
 80185f0:	d46b      	bmi.n	80186ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80185f2:	45a9      	cmp	r9, r5
 80185f4:	dd69      	ble.n	80186ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80185f6:	2e00      	cmp	r6, #0
 80185f8:	d067      	beq.n	80186ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80185fa:	f1bc 0f00 	cmp.w	ip, #0
 80185fe:	db62      	blt.n	80186c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8018600:	45e6      	cmp	lr, ip
 8018602:	dd60      	ble.n	80186c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8018604:	f818 500e 	ldrb.w	r5, [r8, lr]
 8018608:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801860c:	441d      	add	r5, r3
 801860e:	f11c 0201 	adds.w	r2, ip, #1
 8018612:	d45d      	bmi.n	80186d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8018614:	4596      	cmp	lr, r2
 8018616:	dd5b      	ble.n	80186d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8018618:	2800      	cmp	r0, #0
 801861a:	d059      	beq.n	80186d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801861c:	44c6      	add	lr, r8
 801861e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018622:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018626:	4413      	add	r3, r2
 8018628:	b280      	uxth	r0, r0
 801862a:	f897 e002 	ldrb.w	lr, [r7, #2]
 801862e:	b2b2      	uxth	r2, r6
 8018630:	f897 9000 	ldrb.w	r9, [r7]
 8018634:	787f      	ldrb	r7, [r7, #1]
 8018636:	fb00 f602 	mul.w	r6, r0, r2
 801863a:	0100      	lsls	r0, r0, #4
 801863c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8018640:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 8018644:	1b80      	subs	r0, r0, r6
 8018646:	fa1f fc82 	uxth.w	ip, r2
 801864a:	b282      	uxth	r2, r0
 801864c:	78a0      	ldrb	r0, [r4, #2]
 801864e:	eba8 080c 	sub.w	r8, r8, ip
 8018652:	4350      	muls	r0, r2
 8018654:	fa1f f888 	uxth.w	r8, r8
 8018658:	fb08 0e0e 	mla	lr, r8, lr, r0
 801865c:	78a8      	ldrb	r0, [r5, #2]
 801865e:	fb0c e000 	mla	r0, ip, r0, lr
 8018662:	f893 e002 	ldrb.w	lr, [r3, #2]
 8018666:	fb06 0e0e 	mla	lr, r6, lr, r0
 801866a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801866e:	f894 e000 	ldrb.w	lr, [r4]
 8018672:	fb02 fe0e 	mul.w	lr, r2, lr
 8018676:	fb08 e909 	mla	r9, r8, r9, lr
 801867a:	f895 e000 	ldrb.w	lr, [r5]
 801867e:	fb0c 990e 	mla	r9, ip, lr, r9
 8018682:	f893 e000 	ldrb.w	lr, [r3]
 8018686:	785b      	ldrb	r3, [r3, #1]
 8018688:	fb06 9e0e 	mla	lr, r6, lr, r9
 801868c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018690:	ea4e 0e00 	orr.w	lr, lr, r0
 8018694:	7860      	ldrb	r0, [r4, #1]
 8018696:	4350      	muls	r0, r2
 8018698:	786a      	ldrb	r2, [r5, #1]
 801869a:	fb08 0007 	mla	r0, r8, r7, r0
 801869e:	fb0c 0202 	mla	r2, ip, r2, r0
 80186a2:	fb06 2303 	mla	r3, r6, r3, r2
 80186a6:	095b      	lsrs	r3, r3, #5
 80186a8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80186ac:	ea4e 0303 	orr.w	r3, lr, r3
 80186b0:	800b      	strh	r3, [r1, #0]
 80186b2:	b003      	add	sp, #12
 80186b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80186b8:	af01      	add	r7, sp, #4
 80186ba:	e78c      	b.n	80185d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 80186bc:	ac01      	add	r4, sp, #4
 80186be:	4627      	mov	r7, r4
 80186c0:	e795      	b.n	80185ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80186c2:	ac01      	add	r4, sp, #4
 80186c4:	e793      	b.n	80185ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80186c6:	ad01      	add	r5, sp, #4
 80186c8:	e7a1      	b.n	801860e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 80186ca:	ab01      	add	r3, sp, #4
 80186cc:	461d      	mov	r5, r3
 80186ce:	e7ab      	b.n	8018628 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 80186d0:	ab01      	add	r3, sp, #4
 80186d2:	e7a9      	b.n	8018628 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

080186d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80186d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186d8:	b08f      	sub	sp, #60	@ 0x3c
 80186da:	920c      	str	r2, [sp, #48]	@ 0x30
 80186dc:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 80186de:	900d      	str	r0, [sp, #52]	@ 0x34
 80186e0:	910a      	str	r1, [sp, #40]	@ 0x28
 80186e2:	6850      	ldr	r0, [r2, #4]
 80186e4:	9306      	str	r3, [sp, #24]
 80186e6:	6812      	ldr	r2, [r2, #0]
 80186e8:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 80186ec:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 80186f0:	fb00 1303 	mla	r3, r0, r3, r1
 80186f4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80186f8:	9307      	str	r3, [sp, #28]
 80186fa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80186fc:	681b      	ldr	r3, [r3, #0]
 80186fe:	9308      	str	r3, [sp, #32]
 8018700:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018702:	685c      	ldr	r4, [r3, #4]
 8018704:	3404      	adds	r4, #4
 8018706:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018708:	2b00      	cmp	r3, #0
 801870a:	dc03      	bgt.n	8018714 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801870c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801870e:	2b00      	cmp	r3, #0
 8018710:	f340 81d5 	ble.w	8018abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8018714:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018716:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801871a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801871e:	1e48      	subs	r0, r1, #1
 8018720:	1e56      	subs	r6, r2, #1
 8018722:	9b06      	ldr	r3, [sp, #24]
 8018724:	2b00      	cmp	r3, #0
 8018726:	f340 80b6 	ble.w	8018896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801872a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801872e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8018732:	d406      	bmi.n	8018742 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018734:	4287      	cmp	r7, r0
 8018736:	da04      	bge.n	8018742 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018738:	2b00      	cmp	r3, #0
 801873a:	db02      	blt.n	8018742 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801873c:	42b3      	cmp	r3, r6
 801873e:	f2c0 80ab 	blt.w	8018898 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8018742:	3701      	adds	r7, #1
 8018744:	f100 809c 	bmi.w	8018880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8018748:	42b9      	cmp	r1, r7
 801874a:	f2c0 8099 	blt.w	8018880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801874e:	3301      	adds	r3, #1
 8018750:	f100 8096 	bmi.w	8018880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8018754:	429a      	cmp	r2, r3
 8018756:	f2c0 8093 	blt.w	8018880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801875a:	9b06      	ldr	r3, [sp, #24]
 801875c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801875e:	9b07      	ldr	r3, [sp, #28]
 8018760:	9309      	str	r3, [sp, #36]	@ 0x24
 8018762:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018764:	2b00      	cmp	r3, #0
 8018766:	f340 80b4 	ble.w	80188d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801876a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801876c:	142e      	asrs	r6, r5, #16
 801876e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8018770:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8018774:	68c7      	ldr	r7, [r0, #12]
 8018776:	ea5f 402b 	movs.w	r0, fp, asr #16
 801877a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801877e:	6892      	ldr	r2, [r2, #8]
 8018780:	f100 80fb 	bmi.w	801897a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8018784:	f102 3cff 	add.w	ip, r2, #4294967295
 8018788:	4560      	cmp	r0, ip
 801878a:	f280 80f6 	bge.w	801897a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801878e:	2e00      	cmp	r6, #0
 8018790:	f2c0 80f3 	blt.w	801897a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8018794:	f107 3cff 	add.w	ip, r7, #4294967295
 8018798:	4566      	cmp	r6, ip
 801879a:	f280 80ee 	bge.w	801897a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801879e:	b212      	sxth	r2, r2
 80187a0:	fb06 0002 	mla	r0, r6, r2, r0
 80187a4:	9e08      	ldr	r6, [sp, #32]
 80187a6:	1837      	adds	r7, r6, r0
 80187a8:	5c30      	ldrb	r0, [r6, r0]
 80187aa:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80187ae:	eb04 0c08 	add.w	ip, r4, r8
 80187b2:	2b00      	cmp	r3, #0
 80187b4:	f000 80d3 	beq.w	801895e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80187b8:	787e      	ldrb	r6, [r7, #1]
 80187ba:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80187be:	4426      	add	r6, r4
 80187c0:	2900      	cmp	r1, #0
 80187c2:	f000 80d4 	beq.w	801896e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80187c6:	18b8      	adds	r0, r7, r2
 80187c8:	5cba      	ldrb	r2, [r7, r2]
 80187ca:	7840      	ldrb	r0, [r0, #1]
 80187cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80187d0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80187d4:	4422      	add	r2, r4
 80187d6:	4420      	add	r0, r4
 80187d8:	b29b      	uxth	r3, r3
 80187da:	78b7      	ldrb	r7, [r6, #2]
 80187dc:	b289      	uxth	r1, r1
 80187de:	f89c a002 	ldrb.w	sl, [ip, #2]
 80187e2:	f89c c001 	ldrb.w	ip, [ip, #1]
 80187e6:	fb03 f901 	mul.w	r9, r3, r1
 80187ea:	011b      	lsls	r3, r3, #4
 80187ec:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80187f0:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80187f4:	eba3 0309 	sub.w	r3, r3, r9
 80187f8:	b289      	uxth	r1, r1
 80187fa:	b29b      	uxth	r3, r3
 80187fc:	ebae 0e01 	sub.w	lr, lr, r1
 8018800:	435f      	muls	r7, r3
 8018802:	fa1f fe8e 	uxth.w	lr, lr
 8018806:	fb0e 770a 	mla	r7, lr, sl, r7
 801880a:	f892 a002 	ldrb.w	sl, [r2, #2]
 801880e:	fb01 770a 	mla	r7, r1, sl, r7
 8018812:	f890 a002 	ldrb.w	sl, [r0, #2]
 8018816:	fb09 7a0a 	mla	sl, r9, sl, r7
 801881a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801881e:	f896 8000 	ldrb.w	r8, [r6]
 8018822:	7876      	ldrb	r6, [r6, #1]
 8018824:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8018828:	fb03 f808 	mul.w	r8, r3, r8
 801882c:	4373      	muls	r3, r6
 801882e:	fb0e 8807 	mla	r8, lr, r7, r8
 8018832:	7817      	ldrb	r7, [r2, #0]
 8018834:	fb0e 330c 	mla	r3, lr, ip, r3
 8018838:	fb01 8807 	mla	r8, r1, r7, r8
 801883c:	7807      	ldrb	r7, [r0, #0]
 801883e:	fb09 8707 	mla	r7, r9, r7, r8
 8018842:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018846:	ea47 070a 	orr.w	r7, r7, sl
 801884a:	f892 a001 	ldrb.w	sl, [r2, #1]
 801884e:	fb01 310a 	mla	r1, r1, sl, r3
 8018852:	f890 a001 	ldrb.w	sl, [r0, #1]
 8018856:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018858:	fb09 1a0a 	mla	sl, r9, sl, r1
 801885c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018860:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018864:	ea47 070a 	orr.w	r7, r7, sl
 8018868:	801f      	strh	r7, [r3, #0]
 801886a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801886c:	3302      	adds	r3, #2
 801886e:	9309      	str	r3, [sp, #36]	@ 0x24
 8018870:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8018872:	449b      	add	fp, r3
 8018874:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8018876:	441d      	add	r5, r3
 8018878:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801887a:	3b01      	subs	r3, #1
 801887c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801887e:	e770      	b.n	8018762 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8018880:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8018882:	449b      	add	fp, r3
 8018884:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8018886:	441d      	add	r5, r3
 8018888:	9b06      	ldr	r3, [sp, #24]
 801888a:	3b01      	subs	r3, #1
 801888c:	9306      	str	r3, [sp, #24]
 801888e:	9b07      	ldr	r3, [sp, #28]
 8018890:	3302      	adds	r3, #2
 8018892:	9307      	str	r3, [sp, #28]
 8018894:	e745      	b.n	8018722 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8018896:	d023      	beq.n	80188e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8018898:	9b06      	ldr	r3, [sp, #24]
 801889a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801889c:	3b01      	subs	r3, #1
 801889e:	fb00 b003 	mla	r0, r0, r3, fp
 80188a2:	1400      	asrs	r0, r0, #16
 80188a4:	f53f af59 	bmi.w	801875a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80188a8:	3901      	subs	r1, #1
 80188aa:	4288      	cmp	r0, r1
 80188ac:	f6bf af55 	bge.w	801875a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80188b0:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80188b2:	fb01 5303 	mla	r3, r1, r3, r5
 80188b6:	141b      	asrs	r3, r3, #16
 80188b8:	f53f af4f 	bmi.w	801875a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80188bc:	3a01      	subs	r2, #1
 80188be:	4293      	cmp	r3, r2
 80188c0:	f6bf af4b 	bge.w	801875a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80188c4:	9b06      	ldr	r3, [sp, #24]
 80188c6:	9309      	str	r3, [sp, #36]	@ 0x24
 80188c8:	9b07      	ldr	r3, [sp, #28]
 80188ca:	930b      	str	r3, [sp, #44]	@ 0x2c
 80188cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80188ce:	2b00      	cmp	r3, #0
 80188d0:	dc70      	bgt.n	80189b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80188d2:	9b06      	ldr	r3, [sp, #24]
 80188d4:	9a07      	ldr	r2, [sp, #28]
 80188d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80188da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80188de:	9307      	str	r3, [sp, #28]
 80188e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80188e2:	2b00      	cmp	r3, #0
 80188e4:	f340 80eb 	ble.w	8018abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80188e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80188ec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80188ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 80188f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80188f6:	eef0 6a62 	vmov.f32	s13, s5
 80188fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80188fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018902:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018906:	ee16 ba90 	vmov	fp, s13
 801890a:	eef0 6a43 	vmov.f32	s13, s6
 801890e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018912:	ee16 5a90 	vmov	r5, s13
 8018916:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801891a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801891e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018922:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018926:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801892a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801892e:	ee12 2a90 	vmov	r2, s5
 8018932:	eef0 2a47 	vmov.f32	s5, s14
 8018936:	fb92 f3f3 	sdiv	r3, r2, r3
 801893a:	ee13 2a10 	vmov	r2, s6
 801893e:	931b      	str	r3, [sp, #108]	@ 0x6c
 8018940:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8018942:	eeb0 3a67 	vmov.f32	s6, s15
 8018946:	fb92 f3f3 	sdiv	r3, r2, r3
 801894a:	931c      	str	r3, [sp, #112]	@ 0x70
 801894c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801894e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8018950:	3b01      	subs	r3, #1
 8018952:	930a      	str	r3, [sp, #40]	@ 0x28
 8018954:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8018956:	bf08      	it	eq
 8018958:	4613      	moveq	r3, r2
 801895a:	9306      	str	r3, [sp, #24]
 801895c:	e6d3      	b.n	8018706 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801895e:	b149      	cbz	r1, 8018974 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018960:	5cba      	ldrb	r2, [r7, r2]
 8018962:	4660      	mov	r0, ip
 8018964:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018968:	4422      	add	r2, r4
 801896a:	4666      	mov	r6, ip
 801896c:	e734      	b.n	80187d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801896e:	4660      	mov	r0, ip
 8018970:	4662      	mov	r2, ip
 8018972:	e731      	b.n	80187d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 8018974:	4660      	mov	r0, ip
 8018976:	4662      	mov	r2, ip
 8018978:	e7f7      	b.n	801896a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801897a:	f110 0c01 	adds.w	ip, r0, #1
 801897e:	f53f af74 	bmi.w	801886a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8018982:	4562      	cmp	r2, ip
 8018984:	f6ff af71 	blt.w	801886a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8018988:	f116 0c01 	adds.w	ip, r6, #1
 801898c:	f53f af6d 	bmi.w	801886a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8018990:	4567      	cmp	r7, ip
 8018992:	f6ff af6a 	blt.w	801886a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8018996:	b23f      	sxth	r7, r7
 8018998:	b212      	sxth	r2, r2
 801899a:	9701      	str	r7, [sp, #4]
 801899c:	9200      	str	r2, [sp, #0]
 801899e:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80189a2:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80189a6:	4623      	mov	r3, r4
 80189a8:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80189aa:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80189ae:	f7ff fde7 	bl	8018580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80189b2:	e75a      	b.n	801886a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80189b4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80189b6:	ea4f 462b 	mov.w	r6, fp, asr #16
 80189ba:	1428      	asrs	r0, r5, #16
 80189bc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80189c0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80189c4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80189c8:	fb02 6000 	mla	r0, r2, r0, r6
 80189cc:	9e08      	ldr	r6, [sp, #32]
 80189ce:	f816 8000 	ldrb.w	r8, [r6, r0]
 80189d2:	1837      	adds	r7, r6, r0
 80189d4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80189d8:	eb04 0c08 	add.w	ip, r4, r8
 80189dc:	2b00      	cmp	r3, #0
 80189de:	d060      	beq.n	8018aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 80189e0:	787e      	ldrb	r6, [r7, #1]
 80189e2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80189e6:	4426      	add	r6, r4
 80189e8:	2900      	cmp	r1, #0
 80189ea:	d062      	beq.n	8018ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 80189ec:	18b8      	adds	r0, r7, r2
 80189ee:	5cba      	ldrb	r2, [r7, r2]
 80189f0:	7840      	ldrb	r0, [r0, #1]
 80189f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80189f6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80189fa:	4422      	add	r2, r4
 80189fc:	4420      	add	r0, r4
 80189fe:	b29b      	uxth	r3, r3
 8018a00:	78b7      	ldrb	r7, [r6, #2]
 8018a02:	b289      	uxth	r1, r1
 8018a04:	f89c a002 	ldrb.w	sl, [ip, #2]
 8018a08:	f89c c001 	ldrb.w	ip, [ip, #1]
 8018a0c:	fb03 f901 	mul.w	r9, r3, r1
 8018a10:	011b      	lsls	r3, r3, #4
 8018a12:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018a16:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8018a1a:	eba3 0309 	sub.w	r3, r3, r9
 8018a1e:	b289      	uxth	r1, r1
 8018a20:	b29b      	uxth	r3, r3
 8018a22:	ebae 0e01 	sub.w	lr, lr, r1
 8018a26:	435f      	muls	r7, r3
 8018a28:	fa1f fe8e 	uxth.w	lr, lr
 8018a2c:	fb0e 770a 	mla	r7, lr, sl, r7
 8018a30:	f892 a002 	ldrb.w	sl, [r2, #2]
 8018a34:	fb01 770a 	mla	r7, r1, sl, r7
 8018a38:	f890 a002 	ldrb.w	sl, [r0, #2]
 8018a3c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8018a40:	f814 7008 	ldrb.w	r7, [r4, r8]
 8018a44:	f896 8000 	ldrb.w	r8, [r6]
 8018a48:	7876      	ldrb	r6, [r6, #1]
 8018a4a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8018a4e:	fb03 f808 	mul.w	r8, r3, r8
 8018a52:	4373      	muls	r3, r6
 8018a54:	7856      	ldrb	r6, [r2, #1]
 8018a56:	fb0e 8807 	mla	r8, lr, r7, r8
 8018a5a:	7817      	ldrb	r7, [r2, #0]
 8018a5c:	fb0e 330c 	mla	r3, lr, ip, r3
 8018a60:	fb01 8807 	mla	r8, r1, r7, r8
 8018a64:	7807      	ldrb	r7, [r0, #0]
 8018a66:	fb01 3306 	mla	r3, r1, r6, r3
 8018a6a:	fb09 8707 	mla	r7, r9, r7, r8
 8018a6e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018a72:	ea47 070a 	orr.w	r7, r7, sl
 8018a76:	f890 a001 	ldrb.w	sl, [r0, #1]
 8018a7a:	fb09 3a0a 	mla	sl, r9, sl, r3
 8018a7e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018a80:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018a84:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018a88:	ea47 070a 	orr.w	r7, r7, sl
 8018a8c:	f823 7b02 	strh.w	r7, [r3], #2
 8018a90:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018a92:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8018a94:	449b      	add	fp, r3
 8018a96:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8018a98:	441d      	add	r5, r3
 8018a9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018a9c:	3b01      	subs	r3, #1
 8018a9e:	9309      	str	r3, [sp, #36]	@ 0x24
 8018aa0:	e714      	b.n	80188cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8018aa2:	b149      	cbz	r1, 8018ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8018aa4:	5cba      	ldrb	r2, [r7, r2]
 8018aa6:	4660      	mov	r0, ip
 8018aa8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018aac:	4422      	add	r2, r4
 8018aae:	4666      	mov	r6, ip
 8018ab0:	e7a5      	b.n	80189fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8018ab2:	4660      	mov	r0, ip
 8018ab4:	4662      	mov	r2, ip
 8018ab6:	e7a2      	b.n	80189fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8018ab8:	4660      	mov	r0, ip
 8018aba:	4662      	mov	r2, ip
 8018abc:	e7f7      	b.n	8018aae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 8018abe:	b00f      	add	sp, #60	@ 0x3c
 8018ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ac4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8018ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ac8:	b085      	sub	sp, #20
 8018aca:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 8018ace:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 8018ad2:	9102      	str	r1, [sp, #8]
 8018ad4:	2c00      	cmp	r4, #0
 8018ad6:	fb04 710c 	mla	r1, r4, ip, r7
 8018ada:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 8018ade:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 8018ae2:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8018ae6:	eb02 0e01 	add.w	lr, r2, r1
 8018aea:	f2c0 8122 	blt.w	8018d32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8018aee:	45a0      	cmp	r8, r4
 8018af0:	f340 811f 	ble.w	8018d32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8018af4:	2f00      	cmp	r7, #0
 8018af6:	f2c0 811a 	blt.w	8018d2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8018afa:	45bc      	cmp	ip, r7
 8018afc:	f340 8117 	ble.w	8018d2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8018b00:	5c52      	ldrb	r2, [r2, r1]
 8018b02:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8018b06:	1c7a      	adds	r2, r7, #1
 8018b08:	f100 8116 	bmi.w	8018d38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8018b0c:	4594      	cmp	ip, r2
 8018b0e:	f340 8113 	ble.w	8018d38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8018b12:	2e00      	cmp	r6, #0
 8018b14:	f000 8112 	beq.w	8018d3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8018b18:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018b1c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8018b20:	3401      	adds	r4, #1
 8018b22:	f100 810f 	bmi.w	8018d44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8018b26:	45a0      	cmp	r8, r4
 8018b28:	f340 810c 	ble.w	8018d44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8018b2c:	2800      	cmp	r0, #0
 8018b2e:	f000 810c 	beq.w	8018d4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8018b32:	2f00      	cmp	r7, #0
 8018b34:	f2c0 8104 	blt.w	8018d40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8018b38:	45bc      	cmp	ip, r7
 8018b3a:	f340 8101 	ble.w	8018d40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8018b3e:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8018b42:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8018b46:	3701      	adds	r7, #1
 8018b48:	f100 8102 	bmi.w	8018d50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8018b4c:	45bc      	cmp	ip, r7
 8018b4e:	f340 80ff 	ble.w	8018d50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8018b52:	2e00      	cmp	r6, #0
 8018b54:	f000 80fe 	beq.w	8018d54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8018b58:	44f4      	add	ip, lr
 8018b5a:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8018b5e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8018b62:	b2b6      	uxth	r6, r6
 8018b64:	b280      	uxth	r0, r0
 8018b66:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8018b6a:	fb00 fe06 	mul.w	lr, r0, r6
 8018b6e:	0136      	lsls	r6, r6, #4
 8018b70:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8018b74:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8018b78:	eba6 070e 	sub.w	r7, r6, lr
 8018b7c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8018b80:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018b84:	b280      	uxth	r0, r0
 8018b86:	b2bf      	uxth	r7, r7
 8018b88:	1a1b      	subs	r3, r3, r0
 8018b8a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8018b8e:	fb0a f607 	mul.w	r6, sl, r7
 8018b92:	b29b      	uxth	r3, r3
 8018b94:	fb0b 6603 	mla	r6, fp, r3, r6
 8018b98:	fb00 6609 	mla	r6, r0, r9, r6
 8018b9c:	fb0e 6608 	mla	r6, lr, r8, r6
 8018ba0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8018ba4:	9600      	str	r6, [sp, #0]
 8018ba6:	2e00      	cmp	r6, #0
 8018ba8:	f000 80be 	beq.w	8018d28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8018bac:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8018bb0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8018bb4:	9e02      	ldr	r6, [sp, #8]
 8018bb6:	fb0b fc0c 	mul.w	ip, fp, ip
 8018bba:	fb0b f505 	mul.w	r5, fp, r5
 8018bbe:	8836      	ldrh	r6, [r6, #0]
 8018bc0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8018bc4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8018bc8:	9501      	str	r5, [sp, #4]
 8018bca:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8018bce:	44dc      	add	ip, fp
 8018bd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018bd4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8018bd8:	9503      	str	r5, [sp, #12]
 8018bda:	9d01      	ldr	r5, [sp, #4]
 8018bdc:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8018be0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018be4:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8018be8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8018bec:	fb0a fc0c 	mul.w	ip, sl, ip
 8018bf0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8018bf4:	fb0a fa01 	mul.w	sl, sl, r1
 8018bf8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8018bfc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8018c00:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8018c04:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8018c08:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8018c0c:	4465      	add	r5, ip
 8018c0e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8018c12:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8018c16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018c1a:	fb09 fc0c 	mul.w	ip, r9, ip
 8018c1e:	0a2d      	lsrs	r5, r5, #8
 8018c20:	fb09 f904 	mul.w	r9, r9, r4
 8018c24:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018c28:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8018c2c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8018c30:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8018c34:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8018c38:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8018c3c:	437d      	muls	r5, r7
 8018c3e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8018c42:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8018c46:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8018c4a:	4461      	add	r1, ip
 8018c4c:	fb08 f404 	mul.w	r4, r8, r4
 8018c50:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018c54:	fb08 f802 	mul.w	r8, r8, r2
 8018c58:	0a09      	lsrs	r1, r1, #8
 8018c5a:	0a22      	lsrs	r2, r4, #8
 8018c5c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8018c60:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8018c64:	fb07 f70a 	mul.w	r7, r7, sl
 8018c68:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8018c6c:	4414      	add	r4, r2
 8018c6e:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8018c72:	0a24      	lsrs	r4, r4, #8
 8018c74:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8018c78:	9a03      	ldr	r2, [sp, #12]
 8018c7a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8018c7e:	fb02 5503 	mla	r5, r2, r3, r5
 8018c82:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018c86:	9a00      	ldr	r2, [sp, #0]
 8018c88:	fb04 540e 	mla	r4, r4, lr, r5
 8018c8c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8018c90:	1235      	asrs	r5, r6, #8
 8018c92:	fb01 4100 	mla	r1, r1, r0, r4
 8018c96:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018c9a:	0a09      	lsrs	r1, r1, #8
 8018c9c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8018ca0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8018ca4:	fb03 7101 	mla	r1, r3, r1, r7
 8018ca8:	fb0e 1e08 	mla	lr, lr, r8, r1
 8018cac:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8018cb0:	fb00 e101 	mla	r1, r0, r1, lr
 8018cb4:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8018cb8:	b287      	uxth	r7, r0
 8018cba:	0a09      	lsrs	r1, r1, #8
 8018cbc:	437a      	muls	r2, r7
 8018cbe:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8018cc2:	1c53      	adds	r3, r2, #1
 8018cc4:	4321      	orrs	r1, r4
 8018cc6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018cca:	0c0a      	lsrs	r2, r1, #16
 8018ccc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8018cd0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8018cd4:	b2c8      	uxtb	r0, r1
 8018cd6:	fb12 f207 	smulbb	r2, r2, r7
 8018cda:	fb14 f407 	smulbb	r4, r4, r7
 8018cde:	b2db      	uxtb	r3, r3
 8018ce0:	fb10 f007 	smulbb	r0, r0, r7
 8018ce4:	fb05 2503 	mla	r5, r5, r3, r2
 8018ce8:	10f2      	asrs	r2, r6, #3
 8018cea:	00f6      	lsls	r6, r6, #3
 8018cec:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8018cf0:	b2ad      	uxth	r5, r5
 8018cf2:	b2f6      	uxtb	r6, r6
 8018cf4:	fb02 4203 	mla	r2, r2, r3, r4
 8018cf8:	fb06 0303 	mla	r3, r6, r3, r0
 8018cfc:	b294      	uxth	r4, r2
 8018cfe:	b299      	uxth	r1, r3
 8018d00:	1c6b      	adds	r3, r5, #1
 8018d02:	1c62      	adds	r2, r4, #1
 8018d04:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018d08:	1c4b      	adds	r3, r1, #1
 8018d0a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8018d0e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018d12:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018d16:	0952      	lsrs	r2, r2, #5
 8018d18:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018d1c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018d20:	432b      	orrs	r3, r5
 8018d22:	4313      	orrs	r3, r2
 8018d24:	9a02      	ldr	r2, [sp, #8]
 8018d26:	8013      	strh	r3, [r2, #0]
 8018d28:	b005      	add	sp, #20
 8018d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d2e:	2500      	movs	r5, #0
 8018d30:	e6e9      	b.n	8018b06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8018d32:	2100      	movs	r1, #0
 8018d34:	460d      	mov	r5, r1
 8018d36:	e6f3      	b.n	8018b20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8018d38:	2100      	movs	r1, #0
 8018d3a:	e6f1      	b.n	8018b20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8018d3c:	4631      	mov	r1, r6
 8018d3e:	e6ef      	b.n	8018b20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8018d40:	2400      	movs	r4, #0
 8018d42:	e700      	b.n	8018b46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8018d44:	2200      	movs	r2, #0
 8018d46:	4614      	mov	r4, r2
 8018d48:	e70b      	b.n	8018b62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8018d4a:	4602      	mov	r2, r0
 8018d4c:	4604      	mov	r4, r0
 8018d4e:	e708      	b.n	8018b62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8018d50:	2200      	movs	r2, #0
 8018d52:	e706      	b.n	8018b62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8018d54:	4632      	mov	r2, r6
 8018d56:	e704      	b.n	8018b62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08018d58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018d58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d5c:	b09f      	sub	sp, #124	@ 0x7c
 8018d5e:	921b      	str	r2, [sp, #108]	@ 0x6c
 8018d60:	9309      	str	r3, [sp, #36]	@ 0x24
 8018d62:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8018d64:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 8018d68:	901d      	str	r0, [sp, #116]	@ 0x74
 8018d6a:	931c      	str	r3, [sp, #112]	@ 0x70
 8018d6c:	6850      	ldr	r0, [r2, #4]
 8018d6e:	9119      	str	r1, [sp, #100]	@ 0x64
 8018d70:	6812      	ldr	r2, [r2, #0]
 8018d72:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8018d74:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 8018d78:	fb00 1303 	mla	r3, r0, r3, r1
 8018d7c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018d80:	930c      	str	r3, [sp, #48]	@ 0x30
 8018d82:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8018d84:	681b      	ldr	r3, [r3, #0]
 8018d86:	9312      	str	r3, [sp, #72]	@ 0x48
 8018d88:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8018d8a:	685e      	ldr	r6, [r3, #4]
 8018d8c:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8018d90:	3604      	adds	r6, #4
 8018d92:	930d      	str	r3, [sp, #52]	@ 0x34
 8018d94:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8018d96:	2b00      	cmp	r3, #0
 8018d98:	dc03      	bgt.n	8018da2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018d9a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8018d9c:	2b00      	cmp	r3, #0
 8018d9e:	f340 8387 	ble.w	80194b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 8018da2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8018da4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018da8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018dac:	1e48      	subs	r0, r1, #1
 8018dae:	1e57      	subs	r7, r2, #1
 8018db0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018db2:	2b00      	cmp	r3, #0
 8018db4:	f340 8194 	ble.w	80190e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8018db8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8018dba:	142b      	asrs	r3, r5, #16
 8018dbc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8018dc0:	d406      	bmi.n	8018dd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018dc2:	4584      	cmp	ip, r0
 8018dc4:	da04      	bge.n	8018dd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018dc6:	2b00      	cmp	r3, #0
 8018dc8:	db02      	blt.n	8018dd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018dca:	42bb      	cmp	r3, r7
 8018dcc:	f2c0 8189 	blt.w	80190e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018dd0:	f11c 0c01 	adds.w	ip, ip, #1
 8018dd4:	f100 8177 	bmi.w	80190c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8018dd8:	4561      	cmp	r1, ip
 8018dda:	f2c0 8174 	blt.w	80190c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8018dde:	3301      	adds	r3, #1
 8018de0:	f100 8171 	bmi.w	80190c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8018de4:	429a      	cmp	r2, r3
 8018de6:	f2c0 816e 	blt.w	80190c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8018dea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018dec:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8018dee:	931a      	str	r3, [sp, #104]	@ 0x68
 8018df0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8018df2:	2b00      	cmp	r3, #0
 8018df4:	f340 8193 	ble.w	801911e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8018df8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8018dfa:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8018dfe:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8018e02:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018e06:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8018e08:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8018e0c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8018e0e:	141b      	asrs	r3, r3, #16
 8018e10:	f100 81d6 	bmi.w	80191c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8018e14:	f100 38ff 	add.w	r8, r0, #4294967295
 8018e18:	4543      	cmp	r3, r8
 8018e1a:	f280 81d1 	bge.w	80191c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8018e1e:	f1bc 0f00 	cmp.w	ip, #0
 8018e22:	f2c0 81cd 	blt.w	80191c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8018e26:	f10e 38ff 	add.w	r8, lr, #4294967295
 8018e2a:	45c4      	cmp	ip, r8
 8018e2c:	f280 81c8 	bge.w	80191c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8018e30:	b200      	sxth	r0, r0
 8018e32:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018e34:	fb0c 3300 	mla	r3, ip, r0, r3
 8018e38:	eb04 0803 	add.w	r8, r4, r3
 8018e3c:	5ce3      	ldrb	r3, [r4, r3]
 8018e3e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018e42:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8018e46:	2a00      	cmp	r2, #0
 8018e48:	f000 81af 	beq.w	80191aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8018e4c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8018e50:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8018e54:	940e      	str	r4, [sp, #56]	@ 0x38
 8018e56:	0e24      	lsrs	r4, r4, #24
 8018e58:	9415      	str	r4, [sp, #84]	@ 0x54
 8018e5a:	b179      	cbz	r1, 8018e7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8018e5c:	eb08 0c00 	add.w	ip, r8, r0
 8018e60:	f818 0000 	ldrb.w	r0, [r8, r0]
 8018e64:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8018e68:	900a      	str	r0, [sp, #40]	@ 0x28
 8018e6a:	0e00      	lsrs	r0, r0, #24
 8018e6c:	9013      	str	r0, [sp, #76]	@ 0x4c
 8018e6e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8018e72:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8018e76:	900f      	str	r0, [sp, #60]	@ 0x3c
 8018e78:	0e00      	lsrs	r0, r0, #24
 8018e7a:	9016      	str	r0, [sp, #88]	@ 0x58
 8018e7c:	b292      	uxth	r2, r2
 8018e7e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8018e80:	b289      	uxth	r1, r1
 8018e82:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018e84:	fb02 f901 	mul.w	r9, r2, r1
 8018e88:	0112      	lsls	r2, r2, #4
 8018e8a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018e8e:	eba2 0809 	sub.w	r8, r2, r9
 8018e92:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8018e96:	b289      	uxth	r1, r1
 8018e98:	fa1f f888 	uxth.w	r8, r8
 8018e9c:	1a52      	subs	r2, r2, r1
 8018e9e:	fb08 f000 	mul.w	r0, r8, r0
 8018ea2:	b292      	uxth	r2, r2
 8018ea4:	fb02 000e 	mla	r0, r2, lr, r0
 8018ea8:	fb01 0004 	mla	r0, r1, r4, r0
 8018eac:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8018eae:	fb09 0004 	mla	r0, r9, r4, r0
 8018eb2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018eb6:	2800      	cmp	r0, #0
 8018eb8:	f000 80fa 	beq.w	80190b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8018ebc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8018ec0:	d01b      	beq.n	8018efa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8018ec2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8018ec6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018eca:	fb0e fa0a 	mul.w	sl, lr, sl
 8018ece:	fb0e fe03 	mul.w	lr, lr, r3
 8018ed2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018ed6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8018eda:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8018ede:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018ee2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018ee6:	4453      	add	r3, sl
 8018ee8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018eec:	0a1b      	lsrs	r3, r3, #8
 8018eee:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8018ef2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018ef6:	ea43 030c 	orr.w	r3, r3, ip
 8018efa:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018efc:	2cff      	cmp	r4, #255	@ 0xff
 8018efe:	d021      	beq.n	8018f44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8018f00:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018f02:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8018f06:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018f08:	fb04 fb0b 	mul.w	fp, r4, fp
 8018f0c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018f0e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018f12:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018f14:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018f18:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8018f1c:	fb04 fa0a 	mul.w	sl, r4, sl
 8018f20:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018f24:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8018f28:	44de      	add	lr, fp
 8018f2a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018f2e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018f32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018f36:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018f3a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018f3e:	ea4e 040a 	orr.w	r4, lr, sl
 8018f42:	940e      	str	r4, [sp, #56]	@ 0x38
 8018f44:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018f46:	2cff      	cmp	r4, #255	@ 0xff
 8018f48:	d021      	beq.n	8018f8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018f4a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018f4c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8018f50:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018f52:	fb04 fb0b 	mul.w	fp, r4, fp
 8018f56:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018f58:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018f5c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018f5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018f62:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8018f66:	fb04 fa0a 	mul.w	sl, r4, sl
 8018f6a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018f6e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8018f72:	44de      	add	lr, fp
 8018f74:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018f78:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018f7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018f80:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018f84:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018f88:	ea4e 040a 	orr.w	r4, lr, sl
 8018f8c:	940a      	str	r4, [sp, #40]	@ 0x28
 8018f8e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8018f90:	2cff      	cmp	r4, #255	@ 0xff
 8018f92:	d021      	beq.n	8018fd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 8018f94:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8018f96:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8018f9a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8018f9c:	fb04 fb0b 	mul.w	fp, r4, fp
 8018fa0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8018fa2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018fa6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8018fa8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018fac:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8018fb0:	fb04 fa0a 	mul.w	sl, r4, sl
 8018fb4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018fb8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8018fbc:	44de      	add	lr, fp
 8018fbe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018fc2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018fc6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018fca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018fce:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018fd2:	ea4e 040a 	orr.w	r4, lr, sl
 8018fd6:	940f      	str	r4, [sp, #60]	@ 0x3c
 8018fd8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018fda:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8018fde:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018fe2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8018fe6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018fe8:	fb08 fc0c 	mul.w	ip, r8, ip
 8018fec:	fb02 cc0e 	mla	ip, r2, lr, ip
 8018ff0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8018ff4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8018ff6:	fb01 cc0e 	mla	ip, r1, lr, ip
 8018ffa:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8018ffe:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019000:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019004:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8019008:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801900a:	fb08 f80e 	mul.w	r8, r8, lr
 801900e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019012:	fb02 8303 	mla	r3, r2, r3, r8
 8019016:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019018:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801901c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8019020:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019022:	fb01 330a 	mla	r3, r1, sl, r3
 8019026:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801902a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801902c:	fb09 3901 	mla	r9, r9, r1, r3
 8019030:	883b      	ldrh	r3, [r7, #0]
 8019032:	4342      	muls	r2, r0
 8019034:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019038:	1c50      	adds	r0, r2, #1
 801903a:	1219      	asrs	r1, r3, #8
 801903c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8019040:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019044:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019048:	ea4c 0c09 	orr.w	ip, ip, r9
 801904c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019050:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8019054:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8019058:	b2c0      	uxtb	r0, r0
 801905a:	fb12 f204 	smulbb	r2, r2, r4
 801905e:	fa5f fc8c 	uxtb.w	ip, ip
 8019062:	fb1e fe04 	smulbb	lr, lr, r4
 8019066:	fb01 2100 	mla	r1, r1, r0, r2
 801906a:	10da      	asrs	r2, r3, #3
 801906c:	fb1c fc04 	smulbb	ip, ip, r4
 8019070:	00db      	lsls	r3, r3, #3
 8019072:	b289      	uxth	r1, r1
 8019074:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019078:	b2db      	uxtb	r3, r3
 801907a:	fb02 e200 	mla	r2, r2, r0, lr
 801907e:	fb03 c300 	mla	r3, r3, r0, ip
 8019082:	b292      	uxth	r2, r2
 8019084:	fa1f fc83 	uxth.w	ip, r3
 8019088:	1c4b      	adds	r3, r1, #1
 801908a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801908e:	f10c 0301 	add.w	r3, ip, #1
 8019092:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8019096:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801909a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801909e:	430b      	orrs	r3, r1
 80190a0:	1c51      	adds	r1, r2, #1
 80190a2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80190a6:	0952      	lsrs	r2, r2, #5
 80190a8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80190ac:	4313      	orrs	r3, r2
 80190ae:	803b      	strh	r3, [r7, #0]
 80190b0:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 80190b2:	3702      	adds	r7, #2
 80190b4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80190b6:	441a      	add	r2, r3
 80190b8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80190ba:	441d      	add	r5, r3
 80190bc:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80190be:	9229      	str	r2, [sp, #164]	@ 0xa4
 80190c0:	3b01      	subs	r3, #1
 80190c2:	931a      	str	r3, [sp, #104]	@ 0x68
 80190c4:	e694      	b.n	8018df0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80190c6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 80190c8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 80190ca:	441c      	add	r4, r3
 80190cc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80190ce:	441d      	add	r5, r3
 80190d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80190d2:	9429      	str	r4, [sp, #164]	@ 0xa4
 80190d4:	3b01      	subs	r3, #1
 80190d6:	9309      	str	r3, [sp, #36]	@ 0x24
 80190d8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80190da:	3302      	adds	r3, #2
 80190dc:	930c      	str	r3, [sp, #48]	@ 0x30
 80190de:	e667      	b.n	8018db0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80190e0:	d024      	beq.n	801912c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 80190e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80190e4:	982b      	ldr	r0, [sp, #172]	@ 0xac
 80190e6:	3b01      	subs	r3, #1
 80190e8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 80190ea:	fb00 4003 	mla	r0, r0, r3, r4
 80190ee:	1400      	asrs	r0, r0, #16
 80190f0:	f53f ae7b 	bmi.w	8018dea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80190f4:	3901      	subs	r1, #1
 80190f6:	4288      	cmp	r0, r1
 80190f8:	f6bf ae77 	bge.w	8018dea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80190fc:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 80190fe:	fb01 5303 	mla	r3, r1, r3, r5
 8019102:	141b      	asrs	r3, r3, #16
 8019104:	f53f ae71 	bmi.w	8018dea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019108:	3a01      	subs	r2, #1
 801910a:	4293      	cmp	r3, r2
 801910c:	f6bf ae6d 	bge.w	8018dea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019110:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8019114:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 8019118:	f1bb 0f00 	cmp.w	fp, #0
 801911c:	dc70      	bgt.n	8019200 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801911e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019120:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019124:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019126:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801912a:	930c      	str	r3, [sp, #48]	@ 0x30
 801912c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801912e:	2b00      	cmp	r3, #0
 8019130:	f340 81be 	ble.w	80194b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 8019134:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019138:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801913a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801913e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019142:	eef0 6a62 	vmov.f32	s13, s5
 8019146:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801914a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801914e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019152:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8019156:	eef0 6a43 	vmov.f32	s13, s6
 801915a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801915e:	ee16 5a90 	vmov	r5, s13
 8019162:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019166:	ee61 7a27 	vmul.f32	s15, s2, s15
 801916a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801916e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019172:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019176:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801917a:	ee12 2a90 	vmov	r2, s5
 801917e:	eef0 2a47 	vmov.f32	s5, s14
 8019182:	fb92 f3f3 	sdiv	r3, r2, r3
 8019186:	ee13 2a10 	vmov	r2, s6
 801918a:	932b      	str	r3, [sp, #172]	@ 0xac
 801918c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801918e:	eeb0 3a67 	vmov.f32	s6, s15
 8019192:	fb92 f3f3 	sdiv	r3, r2, r3
 8019196:	932c      	str	r3, [sp, #176]	@ 0xb0
 8019198:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801919a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801919c:	3b01      	subs	r3, #1
 801919e:	9319      	str	r3, [sp, #100]	@ 0x64
 80191a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80191a2:	bf08      	it	eq
 80191a4:	4613      	moveq	r3, r2
 80191a6:	9309      	str	r3, [sp, #36]	@ 0x24
 80191a8:	e5f4      	b.n	8018d94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80191aa:	2900      	cmp	r1, #0
 80191ac:	f43f ae66 	beq.w	8018e7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 80191b0:	f818 0000 	ldrb.w	r0, [r8, r0]
 80191b4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80191b8:	900a      	str	r0, [sp, #40]	@ 0x28
 80191ba:	0e00      	lsrs	r0, r0, #24
 80191bc:	9013      	str	r0, [sp, #76]	@ 0x4c
 80191be:	e65d      	b.n	8018e7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 80191c0:	f113 0801 	adds.w	r8, r3, #1
 80191c4:	f53f af74 	bmi.w	80190b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80191c8:	4540      	cmp	r0, r8
 80191ca:	f6ff af71 	blt.w	80190b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80191ce:	f11c 0801 	adds.w	r8, ip, #1
 80191d2:	f53f af6d 	bmi.w	80190b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80191d6:	45c6      	cmp	lr, r8
 80191d8:	f6ff af6a 	blt.w	80190b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80191dc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 80191de:	b200      	sxth	r0, r0
 80191e0:	9302      	str	r3, [sp, #8]
 80191e2:	fa0f f38e 	sxth.w	r3, lr
 80191e6:	9000      	str	r0, [sp, #0]
 80191e8:	9301      	str	r3, [sp, #4]
 80191ea:	4633      	mov	r3, r6
 80191ec:	981d      	ldr	r0, [sp, #116]	@ 0x74
 80191ee:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80191f2:	e9cd c203 	strd	ip, r2, [sp, #12]
 80191f6:	4639      	mov	r1, r7
 80191f8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80191fa:	f7ff fc63 	bl	8018ac4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80191fe:	e757      	b.n	80190b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8019200:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8019202:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019206:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8019208:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801920c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801920e:	1427      	asrs	r7, r4, #16
 8019210:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019212:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019216:	142b      	asrs	r3, r5, #16
 8019218:	fb01 7303 	mla	r3, r1, r3, r7
 801921c:	18e7      	adds	r7, r4, r3
 801921e:	5ce3      	ldrb	r3, [r4, r3]
 8019220:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019224:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019228:	2a00      	cmp	r2, #0
 801922a:	f000 8137 	beq.w	801949c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801922e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8019232:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8019236:	9410      	str	r4, [sp, #64]	@ 0x40
 8019238:	0e24      	lsrs	r4, r4, #24
 801923a:	9417      	str	r4, [sp, #92]	@ 0x5c
 801923c:	b170      	cbz	r0, 801925c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801923e:	eb07 0e01 	add.w	lr, r7, r1
 8019242:	5c79      	ldrb	r1, [r7, r1]
 8019244:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019248:	910b      	str	r1, [sp, #44]	@ 0x2c
 801924a:	0e09      	lsrs	r1, r1, #24
 801924c:	9114      	str	r1, [sp, #80]	@ 0x50
 801924e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8019252:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019256:	9111      	str	r1, [sp, #68]	@ 0x44
 8019258:	0e09      	lsrs	r1, r1, #24
 801925a:	9118      	str	r1, [sp, #96]	@ 0x60
 801925c:	b292      	uxth	r2, r2
 801925e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8019260:	b280      	uxth	r0, r0
 8019262:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019264:	fb02 f800 	mul.w	r8, r2, r0
 8019268:	0112      	lsls	r2, r2, #4
 801926a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801926e:	eba2 0e08 	sub.w	lr, r2, r8
 8019272:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8019276:	b280      	uxth	r0, r0
 8019278:	fa1f fe8e 	uxth.w	lr, lr
 801927c:	1a12      	subs	r2, r2, r0
 801927e:	fb0e f101 	mul.w	r1, lr, r1
 8019282:	b292      	uxth	r2, r2
 8019284:	fb02 110c 	mla	r1, r2, ip, r1
 8019288:	fb00 1104 	mla	r1, r0, r4, r1
 801928c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801928e:	fb08 1104 	mla	r1, r8, r4, r1
 8019292:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019296:	2900      	cmp	r1, #0
 8019298:	f000 80f5 	beq.w	8019486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801929c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80192a0:	d019      	beq.n	80192d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 80192a2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80192a6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80192aa:	fb0c fa0a 	mul.w	sl, ip, sl
 80192ae:	fb0c fc03 	mul.w	ip, ip, r3
 80192b2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80192b6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80192ba:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80192be:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80192c2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80192c6:	4453      	add	r3, sl
 80192c8:	0a3f      	lsrs	r7, r7, #8
 80192ca:	0a1b      	lsrs	r3, r3, #8
 80192cc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80192d0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80192d4:	433b      	orrs	r3, r7
 80192d6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80192d8:	2cff      	cmp	r4, #255	@ 0xff
 80192da:	d020      	beq.n	801931e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 80192dc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80192de:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80192e2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80192e4:	4367      	muls	r7, r4
 80192e6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80192e8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80192ec:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80192f0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80192f2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80192f6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80192fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80192fe:	44bc      	add	ip, r7
 8019300:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019304:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019308:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801930c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019310:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019314:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019318:	ea4c 040a 	orr.w	r4, ip, sl
 801931c:	9410      	str	r4, [sp, #64]	@ 0x40
 801931e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019320:	2cff      	cmp	r4, #255	@ 0xff
 8019322:	d020      	beq.n	8019366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 8019324:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019326:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801932a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801932c:	4367      	muls	r7, r4
 801932e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019330:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019334:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019338:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801933a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801933e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019342:	fb04 fa0a 	mul.w	sl, r4, sl
 8019346:	44bc      	add	ip, r7
 8019348:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801934c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019350:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019354:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019358:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801935c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019360:	ea4c 040a 	orr.w	r4, ip, sl
 8019364:	940b      	str	r4, [sp, #44]	@ 0x2c
 8019366:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8019368:	2cff      	cmp	r4, #255	@ 0xff
 801936a:	d020      	beq.n	80193ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801936c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801936e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019372:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8019374:	4367      	muls	r7, r4
 8019376:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019378:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801937c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019380:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8019382:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019386:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801938a:	fb04 fa0a 	mul.w	sl, r4, sl
 801938e:	44bc      	add	ip, r7
 8019390:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019394:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019398:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801939c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80193a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80193a4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80193a8:	ea4c 040a 	orr.w	r4, ip, sl
 80193ac:	9411      	str	r4, [sp, #68]	@ 0x44
 80193ae:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80193b0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80193b4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80193b8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80193bc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80193be:	fb0e f707 	mul.w	r7, lr, r7
 80193c2:	fb02 770c 	mla	r7, r2, ip, r7
 80193c6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80193ca:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80193cc:	fb00 770c 	mla	r7, r0, ip, r7
 80193d0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80193d4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80193d6:	fb08 770c 	mla	r7, r8, ip, r7
 80193da:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 80193de:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80193e0:	fb0e fe0c 	mul.w	lr, lr, ip
 80193e4:	0a3f      	lsrs	r7, r7, #8
 80193e6:	fb02 e303 	mla	r3, r2, r3, lr
 80193ea:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80193ec:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80193f0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80193f4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80193f6:	fb00 330a 	mla	r3, r0, sl, r3
 80193fa:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 80193fe:	f8b9 0000 	ldrh.w	r0, [r9]
 8019402:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019406:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019408:	1202      	asrs	r2, r0, #8
 801940a:	434b      	muls	r3, r1
 801940c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019410:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019414:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8019418:	1c59      	adds	r1, r3, #1
 801941a:	ea47 070c 	orr.w	r7, r7, ip
 801941e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8019422:	0c3b      	lsrs	r3, r7, #16
 8019424:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019428:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801942c:	b2ff      	uxtb	r7, r7
 801942e:	fb13 f304 	smulbb	r3, r3, r4
 8019432:	b2c9      	uxtb	r1, r1
 8019434:	fb1c fc04 	smulbb	ip, ip, r4
 8019438:	fb02 3201 	mla	r2, r2, r1, r3
 801943c:	10c3      	asrs	r3, r0, #3
 801943e:	fb17 f704 	smulbb	r7, r7, r4
 8019442:	00c0      	lsls	r0, r0, #3
 8019444:	b292      	uxth	r2, r2
 8019446:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801944a:	b2c0      	uxtb	r0, r0
 801944c:	fb03 c301 	mla	r3, r3, r1, ip
 8019450:	f102 0c01 	add.w	ip, r2, #1
 8019454:	fb00 7001 	mla	r0, r0, r1, r7
 8019458:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801945c:	b280      	uxth	r0, r0
 801945e:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 8019462:	b29b      	uxth	r3, r3
 8019464:	1c42      	adds	r2, r0, #1
 8019466:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801946a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801946e:	ea42 020c 	orr.w	r2, r2, ip
 8019472:	f103 0c01 	add.w	ip, r3, #1
 8019476:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801947a:	095b      	lsrs	r3, r3, #5
 801947c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019480:	431a      	orrs	r2, r3
 8019482:	f8a9 2000 	strh.w	r2, [r9]
 8019486:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8019488:	f109 0902 	add.w	r9, r9, #2
 801948c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801948e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019492:	441a      	add	r2, r3
 8019494:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8019496:	9229      	str	r2, [sp, #164]	@ 0xa4
 8019498:	441d      	add	r5, r3
 801949a:	e63d      	b.n	8019118 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801949c:	2800      	cmp	r0, #0
 801949e:	f43f aedd 	beq.w	801925c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 80194a2:	5c79      	ldrb	r1, [r7, r1]
 80194a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80194a8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80194aa:	0e09      	lsrs	r1, r1, #24
 80194ac:	9114      	str	r1, [sp, #80]	@ 0x50
 80194ae:	e6d5      	b.n	801925c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 80194b0:	b01f      	add	sp, #124	@ 0x7c
 80194b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080194b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80194b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194ba:	b089      	sub	sp, #36	@ 0x24
 80194bc:	9101      	str	r1, [sp, #4]
 80194be:	9801      	ldr	r0, [sp, #4]
 80194c0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 80194c4:	8800      	ldrh	r0, [r0, #0]
 80194c6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 80194ca:	1206      	asrs	r6, r0, #8
 80194cc:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 80194d0:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 80194d4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80194d8:	9602      	str	r6, [sp, #8]
 80194da:	10c6      	asrs	r6, r0, #3
 80194dc:	00c0      	lsls	r0, r0, #3
 80194de:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80194e2:	b2c0      	uxtb	r0, r0
 80194e4:	9603      	str	r6, [sp, #12]
 80194e6:	9004      	str	r0, [sp, #16]
 80194e8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 80194ec:	fb07 100c 	mla	r0, r7, ip, r1
 80194f0:	2f00      	cmp	r7, #0
 80194f2:	eb02 0e00 	add.w	lr, r2, r0
 80194f6:	f2c0 810a 	blt.w	801970e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80194fa:	45b8      	cmp	r8, r7
 80194fc:	f340 8107 	ble.w	801970e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8019500:	2900      	cmp	r1, #0
 8019502:	f2c0 8102 	blt.w	801970a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8019506:	458c      	cmp	ip, r1
 8019508:	f340 80ff 	ble.w	801970a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801950c:	5c12      	ldrb	r2, [r2, r0]
 801950e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8019512:	1c4a      	adds	r2, r1, #1
 8019514:	f100 80fe 	bmi.w	8019714 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8019518:	4594      	cmp	ip, r2
 801951a:	f340 80fb 	ble.w	8019714 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801951e:	2d00      	cmp	r5, #0
 8019520:	f000 80fa 	beq.w	8019718 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8019524:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019528:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801952c:	3701      	adds	r7, #1
 801952e:	f100 80f7 	bmi.w	8019720 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8019532:	45b8      	cmp	r8, r7
 8019534:	f340 80f4 	ble.w	8019720 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8019538:	2c00      	cmp	r4, #0
 801953a:	f000 80f4 	beq.w	8019726 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801953e:	2900      	cmp	r1, #0
 8019540:	eb0e 020c 	add.w	r2, lr, ip
 8019544:	f2c0 80ea 	blt.w	801971c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8019548:	458c      	cmp	ip, r1
 801954a:	f340 80e7 	ble.w	801971c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801954e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8019552:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8019556:	3101      	adds	r1, #1
 8019558:	f100 80e8 	bmi.w	801972c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801955c:	458c      	cmp	ip, r1
 801955e:	f340 80e5 	ble.w	801972c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8019562:	2d00      	cmp	r5, #0
 8019564:	f000 80e4 	beq.w	8019730 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8019568:	7852      	ldrb	r2, [r2, #1]
 801956a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801956e:	0e0b      	lsrs	r3, r1, #24
 8019570:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 8019574:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8019578:	9300      	str	r3, [sp, #0]
 801957a:	b2a4      	uxth	r4, r4
 801957c:	b2ab      	uxth	r3, r5
 801957e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 8019582:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8019586:	fb03 f904 	mul.w	r9, r3, r4
 801958a:	011b      	lsls	r3, r3, #4
 801958c:	fb0a f505 	mul.w	r5, sl, r5
 8019590:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8019594:	eba3 0e09 	sub.w	lr, r3, r9
 8019598:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801959c:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 80195a0:	0a28      	lsrs	r0, r5, #8
 80195a2:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 80195a6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80195aa:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80195ae:	fb0a f303 	mul.w	r3, sl, r3
 80195b2:	fb08 f707 	mul.w	r7, r8, r7
 80195b6:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80195ba:	4405      	add	r5, r0
 80195bc:	fb08 fc0c 	mul.w	ip, r8, ip
 80195c0:	b2a4      	uxth	r4, r4
 80195c2:	0a2d      	lsrs	r5, r5, #8
 80195c4:	fa1f fe8e 	uxth.w	lr, lr
 80195c8:	1b12      	subs	r2, r2, r4
 80195ca:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 80195ce:	b292      	uxth	r2, r2
 80195d0:	9005      	str	r0, [sp, #20]
 80195d2:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 80195d6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80195da:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80195de:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80195e2:	0a1b      	lsrs	r3, r3, #8
 80195e4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80195e8:	9306      	str	r3, [sp, #24]
 80195ea:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 80195ee:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 80195f2:	4460      	add	r0, ip
 80195f4:	fb0b f303 	mul.w	r3, fp, r3
 80195f8:	fb0b f606 	mul.w	r6, fp, r6
 80195fc:	0a00      	lsrs	r0, r0, #8
 80195fe:	0a1d      	lsrs	r5, r3, #8
 8019600:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8019604:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8019608:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801960c:	441d      	add	r5, r3
 801960e:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8019612:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8019616:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801961a:	0a2d      	lsrs	r5, r5, #8
 801961c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8019620:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8019624:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8019628:	0a36      	lsrs	r6, r6, #8
 801962a:	0a1b      	lsrs	r3, r3, #8
 801962c:	fb05 f50e 	mul.w	r5, r5, lr
 8019630:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8019634:	9307      	str	r3, [sp, #28]
 8019636:	0e0b      	lsrs	r3, r1, #24
 8019638:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801963c:	fb0e f606 	mul.w	r6, lr, r6
 8019640:	435f      	muls	r7, r3
 8019642:	4359      	muls	r1, r3
 8019644:	9b05      	ldr	r3, [sp, #20]
 8019646:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801964a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801964e:	fb03 5502 	mla	r5, r3, r2, r5
 8019652:	9b06      	ldr	r3, [sp, #24]
 8019654:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019658:	fb0e fe0b 	mul.w	lr, lr, fp
 801965c:	44bc      	add	ip, r7
 801965e:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 8019662:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019666:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801966a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801966e:	0a09      	lsrs	r1, r1, #8
 8019670:	fb0c 5509 	mla	r5, ip, r9, r5
 8019674:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8019678:	fb00 5504 	mla	r5, r0, r4, r5
 801967c:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 8019680:	9b07      	ldr	r3, [sp, #28]
 8019682:	fb02 6000 	mla	r0, r2, r0, r6
 8019686:	0a2d      	lsrs	r5, r5, #8
 8019688:	fb02 e20a 	mla	r2, r2, sl, lr
 801968c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8019690:	fb09 0001 	mla	r0, r9, r1, r0
 8019694:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8019698:	fb04 0003 	mla	r0, r4, r3, r0
 801969c:	9b00      	ldr	r3, [sp, #0]
 801969e:	fb04 2408 	mla	r4, r4, r8, r2
 80196a2:	9a04      	ldr	r2, [sp, #16]
 80196a4:	0a00      	lsrs	r0, r0, #8
 80196a6:	fb09 4903 	mla	r9, r9, r3, r4
 80196aa:	9b02      	ldr	r3, [sp, #8]
 80196ac:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80196b0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80196b4:	4305      	orrs	r5, r0
 80196b6:	fa5f f989 	uxtb.w	r9, r9
 80196ba:	fb03 f109 	mul.w	r1, r3, r9
 80196be:	9b03      	ldr	r3, [sp, #12]
 80196c0:	fb03 f309 	mul.w	r3, r3, r9
 80196c4:	fb02 f909 	mul.w	r9, r2, r9
 80196c8:	1c4a      	adds	r2, r1, #1
 80196ca:	1c58      	adds	r0, r3, #1
 80196cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80196d0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80196d4:	0c2a      	lsrs	r2, r5, #16
 80196d6:	0a2b      	lsrs	r3, r5, #8
 80196d8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80196dc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80196e0:	0212      	lsls	r2, r2, #8
 80196e2:	00db      	lsls	r3, r3, #3
 80196e4:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 80196e8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80196ec:	4313      	orrs	r3, r2
 80196ee:	f109 0201 	add.w	r2, r9, #1
 80196f2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80196f6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80196fa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80196fe:	431d      	orrs	r5, r3
 8019700:	9b01      	ldr	r3, [sp, #4]
 8019702:	801d      	strh	r5, [r3, #0]
 8019704:	b009      	add	sp, #36	@ 0x24
 8019706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801970a:	2000      	movs	r0, #0
 801970c:	e701      	b.n	8019512 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801970e:	2600      	movs	r6, #0
 8019710:	4630      	mov	r0, r6
 8019712:	e70b      	b.n	801952c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8019714:	2600      	movs	r6, #0
 8019716:	e709      	b.n	801952c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8019718:	462e      	mov	r6, r5
 801971a:	e707      	b.n	801952c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801971c:	2700      	movs	r7, #0
 801971e:	e71a      	b.n	8019556 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8019720:	2100      	movs	r1, #0
 8019722:	460f      	mov	r7, r1
 8019724:	e723      	b.n	801956e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8019726:	4621      	mov	r1, r4
 8019728:	4627      	mov	r7, r4
 801972a:	e720      	b.n	801956e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801972c:	2100      	movs	r1, #0
 801972e:	e71e      	b.n	801956e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8019730:	4629      	mov	r1, r5
 8019732:	e71c      	b.n	801956e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08019734 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019738:	b09b      	sub	sp, #108	@ 0x6c
 801973a:	9218      	str	r2, [sp, #96]	@ 0x60
 801973c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801973e:	9019      	str	r0, [sp, #100]	@ 0x64
 8019740:	9116      	str	r1, [sp, #88]	@ 0x58
 8019742:	6850      	ldr	r0, [r2, #4]
 8019744:	9307      	str	r3, [sp, #28]
 8019746:	6812      	ldr	r2, [r2, #0]
 8019748:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801974a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801974e:	fb00 1303 	mla	r3, r0, r3, r1
 8019752:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019756:	930a      	str	r3, [sp, #40]	@ 0x28
 8019758:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801975a:	681b      	ldr	r3, [r3, #0]
 801975c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801975e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8019760:	685e      	ldr	r6, [r3, #4]
 8019762:	3604      	adds	r6, #4
 8019764:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8019766:	2b00      	cmp	r3, #0
 8019768:	dc03      	bgt.n	8019772 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801976a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801976c:	2b00      	cmp	r3, #0
 801976e:	f340 8373 	ble.w	8019e58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8019772:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8019774:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019778:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801977c:	1e48      	subs	r0, r1, #1
 801977e:	1e57      	subs	r7, r2, #1
 8019780:	9b07      	ldr	r3, [sp, #28]
 8019782:	2b00      	cmp	r3, #0
 8019784:	f340 818f 	ble.w	8019aa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8019788:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801978a:	142b      	asrs	r3, r5, #16
 801978c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019790:	d406      	bmi.n	80197a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019792:	4584      	cmp	ip, r0
 8019794:	da04      	bge.n	80197a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019796:	2b00      	cmp	r3, #0
 8019798:	db02      	blt.n	80197a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801979a:	42bb      	cmp	r3, r7
 801979c:	f2c0 8184 	blt.w	8019aa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80197a0:	f11c 0c01 	adds.w	ip, ip, #1
 80197a4:	f100 8172 	bmi.w	8019a8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80197a8:	4561      	cmp	r1, ip
 80197aa:	f2c0 816f 	blt.w	8019a8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80197ae:	3301      	adds	r3, #1
 80197b0:	f100 816c 	bmi.w	8019a8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80197b4:	429a      	cmp	r2, r3
 80197b6:	f2c0 8169 	blt.w	8019a8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80197ba:	9b07      	ldr	r3, [sp, #28]
 80197bc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80197be:	9317      	str	r3, [sp, #92]	@ 0x5c
 80197c0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80197c2:	2b00      	cmp	r3, #0
 80197c4:	f340 818e 	ble.w	8019ae4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80197c8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80197ca:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80197ce:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80197d2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80197d6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80197d8:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80197dc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80197de:	141b      	asrs	r3, r3, #16
 80197e0:	f100 81d1 	bmi.w	8019b86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80197e4:	f101 38ff 	add.w	r8, r1, #4294967295
 80197e8:	4543      	cmp	r3, r8
 80197ea:	f280 81cc 	bge.w	8019b86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80197ee:	f1bc 0f00 	cmp.w	ip, #0
 80197f2:	f2c0 81c8 	blt.w	8019b86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80197f6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80197fa:	45c4      	cmp	ip, r8
 80197fc:	f280 81c3 	bge.w	8019b86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019800:	b209      	sxth	r1, r1
 8019802:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8019804:	fb0c 3301 	mla	r3, ip, r1, r3
 8019808:	eb04 0803 	add.w	r8, r4, r3
 801980c:	5ce3      	ldrb	r3, [r4, r3]
 801980e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019812:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8019816:	2a00      	cmp	r2, #0
 8019818:	f000 81aa 	beq.w	8019b70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801981c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8019820:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8019824:	940b      	str	r4, [sp, #44]	@ 0x2c
 8019826:	0e24      	lsrs	r4, r4, #24
 8019828:	9412      	str	r4, [sp, #72]	@ 0x48
 801982a:	b178      	cbz	r0, 801984c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801982c:	eb08 0c01 	add.w	ip, r8, r1
 8019830:	f818 1001 	ldrb.w	r1, [r8, r1]
 8019834:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019838:	9108      	str	r1, [sp, #32]
 801983a:	0e09      	lsrs	r1, r1, #24
 801983c:	9110      	str	r1, [sp, #64]	@ 0x40
 801983e:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8019842:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019846:	910c      	str	r1, [sp, #48]	@ 0x30
 8019848:	0e09      	lsrs	r1, r1, #24
 801984a:	9113      	str	r1, [sp, #76]	@ 0x4c
 801984c:	b292      	uxth	r2, r2
 801984e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8019850:	b280      	uxth	r0, r0
 8019852:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8019854:	fb02 f900 	mul.w	r9, r2, r0
 8019858:	0112      	lsls	r2, r2, #4
 801985a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801985e:	eba2 0809 	sub.w	r8, r2, r9
 8019862:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8019866:	b280      	uxth	r0, r0
 8019868:	fa1f f888 	uxth.w	r8, r8
 801986c:	1a12      	subs	r2, r2, r0
 801986e:	fb08 f101 	mul.w	r1, r8, r1
 8019872:	b292      	uxth	r2, r2
 8019874:	fb02 110e 	mla	r1, r2, lr, r1
 8019878:	fb00 1104 	mla	r1, r0, r4, r1
 801987c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801987e:	fb09 1104 	mla	r1, r9, r4, r1
 8019882:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019886:	2900      	cmp	r1, #0
 8019888:	f000 80f5 	beq.w	8019a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801988c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8019890:	d01b      	beq.n	80198ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8019892:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8019896:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801989a:	fb0e fa0a 	mul.w	sl, lr, sl
 801989e:	fb0e fe03 	mul.w	lr, lr, r3
 80198a2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80198a6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80198aa:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80198ae:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80198b2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80198b6:	4453      	add	r3, sl
 80198b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80198bc:	0a1b      	lsrs	r3, r3, #8
 80198be:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80198c2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80198c6:	ea43 030c 	orr.w	r3, r3, ip
 80198ca:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80198cc:	2cff      	cmp	r4, #255	@ 0xff
 80198ce:	d021      	beq.n	8019914 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80198d0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80198d2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80198d6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80198d8:	fb04 fb0b 	mul.w	fp, r4, fp
 80198dc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80198de:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80198e2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80198e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80198e8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80198ec:	fb04 fa0a 	mul.w	sl, r4, sl
 80198f0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80198f4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80198f8:	44de      	add	lr, fp
 80198fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80198fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019902:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019906:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801990a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801990e:	ea4e 040a 	orr.w	r4, lr, sl
 8019912:	940b      	str	r4, [sp, #44]	@ 0x2c
 8019914:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8019916:	2cff      	cmp	r4, #255	@ 0xff
 8019918:	d021      	beq.n	801995e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801991a:	9c08      	ldr	r4, [sp, #32]
 801991c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8019920:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8019922:	fb04 fb0b 	mul.w	fp, r4, fp
 8019926:	9c08      	ldr	r4, [sp, #32]
 8019928:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801992c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801992e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019932:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8019936:	fb04 fa0a 	mul.w	sl, r4, sl
 801993a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801993e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8019942:	44de      	add	lr, fp
 8019944:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019948:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801994c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019950:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019954:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019958:	ea4e 040a 	orr.w	r4, lr, sl
 801995c:	9408      	str	r4, [sp, #32]
 801995e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8019960:	2cff      	cmp	r4, #255	@ 0xff
 8019962:	d021      	beq.n	80199a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8019964:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8019966:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801996a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801996c:	fb04 fb0b 	mul.w	fp, r4, fp
 8019970:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8019972:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019976:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8019978:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801997c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8019980:	fb04 fa0a 	mul.w	sl, r4, sl
 8019984:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019988:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801998c:	44de      	add	lr, fp
 801998e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019992:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019996:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801999a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801999e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80199a2:	ea4e 040a 	orr.w	r4, lr, sl
 80199a6:	940c      	str	r4, [sp, #48]	@ 0x30
 80199a8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80199aa:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 80199ae:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80199b2:	43c9      	mvns	r1, r1
 80199b4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80199b8:	9c08      	ldr	r4, [sp, #32]
 80199ba:	fb08 fc0c 	mul.w	ip, r8, ip
 80199be:	fb02 cc0e 	mla	ip, r2, lr, ip
 80199c2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80199c6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80199c8:	fb00 cc0e 	mla	ip, r0, lr, ip
 80199cc:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80199d0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80199d2:	fb09 cc0e 	mla	ip, r9, lr, ip
 80199d6:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 80199da:	fb08 f80e 	mul.w	r8, r8, lr
 80199de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80199e2:	fa5f fe81 	uxtb.w	lr, r1
 80199e6:	fb02 8303 	mla	r3, r2, r3, r8
 80199ea:	9a08      	ldr	r2, [sp, #32]
 80199ec:	f8b7 8000 	ldrh.w	r8, [r7]
 80199f0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80199f4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80199f8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80199fa:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80199fe:	fb00 330a 	mla	r3, r0, sl, r3
 8019a02:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 8019a06:	ea4f 2228 	mov.w	r2, r8, asr #8
 8019a0a:	fb09 3900 	mla	r9, r9, r0, r3
 8019a0e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8019a12:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019a16:	b2c9      	uxtb	r1, r1
 8019a18:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019a1c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8019a20:	fb02 f20e 	mul.w	r2, r2, lr
 8019a24:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8019a28:	fb00 f00e 	mul.w	r0, r0, lr
 8019a2c:	1c53      	adds	r3, r2, #1
 8019a2e:	fb01 f10e 	mul.w	r1, r1, lr
 8019a32:	ea4c 0c09 	orr.w	ip, ip, r9
 8019a36:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8019a3a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8019a3e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019a42:	4a60      	ldr	r2, [pc, #384]	@ (8019bc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8019a44:	b2db      	uxtb	r3, r3
 8019a46:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8019a4a:	1c43      	adds	r3, r0, #1
 8019a4c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019a50:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8019a54:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019a58:	00db      	lsls	r3, r3, #3
 8019a5a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019a5e:	4313      	orrs	r3, r2
 8019a60:	1c4a      	adds	r2, r1, #1
 8019a62:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019a66:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8019a6a:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8019a6e:	ea4c 0c03 	orr.w	ip, ip, r3
 8019a72:	f8a7 c000 	strh.w	ip, [r7]
 8019a76:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8019a78:	3702      	adds	r7, #2
 8019a7a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8019a7c:	441a      	add	r2, r3
 8019a7e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019a80:	441d      	add	r5, r3
 8019a82:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8019a84:	9225      	str	r2, [sp, #148]	@ 0x94
 8019a86:	3b01      	subs	r3, #1
 8019a88:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019a8a:	e699      	b.n	80197c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019a8c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8019a8e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8019a90:	441c      	add	r4, r3
 8019a92:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019a94:	441d      	add	r5, r3
 8019a96:	9b07      	ldr	r3, [sp, #28]
 8019a98:	9425      	str	r4, [sp, #148]	@ 0x94
 8019a9a:	3b01      	subs	r3, #1
 8019a9c:	9307      	str	r3, [sp, #28]
 8019a9e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019aa0:	3302      	adds	r3, #2
 8019aa2:	930a      	str	r3, [sp, #40]	@ 0x28
 8019aa4:	e66c      	b.n	8019780 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019aa6:	d024      	beq.n	8019af2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 8019aa8:	9b07      	ldr	r3, [sp, #28]
 8019aaa:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8019aac:	3b01      	subs	r3, #1
 8019aae:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8019ab0:	fb00 4003 	mla	r0, r0, r3, r4
 8019ab4:	1400      	asrs	r0, r0, #16
 8019ab6:	f53f ae80 	bmi.w	80197ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019aba:	3901      	subs	r1, #1
 8019abc:	4288      	cmp	r0, r1
 8019abe:	f6bf ae7c 	bge.w	80197ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019ac2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8019ac4:	fb01 5303 	mla	r3, r1, r3, r5
 8019ac8:	141b      	asrs	r3, r3, #16
 8019aca:	f53f ae76 	bmi.w	80197ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019ace:	3a01      	subs	r2, #1
 8019ad0:	4293      	cmp	r3, r2
 8019ad2:	f6bf ae72 	bge.w	80197ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019ad6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019ada:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8019ade:	f1bb 0f00 	cmp.w	fp, #0
 8019ae2:	dc71      	bgt.n	8019bc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8019ae4:	9b07      	ldr	r3, [sp, #28]
 8019ae6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019aea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019aec:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019af0:	930a      	str	r3, [sp, #40]	@ 0x28
 8019af2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8019af4:	2b00      	cmp	r3, #0
 8019af6:	f340 81af 	ble.w	8019e58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8019afa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019afe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019b00:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b04:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b08:	eef0 6a62 	vmov.f32	s13, s5
 8019b0c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019b10:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b18:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8019b1c:	eef0 6a43 	vmov.f32	s13, s6
 8019b20:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b24:	ee16 5a90 	vmov	r5, s13
 8019b28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b2c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b30:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b34:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b38:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b3c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b40:	ee12 2a90 	vmov	r2, s5
 8019b44:	eef0 2a47 	vmov.f32	s5, s14
 8019b48:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b4c:	ee13 2a10 	vmov	r2, s6
 8019b50:	9327      	str	r3, [sp, #156]	@ 0x9c
 8019b52:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019b54:	eeb0 3a67 	vmov.f32	s6, s15
 8019b58:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b5c:	9328      	str	r3, [sp, #160]	@ 0xa0
 8019b5e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8019b60:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8019b62:	3b01      	subs	r3, #1
 8019b64:	9316      	str	r3, [sp, #88]	@ 0x58
 8019b66:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019b68:	bf08      	it	eq
 8019b6a:	4613      	moveq	r3, r2
 8019b6c:	9307      	str	r3, [sp, #28]
 8019b6e:	e5f9      	b.n	8019764 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019b70:	2800      	cmp	r0, #0
 8019b72:	f43f ae6b 	beq.w	801984c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8019b76:	f818 1001 	ldrb.w	r1, [r8, r1]
 8019b7a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019b7e:	9108      	str	r1, [sp, #32]
 8019b80:	0e09      	lsrs	r1, r1, #24
 8019b82:	9110      	str	r1, [sp, #64]	@ 0x40
 8019b84:	e662      	b.n	801984c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8019b86:	f113 0801 	adds.w	r8, r3, #1
 8019b8a:	f53f af74 	bmi.w	8019a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019b8e:	4541      	cmp	r1, r8
 8019b90:	f6ff af71 	blt.w	8019a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019b94:	f11c 0801 	adds.w	r8, ip, #1
 8019b98:	f53f af6d 	bmi.w	8019a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019b9c:	45c6      	cmp	lr, r8
 8019b9e:	f6ff af6a 	blt.w	8019a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019ba2:	b209      	sxth	r1, r1
 8019ba4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8019ba8:	fa0f f38e 	sxth.w	r3, lr
 8019bac:	9100      	str	r1, [sp, #0]
 8019bae:	4639      	mov	r1, r7
 8019bb0:	9301      	str	r3, [sp, #4]
 8019bb2:	4633      	mov	r3, r6
 8019bb4:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8019bb8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019bba:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8019bbc:	f7ff fc7b 	bl	80194b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8019bc0:	e759      	b.n	8019a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019bc2:	bf00      	nop
 8019bc4:	fffff800 	.word	0xfffff800
 8019bc8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019bca:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019bce:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8019bd0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019bd4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8019bd6:	1427      	asrs	r7, r4, #16
 8019bd8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8019bda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019bde:	142b      	asrs	r3, r5, #16
 8019be0:	fb01 7303 	mla	r3, r1, r3, r7
 8019be4:	18e7      	adds	r7, r4, r3
 8019be6:	5ce3      	ldrb	r3, [r4, r3]
 8019be8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019bec:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019bf0:	2a00      	cmp	r2, #0
 8019bf2:	f000 8127 	beq.w	8019e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8019bf6:	f897 e001 	ldrb.w	lr, [r7, #1]
 8019bfa:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8019bfe:	940d      	str	r4, [sp, #52]	@ 0x34
 8019c00:	0e24      	lsrs	r4, r4, #24
 8019c02:	9414      	str	r4, [sp, #80]	@ 0x50
 8019c04:	b170      	cbz	r0, 8019c24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8019c06:	eb07 0e01 	add.w	lr, r7, r1
 8019c0a:	5c79      	ldrb	r1, [r7, r1]
 8019c0c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019c10:	9109      	str	r1, [sp, #36]	@ 0x24
 8019c12:	0e09      	lsrs	r1, r1, #24
 8019c14:	9111      	str	r1, [sp, #68]	@ 0x44
 8019c16:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8019c1a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019c1e:	910e      	str	r1, [sp, #56]	@ 0x38
 8019c20:	0e09      	lsrs	r1, r1, #24
 8019c22:	9115      	str	r1, [sp, #84]	@ 0x54
 8019c24:	b292      	uxth	r2, r2
 8019c26:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019c28:	b280      	uxth	r0, r0
 8019c2a:	fb02 f800 	mul.w	r8, r2, r0
 8019c2e:	0112      	lsls	r2, r2, #4
 8019c30:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019c34:	eba2 0e08 	sub.w	lr, r2, r8
 8019c38:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8019c3c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019c3e:	b280      	uxth	r0, r0
 8019c40:	fa1f fe8e 	uxth.w	lr, lr
 8019c44:	1a09      	subs	r1, r1, r0
 8019c46:	fb0e f202 	mul.w	r2, lr, r2
 8019c4a:	b289      	uxth	r1, r1
 8019c4c:	fb01 220c 	mla	r2, r1, ip, r2
 8019c50:	fb00 2204 	mla	r2, r0, r4, r2
 8019c54:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019c56:	fb08 2204 	mla	r2, r8, r4, r2
 8019c5a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8019c5e:	2a00      	cmp	r2, #0
 8019c60:	f000 80e5 	beq.w	8019e2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8019c64:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8019c68:	d019      	beq.n	8019c9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8019c6a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8019c6e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8019c72:	fb0c fa0a 	mul.w	sl, ip, sl
 8019c76:	fb0c fc03 	mul.w	ip, ip, r3
 8019c7a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019c7e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8019c82:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8019c86:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8019c8a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019c8e:	4453      	add	r3, sl
 8019c90:	0a3f      	lsrs	r7, r7, #8
 8019c92:	0a1b      	lsrs	r3, r3, #8
 8019c94:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8019c98:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8019c9c:	433b      	orrs	r3, r7
 8019c9e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019ca0:	2cff      	cmp	r4, #255	@ 0xff
 8019ca2:	d020      	beq.n	8019ce6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8019ca4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019ca6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019caa:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019cac:	4367      	muls	r7, r4
 8019cae:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019cb0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019cb4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019cb8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019cba:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019cbe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019cc2:	fb04 fa0a 	mul.w	sl, r4, sl
 8019cc6:	44bc      	add	ip, r7
 8019cc8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019ccc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019cd0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019cd4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019cd8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019cdc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019ce0:	ea4c 040a 	orr.w	r4, ip, sl
 8019ce4:	940d      	str	r4, [sp, #52]	@ 0x34
 8019ce6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019ce8:	2cff      	cmp	r4, #255	@ 0xff
 8019cea:	d020      	beq.n	8019d2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8019cec:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8019cee:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019cf2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019cf4:	4367      	muls	r7, r4
 8019cf6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8019cf8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019cfc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019d00:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019d02:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019d06:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019d0a:	fb04 fa0a 	mul.w	sl, r4, sl
 8019d0e:	44bc      	add	ip, r7
 8019d10:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019d14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019d18:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019d1c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019d20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019d24:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019d28:	ea4c 040a 	orr.w	r4, ip, sl
 8019d2c:	9409      	str	r4, [sp, #36]	@ 0x24
 8019d2e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019d30:	2cff      	cmp	r4, #255	@ 0xff
 8019d32:	d020      	beq.n	8019d76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8019d34:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019d36:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019d3a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019d3c:	4367      	muls	r7, r4
 8019d3e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019d40:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019d44:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019d48:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019d4a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019d4e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019d52:	fb04 fa0a 	mul.w	sl, r4, sl
 8019d56:	44bc      	add	ip, r7
 8019d58:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019d5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019d60:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019d64:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019d68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019d6c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019d70:	ea4c 040a 	orr.w	r4, ip, sl
 8019d74:	940e      	str	r4, [sp, #56]	@ 0x38
 8019d76:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019d78:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8019d7c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8019d80:	43d2      	mvns	r2, r2
 8019d82:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019d86:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8019d88:	b2d2      	uxtb	r2, r2
 8019d8a:	fb0e f707 	mul.w	r7, lr, r7
 8019d8e:	fb01 770c 	mla	r7, r1, ip, r7
 8019d92:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8019d96:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019d98:	fb00 770c 	mla	r7, r0, ip, r7
 8019d9c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8019da0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019da2:	fb08 770c 	mla	r7, r8, ip, r7
 8019da6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8019daa:	fb0e fe0c 	mul.w	lr, lr, ip
 8019dae:	0a3f      	lsrs	r7, r7, #8
 8019db0:	fb01 e303 	mla	r3, r1, r3, lr
 8019db4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019db6:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8019dba:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8019dbe:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8019dc0:	fb00 330a 	mla	r3, r0, sl, r3
 8019dc4:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8019dc8:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019dcc:	f8b9 3000 	ldrh.w	r3, [r9]
 8019dd0:	1218      	asrs	r0, r3, #8
 8019dd2:	10d9      	asrs	r1, r3, #3
 8019dd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019dd8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019ddc:	00db      	lsls	r3, r3, #3
 8019dde:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019de2:	4350      	muls	r0, r2
 8019de4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8019de8:	b2db      	uxtb	r3, r3
 8019dea:	4351      	muls	r1, r2
 8019dec:	ea47 070c 	orr.w	r7, r7, ip
 8019df0:	4353      	muls	r3, r2
 8019df2:	1c42      	adds	r2, r0, #1
 8019df4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019df8:	0c3a      	lsrs	r2, r7, #16
 8019dfa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019dfe:	4a18      	ldr	r2, [pc, #96]	@ (8019e60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8019e00:	b2c0      	uxtb	r0, r0
 8019e02:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8019e06:	1c4a      	adds	r2, r1, #1
 8019e08:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019e0c:	0a3a      	lsrs	r2, r7, #8
 8019e0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019e12:	00c9      	lsls	r1, r1, #3
 8019e14:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019e18:	4301      	orrs	r1, r0
 8019e1a:	1c58      	adds	r0, r3, #1
 8019e1c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019e20:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8019e24:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8019e28:	4308      	orrs	r0, r1
 8019e2a:	f8a9 0000 	strh.w	r0, [r9]
 8019e2e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8019e30:	f109 0902 	add.w	r9, r9, #2
 8019e34:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8019e36:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019e3a:	441a      	add	r2, r3
 8019e3c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019e3e:	9225      	str	r2, [sp, #148]	@ 0x94
 8019e40:	441d      	add	r5, r3
 8019e42:	e64c      	b.n	8019ade <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8019e44:	2800      	cmp	r0, #0
 8019e46:	f43f aeed 	beq.w	8019c24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8019e4a:	5c79      	ldrb	r1, [r7, r1]
 8019e4c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019e50:	9109      	str	r1, [sp, #36]	@ 0x24
 8019e52:	0e09      	lsrs	r1, r1, #24
 8019e54:	9111      	str	r1, [sp, #68]	@ 0x44
 8019e56:	e6e5      	b.n	8019c24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8019e58:	b01b      	add	sp, #108	@ 0x6c
 8019e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e5e:	bf00      	nop
 8019e60:	fffff800 	.word	0xfffff800

08019e64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8019e64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e68:	b085      	sub	sp, #20
 8019e6a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8019e6e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8019e72:	2800      	cmp	r0, #0
 8019e74:	9103      	str	r1, [sp, #12]
 8019e76:	fb00 7406 	mla	r4, r0, r6, r7
 8019e7a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8019e7e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8019e82:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8019e86:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8019e8a:	eb03 0904 	add.w	r9, r3, r4
 8019e8e:	9501      	str	r5, [sp, #4]
 8019e90:	f2c0 8150 	blt.w	801a134 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8019e94:	4583      	cmp	fp, r0
 8019e96:	f340 814d 	ble.w	801a134 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8019e9a:	2f00      	cmp	r7, #0
 8019e9c:	f2c0 8146 	blt.w	801a12c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8019ea0:	42be      	cmp	r6, r7
 8019ea2:	f340 8143 	ble.w	801a12c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8019ea6:	f813 c004 	ldrb.w	ip, [r3, r4]
 8019eaa:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8019eae:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8019eb2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019eb6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8019eba:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019ebe:	4355      	muls	r5, r2
 8019ec0:	fb0c f203 	mul.w	r2, ip, r3
 8019ec4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8019ec8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8019ecc:	441d      	add	r5, r3
 8019ece:	f102 0320 	add.w	r3, r2, #32
 8019ed2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019ed6:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8019eda:	0a1b      	lsrs	r3, r3, #8
 8019edc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019ee0:	431c      	orrs	r4, r3
 8019ee2:	1c7b      	adds	r3, r7, #1
 8019ee4:	f100 812b 	bmi.w	801a13e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8019ee8:	429e      	cmp	r6, r3
 8019eea:	f340 8128 	ble.w	801a13e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8019eee:	2900      	cmp	r1, #0
 8019ef0:	f000 8128 	beq.w	801a144 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8019ef4:	9a01      	ldr	r2, [sp, #4]
 8019ef6:	f899 3001 	ldrb.w	r3, [r9, #1]
 8019efa:	8855      	ldrh	r5, [r2, #2]
 8019efc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8019f00:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8019f04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019f08:	fb08 f802 	mul.w	r8, r8, r2
 8019f0c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8019f10:	435d      	muls	r5, r3
 8019f12:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8019f16:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019f1a:	44d0      	add	r8, sl
 8019f1c:	f105 0a20 	add.w	sl, r5, #32
 8019f20:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8019f24:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8019f28:	0a2d      	lsrs	r5, r5, #8
 8019f2a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019f2e:	432a      	orrs	r2, r5
 8019f30:	3001      	adds	r0, #1
 8019f32:	f100 810d 	bmi.w	801a150 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8019f36:	4583      	cmp	fp, r0
 8019f38:	f340 810a 	ble.w	801a150 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8019f3c:	f1be 0f00 	cmp.w	lr, #0
 8019f40:	f000 810b 	beq.w	801a15a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8019f44:	2f00      	cmp	r7, #0
 8019f46:	f2c0 8100 	blt.w	801a14a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8019f4a:	42be      	cmp	r6, r7
 8019f4c:	f340 80fd 	ble.w	801a14a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8019f50:	9801      	ldr	r0, [sp, #4]
 8019f52:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8019f56:	f819 5006 	ldrb.w	r5, [r9, r6]
 8019f5a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8019f5e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019f62:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8019f66:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8019f6a:	fb0a fa00 	mul.w	sl, sl, r0
 8019f6e:	fb05 f808 	mul.w	r8, r5, r8
 8019f72:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8019f76:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8019f7a:	4482      	add	sl, r0
 8019f7c:	f108 0020 	add.w	r0, r8, #32
 8019f80:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019f84:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8019f88:	0a00      	lsrs	r0, r0, #8
 8019f8a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019f8e:	ea4b 0b00 	orr.w	fp, fp, r0
 8019f92:	3701      	adds	r7, #1
 8019f94:	f100 80e6 	bmi.w	801a164 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8019f98:	42be      	cmp	r6, r7
 8019f9a:	f340 80e3 	ble.w	801a164 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8019f9e:	2900      	cmp	r1, #0
 8019fa0:	f000 80e3 	beq.w	801a16a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8019fa4:	3601      	adds	r6, #1
 8019fa6:	9801      	ldr	r0, [sp, #4]
 8019fa8:	f819 7006 	ldrb.w	r7, [r9, r6]
 8019fac:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8019fb0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8019fb4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8019fb8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019fbc:	fb09 f906 	mul.w	r9, r9, r6
 8019fc0:	fb07 f800 	mul.w	r8, r7, r0
 8019fc4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8019fc8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8019fcc:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8019fd0:	44d1      	add	r9, sl
 8019fd2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8019fd6:	f108 0020 	add.w	r0, r8, #32
 8019fda:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019fde:	0a00      	lsrs	r0, r0, #8
 8019fe0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019fe4:	4330      	orrs	r0, r6
 8019fe6:	b28e      	uxth	r6, r1
 8019fe8:	fa1f f98e 	uxth.w	r9, lr
 8019fec:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8019ff0:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8019ff4:	fb06 f809 	mul.w	r8, r6, r9
 8019ff8:	0136      	lsls	r6, r6, #4
 8019ffa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019ffe:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801a002:	9601      	str	r6, [sp, #4]
 801a004:	ea4a 0404 	orr.w	r4, sl, r4
 801a008:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801a00c:	fa1f f689 	uxth.w	r6, r9
 801a010:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a014:	fb11 f90e 	smulbb	r9, r1, lr
 801a018:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a01c:	9602      	str	r6, [sp, #8]
 801a01e:	4626      	mov	r6, r4
 801a020:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801a024:	f1ce 0410 	rsb	r4, lr, #16
 801a028:	ea4a 0202 	orr.w	r2, sl, r2
 801a02c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801a030:	1a64      	subs	r4, r4, r1
 801a032:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801a036:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a03a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a03e:	434a      	muls	r2, r1
 801a040:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801a044:	ea4a 0000 	orr.w	r0, sl, r0
 801a048:	9903      	ldr	r1, [sp, #12]
 801a04a:	fb04 2406 	mla	r4, r4, r6, r2
 801a04e:	9e02      	ldr	r6, [sp, #8]
 801a050:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801a054:	fb09 4200 	mla	r2, r9, r0, r4
 801a058:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801a05c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801a060:	8808      	ldrh	r0, [r1, #0]
 801a062:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801a066:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801a06a:	ea44 0b0b 	orr.w	fp, r4, fp
 801a06e:	9c01      	ldr	r4, [sp, #4]
 801a070:	b289      	uxth	r1, r1
 801a072:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801a076:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801a07a:	1ba4      	subs	r4, r4, r6
 801a07c:	9e01      	ldr	r6, [sp, #4]
 801a07e:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801a082:	eba6 0608 	sub.w	r6, r6, r8
 801a086:	b2a4      	uxth	r4, r4
 801a088:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801a08c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a090:	b2b6      	uxth	r6, r6
 801a092:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a096:	4373      	muls	r3, r6
 801a098:	ea42 0e0e 	orr.w	lr, r2, lr
 801a09c:	fb0c 3304 	mla	r3, ip, r4, r3
 801a0a0:	9c02      	ldr	r4, [sp, #8]
 801a0a2:	fa1f f28e 	uxth.w	r2, lr
 801a0a6:	fb04 3505 	mla	r5, r4, r5, r3
 801a0aa:	10d4      	asrs	r4, r2, #3
 801a0ac:	fb08 5707 	mla	r7, r8, r7, r5
 801a0b0:	1215      	asrs	r5, r2, #8
 801a0b2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801a0b6:	00d2      	lsls	r2, r2, #3
 801a0b8:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a0bc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a0c0:	b2d2      	uxtb	r2, r2
 801a0c2:	434f      	muls	r7, r1
 801a0c4:	1c7b      	adds	r3, r7, #1
 801a0c6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a0ca:	1203      	asrs	r3, r0, #8
 801a0cc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801a0d0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801a0d4:	b2ff      	uxtb	r7, r7
 801a0d6:	fb13 f307 	smulbb	r3, r3, r7
 801a0da:	fb05 3501 	mla	r5, r5, r1, r3
 801a0de:	10c3      	asrs	r3, r0, #3
 801a0e0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801a0e4:	b2ad      	uxth	r5, r5
 801a0e6:	fb13 f307 	smulbb	r3, r3, r7
 801a0ea:	fb04 3401 	mla	r4, r4, r1, r3
 801a0ee:	00c3      	lsls	r3, r0, #3
 801a0f0:	b2db      	uxtb	r3, r3
 801a0f2:	b2a4      	uxth	r4, r4
 801a0f4:	fb13 f307 	smulbb	r3, r3, r7
 801a0f8:	fb02 3101 	mla	r1, r2, r1, r3
 801a0fc:	1c6b      	adds	r3, r5, #1
 801a0fe:	1c62      	adds	r2, r4, #1
 801a100:	b289      	uxth	r1, r1
 801a102:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a106:	1c4b      	adds	r3, r1, #1
 801a108:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801a10c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a110:	9a03      	ldr	r2, [sp, #12]
 801a112:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a116:	0964      	lsrs	r4, r4, #5
 801a118:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a11c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801a120:	432b      	orrs	r3, r5
 801a122:	4323      	orrs	r3, r4
 801a124:	8013      	strh	r3, [r2, #0]
 801a126:	b005      	add	sp, #20
 801a128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a12c:	f04f 0c00 	mov.w	ip, #0
 801a130:	4664      	mov	r4, ip
 801a132:	e6d6      	b.n	8019ee2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801a134:	2300      	movs	r3, #0
 801a136:	469c      	mov	ip, r3
 801a138:	461a      	mov	r2, r3
 801a13a:	461c      	mov	r4, r3
 801a13c:	e6f8      	b.n	8019f30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801a13e:	2300      	movs	r3, #0
 801a140:	461a      	mov	r2, r3
 801a142:	e6f5      	b.n	8019f30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801a144:	460b      	mov	r3, r1
 801a146:	460a      	mov	r2, r1
 801a148:	e6f2      	b.n	8019f30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801a14a:	2500      	movs	r5, #0
 801a14c:	46ab      	mov	fp, r5
 801a14e:	e720      	b.n	8019f92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801a150:	2700      	movs	r7, #0
 801a152:	463d      	mov	r5, r7
 801a154:	4638      	mov	r0, r7
 801a156:	46bb      	mov	fp, r7
 801a158:	e745      	b.n	8019fe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801a15a:	4677      	mov	r7, lr
 801a15c:	4675      	mov	r5, lr
 801a15e:	4670      	mov	r0, lr
 801a160:	46f3      	mov	fp, lr
 801a162:	e740      	b.n	8019fe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801a164:	2700      	movs	r7, #0
 801a166:	4638      	mov	r0, r7
 801a168:	e73d      	b.n	8019fe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801a16a:	460f      	mov	r7, r1
 801a16c:	4608      	mov	r0, r1
 801a16e:	e73a      	b.n	8019fe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801a170 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a174:	b097      	sub	sp, #92	@ 0x5c
 801a176:	9214      	str	r2, [sp, #80]	@ 0x50
 801a178:	9308      	str	r3, [sp, #32]
 801a17a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801a17c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801a180:	9015      	str	r0, [sp, #84]	@ 0x54
 801a182:	9312      	str	r3, [sp, #72]	@ 0x48
 801a184:	6850      	ldr	r0, [r2, #4]
 801a186:	9111      	str	r1, [sp, #68]	@ 0x44
 801a188:	6812      	ldr	r2, [r2, #0]
 801a18a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801a18e:	fb00 1303 	mla	r3, r0, r3, r1
 801a192:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a196:	9309      	str	r3, [sp, #36]	@ 0x24
 801a198:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a19a:	681b      	ldr	r3, [r3, #0]
 801a19c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a19e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a1a0:	685b      	ldr	r3, [r3, #4]
 801a1a2:	930c      	str	r3, [sp, #48]	@ 0x30
 801a1a4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801a1a8:	930a      	str	r3, [sp, #40]	@ 0x28
 801a1aa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a1ac:	2b00      	cmp	r3, #0
 801a1ae:	dc03      	bgt.n	801a1b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a1b0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801a1b2:	2b00      	cmp	r3, #0
 801a1b4:	f340 83cd 	ble.w	801a952 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801a1b8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a1ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a1be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a1c2:	1e48      	subs	r0, r1, #1
 801a1c4:	1e55      	subs	r5, r2, #1
 801a1c6:	9b08      	ldr	r3, [sp, #32]
 801a1c8:	2b00      	cmp	r3, #0
 801a1ca:	f340 81a5 	ble.w	801a518 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801a1ce:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801a1d0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a1d2:	1436      	asrs	r6, r6, #16
 801a1d4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a1d8:	d406      	bmi.n	801a1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a1da:	4286      	cmp	r6, r0
 801a1dc:	da04      	bge.n	801a1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a1de:	2b00      	cmp	r3, #0
 801a1e0:	db02      	blt.n	801a1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a1e2:	42ab      	cmp	r3, r5
 801a1e4:	f2c0 8199 	blt.w	801a51a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801a1e8:	3601      	adds	r6, #1
 801a1ea:	f100 8186 	bmi.w	801a4fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a1ee:	42b1      	cmp	r1, r6
 801a1f0:	f2c0 8183 	blt.w	801a4fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a1f4:	3301      	adds	r3, #1
 801a1f6:	f100 8180 	bmi.w	801a4fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a1fa:	429a      	cmp	r2, r3
 801a1fc:	f2c0 817d 	blt.w	801a4fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a200:	9b08      	ldr	r3, [sp, #32]
 801a202:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801a206:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801a208:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a20a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a20c:	2b00      	cmp	r3, #0
 801a20e:	f340 81a6 	ble.w	801a55e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801a212:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a214:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801a216:	1418      	asrs	r0, r3, #16
 801a218:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a21a:	142d      	asrs	r5, r5, #16
 801a21c:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801a220:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a222:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801a226:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a228:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801a22c:	f100 81fa 	bmi.w	801a624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a230:	f102 3eff 	add.w	lr, r2, #4294967295
 801a234:	4575      	cmp	r5, lr
 801a236:	f280 81f5 	bge.w	801a624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a23a:	2800      	cmp	r0, #0
 801a23c:	f2c0 81f2 	blt.w	801a624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a240:	f103 3eff 	add.w	lr, r3, #4294967295
 801a244:	4570      	cmp	r0, lr
 801a246:	f280 81ed 	bge.w	801a624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a24a:	b212      	sxth	r2, r2
 801a24c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a24e:	fa1f fe81 	uxth.w	lr, r1
 801a252:	fb00 5002 	mla	r0, r0, r2, r5
 801a256:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801a25a:	eb03 0a00 	add.w	sl, r3, r0
 801a25e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801a262:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801a266:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a26a:	b29b      	uxth	r3, r3
 801a26c:	f1bc 0f00 	cmp.w	ip, #0
 801a270:	f000 81bb 	beq.w	801a5ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a274:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801a278:	eb0a 0b02 	add.w	fp, sl, r2
 801a27c:	fa1f fa8c 	uxth.w	sl, ip
 801a280:	940d      	str	r4, [sp, #52]	@ 0x34
 801a282:	fb0a fe0e 	mul.w	lr, sl, lr
 801a286:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801a28a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801a28e:	eba5 050e 	sub.w	r5, r5, lr
 801a292:	940e      	str	r4, [sp, #56]	@ 0x38
 801a294:	fa1f fa8a 	uxth.w	sl, sl
 801a298:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a29a:	b2ad      	uxth	r5, r5
 801a29c:	eba3 030a 	sub.w	r3, r3, sl
 801a2a0:	fb08 f505 	mul.w	r5, r8, r5
 801a2a4:	b29b      	uxth	r3, r3
 801a2a6:	fb09 5303 	mla	r3, r9, r3, r5
 801a2aa:	fb0a 3304 	mla	r3, sl, r4, r3
 801a2ae:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801a2b0:	fb0e 3304 	mla	r3, lr, r4, r3
 801a2b4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a2b8:	2b00      	cmp	r3, #0
 801a2ba:	f000 8111 	beq.w	801a4e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a2be:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a2c0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801a2c4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801a2c8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801a2cc:	f000 8192 	beq.w	801a5f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801a2d0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801a2d4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801a2d8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a2dc:	fb0a fe0e 	mul.w	lr, sl, lr
 801a2e0:	fb09 f000 	mul.w	r0, r9, r0
 801a2e4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801a2e8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801a2ec:	f100 0b20 	add.w	fp, r0, #32
 801a2f0:	44ce      	add	lr, r9
 801a2f2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801a2f6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801a2fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a2fe:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801a302:	ea4e 0909 	orr.w	r9, lr, r9
 801a306:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801a30a:	8868      	ldrh	r0, [r5, #2]
 801a30c:	d019      	beq.n	801a342 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a30e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801a312:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801a316:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a31a:	fb0a fe0e 	mul.w	lr, sl, lr
 801a31e:	fb08 f800 	mul.w	r8, r8, r0
 801a322:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801a326:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801a32a:	f108 0b20 	add.w	fp, r8, #32
 801a32e:	4486      	add	lr, r0
 801a330:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801a334:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801a338:	0a00      	lsrs	r0, r0, #8
 801a33a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a33e:	ea4e 0000 	orr.w	r0, lr, r0
 801a342:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801a346:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801a34a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801a34e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a352:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801a356:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a35a:	ea4e 0909 	orr.w	r9, lr, r9
 801a35e:	ea4a 0000 	orr.w	r0, sl, r0
 801a362:	f1bc 0f00 	cmp.w	ip, #0
 801a366:	f000 8147 	beq.w	801a5f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801a36a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801a36e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a370:	3a01      	subs	r2, #1
 801a372:	2cff      	cmp	r4, #255	@ 0xff
 801a374:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801a378:	f102 0202 	add.w	r2, r2, #2
 801a37c:	eb05 0e02 	add.w	lr, r5, r2
 801a380:	5aaa      	ldrh	r2, [r5, r2]
 801a382:	d018      	beq.n	801a3b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a384:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801a388:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a38c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a390:	fb04 fa02 	mul.w	sl, r4, r2
 801a394:	fb08 f805 	mul.w	r8, r8, r5
 801a398:	f10a 0520 	add.w	r5, sl, #32
 801a39c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801a3a0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a3a4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801a3a8:	4442      	add	r2, r8
 801a3aa:	0a2d      	lsrs	r5, r5, #8
 801a3ac:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801a3b0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a3b4:	432a      	orrs	r2, r5
 801a3b6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801a3b8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801a3bc:	2cff      	cmp	r4, #255	@ 0xff
 801a3be:	d01a      	beq.n	801a3f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801a3c0:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801a3c4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a3c8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a3cc:	fb04 fa05 	mul.w	sl, r4, r5
 801a3d0:	fb08 f80e 	mul.w	r8, r8, lr
 801a3d4:	f10a 0e20 	add.w	lr, sl, #32
 801a3d8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801a3dc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a3e0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801a3e4:	4445      	add	r5, r8
 801a3e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a3ea:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801a3ee:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801a3f2:	ea45 050e 	orr.w	r5, r5, lr
 801a3f6:	fb1c fe01 	smulbb	lr, ip, r1
 801a3fa:	f1cc 0810 	rsb	r8, ip, #16
 801a3fe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801a402:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a406:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801a40a:	eba8 0801 	sub.w	r8, r8, r1
 801a40e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801a412:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a416:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801a41a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a41e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801a422:	ea4a 0202 	orr.w	r2, sl, r2
 801a426:	4341      	muls	r1, r0
 801a428:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801a42c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a430:	fb09 1108 	mla	r1, r9, r8, r1
 801a434:	ea4b 0505 	orr.w	r5, fp, r5
 801a438:	fb0c 1102 	mla	r1, ip, r2, r1
 801a43c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801a440:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801a444:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801a448:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a44c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a450:	ea42 0e0e 	orr.w	lr, r2, lr
 801a454:	fa1f f28e 	uxth.w	r2, lr
 801a458:	2bff      	cmp	r3, #255	@ 0xff
 801a45a:	d103      	bne.n	801a464 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a45c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801a45e:	29ff      	cmp	r1, #255	@ 0xff
 801a460:	f000 80de 	beq.w	801a620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801a464:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801a466:	1215      	asrs	r5, r2, #8
 801a468:	8838      	ldrh	r0, [r7, #0]
 801a46a:	434b      	muls	r3, r1
 801a46c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a470:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a472:	f103 0c01 	add.w	ip, r3, #1
 801a476:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801a47a:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801a47e:	fa5f fc83 	uxtb.w	ip, r3
 801a482:	1203      	asrs	r3, r0, #8
 801a484:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801a488:	fb13 f30c 	smulbb	r3, r3, ip
 801a48c:	fb05 3501 	mla	r5, r5, r1, r3
 801a490:	10c3      	asrs	r3, r0, #3
 801a492:	10d1      	asrs	r1, r2, #3
 801a494:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801a498:	00d2      	lsls	r2, r2, #3
 801a49a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a49e:	b2ad      	uxth	r5, r5
 801a4a0:	fb13 f30c 	smulbb	r3, r3, ip
 801a4a4:	b2d2      	uxtb	r2, r2
 801a4a6:	fb01 3104 	mla	r1, r1, r4, r3
 801a4aa:	00c3      	lsls	r3, r0, #3
 801a4ac:	b2db      	uxtb	r3, r3
 801a4ae:	b289      	uxth	r1, r1
 801a4b0:	fb13 f30c 	smulbb	r3, r3, ip
 801a4b4:	fb02 3304 	mla	r3, r2, r4, r3
 801a4b8:	b29a      	uxth	r2, r3
 801a4ba:	1c6b      	adds	r3, r5, #1
 801a4bc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a4c0:	1c53      	adds	r3, r2, #1
 801a4c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a4c6:	1c4a      	adds	r2, r1, #1
 801a4c8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a4cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a4d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a4d4:	0949      	lsrs	r1, r1, #5
 801a4d6:	432b      	orrs	r3, r5
 801a4d8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a4dc:	430b      	orrs	r3, r1
 801a4de:	803b      	strh	r3, [r7, #0]
 801a4e0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a4e2:	3702      	adds	r7, #2
 801a4e4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a4e6:	4413      	add	r3, r2
 801a4e8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a4ea:	9321      	str	r3, [sp, #132]	@ 0x84
 801a4ec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a4ee:	441a      	add	r2, r3
 801a4f0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a4f2:	3b01      	subs	r3, #1
 801a4f4:	9222      	str	r2, [sp, #136]	@ 0x88
 801a4f6:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a4f8:	e687      	b.n	801a20a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a4fa:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a4fc:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801a4fe:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801a500:	4433      	add	r3, r6
 801a502:	9321      	str	r3, [sp, #132]	@ 0x84
 801a504:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a506:	441c      	add	r4, r3
 801a508:	9b08      	ldr	r3, [sp, #32]
 801a50a:	3b01      	subs	r3, #1
 801a50c:	9422      	str	r4, [sp, #136]	@ 0x88
 801a50e:	9308      	str	r3, [sp, #32]
 801a510:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a512:	3302      	adds	r3, #2
 801a514:	9309      	str	r3, [sp, #36]	@ 0x24
 801a516:	e656      	b.n	801a1c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801a518:	d028      	beq.n	801a56c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801a51a:	9b08      	ldr	r3, [sp, #32]
 801a51c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801a51e:	3b01      	subs	r3, #1
 801a520:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801a522:	fb00 5003 	mla	r0, r0, r3, r5
 801a526:	1400      	asrs	r0, r0, #16
 801a528:	f53f ae6a 	bmi.w	801a200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a52c:	3901      	subs	r1, #1
 801a52e:	4288      	cmp	r0, r1
 801a530:	f6bf ae66 	bge.w	801a200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a534:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801a536:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801a538:	fb01 0303 	mla	r3, r1, r3, r0
 801a53c:	141b      	asrs	r3, r3, #16
 801a53e:	f53f ae5f 	bmi.w	801a200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a542:	3a01      	subs	r2, #1
 801a544:	4293      	cmp	r3, r2
 801a546:	f6bf ae5b 	bge.w	801a200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a54a:	9b08      	ldr	r3, [sp, #32]
 801a54c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801a550:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801a554:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a556:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a558:	2b00      	cmp	r3, #0
 801a55a:	f300 8082 	bgt.w	801a662 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801a55e:	9b08      	ldr	r3, [sp, #32]
 801a560:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a564:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a566:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a56a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a56c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a56e:	2b00      	cmp	r3, #0
 801a570:	f340 81ef 	ble.w	801a952 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801a574:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a578:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a57a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a57e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a582:	eef0 6a62 	vmov.f32	s13, s5
 801a586:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a58a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a58e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a592:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801a596:	eef0 6a43 	vmov.f32	s13, s6
 801a59a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a59e:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801a5a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a5a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a5aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a5ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a5b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a5b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a5ba:	ee12 2a90 	vmov	r2, s5
 801a5be:	eef0 2a47 	vmov.f32	s5, s14
 801a5c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a5c6:	ee13 2a10 	vmov	r2, s6
 801a5ca:	9323      	str	r3, [sp, #140]	@ 0x8c
 801a5cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a5ce:	eeb0 3a67 	vmov.f32	s6, s15
 801a5d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a5d6:	9324      	str	r3, [sp, #144]	@ 0x90
 801a5d8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a5da:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a5dc:	3b01      	subs	r3, #1
 801a5de:	9311      	str	r3, [sp, #68]	@ 0x44
 801a5e0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a5e2:	bf08      	it	eq
 801a5e4:	4613      	moveq	r3, r2
 801a5e6:	9308      	str	r3, [sp, #32]
 801a5e8:	e5df      	b.n	801a1aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a5ea:	fb08 f505 	mul.w	r5, r8, r5
 801a5ee:	fb09 5303 	mla	r3, r9, r3, r5
 801a5f2:	e65f      	b.n	801a2b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801a5f4:	4681      	mov	r9, r0
 801a5f6:	e686      	b.n	801a306 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a5f8:	f1c1 0210 	rsb	r2, r1, #16
 801a5fc:	4341      	muls	r1, r0
 801a5fe:	fb09 1902 	mla	r9, r9, r2, r1
 801a602:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a606:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801a60a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a60e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a612:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801a616:	ea42 0909 	orr.w	r9, r2, r9
 801a61a:	fa1f f289 	uxth.w	r2, r9
 801a61e:	e71b      	b.n	801a458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801a620:	803a      	strh	r2, [r7, #0]
 801a622:	e75d      	b.n	801a4e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a624:	f115 0e01 	adds.w	lr, r5, #1
 801a628:	f53f af5a 	bmi.w	801a4e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a62c:	4572      	cmp	r2, lr
 801a62e:	f6ff af57 	blt.w	801a4e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a632:	f110 0e01 	adds.w	lr, r0, #1
 801a636:	f53f af53 	bmi.w	801a4e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a63a:	4573      	cmp	r3, lr
 801a63c:	f6ff af50 	blt.w	801a4e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a640:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a642:	b21b      	sxth	r3, r3
 801a644:	b212      	sxth	r2, r2
 801a646:	9502      	str	r5, [sp, #8]
 801a648:	9301      	str	r3, [sp, #4]
 801a64a:	9200      	str	r2, [sp, #0]
 801a64c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801a650:	e9cd c405 	strd	ip, r4, [sp, #20]
 801a654:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801a658:	4639      	mov	r1, r7
 801a65a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801a65c:	f7ff fc02 	bl	8019e64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801a660:	e73e      	b.n	801a4e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a662:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a664:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a668:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a66a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801a66e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a670:	fa1f fc82 	uxth.w	ip, r2
 801a674:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a678:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a67a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801a67e:	141f      	asrs	r7, r3, #16
 801a680:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a682:	141b      	asrs	r3, r3, #16
 801a684:	fb01 3707 	mla	r7, r1, r7, r3
 801a688:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a68a:	eb03 0a07 	add.w	sl, r3, r7
 801a68e:	f813 9007 	ldrb.w	r9, [r3, r7]
 801a692:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801a696:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a69a:	b29b      	uxth	r3, r3
 801a69c:	2d00      	cmp	r5, #0
 801a69e:	f000 813d 	beq.w	801a91c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801a6a2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801a6a6:	eb0a 0b01 	add.w	fp, sl, r1
 801a6aa:	fa1f fa85 	uxth.w	sl, r5
 801a6ae:	940f      	str	r4, [sp, #60]	@ 0x3c
 801a6b0:	fb0a fc0c 	mul.w	ip, sl, ip
 801a6b4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801a6b8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801a6bc:	eba0 000c 	sub.w	r0, r0, ip
 801a6c0:	9410      	str	r4, [sp, #64]	@ 0x40
 801a6c2:	fa1f fa8a 	uxth.w	sl, sl
 801a6c6:	b280      	uxth	r0, r0
 801a6c8:	eba3 030a 	sub.w	r3, r3, sl
 801a6cc:	fb08 f000 	mul.w	r0, r8, r0
 801a6d0:	b29b      	uxth	r3, r3
 801a6d2:	fb09 0303 	mla	r3, r9, r3, r0
 801a6d6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801a6d8:	fb0a 3300 	mla	r3, sl, r0, r3
 801a6dc:	fb0c 3304 	mla	r3, ip, r4, r3
 801a6e0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a6e4:	2b00      	cmp	r3, #0
 801a6e6:	f000 810b 	beq.w	801a900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801a6ea:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801a6ec:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801a6f0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a6f2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801a6f6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801a6fa:	f000 8114 	beq.w	801a926 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801a6fe:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801a702:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801a706:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a70a:	fb0a fc0c 	mul.w	ip, sl, ip
 801a70e:	fb09 f707 	mul.w	r7, r9, r7
 801a712:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801a716:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801a71a:	f107 0b20 	add.w	fp, r7, #32
 801a71e:	44cc      	add	ip, r9
 801a720:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801a724:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a728:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a72c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801a730:	ea4c 0909 	orr.w	r9, ip, r9
 801a734:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801a738:	8847      	ldrh	r7, [r0, #2]
 801a73a:	d019      	beq.n	801a770 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801a73c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801a740:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801a744:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a748:	fb0a fc0c 	mul.w	ip, sl, ip
 801a74c:	fb08 f807 	mul.w	r8, r8, r7
 801a750:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801a754:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801a758:	f108 0b20 	add.w	fp, r8, #32
 801a75c:	44bc      	add	ip, r7
 801a75e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801a762:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a766:	0a3f      	lsrs	r7, r7, #8
 801a768:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a76c:	ea4c 0707 	orr.w	r7, ip, r7
 801a770:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801a774:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801a778:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801a77c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a780:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a784:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a788:	ea4c 0909 	orr.w	r9, ip, r9
 801a78c:	ea4a 0707 	orr.w	r7, sl, r7
 801a790:	2d00      	cmp	r5, #0
 801a792:	f000 80ca 	beq.w	801a92a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801a796:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801a79a:	3901      	subs	r1, #1
 801a79c:	0049      	lsls	r1, r1, #1
 801a79e:	3102      	adds	r1, #2
 801a7a0:	eb00 0c01 	add.w	ip, r0, r1
 801a7a4:	5a41      	ldrh	r1, [r0, r1]
 801a7a6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801a7a8:	28ff      	cmp	r0, #255	@ 0xff
 801a7aa:	d019      	beq.n	801a7e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801a7ac:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801a7b0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801a7b2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a7b6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a7ba:	fb04 fa01 	mul.w	sl, r4, r1
 801a7be:	fb08 f800 	mul.w	r8, r8, r0
 801a7c2:	f10a 0020 	add.w	r0, sl, #32
 801a7c6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801a7ca:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a7ce:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801a7d2:	4441      	add	r1, r8
 801a7d4:	0a00      	lsrs	r0, r0, #8
 801a7d6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801a7da:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a7de:	4301      	orrs	r1, r0
 801a7e0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801a7e2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801a7e6:	2cff      	cmp	r4, #255	@ 0xff
 801a7e8:	d01a      	beq.n	801a820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801a7ea:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801a7ee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a7f2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a7f6:	fb04 fa00 	mul.w	sl, r4, r0
 801a7fa:	fb08 f80c 	mul.w	r8, r8, ip
 801a7fe:	f10a 0c20 	add.w	ip, sl, #32
 801a802:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801a806:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a80a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801a80e:	4440      	add	r0, r8
 801a810:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a814:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801a818:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801a81c:	ea40 000c 	orr.w	r0, r0, ip
 801a820:	fb15 fc02 	smulbb	ip, r5, r2
 801a824:	f1c5 0810 	rsb	r8, r5, #16
 801a828:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a82c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a830:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801a834:	eba8 0802 	sub.w	r8, r8, r2
 801a838:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801a83c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a840:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801a844:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a848:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801a84c:	ea4a 0101 	orr.w	r1, sl, r1
 801a850:	437a      	muls	r2, r7
 801a852:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801a856:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a85a:	fb09 2208 	mla	r2, r9, r8, r2
 801a85e:	ea4b 0000 	orr.w	r0, fp, r0
 801a862:	fb05 2201 	mla	r2, r5, r1, r2
 801a866:	fb0c 2200 	mla	r2, ip, r0, r2
 801a86a:	0d57      	lsrs	r7, r2, #21
 801a86c:	0952      	lsrs	r2, r2, #5
 801a86e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a872:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a876:	433a      	orrs	r2, r7
 801a878:	2bff      	cmp	r3, #255	@ 0xff
 801a87a:	b292      	uxth	r2, r2
 801a87c:	d102      	bne.n	801a884 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801a87e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801a880:	29ff      	cmp	r1, #255	@ 0xff
 801a882:	d063      	beq.n	801a94c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801a884:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801a886:	1215      	asrs	r5, r2, #8
 801a888:	f8be 1000 	ldrh.w	r1, [lr]
 801a88c:	4343      	muls	r3, r0
 801a88e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a890:	10cf      	asrs	r7, r1, #3
 801a892:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a896:	1c58      	adds	r0, r3, #1
 801a898:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a89c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801a8a0:	1208      	asrs	r0, r1, #8
 801a8a2:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801a8a6:	00c9      	lsls	r1, r1, #3
 801a8a8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a8ac:	b2db      	uxtb	r3, r3
 801a8ae:	b2c9      	uxtb	r1, r1
 801a8b0:	fb10 f003 	smulbb	r0, r0, r3
 801a8b4:	fb11 f103 	smulbb	r1, r1, r3
 801a8b8:	fb05 0504 	mla	r5, r5, r4, r0
 801a8bc:	10d0      	asrs	r0, r2, #3
 801a8be:	fb17 f703 	smulbb	r7, r7, r3
 801a8c2:	00d2      	lsls	r2, r2, #3
 801a8c4:	b2ad      	uxth	r5, r5
 801a8c6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801a8ca:	b2d2      	uxtb	r2, r2
 801a8cc:	fb00 7004 	mla	r0, r0, r4, r7
 801a8d0:	1c6b      	adds	r3, r5, #1
 801a8d2:	fb02 1204 	mla	r2, r2, r4, r1
 801a8d6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a8da:	b292      	uxth	r2, r2
 801a8dc:	b280      	uxth	r0, r0
 801a8de:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a8e2:	1c57      	adds	r7, r2, #1
 801a8e4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a8e8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a8ec:	433d      	orrs	r5, r7
 801a8ee:	1c47      	adds	r7, r0, #1
 801a8f0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801a8f4:	097f      	lsrs	r7, r7, #5
 801a8f6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a8fa:	433d      	orrs	r5, r7
 801a8fc:	f8ae 5000 	strh.w	r5, [lr]
 801a900:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a902:	f10e 0e02 	add.w	lr, lr, #2
 801a906:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a908:	4413      	add	r3, r2
 801a90a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a90c:	9321      	str	r3, [sp, #132]	@ 0x84
 801a90e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a910:	441a      	add	r2, r3
 801a912:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a914:	3b01      	subs	r3, #1
 801a916:	9222      	str	r2, [sp, #136]	@ 0x88
 801a918:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a91a:	e61c      	b.n	801a556 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a91c:	fb08 f000 	mul.w	r0, r8, r0
 801a920:	fb09 0303 	mla	r3, r9, r3, r0
 801a924:	e6dc      	b.n	801a6e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801a926:	46b9      	mov	r9, r7
 801a928:	e704      	b.n	801a734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801a92a:	f1c2 0110 	rsb	r1, r2, #16
 801a92e:	437a      	muls	r2, r7
 801a930:	fb09 2901 	mla	r9, r9, r1, r2
 801a934:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a938:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801a93c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801a940:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a944:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a948:	4302      	orrs	r2, r0
 801a94a:	e795      	b.n	801a878 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801a94c:	f8ae 2000 	strh.w	r2, [lr]
 801a950:	e7d6      	b.n	801a900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801a952:	b017      	add	sp, #92	@ 0x5c
 801a954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a958 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a95c:	b085      	sub	sp, #20
 801a95e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801a962:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801a966:	2800      	cmp	r0, #0
 801a968:	9103      	str	r1, [sp, #12]
 801a96a:	fb00 7406 	mla	r4, r0, r6, r7
 801a96e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801a972:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801a976:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801a97a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801a97e:	eb02 0904 	add.w	r9, r2, r4
 801a982:	9501      	str	r5, [sp, #4]
 801a984:	f2c0 8141 	blt.w	801ac0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801a988:	4583      	cmp	fp, r0
 801a98a:	f340 813e 	ble.w	801ac0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801a98e:	2f00      	cmp	r7, #0
 801a990:	f2c0 8137 	blt.w	801ac02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801a994:	42be      	cmp	r6, r7
 801a996:	f340 8134 	ble.w	801ac02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801a99a:	f812 c004 	ldrb.w	ip, [r2, r4]
 801a99e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801a9a2:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801a9a6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801a9aa:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801a9ae:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a9b2:	4355      	muls	r5, r2
 801a9b4:	fb0c f203 	mul.w	r2, ip, r3
 801a9b8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801a9bc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801a9c0:	441d      	add	r5, r3
 801a9c2:	f102 0320 	add.w	r3, r2, #32
 801a9c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a9ca:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801a9ce:	0a1b      	lsrs	r3, r3, #8
 801a9d0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a9d4:	431c      	orrs	r4, r3
 801a9d6:	1c7b      	adds	r3, r7, #1
 801a9d8:	f100 811c 	bmi.w	801ac14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801a9dc:	429e      	cmp	r6, r3
 801a9de:	f340 8119 	ble.w	801ac14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801a9e2:	2900      	cmp	r1, #0
 801a9e4:	f000 8119 	beq.w	801ac1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801a9e8:	9a01      	ldr	r2, [sp, #4]
 801a9ea:	f899 3001 	ldrb.w	r3, [r9, #1]
 801a9ee:	8855      	ldrh	r5, [r2, #2]
 801a9f0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801a9f4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801a9f8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a9fc:	fb08 f802 	mul.w	r8, r8, r2
 801aa00:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801aa04:	435d      	muls	r5, r3
 801aa06:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801aa0a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801aa0e:	44d0      	add	r8, sl
 801aa10:	f105 0a20 	add.w	sl, r5, #32
 801aa14:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801aa18:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801aa1c:	0a2d      	lsrs	r5, r5, #8
 801aa1e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801aa22:	432a      	orrs	r2, r5
 801aa24:	3001      	adds	r0, #1
 801aa26:	f100 80fe 	bmi.w	801ac26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801aa2a:	4583      	cmp	fp, r0
 801aa2c:	f340 80fb 	ble.w	801ac26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801aa30:	f1be 0f00 	cmp.w	lr, #0
 801aa34:	f000 80fc 	beq.w	801ac30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801aa38:	2f00      	cmp	r7, #0
 801aa3a:	f2c0 80f1 	blt.w	801ac20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801aa3e:	42be      	cmp	r6, r7
 801aa40:	f340 80ee 	ble.w	801ac20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801aa44:	9801      	ldr	r0, [sp, #4]
 801aa46:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801aa4a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801aa4e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801aa52:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801aa56:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801aa5a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801aa5e:	fb0a fa00 	mul.w	sl, sl, r0
 801aa62:	fb05 f808 	mul.w	r8, r5, r8
 801aa66:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801aa6a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801aa6e:	4482      	add	sl, r0
 801aa70:	f108 0020 	add.w	r0, r8, #32
 801aa74:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801aa78:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801aa7c:	0a00      	lsrs	r0, r0, #8
 801aa7e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801aa82:	ea4b 0b00 	orr.w	fp, fp, r0
 801aa86:	3701      	adds	r7, #1
 801aa88:	f100 80d7 	bmi.w	801ac3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801aa8c:	42be      	cmp	r6, r7
 801aa8e:	f340 80d4 	ble.w	801ac3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801aa92:	2900      	cmp	r1, #0
 801aa94:	f000 80d4 	beq.w	801ac40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801aa98:	3601      	adds	r6, #1
 801aa9a:	9801      	ldr	r0, [sp, #4]
 801aa9c:	f819 7006 	ldrb.w	r7, [r9, r6]
 801aaa0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801aaa4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801aaa8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801aaac:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801aab0:	fb09 f906 	mul.w	r9, r9, r6
 801aab4:	fb07 f800 	mul.w	r8, r7, r0
 801aab8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801aabc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801aac0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801aac4:	44d1      	add	r9, sl
 801aac6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801aaca:	f108 0020 	add.w	r0, r8, #32
 801aace:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801aad2:	0a00      	lsrs	r0, r0, #8
 801aad4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801aad8:	4330      	orrs	r0, r6
 801aada:	b28e      	uxth	r6, r1
 801aadc:	fa1f f98e 	uxth.w	r9, lr
 801aae0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801aae4:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801aae8:	fb06 f809 	mul.w	r8, r6, r9
 801aaec:	0136      	lsls	r6, r6, #4
 801aaee:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801aaf2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801aaf6:	9601      	str	r6, [sp, #4]
 801aaf8:	ea4a 0404 	orr.w	r4, sl, r4
 801aafc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ab00:	fa1f f689 	uxth.w	r6, r9
 801ab04:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ab08:	fb11 f90e 	smulbb	r9, r1, lr
 801ab0c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ab10:	9602      	str	r6, [sp, #8]
 801ab12:	4626      	mov	r6, r4
 801ab14:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ab18:	f1ce 0410 	rsb	r4, lr, #16
 801ab1c:	ea4a 0202 	orr.w	r2, sl, r2
 801ab20:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ab24:	1a64      	subs	r4, r4, r1
 801ab26:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ab2a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ab2e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ab32:	434a      	muls	r2, r1
 801ab34:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801ab38:	ea4a 0000 	orr.w	r0, sl, r0
 801ab3c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801ab40:	fb04 2406 	mla	r4, r4, r6, r2
 801ab44:	9903      	ldr	r1, [sp, #12]
 801ab46:	fb09 4200 	mla	r2, r9, r0, r4
 801ab4a:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801ab4e:	9801      	ldr	r0, [sp, #4]
 801ab50:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801ab54:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ab58:	8809      	ldrh	r1, [r1, #0]
 801ab5a:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801ab5e:	ea44 0b0b 	orr.w	fp, r4, fp
 801ab62:	9c02      	ldr	r4, [sp, #8]
 801ab64:	1b00      	subs	r0, r0, r4
 801ab66:	9c01      	ldr	r4, [sp, #4]
 801ab68:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801ab6c:	eba4 0608 	sub.w	r6, r4, r8
 801ab70:	b280      	uxth	r0, r0
 801ab72:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ab76:	b2b6      	uxth	r6, r6
 801ab78:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ab7c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ab80:	4373      	muls	r3, r6
 801ab82:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ab86:	fb0c 3300 	mla	r3, ip, r0, r3
 801ab8a:	9802      	ldr	r0, [sp, #8]
 801ab8c:	ea42 0e0e 	orr.w	lr, r2, lr
 801ab90:	fb00 3505 	mla	r5, r0, r5, r3
 801ab94:	120b      	asrs	r3, r1, #8
 801ab96:	10c8      	asrs	r0, r1, #3
 801ab98:	fb08 5707 	mla	r7, r8, r7, r5
 801ab9c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801aba0:	00c9      	lsls	r1, r1, #3
 801aba2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801aba6:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801abaa:	fa1f f28e 	uxth.w	r2, lr
 801abae:	b2c9      	uxtb	r1, r1
 801abb0:	b2ff      	uxtb	r7, r7
 801abb2:	437b      	muls	r3, r7
 801abb4:	4378      	muls	r0, r7
 801abb6:	434f      	muls	r7, r1
 801abb8:	1c59      	adds	r1, r3, #1
 801abba:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801abbe:	1213      	asrs	r3, r2, #8
 801abc0:	f023 0307 	bic.w	r3, r3, #7
 801abc4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801abc8:	1c41      	adds	r1, r0, #1
 801abca:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801abce:	10d1      	asrs	r1, r2, #3
 801abd0:	021b      	lsls	r3, r3, #8
 801abd2:	f021 0103 	bic.w	r1, r1, #3
 801abd6:	00d2      	lsls	r2, r2, #3
 801abd8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801abdc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801abe0:	00c9      	lsls	r1, r1, #3
 801abe2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801abe6:	430b      	orrs	r3, r1
 801abe8:	1c79      	adds	r1, r7, #1
 801abea:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801abee:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801abf2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801abf6:	431a      	orrs	r2, r3
 801abf8:	9b03      	ldr	r3, [sp, #12]
 801abfa:	801a      	strh	r2, [r3, #0]
 801abfc:	b005      	add	sp, #20
 801abfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac02:	f04f 0c00 	mov.w	ip, #0
 801ac06:	4664      	mov	r4, ip
 801ac08:	e6e5      	b.n	801a9d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801ac0a:	2300      	movs	r3, #0
 801ac0c:	469c      	mov	ip, r3
 801ac0e:	461a      	mov	r2, r3
 801ac10:	461c      	mov	r4, r3
 801ac12:	e707      	b.n	801aa24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ac14:	2300      	movs	r3, #0
 801ac16:	461a      	mov	r2, r3
 801ac18:	e704      	b.n	801aa24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ac1a:	460b      	mov	r3, r1
 801ac1c:	460a      	mov	r2, r1
 801ac1e:	e701      	b.n	801aa24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ac20:	2500      	movs	r5, #0
 801ac22:	46ab      	mov	fp, r5
 801ac24:	e72f      	b.n	801aa86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801ac26:	2700      	movs	r7, #0
 801ac28:	463d      	mov	r5, r7
 801ac2a:	4638      	mov	r0, r7
 801ac2c:	46bb      	mov	fp, r7
 801ac2e:	e754      	b.n	801aada <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ac30:	4677      	mov	r7, lr
 801ac32:	4675      	mov	r5, lr
 801ac34:	4670      	mov	r0, lr
 801ac36:	46f3      	mov	fp, lr
 801ac38:	e74f      	b.n	801aada <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ac3a:	2700      	movs	r7, #0
 801ac3c:	4638      	mov	r0, r7
 801ac3e:	e74c      	b.n	801aada <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ac40:	460f      	mov	r7, r1
 801ac42:	4608      	mov	r0, r1
 801ac44:	e749      	b.n	801aada <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801ac48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac4c:	b093      	sub	sp, #76	@ 0x4c
 801ac4e:	9210      	str	r2, [sp, #64]	@ 0x40
 801ac50:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ac52:	9011      	str	r0, [sp, #68]	@ 0x44
 801ac54:	910e      	str	r1, [sp, #56]	@ 0x38
 801ac56:	6850      	ldr	r0, [r2, #4]
 801ac58:	9306      	str	r3, [sp, #24]
 801ac5a:	6812      	ldr	r2, [r2, #0]
 801ac5c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801ac60:	fb00 1303 	mla	r3, r0, r3, r1
 801ac64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ac68:	9307      	str	r3, [sp, #28]
 801ac6a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ac6c:	681b      	ldr	r3, [r3, #0]
 801ac6e:	9308      	str	r3, [sp, #32]
 801ac70:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ac72:	685b      	ldr	r3, [r3, #4]
 801ac74:	9309      	str	r3, [sp, #36]	@ 0x24
 801ac76:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ac78:	2b00      	cmp	r3, #0
 801ac7a:	dc03      	bgt.n	801ac84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ac7c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ac7e:	2b00      	cmp	r3, #0
 801ac80:	f340 83b6 	ble.w	801b3f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801ac84:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ac86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac8a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ac8e:	1e48      	subs	r0, r1, #1
 801ac90:	1e55      	subs	r5, r2, #1
 801ac92:	9b06      	ldr	r3, [sp, #24]
 801ac94:	2b00      	cmp	r3, #0
 801ac96:	f340 8165 	ble.w	801af64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ac9a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801ac9c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ac9e:	1436      	asrs	r6, r6, #16
 801aca0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801aca4:	d406      	bmi.n	801acb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801aca6:	4286      	cmp	r6, r0
 801aca8:	da04      	bge.n	801acb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801acaa:	2b00      	cmp	r3, #0
 801acac:	db02      	blt.n	801acb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801acae:	42ab      	cmp	r3, r5
 801acb0:	f2c0 8159 	blt.w	801af66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801acb4:	3601      	adds	r6, #1
 801acb6:	f100 8146 	bmi.w	801af46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801acba:	42b1      	cmp	r1, r6
 801acbc:	f2c0 8143 	blt.w	801af46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801acc0:	3301      	adds	r3, #1
 801acc2:	f100 8140 	bmi.w	801af46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801acc6:	429a      	cmp	r2, r3
 801acc8:	f2c0 813d 	blt.w	801af46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801accc:	9b06      	ldr	r3, [sp, #24]
 801acce:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801acd2:	9f07      	ldr	r7, [sp, #28]
 801acd4:	930f      	str	r3, [sp, #60]	@ 0x3c
 801acd6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801acd8:	2b00      	cmp	r3, #0
 801acda:	f340 8166 	ble.w	801afaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801acde:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ace0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801ace2:	1418      	asrs	r0, r3, #16
 801ace4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ace6:	142d      	asrs	r5, r5, #16
 801ace8:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801acec:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801acee:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801acf2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801acf4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801acf8:	f100 81f0 	bmi.w	801b0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801acfc:	f102 3eff 	add.w	lr, r2, #4294967295
 801ad00:	4575      	cmp	r5, lr
 801ad02:	f280 81eb 	bge.w	801b0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ad06:	2800      	cmp	r0, #0
 801ad08:	f2c0 81e8 	blt.w	801b0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ad0c:	f103 3eff 	add.w	lr, r3, #4294967295
 801ad10:	4570      	cmp	r0, lr
 801ad12:	f280 81e3 	bge.w	801b0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ad16:	b212      	sxth	r2, r2
 801ad18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ad1a:	fa1f fe81 	uxth.w	lr, r1
 801ad1e:	fb00 5002 	mla	r0, r0, r2, r5
 801ad22:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801ad26:	eb03 0a00 	add.w	sl, r3, r0
 801ad2a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801ad2e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801ad32:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ad36:	b29b      	uxth	r3, r3
 801ad38:	f1bc 0f00 	cmp.w	ip, #0
 801ad3c:	f000 817b 	beq.w	801b036 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801ad40:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ad44:	eb0a 0b02 	add.w	fp, sl, r2
 801ad48:	fa1f fa8c 	uxth.w	sl, ip
 801ad4c:	940a      	str	r4, [sp, #40]	@ 0x28
 801ad4e:	fb0a fe0e 	mul.w	lr, sl, lr
 801ad52:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ad56:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ad5a:	eba5 050e 	sub.w	r5, r5, lr
 801ad5e:	940b      	str	r4, [sp, #44]	@ 0x2c
 801ad60:	fa1f fa8a 	uxth.w	sl, sl
 801ad64:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ad66:	b2ad      	uxth	r5, r5
 801ad68:	eba3 030a 	sub.w	r3, r3, sl
 801ad6c:	fb08 f505 	mul.w	r5, r8, r5
 801ad70:	b29b      	uxth	r3, r3
 801ad72:	fb09 5303 	mla	r3, r9, r3, r5
 801ad76:	fb0a 3304 	mla	r3, sl, r4, r3
 801ad7a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ad7c:	fb0e 3304 	mla	r3, lr, r4, r3
 801ad80:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ad84:	2b00      	cmp	r3, #0
 801ad86:	f000 80d1 	beq.w	801af2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801ad8a:	9c08      	ldr	r4, [sp, #32]
 801ad8c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801ad90:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801ad94:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801ad98:	f000 8152 	beq.w	801b040 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ad9c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801ada0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ada4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ada8:	fb0a fe0e 	mul.w	lr, sl, lr
 801adac:	fb09 f000 	mul.w	r0, r9, r0
 801adb0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801adb4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801adb8:	f100 0b20 	add.w	fp, r0, #32
 801adbc:	44ce      	add	lr, r9
 801adbe:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801adc2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801adc6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801adca:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801adce:	ea4e 0909 	orr.w	r9, lr, r9
 801add2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801add6:	8868      	ldrh	r0, [r5, #2]
 801add8:	d019      	beq.n	801ae0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801adda:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801adde:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ade2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ade6:	fb0a fe0e 	mul.w	lr, sl, lr
 801adea:	fb08 f800 	mul.w	r8, r8, r0
 801adee:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801adf2:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801adf6:	f108 0b20 	add.w	fp, r8, #32
 801adfa:	4486      	add	lr, r0
 801adfc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801ae00:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ae04:	0a00      	lsrs	r0, r0, #8
 801ae06:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ae0a:	ea4e 0000 	orr.w	r0, lr, r0
 801ae0e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801ae12:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ae16:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ae1a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ae1e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801ae22:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ae26:	ea4e 0909 	orr.w	r9, lr, r9
 801ae2a:	ea4a 0000 	orr.w	r0, sl, r0
 801ae2e:	f1bc 0f00 	cmp.w	ip, #0
 801ae32:	f000 8107 	beq.w	801b044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801ae36:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801ae3a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ae3c:	3a01      	subs	r2, #1
 801ae3e:	2cff      	cmp	r4, #255	@ 0xff
 801ae40:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801ae44:	f102 0202 	add.w	r2, r2, #2
 801ae48:	eb05 0e02 	add.w	lr, r5, r2
 801ae4c:	5aaa      	ldrh	r2, [r5, r2]
 801ae4e:	d018      	beq.n	801ae82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801ae50:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801ae54:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ae58:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ae5c:	fb04 fa02 	mul.w	sl, r4, r2
 801ae60:	fb08 f805 	mul.w	r8, r8, r5
 801ae64:	f10a 0520 	add.w	r5, sl, #32
 801ae68:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801ae6c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ae70:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801ae74:	4442      	add	r2, r8
 801ae76:	0a2d      	lsrs	r5, r5, #8
 801ae78:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801ae7c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ae80:	432a      	orrs	r2, r5
 801ae82:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ae84:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801ae88:	2cff      	cmp	r4, #255	@ 0xff
 801ae8a:	d01a      	beq.n	801aec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ae8c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801ae90:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ae94:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ae98:	fb04 fa05 	mul.w	sl, r4, r5
 801ae9c:	fb08 f80e 	mul.w	r8, r8, lr
 801aea0:	f10a 0e20 	add.w	lr, sl, #32
 801aea4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801aea8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801aeac:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801aeb0:	4445      	add	r5, r8
 801aeb2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aeb6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801aeba:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801aebe:	ea45 050e 	orr.w	r5, r5, lr
 801aec2:	fb1c fe01 	smulbb	lr, ip, r1
 801aec6:	f1cc 0810 	rsb	r8, ip, #16
 801aeca:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801aece:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801aed2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801aed6:	eba8 0801 	sub.w	r8, r8, r1
 801aeda:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801aede:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801aee2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801aee6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801aeea:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801aeee:	ea4a 0202 	orr.w	r2, sl, r2
 801aef2:	4341      	muls	r1, r0
 801aef4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801aef8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801aefc:	fb09 1108 	mla	r1, r9, r8, r1
 801af00:	ea4b 0505 	orr.w	r5, fp, r5
 801af04:	fb0c 1102 	mla	r1, ip, r2, r1
 801af08:	fb0e 1e05 	mla	lr, lr, r5, r1
 801af0c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801af10:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801af14:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801af18:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801af1c:	ea42 0e0e 	orr.w	lr, r2, lr
 801af20:	fa1f f28e 	uxth.w	r2, lr
 801af24:	2bff      	cmp	r3, #255	@ 0xff
 801af26:	f040 80a1 	bne.w	801b06c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801af2a:	803a      	strh	r2, [r7, #0]
 801af2c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801af2e:	3702      	adds	r7, #2
 801af30:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801af32:	4413      	add	r3, r2
 801af34:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801af36:	931d      	str	r3, [sp, #116]	@ 0x74
 801af38:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801af3a:	441a      	add	r2, r3
 801af3c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801af3e:	3b01      	subs	r3, #1
 801af40:	921e      	str	r2, [sp, #120]	@ 0x78
 801af42:	930f      	str	r3, [sp, #60]	@ 0x3c
 801af44:	e6c7      	b.n	801acd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801af46:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801af48:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801af4a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801af4c:	4433      	add	r3, r6
 801af4e:	931d      	str	r3, [sp, #116]	@ 0x74
 801af50:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801af52:	441c      	add	r4, r3
 801af54:	9b06      	ldr	r3, [sp, #24]
 801af56:	3b01      	subs	r3, #1
 801af58:	941e      	str	r4, [sp, #120]	@ 0x78
 801af5a:	9306      	str	r3, [sp, #24]
 801af5c:	9b07      	ldr	r3, [sp, #28]
 801af5e:	3302      	adds	r3, #2
 801af60:	9307      	str	r3, [sp, #28]
 801af62:	e696      	b.n	801ac92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801af64:	d028      	beq.n	801afb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801af66:	9b06      	ldr	r3, [sp, #24]
 801af68:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801af6a:	3b01      	subs	r3, #1
 801af6c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801af6e:	fb00 5003 	mla	r0, r0, r3, r5
 801af72:	1400      	asrs	r0, r0, #16
 801af74:	f53f aeaa 	bmi.w	801accc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801af78:	3901      	subs	r1, #1
 801af7a:	4288      	cmp	r0, r1
 801af7c:	f6bf aea6 	bge.w	801accc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801af80:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801af82:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801af84:	fb01 0303 	mla	r3, r1, r3, r0
 801af88:	141b      	asrs	r3, r3, #16
 801af8a:	f53f ae9f 	bmi.w	801accc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801af8e:	3a01      	subs	r2, #1
 801af90:	4293      	cmp	r3, r2
 801af92:	f6bf ae9b 	bge.w	801accc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801af96:	9b06      	ldr	r3, [sp, #24]
 801af98:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801af9c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801afa0:	930f      	str	r3, [sp, #60]	@ 0x3c
 801afa2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801afa4:	2b00      	cmp	r3, #0
 801afa6:	f300 80b6 	bgt.w	801b116 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801afaa:	9b06      	ldr	r3, [sp, #24]
 801afac:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801afb0:	9b07      	ldr	r3, [sp, #28]
 801afb2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801afb6:	9307      	str	r3, [sp, #28]
 801afb8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801afba:	2b00      	cmp	r3, #0
 801afbc:	f340 8218 	ble.w	801b3f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801afc0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801afc4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801afc6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801afca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801afce:	eef0 6a62 	vmov.f32	s13, s5
 801afd2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801afd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801afda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afde:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801afe2:	eef0 6a43 	vmov.f32	s13, s6
 801afe6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afea:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801afee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aff2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aff6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801affa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801affe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b002:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b006:	ee12 2a90 	vmov	r2, s5
 801b00a:	eef0 2a47 	vmov.f32	s5, s14
 801b00e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b012:	ee13 2a10 	vmov	r2, s6
 801b016:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b018:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b01a:	eeb0 3a67 	vmov.f32	s6, s15
 801b01e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b022:	9320      	str	r3, [sp, #128]	@ 0x80
 801b024:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b026:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b028:	3b01      	subs	r3, #1
 801b02a:	930e      	str	r3, [sp, #56]	@ 0x38
 801b02c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b02e:	bf08      	it	eq
 801b030:	4613      	moveq	r3, r2
 801b032:	9306      	str	r3, [sp, #24]
 801b034:	e61f      	b.n	801ac76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801b036:	fb08 f505 	mul.w	r5, r8, r5
 801b03a:	fb09 5303 	mla	r3, r9, r3, r5
 801b03e:	e69f      	b.n	801ad80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801b040:	4681      	mov	r9, r0
 801b042:	e6c6      	b.n	801add2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801b044:	f1c1 0210 	rsb	r2, r1, #16
 801b048:	4341      	muls	r1, r0
 801b04a:	fb09 1902 	mla	r9, r9, r2, r1
 801b04e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b052:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801b056:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b05a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b05e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801b062:	ea42 0909 	orr.w	r9, r2, r9
 801b066:	fa1f f289 	uxth.w	r2, r9
 801b06a:	e75b      	b.n	801af24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 801b06c:	f8b7 c000 	ldrh.w	ip, [r7]
 801b070:	43db      	mvns	r3, r3
 801b072:	ea4f 202c 	mov.w	r0, ip, asr #8
 801b076:	fa5f fe83 	uxtb.w	lr, r3
 801b07a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b07e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801b082:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801b086:	fb00 f00e 	mul.w	r0, r0, lr
 801b08a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b08e:	b2db      	uxtb	r3, r3
 801b090:	1c41      	adds	r1, r0, #1
 801b092:	fb05 f50e 	mul.w	r5, r5, lr
 801b096:	fb03 f30e 	mul.w	r3, r3, lr
 801b09a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801b09e:	1211      	asrs	r1, r2, #8
 801b0a0:	f021 0107 	bic.w	r1, r1, #7
 801b0a4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801b0a8:	48d3      	ldr	r0, [pc, #844]	@ (801b3f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801b0aa:	b2c9      	uxtb	r1, r1
 801b0ac:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801b0b0:	1c69      	adds	r1, r5, #1
 801b0b2:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801b0b6:	10d1      	asrs	r1, r2, #3
 801b0b8:	00d2      	lsls	r2, r2, #3
 801b0ba:	f021 0103 	bic.w	r1, r1, #3
 801b0be:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801b0c2:	00c9      	lsls	r1, r1, #3
 801b0c4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b0c8:	4301      	orrs	r1, r0
 801b0ca:	1c58      	adds	r0, r3, #1
 801b0cc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b0d0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b0d4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b0d8:	430a      	orrs	r2, r1
 801b0da:	e726      	b.n	801af2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801b0dc:	f115 0e01 	adds.w	lr, r5, #1
 801b0e0:	f53f af24 	bmi.w	801af2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801b0e4:	4572      	cmp	r2, lr
 801b0e6:	f6ff af21 	blt.w	801af2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801b0ea:	f110 0e01 	adds.w	lr, r0, #1
 801b0ee:	f53f af1d 	bmi.w	801af2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801b0f2:	4573      	cmp	r3, lr
 801b0f4:	f6ff af1a 	blt.w	801af2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801b0f8:	b21b      	sxth	r3, r3
 801b0fa:	b212      	sxth	r2, r2
 801b0fc:	9301      	str	r3, [sp, #4]
 801b0fe:	9200      	str	r2, [sp, #0]
 801b100:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801b104:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801b108:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801b10c:	4639      	mov	r1, r7
 801b10e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b110:	f7ff fc22 	bl	801a958 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801b114:	e70a      	b.n	801af2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801b116:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801b118:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b11c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801b11e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801b122:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b124:	fa1f fc82 	uxth.w	ip, r2
 801b128:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b12c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801b12e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801b132:	141f      	asrs	r7, r3, #16
 801b134:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801b136:	141b      	asrs	r3, r3, #16
 801b138:	fb01 3707 	mla	r7, r1, r7, r3
 801b13c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b13e:	eb03 0a07 	add.w	sl, r3, r7
 801b142:	f813 9007 	ldrb.w	r9, [r3, r7]
 801b146:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801b14a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b14e:	b29b      	uxth	r3, r3
 801b150:	2d00      	cmp	r5, #0
 801b152:	f000 80fe 	beq.w	801b352 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801b156:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801b15a:	eb0a 0b01 	add.w	fp, sl, r1
 801b15e:	fa1f fa85 	uxth.w	sl, r5
 801b162:	940c      	str	r4, [sp, #48]	@ 0x30
 801b164:	fb0a fc0c 	mul.w	ip, sl, ip
 801b168:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b16c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801b170:	eba0 000c 	sub.w	r0, r0, ip
 801b174:	940d      	str	r4, [sp, #52]	@ 0x34
 801b176:	fa1f fa8a 	uxth.w	sl, sl
 801b17a:	b280      	uxth	r0, r0
 801b17c:	eba3 030a 	sub.w	r3, r3, sl
 801b180:	fb08 f000 	mul.w	r0, r8, r0
 801b184:	b29b      	uxth	r3, r3
 801b186:	fb09 0303 	mla	r3, r9, r3, r0
 801b18a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801b18c:	fb0a 3300 	mla	r3, sl, r0, r3
 801b190:	fb0c 3304 	mla	r3, ip, r4, r3
 801b194:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b198:	2b00      	cmp	r3, #0
 801b19a:	f000 80cc 	beq.w	801b336 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801b19e:	9808      	ldr	r0, [sp, #32]
 801b1a0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801b1a4:	9c08      	ldr	r4, [sp, #32]
 801b1a6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801b1aa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801b1ae:	f000 80d5 	beq.w	801b35c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801b1b2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801b1b6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b1ba:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b1be:	fb0a fc0c 	mul.w	ip, sl, ip
 801b1c2:	fb09 f707 	mul.w	r7, r9, r7
 801b1c6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801b1ca:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801b1ce:	f107 0b20 	add.w	fp, r7, #32
 801b1d2:	44cc      	add	ip, r9
 801b1d4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801b1d8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b1dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b1e0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801b1e4:	ea4c 0909 	orr.w	r9, ip, r9
 801b1e8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801b1ec:	8847      	ldrh	r7, [r0, #2]
 801b1ee:	d019      	beq.n	801b224 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 801b1f0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801b1f4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b1f8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b1fc:	fb0a fc0c 	mul.w	ip, sl, ip
 801b200:	fb08 f807 	mul.w	r8, r8, r7
 801b204:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801b208:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801b20c:	f108 0b20 	add.w	fp, r8, #32
 801b210:	44bc      	add	ip, r7
 801b212:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801b216:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b21a:	0a3f      	lsrs	r7, r7, #8
 801b21c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b220:	ea4c 0707 	orr.w	r7, ip, r7
 801b224:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801b228:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801b22c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801b230:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801b234:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b238:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b23c:	ea4c 0909 	orr.w	r9, ip, r9
 801b240:	ea4a 0707 	orr.w	r7, sl, r7
 801b244:	2d00      	cmp	r5, #0
 801b246:	f000 808b 	beq.w	801b360 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801b24a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801b24e:	3901      	subs	r1, #1
 801b250:	0049      	lsls	r1, r1, #1
 801b252:	3102      	adds	r1, #2
 801b254:	eb00 0c01 	add.w	ip, r0, r1
 801b258:	5a41      	ldrh	r1, [r0, r1]
 801b25a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801b25c:	28ff      	cmp	r0, #255	@ 0xff
 801b25e:	d019      	beq.n	801b294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 801b260:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801b264:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801b266:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b26a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b26e:	fb04 fa01 	mul.w	sl, r4, r1
 801b272:	fb08 f800 	mul.w	r8, r8, r0
 801b276:	f10a 0020 	add.w	r0, sl, #32
 801b27a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801b27e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801b282:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801b286:	4441      	add	r1, r8
 801b288:	0a00      	lsrs	r0, r0, #8
 801b28a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801b28e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b292:	4301      	orrs	r1, r0
 801b294:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b296:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801b29a:	2cff      	cmp	r4, #255	@ 0xff
 801b29c:	d01a      	beq.n	801b2d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 801b29e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801b2a2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b2a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b2aa:	fb04 fa00 	mul.w	sl, r4, r0
 801b2ae:	fb08 f80c 	mul.w	r8, r8, ip
 801b2b2:	f10a 0c20 	add.w	ip, sl, #32
 801b2b6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801b2ba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801b2be:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801b2c2:	4440      	add	r0, r8
 801b2c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b2c8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801b2cc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801b2d0:	ea40 000c 	orr.w	r0, r0, ip
 801b2d4:	fb15 fc02 	smulbb	ip, r5, r2
 801b2d8:	f1c5 0810 	rsb	r8, r5, #16
 801b2dc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801b2e0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801b2e4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801b2e8:	eba8 0802 	sub.w	r8, r8, r2
 801b2ec:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801b2f0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b2f4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801b2f8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b2fc:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801b300:	ea4a 0101 	orr.w	r1, sl, r1
 801b304:	437a      	muls	r2, r7
 801b306:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801b30a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b30e:	fb09 2208 	mla	r2, r9, r8, r2
 801b312:	ea4b 0000 	orr.w	r0, fp, r0
 801b316:	fb05 2201 	mla	r2, r5, r1, r2
 801b31a:	fb0c 2200 	mla	r2, ip, r0, r2
 801b31e:	0d57      	lsrs	r7, r2, #21
 801b320:	0952      	lsrs	r2, r2, #5
 801b322:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b326:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b32a:	433a      	orrs	r2, r7
 801b32c:	2bff      	cmp	r3, #255	@ 0xff
 801b32e:	b292      	uxth	r2, r2
 801b330:	d127      	bne.n	801b382 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 801b332:	f8ae 2000 	strh.w	r2, [lr]
 801b336:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801b338:	f10e 0e02 	add.w	lr, lr, #2
 801b33c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801b33e:	4413      	add	r3, r2
 801b340:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801b342:	931d      	str	r3, [sp, #116]	@ 0x74
 801b344:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b346:	441a      	add	r2, r3
 801b348:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b34a:	3b01      	subs	r3, #1
 801b34c:	921e      	str	r2, [sp, #120]	@ 0x78
 801b34e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b350:	e627      	b.n	801afa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b352:	fb08 f000 	mul.w	r0, r8, r0
 801b356:	fb09 0303 	mla	r3, r9, r3, r0
 801b35a:	e71b      	b.n	801b194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 801b35c:	46b9      	mov	r9, r7
 801b35e:	e743      	b.n	801b1e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 801b360:	f1c2 0110 	rsb	r1, r2, #16
 801b364:	437a      	muls	r2, r7
 801b366:	fb09 2901 	mla	r9, r9, r1, r2
 801b36a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b36e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801b372:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801b376:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b37a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b37e:	4302      	orrs	r2, r0
 801b380:	e7d4      	b.n	801b32c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 801b382:	f8be 7000 	ldrh.w	r7, [lr]
 801b386:	43db      	mvns	r3, r3
 801b388:	4c1b      	ldr	r4, [pc, #108]	@ (801b3f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801b38a:	1238      	asrs	r0, r7, #8
 801b38c:	fa5f fc83 	uxtb.w	ip, r3
 801b390:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b394:	10fd      	asrs	r5, r7, #3
 801b396:	00fb      	lsls	r3, r7, #3
 801b398:	fb00 f00c 	mul.w	r0, r0, ip
 801b39c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b3a0:	b2db      	uxtb	r3, r3
 801b3a2:	fb05 f10c 	mul.w	r1, r5, ip
 801b3a6:	1c45      	adds	r5, r0, #1
 801b3a8:	fb03 f30c 	mul.w	r3, r3, ip
 801b3ac:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801b3b0:	1215      	asrs	r5, r2, #8
 801b3b2:	f025 0507 	bic.w	r5, r5, #7
 801b3b6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801b3ba:	1c4d      	adds	r5, r1, #1
 801b3bc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801b3c0:	10d1      	asrs	r1, r2, #3
 801b3c2:	b2c0      	uxtb	r0, r0
 801b3c4:	f021 0103 	bic.w	r1, r1, #3
 801b3c8:	00d2      	lsls	r2, r2, #3
 801b3ca:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801b3ce:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801b3d2:	00c9      	lsls	r1, r1, #3
 801b3d4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b3d8:	4308      	orrs	r0, r1
 801b3da:	1c59      	adds	r1, r3, #1
 801b3dc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b3e0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b3e4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801b3e8:	4318      	orrs	r0, r3
 801b3ea:	f8ae 0000 	strh.w	r0, [lr]
 801b3ee:	e7a2      	b.n	801b336 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801b3f0:	b013      	add	sp, #76	@ 0x4c
 801b3f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3f6:	bf00      	nop
 801b3f8:	fffff800 	.word	0xfffff800

0801b3fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801b3fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b400:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801b404:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801b408:	fb05 4c03 	mla	ip, r5, r3, r4
 801b40c:	2d00      	cmp	r5, #0
 801b40e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801b412:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801b416:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801b41a:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801b41e:	8808      	ldrh	r0, [r1, #0]
 801b420:	f2c0 80a7 	blt.w	801b572 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801b424:	45aa      	cmp	sl, r5
 801b426:	f340 80a4 	ble.w	801b572 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801b42a:	2c00      	cmp	r4, #0
 801b42c:	f2c0 809f 	blt.w	801b56e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801b430:	42a3      	cmp	r3, r4
 801b432:	f340 809c 	ble.w	801b56e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801b436:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801b43a:	1c62      	adds	r2, r4, #1
 801b43c:	f100 809c 	bmi.w	801b578 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801b440:	4293      	cmp	r3, r2
 801b442:	f340 8099 	ble.w	801b578 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801b446:	f1b9 0f00 	cmp.w	r9, #0
 801b44a:	f000 8095 	beq.w	801b578 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801b44e:	f8be c002 	ldrh.w	ip, [lr, #2]
 801b452:	3501      	adds	r5, #1
 801b454:	f100 8094 	bmi.w	801b580 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801b458:	45aa      	cmp	sl, r5
 801b45a:	f340 8091 	ble.w	801b580 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801b45e:	2f00      	cmp	r7, #0
 801b460:	f000 808e 	beq.w	801b580 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801b464:	2c00      	cmp	r4, #0
 801b466:	f2c0 8089 	blt.w	801b57c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801b46a:	42a3      	cmp	r3, r4
 801b46c:	f340 8086 	ble.w	801b57c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801b470:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801b474:	3401      	adds	r4, #1
 801b476:	f100 8086 	bmi.w	801b586 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801b47a:	42a3      	cmp	r3, r4
 801b47c:	f340 8083 	ble.w	801b586 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801b480:	f1b9 0f00 	cmp.w	r9, #0
 801b484:	d07f      	beq.n	801b586 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801b486:	3301      	adds	r3, #1
 801b488:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801b48c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801b490:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801b494:	fb19 fe07 	smulbb	lr, r9, r7
 801b498:	f1c7 0210 	rsb	r2, r7, #16
 801b49c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801b4a0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801b4a4:	eba2 0209 	sub.w	r2, r2, r9
 801b4a8:	ea44 0808 	orr.w	r8, r4, r8
 801b4ac:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801b4b0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801b4b4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801b4b8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801b4bc:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801b4c0:	ea44 0c0c 	orr.w	ip, r4, ip
 801b4c4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801b4c8:	fb04 f40c 	mul.w	r4, r4, ip
 801b4cc:	fb02 4808 	mla	r8, r2, r8, r4
 801b4d0:	041a      	lsls	r2, r3, #16
 801b4d2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b4d6:	b2b4      	uxth	r4, r6
 801b4d8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b4dc:	43f6      	mvns	r6, r6
 801b4de:	4313      	orrs	r3, r2
 801b4e0:	042a      	lsls	r2, r5, #16
 801b4e2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801b4e6:	b2f6      	uxtb	r6, r6
 801b4e8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b4ec:	fb0e 8303 	mla	r3, lr, r3, r8
 801b4f0:	432a      	orrs	r2, r5
 801b4f2:	fb07 3202 	mla	r2, r7, r2, r3
 801b4f6:	10c7      	asrs	r7, r0, #3
 801b4f8:	0d53      	lsrs	r3, r2, #21
 801b4fa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b4fe:	0952      	lsrs	r2, r2, #5
 801b500:	fb17 f706 	smulbb	r7, r7, r6
 801b504:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b508:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b50c:	431a      	orrs	r2, r3
 801b50e:	b293      	uxth	r3, r2
 801b510:	1202      	asrs	r2, r0, #8
 801b512:	121d      	asrs	r5, r3, #8
 801b514:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b518:	00c0      	lsls	r0, r0, #3
 801b51a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b51e:	fb12 f206 	smulbb	r2, r2, r6
 801b522:	b2c0      	uxtb	r0, r0
 801b524:	fb05 2504 	mla	r5, r5, r4, r2
 801b528:	10da      	asrs	r2, r3, #3
 801b52a:	fb10 f006 	smulbb	r0, r0, r6
 801b52e:	00db      	lsls	r3, r3, #3
 801b530:	b2ad      	uxth	r5, r5
 801b532:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b536:	b2db      	uxtb	r3, r3
 801b538:	fb02 7204 	mla	r2, r2, r4, r7
 801b53c:	fb03 0004 	mla	r0, r3, r4, r0
 801b540:	1c6b      	adds	r3, r5, #1
 801b542:	b292      	uxth	r2, r2
 801b544:	b280      	uxth	r0, r0
 801b546:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b54a:	1c43      	adds	r3, r0, #1
 801b54c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b550:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b554:	1c50      	adds	r0, r2, #1
 801b556:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801b55a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b55e:	0952      	lsrs	r2, r2, #5
 801b560:	432b      	orrs	r3, r5
 801b562:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b566:	4313      	orrs	r3, r2
 801b568:	800b      	strh	r3, [r1, #0]
 801b56a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b56e:	4680      	mov	r8, r0
 801b570:	e763      	b.n	801b43a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801b572:	4684      	mov	ip, r0
 801b574:	4680      	mov	r8, r0
 801b576:	e76c      	b.n	801b452 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801b578:	4684      	mov	ip, r0
 801b57a:	e76a      	b.n	801b452 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801b57c:	4605      	mov	r5, r0
 801b57e:	e779      	b.n	801b474 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801b580:	4603      	mov	r3, r0
 801b582:	4605      	mov	r5, r0
 801b584:	e782      	b.n	801b48c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801b586:	4603      	mov	r3, r0
 801b588:	e780      	b.n	801b48c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801b58a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b58a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b58e:	b093      	sub	sp, #76	@ 0x4c
 801b590:	461d      	mov	r5, r3
 801b592:	9210      	str	r2, [sp, #64]	@ 0x40
 801b594:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801b596:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801b59a:	910a      	str	r1, [sp, #40]	@ 0x28
 801b59c:	920b      	str	r2, [sp, #44]	@ 0x2c
 801b59e:	6859      	ldr	r1, [r3, #4]
 801b5a0:	681b      	ldr	r3, [r3, #0]
 801b5a2:	9011      	str	r0, [sp, #68]	@ 0x44
 801b5a4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801b5a8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801b5ac:	fb01 2707 	mla	r7, r1, r7, r2
 801b5b0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801b5b4:	9307      	str	r3, [sp, #28]
 801b5b6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b5b8:	681b      	ldr	r3, [r3, #0]
 801b5ba:	9309      	str	r3, [sp, #36]	@ 0x24
 801b5bc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b5be:	43db      	mvns	r3, r3
 801b5c0:	b2db      	uxtb	r3, r3
 801b5c2:	9308      	str	r3, [sp, #32]
 801b5c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b5c6:	2b00      	cmp	r3, #0
 801b5c8:	dc03      	bgt.n	801b5d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b5ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b5cc:	2b00      	cmp	r3, #0
 801b5ce:	f340 8205 	ble.w	801b9dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b5d2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b5d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b5d8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b5dc:	1e48      	subs	r0, r1, #1
 801b5de:	f102 3cff 	add.w	ip, r2, #4294967295
 801b5e2:	2d00      	cmp	r5, #0
 801b5e4:	f340 80da 	ble.w	801b79c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801b5e8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b5ec:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b5f0:	d406      	bmi.n	801b600 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b5f2:	4586      	cmp	lr, r0
 801b5f4:	da04      	bge.n	801b600 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b5f6:	2b00      	cmp	r3, #0
 801b5f8:	db02      	blt.n	801b600 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b5fa:	4563      	cmp	r3, ip
 801b5fc:	f2c0 80cf 	blt.w	801b79e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b600:	f11e 0e01 	adds.w	lr, lr, #1
 801b604:	f100 80c1 	bmi.w	801b78a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b608:	4571      	cmp	r1, lr
 801b60a:	f2c0 80be 	blt.w	801b78a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b60e:	3301      	adds	r3, #1
 801b610:	f100 80bb 	bmi.w	801b78a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b614:	429a      	cmp	r2, r3
 801b616:	f2c0 80b8 	blt.w	801b78a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b61a:	46a9      	mov	r9, r5
 801b61c:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801b620:	f1b9 0f00 	cmp.w	r9, #0
 801b624:	f340 80d8 	ble.w	801b7d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801b628:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b62a:	1421      	asrs	r1, r4, #16
 801b62c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b630:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b634:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b638:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801b63c:	f100 8112 	bmi.w	801b864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801b640:	f10e 3aff 	add.w	sl, lr, #4294967295
 801b644:	4551      	cmp	r1, sl
 801b646:	f280 810d 	bge.w	801b864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801b64a:	2800      	cmp	r0, #0
 801b64c:	f2c0 810a 	blt.w	801b864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801b650:	f103 3aff 	add.w	sl, r3, #4294967295
 801b654:	4550      	cmp	r0, sl
 801b656:	f280 8105 	bge.w	801b864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801b65a:	fa0f f38e 	sxth.w	r3, lr
 801b65e:	fb00 1103 	mla	r1, r0, r3, r1
 801b662:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801b664:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801b668:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801b66c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801b670:	f1bc 0f00 	cmp.w	ip, #0
 801b674:	d007      	beq.n	801b686 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801b676:	005b      	lsls	r3, r3, #1
 801b678:	eb0a 0003 	add.w	r0, sl, r3
 801b67c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801b680:	930c      	str	r3, [sp, #48]	@ 0x30
 801b682:	8843      	ldrh	r3, [r0, #2]
 801b684:	930d      	str	r3, [sp, #52]	@ 0x34
 801b686:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801b68a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801b68e:	fb12 f30c 	smulbb	r3, r2, ip
 801b692:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801b696:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801b69a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801b69e:	10db      	asrs	r3, r3, #3
 801b6a0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b6a4:	ea40 000e 	orr.w	r0, r0, lr
 801b6a8:	f1cc 0e10 	rsb	lr, ip, #16
 801b6ac:	ea4a 0101 	orr.w	r1, sl, r1
 801b6b0:	9f08      	ldr	r7, [sp, #32]
 801b6b2:	ebae 0e02 	sub.w	lr, lr, r2
 801b6b6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801b6ba:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801b6be:	4351      	muls	r1, r2
 801b6c0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801b6c2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801b6c6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801b6c8:	0410      	lsls	r0, r2, #16
 801b6ca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b6ce:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801b6d2:	4310      	orrs	r0, r2
 801b6d4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801b6d6:	0412      	lsls	r2, r2, #16
 801b6d8:	fb03 e000 	mla	r0, r3, r0, lr
 801b6dc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801b6e0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801b6e4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b6e8:	ea42 020e 	orr.w	r2, r2, lr
 801b6ec:	fb03 0302 	mla	r3, r3, r2, r0
 801b6f0:	f8b8 0000 	ldrh.w	r0, [r8]
 801b6f4:	0d5a      	lsrs	r2, r3, #21
 801b6f6:	095b      	lsrs	r3, r3, #5
 801b6f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b6fc:	1201      	asrs	r1, r0, #8
 801b6fe:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b702:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801b706:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b70a:	00c0      	lsls	r0, r0, #3
 801b70c:	4313      	orrs	r3, r2
 801b70e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801b712:	fb11 f107 	smulbb	r1, r1, r7
 801b716:	b2c0      	uxtb	r0, r0
 801b718:	b29b      	uxth	r3, r3
 801b71a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b71e:	fb10 f007 	smulbb	r0, r0, r7
 801b722:	fb1e fe07 	smulbb	lr, lr, r7
 801b726:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b72a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b72e:	fb0c 1c02 	mla	ip, ip, r2, r1
 801b732:	10d9      	asrs	r1, r3, #3
 801b734:	00db      	lsls	r3, r3, #3
 801b736:	fa1f fc8c 	uxth.w	ip, ip
 801b73a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b73e:	b2db      	uxtb	r3, r3
 801b740:	fb01 e102 	mla	r1, r1, r2, lr
 801b744:	fb03 0302 	mla	r3, r3, r2, r0
 801b748:	b289      	uxth	r1, r1
 801b74a:	b29a      	uxth	r2, r3
 801b74c:	f10c 0301 	add.w	r3, ip, #1
 801b750:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b754:	1c53      	adds	r3, r2, #1
 801b756:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b75a:	1c4a      	adds	r2, r1, #1
 801b75c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b760:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b764:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b768:	0949      	lsrs	r1, r1, #5
 801b76a:	ea43 030c 	orr.w	r3, r3, ip
 801b76e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b772:	430b      	orrs	r3, r1
 801b774:	f8a8 3000 	strh.w	r3, [r8]
 801b778:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b77a:	f108 0802 	add.w	r8, r8, #2
 801b77e:	f109 39ff 	add.w	r9, r9, #4294967295
 801b782:	441c      	add	r4, r3
 801b784:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b786:	441e      	add	r6, r3
 801b788:	e74a      	b.n	801b620 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b78a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b78c:	3d01      	subs	r5, #1
 801b78e:	441c      	add	r4, r3
 801b790:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b792:	441e      	add	r6, r3
 801b794:	9b07      	ldr	r3, [sp, #28]
 801b796:	3302      	adds	r3, #2
 801b798:	9307      	str	r3, [sp, #28]
 801b79a:	e722      	b.n	801b5e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b79c:	d022      	beq.n	801b7e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801b79e:	1e6b      	subs	r3, r5, #1
 801b7a0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801b7a2:	fb00 4003 	mla	r0, r0, r3, r4
 801b7a6:	1400      	asrs	r0, r0, #16
 801b7a8:	f53f af37 	bmi.w	801b61a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b7ac:	3901      	subs	r1, #1
 801b7ae:	4288      	cmp	r0, r1
 801b7b0:	f6bf af33 	bge.w	801b61a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b7b4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801b7b6:	fb01 6303 	mla	r3, r1, r3, r6
 801b7ba:	141b      	asrs	r3, r3, #16
 801b7bc:	f53f af2d 	bmi.w	801b61a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b7c0:	3a01      	subs	r2, #1
 801b7c2:	4293      	cmp	r3, r2
 801b7c4:	f6bf af29 	bge.w	801b61a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b7c8:	46a8      	mov	r8, r5
 801b7ca:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801b7ce:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801b7d2:	f1b8 0f00 	cmp.w	r8, #0
 801b7d6:	dc60      	bgt.n	801b89a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801b7d8:	9b07      	ldr	r3, [sp, #28]
 801b7da:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b7de:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b7e2:	9307      	str	r3, [sp, #28]
 801b7e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b7e6:	2b00      	cmp	r3, #0
 801b7e8:	f340 80f8 	ble.w	801b9dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b7ec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b7f0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b7f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b7f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b7fa:	eef0 6a62 	vmov.f32	s13, s5
 801b7fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b802:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b806:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b80a:	ee16 4a90 	vmov	r4, s13
 801b80e:	eef0 6a43 	vmov.f32	s13, s6
 801b812:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b816:	ee16 6a90 	vmov	r6, s13
 801b81a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b81e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b822:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b826:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b82a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b82e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b832:	ee12 2a90 	vmov	r2, s5
 801b836:	eef0 2a47 	vmov.f32	s5, s14
 801b83a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b83e:	ee13 2a10 	vmov	r2, s6
 801b842:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b844:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b846:	eeb0 3a67 	vmov.f32	s6, s15
 801b84a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b84e:	9320      	str	r3, [sp, #128]	@ 0x80
 801b850:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b852:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b854:	3b01      	subs	r3, #1
 801b856:	930a      	str	r3, [sp, #40]	@ 0x28
 801b858:	bf08      	it	eq
 801b85a:	4615      	moveq	r5, r2
 801b85c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b85e:	bf18      	it	ne
 801b860:	461d      	movne	r5, r3
 801b862:	e6af      	b.n	801b5c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b864:	f111 0a01 	adds.w	sl, r1, #1
 801b868:	d486      	bmi.n	801b778 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b86a:	45d6      	cmp	lr, sl
 801b86c:	db84      	blt.n	801b778 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b86e:	f110 0a01 	adds.w	sl, r0, #1
 801b872:	d481      	bmi.n	801b778 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b874:	4553      	cmp	r3, sl
 801b876:	f6ff af7f 	blt.w	801b778 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b87a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801b87c:	b21b      	sxth	r3, r3
 801b87e:	9101      	str	r1, [sp, #4]
 801b880:	4641      	mov	r1, r8
 801b882:	9300      	str	r3, [sp, #0]
 801b884:	fa0f f38e 	sxth.w	r3, lr
 801b888:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801b88c:	e9cd c704 	strd	ip, r7, [sp, #16]
 801b890:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b892:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b894:	f7ff fdb2 	bl	801b3fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801b898:	e76e      	b.n	801b778 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b89a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b89c:	1430      	asrs	r0, r6, #16
 801b89e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801b8a0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801b8a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b8a8:	1423      	asrs	r3, r4, #16
 801b8aa:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b8ae:	fb01 3000 	mla	r0, r1, r0, r3
 801b8b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b8b4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801b8b8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801b8bc:	8858      	ldrh	r0, [r3, #2]
 801b8be:	f1be 0f00 	cmp.w	lr, #0
 801b8c2:	d00b      	beq.n	801b8dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801b8c4:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801b8c8:	3901      	subs	r1, #1
 801b8ca:	0049      	lsls	r1, r1, #1
 801b8cc:	3102      	adds	r1, #2
 801b8ce:	eb03 0b01 	add.w	fp, r3, r1
 801b8d2:	5a5b      	ldrh	r3, [r3, r1]
 801b8d4:	930e      	str	r3, [sp, #56]	@ 0x38
 801b8d6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801b8da:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b8dc:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801b8e0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801b8e4:	fb12 f30e 	smulbb	r3, r2, lr
 801b8e8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801b8ec:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801b8f0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b8f4:	10db      	asrs	r3, r3, #3
 801b8f6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b8fa:	ea41 010c 	orr.w	r1, r1, ip
 801b8fe:	f1ce 0c10 	rsb	ip, lr, #16
 801b902:	ea4b 0000 	orr.w	r0, fp, r0
 801b906:	9f08      	ldr	r7, [sp, #32]
 801b908:	ebac 0c02 	sub.w	ip, ip, r2
 801b90c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801b910:	f108 38ff 	add.w	r8, r8, #4294967295
 801b914:	4350      	muls	r0, r2
 801b916:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801b91a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b91c:	fb0c 0c01 	mla	ip, ip, r1, r0
 801b920:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801b922:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801b926:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801b92a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801b92c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b930:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b934:	0412      	lsls	r2, r2, #16
 801b936:	ea4b 0101 	orr.w	r1, fp, r1
 801b93a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b93e:	fb03 c101 	mla	r1, r3, r1, ip
 801b942:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801b946:	4302      	orrs	r2, r0
 801b948:	fb03 1202 	mla	r2, r3, r2, r1
 801b94c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801b950:	0952      	lsrs	r2, r2, #5
 801b952:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801b956:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801b95a:	f8b9 2000 	ldrh.w	r2, [r9]
 801b95e:	ea4b 0303 	orr.w	r3, fp, r3
 801b962:	1211      	asrs	r1, r2, #8
 801b964:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801b968:	b29b      	uxth	r3, r3
 801b96a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b96e:	00d2      	lsls	r2, r2, #3
 801b970:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801b974:	fb11 f107 	smulbb	r1, r1, r7
 801b978:	1218      	asrs	r0, r3, #8
 801b97a:	fb1c fc07 	smulbb	ip, ip, r7
 801b97e:	b2d2      	uxtb	r2, r2
 801b980:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b984:	fb12 f207 	smulbb	r2, r2, r7
 801b988:	fb00 100a 	mla	r0, r0, sl, r1
 801b98c:	10d9      	asrs	r1, r3, #3
 801b98e:	00db      	lsls	r3, r3, #3
 801b990:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b994:	b280      	uxth	r0, r0
 801b996:	b2db      	uxtb	r3, r3
 801b998:	fb01 c10a 	mla	r1, r1, sl, ip
 801b99c:	fb03 230a 	mla	r3, r3, sl, r2
 801b9a0:	1c42      	adds	r2, r0, #1
 801b9a2:	b289      	uxth	r1, r1
 801b9a4:	b29b      	uxth	r3, r3
 801b9a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b9aa:	f101 0c01 	add.w	ip, r1, #1
 801b9ae:	1c5a      	adds	r2, r3, #1
 801b9b0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b9b4:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801b9b8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b9bc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b9be:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b9c2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b9c6:	441c      	add	r4, r3
 801b9c8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801b9cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b9ce:	4310      	orrs	r0, r2
 801b9d0:	441e      	add	r6, r3
 801b9d2:	ea40 000c 	orr.w	r0, r0, ip
 801b9d6:	f829 0b02 	strh.w	r0, [r9], #2
 801b9da:	e6fa      	b.n	801b7d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801b9dc:	b013      	add	sp, #76	@ 0x4c
 801b9de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b9e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801b9e2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b9e6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801b9ea:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801b9ee:	fb0e 4703 	mla	r7, lr, r3, r4
 801b9f2:	f1be 0f00 	cmp.w	lr, #0
 801b9f6:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801b9fa:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801b9fe:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801ba02:	8808      	ldrh	r0, [r1, #0]
 801ba04:	db60      	blt.n	801bac8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801ba06:	45f1      	cmp	r9, lr
 801ba08:	dd5e      	ble.n	801bac8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801ba0a:	2c00      	cmp	r4, #0
 801ba0c:	db5a      	blt.n	801bac4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801ba0e:	42a3      	cmp	r3, r4
 801ba10:	dd58      	ble.n	801bac4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801ba12:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801ba16:	1c62      	adds	r2, r4, #1
 801ba18:	d459      	bmi.n	801bace <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ba1a:	4293      	cmp	r3, r2
 801ba1c:	dd57      	ble.n	801bace <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ba1e:	2d00      	cmp	r5, #0
 801ba20:	d055      	beq.n	801bace <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ba22:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801ba26:	f11e 0e01 	adds.w	lr, lr, #1
 801ba2a:	d454      	bmi.n	801bad6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ba2c:	45f1      	cmp	r9, lr
 801ba2e:	dd52      	ble.n	801bad6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ba30:	2e00      	cmp	r6, #0
 801ba32:	d050      	beq.n	801bad6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ba34:	2c00      	cmp	r4, #0
 801ba36:	db4c      	blt.n	801bad2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801ba38:	42a3      	cmp	r3, r4
 801ba3a:	dd4a      	ble.n	801bad2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801ba3c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801ba40:	3401      	adds	r4, #1
 801ba42:	d405      	bmi.n	801ba50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801ba44:	42a3      	cmp	r3, r4
 801ba46:	dd03      	ble.n	801ba50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801ba48:	b115      	cbz	r5, 801ba50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801ba4a:	3301      	adds	r3, #1
 801ba4c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801ba50:	fb15 f406 	smulbb	r4, r5, r6
 801ba54:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ba58:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ba5c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ba60:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ba64:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ba68:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801ba6c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ba70:	ea43 0c0c 	orr.w	ip, r3, ip
 801ba74:	f1c6 0310 	rsb	r3, r6, #16
 801ba78:	ea4e 0707 	orr.w	r7, lr, r7
 801ba7c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ba80:	1b5b      	subs	r3, r3, r5
 801ba82:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ba86:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ba8a:	437d      	muls	r5, r7
 801ba8c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ba90:	0403      	lsls	r3, r0, #16
 801ba92:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ba96:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ba9a:	4318      	orrs	r0, r3
 801ba9c:	0413      	lsls	r3, r2, #16
 801ba9e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801baa2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801baa6:	fb04 c000 	mla	r0, r4, r0, ip
 801baaa:	4313      	orrs	r3, r2
 801baac:	fb06 0003 	mla	r0, r6, r3, r0
 801bab0:	0d43      	lsrs	r3, r0, #21
 801bab2:	0940      	lsrs	r0, r0, #5
 801bab4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bab8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801babc:	4318      	orrs	r0, r3
 801babe:	8008      	strh	r0, [r1, #0]
 801bac0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801bac4:	4684      	mov	ip, r0
 801bac6:	e7a6      	b.n	801ba16 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801bac8:	4607      	mov	r7, r0
 801baca:	4684      	mov	ip, r0
 801bacc:	e7ab      	b.n	801ba26 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801bace:	4607      	mov	r7, r0
 801bad0:	e7a9      	b.n	801ba26 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801bad2:	4602      	mov	r2, r0
 801bad4:	e7b4      	b.n	801ba40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801bad6:	4602      	mov	r2, r0
 801bad8:	e7ba      	b.n	801ba50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801bada <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bada:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bade:	b08f      	sub	sp, #60	@ 0x3c
 801bae0:	461d      	mov	r5, r3
 801bae2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801bae4:	9107      	str	r1, [sp, #28]
 801bae6:	920c      	str	r2, [sp, #48]	@ 0x30
 801bae8:	6859      	ldr	r1, [r3, #4]
 801baea:	681b      	ldr	r3, [r3, #0]
 801baec:	900d      	str	r0, [sp, #52]	@ 0x34
 801baee:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801baf2:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801baf6:	fb01 2707 	mla	r7, r1, r7, r2
 801bafa:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801bafe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bb00:	f8d3 8000 	ldr.w	r8, [r3]
 801bb04:	9b07      	ldr	r3, [sp, #28]
 801bb06:	2b00      	cmp	r3, #0
 801bb08:	dc03      	bgt.n	801bb12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801bb0a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bb0c:	2b00      	cmp	r3, #0
 801bb0e:	f340 8182 	ble.w	801be16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801bb12:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bb14:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bb18:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bb1c:	1e48      	subs	r0, r1, #1
 801bb1e:	f102 3cff 	add.w	ip, r2, #4294967295
 801bb22:	2d00      	cmp	r5, #0
 801bb24:	f340 809b 	ble.w	801bc5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801bb28:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801bb2c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801bb30:	d406      	bmi.n	801bb40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bb32:	4586      	cmp	lr, r0
 801bb34:	da04      	bge.n	801bb40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bb36:	2b00      	cmp	r3, #0
 801bb38:	db02      	blt.n	801bb40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bb3a:	4563      	cmp	r3, ip
 801bb3c:	f2c0 8090 	blt.w	801bc60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bb40:	f11e 0e01 	adds.w	lr, lr, #1
 801bb44:	f100 8084 	bmi.w	801bc50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801bb48:	4571      	cmp	r1, lr
 801bb4a:	f2c0 8081 	blt.w	801bc50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801bb4e:	3301      	adds	r3, #1
 801bb50:	d47e      	bmi.n	801bc50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801bb52:	429a      	cmp	r2, r3
 801bb54:	db7c      	blt.n	801bc50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801bb56:	46aa      	mov	sl, r5
 801bb58:	46b9      	mov	r9, r7
 801bb5a:	f1ba 0f00 	cmp.w	sl, #0
 801bb5e:	f340 8099 	ble.w	801bc94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801bb62:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bb64:	1421      	asrs	r1, r4, #16
 801bb66:	ea4f 4026 	mov.w	r0, r6, asr #16
 801bb6a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801bb6e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801bb72:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801bb76:	f100 80d1 	bmi.w	801bd1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801bb7a:	f10e 3bff 	add.w	fp, lr, #4294967295
 801bb7e:	4559      	cmp	r1, fp
 801bb80:	f280 80cc 	bge.w	801bd1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801bb84:	2800      	cmp	r0, #0
 801bb86:	f2c0 80c9 	blt.w	801bd1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801bb8a:	f103 3bff 	add.w	fp, r3, #4294967295
 801bb8e:	4558      	cmp	r0, fp
 801bb90:	f280 80c4 	bge.w	801bd1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801bb94:	fa0f fe8e 	sxth.w	lr, lr
 801bb98:	fb00 110e 	mla	r1, r0, lr, r1
 801bb9c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801bba0:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801bba4:	8841      	ldrh	r1, [r0, #2]
 801bba6:	f1bc 0f00 	cmp.w	ip, #0
 801bbaa:	d00b      	beq.n	801bbc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801bbac:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801bbb0:	3b01      	subs	r3, #1
 801bbb2:	005b      	lsls	r3, r3, #1
 801bbb4:	3302      	adds	r3, #2
 801bbb6:	eb00 0e03 	add.w	lr, r0, r3
 801bbba:	5ac3      	ldrh	r3, [r0, r3]
 801bbbc:	9308      	str	r3, [sp, #32]
 801bbbe:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801bbc2:	9309      	str	r3, [sp, #36]	@ 0x24
 801bbc4:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801bbc8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801bbcc:	fb12 f30c 	smulbb	r3, r2, ip
 801bbd0:	f1cc 0e10 	rsb	lr, ip, #16
 801bbd4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801bbd8:	10db      	asrs	r3, r3, #3
 801bbda:	ebae 0e02 	sub.w	lr, lr, r2
 801bbde:	ea40 000b 	orr.w	r0, r0, fp
 801bbe2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801bbe6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801bbea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801bbee:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801bbf2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801bbf6:	ea4b 0101 	orr.w	r1, fp, r1
 801bbfa:	4351      	muls	r1, r2
 801bbfc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801bbfe:	fb0e 1e00 	mla	lr, lr, r0, r1
 801bc02:	0410      	lsls	r0, r2, #16
 801bc04:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801bc08:	9908      	ldr	r1, [sp, #32]
 801bc0a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801bc0e:	4310      	orrs	r0, r2
 801bc10:	9a08      	ldr	r2, [sp, #32]
 801bc12:	0412      	lsls	r2, r2, #16
 801bc14:	fb03 e000 	mla	r0, r3, r0, lr
 801bc18:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801bc1c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801bc20:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801bc24:	ea42 020e 	orr.w	r2, r2, lr
 801bc28:	fb03 0302 	mla	r3, r3, r2, r0
 801bc2c:	0d5a      	lsrs	r2, r3, #21
 801bc2e:	095b      	lsrs	r3, r3, #5
 801bc30:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bc34:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801bc38:	4313      	orrs	r3, r2
 801bc3a:	f8a9 3000 	strh.w	r3, [r9]
 801bc3e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801bc40:	f109 0902 	add.w	r9, r9, #2
 801bc44:	f10a 3aff 	add.w	sl, sl, #4294967295
 801bc48:	441c      	add	r4, r3
 801bc4a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bc4c:	441e      	add	r6, r3
 801bc4e:	e784      	b.n	801bb5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bc50:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801bc52:	3d01      	subs	r5, #1
 801bc54:	3702      	adds	r7, #2
 801bc56:	441c      	add	r4, r3
 801bc58:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bc5a:	441e      	add	r6, r3
 801bc5c:	e761      	b.n	801bb22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bc5e:	d01d      	beq.n	801bc9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801bc60:	1e6b      	subs	r3, r5, #1
 801bc62:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801bc64:	fb00 4003 	mla	r0, r0, r3, r4
 801bc68:	1400      	asrs	r0, r0, #16
 801bc6a:	f53f af74 	bmi.w	801bb56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bc6e:	3901      	subs	r1, #1
 801bc70:	4288      	cmp	r0, r1
 801bc72:	f6bf af70 	bge.w	801bb56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bc76:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801bc78:	fb01 6303 	mla	r3, r1, r3, r6
 801bc7c:	141b      	asrs	r3, r3, #16
 801bc7e:	f53f af6a 	bmi.w	801bb56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bc82:	3a01      	subs	r2, #1
 801bc84:	4293      	cmp	r3, r2
 801bc86:	f6bf af66 	bge.w	801bb56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bc8a:	46a9      	mov	r9, r5
 801bc8c:	46ba      	mov	sl, r7
 801bc8e:	f1b9 0f00 	cmp.w	r9, #0
 801bc92:	dc5b      	bgt.n	801bd4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801bc94:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801bc98:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801bc9c:	9b07      	ldr	r3, [sp, #28]
 801bc9e:	2b00      	cmp	r3, #0
 801bca0:	f340 80b9 	ble.w	801be16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801bca4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801bca8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801bcaa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bcae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bcb2:	eef0 6a62 	vmov.f32	s13, s5
 801bcb6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bcba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bcbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bcc2:	ee16 4a90 	vmov	r4, s13
 801bcc6:	eef0 6a43 	vmov.f32	s13, s6
 801bcca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bcce:	ee16 6a90 	vmov	r6, s13
 801bcd2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bcd6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bcda:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bcde:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bce2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bce6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bcea:	ee12 2a90 	vmov	r2, s5
 801bcee:	eef0 2a47 	vmov.f32	s5, s14
 801bcf2:	fb92 f3f3 	sdiv	r3, r2, r3
 801bcf6:	ee13 2a10 	vmov	r2, s6
 801bcfa:	931b      	str	r3, [sp, #108]	@ 0x6c
 801bcfc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801bcfe:	eeb0 3a67 	vmov.f32	s6, s15
 801bd02:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd06:	931c      	str	r3, [sp, #112]	@ 0x70
 801bd08:	9b07      	ldr	r3, [sp, #28]
 801bd0a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801bd0c:	3b01      	subs	r3, #1
 801bd0e:	9307      	str	r3, [sp, #28]
 801bd10:	bf08      	it	eq
 801bd12:	4615      	moveq	r5, r2
 801bd14:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801bd16:	bf18      	it	ne
 801bd18:	461d      	movne	r5, r3
 801bd1a:	e6f3      	b.n	801bb04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801bd1c:	f111 0b01 	adds.w	fp, r1, #1
 801bd20:	d48d      	bmi.n	801bc3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bd22:	45de      	cmp	lr, fp
 801bd24:	db8b      	blt.n	801bc3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bd26:	f110 0b01 	adds.w	fp, r0, #1
 801bd2a:	d488      	bmi.n	801bc3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bd2c:	455b      	cmp	r3, fp
 801bd2e:	db86      	blt.n	801bc3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bd30:	b21b      	sxth	r3, r3
 801bd32:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801bd36:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801bd3a:	9300      	str	r3, [sp, #0]
 801bd3c:	4642      	mov	r2, r8
 801bd3e:	fa0f f38e 	sxth.w	r3, lr
 801bd42:	4649      	mov	r1, r9
 801bd44:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801bd46:	f7ff fe4c 	bl	801b9e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801bd4a:	e778      	b.n	801bc3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bd4c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bd4e:	1420      	asrs	r0, r4, #16
 801bd50:	1431      	asrs	r1, r6, #16
 801bd52:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801bd56:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801bd5a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801bd5e:	fb03 0101 	mla	r1, r3, r1, r0
 801bd62:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801bd66:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801bd6a:	8841      	ldrh	r1, [r0, #2]
 801bd6c:	f1be 0f00 	cmp.w	lr, #0
 801bd70:	d00b      	beq.n	801bd8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801bd72:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801bd76:	3b01      	subs	r3, #1
 801bd78:	005b      	lsls	r3, r3, #1
 801bd7a:	3302      	adds	r3, #2
 801bd7c:	eb00 0b03 	add.w	fp, r0, r3
 801bd80:	5ac3      	ldrh	r3, [r0, r3]
 801bd82:	930a      	str	r3, [sp, #40]	@ 0x28
 801bd84:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801bd88:	930b      	str	r3, [sp, #44]	@ 0x2c
 801bd8a:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801bd8e:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801bd92:	fb12 f30e 	smulbb	r3, r2, lr
 801bd96:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801bd9a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801bd9e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801bda2:	10db      	asrs	r3, r3, #3
 801bda4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801bda8:	ea40 000c 	orr.w	r0, r0, ip
 801bdac:	f1ce 0c10 	rsb	ip, lr, #16
 801bdb0:	ea4b 0101 	orr.w	r1, fp, r1
 801bdb4:	f109 39ff 	add.w	r9, r9, #4294967295
 801bdb8:	ebac 0c02 	sub.w	ip, ip, r2
 801bdbc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801bdc0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801bdc4:	4351      	muls	r1, r2
 801bdc6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bdc8:	fb0c 1c00 	mla	ip, ip, r0, r1
 801bdcc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801bdce:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801bdd2:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801bdd6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801bdd8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801bddc:	0412      	lsls	r2, r2, #16
 801bdde:	ea4b 0000 	orr.w	r0, fp, r0
 801bde2:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801bde6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801bdea:	fb03 c000 	mla	r0, r3, r0, ip
 801bdee:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801bdf2:	ea42 0b0b 	orr.w	fp, r2, fp
 801bdf6:	fb03 000b 	mla	r0, r3, fp, r0
 801bdfa:	0d43      	lsrs	r3, r0, #21
 801bdfc:	0940      	lsrs	r0, r0, #5
 801bdfe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801be02:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801be06:	4318      	orrs	r0, r3
 801be08:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801be0a:	441c      	add	r4, r3
 801be0c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801be0e:	f82a 0b02 	strh.w	r0, [sl], #2
 801be12:	441e      	add	r6, r3
 801be14:	e73b      	b.n	801bc8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801be16:	b00f      	add	sp, #60	@ 0x3c
 801be18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801be1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801be1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be20:	b085      	sub	sp, #20
 801be22:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801be26:	9102      	str	r1, [sp, #8]
 801be28:	2c00      	cmp	r4, #0
 801be2a:	fb04 7103 	mla	r1, r4, r3, r7
 801be2e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801be32:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801be36:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801be3a:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801be3e:	f2c0 811b 	blt.w	801c078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801be42:	45a6      	cmp	lr, r4
 801be44:	f340 8118 	ble.w	801c078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801be48:	2f00      	cmp	r7, #0
 801be4a:	f2c0 8113 	blt.w	801c074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801be4e:	42bb      	cmp	r3, r7
 801be50:	f340 8110 	ble.w	801c074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801be54:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801be58:	1c7a      	adds	r2, r7, #1
 801be5a:	f100 8110 	bmi.w	801c07e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801be5e:	4293      	cmp	r3, r2
 801be60:	f340 810d 	ble.w	801c07e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801be64:	2e00      	cmp	r6, #0
 801be66:	f000 810c 	beq.w	801c082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801be6a:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801be6e:	3401      	adds	r4, #1
 801be70:	f100 810b 	bmi.w	801c08a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801be74:	45a6      	cmp	lr, r4
 801be76:	f340 8108 	ble.w	801c08a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801be7a:	2800      	cmp	r0, #0
 801be7c:	f000 8108 	beq.w	801c090 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801be80:	2f00      	cmp	r7, #0
 801be82:	f2c0 8100 	blt.w	801c086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801be86:	42bb      	cmp	r3, r7
 801be88:	f340 80fd 	ble.w	801c086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801be8c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801be90:	3701      	adds	r7, #1
 801be92:	f100 8100 	bmi.w	801c096 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801be96:	42bb      	cmp	r3, r7
 801be98:	f340 80fd 	ble.w	801c096 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801be9c:	2e00      	cmp	r6, #0
 801be9e:	f000 80fc 	beq.w	801c09a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801bea2:	3301      	adds	r3, #1
 801bea4:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801bea8:	b2b6      	uxth	r6, r6
 801beaa:	b280      	uxth	r0, r0
 801beac:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801beb0:	fb00 fe06 	mul.w	lr, r0, r6
 801beb4:	0136      	lsls	r6, r6, #4
 801beb6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801beba:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801bebe:	eba6 070e 	sub.w	r7, r6, lr
 801bec2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801bec6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801beca:	b280      	uxth	r0, r0
 801becc:	b2bf      	uxth	r7, r7
 801bece:	1a1b      	subs	r3, r3, r0
 801bed0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801bed4:	fb0a f607 	mul.w	r6, sl, r7
 801bed8:	b29b      	uxth	r3, r3
 801beda:	fb0b 6603 	mla	r6, fp, r3, r6
 801bede:	fb00 6609 	mla	r6, r0, r9, r6
 801bee2:	fb0e 6608 	mla	r6, lr, r8, r6
 801bee6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801beea:	9600      	str	r6, [sp, #0]
 801beec:	2e00      	cmp	r6, #0
 801beee:	f000 80be 	beq.w	801c06e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801bef2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801bef6:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801befa:	9e02      	ldr	r6, [sp, #8]
 801befc:	fb0b fc0c 	mul.w	ip, fp, ip
 801bf00:	fb0b f505 	mul.w	r5, fp, r5
 801bf04:	8836      	ldrh	r6, [r6, #0]
 801bf06:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801bf0a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bf0e:	9501      	str	r5, [sp, #4]
 801bf10:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801bf14:	44dc      	add	ip, fp
 801bf16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf1a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801bf1e:	9503      	str	r5, [sp, #12]
 801bf20:	9d01      	ldr	r5, [sp, #4]
 801bf22:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801bf26:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801bf2a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801bf2e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bf32:	fb0a fc0c 	mul.w	ip, sl, ip
 801bf36:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801bf3a:	fb0a fa01 	mul.w	sl, sl, r1
 801bf3e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801bf42:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bf46:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801bf4a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bf4e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801bf52:	4465      	add	r5, ip
 801bf54:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bf58:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801bf5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf60:	fb09 fc0c 	mul.w	ip, r9, ip
 801bf64:	0a2d      	lsrs	r5, r5, #8
 801bf66:	fb09 f904 	mul.w	r9, r9, r4
 801bf6a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bf6e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801bf72:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bf76:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801bf7a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bf7e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801bf82:	437d      	muls	r5, r7
 801bf84:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801bf88:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801bf8c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801bf90:	4461      	add	r1, ip
 801bf92:	fb08 f404 	mul.w	r4, r8, r4
 801bf96:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bf9a:	fb08 f802 	mul.w	r8, r8, r2
 801bf9e:	0a09      	lsrs	r1, r1, #8
 801bfa0:	0a22      	lsrs	r2, r4, #8
 801bfa2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801bfa6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801bfaa:	fb07 f70a 	mul.w	r7, r7, sl
 801bfae:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801bfb2:	4414      	add	r4, r2
 801bfb4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801bfb8:	0a24      	lsrs	r4, r4, #8
 801bfba:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801bfbe:	9a03      	ldr	r2, [sp, #12]
 801bfc0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801bfc4:	fb02 5503 	mla	r5, r2, r3, r5
 801bfc8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801bfcc:	9a00      	ldr	r2, [sp, #0]
 801bfce:	fb04 540e 	mla	r4, r4, lr, r5
 801bfd2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801bfd6:	1235      	asrs	r5, r6, #8
 801bfd8:	fb01 4100 	mla	r1, r1, r0, r4
 801bfdc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801bfe0:	0a09      	lsrs	r1, r1, #8
 801bfe2:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801bfe6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801bfea:	fb03 7101 	mla	r1, r3, r1, r7
 801bfee:	fb0e 1e08 	mla	lr, lr, r8, r1
 801bff2:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801bff6:	fb00 e101 	mla	r1, r0, r1, lr
 801bffa:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801bffe:	b287      	uxth	r7, r0
 801c000:	0a09      	lsrs	r1, r1, #8
 801c002:	437a      	muls	r2, r7
 801c004:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c008:	1c53      	adds	r3, r2, #1
 801c00a:	4321      	orrs	r1, r4
 801c00c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c010:	0c0a      	lsrs	r2, r1, #16
 801c012:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801c016:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801c01a:	b2c8      	uxtb	r0, r1
 801c01c:	fb12 f207 	smulbb	r2, r2, r7
 801c020:	fb14 f407 	smulbb	r4, r4, r7
 801c024:	b2db      	uxtb	r3, r3
 801c026:	fb10 f007 	smulbb	r0, r0, r7
 801c02a:	fb05 2503 	mla	r5, r5, r3, r2
 801c02e:	10f2      	asrs	r2, r6, #3
 801c030:	00f6      	lsls	r6, r6, #3
 801c032:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c036:	b2ad      	uxth	r5, r5
 801c038:	b2f6      	uxtb	r6, r6
 801c03a:	fb02 4203 	mla	r2, r2, r3, r4
 801c03e:	fb06 0303 	mla	r3, r6, r3, r0
 801c042:	b294      	uxth	r4, r2
 801c044:	b299      	uxth	r1, r3
 801c046:	1c6b      	adds	r3, r5, #1
 801c048:	1c62      	adds	r2, r4, #1
 801c04a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c04e:	1c4b      	adds	r3, r1, #1
 801c050:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801c054:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c058:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c05c:	0952      	lsrs	r2, r2, #5
 801c05e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c062:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c066:	432b      	orrs	r3, r5
 801c068:	4313      	orrs	r3, r2
 801c06a:	9a02      	ldr	r2, [sp, #8]
 801c06c:	8013      	strh	r3, [r2, #0]
 801c06e:	b005      	add	sp, #20
 801c070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c074:	2500      	movs	r5, #0
 801c076:	e6ef      	b.n	801be58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801c078:	2100      	movs	r1, #0
 801c07a:	460d      	mov	r5, r1
 801c07c:	e6f7      	b.n	801be6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801c07e:	2100      	movs	r1, #0
 801c080:	e6f5      	b.n	801be6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801c082:	4631      	mov	r1, r6
 801c084:	e6f3      	b.n	801be6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801c086:	2400      	movs	r4, #0
 801c088:	e702      	b.n	801be90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801c08a:	2200      	movs	r2, #0
 801c08c:	4614      	mov	r4, r2
 801c08e:	e70b      	b.n	801bea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801c090:	4602      	mov	r2, r0
 801c092:	4604      	mov	r4, r0
 801c094:	e708      	b.n	801bea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801c096:	2200      	movs	r2, #0
 801c098:	e706      	b.n	801bea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801c09a:	4632      	mov	r2, r6
 801c09c:	e704      	b.n	801bea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801c09e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c09e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0a2:	b09d      	sub	sp, #116	@ 0x74
 801c0a4:	9219      	str	r2, [sp, #100]	@ 0x64
 801c0a6:	9307      	str	r3, [sp, #28]
 801c0a8:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801c0aa:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801c0ae:	901b      	str	r0, [sp, #108]	@ 0x6c
 801c0b0:	931a      	str	r3, [sp, #104]	@ 0x68
 801c0b2:	6850      	ldr	r0, [r2, #4]
 801c0b4:	9117      	str	r1, [sp, #92]	@ 0x5c
 801c0b6:	6812      	ldr	r2, [r2, #0]
 801c0b8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801c0bc:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801c0c0:	fb00 1303 	mla	r3, r0, r3, r1
 801c0c4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c0c8:	930a      	str	r3, [sp, #40]	@ 0x28
 801c0ca:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801c0cc:	681b      	ldr	r3, [r3, #0]
 801c0ce:	9310      	str	r3, [sp, #64]	@ 0x40
 801c0d0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801c0d4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c0d6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c0d8:	2b00      	cmp	r3, #0
 801c0da:	dc03      	bgt.n	801c0e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801c0dc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801c0de:	2b00      	cmp	r3, #0
 801c0e0:	f340 8375 	ble.w	801c7ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801c0e4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801c0e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c0ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c0ee:	1e48      	subs	r0, r1, #1
 801c0f0:	1e57      	subs	r7, r2, #1
 801c0f2:	9b07      	ldr	r3, [sp, #28]
 801c0f4:	2b00      	cmp	r3, #0
 801c0f6:	f340 818e 	ble.w	801c416 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801c0fa:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c0fe:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c102:	d406      	bmi.n	801c112 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c104:	4584      	cmp	ip, r0
 801c106:	da04      	bge.n	801c112 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c108:	2b00      	cmp	r3, #0
 801c10a:	db02      	blt.n	801c112 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c10c:	42bb      	cmp	r3, r7
 801c10e:	f2c0 8183 	blt.w	801c418 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801c112:	f11c 0c01 	adds.w	ip, ip, #1
 801c116:	f100 8173 	bmi.w	801c400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c11a:	4561      	cmp	r1, ip
 801c11c:	f2c0 8170 	blt.w	801c400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c120:	3301      	adds	r3, #1
 801c122:	f100 816d 	bmi.w	801c400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c126:	429a      	cmp	r2, r3
 801c128:	f2c0 816a 	blt.w	801c400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c12c:	9b07      	ldr	r3, [sp, #28]
 801c12e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801c130:	9318      	str	r3, [sp, #96]	@ 0x60
 801c132:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c134:	2b00      	cmp	r3, #0
 801c136:	f340 818c 	ble.w	801c452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801c13a:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801c13c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801c140:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801c142:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801c146:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801c14a:	1422      	asrs	r2, r4, #16
 801c14c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c150:	689b      	ldr	r3, [r3, #8]
 801c152:	f100 81cd 	bmi.w	801c4f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c156:	f103 38ff 	add.w	r8, r3, #4294967295
 801c15a:	4542      	cmp	r2, r8
 801c15c:	f280 81c8 	bge.w	801c4f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c160:	f1bc 0f00 	cmp.w	ip, #0
 801c164:	f2c0 81c4 	blt.w	801c4f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c168:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c16c:	45c4      	cmp	ip, r8
 801c16e:	f280 81bf 	bge.w	801c4f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c172:	b21b      	sxth	r3, r3
 801c174:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c176:	fb0c 2203 	mla	r2, ip, r3, r2
 801c17a:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801c17e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801c182:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801c186:	2800      	cmp	r0, #0
 801c188:	f000 81a9 	beq.w	801c4de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801c18c:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801c190:	950c      	str	r5, [sp, #48]	@ 0x30
 801c192:	0e2d      	lsrs	r5, r5, #24
 801c194:	9513      	str	r5, [sp, #76]	@ 0x4c
 801c196:	b181      	cbz	r1, 801c1ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c198:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801c19c:	3b01      	subs	r3, #1
 801c19e:	009b      	lsls	r3, r3, #2
 801c1a0:	3304      	adds	r3, #4
 801c1a2:	eb08 0c03 	add.w	ip, r8, r3
 801c1a6:	f858 3003 	ldr.w	r3, [r8, r3]
 801c1aa:	9308      	str	r3, [sp, #32]
 801c1ac:	0e1b      	lsrs	r3, r3, #24
 801c1ae:	9311      	str	r3, [sp, #68]	@ 0x44
 801c1b0:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801c1b4:	930d      	str	r3, [sp, #52]	@ 0x34
 801c1b6:	0e1b      	lsrs	r3, r3, #24
 801c1b8:	9314      	str	r3, [sp, #80]	@ 0x50
 801c1ba:	b280      	uxth	r0, r0
 801c1bc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c1be:	b289      	uxth	r1, r1
 801c1c0:	fb00 f901 	mul.w	r9, r0, r1
 801c1c4:	0100      	lsls	r0, r0, #4
 801c1c6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c1ca:	eba0 0809 	sub.w	r8, r0, r9
 801c1ce:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801c1d2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801c1d4:	b289      	uxth	r1, r1
 801c1d6:	fa1f f888 	uxth.w	r8, r8
 801c1da:	1a5b      	subs	r3, r3, r1
 801c1dc:	fb08 f000 	mul.w	r0, r8, r0
 801c1e0:	b29b      	uxth	r3, r3
 801c1e2:	fb03 000e 	mla	r0, r3, lr, r0
 801c1e6:	fb01 0005 	mla	r0, r1, r5, r0
 801c1ea:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c1ec:	fb09 0005 	mla	r0, r9, r5, r0
 801c1f0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801c1f4:	2800      	cmp	r0, #0
 801c1f6:	f000 80fa 	beq.w	801c3ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c1fa:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801c1fe:	d01b      	beq.n	801c238 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801c200:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801c204:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801c208:	fb0e fa0a 	mul.w	sl, lr, sl
 801c20c:	fb0e fe02 	mul.w	lr, lr, r2
 801c210:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801c214:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c218:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801c21c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801c220:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c224:	4452      	add	r2, sl
 801c226:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c22a:	0a12      	lsrs	r2, r2, #8
 801c22c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c230:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801c234:	ea42 020c 	orr.w	r2, r2, ip
 801c238:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801c23a:	2dff      	cmp	r5, #255	@ 0xff
 801c23c:	d021      	beq.n	801c282 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801c23e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801c240:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801c244:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801c246:	fb05 fb0b 	mul.w	fp, r5, fp
 801c24a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801c24c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c250:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801c252:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c256:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c25a:	fb05 fa0a 	mul.w	sl, r5, sl
 801c25e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c262:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c266:	44de      	add	lr, fp
 801c268:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c26c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c270:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c274:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c278:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c27c:	ea4e 050a 	orr.w	r5, lr, sl
 801c280:	950c      	str	r5, [sp, #48]	@ 0x30
 801c282:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c284:	2dff      	cmp	r5, #255	@ 0xff
 801c286:	d021      	beq.n	801c2cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801c288:	9d08      	ldr	r5, [sp, #32]
 801c28a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801c28e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c290:	fb05 fb0b 	mul.w	fp, r5, fp
 801c294:	9d08      	ldr	r5, [sp, #32]
 801c296:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c29a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c29c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c2a0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c2a4:	fb05 fa0a 	mul.w	sl, r5, sl
 801c2a8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c2ac:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c2b0:	44de      	add	lr, fp
 801c2b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c2b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c2ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c2be:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c2c2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c2c6:	ea4e 050a 	orr.w	r5, lr, sl
 801c2ca:	9508      	str	r5, [sp, #32]
 801c2cc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c2ce:	2dff      	cmp	r5, #255	@ 0xff
 801c2d0:	d021      	beq.n	801c316 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801c2d2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c2d4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801c2d8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c2da:	fb05 fb0b 	mul.w	fp, r5, fp
 801c2de:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c2e0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c2e4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c2e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c2ea:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c2ee:	fb05 fa0a 	mul.w	sl, r5, sl
 801c2f2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c2f6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c2fa:	44de      	add	lr, fp
 801c2fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c300:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c304:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c308:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c30c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c310:	ea4e 050a 	orr.w	r5, lr, sl
 801c314:	950d      	str	r5, [sp, #52]	@ 0x34
 801c316:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801c318:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801c31c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801c320:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c324:	9d08      	ldr	r5, [sp, #32]
 801c326:	fb08 fc0c 	mul.w	ip, r8, ip
 801c32a:	fb03 cc0e 	mla	ip, r3, lr, ip
 801c32e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801c332:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c334:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c338:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801c33c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801c33e:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c342:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801c346:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801c348:	fb08 f80e 	mul.w	r8, r8, lr
 801c34c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c350:	fb03 8202 	mla	r2, r3, r2, r8
 801c354:	9b08      	ldr	r3, [sp, #32]
 801c356:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c35a:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801c35e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c360:	fb01 220a 	mla	r2, r1, sl, r2
 801c364:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801c368:	883b      	ldrh	r3, [r7, #0]
 801c36a:	fb09 2901 	mla	r9, r9, r1, r2
 801c36e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c370:	1219      	asrs	r1, r3, #8
 801c372:	4342      	muls	r2, r0
 801c374:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c378:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801c37c:	1c50      	adds	r0, r2, #1
 801c37e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c382:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801c386:	ea4c 0c09 	orr.w	ip, ip, r9
 801c38a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801c38e:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801c392:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801c396:	fa5f fc8c 	uxtb.w	ip, ip
 801c39a:	fb12 f205 	smulbb	r2, r2, r5
 801c39e:	b2c0      	uxtb	r0, r0
 801c3a0:	fb1c fc05 	smulbb	ip, ip, r5
 801c3a4:	fb01 2100 	mla	r1, r1, r0, r2
 801c3a8:	10da      	asrs	r2, r3, #3
 801c3aa:	fb1e fe05 	smulbb	lr, lr, r5
 801c3ae:	00db      	lsls	r3, r3, #3
 801c3b0:	b289      	uxth	r1, r1
 801c3b2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c3b6:	b2db      	uxtb	r3, r3
 801c3b8:	fb02 e200 	mla	r2, r2, r0, lr
 801c3bc:	fb03 c300 	mla	r3, r3, r0, ip
 801c3c0:	b292      	uxth	r2, r2
 801c3c2:	fa1f fc83 	uxth.w	ip, r3
 801c3c6:	1c4b      	adds	r3, r1, #1
 801c3c8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c3cc:	f10c 0301 	add.w	r3, ip, #1
 801c3d0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801c3d4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801c3d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c3dc:	430b      	orrs	r3, r1
 801c3de:	1c51      	adds	r1, r2, #1
 801c3e0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c3e4:	0952      	lsrs	r2, r2, #5
 801c3e6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c3ea:	4313      	orrs	r3, r2
 801c3ec:	803b      	strh	r3, [r7, #0]
 801c3ee:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c3f0:	3702      	adds	r7, #2
 801c3f2:	441c      	add	r4, r3
 801c3f4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c3f6:	441e      	add	r6, r3
 801c3f8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c3fa:	3b01      	subs	r3, #1
 801c3fc:	9318      	str	r3, [sp, #96]	@ 0x60
 801c3fe:	e698      	b.n	801c132 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c400:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c402:	441c      	add	r4, r3
 801c404:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c406:	441e      	add	r6, r3
 801c408:	9b07      	ldr	r3, [sp, #28]
 801c40a:	3b01      	subs	r3, #1
 801c40c:	9307      	str	r3, [sp, #28]
 801c40e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c410:	3302      	adds	r3, #2
 801c412:	930a      	str	r3, [sp, #40]	@ 0x28
 801c414:	e66d      	b.n	801c0f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801c416:	d023      	beq.n	801c460 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801c418:	9b07      	ldr	r3, [sp, #28]
 801c41a:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801c41c:	3b01      	subs	r3, #1
 801c41e:	fb00 4003 	mla	r0, r0, r3, r4
 801c422:	1400      	asrs	r0, r0, #16
 801c424:	f53f ae82 	bmi.w	801c12c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c428:	3901      	subs	r1, #1
 801c42a:	4288      	cmp	r0, r1
 801c42c:	f6bf ae7e 	bge.w	801c12c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c430:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801c432:	fb01 6303 	mla	r3, r1, r3, r6
 801c436:	141b      	asrs	r3, r3, #16
 801c438:	f53f ae78 	bmi.w	801c12c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c43c:	3a01      	subs	r2, #1
 801c43e:	4293      	cmp	r3, r2
 801c440:	f6bf ae74 	bge.w	801c12c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c444:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c448:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801c44c:	f1bb 0f00 	cmp.w	fp, #0
 801c450:	dc6c      	bgt.n	801c52c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801c452:	9b07      	ldr	r3, [sp, #28]
 801c454:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801c458:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c45a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801c45e:	930a      	str	r3, [sp, #40]	@ 0x28
 801c460:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c462:	2b00      	cmp	r3, #0
 801c464:	f340 81b3 	ble.w	801c7ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801c468:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c46c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c46e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c472:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c476:	eef0 6a62 	vmov.f32	s13, s5
 801c47a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c47e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c482:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c486:	ee16 4a90 	vmov	r4, s13
 801c48a:	eef0 6a43 	vmov.f32	s13, s6
 801c48e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c492:	ee16 6a90 	vmov	r6, s13
 801c496:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c49a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c49e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c4a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c4a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c4aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c4ae:	ee12 2a90 	vmov	r2, s5
 801c4b2:	eef0 2a47 	vmov.f32	s5, s14
 801c4b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4ba:	ee13 2a10 	vmov	r2, s6
 801c4be:	9329      	str	r3, [sp, #164]	@ 0xa4
 801c4c0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c4c2:	eeb0 3a67 	vmov.f32	s6, s15
 801c4c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4ca:	932a      	str	r3, [sp, #168]	@ 0xa8
 801c4cc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c4ce:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801c4d0:	3b01      	subs	r3, #1
 801c4d2:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c4d4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c4d6:	bf08      	it	eq
 801c4d8:	4613      	moveq	r3, r2
 801c4da:	9307      	str	r3, [sp, #28]
 801c4dc:	e5fb      	b.n	801c0d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c4de:	2900      	cmp	r1, #0
 801c4e0:	f43f ae6b 	beq.w	801c1ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c4e4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801c4e8:	9308      	str	r3, [sp, #32]
 801c4ea:	0e1b      	lsrs	r3, r3, #24
 801c4ec:	9311      	str	r3, [sp, #68]	@ 0x44
 801c4ee:	e664      	b.n	801c1ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c4f0:	f112 0801 	adds.w	r8, r2, #1
 801c4f4:	f53f af7b 	bmi.w	801c3ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c4f8:	4543      	cmp	r3, r8
 801c4fa:	f6ff af78 	blt.w	801c3ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c4fe:	f11c 0801 	adds.w	r8, ip, #1
 801c502:	f53f af74 	bmi.w	801c3ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c506:	45c6      	cmp	lr, r8
 801c508:	f6ff af71 	blt.w	801c3ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c50c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801c50e:	b21b      	sxth	r3, r3
 801c510:	9201      	str	r2, [sp, #4]
 801c512:	fa0f f28e 	sxth.w	r2, lr
 801c516:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801c51a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801c51e:	9200      	str	r2, [sp, #0]
 801c520:	4639      	mov	r1, r7
 801c522:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c524:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801c526:	f7ff fc79 	bl	801be1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801c52a:	e760      	b.n	801c3ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c52c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801c52e:	1427      	asrs	r7, r4, #16
 801c530:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c532:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c536:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c53a:	1433      	asrs	r3, r6, #16
 801c53c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c540:	fb01 7303 	mla	r3, r1, r3, r7
 801c544:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801c548:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801c54c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c550:	2a00      	cmp	r2, #0
 801c552:	f000 8133 	beq.w	801c7bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801c556:	687d      	ldr	r5, [r7, #4]
 801c558:	950e      	str	r5, [sp, #56]	@ 0x38
 801c55a:	0e2d      	lsrs	r5, r5, #24
 801c55c:	9515      	str	r5, [sp, #84]	@ 0x54
 801c55e:	b178      	cbz	r0, 801c580 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801c560:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801c564:	3901      	subs	r1, #1
 801c566:	0089      	lsls	r1, r1, #2
 801c568:	3104      	adds	r1, #4
 801c56a:	eb07 0e01 	add.w	lr, r7, r1
 801c56e:	5879      	ldr	r1, [r7, r1]
 801c570:	9109      	str	r1, [sp, #36]	@ 0x24
 801c572:	0e09      	lsrs	r1, r1, #24
 801c574:	9112      	str	r1, [sp, #72]	@ 0x48
 801c576:	f8de 1004 	ldr.w	r1, [lr, #4]
 801c57a:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c57c:	0e09      	lsrs	r1, r1, #24
 801c57e:	9116      	str	r1, [sp, #88]	@ 0x58
 801c580:	b292      	uxth	r2, r2
 801c582:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801c584:	b280      	uxth	r0, r0
 801c586:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c588:	fb02 f800 	mul.w	r8, r2, r0
 801c58c:	0112      	lsls	r2, r2, #4
 801c58e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c592:	eba2 0e08 	sub.w	lr, r2, r8
 801c596:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c59a:	b280      	uxth	r0, r0
 801c59c:	fa1f fe8e 	uxth.w	lr, lr
 801c5a0:	1a12      	subs	r2, r2, r0
 801c5a2:	fb0e f101 	mul.w	r1, lr, r1
 801c5a6:	b292      	uxth	r2, r2
 801c5a8:	fb02 110c 	mla	r1, r2, ip, r1
 801c5ac:	fb00 1105 	mla	r1, r0, r5, r1
 801c5b0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c5b2:	fb08 1105 	mla	r1, r8, r5, r1
 801c5b6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c5ba:	2900      	cmp	r1, #0
 801c5bc:	f000 80f5 	beq.w	801c7aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801c5c0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801c5c4:	d019      	beq.n	801c5fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801c5c6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c5ca:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c5ce:	fb0c fa0a 	mul.w	sl, ip, sl
 801c5d2:	fb0c fc03 	mul.w	ip, ip, r3
 801c5d6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c5da:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c5de:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801c5e2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c5e6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c5ea:	4453      	add	r3, sl
 801c5ec:	0a3f      	lsrs	r7, r7, #8
 801c5ee:	0a1b      	lsrs	r3, r3, #8
 801c5f0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c5f4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c5f8:	433b      	orrs	r3, r7
 801c5fa:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801c5fc:	2dff      	cmp	r5, #255	@ 0xff
 801c5fe:	d020      	beq.n	801c642 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801c600:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c602:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c606:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801c608:	436f      	muls	r7, r5
 801c60a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c60c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c610:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c614:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801c616:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c61a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c61e:	fb05 fa0a 	mul.w	sl, r5, sl
 801c622:	44bc      	add	ip, r7
 801c624:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c628:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c62c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c630:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c634:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c638:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c63c:	ea4c 050a 	orr.w	r5, ip, sl
 801c640:	950e      	str	r5, [sp, #56]	@ 0x38
 801c642:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c644:	2dff      	cmp	r5, #255	@ 0xff
 801c646:	d020      	beq.n	801c68a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801c648:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c64a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c64e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c650:	436f      	muls	r7, r5
 801c652:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c654:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c658:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c65c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c65e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c662:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c666:	fb05 fa0a 	mul.w	sl, r5, sl
 801c66a:	44bc      	add	ip, r7
 801c66c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c670:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c674:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c678:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c67c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c680:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c684:	ea4c 050a 	orr.w	r5, ip, sl
 801c688:	9509      	str	r5, [sp, #36]	@ 0x24
 801c68a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c68c:	2dff      	cmp	r5, #255	@ 0xff
 801c68e:	d020      	beq.n	801c6d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801c690:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c692:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c696:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c698:	436f      	muls	r7, r5
 801c69a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c69c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c6a0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c6a4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c6a6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c6aa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c6ae:	fb05 fa0a 	mul.w	sl, r5, sl
 801c6b2:	44bc      	add	ip, r7
 801c6b4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c6b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c6bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c6c0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c6c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c6c8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c6cc:	ea4c 050a 	orr.w	r5, ip, sl
 801c6d0:	950f      	str	r5, [sp, #60]	@ 0x3c
 801c6d2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c6d4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c6d8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c6dc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c6e0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c6e2:	fb0e f707 	mul.w	r7, lr, r7
 801c6e6:	fb02 770c 	mla	r7, r2, ip, r7
 801c6ea:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c6ee:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c6f0:	fb00 770c 	mla	r7, r0, ip, r7
 801c6f4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c6f8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c6fa:	fb08 770c 	mla	r7, r8, ip, r7
 801c6fe:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801c702:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801c704:	fb0e fe0c 	mul.w	lr, lr, ip
 801c708:	0a3f      	lsrs	r7, r7, #8
 801c70a:	fb02 e303 	mla	r3, r2, r3, lr
 801c70e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c710:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c714:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c718:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c71a:	fb00 330a 	mla	r3, r0, sl, r3
 801c71e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801c722:	f8b9 0000 	ldrh.w	r0, [r9]
 801c726:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c72a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c72c:	1202      	asrs	r2, r0, #8
 801c72e:	4359      	muls	r1, r3
 801c730:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c734:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c738:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c73c:	1c4b      	adds	r3, r1, #1
 801c73e:	ea47 070c 	orr.w	r7, r7, ip
 801c742:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c746:	0c3b      	lsrs	r3, r7, #16
 801c748:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801c74c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801c750:	b2ff      	uxtb	r7, r7
 801c752:	fb13 f305 	smulbb	r3, r3, r5
 801c756:	b2c9      	uxtb	r1, r1
 801c758:	fb17 f705 	smulbb	r7, r7, r5
 801c75c:	fb02 3201 	mla	r2, r2, r1, r3
 801c760:	10c3      	asrs	r3, r0, #3
 801c762:	fb1c fc05 	smulbb	ip, ip, r5
 801c766:	00c0      	lsls	r0, r0, #3
 801c768:	b292      	uxth	r2, r2
 801c76a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c76e:	b2c0      	uxtb	r0, r0
 801c770:	fb03 c301 	mla	r3, r3, r1, ip
 801c774:	fb00 7001 	mla	r0, r0, r1, r7
 801c778:	1c51      	adds	r1, r2, #1
 801c77a:	b29b      	uxth	r3, r3
 801c77c:	b280      	uxth	r0, r0
 801c77e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c782:	f100 0c01 	add.w	ip, r0, #1
 801c786:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801c78a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801c78e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c792:	ea4c 0202 	orr.w	r2, ip, r2
 801c796:	f103 0c01 	add.w	ip, r3, #1
 801c79a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801c79e:	095b      	lsrs	r3, r3, #5
 801c7a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c7a4:	431a      	orrs	r2, r3
 801c7a6:	f8a9 2000 	strh.w	r2, [r9]
 801c7aa:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c7ac:	f109 0902 	add.w	r9, r9, #2
 801c7b0:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c7b4:	441c      	add	r4, r3
 801c7b6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c7b8:	441e      	add	r6, r3
 801c7ba:	e647      	b.n	801c44c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801c7bc:	2800      	cmp	r0, #0
 801c7be:	f43f aedf 	beq.w	801c580 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801c7c2:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801c7c6:	9109      	str	r1, [sp, #36]	@ 0x24
 801c7c8:	0e09      	lsrs	r1, r1, #24
 801c7ca:	9112      	str	r1, [sp, #72]	@ 0x48
 801c7cc:	e6d8      	b.n	801c580 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801c7ce:	b01d      	add	sp, #116	@ 0x74
 801c7d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c7d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801c7d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7d8:	b085      	sub	sp, #20
 801c7da:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801c7de:	9102      	str	r1, [sp, #8]
 801c7e0:	2c00      	cmp	r4, #0
 801c7e2:	fb04 7103 	mla	r1, r4, r3, r7
 801c7e6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801c7ea:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801c7ee:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801c7f2:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801c7f6:	f2c0 810c 	blt.w	801ca12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801c7fa:	45a6      	cmp	lr, r4
 801c7fc:	f340 8109 	ble.w	801ca12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801c800:	2f00      	cmp	r7, #0
 801c802:	f2c0 8104 	blt.w	801ca0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801c806:	42bb      	cmp	r3, r7
 801c808:	f340 8101 	ble.w	801ca0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801c80c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801c810:	1c7a      	adds	r2, r7, #1
 801c812:	f100 8101 	bmi.w	801ca18 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801c816:	4293      	cmp	r3, r2
 801c818:	f340 80fe 	ble.w	801ca18 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801c81c:	2e00      	cmp	r6, #0
 801c81e:	f000 80fd 	beq.w	801ca1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801c822:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801c826:	3401      	adds	r4, #1
 801c828:	f100 80fc 	bmi.w	801ca24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801c82c:	45a6      	cmp	lr, r4
 801c82e:	f340 80f9 	ble.w	801ca24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801c832:	2800      	cmp	r0, #0
 801c834:	f000 80f9 	beq.w	801ca2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801c838:	2f00      	cmp	r7, #0
 801c83a:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801c83e:	f2c0 80ef 	blt.w	801ca20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801c842:	42bb      	cmp	r3, r7
 801c844:	f340 80ec 	ble.w	801ca20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801c848:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801c84c:	3701      	adds	r7, #1
 801c84e:	f100 80ef 	bmi.w	801ca30 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801c852:	42bb      	cmp	r3, r7
 801c854:	f340 80ec 	ble.w	801ca30 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801c858:	2e00      	cmp	r6, #0
 801c85a:	f000 80eb 	beq.w	801ca34 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801c85e:	6852      	ldr	r2, [r2, #4]
 801c860:	b2b6      	uxth	r6, r6
 801c862:	b280      	uxth	r0, r0
 801c864:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801c868:	fb00 fe06 	mul.w	lr, r0, r6
 801c86c:	0136      	lsls	r6, r6, #4
 801c86e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801c872:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801c876:	eba6 070e 	sub.w	r7, r6, lr
 801c87a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801c87e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801c882:	b280      	uxth	r0, r0
 801c884:	b2bf      	uxth	r7, r7
 801c886:	1a1b      	subs	r3, r3, r0
 801c888:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801c88c:	fb07 f60a 	mul.w	r6, r7, sl
 801c890:	b29b      	uxth	r3, r3
 801c892:	fb0b 6603 	mla	r6, fp, r3, r6
 801c896:	fb00 6609 	mla	r6, r0, r9, r6
 801c89a:	fb0e 6608 	mla	r6, lr, r8, r6
 801c89e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801c8a2:	9600      	str	r6, [sp, #0]
 801c8a4:	2e00      	cmp	r6, #0
 801c8a6:	f000 80af 	beq.w	801ca08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801c8aa:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c8ae:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801c8b2:	9e02      	ldr	r6, [sp, #8]
 801c8b4:	fb0b fc0c 	mul.w	ip, fp, ip
 801c8b8:	fb0b f505 	mul.w	r5, fp, r5
 801c8bc:	8836      	ldrh	r6, [r6, #0]
 801c8be:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801c8c2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c8c6:	9501      	str	r5, [sp, #4]
 801c8c8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801c8cc:	44dc      	add	ip, fp
 801c8ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c8d2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801c8d6:	9503      	str	r5, [sp, #12]
 801c8d8:	9d01      	ldr	r5, [sp, #4]
 801c8da:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801c8de:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c8e2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801c8e6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c8ea:	fb0a fc0c 	mul.w	ip, sl, ip
 801c8ee:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801c8f2:	fb0a fa01 	mul.w	sl, sl, r1
 801c8f6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801c8fa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c8fe:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801c902:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c906:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801c90a:	4465      	add	r5, ip
 801c90c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c910:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801c914:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c918:	fb09 fc0c 	mul.w	ip, r9, ip
 801c91c:	0a2d      	lsrs	r5, r5, #8
 801c91e:	fb09 f904 	mul.w	r9, r9, r4
 801c922:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c926:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801c92a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c92e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801c932:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c936:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801c93a:	437d      	muls	r5, r7
 801c93c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801c940:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801c944:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801c948:	4461      	add	r1, ip
 801c94a:	fb08 f404 	mul.w	r4, r8, r4
 801c94e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c952:	fb08 f802 	mul.w	r8, r8, r2
 801c956:	0a09      	lsrs	r1, r1, #8
 801c958:	0a22      	lsrs	r2, r4, #8
 801c95a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801c95e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801c962:	fb07 f70a 	mul.w	r7, r7, sl
 801c966:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801c96a:	4414      	add	r4, r2
 801c96c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801c970:	0a24      	lsrs	r4, r4, #8
 801c972:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801c976:	9a03      	ldr	r2, [sp, #12]
 801c978:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801c97c:	fb02 5503 	mla	r5, r2, r3, r5
 801c980:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801c984:	fb04 540e 	mla	r4, r4, lr, r5
 801c988:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801c98c:	fb01 4100 	mla	r1, r1, r0, r4
 801c990:	0a09      	lsrs	r1, r1, #8
 801c992:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801c996:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801c99a:	fb03 7101 	mla	r1, r3, r1, r7
 801c99e:	9b00      	ldr	r3, [sp, #0]
 801c9a0:	fb0e 1e08 	mla	lr, lr, r8, r1
 801c9a4:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801c9a8:	43da      	mvns	r2, r3
 801c9aa:	1233      	asrs	r3, r6, #8
 801c9ac:	fb00 e101 	mla	r1, r0, r1, lr
 801c9b0:	10f0      	asrs	r0, r6, #3
 801c9b2:	b2d2      	uxtb	r2, r2
 801c9b4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c9b8:	0a09      	lsrs	r1, r1, #8
 801c9ba:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c9be:	00f6      	lsls	r6, r6, #3
 801c9c0:	4353      	muls	r3, r2
 801c9c2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c9c6:	4350      	muls	r0, r2
 801c9c8:	b2f6      	uxtb	r6, r6
 801c9ca:	4321      	orrs	r1, r4
 801c9cc:	4356      	muls	r6, r2
 801c9ce:	1c5a      	adds	r2, r3, #1
 801c9d0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c9d4:	0c0b      	lsrs	r3, r1, #16
 801c9d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c9da:	1c42      	adds	r2, r0, #1
 801c9dc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c9e0:	0a0a      	lsrs	r2, r1, #8
 801c9e2:	021b      	lsls	r3, r3, #8
 801c9e4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801c9e8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801c9ec:	00d2      	lsls	r2, r2, #3
 801c9ee:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c9f2:	4313      	orrs	r3, r2
 801c9f4:	1c72      	adds	r2, r6, #1
 801c9f6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801c9fa:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801c9fe:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801ca02:	4319      	orrs	r1, r3
 801ca04:	9b02      	ldr	r3, [sp, #8]
 801ca06:	8019      	strh	r1, [r3, #0]
 801ca08:	b005      	add	sp, #20
 801ca0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca0e:	2500      	movs	r5, #0
 801ca10:	e6fe      	b.n	801c810 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801ca12:	2100      	movs	r1, #0
 801ca14:	460d      	mov	r5, r1
 801ca16:	e706      	b.n	801c826 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ca18:	2100      	movs	r1, #0
 801ca1a:	e704      	b.n	801c826 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ca1c:	4631      	mov	r1, r6
 801ca1e:	e702      	b.n	801c826 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ca20:	2400      	movs	r4, #0
 801ca22:	e713      	b.n	801c84c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801ca24:	2200      	movs	r2, #0
 801ca26:	4614      	mov	r4, r2
 801ca28:	e71a      	b.n	801c860 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ca2a:	4602      	mov	r2, r0
 801ca2c:	4604      	mov	r4, r0
 801ca2e:	e717      	b.n	801c860 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ca30:	2200      	movs	r2, #0
 801ca32:	e715      	b.n	801c860 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ca34:	4632      	mov	r2, r6
 801ca36:	e713      	b.n	801c860 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

0801ca38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ca38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca3c:	b09b      	sub	sp, #108	@ 0x6c
 801ca3e:	9218      	str	r2, [sp, #96]	@ 0x60
 801ca40:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801ca42:	9019      	str	r0, [sp, #100]	@ 0x64
 801ca44:	9116      	str	r1, [sp, #88]	@ 0x58
 801ca46:	6850      	ldr	r0, [r2, #4]
 801ca48:	9307      	str	r3, [sp, #28]
 801ca4a:	6812      	ldr	r2, [r2, #0]
 801ca4c:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801ca50:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801ca54:	fb00 1303 	mla	r3, r0, r3, r1
 801ca58:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ca5c:	930a      	str	r3, [sp, #40]	@ 0x28
 801ca5e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ca60:	681b      	ldr	r3, [r3, #0]
 801ca62:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ca64:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ca66:	2b00      	cmp	r3, #0
 801ca68:	dc03      	bgt.n	801ca72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ca6a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ca6c:	2b00      	cmp	r3, #0
 801ca6e:	f340 8387 	ble.w	801d180 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801ca72:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ca74:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ca78:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ca7c:	1e48      	subs	r0, r1, #1
 801ca7e:	1e57      	subs	r7, r2, #1
 801ca80:	9b07      	ldr	r3, [sp, #28]
 801ca82:	2b00      	cmp	r3, #0
 801ca84:	f340 8166 	ble.w	801cd54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ca88:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ca8c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ca90:	d406      	bmi.n	801caa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ca92:	4584      	cmp	ip, r0
 801ca94:	da04      	bge.n	801caa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ca96:	2b00      	cmp	r3, #0
 801ca98:	db02      	blt.n	801caa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ca9a:	42bb      	cmp	r3, r7
 801ca9c:	f2c0 815b 	blt.w	801cd56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801caa0:	f11c 0c01 	adds.w	ip, ip, #1
 801caa4:	f100 814b 	bmi.w	801cd3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801caa8:	4561      	cmp	r1, ip
 801caaa:	f2c0 8148 	blt.w	801cd3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801caae:	3301      	adds	r3, #1
 801cab0:	f100 8145 	bmi.w	801cd3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801cab4:	429a      	cmp	r2, r3
 801cab6:	f2c0 8142 	blt.w	801cd3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801caba:	9b07      	ldr	r3, [sp, #28]
 801cabc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801cabe:	9317      	str	r3, [sp, #92]	@ 0x5c
 801cac0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801cac2:	2b00      	cmp	r3, #0
 801cac4:	f340 8165 	ble.w	801cd92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cac8:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801caca:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801cace:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801cad0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801cad4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801cad8:	1422      	asrs	r2, r4, #16
 801cada:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801cade:	689b      	ldr	r3, [r3, #8]
 801cae0:	f100 81d5 	bmi.w	801ce8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801cae4:	f103 38ff 	add.w	r8, r3, #4294967295
 801cae8:	4542      	cmp	r2, r8
 801caea:	f280 81d0 	bge.w	801ce8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801caee:	f1bc 0f00 	cmp.w	ip, #0
 801caf2:	f2c0 81cc 	blt.w	801ce8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801caf6:	f10e 38ff 	add.w	r8, lr, #4294967295
 801cafa:	45c4      	cmp	ip, r8
 801cafc:	f280 81c7 	bge.w	801ce8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801cb00:	b21b      	sxth	r3, r3
 801cb02:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801cb04:	fb0c 2203 	mla	r2, ip, r3, r2
 801cb08:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801cb0c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801cb10:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801cb14:	2900      	cmp	r1, #0
 801cb16:	f000 8182 	beq.w	801ce1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801cb1a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801cb1e:	950b      	str	r5, [sp, #44]	@ 0x2c
 801cb20:	0e2d      	lsrs	r5, r5, #24
 801cb22:	9512      	str	r5, [sp, #72]	@ 0x48
 801cb24:	b180      	cbz	r0, 801cb48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801cb26:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801cb2a:	3b01      	subs	r3, #1
 801cb2c:	009b      	lsls	r3, r3, #2
 801cb2e:	3304      	adds	r3, #4
 801cb30:	eb08 0c03 	add.w	ip, r8, r3
 801cb34:	f858 3003 	ldr.w	r3, [r8, r3]
 801cb38:	9308      	str	r3, [sp, #32]
 801cb3a:	0e1b      	lsrs	r3, r3, #24
 801cb3c:	9310      	str	r3, [sp, #64]	@ 0x40
 801cb3e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801cb42:	930c      	str	r3, [sp, #48]	@ 0x30
 801cb44:	0e1b      	lsrs	r3, r3, #24
 801cb46:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cb48:	b289      	uxth	r1, r1
 801cb4a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801cb4c:	b280      	uxth	r0, r0
 801cb4e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801cb50:	fb01 f900 	mul.w	r9, r1, r0
 801cb54:	0109      	lsls	r1, r1, #4
 801cb56:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801cb5a:	eba1 0809 	sub.w	r8, r1, r9
 801cb5e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801cb62:	b280      	uxth	r0, r0
 801cb64:	fa1f f888 	uxth.w	r8, r8
 801cb68:	1a09      	subs	r1, r1, r0
 801cb6a:	fb08 f303 	mul.w	r3, r8, r3
 801cb6e:	b289      	uxth	r1, r1
 801cb70:	fb01 330e 	mla	r3, r1, lr, r3
 801cb74:	fb00 3305 	mla	r3, r0, r5, r3
 801cb78:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801cb7a:	fb09 3305 	mla	r3, r9, r5, r3
 801cb7e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cb82:	2b00      	cmp	r3, #0
 801cb84:	f000 80d2 	beq.w	801cd2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cb88:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801cb8c:	d01b      	beq.n	801cbc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801cb8e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801cb92:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801cb96:	fb0e fa0a 	mul.w	sl, lr, sl
 801cb9a:	fb0e fe02 	mul.w	lr, lr, r2
 801cb9e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801cba2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801cba6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801cbaa:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801cbae:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801cbb2:	4452      	add	r2, sl
 801cbb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cbb8:	0a12      	lsrs	r2, r2, #8
 801cbba:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801cbbe:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801cbc2:	ea42 020c 	orr.w	r2, r2, ip
 801cbc6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801cbc8:	2dff      	cmp	r5, #255	@ 0xff
 801cbca:	d021      	beq.n	801cc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801cbcc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801cbce:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801cbd2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801cbd4:	fb05 fb0b 	mul.w	fp, r5, fp
 801cbd8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801cbda:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801cbde:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801cbe0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cbe4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801cbe8:	fb05 fa0a 	mul.w	sl, r5, sl
 801cbec:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801cbf0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801cbf4:	44de      	add	lr, fp
 801cbf6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cbfa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cbfe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cc02:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801cc06:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cc0a:	ea4e 050a 	orr.w	r5, lr, sl
 801cc0e:	950b      	str	r5, [sp, #44]	@ 0x2c
 801cc10:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801cc12:	2dff      	cmp	r5, #255	@ 0xff
 801cc14:	d021      	beq.n	801cc5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801cc16:	9d08      	ldr	r5, [sp, #32]
 801cc18:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801cc1c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801cc1e:	fb05 fb0b 	mul.w	fp, r5, fp
 801cc22:	9d08      	ldr	r5, [sp, #32]
 801cc24:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801cc28:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801cc2a:	fb05 fa0e 	mul.w	sl, r5, lr
 801cc2e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cc32:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801cc36:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801cc3a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801cc3e:	44de      	add	lr, fp
 801cc40:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cc44:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cc48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cc4c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801cc50:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cc54:	ea4e 050a 	orr.w	r5, lr, sl
 801cc58:	9508      	str	r5, [sp, #32]
 801cc5a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801cc5c:	2dff      	cmp	r5, #255	@ 0xff
 801cc5e:	d021      	beq.n	801cca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801cc60:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801cc62:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801cc66:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801cc68:	fb05 fb0b 	mul.w	fp, r5, fp
 801cc6c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801cc6e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801cc72:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801cc74:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cc78:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801cc7c:	fb05 fa0a 	mul.w	sl, r5, sl
 801cc80:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801cc84:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801cc88:	44de      	add	lr, fp
 801cc8a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cc8e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cc92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cc96:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801cc9a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cc9e:	ea4e 050a 	orr.w	r5, lr, sl
 801cca2:	950c      	str	r5, [sp, #48]	@ 0x30
 801cca4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801cca6:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801ccaa:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ccae:	2bff      	cmp	r3, #255	@ 0xff
 801ccb0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ccb4:	9d08      	ldr	r5, [sp, #32]
 801ccb6:	fb08 fc0c 	mul.w	ip, r8, ip
 801ccba:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ccbe:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ccc2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ccc4:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ccc8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801cccc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ccce:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ccd2:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801ccd6:	fb08 f80e 	mul.w	r8, r8, lr
 801ccda:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ccde:	fb01 8202 	mla	r2, r1, r2, r8
 801cce2:	9908      	ldr	r1, [sp, #32]
 801cce4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cce8:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801ccec:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801ccee:	fb00 220a 	mla	r2, r0, sl, r2
 801ccf2:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801ccf6:	fb09 2900 	mla	r9, r9, r0, r2
 801ccfa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ccfe:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801cd02:	ea4c 0c09 	orr.w	ip, ip, r9
 801cd06:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801cd0a:	f040 8091 	bne.w	801ce30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cd0e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801cd12:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801cd16:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cd1a:	f022 0207 	bic.w	r2, r2, #7
 801cd1e:	431a      	orrs	r2, r3
 801cd20:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801cd24:	ea4c 0c02 	orr.w	ip, ip, r2
 801cd28:	f8a7 c000 	strh.w	ip, [r7]
 801cd2c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801cd2e:	3702      	adds	r7, #2
 801cd30:	441c      	add	r4, r3
 801cd32:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cd34:	441e      	add	r6, r3
 801cd36:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801cd38:	3b01      	subs	r3, #1
 801cd3a:	9317      	str	r3, [sp, #92]	@ 0x5c
 801cd3c:	e6c0      	b.n	801cac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cd3e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801cd40:	441c      	add	r4, r3
 801cd42:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cd44:	441e      	add	r6, r3
 801cd46:	9b07      	ldr	r3, [sp, #28]
 801cd48:	3b01      	subs	r3, #1
 801cd4a:	9307      	str	r3, [sp, #28]
 801cd4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cd4e:	3302      	adds	r3, #2
 801cd50:	930a      	str	r3, [sp, #40]	@ 0x28
 801cd52:	e695      	b.n	801ca80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801cd54:	d024      	beq.n	801cda0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801cd56:	9b07      	ldr	r3, [sp, #28]
 801cd58:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801cd5a:	3b01      	subs	r3, #1
 801cd5c:	fb00 4003 	mla	r0, r0, r3, r4
 801cd60:	1400      	asrs	r0, r0, #16
 801cd62:	f53f aeaa 	bmi.w	801caba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801cd66:	3901      	subs	r1, #1
 801cd68:	4288      	cmp	r0, r1
 801cd6a:	f6bf aea6 	bge.w	801caba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801cd6e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801cd70:	fb01 6303 	mla	r3, r1, r3, r6
 801cd74:	141b      	asrs	r3, r3, #16
 801cd76:	f53f aea0 	bmi.w	801caba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801cd7a:	3a01      	subs	r2, #1
 801cd7c:	4293      	cmp	r3, r2
 801cd7e:	f6bf ae9c 	bge.w	801caba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801cd82:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801cd86:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801cd8a:	f1bb 0f00 	cmp.w	fp, #0
 801cd8e:	f300 809a 	bgt.w	801cec6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801cd92:	9b07      	ldr	r3, [sp, #28]
 801cd94:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801cd98:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cd9a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801cd9e:	930a      	str	r3, [sp, #40]	@ 0x28
 801cda0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801cda2:	2b00      	cmp	r3, #0
 801cda4:	f340 81ec 	ble.w	801d180 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801cda8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cdac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cdae:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cdb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cdb6:	eef0 6a62 	vmov.f32	s13, s5
 801cdba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cdbe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cdc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdc6:	ee16 4a90 	vmov	r4, s13
 801cdca:	eef0 6a43 	vmov.f32	s13, s6
 801cdce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdd2:	ee16 6a90 	vmov	r6, s13
 801cdd6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cdda:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cdde:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cde2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cde6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cdea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cdee:	ee12 2a90 	vmov	r2, s5
 801cdf2:	eef0 2a47 	vmov.f32	s5, s14
 801cdf6:	fb92 f3f3 	sdiv	r3, r2, r3
 801cdfa:	ee13 2a10 	vmov	r2, s6
 801cdfe:	9327      	str	r3, [sp, #156]	@ 0x9c
 801ce00:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ce02:	eeb0 3a67 	vmov.f32	s6, s15
 801ce06:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce0a:	9328      	str	r3, [sp, #160]	@ 0xa0
 801ce0c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ce0e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801ce10:	3b01      	subs	r3, #1
 801ce12:	9316      	str	r3, [sp, #88]	@ 0x58
 801ce14:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ce16:	bf08      	it	eq
 801ce18:	4613      	moveq	r3, r2
 801ce1a:	9307      	str	r3, [sp, #28]
 801ce1c:	e622      	b.n	801ca64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ce1e:	2800      	cmp	r0, #0
 801ce20:	f43f ae92 	beq.w	801cb48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ce24:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ce28:	9308      	str	r3, [sp, #32]
 801ce2a:	0e1b      	lsrs	r3, r3, #24
 801ce2c:	9310      	str	r3, [sp, #64]	@ 0x40
 801ce2e:	e68b      	b.n	801cb48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ce30:	8839      	ldrh	r1, [r7, #0]
 801ce32:	43db      	mvns	r3, r3
 801ce34:	4dd4      	ldr	r5, [pc, #848]	@ (801d188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801ce36:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801ce3a:	fa5f f883 	uxtb.w	r8, r3
 801ce3e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801ce42:	10c8      	asrs	r0, r1, #3
 801ce44:	00cb      	lsls	r3, r1, #3
 801ce46:	fb0e fe08 	mul.w	lr, lr, r8
 801ce4a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ce4e:	b2db      	uxtb	r3, r3
 801ce50:	f10e 0101 	add.w	r1, lr, #1
 801ce54:	fb00 f008 	mul.w	r0, r0, r8
 801ce58:	fb03 f308 	mul.w	r3, r3, r8
 801ce5c:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801ce60:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ce64:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ce68:	f100 0e01 	add.w	lr, r0, #1
 801ce6c:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ce70:	b2c9      	uxtb	r1, r1
 801ce72:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ce76:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801ce7a:	00d2      	lsls	r2, r2, #3
 801ce7c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ce80:	430a      	orrs	r2, r1
 801ce82:	1c59      	adds	r1, r3, #1
 801ce84:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ce88:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ce8c:	e748      	b.n	801cd20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801ce8e:	f112 0801 	adds.w	r8, r2, #1
 801ce92:	f53f af4b 	bmi.w	801cd2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ce96:	4543      	cmp	r3, r8
 801ce98:	f6ff af48 	blt.w	801cd2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ce9c:	f11c 0801 	adds.w	r8, ip, #1
 801cea0:	f53f af44 	bmi.w	801cd2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cea4:	45c6      	cmp	lr, r8
 801cea6:	f6ff af41 	blt.w	801cd2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ceaa:	b21b      	sxth	r3, r3
 801ceac:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801ceb0:	fa0f f28e 	sxth.w	r2, lr
 801ceb4:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801ceb8:	9200      	str	r2, [sp, #0]
 801ceba:	4639      	mov	r1, r7
 801cebc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801cebe:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801cec0:	f7ff fc88 	bl	801c7d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801cec4:	e732      	b.n	801cd2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cec6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801cec8:	1421      	asrs	r1, r4, #16
 801ceca:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801cecc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ced0:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801ced4:	1433      	asrs	r3, r6, #16
 801ced6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ceda:	fb07 1303 	mla	r3, r7, r3, r1
 801cede:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801cee0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801cee4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801cee8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ceec:	2a00      	cmp	r2, #0
 801ceee:	f000 8108 	beq.w	801d102 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 801cef2:	684d      	ldr	r5, [r1, #4]
 801cef4:	950d      	str	r5, [sp, #52]	@ 0x34
 801cef6:	0e2d      	lsrs	r5, r5, #24
 801cef8:	9514      	str	r5, [sp, #80]	@ 0x50
 801cefa:	b178      	cbz	r0, 801cf1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801cefc:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801cf00:	3f01      	subs	r7, #1
 801cf02:	00bf      	lsls	r7, r7, #2
 801cf04:	3704      	adds	r7, #4
 801cf06:	eb01 0e07 	add.w	lr, r1, r7
 801cf0a:	59c9      	ldr	r1, [r1, r7]
 801cf0c:	9109      	str	r1, [sp, #36]	@ 0x24
 801cf0e:	0e09      	lsrs	r1, r1, #24
 801cf10:	9111      	str	r1, [sp, #68]	@ 0x44
 801cf12:	f8de 1004 	ldr.w	r1, [lr, #4]
 801cf16:	910e      	str	r1, [sp, #56]	@ 0x38
 801cf18:	0e09      	lsrs	r1, r1, #24
 801cf1a:	9115      	str	r1, [sp, #84]	@ 0x54
 801cf1c:	b292      	uxth	r2, r2
 801cf1e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801cf20:	b280      	uxth	r0, r0
 801cf22:	fb02 f900 	mul.w	r9, r2, r0
 801cf26:	0112      	lsls	r2, r2, #4
 801cf28:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801cf2c:	eba2 0e09 	sub.w	lr, r2, r9
 801cf30:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801cf34:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cf36:	b280      	uxth	r0, r0
 801cf38:	fa1f fe8e 	uxth.w	lr, lr
 801cf3c:	1a09      	subs	r1, r1, r0
 801cf3e:	fb0e f202 	mul.w	r2, lr, r2
 801cf42:	b289      	uxth	r1, r1
 801cf44:	fb01 220c 	mla	r2, r1, ip, r2
 801cf48:	fb00 2205 	mla	r2, r0, r5, r2
 801cf4c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801cf4e:	fb09 2205 	mla	r2, r9, r5, r2
 801cf52:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801cf56:	2a00      	cmp	r2, #0
 801cf58:	f000 80ca 	beq.w	801d0f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801cf5c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801cf60:	d019      	beq.n	801cf96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801cf62:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801cf66:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801cf6a:	fb0c fa0a 	mul.w	sl, ip, sl
 801cf6e:	fb0c fc03 	mul.w	ip, ip, r3
 801cf72:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801cf76:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801cf7a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801cf7e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801cf82:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801cf86:	4453      	add	r3, sl
 801cf88:	0a3f      	lsrs	r7, r7, #8
 801cf8a:	0a1b      	lsrs	r3, r3, #8
 801cf8c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801cf90:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801cf94:	433b      	orrs	r3, r7
 801cf96:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801cf98:	2dff      	cmp	r5, #255	@ 0xff
 801cf9a:	d020      	beq.n	801cfde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801cf9c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801cf9e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801cfa2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801cfa4:	436f      	muls	r7, r5
 801cfa6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801cfa8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cfac:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801cfb0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801cfb2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cfb6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cfba:	fb05 fa0a 	mul.w	sl, r5, sl
 801cfbe:	44bc      	add	ip, r7
 801cfc0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cfc4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cfc8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cfcc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cfd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cfd4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cfd8:	ea4c 050a 	orr.w	r5, ip, sl
 801cfdc:	950d      	str	r5, [sp, #52]	@ 0x34
 801cfde:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801cfe0:	2dff      	cmp	r5, #255	@ 0xff
 801cfe2:	d020      	beq.n	801d026 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801cfe4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801cfe6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801cfea:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801cfec:	436f      	muls	r7, r5
 801cfee:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801cff0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801cff4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801cff6:	fb05 fa0c 	mul.w	sl, r5, ip
 801cffa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cffe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d002:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d006:	44bc      	add	ip, r7
 801d008:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d00c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d010:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d014:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d018:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d01c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d020:	ea4c 050a 	orr.w	r5, ip, sl
 801d024:	9509      	str	r5, [sp, #36]	@ 0x24
 801d026:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801d028:	2dff      	cmp	r5, #255	@ 0xff
 801d02a:	d020      	beq.n	801d06e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801d02c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d02e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801d032:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801d034:	436f      	muls	r7, r5
 801d036:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d038:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d03c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801d040:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801d042:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d046:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d04a:	fb05 fa0a 	mul.w	sl, r5, sl
 801d04e:	44bc      	add	ip, r7
 801d050:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d054:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d058:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d05c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d060:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d064:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d068:	ea4c 050a 	orr.w	r5, ip, sl
 801d06c:	950e      	str	r5, [sp, #56]	@ 0x38
 801d06e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d070:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801d074:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d078:	2aff      	cmp	r2, #255	@ 0xff
 801d07a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801d07e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801d080:	fb0e f707 	mul.w	r7, lr, r7
 801d084:	fb01 770c 	mla	r7, r1, ip, r7
 801d088:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801d08c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d08e:	fb00 770c 	mla	r7, r0, ip, r7
 801d092:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801d096:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d098:	fb09 770c 	mla	r7, r9, ip, r7
 801d09c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801d0a0:	fb0e fe0c 	mul.w	lr, lr, ip
 801d0a4:	ea4f 2717 	mov.w	r7, r7, lsr #8
 801d0a8:	fb01 e303 	mla	r3, r1, r3, lr
 801d0ac:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801d0ae:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801d0b2:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801d0b6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801d0b8:	fb00 330a 	mla	r3, r0, sl, r3
 801d0bc:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801d0c0:	fb09 3c0c 	mla	ip, r9, ip, r3
 801d0c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d0c8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801d0cc:	ea47 070c 	orr.w	r7, r7, ip
 801d0d0:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801d0d4:	d11e      	bne.n	801d114 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 801d0d6:	097a      	lsrs	r2, r7, #5
 801d0d8:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801d0dc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801d0e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d0e4:	f023 0307 	bic.w	r3, r3, #7
 801d0e8:	4313      	orrs	r3, r2
 801d0ea:	431f      	orrs	r7, r3
 801d0ec:	f8a8 7000 	strh.w	r7, [r8]
 801d0f0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801d0f2:	f108 0802 	add.w	r8, r8, #2
 801d0f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d0fa:	441c      	add	r4, r3
 801d0fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d0fe:	441e      	add	r6, r3
 801d100:	e643      	b.n	801cd8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801d102:	2800      	cmp	r0, #0
 801d104:	f43f af0a 	beq.w	801cf1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801d108:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801d10c:	9109      	str	r1, [sp, #36]	@ 0x24
 801d10e:	0e09      	lsrs	r1, r1, #24
 801d110:	9111      	str	r1, [sp, #68]	@ 0x44
 801d112:	e703      	b.n	801cf1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801d114:	f8b8 1000 	ldrh.w	r1, [r8]
 801d118:	43d2      	mvns	r2, r2
 801d11a:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801d11e:	fa5f fe82 	uxtb.w	lr, r2
 801d122:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d126:	10c8      	asrs	r0, r1, #3
 801d128:	00ca      	lsls	r2, r1, #3
 801d12a:	fb0c fc0e 	mul.w	ip, ip, lr
 801d12e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d132:	b2d2      	uxtb	r2, r2
 801d134:	f10c 0101 	add.w	r1, ip, #1
 801d138:	fb00 f00e 	mul.w	r0, r0, lr
 801d13c:	fb02 f20e 	mul.w	r2, r2, lr
 801d140:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801d144:	0c39      	lsrs	r1, r7, #16
 801d146:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801d14a:	490f      	ldr	r1, [pc, #60]	@ (801d188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801d14c:	fa5f fc8c 	uxtb.w	ip, ip
 801d150:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801d154:	1c41      	adds	r1, r0, #1
 801d156:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d15a:	1c51      	adds	r1, r2, #1
 801d15c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d160:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d164:	00c0      	lsls	r0, r0, #3
 801d166:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d16a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d16e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801d172:	ea4c 0c00 	orr.w	ip, ip, r0
 801d176:	ea47 0c0c 	orr.w	ip, r7, ip
 801d17a:	f8a8 c000 	strh.w	ip, [r8]
 801d17e:	e7b7      	b.n	801d0f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801d180:	b01b      	add	sp, #108	@ 0x6c
 801d182:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d186:	bf00      	nop
 801d188:	fffff800 	.word	0xfffff800

0801d18c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801d18c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d190:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801d194:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801d198:	2d00      	cmp	r5, #0
 801d19a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801d19e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801d1a2:	fb05 0e03 	mla	lr, r5, r3, r0
 801d1a6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801d1aa:	f2c0 808c 	blt.w	801d2c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801d1ae:	45a9      	cmp	r9, r5
 801d1b0:	f340 8089 	ble.w	801d2c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801d1b4:	2800      	cmp	r0, #0
 801d1b6:	f2c0 8084 	blt.w	801d2c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801d1ba:	4580      	cmp	r8, r0
 801d1bc:	f340 8081 	ble.w	801d2c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801d1c0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801d1c4:	f01e 0f01 	tst.w	lr, #1
 801d1c8:	5d16      	ldrb	r6, [r2, r4]
 801d1ca:	bf0c      	ite	eq
 801d1cc:	f006 060f 	andeq.w	r6, r6, #15
 801d1d0:	1136      	asrne	r6, r6, #4
 801d1d2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801d1d6:	b2f6      	uxtb	r6, r6
 801d1d8:	1c44      	adds	r4, r0, #1
 801d1da:	d477      	bmi.n	801d2cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801d1dc:	45a0      	cmp	r8, r4
 801d1de:	dd75      	ble.n	801d2cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801d1e0:	2f00      	cmp	r7, #0
 801d1e2:	d075      	beq.n	801d2d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801d1e4:	f10e 0a01 	add.w	sl, lr, #1
 801d1e8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801d1ec:	f01a 0f01 	tst.w	sl, #1
 801d1f0:	5d14      	ldrb	r4, [r2, r4]
 801d1f2:	bf0c      	ite	eq
 801d1f4:	f004 040f 	andeq.w	r4, r4, #15
 801d1f8:	1124      	asrne	r4, r4, #4
 801d1fa:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801d1fe:	b2e4      	uxtb	r4, r4
 801d200:	3501      	adds	r5, #1
 801d202:	d469      	bmi.n	801d2d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801d204:	45a9      	cmp	r9, r5
 801d206:	dd67      	ble.n	801d2d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801d208:	f1bc 0f00 	cmp.w	ip, #0
 801d20c:	d067      	beq.n	801d2de <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801d20e:	2800      	cmp	r0, #0
 801d210:	db60      	blt.n	801d2d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801d212:	4580      	cmp	r8, r0
 801d214:	dd5e      	ble.n	801d2d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801d216:	eb03 090e 	add.w	r9, r3, lr
 801d21a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801d21e:	f019 0f01 	tst.w	r9, #1
 801d222:	5d55      	ldrb	r5, [r2, r5]
 801d224:	bf0c      	ite	eq
 801d226:	f005 050f 	andeq.w	r5, r5, #15
 801d22a:	112d      	asrne	r5, r5, #4
 801d22c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801d230:	b2ed      	uxtb	r5, r5
 801d232:	3001      	adds	r0, #1
 801d234:	d456      	bmi.n	801d2e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801d236:	4580      	cmp	r8, r0
 801d238:	dd54      	ble.n	801d2e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801d23a:	2f00      	cmp	r7, #0
 801d23c:	d054      	beq.n	801d2e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801d23e:	3301      	adds	r3, #1
 801d240:	449e      	add	lr, r3
 801d242:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801d246:	f01e 0f01 	tst.w	lr, #1
 801d24a:	5cd0      	ldrb	r0, [r2, r3]
 801d24c:	bf0c      	ite	eq
 801d24e:	f000 000f 	andeq.w	r0, r0, #15
 801d252:	1100      	asrne	r0, r0, #4
 801d254:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801d258:	b2c3      	uxtb	r3, r0
 801d25a:	b2ba      	uxth	r2, r7
 801d25c:	fa1f fc8c 	uxth.w	ip, ip
 801d260:	fb02 f00c 	mul.w	r0, r2, ip
 801d264:	0112      	lsls	r2, r2, #4
 801d266:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801d26a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801d26e:	1a12      	subs	r2, r2, r0
 801d270:	fa1f fc8c 	uxth.w	ip, ip
 801d274:	b292      	uxth	r2, r2
 801d276:	eba7 070c 	sub.w	r7, r7, ip
 801d27a:	4362      	muls	r2, r4
 801d27c:	b2bf      	uxth	r7, r7
 801d27e:	fb06 2207 	mla	r2, r6, r7, r2
 801d282:	fb0c 2505 	mla	r5, ip, r5, r2
 801d286:	fb00 5303 	mla	r3, r0, r3, r5
 801d28a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d28e:	b1b3      	cbz	r3, 801d2be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801d290:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801d294:	435a      	muls	r2, r3
 801d296:	1c53      	adds	r3, r2, #1
 801d298:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d29c:	4a2d      	ldr	r2, [pc, #180]	@ (801d354 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801d29e:	121b      	asrs	r3, r3, #8
 801d2a0:	6812      	ldr	r2, [r2, #0]
 801d2a2:	2bff      	cmp	r3, #255	@ 0xff
 801d2a4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801d2a8:	d120      	bne.n	801d2ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801d2aa:	0950      	lsrs	r0, r2, #5
 801d2ac:	4b2a      	ldr	r3, [pc, #168]	@ (801d358 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801d2ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d2b2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d2b6:	4033      	ands	r3, r6
 801d2b8:	4318      	orrs	r0, r3
 801d2ba:	4302      	orrs	r2, r0
 801d2bc:	800a      	strh	r2, [r1, #0]
 801d2be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d2c2:	2600      	movs	r6, #0
 801d2c4:	e788      	b.n	801d1d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801d2c6:	2400      	movs	r4, #0
 801d2c8:	4626      	mov	r6, r4
 801d2ca:	e799      	b.n	801d200 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801d2cc:	2400      	movs	r4, #0
 801d2ce:	e797      	b.n	801d200 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801d2d0:	463c      	mov	r4, r7
 801d2d2:	e795      	b.n	801d200 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801d2d4:	2500      	movs	r5, #0
 801d2d6:	e7ac      	b.n	801d232 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801d2d8:	2300      	movs	r3, #0
 801d2da:	461d      	mov	r5, r3
 801d2dc:	e7bd      	b.n	801d25a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801d2de:	4663      	mov	r3, ip
 801d2e0:	4665      	mov	r5, ip
 801d2e2:	e7ba      	b.n	801d25a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801d2e4:	2300      	movs	r3, #0
 801d2e6:	e7b8      	b.n	801d25a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801d2e8:	463b      	mov	r3, r7
 801d2ea:	e7b6      	b.n	801d25a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801d2ec:	880d      	ldrh	r5, [r1, #0]
 801d2ee:	b29f      	uxth	r7, r3
 801d2f0:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801d2f4:	43db      	mvns	r3, r3
 801d2f6:	122c      	asrs	r4, r5, #8
 801d2f8:	fb10 f007 	smulbb	r0, r0, r7
 801d2fc:	b2db      	uxtb	r3, r3
 801d2fe:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801d302:	b2f6      	uxtb	r6, r6
 801d304:	b2d2      	uxtb	r2, r2
 801d306:	fb04 0403 	mla	r4, r4, r3, r0
 801d30a:	10e8      	asrs	r0, r5, #3
 801d30c:	fb12 f207 	smulbb	r2, r2, r7
 801d310:	00ed      	lsls	r5, r5, #3
 801d312:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d316:	b2a4      	uxth	r4, r4
 801d318:	fb16 f607 	smulbb	r6, r6, r7
 801d31c:	b2ed      	uxtb	r5, r5
 801d31e:	fb00 6603 	mla	r6, r0, r3, r6
 801d322:	fb05 2303 	mla	r3, r5, r3, r2
 801d326:	b2b0      	uxth	r0, r6
 801d328:	b29a      	uxth	r2, r3
 801d32a:	1c63      	adds	r3, r4, #1
 801d32c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801d330:	1c53      	adds	r3, r2, #1
 801d332:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d336:	1c42      	adds	r2, r0, #1
 801d338:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801d33c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d340:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d344:	0940      	lsrs	r0, r0, #5
 801d346:	4323      	orrs	r3, r4
 801d348:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d34c:	4303      	orrs	r3, r0
 801d34e:	800b      	strh	r3, [r1, #0]
 801d350:	e7b5      	b.n	801d2be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801d352:	bf00      	nop
 801d354:	200150c8 	.word	0x200150c8
 801d358:	00fff800 	.word	0x00fff800

0801d35c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d35c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d360:	b097      	sub	sp, #92	@ 0x5c
 801d362:	9214      	str	r2, [sp, #80]	@ 0x50
 801d364:	9309      	str	r3, [sp, #36]	@ 0x24
 801d366:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801d368:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801d36c:	9015      	str	r0, [sp, #84]	@ 0x54
 801d36e:	910d      	str	r1, [sp, #52]	@ 0x34
 801d370:	6850      	ldr	r0, [r2, #4]
 801d372:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d374:	6812      	ldr	r2, [r2, #0]
 801d376:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801d37a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801d37e:	fb00 1303 	mla	r3, r0, r3, r1
 801d382:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801d386:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d388:	689b      	ldr	r3, [r3, #8]
 801d38a:	3301      	adds	r3, #1
 801d38c:	f023 0301 	bic.w	r3, r3, #1
 801d390:	930a      	str	r3, [sp, #40]	@ 0x28
 801d392:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d394:	681f      	ldr	r7, [r3, #0]
 801d396:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d398:	2b00      	cmp	r3, #0
 801d39a:	dc03      	bgt.n	801d3a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d39c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801d39e:	2b00      	cmp	r3, #0
 801d3a0:	f340 8289 	ble.w	801d8b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801d3a4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d3a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d3aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d3ae:	1e48      	subs	r0, r1, #1
 801d3b0:	f102 3cff 	add.w	ip, r2, #4294967295
 801d3b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d3b6:	2b00      	cmp	r3, #0
 801d3b8:	f340 80c5 	ble.w	801d546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801d3bc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d3c0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d3c4:	d406      	bmi.n	801d3d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d3c6:	4586      	cmp	lr, r0
 801d3c8:	da04      	bge.n	801d3d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d3ca:	2b00      	cmp	r3, #0
 801d3cc:	db02      	blt.n	801d3d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d3ce:	4563      	cmp	r3, ip
 801d3d0:	f2c0 80ba 	blt.w	801d548 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801d3d4:	f11e 0e01 	adds.w	lr, lr, #1
 801d3d8:	f100 80ab 	bmi.w	801d532 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801d3dc:	4571      	cmp	r1, lr
 801d3de:	f2c0 80a8 	blt.w	801d532 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801d3e2:	3301      	adds	r3, #1
 801d3e4:	f100 80a5 	bmi.w	801d532 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801d3e8:	429a      	cmp	r2, r3
 801d3ea:	f2c0 80a2 	blt.w	801d532 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801d3ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d3f0:	46c8      	mov	r8, r9
 801d3f2:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801d3f6:	930e      	str	r3, [sp, #56]	@ 0x38
 801d3f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d3fa:	2b00      	cmp	r3, #0
 801d3fc:	f340 80c4 	ble.w	801d588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801d400:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d402:	1430      	asrs	r0, r6, #16
 801d404:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d408:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d40c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801d410:	1423      	asrs	r3, r4, #16
 801d412:	f100 814f 	bmi.w	801d6b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d416:	f10c 3bff 	add.w	fp, ip, #4294967295
 801d41a:	455b      	cmp	r3, fp
 801d41c:	f280 814a 	bge.w	801d6b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d420:	2800      	cmp	r0, #0
 801d422:	f2c0 8147 	blt.w	801d6b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d426:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d42a:	4558      	cmp	r0, fp
 801d42c:	f280 8142 	bge.w	801d6b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d430:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801d432:	fb00 3305 	mla	r3, r0, r5, r3
 801d436:	0858      	lsrs	r0, r3, #1
 801d438:	07dd      	lsls	r5, r3, #31
 801d43a:	f817 c000 	ldrb.w	ip, [r7, r0]
 801d43e:	bf54      	ite	pl
 801d440:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d444:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d448:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d44c:	fa5f fc8c 	uxtb.w	ip, ip
 801d450:	2a00      	cmp	r2, #0
 801d452:	f000 80dd 	beq.w	801d610 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801d456:	1c58      	adds	r0, r3, #1
 801d458:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801d45c:	07c0      	lsls	r0, r0, #31
 801d45e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d462:	bf54      	ite	pl
 801d464:	f00e 0e0f 	andpl.w	lr, lr, #15
 801d468:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801d46c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801d470:	fa5f f08e 	uxtb.w	r0, lr
 801d474:	9010      	str	r0, [sp, #64]	@ 0x40
 801d476:	b1d9      	cbz	r1, 801d4b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801d478:	4453      	add	r3, sl
 801d47a:	0858      	lsrs	r0, r3, #1
 801d47c:	07dd      	lsls	r5, r3, #31
 801d47e:	f103 0301 	add.w	r3, r3, #1
 801d482:	5c38      	ldrb	r0, [r7, r0]
 801d484:	bf54      	ite	pl
 801d486:	f000 000f 	andpl.w	r0, r0, #15
 801d48a:	1100      	asrmi	r0, r0, #4
 801d48c:	07dd      	lsls	r5, r3, #31
 801d48e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801d492:	b2c0      	uxtb	r0, r0
 801d494:	900b      	str	r0, [sp, #44]	@ 0x2c
 801d496:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801d49a:	f817 e000 	ldrb.w	lr, [r7, r0]
 801d49e:	bf54      	ite	pl
 801d4a0:	f00e 030f 	andpl.w	r3, lr, #15
 801d4a4:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801d4a8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d4ac:	b2db      	uxtb	r3, r3
 801d4ae:	9311      	str	r3, [sp, #68]	@ 0x44
 801d4b0:	b292      	uxth	r2, r2
 801d4b2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801d4b4:	b289      	uxth	r1, r1
 801d4b6:	fb02 f301 	mul.w	r3, r2, r1
 801d4ba:	0112      	lsls	r2, r2, #4
 801d4bc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801d4c0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801d4c4:	1ad2      	subs	r2, r2, r3
 801d4c6:	b289      	uxth	r1, r1
 801d4c8:	b292      	uxth	r2, r2
 801d4ca:	1a40      	subs	r0, r0, r1
 801d4cc:	436a      	muls	r2, r5
 801d4ce:	b280      	uxth	r0, r0
 801d4d0:	fb0c 2c00 	mla	ip, ip, r0, r2
 801d4d4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801d4d6:	fb01 c102 	mla	r1, r1, r2, ip
 801d4da:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801d4dc:	fb03 1302 	mla	r3, r3, r2, r1
 801d4e0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d4e4:	b1db      	cbz	r3, 801d51e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d4e6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d4e8:	4353      	muls	r3, r2
 801d4ea:	1c5a      	adds	r2, r3, #1
 801d4ec:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d4f0:	4ac6      	ldr	r2, [pc, #792]	@ (801d80c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801d4f2:	121b      	asrs	r3, r3, #8
 801d4f4:	6812      	ldr	r2, [r2, #0]
 801d4f6:	2bff      	cmp	r3, #255	@ 0xff
 801d4f8:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801d4fc:	f040 8099 	bne.w	801d632 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801d500:	0953      	lsrs	r3, r2, #5
 801d502:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801d506:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d50a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d50e:	f02c 0c07 	bic.w	ip, ip, #7
 801d512:	ea43 0c0c 	orr.w	ip, r3, ip
 801d516:	ea4c 0202 	orr.w	r2, ip, r2
 801d51a:	f8a8 2000 	strh.w	r2, [r8]
 801d51e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d520:	f108 0802 	add.w	r8, r8, #2
 801d524:	441c      	add	r4, r3
 801d526:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d528:	441e      	add	r6, r3
 801d52a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d52c:	3b01      	subs	r3, #1
 801d52e:	930e      	str	r3, [sp, #56]	@ 0x38
 801d530:	e762      	b.n	801d3f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d532:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d534:	f109 0902 	add.w	r9, r9, #2
 801d538:	441c      	add	r4, r3
 801d53a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d53c:	441e      	add	r6, r3
 801d53e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d540:	3b01      	subs	r3, #1
 801d542:	9309      	str	r3, [sp, #36]	@ 0x24
 801d544:	e736      	b.n	801d3b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d546:	d024      	beq.n	801d592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d548:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d54a:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801d54c:	3b01      	subs	r3, #1
 801d54e:	fb00 4003 	mla	r0, r0, r3, r4
 801d552:	1400      	asrs	r0, r0, #16
 801d554:	f53f af4b 	bmi.w	801d3ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d558:	3901      	subs	r1, #1
 801d55a:	4288      	cmp	r0, r1
 801d55c:	f6bf af47 	bge.w	801d3ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d560:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801d562:	fb01 6303 	mla	r3, r1, r3, r6
 801d566:	141b      	asrs	r3, r3, #16
 801d568:	f53f af41 	bmi.w	801d3ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d56c:	3a01      	subs	r2, #1
 801d56e:	4293      	cmp	r3, r2
 801d570:	f6bf af3d 	bge.w	801d3ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d574:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801d578:	46c8      	mov	r8, r9
 801d57a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801d57e:	930e      	str	r3, [sp, #56]	@ 0x38
 801d580:	f1bb 0f00 	cmp.w	fp, #0
 801d584:	f300 80b7 	bgt.w	801d6f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 801d588:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d58a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801d58e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801d592:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d594:	2b00      	cmp	r3, #0
 801d596:	f340 818e 	ble.w	801d8b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801d59a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d59e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d5a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d5a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d5a8:	eef0 6a62 	vmov.f32	s13, s5
 801d5ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d5b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d5b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d5b8:	ee16 4a90 	vmov	r4, s13
 801d5bc:	eef0 6a43 	vmov.f32	s13, s6
 801d5c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d5c4:	ee16 6a90 	vmov	r6, s13
 801d5c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d5cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d5d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d5d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d5d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d5dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d5e0:	ee12 2a90 	vmov	r2, s5
 801d5e4:	eef0 2a47 	vmov.f32	s5, s14
 801d5e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801d5ec:	ee13 2a10 	vmov	r2, s6
 801d5f0:	9323      	str	r3, [sp, #140]	@ 0x8c
 801d5f2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d5f4:	eeb0 3a67 	vmov.f32	s6, s15
 801d5f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801d5fc:	9324      	str	r3, [sp, #144]	@ 0x90
 801d5fe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d600:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d602:	3b01      	subs	r3, #1
 801d604:	930d      	str	r3, [sp, #52]	@ 0x34
 801d606:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d608:	bf08      	it	eq
 801d60a:	4613      	moveq	r3, r2
 801d60c:	9309      	str	r3, [sp, #36]	@ 0x24
 801d60e:	e6c2      	b.n	801d396 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d610:	2900      	cmp	r1, #0
 801d612:	f43f af4d 	beq.w	801d4b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801d616:	eb0a 0003 	add.w	r0, sl, r3
 801d61a:	0843      	lsrs	r3, r0, #1
 801d61c:	07c0      	lsls	r0, r0, #31
 801d61e:	5cfb      	ldrb	r3, [r7, r3]
 801d620:	bf54      	ite	pl
 801d622:	f003 030f 	andpl.w	r3, r3, #15
 801d626:	111b      	asrmi	r3, r3, #4
 801d628:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d62c:	b2db      	uxtb	r3, r3
 801d62e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d630:	e73e      	b.n	801d4b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801d632:	f8b8 e000 	ldrh.w	lr, [r8]
 801d636:	fa1f fb83 	uxth.w	fp, r3
 801d63a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801d63e:	43db      	mvns	r3, r3
 801d640:	ea4f 202e 	mov.w	r0, lr, asr #8
 801d644:	fb11 f10b 	smulbb	r1, r1, fp
 801d648:	b2db      	uxtb	r3, r3
 801d64a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d64e:	fa5f fc8c 	uxtb.w	ip, ip
 801d652:	b2d2      	uxtb	r2, r2
 801d654:	fb00 1003 	mla	r0, r0, r3, r1
 801d658:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801d65c:	fb1c fc0b 	smulbb	ip, ip, fp
 801d660:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d664:	b280      	uxth	r0, r0
 801d666:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d66a:	fb12 fb0b 	smulbb	fp, r2, fp
 801d66e:	fa5f fe8e 	uxtb.w	lr, lr
 801d672:	fb01 cc03 	mla	ip, r1, r3, ip
 801d676:	fb0e bb03 	mla	fp, lr, r3, fp
 801d67a:	1c43      	adds	r3, r0, #1
 801d67c:	fa1f fc8c 	uxth.w	ip, ip
 801d680:	fa1f fb8b 	uxth.w	fp, fp
 801d684:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d688:	f10c 0101 	add.w	r1, ip, #1
 801d68c:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801d690:	f10b 0001 	add.w	r0, fp, #1
 801d694:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801d698:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801d69c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d6a0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801d6a4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d6a8:	4318      	orrs	r0, r3
 801d6aa:	ea40 000c 	orr.w	r0, r0, ip
 801d6ae:	f8a8 0000 	strh.w	r0, [r8]
 801d6b2:	e734      	b.n	801d51e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d6b4:	f113 0b01 	adds.w	fp, r3, #1
 801d6b8:	f53f af31 	bmi.w	801d51e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d6bc:	45dc      	cmp	ip, fp
 801d6be:	f6ff af2e 	blt.w	801d51e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d6c2:	f110 0b01 	adds.w	fp, r0, #1
 801d6c6:	f53f af2a 	bmi.w	801d51e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d6ca:	45de      	cmp	lr, fp
 801d6cc:	f6ff af27 	blt.w	801d51e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d6d0:	9302      	str	r3, [sp, #8]
 801d6d2:	fa0f f38e 	sxth.w	r3, lr
 801d6d6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801d6d8:	9301      	str	r3, [sp, #4]
 801d6da:	fa0f f38c 	sxth.w	r3, ip
 801d6de:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801d6e2:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801d6e6:	9300      	str	r3, [sp, #0]
 801d6e8:	463a      	mov	r2, r7
 801d6ea:	4653      	mov	r3, sl
 801d6ec:	4641      	mov	r1, r8
 801d6ee:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801d6f0:	f7ff fd4c 	bl	801d18c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801d6f4:	e713      	b.n	801d51e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d6f6:	1422      	asrs	r2, r4, #16
 801d6f8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801d6fa:	1433      	asrs	r3, r6, #16
 801d6fc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801d700:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d704:	fb05 2303 	mla	r3, r5, r3, r2
 801d708:	085a      	lsrs	r2, r3, #1
 801d70a:	07dd      	lsls	r5, r3, #31
 801d70c:	5cba      	ldrb	r2, [r7, r2]
 801d70e:	bf54      	ite	pl
 801d710:	f002 020f 	andpl.w	r2, r2, #15
 801d714:	1112      	asrmi	r2, r2, #4
 801d716:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d71a:	b2d2      	uxtb	r2, r2
 801d71c:	2900      	cmp	r1, #0
 801d71e:	d077      	beq.n	801d810 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801d720:	f103 0e01 	add.w	lr, r3, #1
 801d724:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801d728:	f01e 0f01 	tst.w	lr, #1
 801d72c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d730:	bf0c      	ite	eq
 801d732:	f00c 0c0f 	andeq.w	ip, ip, #15
 801d736:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801d73a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d73e:	fa5f f58c 	uxtb.w	r5, ip
 801d742:	9512      	str	r5, [sp, #72]	@ 0x48
 801d744:	b308      	cbz	r0, 801d78a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801d746:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d748:	442b      	add	r3, r5
 801d74a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801d74e:	07dd      	lsls	r5, r3, #31
 801d750:	f103 0301 	add.w	r3, r3, #1
 801d754:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d758:	bf54      	ite	pl
 801d75a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d75e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d762:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d766:	fa5f f58c 	uxtb.w	r5, ip
 801d76a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801d76e:	950c      	str	r5, [sp, #48]	@ 0x30
 801d770:	07dd      	lsls	r5, r3, #31
 801d772:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d776:	bf54      	ite	pl
 801d778:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d77c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d780:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d784:	fa5f f38c 	uxtb.w	r3, ip
 801d788:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d78a:	b289      	uxth	r1, r1
 801d78c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801d78e:	b280      	uxth	r0, r0
 801d790:	fb01 f300 	mul.w	r3, r1, r0
 801d794:	0109      	lsls	r1, r1, #4
 801d796:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801d79a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801d79e:	1ac9      	subs	r1, r1, r3
 801d7a0:	b280      	uxth	r0, r0
 801d7a2:	b289      	uxth	r1, r1
 801d7a4:	ebac 0c00 	sub.w	ip, ip, r0
 801d7a8:	4369      	muls	r1, r5
 801d7aa:	fa1f fc8c 	uxth.w	ip, ip
 801d7ae:	fb02 120c 	mla	r2, r2, ip, r1
 801d7b2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801d7b4:	fb00 2001 	mla	r0, r0, r1, r2
 801d7b8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801d7ba:	fb03 0302 	mla	r3, r3, r2, r0
 801d7be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d7c2:	b1d3      	cbz	r3, 801d7fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801d7c4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d7c6:	4353      	muls	r3, r2
 801d7c8:	1c5a      	adds	r2, r3, #1
 801d7ca:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d7ce:	4a0f      	ldr	r2, [pc, #60]	@ (801d80c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801d7d0:	121b      	asrs	r3, r3, #8
 801d7d2:	6812      	ldr	r2, [r2, #0]
 801d7d4:	2bff      	cmp	r3, #255	@ 0xff
 801d7d6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801d7da:	d12d      	bne.n	801d838 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 801d7dc:	0953      	lsrs	r3, r2, #5
 801d7de:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801d7e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d7e6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d7ea:	f02c 0c07 	bic.w	ip, ip, #7
 801d7ee:	ea43 0c0c 	orr.w	ip, r3, ip
 801d7f2:	ea4c 0202 	orr.w	r2, ip, r2
 801d7f6:	f8a8 2000 	strh.w	r2, [r8]
 801d7fa:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d7fc:	f108 0802 	add.w	r8, r8, #2
 801d800:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d804:	441c      	add	r4, r3
 801d806:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d808:	441e      	add	r6, r3
 801d80a:	e6b9      	b.n	801d580 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801d80c:	200150c8 	.word	0x200150c8
 801d810:	2800      	cmp	r0, #0
 801d812:	d0ba      	beq.n	801d78a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801d814:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d816:	442b      	add	r3, r5
 801d818:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801d81c:	07db      	lsls	r3, r3, #31
 801d81e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d822:	bf54      	ite	pl
 801d824:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d828:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d82c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d830:	fa5f f38c 	uxtb.w	r3, ip
 801d834:	930c      	str	r3, [sp, #48]	@ 0x30
 801d836:	e7a8      	b.n	801d78a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801d838:	f8b8 e000 	ldrh.w	lr, [r8]
 801d83c:	fa1f fa83 	uxth.w	sl, r3
 801d840:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801d844:	43db      	mvns	r3, r3
 801d846:	ea4f 202e 	mov.w	r0, lr, asr #8
 801d84a:	fb11 f10a 	smulbb	r1, r1, sl
 801d84e:	b2db      	uxtb	r3, r3
 801d850:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d854:	b2d2      	uxtb	r2, r2
 801d856:	fa5f fc8c 	uxtb.w	ip, ip
 801d85a:	fb00 1003 	mla	r0, r0, r3, r1
 801d85e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801d862:	fb12 f20a 	smulbb	r2, r2, sl
 801d866:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d86a:	b280      	uxth	r0, r0
 801d86c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d870:	fb1c fc0a 	smulbb	ip, ip, sl
 801d874:	fa5f fe8e 	uxtb.w	lr, lr
 801d878:	fb0e 2203 	mla	r2, lr, r3, r2
 801d87c:	fb01 cc03 	mla	ip, r1, r3, ip
 801d880:	1c43      	adds	r3, r0, #1
 801d882:	b292      	uxth	r2, r2
 801d884:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d888:	1c51      	adds	r1, r2, #1
 801d88a:	fa1f fc8c 	uxth.w	ip, ip
 801d88e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801d892:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801d896:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801d89a:	4308      	orrs	r0, r1
 801d89c:	f10c 0101 	add.w	r1, ip, #1
 801d8a0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801d8a4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d8a8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d8ac:	ea40 000c 	orr.w	r0, r0, ip
 801d8b0:	f8a8 0000 	strh.w	r0, [r8]
 801d8b4:	e7a1      	b.n	801d7fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801d8b6:	b017      	add	sp, #92	@ 0x5c
 801d8b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d8bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801d8bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d8c0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801d8c4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801d8c8:	2d00      	cmp	r5, #0
 801d8ca:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801d8ce:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801d8d2:	fb05 0e03 	mla	lr, r5, r3, r0
 801d8d6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801d8da:	f2c0 80b0 	blt.w	801da3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801d8de:	45a9      	cmp	r9, r5
 801d8e0:	f340 80ad 	ble.w	801da3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801d8e4:	2800      	cmp	r0, #0
 801d8e6:	f2c0 80a8 	blt.w	801da3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801d8ea:	4580      	cmp	r8, r0
 801d8ec:	f340 80a5 	ble.w	801da3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801d8f0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801d8f4:	f01e 0f01 	tst.w	lr, #1
 801d8f8:	5d16      	ldrb	r6, [r2, r4]
 801d8fa:	bf0c      	ite	eq
 801d8fc:	f006 060f 	andeq.w	r6, r6, #15
 801d900:	1136      	asrne	r6, r6, #4
 801d902:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801d906:	b2f6      	uxtb	r6, r6
 801d908:	1c44      	adds	r4, r0, #1
 801d90a:	f100 809b 	bmi.w	801da44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801d90e:	45a0      	cmp	r8, r4
 801d910:	f340 8098 	ble.w	801da44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801d914:	2f00      	cmp	r7, #0
 801d916:	f000 8097 	beq.w	801da48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801d91a:	f10e 0a01 	add.w	sl, lr, #1
 801d91e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801d922:	f01a 0f01 	tst.w	sl, #1
 801d926:	5d14      	ldrb	r4, [r2, r4]
 801d928:	bf0c      	ite	eq
 801d92a:	f004 040f 	andeq.w	r4, r4, #15
 801d92e:	1124      	asrne	r4, r4, #4
 801d930:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801d934:	b2e4      	uxtb	r4, r4
 801d936:	3501      	adds	r5, #1
 801d938:	f100 808a 	bmi.w	801da50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801d93c:	45a9      	cmp	r9, r5
 801d93e:	f340 8087 	ble.w	801da50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801d942:	f1bc 0f00 	cmp.w	ip, #0
 801d946:	f000 8086 	beq.w	801da56 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801d94a:	2800      	cmp	r0, #0
 801d94c:	db7e      	blt.n	801da4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801d94e:	4580      	cmp	r8, r0
 801d950:	dd7c      	ble.n	801da4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801d952:	eb03 090e 	add.w	r9, r3, lr
 801d956:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801d95a:	f019 0f01 	tst.w	r9, #1
 801d95e:	5d55      	ldrb	r5, [r2, r5]
 801d960:	bf0c      	ite	eq
 801d962:	f005 050f 	andeq.w	r5, r5, #15
 801d966:	112d      	asrne	r5, r5, #4
 801d968:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801d96c:	b2ed      	uxtb	r5, r5
 801d96e:	3001      	adds	r0, #1
 801d970:	d474      	bmi.n	801da5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801d972:	4580      	cmp	r8, r0
 801d974:	dd72      	ble.n	801da5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801d976:	2f00      	cmp	r7, #0
 801d978:	d072      	beq.n	801da60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801d97a:	3301      	adds	r3, #1
 801d97c:	449e      	add	lr, r3
 801d97e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801d982:	f01e 0f01 	tst.w	lr, #1
 801d986:	5cd0      	ldrb	r0, [r2, r3]
 801d988:	bf0c      	ite	eq
 801d98a:	f000 000f 	andeq.w	r0, r0, #15
 801d98e:	1100      	asrne	r0, r0, #4
 801d990:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801d994:	b2c3      	uxtb	r3, r0
 801d996:	b2ba      	uxth	r2, r7
 801d998:	fa1f fc8c 	uxth.w	ip, ip
 801d99c:	fb02 f00c 	mul.w	r0, r2, ip
 801d9a0:	0112      	lsls	r2, r2, #4
 801d9a2:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801d9a6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801d9aa:	1a12      	subs	r2, r2, r0
 801d9ac:	fa1f fc8c 	uxth.w	ip, ip
 801d9b0:	b292      	uxth	r2, r2
 801d9b2:	eba7 070c 	sub.w	r7, r7, ip
 801d9b6:	4362      	muls	r2, r4
 801d9b8:	b2bf      	uxth	r7, r7
 801d9ba:	fb06 2207 	mla	r2, r6, r7, r2
 801d9be:	fb0c 2505 	mla	r5, ip, r5, r2
 801d9c2:	fb00 5303 	mla	r3, r0, r3, r5
 801d9c6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d9ca:	b3a3      	cbz	r3, 801da36 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801d9cc:	4a25      	ldr	r2, [pc, #148]	@ (801da64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801d9ce:	880e      	ldrh	r6, [r1, #0]
 801d9d0:	6815      	ldr	r5, [r2, #0]
 801d9d2:	b29a      	uxth	r2, r3
 801d9d4:	1234      	asrs	r4, r6, #8
 801d9d6:	43db      	mvns	r3, r3
 801d9d8:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801d9dc:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801d9e0:	b2db      	uxtb	r3, r3
 801d9e2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801d9e6:	fb10 f002 	smulbb	r0, r0, r2
 801d9ea:	b2ed      	uxtb	r5, r5
 801d9ec:	fb17 f702 	smulbb	r7, r7, r2
 801d9f0:	fb04 0403 	mla	r4, r4, r3, r0
 801d9f4:	10f0      	asrs	r0, r6, #3
 801d9f6:	fb15 f202 	smulbb	r2, r5, r2
 801d9fa:	00f6      	lsls	r6, r6, #3
 801d9fc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801da00:	b2a4      	uxth	r4, r4
 801da02:	b2f6      	uxtb	r6, r6
 801da04:	fb00 7003 	mla	r0, r0, r3, r7
 801da08:	fb06 2303 	mla	r3, r6, r3, r2
 801da0c:	b280      	uxth	r0, r0
 801da0e:	b29a      	uxth	r2, r3
 801da10:	1c63      	adds	r3, r4, #1
 801da12:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801da16:	1c53      	adds	r3, r2, #1
 801da18:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801da1c:	1c42      	adds	r2, r0, #1
 801da1e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801da22:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801da26:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801da2a:	0940      	lsrs	r0, r0, #5
 801da2c:	4323      	orrs	r3, r4
 801da2e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801da32:	4303      	orrs	r3, r0
 801da34:	800b      	strh	r3, [r1, #0]
 801da36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801da3a:	2600      	movs	r6, #0
 801da3c:	e764      	b.n	801d908 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801da3e:	2400      	movs	r4, #0
 801da40:	4626      	mov	r6, r4
 801da42:	e778      	b.n	801d936 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801da44:	2400      	movs	r4, #0
 801da46:	e776      	b.n	801d936 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801da48:	463c      	mov	r4, r7
 801da4a:	e774      	b.n	801d936 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801da4c:	2500      	movs	r5, #0
 801da4e:	e78e      	b.n	801d96e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801da50:	2300      	movs	r3, #0
 801da52:	461d      	mov	r5, r3
 801da54:	e79f      	b.n	801d996 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801da56:	4663      	mov	r3, ip
 801da58:	4665      	mov	r5, ip
 801da5a:	e79c      	b.n	801d996 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801da5c:	2300      	movs	r3, #0
 801da5e:	e79a      	b.n	801d996 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801da60:	463b      	mov	r3, r7
 801da62:	e798      	b.n	801d996 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801da64:	200150c8 	.word	0x200150c8

0801da68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801da68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da6c:	b093      	sub	sp, #76	@ 0x4c
 801da6e:	461d      	mov	r5, r3
 801da70:	920c      	str	r2, [sp, #48]	@ 0x30
 801da72:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801da74:	9011      	str	r0, [sp, #68]	@ 0x44
 801da76:	9107      	str	r1, [sp, #28]
 801da78:	6850      	ldr	r0, [r2, #4]
 801da7a:	6812      	ldr	r2, [r2, #0]
 801da7c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801da80:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801da84:	fb00 1303 	mla	r3, r0, r3, r1
 801da88:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801da8c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801da8e:	689b      	ldr	r3, [r3, #8]
 801da90:	3301      	adds	r3, #1
 801da92:	f023 0301 	bic.w	r3, r3, #1
 801da96:	9306      	str	r3, [sp, #24]
 801da98:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801da9a:	681f      	ldr	r7, [r3, #0]
 801da9c:	9b07      	ldr	r3, [sp, #28]
 801da9e:	2b00      	cmp	r3, #0
 801daa0:	dc03      	bgt.n	801daaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801daa2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801daa4:	2b00      	cmp	r3, #0
 801daa6:	f340 8267 	ble.w	801df78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801daaa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801daac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dab0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dab4:	1e48      	subs	r0, r1, #1
 801dab6:	f102 3cff 	add.w	ip, r2, #4294967295
 801daba:	2d00      	cmp	r5, #0
 801dabc:	f340 80b7 	ble.w	801dc2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801dac0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801dac4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dac8:	d406      	bmi.n	801dad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801daca:	4586      	cmp	lr, r0
 801dacc:	da04      	bge.n	801dad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801dace:	2b00      	cmp	r3, #0
 801dad0:	db02      	blt.n	801dad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801dad2:	4563      	cmp	r3, ip
 801dad4:	f2c0 80ac 	blt.w	801dc30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801dad8:	f11e 0e01 	adds.w	lr, lr, #1
 801dadc:	f100 809f 	bmi.w	801dc1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801dae0:	4571      	cmp	r1, lr
 801dae2:	f2c0 809c 	blt.w	801dc1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801dae6:	3301      	adds	r3, #1
 801dae8:	f100 8099 	bmi.w	801dc1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801daec:	429a      	cmp	r2, r3
 801daee:	f2c0 8096 	blt.w	801dc1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801daf2:	46c8      	mov	r8, r9
 801daf4:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801daf8:	9509      	str	r5, [sp, #36]	@ 0x24
 801dafa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dafc:	2b00      	cmp	r3, #0
 801dafe:	f340 80b5 	ble.w	801dc6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801db02:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801db06:	1430      	asrs	r0, r6, #16
 801db08:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801db0c:	9308      	str	r3, [sp, #32]
 801db0e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801db10:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801db14:	1423      	asrs	r3, r4, #16
 801db16:	f100 813f 	bmi.w	801dd98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801db1a:	f10c 3bff 	add.w	fp, ip, #4294967295
 801db1e:	455b      	cmp	r3, fp
 801db20:	f280 813a 	bge.w	801dd98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801db24:	2800      	cmp	r0, #0
 801db26:	f2c0 8137 	blt.w	801dd98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801db2a:	f10e 3bff 	add.w	fp, lr, #4294967295
 801db2e:	4558      	cmp	r0, fp
 801db30:	f280 8132 	bge.w	801dd98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801db34:	9a06      	ldr	r2, [sp, #24]
 801db36:	fb00 3302 	mla	r3, r0, r2, r3
 801db3a:	0858      	lsrs	r0, r3, #1
 801db3c:	07da      	lsls	r2, r3, #31
 801db3e:	9a08      	ldr	r2, [sp, #32]
 801db40:	f817 c000 	ldrb.w	ip, [r7, r0]
 801db44:	bf54      	ite	pl
 801db46:	f00c 0c0f 	andpl.w	ip, ip, #15
 801db4a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801db4e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801db52:	fa5f fc8c 	uxtb.w	ip, ip
 801db56:	2a00      	cmp	r2, #0
 801db58:	f000 80cc 	beq.w	801dcf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801db5c:	1c58      	adds	r0, r3, #1
 801db5e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801db62:	07c0      	lsls	r0, r0, #31
 801db64:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801db68:	bf54      	ite	pl
 801db6a:	f00e 0e0f 	andpl.w	lr, lr, #15
 801db6e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801db72:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801db76:	fa5f fe8e 	uxtb.w	lr, lr
 801db7a:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 801db7e:	b1b9      	cbz	r1, 801dbb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801db80:	4453      	add	r3, sl
 801db82:	0858      	lsrs	r0, r3, #1
 801db84:	07da      	lsls	r2, r3, #31
 801db86:	5c38      	ldrb	r0, [r7, r0]
 801db88:	bf54      	ite	pl
 801db8a:	f000 000f 	andpl.w	r0, r0, #15
 801db8e:	1100      	asrmi	r0, r0, #4
 801db90:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801db94:	b2c0      	uxtb	r0, r0
 801db96:	900a      	str	r0, [sp, #40]	@ 0x28
 801db98:	1c58      	adds	r0, r3, #1
 801db9a:	0843      	lsrs	r3, r0, #1
 801db9c:	07c2      	lsls	r2, r0, #31
 801db9e:	5cfb      	ldrb	r3, [r7, r3]
 801dba0:	bf54      	ite	pl
 801dba2:	f003 030f 	andpl.w	r3, r3, #15
 801dba6:	111b      	asrmi	r3, r3, #4
 801dba8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801dbac:	b2db      	uxtb	r3, r3
 801dbae:	930e      	str	r3, [sp, #56]	@ 0x38
 801dbb0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801dbb4:	b289      	uxth	r1, r1
 801dbb6:	fb02 f301 	mul.w	r3, r2, r1
 801dbba:	0112      	lsls	r2, r2, #4
 801dbbc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801dbc0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801dbc4:	1ad2      	subs	r2, r2, r3
 801dbc6:	b289      	uxth	r1, r1
 801dbc8:	b292      	uxth	r2, r2
 801dbca:	1a40      	subs	r0, r0, r1
 801dbcc:	fa1f fe80 	uxth.w	lr, r0
 801dbd0:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801dbd2:	4342      	muls	r2, r0
 801dbd4:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801dbd8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801dbda:	fb01 c102 	mla	r1, r1, r2, ip
 801dbde:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801dbe0:	fb03 1302 	mla	r3, r3, r2, r1
 801dbe4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dbe8:	2bff      	cmp	r3, #255	@ 0xff
 801dbea:	f040 8094 	bne.w	801dd16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801dbee:	4bbf      	ldr	r3, [pc, #764]	@ (801deec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801dbf0:	681a      	ldr	r2, [r3, #0]
 801dbf2:	4bbf      	ldr	r3, [pc, #764]	@ (801def0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801dbf4:	0951      	lsrs	r1, r2, #5
 801dbf6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801dbfa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dbfe:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801dc02:	430b      	orrs	r3, r1
 801dc04:	4313      	orrs	r3, r2
 801dc06:	f8a8 3000 	strh.w	r3, [r8]
 801dc0a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801dc0c:	f108 0802 	add.w	r8, r8, #2
 801dc10:	441c      	add	r4, r3
 801dc12:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dc14:	441e      	add	r6, r3
 801dc16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dc18:	3b01      	subs	r3, #1
 801dc1a:	9309      	str	r3, [sp, #36]	@ 0x24
 801dc1c:	e76d      	b.n	801dafa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801dc1e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801dc20:	3d01      	subs	r5, #1
 801dc22:	f109 0902 	add.w	r9, r9, #2
 801dc26:	441c      	add	r4, r3
 801dc28:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dc2a:	441e      	add	r6, r3
 801dc2c:	e745      	b.n	801daba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801dc2e:	d021      	beq.n	801dc74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801dc30:	1e6b      	subs	r3, r5, #1
 801dc32:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801dc34:	fb00 4003 	mla	r0, r0, r3, r4
 801dc38:	1400      	asrs	r0, r0, #16
 801dc3a:	f53f af5a 	bmi.w	801daf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801dc3e:	3901      	subs	r1, #1
 801dc40:	4288      	cmp	r0, r1
 801dc42:	f6bf af56 	bge.w	801daf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801dc46:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801dc48:	fb01 6303 	mla	r3, r1, r3, r6
 801dc4c:	141b      	asrs	r3, r3, #16
 801dc4e:	f53f af50 	bmi.w	801daf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801dc52:	3a01      	subs	r2, #1
 801dc54:	4293      	cmp	r3, r2
 801dc56:	f6bf af4c 	bge.w	801daf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801dc5a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801dc5e:	46a8      	mov	r8, r5
 801dc60:	46ce      	mov	lr, r9
 801dc62:	9308      	str	r3, [sp, #32]
 801dc64:	f1b8 0f00 	cmp.w	r8, #0
 801dc68:	f300 80b6 	bgt.w	801ddd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801dc6c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801dc70:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801dc74:	9b07      	ldr	r3, [sp, #28]
 801dc76:	2b00      	cmp	r3, #0
 801dc78:	f340 817e 	ble.w	801df78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801dc7c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801dc80:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dc82:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dc86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dc8a:	eef0 6a62 	vmov.f32	s13, s5
 801dc8e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dc92:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dc96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dc9a:	ee16 4a90 	vmov	r4, s13
 801dc9e:	eef0 6a43 	vmov.f32	s13, s6
 801dca2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dca6:	ee16 6a90 	vmov	r6, s13
 801dcaa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dcae:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dcb2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dcb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dcba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dcbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dcc2:	ee12 2a90 	vmov	r2, s5
 801dcc6:	eef0 2a47 	vmov.f32	s5, s14
 801dcca:	fb92 f3f3 	sdiv	r3, r2, r3
 801dcce:	ee13 2a10 	vmov	r2, s6
 801dcd2:	931f      	str	r3, [sp, #124]	@ 0x7c
 801dcd4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dcd6:	eeb0 3a67 	vmov.f32	s6, s15
 801dcda:	fb92 f3f3 	sdiv	r3, r2, r3
 801dcde:	9320      	str	r3, [sp, #128]	@ 0x80
 801dce0:	9b07      	ldr	r3, [sp, #28]
 801dce2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801dce4:	3b01      	subs	r3, #1
 801dce6:	9307      	str	r3, [sp, #28]
 801dce8:	bf08      	it	eq
 801dcea:	4615      	moveq	r5, r2
 801dcec:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dcee:	bf18      	it	ne
 801dcf0:	461d      	movne	r5, r3
 801dcf2:	e6d3      	b.n	801da9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801dcf4:	2900      	cmp	r1, #0
 801dcf6:	f43f af5b 	beq.w	801dbb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801dcfa:	eb0a 0003 	add.w	r0, sl, r3
 801dcfe:	0843      	lsrs	r3, r0, #1
 801dd00:	07c0      	lsls	r0, r0, #31
 801dd02:	5cfb      	ldrb	r3, [r7, r3]
 801dd04:	bf54      	ite	pl
 801dd06:	f003 030f 	andpl.w	r3, r3, #15
 801dd0a:	111b      	asrmi	r3, r3, #4
 801dd0c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801dd10:	b2db      	uxtb	r3, r3
 801dd12:	930a      	str	r3, [sp, #40]	@ 0x28
 801dd14:	e74c      	b.n	801dbb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801dd16:	2b00      	cmp	r3, #0
 801dd18:	f43f af77 	beq.w	801dc0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801dd1c:	4a73      	ldr	r2, [pc, #460]	@ (801deec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801dd1e:	fa1f fe83 	uxth.w	lr, r3
 801dd22:	f8b8 c000 	ldrh.w	ip, [r8]
 801dd26:	43db      	mvns	r3, r3
 801dd28:	6810      	ldr	r0, [r2, #0]
 801dd2a:	ea4f 212c 	mov.w	r1, ip, asr #8
 801dd2e:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801dd32:	b2db      	uxtb	r3, r3
 801dd34:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801dd38:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801dd3c:	fb12 f20e 	smulbb	r2, r2, lr
 801dd40:	b2c0      	uxtb	r0, r0
 801dd42:	fb1b fb0e 	smulbb	fp, fp, lr
 801dd46:	fb01 2103 	mla	r1, r1, r3, r2
 801dd4a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801dd4e:	fb10 fe0e 	smulbb	lr, r0, lr
 801dd52:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801dd56:	b289      	uxth	r1, r1
 801dd58:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801dd5c:	fa5f fc8c 	uxtb.w	ip, ip
 801dd60:	fb02 b203 	mla	r2, r2, r3, fp
 801dd64:	1c48      	adds	r0, r1, #1
 801dd66:	fb0c e303 	mla	r3, ip, r3, lr
 801dd6a:	b292      	uxth	r2, r2
 801dd6c:	b29b      	uxth	r3, r3
 801dd6e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801dd72:	f102 0b01 	add.w	fp, r2, #1
 801dd76:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 801dd7a:	1c59      	adds	r1, r3, #1
 801dd7c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801dd80:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801dd84:	0952      	lsrs	r2, r2, #5
 801dd86:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801dd8a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dd8e:	4301      	orrs	r1, r0
 801dd90:	4311      	orrs	r1, r2
 801dd92:	f8a8 1000 	strh.w	r1, [r8]
 801dd96:	e738      	b.n	801dc0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801dd98:	f113 0b01 	adds.w	fp, r3, #1
 801dd9c:	f53f af35 	bmi.w	801dc0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801dda0:	45dc      	cmp	ip, fp
 801dda2:	f6ff af32 	blt.w	801dc0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801dda6:	f110 0b01 	adds.w	fp, r0, #1
 801ddaa:	f53f af2e 	bmi.w	801dc0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801ddae:	45de      	cmp	lr, fp
 801ddb0:	f6ff af2b 	blt.w	801dc0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801ddb4:	9302      	str	r3, [sp, #8]
 801ddb6:	fa0f f38e 	sxth.w	r3, lr
 801ddba:	9a08      	ldr	r2, [sp, #32]
 801ddbc:	9301      	str	r3, [sp, #4]
 801ddbe:	fa0f f38c 	sxth.w	r3, ip
 801ddc2:	9105      	str	r1, [sp, #20]
 801ddc4:	4641      	mov	r1, r8
 801ddc6:	9300      	str	r3, [sp, #0]
 801ddc8:	4653      	mov	r3, sl
 801ddca:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801ddce:	463a      	mov	r2, r7
 801ddd0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801ddd2:	f7ff fd73 	bl	801d8bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801ddd6:	e718      	b.n	801dc0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801ddd8:	1422      	asrs	r2, r4, #16
 801ddda:	9906      	ldr	r1, [sp, #24]
 801dddc:	1433      	asrs	r3, r6, #16
 801ddde:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801dde2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801dde6:	fb01 2303 	mla	r3, r1, r3, r2
 801ddea:	085a      	lsrs	r2, r3, #1
 801ddec:	07d9      	lsls	r1, r3, #31
 801ddee:	5cba      	ldrb	r2, [r7, r2]
 801ddf0:	bf54      	ite	pl
 801ddf2:	f002 020f 	andpl.w	r2, r2, #15
 801ddf6:	1112      	asrmi	r2, r2, #4
 801ddf8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ddfc:	b2d2      	uxtb	r2, r2
 801ddfe:	2800      	cmp	r0, #0
 801de00:	d063      	beq.n	801deca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 801de02:	f103 0a01 	add.w	sl, r3, #1
 801de06:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801de0a:	f01a 0f01 	tst.w	sl, #1
 801de0e:	5c79      	ldrb	r1, [r7, r1]
 801de10:	bf0c      	ite	eq
 801de12:	f001 010f 	andeq.w	r1, r1, #15
 801de16:	1109      	asrne	r1, r1, #4
 801de18:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801de1c:	b2c9      	uxtb	r1, r1
 801de1e:	910f      	str	r1, [sp, #60]	@ 0x3c
 801de20:	f1bc 0f00 	cmp.w	ip, #0
 801de24:	d01a      	beq.n	801de5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801de26:	9908      	ldr	r1, [sp, #32]
 801de28:	440b      	add	r3, r1
 801de2a:	0859      	lsrs	r1, r3, #1
 801de2c:	f013 0f01 	tst.w	r3, #1
 801de30:	f103 0301 	add.w	r3, r3, #1
 801de34:	5c79      	ldrb	r1, [r7, r1]
 801de36:	bf0c      	ite	eq
 801de38:	f001 010f 	andeq.w	r1, r1, #15
 801de3c:	1109      	asrne	r1, r1, #4
 801de3e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801de42:	b2c9      	uxtb	r1, r1
 801de44:	910b      	str	r1, [sp, #44]	@ 0x2c
 801de46:	0859      	lsrs	r1, r3, #1
 801de48:	07db      	lsls	r3, r3, #31
 801de4a:	5c79      	ldrb	r1, [r7, r1]
 801de4c:	bf54      	ite	pl
 801de4e:	f001 010f 	andpl.w	r1, r1, #15
 801de52:	1109      	asrmi	r1, r1, #4
 801de54:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801de58:	b2c9      	uxtb	r1, r1
 801de5a:	9110      	str	r1, [sp, #64]	@ 0x40
 801de5c:	b280      	uxth	r0, r0
 801de5e:	fa1f fc8c 	uxth.w	ip, ip
 801de62:	fb00 f30c 	mul.w	r3, r0, ip
 801de66:	0100      	lsls	r0, r0, #4
 801de68:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801de6c:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 801de70:	1ac0      	subs	r0, r0, r3
 801de72:	fa1f fc8c 	uxth.w	ip, ip
 801de76:	b280      	uxth	r0, r0
 801de78:	eba1 010c 	sub.w	r1, r1, ip
 801de7c:	fa1f fa81 	uxth.w	sl, r1
 801de80:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801de82:	4348      	muls	r0, r1
 801de84:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801de86:	fb02 020a 	mla	r2, r2, sl, r0
 801de8a:	fb0c 2c01 	mla	ip, ip, r1, r2
 801de8e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801de90:	fb03 c302 	mla	r3, r3, r2, ip
 801de94:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801de98:	2bff      	cmp	r3, #255	@ 0xff
 801de9a:	d12b      	bne.n	801def4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801de9c:	4b13      	ldr	r3, [pc, #76]	@ (801deec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801de9e:	681a      	ldr	r2, [r3, #0]
 801dea0:	4b13      	ldr	r3, [pc, #76]	@ (801def0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801dea2:	0951      	lsrs	r1, r2, #5
 801dea4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801dea8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801deac:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801deb0:	430b      	orrs	r3, r1
 801deb2:	4313      	orrs	r3, r2
 801deb4:	f8ae 3000 	strh.w	r3, [lr]
 801deb8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801deba:	f10e 0e02 	add.w	lr, lr, #2
 801debe:	f108 38ff 	add.w	r8, r8, #4294967295
 801dec2:	441c      	add	r4, r3
 801dec4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dec6:	441e      	add	r6, r3
 801dec8:	e6cc      	b.n	801dc64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801deca:	f1bc 0f00 	cmp.w	ip, #0
 801dece:	d0c5      	beq.n	801de5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801ded0:	9908      	ldr	r1, [sp, #32]
 801ded2:	440b      	add	r3, r1
 801ded4:	0859      	lsrs	r1, r3, #1
 801ded6:	07db      	lsls	r3, r3, #31
 801ded8:	5c79      	ldrb	r1, [r7, r1]
 801deda:	bf54      	ite	pl
 801dedc:	f001 010f 	andpl.w	r1, r1, #15
 801dee0:	1109      	asrmi	r1, r1, #4
 801dee2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801dee6:	b2c9      	uxtb	r1, r1
 801dee8:	910b      	str	r1, [sp, #44]	@ 0x2c
 801deea:	e7b7      	b.n	801de5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801deec:	200150c8 	.word	0x200150c8
 801def0:	fffff800 	.word	0xfffff800
 801def4:	2b00      	cmp	r3, #0
 801def6:	d0df      	beq.n	801deb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801def8:	4a21      	ldr	r2, [pc, #132]	@ (801df80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801defa:	fa1f fa83 	uxth.w	sl, r3
 801defe:	f8be c000 	ldrh.w	ip, [lr]
 801df02:	43db      	mvns	r3, r3
 801df04:	6810      	ldr	r0, [r2, #0]
 801df06:	ea4f 212c 	mov.w	r1, ip, asr #8
 801df0a:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801df0e:	b2db      	uxtb	r3, r3
 801df10:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801df14:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801df18:	fb12 f20a 	smulbb	r2, r2, sl
 801df1c:	b2c0      	uxtb	r0, r0
 801df1e:	fb1b fb0a 	smulbb	fp, fp, sl
 801df22:	fb01 2103 	mla	r1, r1, r3, r2
 801df26:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801df2a:	fb10 f00a 	smulbb	r0, r0, sl
 801df2e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801df32:	b289      	uxth	r1, r1
 801df34:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801df38:	fa5f fc8c 	uxtb.w	ip, ip
 801df3c:	fb02 b203 	mla	r2, r2, r3, fp
 801df40:	fb0c 0003 	mla	r0, ip, r3, r0
 801df44:	1c4b      	adds	r3, r1, #1
 801df46:	b292      	uxth	r2, r2
 801df48:	b280      	uxth	r0, r0
 801df4a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801df4e:	f100 0b01 	add.w	fp, r0, #1
 801df52:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801df56:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801df5a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801df5e:	ea4b 0101 	orr.w	r1, fp, r1
 801df62:	f102 0b01 	add.w	fp, r2, #1
 801df66:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801df6a:	0952      	lsrs	r2, r2, #5
 801df6c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801df70:	4311      	orrs	r1, r2
 801df72:	f8ae 1000 	strh.w	r1, [lr]
 801df76:	e79f      	b.n	801deb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801df78:	b013      	add	sp, #76	@ 0x4c
 801df7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df7e:	bf00      	nop
 801df80:	200150c8 	.word	0x200150c8

0801df84 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801df84:	b570      	push	{r4, r5, r6, lr}
 801df86:	1208      	asrs	r0, r1, #8
 801df88:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801df8c:	b29e      	uxth	r6, r3
 801df8e:	1213      	asrs	r3, r2, #8
 801df90:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801df94:	10cc      	asrs	r4, r1, #3
 801df96:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801df9a:	00c9      	lsls	r1, r1, #3
 801df9c:	fb10 f006 	smulbb	r0, r0, r6
 801dfa0:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801dfa4:	fb13 f305 	smulbb	r3, r3, r5
 801dfa8:	fb14 f406 	smulbb	r4, r4, r6
 801dfac:	4418      	add	r0, r3
 801dfae:	10d3      	asrs	r3, r2, #3
 801dfb0:	00d2      	lsls	r2, r2, #3
 801dfb2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801dfb6:	b280      	uxth	r0, r0
 801dfb8:	b2d2      	uxtb	r2, r2
 801dfba:	fb13 f305 	smulbb	r3, r3, r5
 801dfbe:	fb12 f205 	smulbb	r2, r2, r5
 801dfc2:	441c      	add	r4, r3
 801dfc4:	b2cb      	uxtb	r3, r1
 801dfc6:	fb13 f306 	smulbb	r3, r3, r6
 801dfca:	b2a4      	uxth	r4, r4
 801dfcc:	4413      	add	r3, r2
 801dfce:	1c42      	adds	r2, r0, #1
 801dfd0:	b29b      	uxth	r3, r3
 801dfd2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801dfd6:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 801dfda:	1c58      	adds	r0, r3, #1
 801dfdc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801dfe0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801dfe4:	4310      	orrs	r0, r2
 801dfe6:	1c62      	adds	r2, r4, #1
 801dfe8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801dfec:	0964      	lsrs	r4, r4, #5
 801dfee:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801dff2:	4320      	orrs	r0, r4
 801dff4:	bd70      	pop	{r4, r5, r6, pc}
	...

0801dff8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801dff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dffc:	b08f      	sub	sp, #60	@ 0x3c
 801dffe:	461c      	mov	r4, r3
 801e000:	460d      	mov	r5, r1
 801e002:	4616      	mov	r6, r2
 801e004:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801e008:	9004      	str	r0, [sp, #16]
 801e00a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e00c:	2f00      	cmp	r7, #0
 801e00e:	f000 80f6 	beq.w	801e1fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801e012:	6820      	ldr	r0, [r4, #0]
 801e014:	aa0a      	add	r2, sp, #40	@ 0x28
 801e016:	6861      	ldr	r1, [r4, #4]
 801e018:	f04f 0802 	mov.w	r8, #2
 801e01c:	3604      	adds	r6, #4
 801e01e:	c203      	stmia	r2!, {r0, r1}
 801e020:	6818      	ldr	r0, [r3, #0]
 801e022:	aa0c      	add	r2, sp, #48	@ 0x30
 801e024:	6859      	ldr	r1, [r3, #4]
 801e026:	c203      	stmia	r2!, {r0, r1}
 801e028:	a80a      	add	r0, sp, #40	@ 0x28
 801e02a:	f7ef fe51 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e02e:	4621      	mov	r1, r4
 801e030:	a80c      	add	r0, sp, #48	@ 0x30
 801e032:	f7ef fe75 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e036:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801e03a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801e03e:	f002 0301 	and.w	r3, r2, #1
 801e042:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801e046:	9306      	str	r3, [sp, #24]
 801e048:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801e04c:	f003 0101 	and.w	r1, r3, #1
 801e050:	9105      	str	r1, [sp, #20]
 801e052:	9805      	ldr	r0, [sp, #20]
 801e054:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801e058:	4403      	add	r3, r0
 801e05a:	fb01 2303 	mla	r3, r1, r3, r2
 801e05e:	fb93 f3f8 	sdiv	r3, r3, r8
 801e062:	441d      	add	r5, r3
 801e064:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801e068:	441a      	add	r2, r3
 801e06a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801e06e:	4419      	add	r1, r3
 801e070:	4b64      	ldr	r3, [pc, #400]	@ (801e204 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801e072:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801e076:	6818      	ldr	r0, [r3, #0]
 801e078:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801e07c:	6803      	ldr	r3, [r0, #0]
 801e07e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e080:	4798      	blx	r3
 801e082:	4a61      	ldr	r2, [pc, #388]	@ (801e208 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801e084:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801e088:	2fff      	cmp	r7, #255	@ 0xff
 801e08a:	8813      	ldrh	r3, [r2, #0]
 801e08c:	4611      	mov	r1, r2
 801e08e:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 801e092:	fb03 fb0b 	mul.w	fp, r3, fp
 801e096:	fb03 a404 	mla	r4, r3, r4, sl
 801e09a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e09e:	d06b      	beq.n	801e178 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 801e0a0:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 801e0a4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801e0a8:	9303      	str	r3, [sp, #12]
 801e0aa:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801e0ae:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801e0b2:	9b07      	ldr	r3, [sp, #28]
 801e0b4:	42a3      	cmp	r3, r4
 801e0b6:	f240 809d 	bls.w	801e1f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801e0ba:	9b06      	ldr	r3, [sp, #24]
 801e0bc:	2b00      	cmp	r3, #0
 801e0be:	d039      	beq.n	801e134 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 801e0c0:	782b      	ldrb	r3, [r5, #0]
 801e0c2:	f105 0801 	add.w	r8, r5, #1
 801e0c6:	f109 3bff 	add.w	fp, r9, #4294967295
 801e0ca:	8822      	ldrh	r2, [r4, #0]
 801e0cc:	f003 030f 	and.w	r3, r3, #15
 801e0d0:	9804      	ldr	r0, [sp, #16]
 801e0d2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801e0d6:	9b03      	ldr	r3, [sp, #12]
 801e0d8:	9300      	str	r3, [sp, #0]
 801e0da:	463b      	mov	r3, r7
 801e0dc:	f7ff ff52 	bl	801df84 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801e0e0:	f824 0b02 	strh.w	r0, [r4], #2
 801e0e4:	f1bb 0f01 	cmp.w	fp, #1
 801e0e8:	46a2      	mov	sl, r4
 801e0ea:	f104 0404 	add.w	r4, r4, #4
 801e0ee:	dd24      	ble.n	801e13a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 801e0f0:	f898 3000 	ldrb.w	r3, [r8]
 801e0f4:	f1ab 0b02 	sub.w	fp, fp, #2
 801e0f8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801e0fc:	091b      	lsrs	r3, r3, #4
 801e0fe:	9804      	ldr	r0, [sp, #16]
 801e100:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801e104:	9b03      	ldr	r3, [sp, #12]
 801e106:	9300      	str	r3, [sp, #0]
 801e108:	463b      	mov	r3, r7
 801e10a:	f7ff ff3b 	bl	801df84 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801e10e:	f824 0c04 	strh.w	r0, [r4, #-4]
 801e112:	f818 3b01 	ldrb.w	r3, [r8], #1
 801e116:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801e11a:	f003 030f 	and.w	r3, r3, #15
 801e11e:	9804      	ldr	r0, [sp, #16]
 801e120:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801e124:	9b03      	ldr	r3, [sp, #12]
 801e126:	9300      	str	r3, [sp, #0]
 801e128:	463b      	mov	r3, r7
 801e12a:	f7ff ff2b 	bl	801df84 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801e12e:	f824 0c02 	strh.w	r0, [r4, #-2]
 801e132:	e7d7      	b.n	801e0e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 801e134:	46a8      	mov	r8, r5
 801e136:	46cb      	mov	fp, r9
 801e138:	e7d4      	b.n	801e0e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 801e13a:	d10e      	bne.n	801e15a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 801e13c:	f898 3000 	ldrb.w	r3, [r8]
 801e140:	f8ba 2000 	ldrh.w	r2, [sl]
 801e144:	091b      	lsrs	r3, r3, #4
 801e146:	9804      	ldr	r0, [sp, #16]
 801e148:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801e14c:	9b03      	ldr	r3, [sp, #12]
 801e14e:	9300      	str	r3, [sp, #0]
 801e150:	463b      	mov	r3, r7
 801e152:	f7ff ff17 	bl	801df84 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801e156:	f82a 0b02 	strh.w	r0, [sl], #2
 801e15a:	9b08      	ldr	r3, [sp, #32]
 801e15c:	9a05      	ldr	r2, [sp, #20]
 801e15e:	881c      	ldrh	r4, [r3, #0]
 801e160:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801e164:	eba4 0409 	sub.w	r4, r4, r9
 801e168:	4413      	add	r3, r2
 801e16a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e16c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801e170:	fb93 f3f2 	sdiv	r3, r3, r2
 801e174:	441d      	add	r5, r3
 801e176:	e79c      	b.n	801e0b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 801e178:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801e17c:	45a3      	cmp	fp, r4
 801e17e:	d939      	bls.n	801e1f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801e180:	9b06      	ldr	r3, [sp, #24]
 801e182:	b1fb      	cbz	r3, 801e1c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801e184:	782b      	ldrb	r3, [r5, #0]
 801e186:	1c6a      	adds	r2, r5, #1
 801e188:	f109 30ff 	add.w	r0, r9, #4294967295
 801e18c:	3402      	adds	r4, #2
 801e18e:	f003 030f 	and.w	r3, r3, #15
 801e192:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e196:	f824 3c02 	strh.w	r3, [r4, #-2]
 801e19a:	2801      	cmp	r0, #1
 801e19c:	4623      	mov	r3, r4
 801e19e:	f104 0404 	add.w	r4, r4, #4
 801e1a2:	dd12      	ble.n	801e1ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 801e1a4:	7813      	ldrb	r3, [r2, #0]
 801e1a6:	3802      	subs	r0, #2
 801e1a8:	091b      	lsrs	r3, r3, #4
 801e1aa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e1ae:	f824 3c04 	strh.w	r3, [r4, #-4]
 801e1b2:	f812 3b01 	ldrb.w	r3, [r2], #1
 801e1b6:	f003 030f 	and.w	r3, r3, #15
 801e1ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e1be:	f824 3c02 	strh.w	r3, [r4, #-2]
 801e1c2:	e7ea      	b.n	801e19a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801e1c4:	462a      	mov	r2, r5
 801e1c6:	4648      	mov	r0, r9
 801e1c8:	e7e7      	b.n	801e19a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801e1ca:	d106      	bne.n	801e1da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 801e1cc:	7812      	ldrb	r2, [r2, #0]
 801e1ce:	3302      	adds	r3, #2
 801e1d0:	0912      	lsrs	r2, r2, #4
 801e1d2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e1d6:	f823 2c02 	strh.w	r2, [r3, #-2]
 801e1da:	880c      	ldrh	r4, [r1, #0]
 801e1dc:	9a05      	ldr	r2, [sp, #20]
 801e1de:	eba4 0409 	sub.w	r4, r4, r9
 801e1e2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801e1e6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801e1ea:	4413      	add	r3, r2
 801e1ec:	fb93 f3f8 	sdiv	r3, r3, r8
 801e1f0:	441d      	add	r5, r3
 801e1f2:	e7c3      	b.n	801e17c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 801e1f4:	4b03      	ldr	r3, [pc, #12]	@ (801e204 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801e1f6:	6818      	ldr	r0, [r3, #0]
 801e1f8:	6803      	ldr	r3, [r0, #0]
 801e1fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e1fc:	4798      	blx	r3
 801e1fe:	b00f      	add	sp, #60	@ 0x3c
 801e200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e204:	200150c0 	.word	0x200150c0
 801e208:	200150ba 	.word	0x200150ba

0801e20c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 801e20c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e20e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801e212:	0a0f      	lsrs	r7, r1, #8
 801e214:	2dff      	cmp	r5, #255	@ 0xff
 801e216:	d10c      	bne.n	801e232 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801e218:	2bff      	cmp	r3, #255	@ 0xff
 801e21a:	d10a      	bne.n	801e232 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801e21c:	0948      	lsrs	r0, r1, #5
 801e21e:	4b25      	ldr	r3, [pc, #148]	@ (801e2b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 801e220:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e224:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e228:	403b      	ands	r3, r7
 801e22a:	4318      	orrs	r0, r3
 801e22c:	4308      	orrs	r0, r1
 801e22e:	b280      	uxth	r0, r0
 801e230:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e232:	fb15 f503 	smulbb	r5, r5, r3
 801e236:	1214      	asrs	r4, r2, #8
 801e238:	10d6      	asrs	r6, r2, #3
 801e23a:	b2ab      	uxth	r3, r5
 801e23c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801e240:	00d0      	lsls	r0, r2, #3
 801e242:	f3c1 4207 	ubfx	r2, r1, #16, #8
 801e246:	1c5d      	adds	r5, r3, #1
 801e248:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e24c:	b2c0      	uxtb	r0, r0
 801e24e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801e252:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 801e256:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e25a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801e25e:	fa1f fc85 	uxth.w	ip, r5
 801e262:	43ed      	mvns	r5, r5
 801e264:	fb12 f20c 	smulbb	r2, r2, ip
 801e268:	b2eb      	uxtb	r3, r5
 801e26a:	b2fd      	uxtb	r5, r7
 801e26c:	fb04 2403 	mla	r4, r4, r3, r2
 801e270:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 801e274:	fb15 f50c 	smulbb	r5, r5, ip
 801e278:	b2c8      	uxtb	r0, r1
 801e27a:	b2a4      	uxth	r4, r4
 801e27c:	fb10 f00c 	smulbb	r0, r0, ip
 801e280:	fb06 5503 	mla	r5, r6, r3, r5
 801e284:	fb02 0003 	mla	r0, r2, r3, r0
 801e288:	b2ad      	uxth	r5, r5
 801e28a:	b283      	uxth	r3, r0
 801e28c:	1c60      	adds	r0, r4, #1
 801e28e:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 801e292:	1c58      	adds	r0, r3, #1
 801e294:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e298:	1c6b      	adds	r3, r5, #1
 801e29a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801e29e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e2a2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801e2a6:	096d      	lsrs	r5, r5, #5
 801e2a8:	4320      	orrs	r0, r4
 801e2aa:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e2ae:	4328      	orrs	r0, r5
 801e2b0:	e7be      	b.n	801e230 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 801e2b2:	bf00      	nop
 801e2b4:	00fff800 	.word	0x00fff800

0801e2b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801e2b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2bc:	461c      	mov	r4, r3
 801e2be:	b08d      	sub	sp, #52	@ 0x34
 801e2c0:	460d      	mov	r5, r1
 801e2c2:	4616      	mov	r6, r2
 801e2c4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801e2c6:	4680      	mov	r8, r0
 801e2c8:	6861      	ldr	r1, [r4, #4]
 801e2ca:	aa08      	add	r2, sp, #32
 801e2cc:	6820      	ldr	r0, [r4, #0]
 801e2ce:	f04f 0a02 	mov.w	sl, #2
 801e2d2:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 801e2d6:	3604      	adds	r6, #4
 801e2d8:	c203      	stmia	r2!, {r0, r1}
 801e2da:	6818      	ldr	r0, [r3, #0]
 801e2dc:	aa0a      	add	r2, sp, #40	@ 0x28
 801e2de:	6859      	ldr	r1, [r3, #4]
 801e2e0:	c203      	stmia	r2!, {r0, r1}
 801e2e2:	a808      	add	r0, sp, #32
 801e2e4:	f7ef fcf4 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e2e8:	4621      	mov	r1, r4
 801e2ea:	a80a      	add	r0, sp, #40	@ 0x28
 801e2ec:	f7ef fd18 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e2f0:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801e2f4:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 801e2f8:	f002 0301 	and.w	r3, r2, #1
 801e2fc:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 801e300:	9303      	str	r3, [sp, #12]
 801e302:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801e306:	f003 0101 	and.w	r1, r3, #1
 801e30a:	9102      	str	r1, [sp, #8]
 801e30c:	9802      	ldr	r0, [sp, #8]
 801e30e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801e312:	4403      	add	r3, r0
 801e314:	fb01 2303 	mla	r3, r1, r3, r2
 801e318:	fb93 f3fa 	sdiv	r3, r3, sl
 801e31c:	441d      	add	r5, r3
 801e31e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801e322:	441a      	add	r2, r3
 801e324:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801e328:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801e32c:	4419      	add	r1, r3
 801e32e:	4a3e      	ldr	r2, [pc, #248]	@ (801e428 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 801e330:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 801e334:	6810      	ldr	r0, [r2, #0]
 801e336:	9205      	str	r2, [sp, #20]
 801e338:	6803      	ldr	r3, [r0, #0]
 801e33a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e33c:	4798      	blx	r3
 801e33e:	4b3b      	ldr	r3, [pc, #236]	@ (801e42c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 801e340:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 801e344:	8819      	ldrh	r1, [r3, #0]
 801e346:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 801e34a:	434f      	muls	r7, r1
 801e34c:	fb01 c404 	mla	r4, r1, r4, ip
 801e350:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e354:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 801e358:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 801e35c:	9204      	str	r2, [sp, #16]
 801e35e:	9b04      	ldr	r3, [sp, #16]
 801e360:	429c      	cmp	r4, r3
 801e362:	d258      	bcs.n	801e416 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 801e364:	9b03      	ldr	r3, [sp, #12]
 801e366:	2b00      	cmp	r3, #0
 801e368:	d034      	beq.n	801e3d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 801e36a:	782b      	ldrb	r3, [r5, #0]
 801e36c:	1c6f      	adds	r7, r5, #1
 801e36e:	f003 030f 	and.w	r3, r3, #15
 801e372:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801e376:	0e0b      	lsrs	r3, r1, #24
 801e378:	d006      	beq.n	801e388 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 801e37a:	8822      	ldrh	r2, [r4, #0]
 801e37c:	4640      	mov	r0, r8
 801e37e:	9300      	str	r3, [sp, #0]
 801e380:	464b      	mov	r3, r9
 801e382:	f7ff ff43 	bl	801e20c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801e386:	8020      	strh	r0, [r4, #0]
 801e388:	3402      	adds	r4, #2
 801e38a:	f10b 3aff 	add.w	sl, fp, #4294967295
 801e38e:	f1ba 0f01 	cmp.w	sl, #1
 801e392:	dd22      	ble.n	801e3da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801e394:	783b      	ldrb	r3, [r7, #0]
 801e396:	091b      	lsrs	r3, r3, #4
 801e398:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801e39c:	0e0b      	lsrs	r3, r1, #24
 801e39e:	d006      	beq.n	801e3ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 801e3a0:	8822      	ldrh	r2, [r4, #0]
 801e3a2:	4640      	mov	r0, r8
 801e3a4:	9300      	str	r3, [sp, #0]
 801e3a6:	464b      	mov	r3, r9
 801e3a8:	f7ff ff30 	bl	801e20c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801e3ac:	8020      	strh	r0, [r4, #0]
 801e3ae:	f817 3b01 	ldrb.w	r3, [r7], #1
 801e3b2:	f003 030f 	and.w	r3, r3, #15
 801e3b6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801e3ba:	0e0b      	lsrs	r3, r1, #24
 801e3bc:	d006      	beq.n	801e3cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 801e3be:	8862      	ldrh	r2, [r4, #2]
 801e3c0:	4640      	mov	r0, r8
 801e3c2:	9300      	str	r3, [sp, #0]
 801e3c4:	464b      	mov	r3, r9
 801e3c6:	f7ff ff21 	bl	801e20c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801e3ca:	8060      	strh	r0, [r4, #2]
 801e3cc:	3404      	adds	r4, #4
 801e3ce:	f1aa 0a02 	sub.w	sl, sl, #2
 801e3d2:	e7dc      	b.n	801e38e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801e3d4:	462f      	mov	r7, r5
 801e3d6:	46da      	mov	sl, fp
 801e3d8:	e7d9      	b.n	801e38e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801e3da:	d10d      	bne.n	801e3f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 801e3dc:	783b      	ldrb	r3, [r7, #0]
 801e3de:	091b      	lsrs	r3, r3, #4
 801e3e0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801e3e4:	0e0b      	lsrs	r3, r1, #24
 801e3e6:	d006      	beq.n	801e3f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 801e3e8:	8822      	ldrh	r2, [r4, #0]
 801e3ea:	4640      	mov	r0, r8
 801e3ec:	9300      	str	r3, [sp, #0]
 801e3ee:	464b      	mov	r3, r9
 801e3f0:	f7ff ff0c 	bl	801e20c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801e3f4:	8020      	strh	r0, [r4, #0]
 801e3f6:	3402      	adds	r4, #2
 801e3f8:	9b06      	ldr	r3, [sp, #24]
 801e3fa:	9a02      	ldr	r2, [sp, #8]
 801e3fc:	881b      	ldrh	r3, [r3, #0]
 801e3fe:	eba3 030b 	sub.w	r3, r3, fp
 801e402:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e406:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801e40a:	4413      	add	r3, r2
 801e40c:	9a07      	ldr	r2, [sp, #28]
 801e40e:	fb93 f3f2 	sdiv	r3, r3, r2
 801e412:	441d      	add	r5, r3
 801e414:	e7a3      	b.n	801e35e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 801e416:	9b05      	ldr	r3, [sp, #20]
 801e418:	6818      	ldr	r0, [r3, #0]
 801e41a:	6803      	ldr	r3, [r0, #0]
 801e41c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e41e:	4798      	blx	r3
 801e420:	b00d      	add	sp, #52	@ 0x34
 801e422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e426:	bf00      	nop
 801e428:	200150c0 	.word	0x200150c0
 801e42c:	200150ba 	.word	0x200150ba

0801e430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 801e430:	b570      	push	{r4, r5, r6, lr}
 801e432:	1214      	asrs	r4, r2, #8
 801e434:	788d      	ldrb	r5, [r1, #2]
 801e436:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801e43a:	10d0      	asrs	r0, r2, #3
 801e43c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801e440:	00d2      	lsls	r2, r2, #3
 801e442:	fb15 f503 	smulbb	r5, r5, r3
 801e446:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e44a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e44e:	b2d2      	uxtb	r2, r2
 801e450:	fb04 5506 	mla	r5, r4, r6, r5
 801e454:	784c      	ldrb	r4, [r1, #1]
 801e456:	7809      	ldrb	r1, [r1, #0]
 801e458:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 801e45c:	fb14 f403 	smulbb	r4, r4, r3
 801e460:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e464:	fb11 f303 	smulbb	r3, r1, r3
 801e468:	b2ad      	uxth	r5, r5
 801e46a:	fb00 4406 	mla	r4, r0, r6, r4
 801e46e:	fb02 3306 	mla	r3, r2, r6, r3
 801e472:	1c68      	adds	r0, r5, #1
 801e474:	b2a4      	uxth	r4, r4
 801e476:	b29b      	uxth	r3, r3
 801e478:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801e47c:	1c62      	adds	r2, r4, #1
 801e47e:	1c58      	adds	r0, r3, #1
 801e480:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801e484:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e488:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e48c:	0964      	lsrs	r4, r4, #5
 801e48e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801e492:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801e496:	4328      	orrs	r0, r5
 801e498:	4320      	orrs	r0, r4
 801e49a:	bd70      	pop	{r4, r5, r6, pc}

0801e49c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801e49c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4a0:	b08f      	sub	sp, #60	@ 0x3c
 801e4a2:	461c      	mov	r4, r3
 801e4a4:	4682      	mov	sl, r0
 801e4a6:	460e      	mov	r6, r1
 801e4a8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801e4ac:	4615      	mov	r5, r2
 801e4ae:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e4b0:	2f00      	cmp	r7, #0
 801e4b2:	f000 8141 	beq.w	801e738 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 801e4b6:	6820      	ldr	r0, [r4, #0]
 801e4b8:	aa0a      	add	r2, sp, #40	@ 0x28
 801e4ba:	6861      	ldr	r1, [r4, #4]
 801e4bc:	f04f 0802 	mov.w	r8, #2
 801e4c0:	3504      	adds	r5, #4
 801e4c2:	c203      	stmia	r2!, {r0, r1}
 801e4c4:	6818      	ldr	r0, [r3, #0]
 801e4c6:	aa0c      	add	r2, sp, #48	@ 0x30
 801e4c8:	6859      	ldr	r1, [r3, #4]
 801e4ca:	c203      	stmia	r2!, {r0, r1}
 801e4cc:	a80a      	add	r0, sp, #40	@ 0x28
 801e4ce:	f7ef fbff 	bl	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e4d2:	4621      	mov	r1, r4
 801e4d4:	a80c      	add	r0, sp, #48	@ 0x30
 801e4d6:	f7ef fc23 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e4da:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801e4de:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801e4e2:	f002 0301 	and.w	r3, r2, #1
 801e4e6:	9306      	str	r3, [sp, #24]
 801e4e8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801e4ec:	f003 0101 	and.w	r1, r3, #1
 801e4f0:	9105      	str	r1, [sp, #20]
 801e4f2:	9805      	ldr	r0, [sp, #20]
 801e4f4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801e4f8:	4403      	add	r3, r0
 801e4fa:	fb01 2303 	mla	r3, r1, r3, r2
 801e4fe:	fb93 f3f8 	sdiv	r3, r3, r8
 801e502:	441e      	add	r6, r3
 801e504:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801e508:	441a      	add	r2, r3
 801e50a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801e50e:	4419      	add	r1, r3
 801e510:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801e514:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801e518:	9303      	str	r3, [sp, #12]
 801e51a:	4b89      	ldr	r3, [pc, #548]	@ (801e740 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801e51c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801e520:	6818      	ldr	r0, [r3, #0]
 801e522:	6803      	ldr	r3, [r0, #0]
 801e524:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e526:	4798      	blx	r3
 801e528:	4a86      	ldr	r2, [pc, #536]	@ (801e744 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 801e52a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801e52e:	2fff      	cmp	r7, #255	@ 0xff
 801e530:	8813      	ldrh	r3, [r2, #0]
 801e532:	4694      	mov	ip, r2
 801e534:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 801e538:	fb03 9404 	mla	r4, r3, r4, r9
 801e53c:	fb03 f30b 	mul.w	r3, r3, fp
 801e540:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e544:	d071      	beq.n	801e62a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 801e546:	43f9      	mvns	r1, r7
 801e548:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e54c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801e550:	b2c9      	uxtb	r1, r1
 801e552:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801e556:	9104      	str	r1, [sp, #16]
 801e558:	9b07      	ldr	r3, [sp, #28]
 801e55a:	42a3      	cmp	r3, r4
 801e55c:	f240 80e7 	bls.w	801e72e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 801e560:	9b06      	ldr	r3, [sp, #24]
 801e562:	2b00      	cmp	r3, #0
 801e564:	d03d      	beq.n	801e5e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 801e566:	7831      	ldrb	r1, [r6, #0]
 801e568:	4650      	mov	r0, sl
 801e56a:	9b04      	ldr	r3, [sp, #16]
 801e56c:	f106 0801 	add.w	r8, r6, #1
 801e570:	f001 010f 	and.w	r1, r1, #15
 801e574:	8822      	ldrh	r2, [r4, #0]
 801e576:	9300      	str	r3, [sp, #0]
 801e578:	463b      	mov	r3, r7
 801e57a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e57e:	4429      	add	r1, r5
 801e580:	f7ff ff56 	bl	801e430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801e584:	9b03      	ldr	r3, [sp, #12]
 801e586:	f824 0b02 	strh.w	r0, [r4], #2
 801e58a:	f103 3bff 	add.w	fp, r3, #4294967295
 801e58e:	f1bb 0f01 	cmp.w	fp, #1
 801e592:	46a1      	mov	r9, r4
 801e594:	f104 0404 	add.w	r4, r4, #4
 801e598:	dd27      	ble.n	801e5ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 801e59a:	f898 1000 	ldrb.w	r1, [r8]
 801e59e:	4650      	mov	r0, sl
 801e5a0:	9b04      	ldr	r3, [sp, #16]
 801e5a2:	f1ab 0b02 	sub.w	fp, fp, #2
 801e5a6:	0909      	lsrs	r1, r1, #4
 801e5a8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801e5ac:	9300      	str	r3, [sp, #0]
 801e5ae:	463b      	mov	r3, r7
 801e5b0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e5b4:	4429      	add	r1, r5
 801e5b6:	f7ff ff3b 	bl	801e430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801e5ba:	f824 0c04 	strh.w	r0, [r4, #-4]
 801e5be:	f818 1b01 	ldrb.w	r1, [r8], #1
 801e5c2:	4650      	mov	r0, sl
 801e5c4:	9b04      	ldr	r3, [sp, #16]
 801e5c6:	f001 010f 	and.w	r1, r1, #15
 801e5ca:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801e5ce:	9300      	str	r3, [sp, #0]
 801e5d0:	463b      	mov	r3, r7
 801e5d2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e5d6:	4429      	add	r1, r5
 801e5d8:	f7ff ff2a 	bl	801e430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801e5dc:	f824 0c02 	strh.w	r0, [r4, #-2]
 801e5e0:	e7d5      	b.n	801e58e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 801e5e2:	46b0      	mov	r8, r6
 801e5e4:	f8dd b00c 	ldr.w	fp, [sp, #12]
 801e5e8:	e7d1      	b.n	801e58e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 801e5ea:	d10f      	bne.n	801e60c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 801e5ec:	f898 1000 	ldrb.w	r1, [r8]
 801e5f0:	4650      	mov	r0, sl
 801e5f2:	9b04      	ldr	r3, [sp, #16]
 801e5f4:	0909      	lsrs	r1, r1, #4
 801e5f6:	f8b9 2000 	ldrh.w	r2, [r9]
 801e5fa:	9300      	str	r3, [sp, #0]
 801e5fc:	463b      	mov	r3, r7
 801e5fe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e602:	4429      	add	r1, r5
 801e604:	f7ff ff14 	bl	801e430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801e608:	f829 0b02 	strh.w	r0, [r9], #2
 801e60c:	9b08      	ldr	r3, [sp, #32]
 801e60e:	9a05      	ldr	r2, [sp, #20]
 801e610:	881c      	ldrh	r4, [r3, #0]
 801e612:	9b03      	ldr	r3, [sp, #12]
 801e614:	1ae4      	subs	r4, r4, r3
 801e616:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801e61a:	4413      	add	r3, r2
 801e61c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e61e:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801e622:	fb93 f3f2 	sdiv	r3, r3, r2
 801e626:	441e      	add	r6, r3
 801e628:	e796      	b.n	801e558 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 801e62a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e62e:	4f46      	ldr	r7, [pc, #280]	@ (801e748 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 801e630:	42a3      	cmp	r3, r4
 801e632:	d97c      	bls.n	801e72e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 801e634:	9a06      	ldr	r2, [sp, #24]
 801e636:	2a00      	cmp	r2, #0
 801e638:	d054      	beq.n	801e6e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 801e63a:	7830      	ldrb	r0, [r6, #0]
 801e63c:	1c71      	adds	r1, r6, #1
 801e63e:	f000 000f 	and.w	r0, r0, #15
 801e642:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e646:	eb05 0e00 	add.w	lr, r5, r0
 801e64a:	5c28      	ldrb	r0, [r5, r0]
 801e64c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 801e650:	f89e e001 	ldrb.w	lr, [lr, #1]
 801e654:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801e658:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e65c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801e660:	ea42 020e 	orr.w	r2, r2, lr
 801e664:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 801e668:	f824 2b02 	strh.w	r2, [r4], #2
 801e66c:	9a03      	ldr	r2, [sp, #12]
 801e66e:	f102 3eff 	add.w	lr, r2, #4294967295
 801e672:	f1be 0f01 	cmp.w	lr, #1
 801e676:	4620      	mov	r0, r4
 801e678:	f104 0404 	add.w	r4, r4, #4
 801e67c:	dd36      	ble.n	801e6ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 801e67e:	7808      	ldrb	r0, [r1, #0]
 801e680:	f1ae 0e02 	sub.w	lr, lr, #2
 801e684:	0900      	lsrs	r0, r0, #4
 801e686:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e68a:	eb05 0a00 	add.w	sl, r5, r0
 801e68e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e692:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e696:	00d2      	lsls	r2, r2, #3
 801e698:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801e69c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e6a0:	ea49 0202 	orr.w	r2, r9, r2
 801e6a4:	f815 9000 	ldrb.w	r9, [r5, r0]
 801e6a8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e6ac:	f824 2c04 	strh.w	r2, [r4, #-4]
 801e6b0:	f811 0b01 	ldrb.w	r0, [r1], #1
 801e6b4:	f000 000f 	and.w	r0, r0, #15
 801e6b8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e6bc:	eb05 0a00 	add.w	sl, r5, r0
 801e6c0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e6c4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e6c8:	00d2      	lsls	r2, r2, #3
 801e6ca:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801e6ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e6d2:	ea49 0202 	orr.w	r2, r9, r2
 801e6d6:	f815 9000 	ldrb.w	r9, [r5, r0]
 801e6da:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e6de:	f824 2c02 	strh.w	r2, [r4, #-2]
 801e6e2:	e7c6      	b.n	801e672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801e6e4:	4631      	mov	r1, r6
 801e6e6:	f8dd e00c 	ldr.w	lr, [sp, #12]
 801e6ea:	e7c2      	b.n	801e672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801e6ec:	d111      	bne.n	801e712 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801e6ee:	7809      	ldrb	r1, [r1, #0]
 801e6f0:	0909      	lsrs	r1, r1, #4
 801e6f2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e6f6:	186c      	adds	r4, r5, r1
 801e6f8:	5c69      	ldrb	r1, [r5, r1]
 801e6fa:	78a2      	ldrb	r2, [r4, #2]
 801e6fc:	7864      	ldrb	r4, [r4, #1]
 801e6fe:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801e702:	00e4      	lsls	r4, r4, #3
 801e704:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801e708:	4322      	orrs	r2, r4
 801e70a:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 801e70e:	f820 2b02 	strh.w	r2, [r0], #2
 801e712:	9a03      	ldr	r2, [sp, #12]
 801e714:	f8bc 4000 	ldrh.w	r4, [ip]
 801e718:	9905      	ldr	r1, [sp, #20]
 801e71a:	1aa4      	subs	r4, r4, r2
 801e71c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801e720:	440a      	add	r2, r1
 801e722:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e726:	fb92 f2f8 	sdiv	r2, r2, r8
 801e72a:	4416      	add	r6, r2
 801e72c:	e780      	b.n	801e630 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 801e72e:	4b04      	ldr	r3, [pc, #16]	@ (801e740 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801e730:	6818      	ldr	r0, [r3, #0]
 801e732:	6803      	ldr	r3, [r0, #0]
 801e734:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e736:	4798      	blx	r3
 801e738:	b00f      	add	sp, #60	@ 0x3c
 801e73a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e73e:	bf00      	nop
 801e740:	200150c0 	.word	0x200150c0
 801e744:	200150ba 	.word	0x200150ba
 801e748:	fffff800 	.word	0xfffff800

0801e74c <CRC_Lock>:
 801e74c:	4a20      	ldr	r2, [pc, #128]	@ (801e7d0 <CRC_Lock+0x84>)
 801e74e:	b530      	push	{r4, r5, lr}
 801e750:	6813      	ldr	r3, [r2, #0]
 801e752:	f64f 74f0 	movw	r4, #65520	@ 0xfff0
 801e756:	f24c 2540 	movw	r5, #49728	@ 0xc240
 801e75a:	f023 0301 	bic.w	r3, r3, #1
 801e75e:	6013      	str	r3, [r2, #0]
 801e760:	4b1c      	ldr	r3, [pc, #112]	@ (801e7d4 <CRC_Lock+0x88>)
 801e762:	681a      	ldr	r2, [r3, #0]
 801e764:	4022      	ands	r2, r4
 801e766:	42aa      	cmp	r2, r5
 801e768:	d005      	beq.n	801e776 <CRC_Lock+0x2a>
 801e76a:	681b      	ldr	r3, [r3, #0]
 801e76c:	f24c 2270 	movw	r2, #49776	@ 0xc270
 801e770:	4023      	ands	r3, r4
 801e772:	4293      	cmp	r3, r2
 801e774:	d124      	bne.n	801e7c0 <CRC_Lock+0x74>
 801e776:	4b18      	ldr	r3, [pc, #96]	@ (801e7d8 <CRC_Lock+0x8c>)
 801e778:	681b      	ldr	r3, [r3, #0]
 801e77a:	bb0b      	cbnz	r3, 801e7c0 <CRC_Lock+0x74>
 801e77c:	4b17      	ldr	r3, [pc, #92]	@ (801e7dc <CRC_Lock+0x90>)
 801e77e:	681a      	ldr	r2, [r3, #0]
 801e780:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801e784:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 801e788:	d00d      	beq.n	801e7a6 <CRC_Lock+0x5a>
 801e78a:	681a      	ldr	r2, [r3, #0]
 801e78c:	f240 4483 	movw	r4, #1155	@ 0x483
 801e790:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801e794:	42a2      	cmp	r2, r4
 801e796:	d006      	beq.n	801e7a6 <CRC_Lock+0x5a>
 801e798:	681b      	ldr	r3, [r3, #0]
 801e79a:	f240 4285 	movw	r2, #1157	@ 0x485
 801e79e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801e7a2:	4293      	cmp	r3, r2
 801e7a4:	d10c      	bne.n	801e7c0 <CRC_Lock+0x74>
 801e7a6:	4b0e      	ldr	r3, [pc, #56]	@ (801e7e0 <CRC_Lock+0x94>)
 801e7a8:	2201      	movs	r2, #1
 801e7aa:	601a      	str	r2, [r3, #0]
 801e7ac:	681a      	ldr	r2, [r3, #0]
 801e7ae:	2a00      	cmp	r2, #0
 801e7b0:	d1fc      	bne.n	801e7ac <CRC_Lock+0x60>
 801e7b2:	4b0c      	ldr	r3, [pc, #48]	@ (801e7e4 <CRC_Lock+0x98>)
 801e7b4:	6018      	str	r0, [r3, #0]
 801e7b6:	6818      	ldr	r0, [r3, #0]
 801e7b8:	1a43      	subs	r3, r0, r1
 801e7ba:	4258      	negs	r0, r3
 801e7bc:	4158      	adcs	r0, r3
 801e7be:	bd30      	pop	{r4, r5, pc}
 801e7c0:	4b09      	ldr	r3, [pc, #36]	@ (801e7e8 <CRC_Lock+0x9c>)
 801e7c2:	2201      	movs	r2, #1
 801e7c4:	601a      	str	r2, [r3, #0]
 801e7c6:	681a      	ldr	r2, [r3, #0]
 801e7c8:	2a00      	cmp	r2, #0
 801e7ca:	d1fc      	bne.n	801e7c6 <CRC_Lock+0x7a>
 801e7cc:	4b07      	ldr	r3, [pc, #28]	@ (801e7ec <CRC_Lock+0xa0>)
 801e7ce:	e7f1      	b.n	801e7b4 <CRC_Lock+0x68>
 801e7d0:	e0002000 	.word	0xe0002000
 801e7d4:	e000ed00 	.word	0xe000ed00
 801e7d8:	e0042000 	.word	0xe0042000
 801e7dc:	5c001000 	.word	0x5c001000
 801e7e0:	58024c08 	.word	0x58024c08
 801e7e4:	58024c00 	.word	0x58024c00
 801e7e8:	40023008 	.word	0x40023008
 801e7ec:	40023000 	.word	0x40023000

0801e7f0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801e7f0:	6101      	str	r1, [r0, #16]
 801e7f2:	4770      	bx	lr

0801e7f4 <_ZN8touchgfx8Gestures4tickEv>:
 801e7f4:	7b83      	ldrb	r3, [r0, #14]
 801e7f6:	b14b      	cbz	r3, 801e80c <_ZN8touchgfx8Gestures4tickEv+0x18>
 801e7f8:	8903      	ldrh	r3, [r0, #8]
 801e7fa:	3301      	adds	r3, #1
 801e7fc:	b29b      	uxth	r3, r3
 801e7fe:	2b07      	cmp	r3, #7
 801e800:	8103      	strh	r3, [r0, #8]
 801e802:	bf81      	itttt	hi
 801e804:	2300      	movhi	r3, #0
 801e806:	8143      	strhhi	r3, [r0, #10]
 801e808:	8183      	strhhi	r3, [r0, #12]
 801e80a:	7383      	strbhi	r3, [r0, #14]
 801e80c:	4770      	bx	lr
	...

0801e810 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801e810:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801e814:	4698      	mov	r8, r3
 801e816:	8883      	ldrh	r3, [r0, #4]
 801e818:	4604      	mov	r4, r0
 801e81a:	4617      	mov	r7, r2
 801e81c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801e820:	eba8 0303 	sub.w	r3, r8, r3
 801e824:	4a19      	ldr	r2, [pc, #100]	@ (801e88c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801e826:	460e      	mov	r6, r1
 801e828:	b21b      	sxth	r3, r3
 801e82a:	88c1      	ldrh	r1, [r0, #6]
 801e82c:	9200      	str	r2, [sp, #0]
 801e82e:	2000      	movs	r0, #0
 801e830:	2b00      	cmp	r3, #0
 801e832:	8aa2      	ldrh	r2, [r4, #20]
 801e834:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 801e838:	bfb8      	it	lt
 801e83a:	425b      	neglt	r3, r3
 801e83c:	f88d 0004 	strb.w	r0, [sp, #4]
 801e840:	f8ad 1008 	strh.w	r1, [sp, #8]
 801e844:	b21b      	sxth	r3, r3
 801e846:	f8ad 800a 	strh.w	r8, [sp, #10]
 801e84a:	f8ad 500c 	strh.w	r5, [sp, #12]
 801e84e:	4293      	cmp	r3, r2
 801e850:	dc07      	bgt.n	801e862 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 801e852:	1a69      	subs	r1, r5, r1
 801e854:	b209      	sxth	r1, r1
 801e856:	2900      	cmp	r1, #0
 801e858:	bfb8      	it	lt
 801e85a:	4249      	neglt	r1, r1
 801e85c:	b209      	sxth	r1, r1
 801e85e:	428a      	cmp	r2, r1
 801e860:	da10      	bge.n	801e884 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 801e862:	6920      	ldr	r0, [r4, #16]
 801e864:	4669      	mov	r1, sp
 801e866:	eba8 0606 	sub.w	r6, r8, r6
 801e86a:	1bef      	subs	r7, r5, r7
 801e86c:	6803      	ldr	r3, [r0, #0]
 801e86e:	685b      	ldr	r3, [r3, #4]
 801e870:	4798      	blx	r3
 801e872:	2300      	movs	r3, #0
 801e874:	2001      	movs	r0, #1
 801e876:	8166      	strh	r6, [r4, #10]
 801e878:	8123      	strh	r3, [r4, #8]
 801e87a:	81a7      	strh	r7, [r4, #12]
 801e87c:	f8a4 8004 	strh.w	r8, [r4, #4]
 801e880:	80e5      	strh	r5, [r4, #6]
 801e882:	73a0      	strb	r0, [r4, #14]
 801e884:	b004      	add	sp, #16
 801e886:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e88a:	bf00      	nop
 801e88c:	0802172c 	.word	0x0802172c

0801e890 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801e890:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e892:	461e      	mov	r6, r3
 801e894:	1e4b      	subs	r3, r1, #1
 801e896:	b085      	sub	sp, #20
 801e898:	4604      	mov	r4, r0
 801e89a:	2b01      	cmp	r3, #1
 801e89c:	460d      	mov	r5, r1
 801e89e:	4617      	mov	r7, r2
 801e8a0:	d84b      	bhi.n	801e93a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801e8a2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801e8a6:	1cd3      	adds	r3, r2, #3
 801e8a8:	b29b      	uxth	r3, r3
 801e8aa:	2b06      	cmp	r3, #6
 801e8ac:	d916      	bls.n	801e8dc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801e8ae:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 801e950 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801e8b2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e8b6:	f8cd c004 	str.w	ip, [sp, #4]
 801e8ba:	f04f 0c00 	mov.w	ip, #0
 801e8be:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801e8c2:	6900      	ldr	r0, [r0, #16]
 801e8c4:	f8ad 100c 	strh.w	r1, [sp, #12]
 801e8c8:	a901      	add	r1, sp, #4
 801e8ca:	f88d c008 	strb.w	ip, [sp, #8]
 801e8ce:	f8ad 200a 	strh.w	r2, [sp, #10]
 801e8d2:	f8ad 300e 	strh.w	r3, [sp, #14]
 801e8d6:	6803      	ldr	r3, [r0, #0]
 801e8d8:	689b      	ldr	r3, [r3, #8]
 801e8da:	4798      	blx	r3
 801e8dc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801e8e0:	1cd3      	adds	r3, r2, #3
 801e8e2:	b29b      	uxth	r3, r3
 801e8e4:	2b06      	cmp	r3, #6
 801e8e6:	d916      	bls.n	801e916 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801e8e8:	f8df c064 	ldr.w	ip, [pc, #100]	@ 801e950 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801e8ec:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e8f0:	f8cd c004 	str.w	ip, [sp, #4]
 801e8f4:	f04f 0c01 	mov.w	ip, #1
 801e8f8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801e8fc:	6920      	ldr	r0, [r4, #16]
 801e8fe:	f8ad 100c 	strh.w	r1, [sp, #12]
 801e902:	a901      	add	r1, sp, #4
 801e904:	f88d c008 	strb.w	ip, [sp, #8]
 801e908:	f8ad 200a 	strh.w	r2, [sp, #10]
 801e90c:	f8ad 300e 	strh.w	r3, [sp, #14]
 801e910:	6803      	ldr	r3, [r0, #0]
 801e912:	689b      	ldr	r3, [r3, #8]
 801e914:	4798      	blx	r3
 801e916:	4b0d      	ldr	r3, [pc, #52]	@ (801e94c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801e918:	a901      	add	r1, sp, #4
 801e91a:	6920      	ldr	r0, [r4, #16]
 801e91c:	9301      	str	r3, [sp, #4]
 801e91e:	2300      	movs	r3, #0
 801e920:	f88d 5008 	strb.w	r5, [sp, #8]
 801e924:	f8ad 700a 	strh.w	r7, [sp, #10]
 801e928:	f8ad 600c 	strh.w	r6, [sp, #12]
 801e92c:	f8ad 300e 	strh.w	r3, [sp, #14]
 801e930:	6803      	ldr	r3, [r0, #0]
 801e932:	681b      	ldr	r3, [r3, #0]
 801e934:	4798      	blx	r3
 801e936:	b005      	add	sp, #20
 801e938:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e93a:	2900      	cmp	r1, #0
 801e93c:	d1eb      	bne.n	801e916 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801e93e:	80a2      	strh	r2, [r4, #4]
 801e940:	80c6      	strh	r6, [r0, #6]
 801e942:	60a1      	str	r1, [r4, #8]
 801e944:	81a1      	strh	r1, [r4, #12]
 801e946:	73a1      	strb	r1, [r4, #14]
 801e948:	e7e5      	b.n	801e916 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801e94a:	bf00      	nop
 801e94c:	08021718 	.word	0x08021718
 801e950:	08021740 	.word	0x08021740

0801e954 <__aeabi_atexit>:
 801e954:	460b      	mov	r3, r1
 801e956:	4601      	mov	r1, r0
 801e958:	4618      	mov	r0, r3
 801e95a:	f000 b911 	b.w	801eb80 <__cxa_atexit>

0801e95e <_ZdlPvj>:
 801e95e:	f000 b812 	b.w	801e986 <_ZdlPv>

0801e962 <__cxa_guard_acquire>:
 801e962:	6802      	ldr	r2, [r0, #0]
 801e964:	07d2      	lsls	r2, r2, #31
 801e966:	4603      	mov	r3, r0
 801e968:	d405      	bmi.n	801e976 <__cxa_guard_acquire+0x14>
 801e96a:	7842      	ldrb	r2, [r0, #1]
 801e96c:	b102      	cbz	r2, 801e970 <__cxa_guard_acquire+0xe>
 801e96e:	deff      	udf	#255	@ 0xff
 801e970:	2001      	movs	r0, #1
 801e972:	7058      	strb	r0, [r3, #1]
 801e974:	4770      	bx	lr
 801e976:	2000      	movs	r0, #0
 801e978:	4770      	bx	lr

0801e97a <__cxa_guard_release>:
 801e97a:	2301      	movs	r3, #1
 801e97c:	6003      	str	r3, [r0, #0]
 801e97e:	4770      	bx	lr

0801e980 <__cxa_pure_virtual>:
 801e980:	b508      	push	{r3, lr}
 801e982:	f000 f80f 	bl	801e9a4 <_ZSt9terminatev>

0801e986 <_ZdlPv>:
 801e986:	f000 b845 	b.w	801ea14 <free>

0801e98a <_ZN10__cxxabiv111__terminateEPFvvE>:
 801e98a:	b508      	push	{r3, lr}
 801e98c:	4780      	blx	r0
 801e98e:	f000 f80e 	bl	801e9ae <abort>
	...

0801e994 <_ZSt13get_terminatev>:
 801e994:	4b02      	ldr	r3, [pc, #8]	@ (801e9a0 <_ZSt13get_terminatev+0xc>)
 801e996:	6818      	ldr	r0, [r3, #0]
 801e998:	f3bf 8f5b 	dmb	ish
 801e99c:	4770      	bx	lr
 801e99e:	bf00      	nop
 801e9a0:	200000c0 	.word	0x200000c0

0801e9a4 <_ZSt9terminatev>:
 801e9a4:	b508      	push	{r3, lr}
 801e9a6:	f7ff fff5 	bl	801e994 <_ZSt13get_terminatev>
 801e9aa:	f7ff ffee 	bl	801e98a <_ZN10__cxxabiv111__terminateEPFvvE>

0801e9ae <abort>:
 801e9ae:	b508      	push	{r3, lr}
 801e9b0:	2006      	movs	r0, #6
 801e9b2:	f000 faf5 	bl	801efa0 <raise>
 801e9b6:	2001      	movs	r0, #1
 801e9b8:	f7e2 fcc8 	bl	800134c <_exit>

0801e9bc <__assert_func>:
 801e9bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801e9be:	4614      	mov	r4, r2
 801e9c0:	461a      	mov	r2, r3
 801e9c2:	4b09      	ldr	r3, [pc, #36]	@ (801e9e8 <__assert_func+0x2c>)
 801e9c4:	681b      	ldr	r3, [r3, #0]
 801e9c6:	4605      	mov	r5, r0
 801e9c8:	68d8      	ldr	r0, [r3, #12]
 801e9ca:	b954      	cbnz	r4, 801e9e2 <__assert_func+0x26>
 801e9cc:	4b07      	ldr	r3, [pc, #28]	@ (801e9ec <__assert_func+0x30>)
 801e9ce:	461c      	mov	r4, r3
 801e9d0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801e9d4:	9100      	str	r1, [sp, #0]
 801e9d6:	462b      	mov	r3, r5
 801e9d8:	4905      	ldr	r1, [pc, #20]	@ (801e9f0 <__assert_func+0x34>)
 801e9da:	f000 f983 	bl	801ece4 <fiprintf>
 801e9de:	f7ff ffe6 	bl	801e9ae <abort>
 801e9e2:	4b04      	ldr	r3, [pc, #16]	@ (801e9f4 <__assert_func+0x38>)
 801e9e4:	e7f4      	b.n	801e9d0 <__assert_func+0x14>
 801e9e6:	bf00      	nop
 801e9e8:	200000d0 	.word	0x200000d0
 801e9ec:	0801fab8 	.word	0x0801fab8
 801e9f0:	08021a69 	.word	0x08021a69
 801e9f4:	08021a5c 	.word	0x08021a5c

0801e9f8 <atexit>:
 801e9f8:	2300      	movs	r3, #0
 801e9fa:	4601      	mov	r1, r0
 801e9fc:	461a      	mov	r2, r3
 801e9fe:	4618      	mov	r0, r3
 801ea00:	f000 bb7c 	b.w	801f0fc <__register_exitproc>

0801ea04 <malloc>:
 801ea04:	4b02      	ldr	r3, [pc, #8]	@ (801ea10 <malloc+0xc>)
 801ea06:	4601      	mov	r1, r0
 801ea08:	6818      	ldr	r0, [r3, #0]
 801ea0a:	f000 b82d 	b.w	801ea68 <_malloc_r>
 801ea0e:	bf00      	nop
 801ea10:	200000d0 	.word	0x200000d0

0801ea14 <free>:
 801ea14:	4b02      	ldr	r3, [pc, #8]	@ (801ea20 <free+0xc>)
 801ea16:	4601      	mov	r1, r0
 801ea18:	6818      	ldr	r0, [r3, #0]
 801ea1a:	f000 bbcb 	b.w	801f1b4 <_free_r>
 801ea1e:	bf00      	nop
 801ea20:	200000d0 	.word	0x200000d0

0801ea24 <sbrk_aligned>:
 801ea24:	b570      	push	{r4, r5, r6, lr}
 801ea26:	4e0f      	ldr	r6, [pc, #60]	@ (801ea64 <sbrk_aligned+0x40>)
 801ea28:	460c      	mov	r4, r1
 801ea2a:	6831      	ldr	r1, [r6, #0]
 801ea2c:	4605      	mov	r5, r0
 801ea2e:	b911      	cbnz	r1, 801ea36 <sbrk_aligned+0x12>
 801ea30:	f000 fb06 	bl	801f040 <_sbrk_r>
 801ea34:	6030      	str	r0, [r6, #0]
 801ea36:	4621      	mov	r1, r4
 801ea38:	4628      	mov	r0, r5
 801ea3a:	f000 fb01 	bl	801f040 <_sbrk_r>
 801ea3e:	1c43      	adds	r3, r0, #1
 801ea40:	d103      	bne.n	801ea4a <sbrk_aligned+0x26>
 801ea42:	f04f 34ff 	mov.w	r4, #4294967295
 801ea46:	4620      	mov	r0, r4
 801ea48:	bd70      	pop	{r4, r5, r6, pc}
 801ea4a:	1cc4      	adds	r4, r0, #3
 801ea4c:	f024 0403 	bic.w	r4, r4, #3
 801ea50:	42a0      	cmp	r0, r4
 801ea52:	d0f8      	beq.n	801ea46 <sbrk_aligned+0x22>
 801ea54:	1a21      	subs	r1, r4, r0
 801ea56:	4628      	mov	r0, r5
 801ea58:	f000 faf2 	bl	801f040 <_sbrk_r>
 801ea5c:	3001      	adds	r0, #1
 801ea5e:	d1f2      	bne.n	801ea46 <sbrk_aligned+0x22>
 801ea60:	e7ef      	b.n	801ea42 <sbrk_aligned+0x1e>
 801ea62:	bf00      	nop
 801ea64:	20015a0c 	.word	0x20015a0c

0801ea68 <_malloc_r>:
 801ea68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ea6c:	1ccd      	adds	r5, r1, #3
 801ea6e:	f025 0503 	bic.w	r5, r5, #3
 801ea72:	3508      	adds	r5, #8
 801ea74:	2d0c      	cmp	r5, #12
 801ea76:	bf38      	it	cc
 801ea78:	250c      	movcc	r5, #12
 801ea7a:	2d00      	cmp	r5, #0
 801ea7c:	4606      	mov	r6, r0
 801ea7e:	db01      	blt.n	801ea84 <_malloc_r+0x1c>
 801ea80:	42a9      	cmp	r1, r5
 801ea82:	d904      	bls.n	801ea8e <_malloc_r+0x26>
 801ea84:	230c      	movs	r3, #12
 801ea86:	6033      	str	r3, [r6, #0]
 801ea88:	2000      	movs	r0, #0
 801ea8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ea8e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 801eb64 <_malloc_r+0xfc>
 801ea92:	f000 f869 	bl	801eb68 <__malloc_lock>
 801ea96:	f8d8 3000 	ldr.w	r3, [r8]
 801ea9a:	461c      	mov	r4, r3
 801ea9c:	bb44      	cbnz	r4, 801eaf0 <_malloc_r+0x88>
 801ea9e:	4629      	mov	r1, r5
 801eaa0:	4630      	mov	r0, r6
 801eaa2:	f7ff ffbf 	bl	801ea24 <sbrk_aligned>
 801eaa6:	1c43      	adds	r3, r0, #1
 801eaa8:	4604      	mov	r4, r0
 801eaaa:	d158      	bne.n	801eb5e <_malloc_r+0xf6>
 801eaac:	f8d8 4000 	ldr.w	r4, [r8]
 801eab0:	4627      	mov	r7, r4
 801eab2:	2f00      	cmp	r7, #0
 801eab4:	d143      	bne.n	801eb3e <_malloc_r+0xd6>
 801eab6:	2c00      	cmp	r4, #0
 801eab8:	d04b      	beq.n	801eb52 <_malloc_r+0xea>
 801eaba:	6823      	ldr	r3, [r4, #0]
 801eabc:	4639      	mov	r1, r7
 801eabe:	4630      	mov	r0, r6
 801eac0:	eb04 0903 	add.w	r9, r4, r3
 801eac4:	f000 fabc 	bl	801f040 <_sbrk_r>
 801eac8:	4581      	cmp	r9, r0
 801eaca:	d142      	bne.n	801eb52 <_malloc_r+0xea>
 801eacc:	6821      	ldr	r1, [r4, #0]
 801eace:	1a6d      	subs	r5, r5, r1
 801ead0:	4629      	mov	r1, r5
 801ead2:	4630      	mov	r0, r6
 801ead4:	f7ff ffa6 	bl	801ea24 <sbrk_aligned>
 801ead8:	3001      	adds	r0, #1
 801eada:	d03a      	beq.n	801eb52 <_malloc_r+0xea>
 801eadc:	6823      	ldr	r3, [r4, #0]
 801eade:	442b      	add	r3, r5
 801eae0:	6023      	str	r3, [r4, #0]
 801eae2:	f8d8 3000 	ldr.w	r3, [r8]
 801eae6:	685a      	ldr	r2, [r3, #4]
 801eae8:	bb62      	cbnz	r2, 801eb44 <_malloc_r+0xdc>
 801eaea:	f8c8 7000 	str.w	r7, [r8]
 801eaee:	e00f      	b.n	801eb10 <_malloc_r+0xa8>
 801eaf0:	6822      	ldr	r2, [r4, #0]
 801eaf2:	1b52      	subs	r2, r2, r5
 801eaf4:	d420      	bmi.n	801eb38 <_malloc_r+0xd0>
 801eaf6:	2a0b      	cmp	r2, #11
 801eaf8:	d917      	bls.n	801eb2a <_malloc_r+0xc2>
 801eafa:	1961      	adds	r1, r4, r5
 801eafc:	42a3      	cmp	r3, r4
 801eafe:	6025      	str	r5, [r4, #0]
 801eb00:	bf18      	it	ne
 801eb02:	6059      	strne	r1, [r3, #4]
 801eb04:	6863      	ldr	r3, [r4, #4]
 801eb06:	bf08      	it	eq
 801eb08:	f8c8 1000 	streq.w	r1, [r8]
 801eb0c:	5162      	str	r2, [r4, r5]
 801eb0e:	604b      	str	r3, [r1, #4]
 801eb10:	4630      	mov	r0, r6
 801eb12:	f000 f82f 	bl	801eb74 <__malloc_unlock>
 801eb16:	f104 000b 	add.w	r0, r4, #11
 801eb1a:	1d23      	adds	r3, r4, #4
 801eb1c:	f020 0007 	bic.w	r0, r0, #7
 801eb20:	1ac2      	subs	r2, r0, r3
 801eb22:	bf1c      	itt	ne
 801eb24:	1a1b      	subne	r3, r3, r0
 801eb26:	50a3      	strne	r3, [r4, r2]
 801eb28:	e7af      	b.n	801ea8a <_malloc_r+0x22>
 801eb2a:	6862      	ldr	r2, [r4, #4]
 801eb2c:	42a3      	cmp	r3, r4
 801eb2e:	bf0c      	ite	eq
 801eb30:	f8c8 2000 	streq.w	r2, [r8]
 801eb34:	605a      	strne	r2, [r3, #4]
 801eb36:	e7eb      	b.n	801eb10 <_malloc_r+0xa8>
 801eb38:	4623      	mov	r3, r4
 801eb3a:	6864      	ldr	r4, [r4, #4]
 801eb3c:	e7ae      	b.n	801ea9c <_malloc_r+0x34>
 801eb3e:	463c      	mov	r4, r7
 801eb40:	687f      	ldr	r7, [r7, #4]
 801eb42:	e7b6      	b.n	801eab2 <_malloc_r+0x4a>
 801eb44:	461a      	mov	r2, r3
 801eb46:	685b      	ldr	r3, [r3, #4]
 801eb48:	42a3      	cmp	r3, r4
 801eb4a:	d1fb      	bne.n	801eb44 <_malloc_r+0xdc>
 801eb4c:	2300      	movs	r3, #0
 801eb4e:	6053      	str	r3, [r2, #4]
 801eb50:	e7de      	b.n	801eb10 <_malloc_r+0xa8>
 801eb52:	230c      	movs	r3, #12
 801eb54:	6033      	str	r3, [r6, #0]
 801eb56:	4630      	mov	r0, r6
 801eb58:	f000 f80c 	bl	801eb74 <__malloc_unlock>
 801eb5c:	e794      	b.n	801ea88 <_malloc_r+0x20>
 801eb5e:	6005      	str	r5, [r0, #0]
 801eb60:	e7d6      	b.n	801eb10 <_malloc_r+0xa8>
 801eb62:	bf00      	nop
 801eb64:	20015a10 	.word	0x20015a10

0801eb68 <__malloc_lock>:
 801eb68:	4801      	ldr	r0, [pc, #4]	@ (801eb70 <__malloc_lock+0x8>)
 801eb6a:	f000 bab6 	b.w	801f0da <__retarget_lock_acquire_recursive>
 801eb6e:	bf00      	nop
 801eb70:	20015b54 	.word	0x20015b54

0801eb74 <__malloc_unlock>:
 801eb74:	4801      	ldr	r0, [pc, #4]	@ (801eb7c <__malloc_unlock+0x8>)
 801eb76:	f000 bab1 	b.w	801f0dc <__retarget_lock_release_recursive>
 801eb7a:	bf00      	nop
 801eb7c:	20015b54 	.word	0x20015b54

0801eb80 <__cxa_atexit>:
 801eb80:	b510      	push	{r4, lr}
 801eb82:	4604      	mov	r4, r0
 801eb84:	4804      	ldr	r0, [pc, #16]	@ (801eb98 <__cxa_atexit+0x18>)
 801eb86:	4613      	mov	r3, r2
 801eb88:	b120      	cbz	r0, 801eb94 <__cxa_atexit+0x14>
 801eb8a:	460a      	mov	r2, r1
 801eb8c:	2002      	movs	r0, #2
 801eb8e:	4621      	mov	r1, r4
 801eb90:	f000 fab4 	bl	801f0fc <__register_exitproc>
 801eb94:	bd10      	pop	{r4, pc}
 801eb96:	bf00      	nop
 801eb98:	0801f0fd 	.word	0x0801f0fd

0801eb9c <std>:
 801eb9c:	2300      	movs	r3, #0
 801eb9e:	b510      	push	{r4, lr}
 801eba0:	4604      	mov	r4, r0
 801eba2:	e9c0 3300 	strd	r3, r3, [r0]
 801eba6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801ebaa:	6083      	str	r3, [r0, #8]
 801ebac:	8181      	strh	r1, [r0, #12]
 801ebae:	6643      	str	r3, [r0, #100]	@ 0x64
 801ebb0:	81c2      	strh	r2, [r0, #14]
 801ebb2:	6183      	str	r3, [r0, #24]
 801ebb4:	4619      	mov	r1, r3
 801ebb6:	2208      	movs	r2, #8
 801ebb8:	305c      	adds	r0, #92	@ 0x5c
 801ebba:	f000 f99b 	bl	801eef4 <memset>
 801ebbe:	4b0d      	ldr	r3, [pc, #52]	@ (801ebf4 <std+0x58>)
 801ebc0:	6263      	str	r3, [r4, #36]	@ 0x24
 801ebc2:	4b0d      	ldr	r3, [pc, #52]	@ (801ebf8 <std+0x5c>)
 801ebc4:	62a3      	str	r3, [r4, #40]	@ 0x28
 801ebc6:	4b0d      	ldr	r3, [pc, #52]	@ (801ebfc <std+0x60>)
 801ebc8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 801ebca:	4b0d      	ldr	r3, [pc, #52]	@ (801ec00 <std+0x64>)
 801ebcc:	6323      	str	r3, [r4, #48]	@ 0x30
 801ebce:	4b0d      	ldr	r3, [pc, #52]	@ (801ec04 <std+0x68>)
 801ebd0:	6224      	str	r4, [r4, #32]
 801ebd2:	429c      	cmp	r4, r3
 801ebd4:	d006      	beq.n	801ebe4 <std+0x48>
 801ebd6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 801ebda:	4294      	cmp	r4, r2
 801ebdc:	d002      	beq.n	801ebe4 <std+0x48>
 801ebde:	33d0      	adds	r3, #208	@ 0xd0
 801ebe0:	429c      	cmp	r4, r3
 801ebe2:	d105      	bne.n	801ebf0 <std+0x54>
 801ebe4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 801ebe8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ebec:	f000 ba74 	b.w	801f0d8 <__retarget_lock_init_recursive>
 801ebf0:	bd10      	pop	{r4, pc}
 801ebf2:	bf00      	nop
 801ebf4:	0801ed45 	.word	0x0801ed45
 801ebf8:	0801ed67 	.word	0x0801ed67
 801ebfc:	0801ed9f 	.word	0x0801ed9f
 801ec00:	0801edc3 	.word	0x0801edc3
 801ec04:	20015a14 	.word	0x20015a14

0801ec08 <stdio_exit_handler>:
 801ec08:	4a02      	ldr	r2, [pc, #8]	@ (801ec14 <stdio_exit_handler+0xc>)
 801ec0a:	4903      	ldr	r1, [pc, #12]	@ (801ec18 <stdio_exit_handler+0x10>)
 801ec0c:	4803      	ldr	r0, [pc, #12]	@ (801ec1c <stdio_exit_handler+0x14>)
 801ec0e:	f000 b87b 	b.w	801ed08 <_fwalk_sglue>
 801ec12:	bf00      	nop
 801ec14:	200000c4 	.word	0x200000c4
 801ec18:	0801f8f1 	.word	0x0801f8f1
 801ec1c:	200000d4 	.word	0x200000d4

0801ec20 <cleanup_stdio>:
 801ec20:	6841      	ldr	r1, [r0, #4]
 801ec22:	4b0c      	ldr	r3, [pc, #48]	@ (801ec54 <cleanup_stdio+0x34>)
 801ec24:	4299      	cmp	r1, r3
 801ec26:	b510      	push	{r4, lr}
 801ec28:	4604      	mov	r4, r0
 801ec2a:	d001      	beq.n	801ec30 <cleanup_stdio+0x10>
 801ec2c:	f000 fe60 	bl	801f8f0 <_fflush_r>
 801ec30:	68a1      	ldr	r1, [r4, #8]
 801ec32:	4b09      	ldr	r3, [pc, #36]	@ (801ec58 <cleanup_stdio+0x38>)
 801ec34:	4299      	cmp	r1, r3
 801ec36:	d002      	beq.n	801ec3e <cleanup_stdio+0x1e>
 801ec38:	4620      	mov	r0, r4
 801ec3a:	f000 fe59 	bl	801f8f0 <_fflush_r>
 801ec3e:	68e1      	ldr	r1, [r4, #12]
 801ec40:	4b06      	ldr	r3, [pc, #24]	@ (801ec5c <cleanup_stdio+0x3c>)
 801ec42:	4299      	cmp	r1, r3
 801ec44:	d004      	beq.n	801ec50 <cleanup_stdio+0x30>
 801ec46:	4620      	mov	r0, r4
 801ec48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ec4c:	f000 be50 	b.w	801f8f0 <_fflush_r>
 801ec50:	bd10      	pop	{r4, pc}
 801ec52:	bf00      	nop
 801ec54:	20015a14 	.word	0x20015a14
 801ec58:	20015a7c 	.word	0x20015a7c
 801ec5c:	20015ae4 	.word	0x20015ae4

0801ec60 <global_stdio_init.part.0>:
 801ec60:	b510      	push	{r4, lr}
 801ec62:	4b0b      	ldr	r3, [pc, #44]	@ (801ec90 <global_stdio_init.part.0+0x30>)
 801ec64:	4c0b      	ldr	r4, [pc, #44]	@ (801ec94 <global_stdio_init.part.0+0x34>)
 801ec66:	4a0c      	ldr	r2, [pc, #48]	@ (801ec98 <global_stdio_init.part.0+0x38>)
 801ec68:	601a      	str	r2, [r3, #0]
 801ec6a:	4620      	mov	r0, r4
 801ec6c:	2200      	movs	r2, #0
 801ec6e:	2104      	movs	r1, #4
 801ec70:	f7ff ff94 	bl	801eb9c <std>
 801ec74:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 801ec78:	2201      	movs	r2, #1
 801ec7a:	2109      	movs	r1, #9
 801ec7c:	f7ff ff8e 	bl	801eb9c <std>
 801ec80:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 801ec84:	2202      	movs	r2, #2
 801ec86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ec8a:	2112      	movs	r1, #18
 801ec8c:	f7ff bf86 	b.w	801eb9c <std>
 801ec90:	20015b4c 	.word	0x20015b4c
 801ec94:	20015a14 	.word	0x20015a14
 801ec98:	0801ec09 	.word	0x0801ec09

0801ec9c <__sfp_lock_acquire>:
 801ec9c:	4801      	ldr	r0, [pc, #4]	@ (801eca4 <__sfp_lock_acquire+0x8>)
 801ec9e:	f000 ba1c 	b.w	801f0da <__retarget_lock_acquire_recursive>
 801eca2:	bf00      	nop
 801eca4:	20015b56 	.word	0x20015b56

0801eca8 <__sfp_lock_release>:
 801eca8:	4801      	ldr	r0, [pc, #4]	@ (801ecb0 <__sfp_lock_release+0x8>)
 801ecaa:	f000 ba17 	b.w	801f0dc <__retarget_lock_release_recursive>
 801ecae:	bf00      	nop
 801ecb0:	20015b56 	.word	0x20015b56

0801ecb4 <__sinit>:
 801ecb4:	b510      	push	{r4, lr}
 801ecb6:	4604      	mov	r4, r0
 801ecb8:	f7ff fff0 	bl	801ec9c <__sfp_lock_acquire>
 801ecbc:	6a23      	ldr	r3, [r4, #32]
 801ecbe:	b11b      	cbz	r3, 801ecc8 <__sinit+0x14>
 801ecc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ecc4:	f7ff bff0 	b.w	801eca8 <__sfp_lock_release>
 801ecc8:	4b04      	ldr	r3, [pc, #16]	@ (801ecdc <__sinit+0x28>)
 801ecca:	6223      	str	r3, [r4, #32]
 801eccc:	4b04      	ldr	r3, [pc, #16]	@ (801ece0 <__sinit+0x2c>)
 801ecce:	681b      	ldr	r3, [r3, #0]
 801ecd0:	2b00      	cmp	r3, #0
 801ecd2:	d1f5      	bne.n	801ecc0 <__sinit+0xc>
 801ecd4:	f7ff ffc4 	bl	801ec60 <global_stdio_init.part.0>
 801ecd8:	e7f2      	b.n	801ecc0 <__sinit+0xc>
 801ecda:	bf00      	nop
 801ecdc:	0801ec21 	.word	0x0801ec21
 801ece0:	20015b4c 	.word	0x20015b4c

0801ece4 <fiprintf>:
 801ece4:	b40e      	push	{r1, r2, r3}
 801ece6:	b503      	push	{r0, r1, lr}
 801ece8:	4601      	mov	r1, r0
 801ecea:	ab03      	add	r3, sp, #12
 801ecec:	4805      	ldr	r0, [pc, #20]	@ (801ed04 <fiprintf+0x20>)
 801ecee:	f853 2b04 	ldr.w	r2, [r3], #4
 801ecf2:	6800      	ldr	r0, [r0, #0]
 801ecf4:	9301      	str	r3, [sp, #4]
 801ecf6:	f000 fad1 	bl	801f29c <_vfiprintf_r>
 801ecfa:	b002      	add	sp, #8
 801ecfc:	f85d eb04 	ldr.w	lr, [sp], #4
 801ed00:	b003      	add	sp, #12
 801ed02:	4770      	bx	lr
 801ed04:	200000d0 	.word	0x200000d0

0801ed08 <_fwalk_sglue>:
 801ed08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ed0c:	4607      	mov	r7, r0
 801ed0e:	4688      	mov	r8, r1
 801ed10:	4614      	mov	r4, r2
 801ed12:	2600      	movs	r6, #0
 801ed14:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801ed18:	f1b9 0901 	subs.w	r9, r9, #1
 801ed1c:	d505      	bpl.n	801ed2a <_fwalk_sglue+0x22>
 801ed1e:	6824      	ldr	r4, [r4, #0]
 801ed20:	2c00      	cmp	r4, #0
 801ed22:	d1f7      	bne.n	801ed14 <_fwalk_sglue+0xc>
 801ed24:	4630      	mov	r0, r6
 801ed26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ed2a:	89ab      	ldrh	r3, [r5, #12]
 801ed2c:	2b01      	cmp	r3, #1
 801ed2e:	d907      	bls.n	801ed40 <_fwalk_sglue+0x38>
 801ed30:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801ed34:	3301      	adds	r3, #1
 801ed36:	d003      	beq.n	801ed40 <_fwalk_sglue+0x38>
 801ed38:	4629      	mov	r1, r5
 801ed3a:	4638      	mov	r0, r7
 801ed3c:	47c0      	blx	r8
 801ed3e:	4306      	orrs	r6, r0
 801ed40:	3568      	adds	r5, #104	@ 0x68
 801ed42:	e7e9      	b.n	801ed18 <_fwalk_sglue+0x10>

0801ed44 <__sread>:
 801ed44:	b510      	push	{r4, lr}
 801ed46:	460c      	mov	r4, r1
 801ed48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ed4c:	f000 f952 	bl	801eff4 <_read_r>
 801ed50:	2800      	cmp	r0, #0
 801ed52:	bfab      	itete	ge
 801ed54:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 801ed56:	89a3      	ldrhlt	r3, [r4, #12]
 801ed58:	181b      	addge	r3, r3, r0
 801ed5a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801ed5e:	bfac      	ite	ge
 801ed60:	6563      	strge	r3, [r4, #84]	@ 0x54
 801ed62:	81a3      	strhlt	r3, [r4, #12]
 801ed64:	bd10      	pop	{r4, pc}

0801ed66 <__swrite>:
 801ed66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ed6a:	461f      	mov	r7, r3
 801ed6c:	898b      	ldrh	r3, [r1, #12]
 801ed6e:	05db      	lsls	r3, r3, #23
 801ed70:	4605      	mov	r5, r0
 801ed72:	460c      	mov	r4, r1
 801ed74:	4616      	mov	r6, r2
 801ed76:	d505      	bpl.n	801ed84 <__swrite+0x1e>
 801ed78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ed7c:	2302      	movs	r3, #2
 801ed7e:	2200      	movs	r2, #0
 801ed80:	f000 f926 	bl	801efd0 <_lseek_r>
 801ed84:	89a3      	ldrh	r3, [r4, #12]
 801ed86:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801ed8a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801ed8e:	81a3      	strh	r3, [r4, #12]
 801ed90:	4632      	mov	r2, r6
 801ed92:	463b      	mov	r3, r7
 801ed94:	4628      	mov	r0, r5
 801ed96:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ed9a:	f000 b961 	b.w	801f060 <_write_r>

0801ed9e <__sseek>:
 801ed9e:	b510      	push	{r4, lr}
 801eda0:	460c      	mov	r4, r1
 801eda2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801eda6:	f000 f913 	bl	801efd0 <_lseek_r>
 801edaa:	1c43      	adds	r3, r0, #1
 801edac:	89a3      	ldrh	r3, [r4, #12]
 801edae:	bf15      	itete	ne
 801edb0:	6560      	strne	r0, [r4, #84]	@ 0x54
 801edb2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 801edb6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 801edba:	81a3      	strheq	r3, [r4, #12]
 801edbc:	bf18      	it	ne
 801edbe:	81a3      	strhne	r3, [r4, #12]
 801edc0:	bd10      	pop	{r4, pc}

0801edc2 <__sclose>:
 801edc2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801edc6:	f000 b8f3 	b.w	801efb0 <_close_r>

0801edca <__swbuf_r>:
 801edca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801edcc:	460e      	mov	r6, r1
 801edce:	4614      	mov	r4, r2
 801edd0:	4605      	mov	r5, r0
 801edd2:	b118      	cbz	r0, 801eddc <__swbuf_r+0x12>
 801edd4:	6a03      	ldr	r3, [r0, #32]
 801edd6:	b90b      	cbnz	r3, 801eddc <__swbuf_r+0x12>
 801edd8:	f7ff ff6c 	bl	801ecb4 <__sinit>
 801eddc:	69a3      	ldr	r3, [r4, #24]
 801edde:	60a3      	str	r3, [r4, #8]
 801ede0:	89a3      	ldrh	r3, [r4, #12]
 801ede2:	071a      	lsls	r2, r3, #28
 801ede4:	d501      	bpl.n	801edea <__swbuf_r+0x20>
 801ede6:	6923      	ldr	r3, [r4, #16]
 801ede8:	b943      	cbnz	r3, 801edfc <__swbuf_r+0x32>
 801edea:	4621      	mov	r1, r4
 801edec:	4628      	mov	r0, r5
 801edee:	f000 f82b 	bl	801ee48 <__swsetup_r>
 801edf2:	b118      	cbz	r0, 801edfc <__swbuf_r+0x32>
 801edf4:	f04f 37ff 	mov.w	r7, #4294967295
 801edf8:	4638      	mov	r0, r7
 801edfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801edfc:	6823      	ldr	r3, [r4, #0]
 801edfe:	6922      	ldr	r2, [r4, #16]
 801ee00:	1a98      	subs	r0, r3, r2
 801ee02:	6963      	ldr	r3, [r4, #20]
 801ee04:	b2f6      	uxtb	r6, r6
 801ee06:	4283      	cmp	r3, r0
 801ee08:	4637      	mov	r7, r6
 801ee0a:	dc05      	bgt.n	801ee18 <__swbuf_r+0x4e>
 801ee0c:	4621      	mov	r1, r4
 801ee0e:	4628      	mov	r0, r5
 801ee10:	f000 fd6e 	bl	801f8f0 <_fflush_r>
 801ee14:	2800      	cmp	r0, #0
 801ee16:	d1ed      	bne.n	801edf4 <__swbuf_r+0x2a>
 801ee18:	68a3      	ldr	r3, [r4, #8]
 801ee1a:	3b01      	subs	r3, #1
 801ee1c:	60a3      	str	r3, [r4, #8]
 801ee1e:	6823      	ldr	r3, [r4, #0]
 801ee20:	1c5a      	adds	r2, r3, #1
 801ee22:	6022      	str	r2, [r4, #0]
 801ee24:	701e      	strb	r6, [r3, #0]
 801ee26:	6962      	ldr	r2, [r4, #20]
 801ee28:	1c43      	adds	r3, r0, #1
 801ee2a:	429a      	cmp	r2, r3
 801ee2c:	d004      	beq.n	801ee38 <__swbuf_r+0x6e>
 801ee2e:	89a3      	ldrh	r3, [r4, #12]
 801ee30:	07db      	lsls	r3, r3, #31
 801ee32:	d5e1      	bpl.n	801edf8 <__swbuf_r+0x2e>
 801ee34:	2e0a      	cmp	r6, #10
 801ee36:	d1df      	bne.n	801edf8 <__swbuf_r+0x2e>
 801ee38:	4621      	mov	r1, r4
 801ee3a:	4628      	mov	r0, r5
 801ee3c:	f000 fd58 	bl	801f8f0 <_fflush_r>
 801ee40:	2800      	cmp	r0, #0
 801ee42:	d0d9      	beq.n	801edf8 <__swbuf_r+0x2e>
 801ee44:	e7d6      	b.n	801edf4 <__swbuf_r+0x2a>
	...

0801ee48 <__swsetup_r>:
 801ee48:	b538      	push	{r3, r4, r5, lr}
 801ee4a:	4b29      	ldr	r3, [pc, #164]	@ (801eef0 <__swsetup_r+0xa8>)
 801ee4c:	4605      	mov	r5, r0
 801ee4e:	6818      	ldr	r0, [r3, #0]
 801ee50:	460c      	mov	r4, r1
 801ee52:	b118      	cbz	r0, 801ee5c <__swsetup_r+0x14>
 801ee54:	6a03      	ldr	r3, [r0, #32]
 801ee56:	b90b      	cbnz	r3, 801ee5c <__swsetup_r+0x14>
 801ee58:	f7ff ff2c 	bl	801ecb4 <__sinit>
 801ee5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ee60:	0719      	lsls	r1, r3, #28
 801ee62:	d422      	bmi.n	801eeaa <__swsetup_r+0x62>
 801ee64:	06da      	lsls	r2, r3, #27
 801ee66:	d407      	bmi.n	801ee78 <__swsetup_r+0x30>
 801ee68:	2209      	movs	r2, #9
 801ee6a:	602a      	str	r2, [r5, #0]
 801ee6c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801ee70:	81a3      	strh	r3, [r4, #12]
 801ee72:	f04f 30ff 	mov.w	r0, #4294967295
 801ee76:	e033      	b.n	801eee0 <__swsetup_r+0x98>
 801ee78:	0758      	lsls	r0, r3, #29
 801ee7a:	d512      	bpl.n	801eea2 <__swsetup_r+0x5a>
 801ee7c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801ee7e:	b141      	cbz	r1, 801ee92 <__swsetup_r+0x4a>
 801ee80:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801ee84:	4299      	cmp	r1, r3
 801ee86:	d002      	beq.n	801ee8e <__swsetup_r+0x46>
 801ee88:	4628      	mov	r0, r5
 801ee8a:	f000 f993 	bl	801f1b4 <_free_r>
 801ee8e:	2300      	movs	r3, #0
 801ee90:	6363      	str	r3, [r4, #52]	@ 0x34
 801ee92:	89a3      	ldrh	r3, [r4, #12]
 801ee94:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 801ee98:	81a3      	strh	r3, [r4, #12]
 801ee9a:	2300      	movs	r3, #0
 801ee9c:	6063      	str	r3, [r4, #4]
 801ee9e:	6923      	ldr	r3, [r4, #16]
 801eea0:	6023      	str	r3, [r4, #0]
 801eea2:	89a3      	ldrh	r3, [r4, #12]
 801eea4:	f043 0308 	orr.w	r3, r3, #8
 801eea8:	81a3      	strh	r3, [r4, #12]
 801eeaa:	6923      	ldr	r3, [r4, #16]
 801eeac:	b94b      	cbnz	r3, 801eec2 <__swsetup_r+0x7a>
 801eeae:	89a3      	ldrh	r3, [r4, #12]
 801eeb0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 801eeb4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 801eeb8:	d003      	beq.n	801eec2 <__swsetup_r+0x7a>
 801eeba:	4621      	mov	r1, r4
 801eebc:	4628      	mov	r0, r5
 801eebe:	f000 fd65 	bl	801f98c <__smakebuf_r>
 801eec2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801eec6:	f013 0201 	ands.w	r2, r3, #1
 801eeca:	d00a      	beq.n	801eee2 <__swsetup_r+0x9a>
 801eecc:	2200      	movs	r2, #0
 801eece:	60a2      	str	r2, [r4, #8]
 801eed0:	6962      	ldr	r2, [r4, #20]
 801eed2:	4252      	negs	r2, r2
 801eed4:	61a2      	str	r2, [r4, #24]
 801eed6:	6922      	ldr	r2, [r4, #16]
 801eed8:	b942      	cbnz	r2, 801eeec <__swsetup_r+0xa4>
 801eeda:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801eede:	d1c5      	bne.n	801ee6c <__swsetup_r+0x24>
 801eee0:	bd38      	pop	{r3, r4, r5, pc}
 801eee2:	0799      	lsls	r1, r3, #30
 801eee4:	bf58      	it	pl
 801eee6:	6962      	ldrpl	r2, [r4, #20]
 801eee8:	60a2      	str	r2, [r4, #8]
 801eeea:	e7f4      	b.n	801eed6 <__swsetup_r+0x8e>
 801eeec:	2000      	movs	r0, #0
 801eeee:	e7f7      	b.n	801eee0 <__swsetup_r+0x98>
 801eef0:	200000d0 	.word	0x200000d0

0801eef4 <memset>:
 801eef4:	4402      	add	r2, r0
 801eef6:	4603      	mov	r3, r0
 801eef8:	4293      	cmp	r3, r2
 801eefa:	d100      	bne.n	801eefe <memset+0xa>
 801eefc:	4770      	bx	lr
 801eefe:	f803 1b01 	strb.w	r1, [r3], #1
 801ef02:	e7f9      	b.n	801eef8 <memset+0x4>

0801ef04 <strncmp>:
 801ef04:	b510      	push	{r4, lr}
 801ef06:	b16a      	cbz	r2, 801ef24 <strncmp+0x20>
 801ef08:	3901      	subs	r1, #1
 801ef0a:	1884      	adds	r4, r0, r2
 801ef0c:	f810 2b01 	ldrb.w	r2, [r0], #1
 801ef10:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 801ef14:	429a      	cmp	r2, r3
 801ef16:	d103      	bne.n	801ef20 <strncmp+0x1c>
 801ef18:	42a0      	cmp	r0, r4
 801ef1a:	d001      	beq.n	801ef20 <strncmp+0x1c>
 801ef1c:	2a00      	cmp	r2, #0
 801ef1e:	d1f5      	bne.n	801ef0c <strncmp+0x8>
 801ef20:	1ad0      	subs	r0, r2, r3
 801ef22:	bd10      	pop	{r4, pc}
 801ef24:	4610      	mov	r0, r2
 801ef26:	e7fc      	b.n	801ef22 <strncmp+0x1e>

0801ef28 <strncpy>:
 801ef28:	b510      	push	{r4, lr}
 801ef2a:	3901      	subs	r1, #1
 801ef2c:	4603      	mov	r3, r0
 801ef2e:	b132      	cbz	r2, 801ef3e <strncpy+0x16>
 801ef30:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 801ef34:	f803 4b01 	strb.w	r4, [r3], #1
 801ef38:	3a01      	subs	r2, #1
 801ef3a:	2c00      	cmp	r4, #0
 801ef3c:	d1f7      	bne.n	801ef2e <strncpy+0x6>
 801ef3e:	441a      	add	r2, r3
 801ef40:	2100      	movs	r1, #0
 801ef42:	4293      	cmp	r3, r2
 801ef44:	d100      	bne.n	801ef48 <strncpy+0x20>
 801ef46:	bd10      	pop	{r4, pc}
 801ef48:	f803 1b01 	strb.w	r1, [r3], #1
 801ef4c:	e7f9      	b.n	801ef42 <strncpy+0x1a>

0801ef4e <_raise_r>:
 801ef4e:	291f      	cmp	r1, #31
 801ef50:	b538      	push	{r3, r4, r5, lr}
 801ef52:	4605      	mov	r5, r0
 801ef54:	460c      	mov	r4, r1
 801ef56:	d904      	bls.n	801ef62 <_raise_r+0x14>
 801ef58:	2316      	movs	r3, #22
 801ef5a:	6003      	str	r3, [r0, #0]
 801ef5c:	f04f 30ff 	mov.w	r0, #4294967295
 801ef60:	bd38      	pop	{r3, r4, r5, pc}
 801ef62:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 801ef64:	b112      	cbz	r2, 801ef6c <_raise_r+0x1e>
 801ef66:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801ef6a:	b94b      	cbnz	r3, 801ef80 <_raise_r+0x32>
 801ef6c:	4628      	mov	r0, r5
 801ef6e:	f000 f865 	bl	801f03c <_getpid_r>
 801ef72:	4622      	mov	r2, r4
 801ef74:	4601      	mov	r1, r0
 801ef76:	4628      	mov	r0, r5
 801ef78:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801ef7c:	f000 b84c 	b.w	801f018 <_kill_r>
 801ef80:	2b01      	cmp	r3, #1
 801ef82:	d00a      	beq.n	801ef9a <_raise_r+0x4c>
 801ef84:	1c59      	adds	r1, r3, #1
 801ef86:	d103      	bne.n	801ef90 <_raise_r+0x42>
 801ef88:	2316      	movs	r3, #22
 801ef8a:	6003      	str	r3, [r0, #0]
 801ef8c:	2001      	movs	r0, #1
 801ef8e:	e7e7      	b.n	801ef60 <_raise_r+0x12>
 801ef90:	2100      	movs	r1, #0
 801ef92:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 801ef96:	4620      	mov	r0, r4
 801ef98:	4798      	blx	r3
 801ef9a:	2000      	movs	r0, #0
 801ef9c:	e7e0      	b.n	801ef60 <_raise_r+0x12>
	...

0801efa0 <raise>:
 801efa0:	4b02      	ldr	r3, [pc, #8]	@ (801efac <raise+0xc>)
 801efa2:	4601      	mov	r1, r0
 801efa4:	6818      	ldr	r0, [r3, #0]
 801efa6:	f7ff bfd2 	b.w	801ef4e <_raise_r>
 801efaa:	bf00      	nop
 801efac:	200000d0 	.word	0x200000d0

0801efb0 <_close_r>:
 801efb0:	b538      	push	{r3, r4, r5, lr}
 801efb2:	4d06      	ldr	r5, [pc, #24]	@ (801efcc <_close_r+0x1c>)
 801efb4:	2300      	movs	r3, #0
 801efb6:	4604      	mov	r4, r0
 801efb8:	4608      	mov	r0, r1
 801efba:	602b      	str	r3, [r5, #0]
 801efbc:	f7e2 f9e8 	bl	8001390 <_close>
 801efc0:	1c43      	adds	r3, r0, #1
 801efc2:	d102      	bne.n	801efca <_close_r+0x1a>
 801efc4:	682b      	ldr	r3, [r5, #0]
 801efc6:	b103      	cbz	r3, 801efca <_close_r+0x1a>
 801efc8:	6023      	str	r3, [r4, #0]
 801efca:	bd38      	pop	{r3, r4, r5, pc}
 801efcc:	20015b50 	.word	0x20015b50

0801efd0 <_lseek_r>:
 801efd0:	b538      	push	{r3, r4, r5, lr}
 801efd2:	4d07      	ldr	r5, [pc, #28]	@ (801eff0 <_lseek_r+0x20>)
 801efd4:	4604      	mov	r4, r0
 801efd6:	4608      	mov	r0, r1
 801efd8:	4611      	mov	r1, r2
 801efda:	2200      	movs	r2, #0
 801efdc:	602a      	str	r2, [r5, #0]
 801efde:	461a      	mov	r2, r3
 801efe0:	f7e2 f9e0 	bl	80013a4 <_lseek>
 801efe4:	1c43      	adds	r3, r0, #1
 801efe6:	d102      	bne.n	801efee <_lseek_r+0x1e>
 801efe8:	682b      	ldr	r3, [r5, #0]
 801efea:	b103      	cbz	r3, 801efee <_lseek_r+0x1e>
 801efec:	6023      	str	r3, [r4, #0]
 801efee:	bd38      	pop	{r3, r4, r5, pc}
 801eff0:	20015b50 	.word	0x20015b50

0801eff4 <_read_r>:
 801eff4:	b538      	push	{r3, r4, r5, lr}
 801eff6:	4d07      	ldr	r5, [pc, #28]	@ (801f014 <_read_r+0x20>)
 801eff8:	4604      	mov	r4, r0
 801effa:	4608      	mov	r0, r1
 801effc:	4611      	mov	r1, r2
 801effe:	2200      	movs	r2, #0
 801f000:	602a      	str	r2, [r5, #0]
 801f002:	461a      	mov	r2, r3
 801f004:	f7e2 f9a8 	bl	8001358 <_read>
 801f008:	1c43      	adds	r3, r0, #1
 801f00a:	d102      	bne.n	801f012 <_read_r+0x1e>
 801f00c:	682b      	ldr	r3, [r5, #0]
 801f00e:	b103      	cbz	r3, 801f012 <_read_r+0x1e>
 801f010:	6023      	str	r3, [r4, #0]
 801f012:	bd38      	pop	{r3, r4, r5, pc}
 801f014:	20015b50 	.word	0x20015b50

0801f018 <_kill_r>:
 801f018:	b538      	push	{r3, r4, r5, lr}
 801f01a:	4d07      	ldr	r5, [pc, #28]	@ (801f038 <_kill_r+0x20>)
 801f01c:	2300      	movs	r3, #0
 801f01e:	4604      	mov	r4, r0
 801f020:	4608      	mov	r0, r1
 801f022:	4611      	mov	r1, r2
 801f024:	602b      	str	r3, [r5, #0]
 801f026:	f7e2 f989 	bl	800133c <_kill>
 801f02a:	1c43      	adds	r3, r0, #1
 801f02c:	d102      	bne.n	801f034 <_kill_r+0x1c>
 801f02e:	682b      	ldr	r3, [r5, #0]
 801f030:	b103      	cbz	r3, 801f034 <_kill_r+0x1c>
 801f032:	6023      	str	r3, [r4, #0]
 801f034:	bd38      	pop	{r3, r4, r5, pc}
 801f036:	bf00      	nop
 801f038:	20015b50 	.word	0x20015b50

0801f03c <_getpid_r>:
 801f03c:	f7e2 b97c 	b.w	8001338 <_getpid>

0801f040 <_sbrk_r>:
 801f040:	b538      	push	{r3, r4, r5, lr}
 801f042:	4d06      	ldr	r5, [pc, #24]	@ (801f05c <_sbrk_r+0x1c>)
 801f044:	2300      	movs	r3, #0
 801f046:	4604      	mov	r4, r0
 801f048:	4608      	mov	r0, r1
 801f04a:	602b      	str	r3, [r5, #0]
 801f04c:	f7e2 f9ac 	bl	80013a8 <_sbrk>
 801f050:	1c43      	adds	r3, r0, #1
 801f052:	d102      	bne.n	801f05a <_sbrk_r+0x1a>
 801f054:	682b      	ldr	r3, [r5, #0]
 801f056:	b103      	cbz	r3, 801f05a <_sbrk_r+0x1a>
 801f058:	6023      	str	r3, [r4, #0]
 801f05a:	bd38      	pop	{r3, r4, r5, pc}
 801f05c:	20015b50 	.word	0x20015b50

0801f060 <_write_r>:
 801f060:	b538      	push	{r3, r4, r5, lr}
 801f062:	4d07      	ldr	r5, [pc, #28]	@ (801f080 <_write_r+0x20>)
 801f064:	4604      	mov	r4, r0
 801f066:	4608      	mov	r0, r1
 801f068:	4611      	mov	r1, r2
 801f06a:	2200      	movs	r2, #0
 801f06c:	602a      	str	r2, [r5, #0]
 801f06e:	461a      	mov	r2, r3
 801f070:	f7e2 f980 	bl	8001374 <_write>
 801f074:	1c43      	adds	r3, r0, #1
 801f076:	d102      	bne.n	801f07e <_write_r+0x1e>
 801f078:	682b      	ldr	r3, [r5, #0]
 801f07a:	b103      	cbz	r3, 801f07e <_write_r+0x1e>
 801f07c:	6023      	str	r3, [r4, #0]
 801f07e:	bd38      	pop	{r3, r4, r5, pc}
 801f080:	20015b50 	.word	0x20015b50

0801f084 <__errno>:
 801f084:	4b01      	ldr	r3, [pc, #4]	@ (801f08c <__errno+0x8>)
 801f086:	6818      	ldr	r0, [r3, #0]
 801f088:	4770      	bx	lr
 801f08a:	bf00      	nop
 801f08c:	200000d0 	.word	0x200000d0

0801f090 <__libc_init_array>:
 801f090:	b570      	push	{r4, r5, r6, lr}
 801f092:	4d0d      	ldr	r5, [pc, #52]	@ (801f0c8 <__libc_init_array+0x38>)
 801f094:	4c0d      	ldr	r4, [pc, #52]	@ (801f0cc <__libc_init_array+0x3c>)
 801f096:	1b64      	subs	r4, r4, r5
 801f098:	10a4      	asrs	r4, r4, #2
 801f09a:	2600      	movs	r6, #0
 801f09c:	42a6      	cmp	r6, r4
 801f09e:	d109      	bne.n	801f0b4 <__libc_init_array+0x24>
 801f0a0:	4d0b      	ldr	r5, [pc, #44]	@ (801f0d0 <__libc_init_array+0x40>)
 801f0a2:	4c0c      	ldr	r4, [pc, #48]	@ (801f0d4 <__libc_init_array+0x44>)
 801f0a4:	f000 fcd0 	bl	801fa48 <_init>
 801f0a8:	1b64      	subs	r4, r4, r5
 801f0aa:	10a4      	asrs	r4, r4, #2
 801f0ac:	2600      	movs	r6, #0
 801f0ae:	42a6      	cmp	r6, r4
 801f0b0:	d105      	bne.n	801f0be <__libc_init_array+0x2e>
 801f0b2:	bd70      	pop	{r4, r5, r6, pc}
 801f0b4:	f855 3b04 	ldr.w	r3, [r5], #4
 801f0b8:	4798      	blx	r3
 801f0ba:	3601      	adds	r6, #1
 801f0bc:	e7ee      	b.n	801f09c <__libc_init_array+0xc>
 801f0be:	f855 3b04 	ldr.w	r3, [r5], #4
 801f0c2:	4798      	blx	r3
 801f0c4:	3601      	adds	r6, #1
 801f0c6:	e7f2      	b.n	801f0ae <__libc_init_array+0x1e>
 801f0c8:	08021b50 	.word	0x08021b50
 801f0cc:	08021b50 	.word	0x08021b50
 801f0d0:	08021b50 	.word	0x08021b50
 801f0d4:	08021b68 	.word	0x08021b68

0801f0d8 <__retarget_lock_init_recursive>:
 801f0d8:	4770      	bx	lr

0801f0da <__retarget_lock_acquire_recursive>:
 801f0da:	4770      	bx	lr

0801f0dc <__retarget_lock_release_recursive>:
 801f0dc:	4770      	bx	lr

0801f0de <memcpy>:
 801f0de:	440a      	add	r2, r1
 801f0e0:	4291      	cmp	r1, r2
 801f0e2:	f100 33ff 	add.w	r3, r0, #4294967295
 801f0e6:	d100      	bne.n	801f0ea <memcpy+0xc>
 801f0e8:	4770      	bx	lr
 801f0ea:	b510      	push	{r4, lr}
 801f0ec:	f811 4b01 	ldrb.w	r4, [r1], #1
 801f0f0:	f803 4f01 	strb.w	r4, [r3, #1]!
 801f0f4:	4291      	cmp	r1, r2
 801f0f6:	d1f9      	bne.n	801f0ec <memcpy+0xe>
 801f0f8:	bd10      	pop	{r4, pc}
	...

0801f0fc <__register_exitproc>:
 801f0fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801f100:	4d27      	ldr	r5, [pc, #156]	@ (801f1a0 <__register_exitproc+0xa4>)
 801f102:	4607      	mov	r7, r0
 801f104:	6828      	ldr	r0, [r5, #0]
 801f106:	4691      	mov	r9, r2
 801f108:	460e      	mov	r6, r1
 801f10a:	4698      	mov	r8, r3
 801f10c:	f7ff ffe5 	bl	801f0da <__retarget_lock_acquire_recursive>
 801f110:	4a24      	ldr	r2, [pc, #144]	@ (801f1a4 <__register_exitproc+0xa8>)
 801f112:	6814      	ldr	r4, [r2, #0]
 801f114:	b93c      	cbnz	r4, 801f126 <__register_exitproc+0x2a>
 801f116:	4b24      	ldr	r3, [pc, #144]	@ (801f1a8 <__register_exitproc+0xac>)
 801f118:	6013      	str	r3, [r2, #0]
 801f11a:	4a24      	ldr	r2, [pc, #144]	@ (801f1ac <__register_exitproc+0xb0>)
 801f11c:	b112      	cbz	r2, 801f124 <__register_exitproc+0x28>
 801f11e:	6812      	ldr	r2, [r2, #0]
 801f120:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 801f124:	4c20      	ldr	r4, [pc, #128]	@ (801f1a8 <__register_exitproc+0xac>)
 801f126:	6863      	ldr	r3, [r4, #4]
 801f128:	2b1f      	cmp	r3, #31
 801f12a:	dd06      	ble.n	801f13a <__register_exitproc+0x3e>
 801f12c:	6828      	ldr	r0, [r5, #0]
 801f12e:	f7ff ffd5 	bl	801f0dc <__retarget_lock_release_recursive>
 801f132:	f04f 30ff 	mov.w	r0, #4294967295
 801f136:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801f13a:	b32f      	cbz	r7, 801f188 <__register_exitproc+0x8c>
 801f13c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 801f140:	b968      	cbnz	r0, 801f15e <__register_exitproc+0x62>
 801f142:	4b1b      	ldr	r3, [pc, #108]	@ (801f1b0 <__register_exitproc+0xb4>)
 801f144:	2b00      	cmp	r3, #0
 801f146:	d0f1      	beq.n	801f12c <__register_exitproc+0x30>
 801f148:	f44f 7084 	mov.w	r0, #264	@ 0x108
 801f14c:	f7ff fc5a 	bl	801ea04 <malloc>
 801f150:	2800      	cmp	r0, #0
 801f152:	d0eb      	beq.n	801f12c <__register_exitproc+0x30>
 801f154:	2300      	movs	r3, #0
 801f156:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 801f15a:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 801f15e:	6863      	ldr	r3, [r4, #4]
 801f160:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801f164:	2201      	movs	r2, #1
 801f166:	409a      	lsls	r2, r3
 801f168:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801f16c:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 801f170:	4313      	orrs	r3, r2
 801f172:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 801f176:	2f02      	cmp	r7, #2
 801f178:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 801f17c:	bf02      	ittt	eq
 801f17e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 801f182:	4313      	orreq	r3, r2
 801f184:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 801f188:	6863      	ldr	r3, [r4, #4]
 801f18a:	6828      	ldr	r0, [r5, #0]
 801f18c:	1c5a      	adds	r2, r3, #1
 801f18e:	3302      	adds	r3, #2
 801f190:	6062      	str	r2, [r4, #4]
 801f192:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801f196:	f7ff ffa1 	bl	801f0dc <__retarget_lock_release_recursive>
 801f19a:	2000      	movs	r0, #0
 801f19c:	e7cb      	b.n	801f136 <__register_exitproc+0x3a>
 801f19e:	bf00      	nop
 801f1a0:	20000120 	.word	0x20000120
 801f1a4:	20015be4 	.word	0x20015be4
 801f1a8:	20015b58 	.word	0x20015b58
 801f1ac:	08021a98 	.word	0x08021a98
 801f1b0:	0801ea05 	.word	0x0801ea05

0801f1b4 <_free_r>:
 801f1b4:	b538      	push	{r3, r4, r5, lr}
 801f1b6:	4605      	mov	r5, r0
 801f1b8:	2900      	cmp	r1, #0
 801f1ba:	d041      	beq.n	801f240 <_free_r+0x8c>
 801f1bc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801f1c0:	1f0c      	subs	r4, r1, #4
 801f1c2:	2b00      	cmp	r3, #0
 801f1c4:	bfb8      	it	lt
 801f1c6:	18e4      	addlt	r4, r4, r3
 801f1c8:	f7ff fcce 	bl	801eb68 <__malloc_lock>
 801f1cc:	4a1d      	ldr	r2, [pc, #116]	@ (801f244 <_free_r+0x90>)
 801f1ce:	6813      	ldr	r3, [r2, #0]
 801f1d0:	b933      	cbnz	r3, 801f1e0 <_free_r+0x2c>
 801f1d2:	6063      	str	r3, [r4, #4]
 801f1d4:	6014      	str	r4, [r2, #0]
 801f1d6:	4628      	mov	r0, r5
 801f1d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801f1dc:	f7ff bcca 	b.w	801eb74 <__malloc_unlock>
 801f1e0:	42a3      	cmp	r3, r4
 801f1e2:	d908      	bls.n	801f1f6 <_free_r+0x42>
 801f1e4:	6820      	ldr	r0, [r4, #0]
 801f1e6:	1821      	adds	r1, r4, r0
 801f1e8:	428b      	cmp	r3, r1
 801f1ea:	bf01      	itttt	eq
 801f1ec:	6819      	ldreq	r1, [r3, #0]
 801f1ee:	685b      	ldreq	r3, [r3, #4]
 801f1f0:	1809      	addeq	r1, r1, r0
 801f1f2:	6021      	streq	r1, [r4, #0]
 801f1f4:	e7ed      	b.n	801f1d2 <_free_r+0x1e>
 801f1f6:	461a      	mov	r2, r3
 801f1f8:	685b      	ldr	r3, [r3, #4]
 801f1fa:	b10b      	cbz	r3, 801f200 <_free_r+0x4c>
 801f1fc:	42a3      	cmp	r3, r4
 801f1fe:	d9fa      	bls.n	801f1f6 <_free_r+0x42>
 801f200:	6811      	ldr	r1, [r2, #0]
 801f202:	1850      	adds	r0, r2, r1
 801f204:	42a0      	cmp	r0, r4
 801f206:	d10b      	bne.n	801f220 <_free_r+0x6c>
 801f208:	6820      	ldr	r0, [r4, #0]
 801f20a:	4401      	add	r1, r0
 801f20c:	1850      	adds	r0, r2, r1
 801f20e:	4283      	cmp	r3, r0
 801f210:	6011      	str	r1, [r2, #0]
 801f212:	d1e0      	bne.n	801f1d6 <_free_r+0x22>
 801f214:	6818      	ldr	r0, [r3, #0]
 801f216:	685b      	ldr	r3, [r3, #4]
 801f218:	6053      	str	r3, [r2, #4]
 801f21a:	4408      	add	r0, r1
 801f21c:	6010      	str	r0, [r2, #0]
 801f21e:	e7da      	b.n	801f1d6 <_free_r+0x22>
 801f220:	d902      	bls.n	801f228 <_free_r+0x74>
 801f222:	230c      	movs	r3, #12
 801f224:	602b      	str	r3, [r5, #0]
 801f226:	e7d6      	b.n	801f1d6 <_free_r+0x22>
 801f228:	6820      	ldr	r0, [r4, #0]
 801f22a:	1821      	adds	r1, r4, r0
 801f22c:	428b      	cmp	r3, r1
 801f22e:	bf04      	itt	eq
 801f230:	6819      	ldreq	r1, [r3, #0]
 801f232:	685b      	ldreq	r3, [r3, #4]
 801f234:	6063      	str	r3, [r4, #4]
 801f236:	bf04      	itt	eq
 801f238:	1809      	addeq	r1, r1, r0
 801f23a:	6021      	streq	r1, [r4, #0]
 801f23c:	6054      	str	r4, [r2, #4]
 801f23e:	e7ca      	b.n	801f1d6 <_free_r+0x22>
 801f240:	bd38      	pop	{r3, r4, r5, pc}
 801f242:	bf00      	nop
 801f244:	20015a10 	.word	0x20015a10

0801f248 <__sfputc_r>:
 801f248:	6893      	ldr	r3, [r2, #8]
 801f24a:	3b01      	subs	r3, #1
 801f24c:	2b00      	cmp	r3, #0
 801f24e:	b410      	push	{r4}
 801f250:	6093      	str	r3, [r2, #8]
 801f252:	da08      	bge.n	801f266 <__sfputc_r+0x1e>
 801f254:	6994      	ldr	r4, [r2, #24]
 801f256:	42a3      	cmp	r3, r4
 801f258:	db01      	blt.n	801f25e <__sfputc_r+0x16>
 801f25a:	290a      	cmp	r1, #10
 801f25c:	d103      	bne.n	801f266 <__sfputc_r+0x1e>
 801f25e:	f85d 4b04 	ldr.w	r4, [sp], #4
 801f262:	f7ff bdb2 	b.w	801edca <__swbuf_r>
 801f266:	6813      	ldr	r3, [r2, #0]
 801f268:	1c58      	adds	r0, r3, #1
 801f26a:	6010      	str	r0, [r2, #0]
 801f26c:	7019      	strb	r1, [r3, #0]
 801f26e:	4608      	mov	r0, r1
 801f270:	f85d 4b04 	ldr.w	r4, [sp], #4
 801f274:	4770      	bx	lr

0801f276 <__sfputs_r>:
 801f276:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f278:	4606      	mov	r6, r0
 801f27a:	460f      	mov	r7, r1
 801f27c:	4614      	mov	r4, r2
 801f27e:	18d5      	adds	r5, r2, r3
 801f280:	42ac      	cmp	r4, r5
 801f282:	d101      	bne.n	801f288 <__sfputs_r+0x12>
 801f284:	2000      	movs	r0, #0
 801f286:	e007      	b.n	801f298 <__sfputs_r+0x22>
 801f288:	f814 1b01 	ldrb.w	r1, [r4], #1
 801f28c:	463a      	mov	r2, r7
 801f28e:	4630      	mov	r0, r6
 801f290:	f7ff ffda 	bl	801f248 <__sfputc_r>
 801f294:	1c43      	adds	r3, r0, #1
 801f296:	d1f3      	bne.n	801f280 <__sfputs_r+0xa>
 801f298:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801f29c <_vfiprintf_r>:
 801f29c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f2a0:	460d      	mov	r5, r1
 801f2a2:	b09d      	sub	sp, #116	@ 0x74
 801f2a4:	4614      	mov	r4, r2
 801f2a6:	4698      	mov	r8, r3
 801f2a8:	4606      	mov	r6, r0
 801f2aa:	b118      	cbz	r0, 801f2b4 <_vfiprintf_r+0x18>
 801f2ac:	6a03      	ldr	r3, [r0, #32]
 801f2ae:	b90b      	cbnz	r3, 801f2b4 <_vfiprintf_r+0x18>
 801f2b0:	f7ff fd00 	bl	801ecb4 <__sinit>
 801f2b4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801f2b6:	07d9      	lsls	r1, r3, #31
 801f2b8:	d405      	bmi.n	801f2c6 <_vfiprintf_r+0x2a>
 801f2ba:	89ab      	ldrh	r3, [r5, #12]
 801f2bc:	059a      	lsls	r2, r3, #22
 801f2be:	d402      	bmi.n	801f2c6 <_vfiprintf_r+0x2a>
 801f2c0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801f2c2:	f7ff ff0a 	bl	801f0da <__retarget_lock_acquire_recursive>
 801f2c6:	89ab      	ldrh	r3, [r5, #12]
 801f2c8:	071b      	lsls	r3, r3, #28
 801f2ca:	d501      	bpl.n	801f2d0 <_vfiprintf_r+0x34>
 801f2cc:	692b      	ldr	r3, [r5, #16]
 801f2ce:	b99b      	cbnz	r3, 801f2f8 <_vfiprintf_r+0x5c>
 801f2d0:	4629      	mov	r1, r5
 801f2d2:	4630      	mov	r0, r6
 801f2d4:	f7ff fdb8 	bl	801ee48 <__swsetup_r>
 801f2d8:	b170      	cbz	r0, 801f2f8 <_vfiprintf_r+0x5c>
 801f2da:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801f2dc:	07dc      	lsls	r4, r3, #31
 801f2de:	d504      	bpl.n	801f2ea <_vfiprintf_r+0x4e>
 801f2e0:	f04f 30ff 	mov.w	r0, #4294967295
 801f2e4:	b01d      	add	sp, #116	@ 0x74
 801f2e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f2ea:	89ab      	ldrh	r3, [r5, #12]
 801f2ec:	0598      	lsls	r0, r3, #22
 801f2ee:	d4f7      	bmi.n	801f2e0 <_vfiprintf_r+0x44>
 801f2f0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801f2f2:	f7ff fef3 	bl	801f0dc <__retarget_lock_release_recursive>
 801f2f6:	e7f3      	b.n	801f2e0 <_vfiprintf_r+0x44>
 801f2f8:	2300      	movs	r3, #0
 801f2fa:	9309      	str	r3, [sp, #36]	@ 0x24
 801f2fc:	2320      	movs	r3, #32
 801f2fe:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801f302:	f8cd 800c 	str.w	r8, [sp, #12]
 801f306:	2330      	movs	r3, #48	@ 0x30
 801f308:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 801f4b8 <_vfiprintf_r+0x21c>
 801f30c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 801f310:	f04f 0901 	mov.w	r9, #1
 801f314:	4623      	mov	r3, r4
 801f316:	469a      	mov	sl, r3
 801f318:	f813 2b01 	ldrb.w	r2, [r3], #1
 801f31c:	b10a      	cbz	r2, 801f322 <_vfiprintf_r+0x86>
 801f31e:	2a25      	cmp	r2, #37	@ 0x25
 801f320:	d1f9      	bne.n	801f316 <_vfiprintf_r+0x7a>
 801f322:	ebba 0b04 	subs.w	fp, sl, r4
 801f326:	d00b      	beq.n	801f340 <_vfiprintf_r+0xa4>
 801f328:	465b      	mov	r3, fp
 801f32a:	4622      	mov	r2, r4
 801f32c:	4629      	mov	r1, r5
 801f32e:	4630      	mov	r0, r6
 801f330:	f7ff ffa1 	bl	801f276 <__sfputs_r>
 801f334:	3001      	adds	r0, #1
 801f336:	f000 80a7 	beq.w	801f488 <_vfiprintf_r+0x1ec>
 801f33a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f33c:	445a      	add	r2, fp
 801f33e:	9209      	str	r2, [sp, #36]	@ 0x24
 801f340:	f89a 3000 	ldrb.w	r3, [sl]
 801f344:	2b00      	cmp	r3, #0
 801f346:	f000 809f 	beq.w	801f488 <_vfiprintf_r+0x1ec>
 801f34a:	2300      	movs	r3, #0
 801f34c:	f04f 32ff 	mov.w	r2, #4294967295
 801f350:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801f354:	f10a 0a01 	add.w	sl, sl, #1
 801f358:	9304      	str	r3, [sp, #16]
 801f35a:	9307      	str	r3, [sp, #28]
 801f35c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 801f360:	931a      	str	r3, [sp, #104]	@ 0x68
 801f362:	4654      	mov	r4, sl
 801f364:	2205      	movs	r2, #5
 801f366:	f814 1b01 	ldrb.w	r1, [r4], #1
 801f36a:	4853      	ldr	r0, [pc, #332]	@ (801f4b8 <_vfiprintf_r+0x21c>)
 801f36c:	f7e0 ff50 	bl	8000210 <memchr>
 801f370:	9a04      	ldr	r2, [sp, #16]
 801f372:	b9d8      	cbnz	r0, 801f3ac <_vfiprintf_r+0x110>
 801f374:	06d1      	lsls	r1, r2, #27
 801f376:	bf44      	itt	mi
 801f378:	2320      	movmi	r3, #32
 801f37a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801f37e:	0713      	lsls	r3, r2, #28
 801f380:	bf44      	itt	mi
 801f382:	232b      	movmi	r3, #43	@ 0x2b
 801f384:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801f388:	f89a 3000 	ldrb.w	r3, [sl]
 801f38c:	2b2a      	cmp	r3, #42	@ 0x2a
 801f38e:	d015      	beq.n	801f3bc <_vfiprintf_r+0x120>
 801f390:	9a07      	ldr	r2, [sp, #28]
 801f392:	4654      	mov	r4, sl
 801f394:	2000      	movs	r0, #0
 801f396:	f04f 0c0a 	mov.w	ip, #10
 801f39a:	4621      	mov	r1, r4
 801f39c:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f3a0:	3b30      	subs	r3, #48	@ 0x30
 801f3a2:	2b09      	cmp	r3, #9
 801f3a4:	d94b      	bls.n	801f43e <_vfiprintf_r+0x1a2>
 801f3a6:	b1b0      	cbz	r0, 801f3d6 <_vfiprintf_r+0x13a>
 801f3a8:	9207      	str	r2, [sp, #28]
 801f3aa:	e014      	b.n	801f3d6 <_vfiprintf_r+0x13a>
 801f3ac:	eba0 0308 	sub.w	r3, r0, r8
 801f3b0:	fa09 f303 	lsl.w	r3, r9, r3
 801f3b4:	4313      	orrs	r3, r2
 801f3b6:	9304      	str	r3, [sp, #16]
 801f3b8:	46a2      	mov	sl, r4
 801f3ba:	e7d2      	b.n	801f362 <_vfiprintf_r+0xc6>
 801f3bc:	9b03      	ldr	r3, [sp, #12]
 801f3be:	1d19      	adds	r1, r3, #4
 801f3c0:	681b      	ldr	r3, [r3, #0]
 801f3c2:	9103      	str	r1, [sp, #12]
 801f3c4:	2b00      	cmp	r3, #0
 801f3c6:	bfbb      	ittet	lt
 801f3c8:	425b      	neglt	r3, r3
 801f3ca:	f042 0202 	orrlt.w	r2, r2, #2
 801f3ce:	9307      	strge	r3, [sp, #28]
 801f3d0:	9307      	strlt	r3, [sp, #28]
 801f3d2:	bfb8      	it	lt
 801f3d4:	9204      	strlt	r2, [sp, #16]
 801f3d6:	7823      	ldrb	r3, [r4, #0]
 801f3d8:	2b2e      	cmp	r3, #46	@ 0x2e
 801f3da:	d10a      	bne.n	801f3f2 <_vfiprintf_r+0x156>
 801f3dc:	7863      	ldrb	r3, [r4, #1]
 801f3de:	2b2a      	cmp	r3, #42	@ 0x2a
 801f3e0:	d132      	bne.n	801f448 <_vfiprintf_r+0x1ac>
 801f3e2:	9b03      	ldr	r3, [sp, #12]
 801f3e4:	1d1a      	adds	r2, r3, #4
 801f3e6:	681b      	ldr	r3, [r3, #0]
 801f3e8:	9203      	str	r2, [sp, #12]
 801f3ea:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801f3ee:	3402      	adds	r4, #2
 801f3f0:	9305      	str	r3, [sp, #20]
 801f3f2:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 801f4c8 <_vfiprintf_r+0x22c>
 801f3f6:	7821      	ldrb	r1, [r4, #0]
 801f3f8:	2203      	movs	r2, #3
 801f3fa:	4650      	mov	r0, sl
 801f3fc:	f7e0 ff08 	bl	8000210 <memchr>
 801f400:	b138      	cbz	r0, 801f412 <_vfiprintf_r+0x176>
 801f402:	9b04      	ldr	r3, [sp, #16]
 801f404:	eba0 000a 	sub.w	r0, r0, sl
 801f408:	2240      	movs	r2, #64	@ 0x40
 801f40a:	4082      	lsls	r2, r0
 801f40c:	4313      	orrs	r3, r2
 801f40e:	3401      	adds	r4, #1
 801f410:	9304      	str	r3, [sp, #16]
 801f412:	f814 1b01 	ldrb.w	r1, [r4], #1
 801f416:	4829      	ldr	r0, [pc, #164]	@ (801f4bc <_vfiprintf_r+0x220>)
 801f418:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 801f41c:	2206      	movs	r2, #6
 801f41e:	f7e0 fef7 	bl	8000210 <memchr>
 801f422:	2800      	cmp	r0, #0
 801f424:	d03f      	beq.n	801f4a6 <_vfiprintf_r+0x20a>
 801f426:	4b26      	ldr	r3, [pc, #152]	@ (801f4c0 <_vfiprintf_r+0x224>)
 801f428:	bb1b      	cbnz	r3, 801f472 <_vfiprintf_r+0x1d6>
 801f42a:	9b03      	ldr	r3, [sp, #12]
 801f42c:	3307      	adds	r3, #7
 801f42e:	f023 0307 	bic.w	r3, r3, #7
 801f432:	3308      	adds	r3, #8
 801f434:	9303      	str	r3, [sp, #12]
 801f436:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f438:	443b      	add	r3, r7
 801f43a:	9309      	str	r3, [sp, #36]	@ 0x24
 801f43c:	e76a      	b.n	801f314 <_vfiprintf_r+0x78>
 801f43e:	fb0c 3202 	mla	r2, ip, r2, r3
 801f442:	460c      	mov	r4, r1
 801f444:	2001      	movs	r0, #1
 801f446:	e7a8      	b.n	801f39a <_vfiprintf_r+0xfe>
 801f448:	2300      	movs	r3, #0
 801f44a:	3401      	adds	r4, #1
 801f44c:	9305      	str	r3, [sp, #20]
 801f44e:	4619      	mov	r1, r3
 801f450:	f04f 0c0a 	mov.w	ip, #10
 801f454:	4620      	mov	r0, r4
 801f456:	f810 2b01 	ldrb.w	r2, [r0], #1
 801f45a:	3a30      	subs	r2, #48	@ 0x30
 801f45c:	2a09      	cmp	r2, #9
 801f45e:	d903      	bls.n	801f468 <_vfiprintf_r+0x1cc>
 801f460:	2b00      	cmp	r3, #0
 801f462:	d0c6      	beq.n	801f3f2 <_vfiprintf_r+0x156>
 801f464:	9105      	str	r1, [sp, #20]
 801f466:	e7c4      	b.n	801f3f2 <_vfiprintf_r+0x156>
 801f468:	fb0c 2101 	mla	r1, ip, r1, r2
 801f46c:	4604      	mov	r4, r0
 801f46e:	2301      	movs	r3, #1
 801f470:	e7f0      	b.n	801f454 <_vfiprintf_r+0x1b8>
 801f472:	ab03      	add	r3, sp, #12
 801f474:	9300      	str	r3, [sp, #0]
 801f476:	462a      	mov	r2, r5
 801f478:	4b12      	ldr	r3, [pc, #72]	@ (801f4c4 <_vfiprintf_r+0x228>)
 801f47a:	a904      	add	r1, sp, #16
 801f47c:	4630      	mov	r0, r6
 801f47e:	f3af 8000 	nop.w
 801f482:	4607      	mov	r7, r0
 801f484:	1c78      	adds	r0, r7, #1
 801f486:	d1d6      	bne.n	801f436 <_vfiprintf_r+0x19a>
 801f488:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801f48a:	07d9      	lsls	r1, r3, #31
 801f48c:	d405      	bmi.n	801f49a <_vfiprintf_r+0x1fe>
 801f48e:	89ab      	ldrh	r3, [r5, #12]
 801f490:	059a      	lsls	r2, r3, #22
 801f492:	d402      	bmi.n	801f49a <_vfiprintf_r+0x1fe>
 801f494:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801f496:	f7ff fe21 	bl	801f0dc <__retarget_lock_release_recursive>
 801f49a:	89ab      	ldrh	r3, [r5, #12]
 801f49c:	065b      	lsls	r3, r3, #25
 801f49e:	f53f af1f 	bmi.w	801f2e0 <_vfiprintf_r+0x44>
 801f4a2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801f4a4:	e71e      	b.n	801f2e4 <_vfiprintf_r+0x48>
 801f4a6:	ab03      	add	r3, sp, #12
 801f4a8:	9300      	str	r3, [sp, #0]
 801f4aa:	462a      	mov	r2, r5
 801f4ac:	4b05      	ldr	r3, [pc, #20]	@ (801f4c4 <_vfiprintf_r+0x228>)
 801f4ae:	a904      	add	r1, sp, #16
 801f4b0:	4630      	mov	r0, r6
 801f4b2:	f000 f879 	bl	801f5a8 <_printf_i>
 801f4b6:	e7e4      	b.n	801f482 <_vfiprintf_r+0x1e6>
 801f4b8:	08021a9c 	.word	0x08021a9c
 801f4bc:	08021aa6 	.word	0x08021aa6
 801f4c0:	00000000 	.word	0x00000000
 801f4c4:	0801f277 	.word	0x0801f277
 801f4c8:	08021aa2 	.word	0x08021aa2

0801f4cc <_printf_common>:
 801f4cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f4d0:	4616      	mov	r6, r2
 801f4d2:	4698      	mov	r8, r3
 801f4d4:	688a      	ldr	r2, [r1, #8]
 801f4d6:	690b      	ldr	r3, [r1, #16]
 801f4d8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 801f4dc:	4293      	cmp	r3, r2
 801f4de:	bfb8      	it	lt
 801f4e0:	4613      	movlt	r3, r2
 801f4e2:	6033      	str	r3, [r6, #0]
 801f4e4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 801f4e8:	4607      	mov	r7, r0
 801f4ea:	460c      	mov	r4, r1
 801f4ec:	b10a      	cbz	r2, 801f4f2 <_printf_common+0x26>
 801f4ee:	3301      	adds	r3, #1
 801f4f0:	6033      	str	r3, [r6, #0]
 801f4f2:	6823      	ldr	r3, [r4, #0]
 801f4f4:	0699      	lsls	r1, r3, #26
 801f4f6:	bf42      	ittt	mi
 801f4f8:	6833      	ldrmi	r3, [r6, #0]
 801f4fa:	3302      	addmi	r3, #2
 801f4fc:	6033      	strmi	r3, [r6, #0]
 801f4fe:	6825      	ldr	r5, [r4, #0]
 801f500:	f015 0506 	ands.w	r5, r5, #6
 801f504:	d106      	bne.n	801f514 <_printf_common+0x48>
 801f506:	f104 0a19 	add.w	sl, r4, #25
 801f50a:	68e3      	ldr	r3, [r4, #12]
 801f50c:	6832      	ldr	r2, [r6, #0]
 801f50e:	1a9b      	subs	r3, r3, r2
 801f510:	42ab      	cmp	r3, r5
 801f512:	dc26      	bgt.n	801f562 <_printf_common+0x96>
 801f514:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 801f518:	6822      	ldr	r2, [r4, #0]
 801f51a:	3b00      	subs	r3, #0
 801f51c:	bf18      	it	ne
 801f51e:	2301      	movne	r3, #1
 801f520:	0692      	lsls	r2, r2, #26
 801f522:	d42b      	bmi.n	801f57c <_printf_common+0xb0>
 801f524:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 801f528:	4641      	mov	r1, r8
 801f52a:	4638      	mov	r0, r7
 801f52c:	47c8      	blx	r9
 801f52e:	3001      	adds	r0, #1
 801f530:	d01e      	beq.n	801f570 <_printf_common+0xa4>
 801f532:	6823      	ldr	r3, [r4, #0]
 801f534:	6922      	ldr	r2, [r4, #16]
 801f536:	f003 0306 	and.w	r3, r3, #6
 801f53a:	2b04      	cmp	r3, #4
 801f53c:	bf02      	ittt	eq
 801f53e:	68e5      	ldreq	r5, [r4, #12]
 801f540:	6833      	ldreq	r3, [r6, #0]
 801f542:	1aed      	subeq	r5, r5, r3
 801f544:	68a3      	ldr	r3, [r4, #8]
 801f546:	bf0c      	ite	eq
 801f548:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801f54c:	2500      	movne	r5, #0
 801f54e:	4293      	cmp	r3, r2
 801f550:	bfc4      	itt	gt
 801f552:	1a9b      	subgt	r3, r3, r2
 801f554:	18ed      	addgt	r5, r5, r3
 801f556:	2600      	movs	r6, #0
 801f558:	341a      	adds	r4, #26
 801f55a:	42b5      	cmp	r5, r6
 801f55c:	d11a      	bne.n	801f594 <_printf_common+0xc8>
 801f55e:	2000      	movs	r0, #0
 801f560:	e008      	b.n	801f574 <_printf_common+0xa8>
 801f562:	2301      	movs	r3, #1
 801f564:	4652      	mov	r2, sl
 801f566:	4641      	mov	r1, r8
 801f568:	4638      	mov	r0, r7
 801f56a:	47c8      	blx	r9
 801f56c:	3001      	adds	r0, #1
 801f56e:	d103      	bne.n	801f578 <_printf_common+0xac>
 801f570:	f04f 30ff 	mov.w	r0, #4294967295
 801f574:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f578:	3501      	adds	r5, #1
 801f57a:	e7c6      	b.n	801f50a <_printf_common+0x3e>
 801f57c:	18e1      	adds	r1, r4, r3
 801f57e:	1c5a      	adds	r2, r3, #1
 801f580:	2030      	movs	r0, #48	@ 0x30
 801f582:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 801f586:	4422      	add	r2, r4
 801f588:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 801f58c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 801f590:	3302      	adds	r3, #2
 801f592:	e7c7      	b.n	801f524 <_printf_common+0x58>
 801f594:	2301      	movs	r3, #1
 801f596:	4622      	mov	r2, r4
 801f598:	4641      	mov	r1, r8
 801f59a:	4638      	mov	r0, r7
 801f59c:	47c8      	blx	r9
 801f59e:	3001      	adds	r0, #1
 801f5a0:	d0e6      	beq.n	801f570 <_printf_common+0xa4>
 801f5a2:	3601      	adds	r6, #1
 801f5a4:	e7d9      	b.n	801f55a <_printf_common+0x8e>
	...

0801f5a8 <_printf_i>:
 801f5a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801f5ac:	7e0f      	ldrb	r7, [r1, #24]
 801f5ae:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801f5b0:	2f78      	cmp	r7, #120	@ 0x78
 801f5b2:	4691      	mov	r9, r2
 801f5b4:	4680      	mov	r8, r0
 801f5b6:	460c      	mov	r4, r1
 801f5b8:	469a      	mov	sl, r3
 801f5ba:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 801f5be:	d807      	bhi.n	801f5d0 <_printf_i+0x28>
 801f5c0:	2f62      	cmp	r7, #98	@ 0x62
 801f5c2:	d80a      	bhi.n	801f5da <_printf_i+0x32>
 801f5c4:	2f00      	cmp	r7, #0
 801f5c6:	f000 80d2 	beq.w	801f76e <_printf_i+0x1c6>
 801f5ca:	2f58      	cmp	r7, #88	@ 0x58
 801f5cc:	f000 80b9 	beq.w	801f742 <_printf_i+0x19a>
 801f5d0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801f5d4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 801f5d8:	e03a      	b.n	801f650 <_printf_i+0xa8>
 801f5da:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 801f5de:	2b15      	cmp	r3, #21
 801f5e0:	d8f6      	bhi.n	801f5d0 <_printf_i+0x28>
 801f5e2:	a101      	add	r1, pc, #4	@ (adr r1, 801f5e8 <_printf_i+0x40>)
 801f5e4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801f5e8:	0801f641 	.word	0x0801f641
 801f5ec:	0801f655 	.word	0x0801f655
 801f5f0:	0801f5d1 	.word	0x0801f5d1
 801f5f4:	0801f5d1 	.word	0x0801f5d1
 801f5f8:	0801f5d1 	.word	0x0801f5d1
 801f5fc:	0801f5d1 	.word	0x0801f5d1
 801f600:	0801f655 	.word	0x0801f655
 801f604:	0801f5d1 	.word	0x0801f5d1
 801f608:	0801f5d1 	.word	0x0801f5d1
 801f60c:	0801f5d1 	.word	0x0801f5d1
 801f610:	0801f5d1 	.word	0x0801f5d1
 801f614:	0801f755 	.word	0x0801f755
 801f618:	0801f67f 	.word	0x0801f67f
 801f61c:	0801f70f 	.word	0x0801f70f
 801f620:	0801f5d1 	.word	0x0801f5d1
 801f624:	0801f5d1 	.word	0x0801f5d1
 801f628:	0801f777 	.word	0x0801f777
 801f62c:	0801f5d1 	.word	0x0801f5d1
 801f630:	0801f67f 	.word	0x0801f67f
 801f634:	0801f5d1 	.word	0x0801f5d1
 801f638:	0801f5d1 	.word	0x0801f5d1
 801f63c:	0801f717 	.word	0x0801f717
 801f640:	6833      	ldr	r3, [r6, #0]
 801f642:	1d1a      	adds	r2, r3, #4
 801f644:	681b      	ldr	r3, [r3, #0]
 801f646:	6032      	str	r2, [r6, #0]
 801f648:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801f64c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 801f650:	2301      	movs	r3, #1
 801f652:	e09d      	b.n	801f790 <_printf_i+0x1e8>
 801f654:	6833      	ldr	r3, [r6, #0]
 801f656:	6820      	ldr	r0, [r4, #0]
 801f658:	1d19      	adds	r1, r3, #4
 801f65a:	6031      	str	r1, [r6, #0]
 801f65c:	0606      	lsls	r6, r0, #24
 801f65e:	d501      	bpl.n	801f664 <_printf_i+0xbc>
 801f660:	681d      	ldr	r5, [r3, #0]
 801f662:	e003      	b.n	801f66c <_printf_i+0xc4>
 801f664:	0645      	lsls	r5, r0, #25
 801f666:	d5fb      	bpl.n	801f660 <_printf_i+0xb8>
 801f668:	f9b3 5000 	ldrsh.w	r5, [r3]
 801f66c:	2d00      	cmp	r5, #0
 801f66e:	da03      	bge.n	801f678 <_printf_i+0xd0>
 801f670:	232d      	movs	r3, #45	@ 0x2d
 801f672:	426d      	negs	r5, r5
 801f674:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801f678:	4859      	ldr	r0, [pc, #356]	@ (801f7e0 <_printf_i+0x238>)
 801f67a:	230a      	movs	r3, #10
 801f67c:	e011      	b.n	801f6a2 <_printf_i+0xfa>
 801f67e:	6821      	ldr	r1, [r4, #0]
 801f680:	6833      	ldr	r3, [r6, #0]
 801f682:	0608      	lsls	r0, r1, #24
 801f684:	f853 5b04 	ldr.w	r5, [r3], #4
 801f688:	d402      	bmi.n	801f690 <_printf_i+0xe8>
 801f68a:	0649      	lsls	r1, r1, #25
 801f68c:	bf48      	it	mi
 801f68e:	b2ad      	uxthmi	r5, r5
 801f690:	2f6f      	cmp	r7, #111	@ 0x6f
 801f692:	4853      	ldr	r0, [pc, #332]	@ (801f7e0 <_printf_i+0x238>)
 801f694:	6033      	str	r3, [r6, #0]
 801f696:	bf14      	ite	ne
 801f698:	230a      	movne	r3, #10
 801f69a:	2308      	moveq	r3, #8
 801f69c:	2100      	movs	r1, #0
 801f69e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 801f6a2:	6866      	ldr	r6, [r4, #4]
 801f6a4:	60a6      	str	r6, [r4, #8]
 801f6a6:	2e00      	cmp	r6, #0
 801f6a8:	bfa2      	ittt	ge
 801f6aa:	6821      	ldrge	r1, [r4, #0]
 801f6ac:	f021 0104 	bicge.w	r1, r1, #4
 801f6b0:	6021      	strge	r1, [r4, #0]
 801f6b2:	b90d      	cbnz	r5, 801f6b8 <_printf_i+0x110>
 801f6b4:	2e00      	cmp	r6, #0
 801f6b6:	d04b      	beq.n	801f750 <_printf_i+0x1a8>
 801f6b8:	4616      	mov	r6, r2
 801f6ba:	fbb5 f1f3 	udiv	r1, r5, r3
 801f6be:	fb03 5711 	mls	r7, r3, r1, r5
 801f6c2:	5dc7      	ldrb	r7, [r0, r7]
 801f6c4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801f6c8:	462f      	mov	r7, r5
 801f6ca:	42bb      	cmp	r3, r7
 801f6cc:	460d      	mov	r5, r1
 801f6ce:	d9f4      	bls.n	801f6ba <_printf_i+0x112>
 801f6d0:	2b08      	cmp	r3, #8
 801f6d2:	d10b      	bne.n	801f6ec <_printf_i+0x144>
 801f6d4:	6823      	ldr	r3, [r4, #0]
 801f6d6:	07df      	lsls	r7, r3, #31
 801f6d8:	d508      	bpl.n	801f6ec <_printf_i+0x144>
 801f6da:	6923      	ldr	r3, [r4, #16]
 801f6dc:	6861      	ldr	r1, [r4, #4]
 801f6de:	4299      	cmp	r1, r3
 801f6e0:	bfde      	ittt	le
 801f6e2:	2330      	movle	r3, #48	@ 0x30
 801f6e4:	f806 3c01 	strble.w	r3, [r6, #-1]
 801f6e8:	f106 36ff 	addle.w	r6, r6, #4294967295
 801f6ec:	1b92      	subs	r2, r2, r6
 801f6ee:	6122      	str	r2, [r4, #16]
 801f6f0:	f8cd a000 	str.w	sl, [sp]
 801f6f4:	464b      	mov	r3, r9
 801f6f6:	aa03      	add	r2, sp, #12
 801f6f8:	4621      	mov	r1, r4
 801f6fa:	4640      	mov	r0, r8
 801f6fc:	f7ff fee6 	bl	801f4cc <_printf_common>
 801f700:	3001      	adds	r0, #1
 801f702:	d14a      	bne.n	801f79a <_printf_i+0x1f2>
 801f704:	f04f 30ff 	mov.w	r0, #4294967295
 801f708:	b004      	add	sp, #16
 801f70a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f70e:	6823      	ldr	r3, [r4, #0]
 801f710:	f043 0320 	orr.w	r3, r3, #32
 801f714:	6023      	str	r3, [r4, #0]
 801f716:	4833      	ldr	r0, [pc, #204]	@ (801f7e4 <_printf_i+0x23c>)
 801f718:	2778      	movs	r7, #120	@ 0x78
 801f71a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 801f71e:	6823      	ldr	r3, [r4, #0]
 801f720:	6831      	ldr	r1, [r6, #0]
 801f722:	061f      	lsls	r7, r3, #24
 801f724:	f851 5b04 	ldr.w	r5, [r1], #4
 801f728:	d402      	bmi.n	801f730 <_printf_i+0x188>
 801f72a:	065f      	lsls	r7, r3, #25
 801f72c:	bf48      	it	mi
 801f72e:	b2ad      	uxthmi	r5, r5
 801f730:	6031      	str	r1, [r6, #0]
 801f732:	07d9      	lsls	r1, r3, #31
 801f734:	bf44      	itt	mi
 801f736:	f043 0320 	orrmi.w	r3, r3, #32
 801f73a:	6023      	strmi	r3, [r4, #0]
 801f73c:	b11d      	cbz	r5, 801f746 <_printf_i+0x19e>
 801f73e:	2310      	movs	r3, #16
 801f740:	e7ac      	b.n	801f69c <_printf_i+0xf4>
 801f742:	4827      	ldr	r0, [pc, #156]	@ (801f7e0 <_printf_i+0x238>)
 801f744:	e7e9      	b.n	801f71a <_printf_i+0x172>
 801f746:	6823      	ldr	r3, [r4, #0]
 801f748:	f023 0320 	bic.w	r3, r3, #32
 801f74c:	6023      	str	r3, [r4, #0]
 801f74e:	e7f6      	b.n	801f73e <_printf_i+0x196>
 801f750:	4616      	mov	r6, r2
 801f752:	e7bd      	b.n	801f6d0 <_printf_i+0x128>
 801f754:	6833      	ldr	r3, [r6, #0]
 801f756:	6825      	ldr	r5, [r4, #0]
 801f758:	6961      	ldr	r1, [r4, #20]
 801f75a:	1d18      	adds	r0, r3, #4
 801f75c:	6030      	str	r0, [r6, #0]
 801f75e:	062e      	lsls	r6, r5, #24
 801f760:	681b      	ldr	r3, [r3, #0]
 801f762:	d501      	bpl.n	801f768 <_printf_i+0x1c0>
 801f764:	6019      	str	r1, [r3, #0]
 801f766:	e002      	b.n	801f76e <_printf_i+0x1c6>
 801f768:	0668      	lsls	r0, r5, #25
 801f76a:	d5fb      	bpl.n	801f764 <_printf_i+0x1bc>
 801f76c:	8019      	strh	r1, [r3, #0]
 801f76e:	2300      	movs	r3, #0
 801f770:	6123      	str	r3, [r4, #16]
 801f772:	4616      	mov	r6, r2
 801f774:	e7bc      	b.n	801f6f0 <_printf_i+0x148>
 801f776:	6833      	ldr	r3, [r6, #0]
 801f778:	1d1a      	adds	r2, r3, #4
 801f77a:	6032      	str	r2, [r6, #0]
 801f77c:	681e      	ldr	r6, [r3, #0]
 801f77e:	6862      	ldr	r2, [r4, #4]
 801f780:	2100      	movs	r1, #0
 801f782:	4630      	mov	r0, r6
 801f784:	f7e0 fd44 	bl	8000210 <memchr>
 801f788:	b108      	cbz	r0, 801f78e <_printf_i+0x1e6>
 801f78a:	1b80      	subs	r0, r0, r6
 801f78c:	6060      	str	r0, [r4, #4]
 801f78e:	6863      	ldr	r3, [r4, #4]
 801f790:	6123      	str	r3, [r4, #16]
 801f792:	2300      	movs	r3, #0
 801f794:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801f798:	e7aa      	b.n	801f6f0 <_printf_i+0x148>
 801f79a:	6923      	ldr	r3, [r4, #16]
 801f79c:	4632      	mov	r2, r6
 801f79e:	4649      	mov	r1, r9
 801f7a0:	4640      	mov	r0, r8
 801f7a2:	47d0      	blx	sl
 801f7a4:	3001      	adds	r0, #1
 801f7a6:	d0ad      	beq.n	801f704 <_printf_i+0x15c>
 801f7a8:	6823      	ldr	r3, [r4, #0]
 801f7aa:	079b      	lsls	r3, r3, #30
 801f7ac:	d413      	bmi.n	801f7d6 <_printf_i+0x22e>
 801f7ae:	68e0      	ldr	r0, [r4, #12]
 801f7b0:	9b03      	ldr	r3, [sp, #12]
 801f7b2:	4298      	cmp	r0, r3
 801f7b4:	bfb8      	it	lt
 801f7b6:	4618      	movlt	r0, r3
 801f7b8:	e7a6      	b.n	801f708 <_printf_i+0x160>
 801f7ba:	2301      	movs	r3, #1
 801f7bc:	4632      	mov	r2, r6
 801f7be:	4649      	mov	r1, r9
 801f7c0:	4640      	mov	r0, r8
 801f7c2:	47d0      	blx	sl
 801f7c4:	3001      	adds	r0, #1
 801f7c6:	d09d      	beq.n	801f704 <_printf_i+0x15c>
 801f7c8:	3501      	adds	r5, #1
 801f7ca:	68e3      	ldr	r3, [r4, #12]
 801f7cc:	9903      	ldr	r1, [sp, #12]
 801f7ce:	1a5b      	subs	r3, r3, r1
 801f7d0:	42ab      	cmp	r3, r5
 801f7d2:	dcf2      	bgt.n	801f7ba <_printf_i+0x212>
 801f7d4:	e7eb      	b.n	801f7ae <_printf_i+0x206>
 801f7d6:	2500      	movs	r5, #0
 801f7d8:	f104 0619 	add.w	r6, r4, #25
 801f7dc:	e7f5      	b.n	801f7ca <_printf_i+0x222>
 801f7de:	bf00      	nop
 801f7e0:	08021aad 	.word	0x08021aad
 801f7e4:	08021abe 	.word	0x08021abe

0801f7e8 <__sflush_r>:
 801f7e8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 801f7ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f7f0:	0716      	lsls	r6, r2, #28
 801f7f2:	4605      	mov	r5, r0
 801f7f4:	460c      	mov	r4, r1
 801f7f6:	d454      	bmi.n	801f8a2 <__sflush_r+0xba>
 801f7f8:	684b      	ldr	r3, [r1, #4]
 801f7fa:	2b00      	cmp	r3, #0
 801f7fc:	dc02      	bgt.n	801f804 <__sflush_r+0x1c>
 801f7fe:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 801f800:	2b00      	cmp	r3, #0
 801f802:	dd48      	ble.n	801f896 <__sflush_r+0xae>
 801f804:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801f806:	2e00      	cmp	r6, #0
 801f808:	d045      	beq.n	801f896 <__sflush_r+0xae>
 801f80a:	2300      	movs	r3, #0
 801f80c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 801f810:	682f      	ldr	r7, [r5, #0]
 801f812:	6a21      	ldr	r1, [r4, #32]
 801f814:	602b      	str	r3, [r5, #0]
 801f816:	d030      	beq.n	801f87a <__sflush_r+0x92>
 801f818:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 801f81a:	89a3      	ldrh	r3, [r4, #12]
 801f81c:	0759      	lsls	r1, r3, #29
 801f81e:	d505      	bpl.n	801f82c <__sflush_r+0x44>
 801f820:	6863      	ldr	r3, [r4, #4]
 801f822:	1ad2      	subs	r2, r2, r3
 801f824:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801f826:	b10b      	cbz	r3, 801f82c <__sflush_r+0x44>
 801f828:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 801f82a:	1ad2      	subs	r2, r2, r3
 801f82c:	2300      	movs	r3, #0
 801f82e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801f830:	6a21      	ldr	r1, [r4, #32]
 801f832:	4628      	mov	r0, r5
 801f834:	47b0      	blx	r6
 801f836:	1c43      	adds	r3, r0, #1
 801f838:	89a3      	ldrh	r3, [r4, #12]
 801f83a:	d106      	bne.n	801f84a <__sflush_r+0x62>
 801f83c:	6829      	ldr	r1, [r5, #0]
 801f83e:	291d      	cmp	r1, #29
 801f840:	d82b      	bhi.n	801f89a <__sflush_r+0xb2>
 801f842:	4a2a      	ldr	r2, [pc, #168]	@ (801f8ec <__sflush_r+0x104>)
 801f844:	410a      	asrs	r2, r1
 801f846:	07d6      	lsls	r6, r2, #31
 801f848:	d427      	bmi.n	801f89a <__sflush_r+0xb2>
 801f84a:	2200      	movs	r2, #0
 801f84c:	6062      	str	r2, [r4, #4]
 801f84e:	04d9      	lsls	r1, r3, #19
 801f850:	6922      	ldr	r2, [r4, #16]
 801f852:	6022      	str	r2, [r4, #0]
 801f854:	d504      	bpl.n	801f860 <__sflush_r+0x78>
 801f856:	1c42      	adds	r2, r0, #1
 801f858:	d101      	bne.n	801f85e <__sflush_r+0x76>
 801f85a:	682b      	ldr	r3, [r5, #0]
 801f85c:	b903      	cbnz	r3, 801f860 <__sflush_r+0x78>
 801f85e:	6560      	str	r0, [r4, #84]	@ 0x54
 801f860:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801f862:	602f      	str	r7, [r5, #0]
 801f864:	b1b9      	cbz	r1, 801f896 <__sflush_r+0xae>
 801f866:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801f86a:	4299      	cmp	r1, r3
 801f86c:	d002      	beq.n	801f874 <__sflush_r+0x8c>
 801f86e:	4628      	mov	r0, r5
 801f870:	f7ff fca0 	bl	801f1b4 <_free_r>
 801f874:	2300      	movs	r3, #0
 801f876:	6363      	str	r3, [r4, #52]	@ 0x34
 801f878:	e00d      	b.n	801f896 <__sflush_r+0xae>
 801f87a:	2301      	movs	r3, #1
 801f87c:	4628      	mov	r0, r5
 801f87e:	47b0      	blx	r6
 801f880:	4602      	mov	r2, r0
 801f882:	1c50      	adds	r0, r2, #1
 801f884:	d1c9      	bne.n	801f81a <__sflush_r+0x32>
 801f886:	682b      	ldr	r3, [r5, #0]
 801f888:	2b00      	cmp	r3, #0
 801f88a:	d0c6      	beq.n	801f81a <__sflush_r+0x32>
 801f88c:	2b1d      	cmp	r3, #29
 801f88e:	d001      	beq.n	801f894 <__sflush_r+0xac>
 801f890:	2b16      	cmp	r3, #22
 801f892:	d11e      	bne.n	801f8d2 <__sflush_r+0xea>
 801f894:	602f      	str	r7, [r5, #0]
 801f896:	2000      	movs	r0, #0
 801f898:	e022      	b.n	801f8e0 <__sflush_r+0xf8>
 801f89a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f89e:	b21b      	sxth	r3, r3
 801f8a0:	e01b      	b.n	801f8da <__sflush_r+0xf2>
 801f8a2:	690f      	ldr	r7, [r1, #16]
 801f8a4:	2f00      	cmp	r7, #0
 801f8a6:	d0f6      	beq.n	801f896 <__sflush_r+0xae>
 801f8a8:	0793      	lsls	r3, r2, #30
 801f8aa:	680e      	ldr	r6, [r1, #0]
 801f8ac:	bf08      	it	eq
 801f8ae:	694b      	ldreq	r3, [r1, #20]
 801f8b0:	600f      	str	r7, [r1, #0]
 801f8b2:	bf18      	it	ne
 801f8b4:	2300      	movne	r3, #0
 801f8b6:	eba6 0807 	sub.w	r8, r6, r7
 801f8ba:	608b      	str	r3, [r1, #8]
 801f8bc:	f1b8 0f00 	cmp.w	r8, #0
 801f8c0:	dde9      	ble.n	801f896 <__sflush_r+0xae>
 801f8c2:	6a21      	ldr	r1, [r4, #32]
 801f8c4:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801f8c6:	4643      	mov	r3, r8
 801f8c8:	463a      	mov	r2, r7
 801f8ca:	4628      	mov	r0, r5
 801f8cc:	47b0      	blx	r6
 801f8ce:	2800      	cmp	r0, #0
 801f8d0:	dc08      	bgt.n	801f8e4 <__sflush_r+0xfc>
 801f8d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f8d6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f8da:	81a3      	strh	r3, [r4, #12]
 801f8dc:	f04f 30ff 	mov.w	r0, #4294967295
 801f8e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f8e4:	4407      	add	r7, r0
 801f8e6:	eba8 0800 	sub.w	r8, r8, r0
 801f8ea:	e7e7      	b.n	801f8bc <__sflush_r+0xd4>
 801f8ec:	dfbffffe 	.word	0xdfbffffe

0801f8f0 <_fflush_r>:
 801f8f0:	b538      	push	{r3, r4, r5, lr}
 801f8f2:	690b      	ldr	r3, [r1, #16]
 801f8f4:	4605      	mov	r5, r0
 801f8f6:	460c      	mov	r4, r1
 801f8f8:	b913      	cbnz	r3, 801f900 <_fflush_r+0x10>
 801f8fa:	2500      	movs	r5, #0
 801f8fc:	4628      	mov	r0, r5
 801f8fe:	bd38      	pop	{r3, r4, r5, pc}
 801f900:	b118      	cbz	r0, 801f90a <_fflush_r+0x1a>
 801f902:	6a03      	ldr	r3, [r0, #32]
 801f904:	b90b      	cbnz	r3, 801f90a <_fflush_r+0x1a>
 801f906:	f7ff f9d5 	bl	801ecb4 <__sinit>
 801f90a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f90e:	2b00      	cmp	r3, #0
 801f910:	d0f3      	beq.n	801f8fa <_fflush_r+0xa>
 801f912:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 801f914:	07d0      	lsls	r0, r2, #31
 801f916:	d404      	bmi.n	801f922 <_fflush_r+0x32>
 801f918:	0599      	lsls	r1, r3, #22
 801f91a:	d402      	bmi.n	801f922 <_fflush_r+0x32>
 801f91c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f91e:	f7ff fbdc 	bl	801f0da <__retarget_lock_acquire_recursive>
 801f922:	4628      	mov	r0, r5
 801f924:	4621      	mov	r1, r4
 801f926:	f7ff ff5f 	bl	801f7e8 <__sflush_r>
 801f92a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f92c:	07da      	lsls	r2, r3, #31
 801f92e:	4605      	mov	r5, r0
 801f930:	d4e4      	bmi.n	801f8fc <_fflush_r+0xc>
 801f932:	89a3      	ldrh	r3, [r4, #12]
 801f934:	059b      	lsls	r3, r3, #22
 801f936:	d4e1      	bmi.n	801f8fc <_fflush_r+0xc>
 801f938:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f93a:	f7ff fbcf 	bl	801f0dc <__retarget_lock_release_recursive>
 801f93e:	e7dd      	b.n	801f8fc <_fflush_r+0xc>

0801f940 <__swhatbuf_r>:
 801f940:	b570      	push	{r4, r5, r6, lr}
 801f942:	460c      	mov	r4, r1
 801f944:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f948:	2900      	cmp	r1, #0
 801f94a:	b096      	sub	sp, #88	@ 0x58
 801f94c:	4615      	mov	r5, r2
 801f94e:	461e      	mov	r6, r3
 801f950:	da0d      	bge.n	801f96e <__swhatbuf_r+0x2e>
 801f952:	89a3      	ldrh	r3, [r4, #12]
 801f954:	f013 0f80 	tst.w	r3, #128	@ 0x80
 801f958:	f04f 0100 	mov.w	r1, #0
 801f95c:	bf14      	ite	ne
 801f95e:	2340      	movne	r3, #64	@ 0x40
 801f960:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 801f964:	2000      	movs	r0, #0
 801f966:	6031      	str	r1, [r6, #0]
 801f968:	602b      	str	r3, [r5, #0]
 801f96a:	b016      	add	sp, #88	@ 0x58
 801f96c:	bd70      	pop	{r4, r5, r6, pc}
 801f96e:	466a      	mov	r2, sp
 801f970:	f000 f848 	bl	801fa04 <_fstat_r>
 801f974:	2800      	cmp	r0, #0
 801f976:	dbec      	blt.n	801f952 <__swhatbuf_r+0x12>
 801f978:	9901      	ldr	r1, [sp, #4]
 801f97a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 801f97e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 801f982:	4259      	negs	r1, r3
 801f984:	4159      	adcs	r1, r3
 801f986:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801f98a:	e7eb      	b.n	801f964 <__swhatbuf_r+0x24>

0801f98c <__smakebuf_r>:
 801f98c:	898b      	ldrh	r3, [r1, #12]
 801f98e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801f990:	079d      	lsls	r5, r3, #30
 801f992:	4606      	mov	r6, r0
 801f994:	460c      	mov	r4, r1
 801f996:	d507      	bpl.n	801f9a8 <__smakebuf_r+0x1c>
 801f998:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 801f99c:	6023      	str	r3, [r4, #0]
 801f99e:	6123      	str	r3, [r4, #16]
 801f9a0:	2301      	movs	r3, #1
 801f9a2:	6163      	str	r3, [r4, #20]
 801f9a4:	b003      	add	sp, #12
 801f9a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f9a8:	ab01      	add	r3, sp, #4
 801f9aa:	466a      	mov	r2, sp
 801f9ac:	f7ff ffc8 	bl	801f940 <__swhatbuf_r>
 801f9b0:	9f00      	ldr	r7, [sp, #0]
 801f9b2:	4605      	mov	r5, r0
 801f9b4:	4639      	mov	r1, r7
 801f9b6:	4630      	mov	r0, r6
 801f9b8:	f7ff f856 	bl	801ea68 <_malloc_r>
 801f9bc:	b948      	cbnz	r0, 801f9d2 <__smakebuf_r+0x46>
 801f9be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f9c2:	059a      	lsls	r2, r3, #22
 801f9c4:	d4ee      	bmi.n	801f9a4 <__smakebuf_r+0x18>
 801f9c6:	f023 0303 	bic.w	r3, r3, #3
 801f9ca:	f043 0302 	orr.w	r3, r3, #2
 801f9ce:	81a3      	strh	r3, [r4, #12]
 801f9d0:	e7e2      	b.n	801f998 <__smakebuf_r+0xc>
 801f9d2:	89a3      	ldrh	r3, [r4, #12]
 801f9d4:	6020      	str	r0, [r4, #0]
 801f9d6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801f9da:	81a3      	strh	r3, [r4, #12]
 801f9dc:	9b01      	ldr	r3, [sp, #4]
 801f9de:	e9c4 0704 	strd	r0, r7, [r4, #16]
 801f9e2:	b15b      	cbz	r3, 801f9fc <__smakebuf_r+0x70>
 801f9e4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801f9e8:	4630      	mov	r0, r6
 801f9ea:	f000 f81d 	bl	801fa28 <_isatty_r>
 801f9ee:	b128      	cbz	r0, 801f9fc <__smakebuf_r+0x70>
 801f9f0:	89a3      	ldrh	r3, [r4, #12]
 801f9f2:	f023 0303 	bic.w	r3, r3, #3
 801f9f6:	f043 0301 	orr.w	r3, r3, #1
 801f9fa:	81a3      	strh	r3, [r4, #12]
 801f9fc:	89a3      	ldrh	r3, [r4, #12]
 801f9fe:	431d      	orrs	r5, r3
 801fa00:	81a5      	strh	r5, [r4, #12]
 801fa02:	e7cf      	b.n	801f9a4 <__smakebuf_r+0x18>

0801fa04 <_fstat_r>:
 801fa04:	b538      	push	{r3, r4, r5, lr}
 801fa06:	4d07      	ldr	r5, [pc, #28]	@ (801fa24 <_fstat_r+0x20>)
 801fa08:	2300      	movs	r3, #0
 801fa0a:	4604      	mov	r4, r0
 801fa0c:	4608      	mov	r0, r1
 801fa0e:	4611      	mov	r1, r2
 801fa10:	602b      	str	r3, [r5, #0]
 801fa12:	f7e1 fcc0 	bl	8001396 <_fstat>
 801fa16:	1c43      	adds	r3, r0, #1
 801fa18:	d102      	bne.n	801fa20 <_fstat_r+0x1c>
 801fa1a:	682b      	ldr	r3, [r5, #0]
 801fa1c:	b103      	cbz	r3, 801fa20 <_fstat_r+0x1c>
 801fa1e:	6023      	str	r3, [r4, #0]
 801fa20:	bd38      	pop	{r3, r4, r5, pc}
 801fa22:	bf00      	nop
 801fa24:	20015b50 	.word	0x20015b50

0801fa28 <_isatty_r>:
 801fa28:	b538      	push	{r3, r4, r5, lr}
 801fa2a:	4d06      	ldr	r5, [pc, #24]	@ (801fa44 <_isatty_r+0x1c>)
 801fa2c:	2300      	movs	r3, #0
 801fa2e:	4604      	mov	r4, r0
 801fa30:	4608      	mov	r0, r1
 801fa32:	602b      	str	r3, [r5, #0]
 801fa34:	f7e1 fcb4 	bl	80013a0 <_isatty>
 801fa38:	1c43      	adds	r3, r0, #1
 801fa3a:	d102      	bne.n	801fa42 <_isatty_r+0x1a>
 801fa3c:	682b      	ldr	r3, [r5, #0]
 801fa3e:	b103      	cbz	r3, 801fa42 <_isatty_r+0x1a>
 801fa40:	6023      	str	r3, [r4, #0]
 801fa42:	bd38      	pop	{r3, r4, r5, pc}
 801fa44:	20015b50 	.word	0x20015b50

0801fa48 <_init>:
 801fa48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801fa4a:	bf00      	nop
 801fa4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801fa4e:	bc08      	pop	{r3}
 801fa50:	469e      	mov	lr, r3
 801fa52:	4770      	bx	lr

0801fa54 <_fini>:
 801fa54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801fa56:	bf00      	nop
 801fa58:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801fa5a:	bc08      	pop	{r3}
 801fa5c:	469e      	mov	lr, r3
 801fa5e:	4770      	bx	lr
