
STM32F746G_DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001f904  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001fc4  0801fad4  0801fad4  00020ad4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000058  08021a98  08021a98  00022a98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08021af0  08021af0  00106670  2**0
                  CONTENTS
  5 .ARM          00000008  08021af0  08021af0  00022af0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  08021af8  08021af8  00106670  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  08021af8  08021af8  00022af8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08021b10  08021b10  00022b10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000124  20000000  08021b18  00023000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          00015bb8  20000124  08021c3c  00023124  2**2
                  ALLOC
 11 ._user_heap_stack 00001404  20015cdc  08021c3c  00023cdc  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00106670  2**0
                  CONTENTS, READONLY
 13 BufferSection 000bf400  c0000000  c0000000  00107000  2**2
                  ALLOC
 14 ExtFlashSection 000e10a0  90000000  90000000  00024000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 FontFlashSection 00001414  900e10a0  900e10a0  001050a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 000001bc  900e24b4  900e24b4  001064b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .debug_info   000e1880  00000000  00000000  001066a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 0001a1dc  00000000  00000000  001e7f20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003618  00000000  00000000  00202100  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 00004020  00000000  00000000  00205718  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  00039d3b  00000000  00000000  00209738  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   00066949  00000000  00000000  00243473  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0012781b  00000000  00000000  002a9dbc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000c2  00000000  00000000  003d15d7  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00009230  00000000  00000000  003d169c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 0001c6fb  00000000  00000000  003da8cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000006c  00000000  00000000  003f6fc7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000124 	.word	0x20000124
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0801fabc 	.word	0x0801fabc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000128 	.word	0x20000128
 800020c:	0801fabc 	.word	0x0801fabc

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_uldivmod>:
 80002b0:	b953      	cbnz	r3, 80002c8 <__aeabi_uldivmod+0x18>
 80002b2:	b94a      	cbnz	r2, 80002c8 <__aeabi_uldivmod+0x18>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bf08      	it	eq
 80002b8:	2800      	cmpeq	r0, #0
 80002ba:	bf1c      	itt	ne
 80002bc:	f04f 31ff 	movne.w	r1, #4294967295
 80002c0:	f04f 30ff 	movne.w	r0, #4294967295
 80002c4:	f000 b96a 	b.w	800059c <__aeabi_idiv0>
 80002c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d0:	f000 f806 	bl	80002e0 <__udivmoddi4>
 80002d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002dc:	b004      	add	sp, #16
 80002de:	4770      	bx	lr

080002e0 <__udivmoddi4>:
 80002e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002e4:	9d08      	ldr	r5, [sp, #32]
 80002e6:	460c      	mov	r4, r1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	d14e      	bne.n	800038a <__udivmoddi4+0xaa>
 80002ec:	4694      	mov	ip, r2
 80002ee:	458c      	cmp	ip, r1
 80002f0:	4686      	mov	lr, r0
 80002f2:	fab2 f282 	clz	r2, r2
 80002f6:	d962      	bls.n	80003be <__udivmoddi4+0xde>
 80002f8:	b14a      	cbz	r2, 800030e <__udivmoddi4+0x2e>
 80002fa:	f1c2 0320 	rsb	r3, r2, #32
 80002fe:	4091      	lsls	r1, r2
 8000300:	fa20 f303 	lsr.w	r3, r0, r3
 8000304:	fa0c fc02 	lsl.w	ip, ip, r2
 8000308:	4319      	orrs	r1, r3
 800030a:	fa00 fe02 	lsl.w	lr, r0, r2
 800030e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000312:	fa1f f68c 	uxth.w	r6, ip
 8000316:	fbb1 f4f7 	udiv	r4, r1, r7
 800031a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800031e:	fb07 1114 	mls	r1, r7, r4, r1
 8000322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000326:	fb04 f106 	mul.w	r1, r4, r6
 800032a:	4299      	cmp	r1, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x64>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f104 30ff 	add.w	r0, r4, #4294967295
 8000336:	f080 8112 	bcs.w	800055e <__udivmoddi4+0x27e>
 800033a:	4299      	cmp	r1, r3
 800033c:	f240 810f 	bls.w	800055e <__udivmoddi4+0x27e>
 8000340:	3c02      	subs	r4, #2
 8000342:	4463      	add	r3, ip
 8000344:	1a59      	subs	r1, r3, r1
 8000346:	fa1f f38e 	uxth.w	r3, lr
 800034a:	fbb1 f0f7 	udiv	r0, r1, r7
 800034e:	fb07 1110 	mls	r1, r7, r0, r1
 8000352:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000356:	fb00 f606 	mul.w	r6, r0, r6
 800035a:	429e      	cmp	r6, r3
 800035c:	d90a      	bls.n	8000374 <__udivmoddi4+0x94>
 800035e:	eb1c 0303 	adds.w	r3, ip, r3
 8000362:	f100 31ff 	add.w	r1, r0, #4294967295
 8000366:	f080 80fc 	bcs.w	8000562 <__udivmoddi4+0x282>
 800036a:	429e      	cmp	r6, r3
 800036c:	f240 80f9 	bls.w	8000562 <__udivmoddi4+0x282>
 8000370:	4463      	add	r3, ip
 8000372:	3802      	subs	r0, #2
 8000374:	1b9b      	subs	r3, r3, r6
 8000376:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800037a:	2100      	movs	r1, #0
 800037c:	b11d      	cbz	r5, 8000386 <__udivmoddi4+0xa6>
 800037e:	40d3      	lsrs	r3, r2
 8000380:	2200      	movs	r2, #0
 8000382:	e9c5 3200 	strd	r3, r2, [r5]
 8000386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800038a:	428b      	cmp	r3, r1
 800038c:	d905      	bls.n	800039a <__udivmoddi4+0xba>
 800038e:	b10d      	cbz	r5, 8000394 <__udivmoddi4+0xb4>
 8000390:	e9c5 0100 	strd	r0, r1, [r5]
 8000394:	2100      	movs	r1, #0
 8000396:	4608      	mov	r0, r1
 8000398:	e7f5      	b.n	8000386 <__udivmoddi4+0xa6>
 800039a:	fab3 f183 	clz	r1, r3
 800039e:	2900      	cmp	r1, #0
 80003a0:	d146      	bne.n	8000430 <__udivmoddi4+0x150>
 80003a2:	42a3      	cmp	r3, r4
 80003a4:	d302      	bcc.n	80003ac <__udivmoddi4+0xcc>
 80003a6:	4290      	cmp	r0, r2
 80003a8:	f0c0 80f0 	bcc.w	800058c <__udivmoddi4+0x2ac>
 80003ac:	1a86      	subs	r6, r0, r2
 80003ae:	eb64 0303 	sbc.w	r3, r4, r3
 80003b2:	2001      	movs	r0, #1
 80003b4:	2d00      	cmp	r5, #0
 80003b6:	d0e6      	beq.n	8000386 <__udivmoddi4+0xa6>
 80003b8:	e9c5 6300 	strd	r6, r3, [r5]
 80003bc:	e7e3      	b.n	8000386 <__udivmoddi4+0xa6>
 80003be:	2a00      	cmp	r2, #0
 80003c0:	f040 8090 	bne.w	80004e4 <__udivmoddi4+0x204>
 80003c4:	eba1 040c 	sub.w	r4, r1, ip
 80003c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003cc:	fa1f f78c 	uxth.w	r7, ip
 80003d0:	2101      	movs	r1, #1
 80003d2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003d6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003da:	fb08 4416 	mls	r4, r8, r6, r4
 80003de:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003e2:	fb07 f006 	mul.w	r0, r7, r6
 80003e6:	4298      	cmp	r0, r3
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x11c>
 80003ea:	eb1c 0303 	adds.w	r3, ip, r3
 80003ee:	f106 34ff 	add.w	r4, r6, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x11a>
 80003f4:	4298      	cmp	r0, r3
 80003f6:	f200 80cd 	bhi.w	8000594 <__udivmoddi4+0x2b4>
 80003fa:	4626      	mov	r6, r4
 80003fc:	1a1c      	subs	r4, r3, r0
 80003fe:	fa1f f38e 	uxth.w	r3, lr
 8000402:	fbb4 f0f8 	udiv	r0, r4, r8
 8000406:	fb08 4410 	mls	r4, r8, r0, r4
 800040a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800040e:	fb00 f707 	mul.w	r7, r0, r7
 8000412:	429f      	cmp	r7, r3
 8000414:	d908      	bls.n	8000428 <__udivmoddi4+0x148>
 8000416:	eb1c 0303 	adds.w	r3, ip, r3
 800041a:	f100 34ff 	add.w	r4, r0, #4294967295
 800041e:	d202      	bcs.n	8000426 <__udivmoddi4+0x146>
 8000420:	429f      	cmp	r7, r3
 8000422:	f200 80b0 	bhi.w	8000586 <__udivmoddi4+0x2a6>
 8000426:	4620      	mov	r0, r4
 8000428:	1bdb      	subs	r3, r3, r7
 800042a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800042e:	e7a5      	b.n	800037c <__udivmoddi4+0x9c>
 8000430:	f1c1 0620 	rsb	r6, r1, #32
 8000434:	408b      	lsls	r3, r1
 8000436:	fa22 f706 	lsr.w	r7, r2, r6
 800043a:	431f      	orrs	r7, r3
 800043c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000440:	fa04 f301 	lsl.w	r3, r4, r1
 8000444:	ea43 030c 	orr.w	r3, r3, ip
 8000448:	40f4      	lsrs	r4, r6
 800044a:	fa00 f801 	lsl.w	r8, r0, r1
 800044e:	0c38      	lsrs	r0, r7, #16
 8000450:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000454:	fbb4 fef0 	udiv	lr, r4, r0
 8000458:	fa1f fc87 	uxth.w	ip, r7
 800045c:	fb00 441e 	mls	r4, r0, lr, r4
 8000460:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000464:	fb0e f90c 	mul.w	r9, lr, ip
 8000468:	45a1      	cmp	r9, r4
 800046a:	fa02 f201 	lsl.w	r2, r2, r1
 800046e:	d90a      	bls.n	8000486 <__udivmoddi4+0x1a6>
 8000470:	193c      	adds	r4, r7, r4
 8000472:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000476:	f080 8084 	bcs.w	8000582 <__udivmoddi4+0x2a2>
 800047a:	45a1      	cmp	r9, r4
 800047c:	f240 8081 	bls.w	8000582 <__udivmoddi4+0x2a2>
 8000480:	f1ae 0e02 	sub.w	lr, lr, #2
 8000484:	443c      	add	r4, r7
 8000486:	eba4 0409 	sub.w	r4, r4, r9
 800048a:	fa1f f983 	uxth.w	r9, r3
 800048e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000492:	fb00 4413 	mls	r4, r0, r3, r4
 8000496:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800049a:	fb03 fc0c 	mul.w	ip, r3, ip
 800049e:	45a4      	cmp	ip, r4
 80004a0:	d907      	bls.n	80004b2 <__udivmoddi4+0x1d2>
 80004a2:	193c      	adds	r4, r7, r4
 80004a4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004a8:	d267      	bcs.n	800057a <__udivmoddi4+0x29a>
 80004aa:	45a4      	cmp	ip, r4
 80004ac:	d965      	bls.n	800057a <__udivmoddi4+0x29a>
 80004ae:	3b02      	subs	r3, #2
 80004b0:	443c      	add	r4, r7
 80004b2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004b6:	fba0 9302 	umull	r9, r3, r0, r2
 80004ba:	eba4 040c 	sub.w	r4, r4, ip
 80004be:	429c      	cmp	r4, r3
 80004c0:	46ce      	mov	lr, r9
 80004c2:	469c      	mov	ip, r3
 80004c4:	d351      	bcc.n	800056a <__udivmoddi4+0x28a>
 80004c6:	d04e      	beq.n	8000566 <__udivmoddi4+0x286>
 80004c8:	b155      	cbz	r5, 80004e0 <__udivmoddi4+0x200>
 80004ca:	ebb8 030e 	subs.w	r3, r8, lr
 80004ce:	eb64 040c 	sbc.w	r4, r4, ip
 80004d2:	fa04 f606 	lsl.w	r6, r4, r6
 80004d6:	40cb      	lsrs	r3, r1
 80004d8:	431e      	orrs	r6, r3
 80004da:	40cc      	lsrs	r4, r1
 80004dc:	e9c5 6400 	strd	r6, r4, [r5]
 80004e0:	2100      	movs	r1, #0
 80004e2:	e750      	b.n	8000386 <__udivmoddi4+0xa6>
 80004e4:	f1c2 0320 	rsb	r3, r2, #32
 80004e8:	fa20 f103 	lsr.w	r1, r0, r3
 80004ec:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f0:	fa24 f303 	lsr.w	r3, r4, r3
 80004f4:	4094      	lsls	r4, r2
 80004f6:	430c      	orrs	r4, r1
 80004f8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004fc:	fa00 fe02 	lsl.w	lr, r0, r2
 8000500:	fa1f f78c 	uxth.w	r7, ip
 8000504:	fbb3 f0f8 	udiv	r0, r3, r8
 8000508:	fb08 3110 	mls	r1, r8, r0, r3
 800050c:	0c23      	lsrs	r3, r4, #16
 800050e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000512:	fb00 f107 	mul.w	r1, r0, r7
 8000516:	4299      	cmp	r1, r3
 8000518:	d908      	bls.n	800052c <__udivmoddi4+0x24c>
 800051a:	eb1c 0303 	adds.w	r3, ip, r3
 800051e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000522:	d22c      	bcs.n	800057e <__udivmoddi4+0x29e>
 8000524:	4299      	cmp	r1, r3
 8000526:	d92a      	bls.n	800057e <__udivmoddi4+0x29e>
 8000528:	3802      	subs	r0, #2
 800052a:	4463      	add	r3, ip
 800052c:	1a5b      	subs	r3, r3, r1
 800052e:	b2a4      	uxth	r4, r4
 8000530:	fbb3 f1f8 	udiv	r1, r3, r8
 8000534:	fb08 3311 	mls	r3, r8, r1, r3
 8000538:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800053c:	fb01 f307 	mul.w	r3, r1, r7
 8000540:	42a3      	cmp	r3, r4
 8000542:	d908      	bls.n	8000556 <__udivmoddi4+0x276>
 8000544:	eb1c 0404 	adds.w	r4, ip, r4
 8000548:	f101 36ff 	add.w	r6, r1, #4294967295
 800054c:	d213      	bcs.n	8000576 <__udivmoddi4+0x296>
 800054e:	42a3      	cmp	r3, r4
 8000550:	d911      	bls.n	8000576 <__udivmoddi4+0x296>
 8000552:	3902      	subs	r1, #2
 8000554:	4464      	add	r4, ip
 8000556:	1ae4      	subs	r4, r4, r3
 8000558:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800055c:	e739      	b.n	80003d2 <__udivmoddi4+0xf2>
 800055e:	4604      	mov	r4, r0
 8000560:	e6f0      	b.n	8000344 <__udivmoddi4+0x64>
 8000562:	4608      	mov	r0, r1
 8000564:	e706      	b.n	8000374 <__udivmoddi4+0x94>
 8000566:	45c8      	cmp	r8, r9
 8000568:	d2ae      	bcs.n	80004c8 <__udivmoddi4+0x1e8>
 800056a:	ebb9 0e02 	subs.w	lr, r9, r2
 800056e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000572:	3801      	subs	r0, #1
 8000574:	e7a8      	b.n	80004c8 <__udivmoddi4+0x1e8>
 8000576:	4631      	mov	r1, r6
 8000578:	e7ed      	b.n	8000556 <__udivmoddi4+0x276>
 800057a:	4603      	mov	r3, r0
 800057c:	e799      	b.n	80004b2 <__udivmoddi4+0x1d2>
 800057e:	4630      	mov	r0, r6
 8000580:	e7d4      	b.n	800052c <__udivmoddi4+0x24c>
 8000582:	46d6      	mov	lr, sl
 8000584:	e77f      	b.n	8000486 <__udivmoddi4+0x1a6>
 8000586:	4463      	add	r3, ip
 8000588:	3802      	subs	r0, #2
 800058a:	e74d      	b.n	8000428 <__udivmoddi4+0x148>
 800058c:	4606      	mov	r6, r0
 800058e:	4623      	mov	r3, r4
 8000590:	4608      	mov	r0, r1
 8000592:	e70f      	b.n	80003b4 <__udivmoddi4+0xd4>
 8000594:	3e02      	subs	r6, #2
 8000596:	4463      	add	r3, ip
 8000598:	e730      	b.n	80003fc <__udivmoddi4+0x11c>
 800059a:	bf00      	nop

0800059c <__aeabi_idiv0>:
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop

080005a0 <vApplicationIdleHook>:
   specified, or call vTaskDelay()). If the application makes use of the
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
   vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80005a0:	4901      	ldr	r1, [pc, #4]	@ (80005a8 <vApplicationIdleHook+0x8>)
 80005a2:	2000      	movs	r0, #0
 80005a4:	f009 bb6e 	b.w	8009c84 <vTaskSetApplicationTaskTag>
 80005a8:	080018e9 	.word	0x080018e9

080005ac <_Z26Bluetooth_Receive_CallbackPht>:
/* USER CODE END MX_GPIO_Init_2 */
}

/* USER CODE BEGIN 4 */
char rx_data[256];
void Bluetooth_Receive_Callback(uint8_t* data, uint16_t size) {
 80005ac:	b508      	push	{r3, lr}
	if(bt.rx_buffer[0]=='\0'){
 80005ae:	4b09      	ldr	r3, [pc, #36]	@ (80005d4 <_Z26Bluetooth_Receive_CallbackPht+0x28>)
 80005b0:	791a      	ldrb	r2, [r3, #4]
 80005b2:	b90a      	cbnz	r2, 80005b8 <_Z26Bluetooth_Receive_CallbackPht+0xc>
		bt.rx_buffer[0]= bt.rx_buffer[8];
 80005b4:	7b1a      	ldrb	r2, [r3, #12]
 80005b6:	711a      	strb	r2, [r3, #4]
	}
	strncpy(rx_data,(char*)bt.rx_buffer,8);
 80005b8:	2208      	movs	r2, #8
 80005ba:	4907      	ldr	r1, [pc, #28]	@ (80005d8 <_Z26Bluetooth_Receive_CallbackPht+0x2c>)
 80005bc:	4807      	ldr	r0, [pc, #28]	@ (80005dc <_Z26Bluetooth_Receive_CallbackPht+0x30>)
 80005be:	f01e fced 	bl	801ef9c <strncpy>
    //Bluetooth_write_data(&bt, data, size);
	memset(bt.rx_buffer,0,256);
 80005c2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80005c6:	2100      	movs	r1, #0
 80005c8:	4803      	ldr	r0, [pc, #12]	@ (80005d8 <_Z26Bluetooth_Receive_CallbackPht+0x2c>)
}
 80005ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	memset(bt.rx_buffer,0,256);
 80005ce:	f01e bccb 	b.w	801ef68 <memset>
 80005d2:	bf00      	nop
 80005d4:	20001cf4 	.word	0x20001cf4
 80005d8:	20001cf8 	.word	0x20001cf8
 80005dc:	20000140 	.word	0x20000140

080005e0 <_Z16StartDefaultTaskPv>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80005e0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
	  osDelay(100);
 80005e2:	2064      	movs	r0, #100	@ 0x64
 80005e4:	f007 fdfe 	bl	80081e4 <osDelay>
  for(;;)
 80005e8:	e7fb      	b.n	80005e2 <_Z16StartDefaultTaskPv+0x2>
	...

080005ec <_Z8BLE_TaskPv>:
	Bluetooth_init(&bt, &huart7, Bluetooth_Receive_Callback, Bluetooth_Transmit_Callback);

  for(;;)
  {

	  HAL_UART_Receive_IT(&huart7, (uint8_t *)&bt.rx_buffer[bt.rx_index], 1);
 80005ec:	4c0a      	ldr	r4, [pc, #40]	@ (8000618 <_Z8BLE_TaskPv+0x2c>)
 80005ee:	4d0b      	ldr	r5, [pc, #44]	@ (800061c <_Z8BLE_TaskPv+0x30>)
	Bluetooth_init(&bt, &huart7, Bluetooth_Receive_Callback, Bluetooth_Transmit_Callback);
 80005f0:	4a0b      	ldr	r2, [pc, #44]	@ (8000620 <_Z8BLE_TaskPv+0x34>)
 80005f2:	490a      	ldr	r1, [pc, #40]	@ (800061c <_Z8BLE_TaskPv+0x30>)
 80005f4:	4808      	ldr	r0, [pc, #32]	@ (8000618 <_Z8BLE_TaskPv+0x2c>)
{
 80005f6:	b508      	push	{r3, lr}
	Bluetooth_init(&bt, &huart7, Bluetooth_Receive_Callback, Bluetooth_Transmit_Callback);
 80005f8:	4b0a      	ldr	r3, [pc, #40]	@ (8000624 <_Z8BLE_TaskPv+0x38>)
 80005fa:	f004 f903 	bl	8004804 <Bluetooth_init>
	  HAL_UART_Receive_IT(&huart7, (uint8_t *)&bt.rx_buffer[bt.rx_index], 1);
 80005fe:	f8b4 1104 	ldrh.w	r1, [r4, #260]	@ 0x104
 8000602:	2201      	movs	r2, #1
 8000604:	4628      	mov	r0, r5
 8000606:	3104      	adds	r1, #4
 8000608:	4421      	add	r1, r4
 800060a:	f007 fcb5 	bl	8007f78 <HAL_UART_Receive_IT>
    osDelay(25);
 800060e:	2019      	movs	r0, #25
 8000610:	f007 fde8 	bl	80081e4 <osDelay>
  for(;;)
 8000614:	e7f3      	b.n	80005fe <_Z8BLE_TaskPv+0x12>
 8000616:	bf00      	nop
 8000618:	20001cf4 	.word	0x20001cf4
 800061c:	20000294 	.word	0x20000294
 8000620:	080005ad 	.word	0x080005ad
 8000624:	08000629 	.word	0x08000629

08000628 <_Z27Bluetooth_Transmit_Callbackv>:
void Bluetooth_Transmit_Callback(void) {
 8000628:	4770      	bx	lr
	...

0800062c <_Z18SystemClock_Configv>:
{
 800062c:	b510      	push	{r4, lr}
 800062e:	b094      	sub	sp, #80	@ 0x50
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000630:	2210      	movs	r2, #16
 8000632:	2100      	movs	r1, #0
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000634:	2402      	movs	r4, #2
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000636:	a80a      	add	r0, sp, #40	@ 0x28
 8000638:	f01e fc96 	bl	801ef68 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800063c:	2214      	movs	r2, #20
 800063e:	2100      	movs	r1, #0
 8000640:	a803      	add	r0, sp, #12
 8000642:	f01e fc91 	bl	801ef68 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8000646:	4b1d      	ldr	r3, [pc, #116]	@ (80006bc <_Z18SystemClock_Configv+0x90>)
  RCC_OscInitStruct.PLL.PLLN = 432;
 8000648:	2119      	movs	r1, #25
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800064a:	a808      	add	r0, sp, #32
  __HAL_RCC_PWR_CLK_ENABLE();
 800064c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800064e:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000652:	641a      	str	r2, [r3, #64]	@ 0x40
 8000654:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000656:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800065a:	9301      	str	r3, [sp, #4]
 800065c:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800065e:	4b18      	ldr	r3, [pc, #96]	@ (80006c0 <_Z18SystemClock_Configv+0x94>)
 8000660:	681a      	ldr	r2, [r3, #0]
 8000662:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8000666:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000668:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000670:	9302      	str	r3, [sp, #8]
 8000672:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000674:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000678:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800067c:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8000680:	e9cd 430e 	strd	r4, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 432;
 8000684:	f44f 73d8 	mov.w	r3, #432	@ 0x1b0
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000688:	e9cd 4412 	strd	r4, r4, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLN = 432;
 800068c:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000690:	f006 f85a 	bl	8006748 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000694:	f005 fcf6 	bl	8006084 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000698:	230f      	movs	r3, #15
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800069a:	2000      	movs	r0, #0
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 800069c:	2107      	movs	r1, #7
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800069e:	e9cd 3403 	strd	r3, r4, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80006a2:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80006a6:	e9cd 0305 	strd	r0, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80006aa:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80006ae:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80006b0:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80006b2:	f006 fa31 	bl	8006b18 <HAL_RCC_ClockConfig>
}
 80006b6:	b014      	add	sp, #80	@ 0x50
 80006b8:	bd10      	pop	{r4, pc}
 80006ba:	bf00      	nop
 80006bc:	40023800 	.word	0x40023800
 80006c0:	40007000 	.word	0x40007000

080006c4 <main>:
{
 80006c4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80006c8:	b09b      	sub	sp, #108	@ 0x6c

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006ca:	2210      	movs	r2, #16
 80006cc:	2100      	movs	r1, #0
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80006ce:	2501      	movs	r5, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006d0:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006d2:	f04f 4a10 	mov.w	sl, #2415919104	@ 0x90000000
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80006d6:	f01e fc47 	bl	801ef68 <memset>
  MPU_InitStruct.SubRegionDisable = 0x0;
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 80006da:	2400      	movs	r4, #0
  HAL_MPU_Disable();
 80006dc:	f004 fc26 	bl	8004f2c <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006e0:	4bc7      	ldr	r3, [pc, #796]	@ (8000a00 <main+0x33c>)
  MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006e2:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80006e4:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 80006e8:	9410      	str	r4, [sp, #64]	@ 0x40
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80006ea:	e9cd a30e 	strd	sl, r3, [sp, #56]	@ 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006ee:	f004 fc3b 	bl	8004f68 <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 80006f2:	2317      	movs	r3, #23
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80006f4:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 80006f6:	f88d 5035 	strb.w	r5, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 80006fa:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 80006fe:	f88d 5042 	strb.w	r5, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000702:	f004 fc31 	bl	8004f68 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 8000706:	2004      	movs	r0, #4
 8000708:	f004 fc1e 	bl	8004f48 <HAL_MPU_Enable>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800070c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000710:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000714:	4abb      	ldr	r2, [pc, #748]	@ (8000a04 <main+0x340>)
 8000716:	f8c2 4250 	str.w	r4, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800071a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800071e:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000722:	6953      	ldr	r3, [r2, #20]
 8000724:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000728:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800072a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800072e:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8000732:	f8c2 4084 	str.w	r4, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8000736:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 800073a:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800073e:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000742:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8000746:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800074a:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800074c:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000750:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000752:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8000756:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000758:	f8c2 5260 	str.w	r5, [r2, #608]	@ 0x260
      } while (ways-- != 0U);
 800075c:	d2f9      	bcs.n	8000752 <main+0x8e>
    } while(sets-- != 0U);
 800075e:	3b20      	subs	r3, #32
 8000760:	f113 0f20 	cmn.w	r3, #32
 8000764:	d1f2      	bne.n	800074c <main+0x88>
 8000766:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 800076a:	6953      	ldr	r3, [r2, #20]
 800076c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000770:	6153      	str	r3, [r2, #20]
 8000772:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000776:	f3bf 8f6f 	isb	sy
  HAL_Init();
 800077a:	f004 fb3d 	bl	8004df8 <HAL_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800077e:	2400      	movs	r4, #0
  SystemClock_Config();
 8000780:	f7ff ff54 	bl	800062c <_Z18SystemClock_Configv>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000784:	2214      	movs	r2, #20
 8000786:	2100      	movs	r1, #0
 8000788:	a80d      	add	r0, sp, #52	@ 0x34
 800078a:	f01e fbed 	bl	801ef68 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800078e:	4b9e      	ldr	r3, [pc, #632]	@ (8000a08 <main+0x344>)
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000790:	2110      	movs	r1, #16
 8000792:	489e      	ldr	r0, [pc, #632]	@ (8000a0c <main+0x348>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000794:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000796:	2701      	movs	r7, #1
 8000798:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800079c:	f04f 0b03 	mov.w	fp, #3
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007a0:	f042 0210 	orr.w	r2, r2, #16
  GPIO_InitStruct.Pin = LCD_DISP_Pin;
 80007a4:	f44f 5a80 	mov.w	sl, #4096	@ 0x1000
  hdma2d.Instance = DMA2D;
 80007a8:	4d99      	ldr	r5, [pc, #612]	@ (8000a10 <main+0x34c>)
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80007aa:	f04f 0904 	mov.w	r9, #4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007ae:	631a      	str	r2, [r3, #48]	@ 0x30
 80007b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80007b2:	4e98      	ldr	r6, [pc, #608]	@ (8000a14 <main+0x350>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80007b4:	f002 0210 	and.w	r2, r2, #16
 80007b8:	9202      	str	r2, [sp, #8]
 80007ba:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80007bc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007be:	f042 0202 	orr.w	r2, r2, #2
 80007c2:	631a      	str	r2, [r3, #48]	@ 0x30
 80007c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007c6:	f002 0202 	and.w	r2, r2, #2
 80007ca:	9203      	str	r2, [sp, #12]
 80007cc:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80007ce:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007d0:	f042 0201 	orr.w	r2, r2, #1
 80007d4:	631a      	str	r2, [r3, #48]	@ 0x30
 80007d6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007d8:	f002 0201 	and.w	r2, r2, #1
 80007dc:	9204      	str	r2, [sp, #16]
 80007de:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80007e0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007e2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80007e6:	631a      	str	r2, [r3, #48]	@ 0x30
 80007e8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007ea:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80007ee:	9205      	str	r2, [sp, #20]
 80007f0:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80007f2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007f4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80007f8:	631a      	str	r2, [r3, #48]	@ 0x30
 80007fa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007fc:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 8000800:	9206      	str	r2, [sp, #24]
 8000802:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000804:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000806:	f042 0208 	orr.w	r2, r2, #8
 800080a:	631a      	str	r2, [r3, #48]	@ 0x30
 800080c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800080e:	f002 0208 	and.w	r2, r2, #8
 8000812:	9207      	str	r2, [sp, #28]
 8000814:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8000816:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000818:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800081c:	631a      	str	r2, [r3, #48]	@ 0x30
 800081e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000820:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
 8000824:	9208      	str	r2, [sp, #32]
 8000826:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000828:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800082a:	f042 0220 	orr.w	r2, r2, #32
 800082e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000830:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000832:	f002 0220 	and.w	r2, r2, #32
 8000836:	9209      	str	r2, [sp, #36]	@ 0x24
 8000838:	9a09      	ldr	r2, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800083a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800083c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000840:	631a      	str	r2, [r3, #48]	@ 0x30
 8000842:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000844:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8000848:	920a      	str	r2, [sp, #40]	@ 0x28
 800084a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800084c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800084e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000852:	631a      	str	r2, [r3, #48]	@ 0x30
 8000854:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000856:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 800085a:	920b      	str	r2, [sp, #44]	@ 0x2c
 800085c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800085e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000860:	f042 0204 	orr.w	r2, r2, #4
 8000864:	631a      	str	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000866:	2200      	movs	r2, #0
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000868:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800086a:	f003 0304 	and.w	r3, r3, #4
 800086e:	930c      	str	r3, [sp, #48]	@ 0x30
 8000870:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000872:	f004 fed7 	bl	8005624 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000876:	2201      	movs	r2, #1
 8000878:	2108      	movs	r1, #8
 800087a:	4867      	ldr	r0, [pc, #412]	@ (8000a18 <main+0x354>)
 800087c:	f004 fed2 	bl	8005624 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 8000880:	2201      	movs	r2, #1
 8000882:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000886:	4865      	ldr	r0, [pc, #404]	@ (8000a1c <main+0x358>)
 8000888:	f004 fecc 	bl	8005624 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 800088c:	2200      	movs	r2, #0
 800088e:	21c0      	movs	r1, #192	@ 0xc0
 8000890:	4863      	ldr	r0, [pc, #396]	@ (8000a20 <main+0x35c>)
 8000892:	f004 fec7 	bl	8005624 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000896:	2200      	movs	r2, #0
 8000898:	2140      	movs	r1, #64	@ 0x40
 800089a:	4862      	ldr	r0, [pc, #392]	@ (8000a24 <main+0x360>)
 800089c:	f004 fec2 	bl	8005624 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80008a0:	a90d      	add	r1, sp, #52	@ 0x34
 80008a2:	485a      	ldr	r0, [pc, #360]	@ (8000a0c <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008a4:	e9cd 870d 	strd	r8, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008a8:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80008ac:	f004 fd36 	bl	800531c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 80008b0:	2308      	movs	r3, #8
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80008b2:	a90d      	add	r1, sp, #52	@ 0x34
 80008b4:	4858      	ldr	r0, [pc, #352]	@ (8000a18 <main+0x354>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008b6:	e9cd 370d 	strd	r3, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008ba:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80008be:	f004 fd2d 	bl	800531c <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 80008c2:	a90d      	add	r1, sp, #52	@ 0x34
 80008c4:	4855      	ldr	r0, [pc, #340]	@ (8000a1c <main+0x358>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008c6:	e9cd a70d 	strd	sl, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008ca:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 80008ce:	f004 fd25 	bl	800531c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
 80008d2:	22c0      	movs	r2, #192	@ 0xc0
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80008d4:	a90d      	add	r1, sp, #52	@ 0x34
 80008d6:	4852      	ldr	r0, [pc, #328]	@ (8000a20 <main+0x35c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008d8:	e9cd 270d 	strd	r2, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008dc:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80008e0:	f004 fd1c 	bl	800531c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
 80008e4:	2240      	movs	r2, #64	@ 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80008e6:	a90d      	add	r1, sp, #52	@ 0x34
 80008e8:	484e      	ldr	r0, [pc, #312]	@ (8000a24 <main+0x360>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008ea:	e9cd 270d 	strd	r2, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008ee:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80008f2:	f004 fd13 	bl	800531c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80008f6:	484c      	ldr	r0, [pc, #304]	@ (8000a28 <main+0x364>)
 80008f8:	494c      	ldr	r1, [pc, #304]	@ (8000a2c <main+0x368>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 80008fa:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
 80008fc:	6001      	str	r1, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80008fe:	6207      	str	r7, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000900:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000904:	f004 fb5c 	bl	8004fc0 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8000908:	4949      	ldr	r1, [pc, #292]	@ (8000a30 <main+0x36c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800090a:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 800090c:	e9c5 1400 	strd	r1, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8000910:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8000914:	e9c5 440a 	strd	r4, r4, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000918:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800091c:	f004 fbff 	bl	800511e <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000920:	4639      	mov	r1, r7
 8000922:	4628      	mov	r0, r5
    Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8000924:	4d43      	ldr	r5, [pc, #268]	@ (8000a34 <main+0x370>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000926:	f004 fcb3 	bl	8005290 <HAL_DMA2D_ConfigLayer>
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800092a:	2340      	movs	r3, #64	@ 0x40
 800092c:	f44f 72c0 	mov.w	r2, #384	@ 0x180
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000930:	4941      	ldr	r1, [pc, #260]	@ (8000a38 <main+0x374>)
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000932:	4630      	mov	r0, r6
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000934:	60b4      	str	r4, [r6, #8]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000936:	61f4      	str	r4, [r6, #28]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 8000938:	62b4      	str	r4, [r6, #40]	@ 0x28
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800093a:	e9c6 3205 	strd	r3, r2, [r6, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800093e:	f44f 6200 	mov.w	r2, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8000942:	e9c6 2a08 	strd	r2, sl, [r6, #32]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000946:	f04f 0a02 	mov.w	sl, #2
 800094a:	2207      	movs	r2, #7
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 800094c:	e9c6 1400 	strd	r1, r4, [r6]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000950:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.RCDDelay = 2;
 8000952:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000956:	e9c6 9803 	strd	r9, r8, [r6, #12]
  SdramTiming.RowCycleDelay = 7;
 800095a:	e9cd 920f 	strd	r9, r2, [sp, #60]	@ 0x3c
  SdramTiming.ExitSelfRefreshDelay = 7;
 800095e:	e9cd a20d 	strd	sl, r2, [sp, #52]	@ 0x34
  SdramTiming.RPDelay = 2;
 8000962:	e9cd ba11 	strd	fp, sl, [sp, #68]	@ 0x44
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000966:	f006 fc3d 	bl	80071e4 <HAL_SDRAM_Init>
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800096a:	4629      	mov	r1, r5
 800096c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000970:	4630      	mov	r0, r6
  __IO uint32_t tmpmrd = 0;
 8000972:	9401      	str	r4, [sp, #4]
    Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK1;
 8000974:	e9c5 7800 	strd	r7, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 8000978:	e9c5 7402 	strd	r7, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800097c:	f006 fc52 	bl	8007224 <HAL_SDRAM_SendCommand>
    HAL_Delay(1);
 8000980:	4638      	mov	r0, r7
 8000982:	f004 fa5d 	bl	8004e40 <HAL_Delay>
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000986:	4629      	mov	r1, r5
 8000988:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800098c:	4630      	mov	r0, r6
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800098e:	e9c5 a800 	strd	sl, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 8000992:	e9c5 7402 	strd	r7, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000996:	f006 fc45 	bl	8007224 <HAL_SDRAM_SendCommand>
    Command.AutoRefreshNumber      = 8;
 800099a:	2308      	movs	r3, #8
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800099c:	4629      	mov	r1, r5
 800099e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80009a2:	4630      	mov	r0, r6
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80009a4:	e9c5 b800 	strd	fp, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 80009a8:	e9c5 3402 	strd	r3, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009ac:	f006 fc3a 	bl	8007224 <HAL_SDRAM_SendCommand>
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 80009b0:	f44f 730c 	mov.w	r3, #560	@ 0x230
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009b4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80009b8:	4629      	mov	r1, r5
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 80009ba:	9301      	str	r3, [sp, #4]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009bc:	4630      	mov	r0, r6
    Command.ModeRegisterDefinition = tmpmrd;
 80009be:	9b01      	ldr	r3, [sp, #4]
    Command.AutoRefreshNumber      = 1;
 80009c0:	60af      	str	r7, [r5, #8]
    Command.ModeRegisterDefinition = tmpmrd;
 80009c2:	60eb      	str	r3, [r5, #12]
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80009c4:	e9c5 9800 	strd	r9, r8, [r5]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80009c8:	f006 fc2c 	bl	8007224 <HAL_SDRAM_SendCommand>
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 80009cc:	f240 712b 	movw	r1, #1835	@ 0x72b
 80009d0:	4630      	mov	r0, r6
  hi2c3.Instance = I2C3;
 80009d2:	4d1a      	ldr	r5, [pc, #104]	@ (8000a3c <main+0x378>)
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 80009d4:	f006 fc45 	bl	8007262 <HAL_SDRAM_ProgramRefreshRate>
    FMC_Bank1->BTCR[0] = 0x000030D2;
 80009d8:	f04f 4320 	mov.w	r3, #2684354560	@ 0xa0000000
 80009dc:	f243 02d2 	movw	r2, #12498	@ 0x30d2
  HAL_Delay(100); //Delay to fix initialization issue on some boards 
 80009e0:	2064      	movs	r0, #100	@ 0x64
  hltdc.Init.AccumulatedActiveH = 283;
 80009e2:	f240 2615 	movw	r6, #533	@ 0x215
    FMC_Bank1->BTCR[0] = 0x000030D2;
 80009e6:	601a      	str	r2, [r3, #0]
  HAL_Delay(100); //Delay to fix initialization issue on some boards 
 80009e8:	f004 fa2a 	bl	8004e40 <HAL_Delay>
  hi2c3.Init.Timing = 0x20404768;
 80009ec:	4b14      	ldr	r3, [pc, #80]	@ (8000a40 <main+0x37c>)
 80009ee:	4a15      	ldr	r2, [pc, #84]	@ (8000a44 <main+0x380>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80009f0:	4628      	mov	r0, r5
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80009f2:	622c      	str	r4, [r5, #32]
  hi2c3.Init.Timing = 0x20404768;
 80009f4:	e9c5 2300 	strd	r2, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80009f8:	e9c5 4702 	strd	r4, r7, [r5, #8]
 80009fc:	e024      	b.n	8000a48 <main+0x384>
 80009fe:	bf00      	nop
 8000a00:	0300001b 	.word	0x0300001b
 8000a04:	e000ed00 	.word	0xe000ed00
 8000a08:	40023800 	.word	0x40023800
 8000a0c:	40020400 	.word	0x40020400
 8000a10:	20000464 	.word	0x20000464
 8000a14:	20000260 	.word	0x20000260
 8000a18:	40022800 	.word	0x40022800
 8000a1c:	40022000 	.word	0x40022000
 8000a20:	40020800 	.word	0x40020800
 8000a24:	40021800 	.word	0x40021800
 8000a28:	200004a4 	.word	0x200004a4
 8000a2c:	40023000 	.word	0x40023000
 8000a30:	4002b000 	.word	0x4002b000
 8000a34:	20000240 	.word	0x20000240
 8000a38:	a0000140 	.word	0xa0000140
 8000a3c:	20000410 	.word	0x20000410
 8000a40:	20404768 	.word	0x20404768
 8000a44:	40005c00 	.word	0x40005c00
  hi2c3.Init.OwnAddress2 = 0;
 8000a48:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000a4c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000a50:	f004 ff10 	bl	8005874 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000a54:	4621      	mov	r1, r4
 8000a56:	4628      	mov	r0, r5
 8000a58:	f005 f92e 	bl	8005cb8 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000a5c:	4621      	mov	r1, r4
 8000a5e:	4628      	mov	r0, r5
  hltdc.Instance = LTDC;
 8000a60:	4d4a      	ldr	r5, [pc, #296]	@ (8000b8c <main+0x4c8>)
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000a62:	f005 f94f 	bl	8005d04 <HAL_I2CEx_ConfigDigitalFilter>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000a66:	2234      	movs	r2, #52	@ 0x34
 8000a68:	4621      	mov	r1, r4
 8000a6a:	eb0d 0002 	add.w	r0, sp, r2
 8000a6e:	f01e fa7b 	bl	801ef68 <memset>
  hltdc.Instance = LTDC;
 8000a72:	4b47      	ldr	r3, [pc, #284]	@ (8000b90 <main+0x4cc>)
  hltdc.Init.VerticalSync = 9;
 8000a74:	2128      	movs	r1, #40	@ 0x28
  hltdc.Init.AccumulatedVBP = 11;
 8000a76:	2035      	movs	r0, #53	@ 0x35
  hltdc.Init.TotalHeigh = 285;
 8000a78:	f240 2c35 	movw	ip, #565	@ 0x235
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000a7c:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Blue = 0;
 8000a7e:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8000a80:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000a84:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.VerticalSync = 9;
 8000a88:	2309      	movs	r3, #9
 8000a8a:	e9c5 1305 	strd	r1, r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
 8000a8e:	230b      	movs	r3, #11
 8000a90:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
 8000a94:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000a98:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
 8000a9a:	e9c5 6309 	strd	r6, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
 8000a9e:	f240 131d 	movw	r3, #285	@ 0x11d
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000aa2:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.TotalHeigh = 285;
 8000aa6:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000aaa:	f005 f9d7 	bl	8005e5c <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8000aae:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ab0:	f44f 6e80 	mov.w	lr, #1024	@ 0x400
  pLayerCfg.WindowX1 = 480;
 8000ab4:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  pLayerCfg.WindowY1 = 272;
 8000ab8:	f44f 7388 	mov.w	r3, #272	@ 0x110
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000abc:	4628      	mov	r0, r5
  pLayerCfg.WindowX0 = 0;
 8000abe:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.ImageHeight = 272;
 8000ac0:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000ac2:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8000ac6:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  pLayerCfg.Alpha0 = 0;
 8000aca:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ace:	2105      	movs	r1, #5
 8000ad0:	e9cd e114 	strd	lr, r1, [sp, #80]	@ 0x50
  pLayerCfg.FBStartAdress = 0xC0000000;
 8000ad4:	f04f 4140 	mov.w	r1, #3221225472	@ 0xc0000000
  pLayerCfg.WindowY0 = 0;
 8000ad8:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.ImageWidth = 480;
 8000adc:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ae0:	4622      	mov	r2, r4
 8000ae2:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000ae4:	e9cd 3a10 	strd	r3, sl, [sp, #64]	@ 0x40
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ae8:	f005 fa83 	bl	8005ff2 <HAL_LTDC_ConfigLayer>
  hqspi.Instance = QUADSPI;
 8000aec:	4829      	ldr	r0, [pc, #164]	@ (8000b94 <main+0x4d0>)
 8000aee:	4b2a      	ldr	r3, [pc, #168]	@ (8000b98 <main+0x4d4>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8000af0:	6204      	str	r4, [r0, #32]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8000af2:	e9c0 9802 	strd	r9, r8, [r0, #8]
  hqspi.Init.ClockPrescaler = 1;
 8000af6:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 8000afa:	f04f 0818 	mov.w	r8, #24
 8000afe:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
  huart7.Init.BaudRate = 115200;
 8000b02:	f8df 90c8 	ldr.w	r9, [pc, #200]	@ 8000bcc <main+0x508>
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 8000b06:	e9c0 8304 	strd	r8, r3, [r0, #16]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8000b0a:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8000b0e:	f005 fbd3 	bl	80062b8 <HAL_QSPI_Init>
  BSP_QSPI_Init();
 8000b12:	f003 fff1 	bl	8004af8 <BSP_QSPI_Init>
  BSP_QSPI_MemoryMappedMode();
 8000b16:	f003 ff37 	bl	8004988 <BSP_QSPI_EnableMemoryMappedMode>
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8000b1a:	205c      	movs	r0, #92	@ 0x5c
 8000b1c:	f004 f9f4 	bl	8004f08 <HAL_NVIC_DisableIRQ>
  MX_LIBJPEG_Init();
 8000b20:	f000 fc62 	bl	80013e8 <MX_LIBJPEG_Init>
  huart7.Instance = UART7;
 8000b24:	481d      	ldr	r0, [pc, #116]	@ (8000b9c <main+0x4d8>)
  huart7.Init.BaudRate = 115200;
 8000b26:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
  huart7.Init.Parity = UART_PARITY_NONE;
 8000b2a:	6104      	str	r4, [r0, #16]
  huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000b2c:	6244      	str	r4, [r0, #36]	@ 0x24
  huart7.Init.BaudRate = 115200;
 8000b2e:	e9c0 9300 	strd	r9, r3, [r0]
  huart7.Init.Mode = UART_MODE_TX_RX;
 8000b32:	230c      	movs	r3, #12
  huart7.Init.StopBits = UART_STOPBITS_1;
 8000b34:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000b38:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000b3c:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_UART_Init(&huart7) != HAL_OK)
 8000b40:	f007 f992 	bl	8007e68 <HAL_UART_Init>
  MX_TouchGFX_Init();
 8000b44:	f000 fc7c 	bl	8001440 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000b48:	f000 fc79 	bl	800143e <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8000b4c:	f007 fabc 	bl	80080c8 <osKernelInitialize>
  bluMutexHandle = osMutexNew(&bluMutex_attributes);
 8000b50:	4813      	ldr	r0, [pc, #76]	@ (8000ba0 <main+0x4dc>)
 8000b52:	f007 fb5f 	bl	8008214 <osMutexNew>
 8000b56:	4b13      	ldr	r3, [pc, #76]	@ (8000ba4 <main+0x4e0>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b58:	4a13      	ldr	r2, [pc, #76]	@ (8000ba8 <main+0x4e4>)
 8000b5a:	4621      	mov	r1, r4
  bluMutexHandle = osMutexNew(&bluMutex_attributes);
 8000b5c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b5e:	4813      	ldr	r0, [pc, #76]	@ (8000bac <main+0x4e8>)
 8000b60:	f007 faec 	bl	800813c <osThreadNew>
 8000b64:	4b12      	ldr	r3, [pc, #72]	@ (8000bb0 <main+0x4ec>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b66:	4a13      	ldr	r2, [pc, #76]	@ (8000bb4 <main+0x4f0>)
 8000b68:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000b6a:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b6c:	4812      	ldr	r0, [pc, #72]	@ (8000bb8 <main+0x4f4>)
 8000b6e:	f007 fae5 	bl	800813c <osThreadNew>
 8000b72:	4b12      	ldr	r3, [pc, #72]	@ (8000bbc <main+0x4f8>)
  Bluethooth_taskHandle = osThreadNew(BLE_Task, NULL, &Bluethooth_task_attributes);
 8000b74:	4a12      	ldr	r2, [pc, #72]	@ (8000bc0 <main+0x4fc>)
 8000b76:	4621      	mov	r1, r4
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000b78:	6018      	str	r0, [r3, #0]
  Bluethooth_taskHandle = osThreadNew(BLE_Task, NULL, &Bluethooth_task_attributes);
 8000b7a:	4812      	ldr	r0, [pc, #72]	@ (8000bc4 <main+0x500>)
 8000b7c:	f007 fade 	bl	800813c <osThreadNew>
 8000b80:	4b11      	ldr	r3, [pc, #68]	@ (8000bc8 <main+0x504>)
 8000b82:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8000b84:	f007 faba 	bl	80080fc <osKernelStart>
  while (1)
 8000b88:	e7fe      	b.n	8000b88 <main+0x4c4>
 8000b8a:	bf00      	nop
 8000b8c:	20000368 	.word	0x20000368
 8000b90:	40016800 	.word	0x40016800
 8000b94:	2000031c 	.word	0x2000031c
 8000b98:	a0001000 	.word	0xa0001000
 8000b9c:	20000294 	.word	0x20000294
 8000ba0:	0801fb70 	.word	0x0801fb70
 8000ba4:	20000250 	.word	0x20000250
 8000ba8:	0801fbc8 	.word	0x0801fbc8
 8000bac:	080005e1 	.word	0x080005e1
 8000bb0:	2000025c 	.word	0x2000025c
 8000bb4:	0801fba4 	.word	0x0801fba4
 8000bb8:	0800144f 	.word	0x0800144f
 8000bbc:	20000258 	.word	0x20000258
 8000bc0:	0801fb80 	.word	0x0801fb80
 8000bc4:	080005ed 	.word	0x080005ed
 8000bc8:	20000254 	.word	0x20000254
 8000bcc:	40007800 	.word	0x40007800

08000bd0 <HAL_UART_TxCpltCallback>:
    if (huart->Instance == UART7) {
 8000bd0:	6802      	ldr	r2, [r0, #0]
 8000bd2:	4b06      	ldr	r3, [pc, #24]	@ (8000bec <HAL_UART_TxCpltCallback+0x1c>)
 8000bd4:	429a      	cmp	r2, r3
 8000bd6:	d107      	bne.n	8000be8 <HAL_UART_TxCpltCallback+0x18>
        bt.tx_complete = 1;
 8000bd8:	4b05      	ldr	r3, [pc, #20]	@ (8000bf0 <HAL_UART_TxCpltCallback+0x20>)
 8000bda:	2201      	movs	r2, #1
 8000bdc:	f883 2106 	strb.w	r2, [r3, #262]	@ 0x106
        if (bt.bluetooth_tx_callback) {
 8000be0:	f8d3 310c 	ldr.w	r3, [r3, #268]	@ 0x10c
 8000be4:	b103      	cbz	r3, 8000be8 <HAL_UART_TxCpltCallback+0x18>
            bt.bluetooth_tx_callback();
 8000be6:	4718      	bx	r3
}
 8000be8:	4770      	bx	lr
 8000bea:	bf00      	nop
 8000bec:	40007800 	.word	0x40007800
 8000bf0:	20001cf4 	.word	0x20001cf4

08000bf4 <HAL_UART_RxCpltCallback>:
    if (huart->Instance == UART7) {
 8000bf4:	6802      	ldr	r2, [r0, #0]
 8000bf6:	4b03      	ldr	r3, [pc, #12]	@ (8000c04 <HAL_UART_RxCpltCallback+0x10>)
 8000bf8:	429a      	cmp	r2, r3
 8000bfa:	d102      	bne.n	8000c02 <HAL_UART_RxCpltCallback+0xe>
        Bluetooth_handle_rx_interrupt(&bt);
 8000bfc:	4802      	ldr	r0, [pc, #8]	@ (8000c08 <HAL_UART_RxCpltCallback+0x14>)
 8000bfe:	f003 be33 	b.w	8004868 <Bluetooth_handle_rx_interrupt>
}
 8000c02:	4770      	bx	lr
 8000c04:	40007800 	.word	0x40007800
 8000c08:	20001cf4 	.word	0x20001cf4

08000c0c <_Z16send_turnoff_airv>:
	uint8_t data_[] = "M10000";
 8000c0c:	4b08      	ldr	r3, [pc, #32]	@ (8000c30 <_Z16send_turnoff_airv+0x24>)
{
 8000c0e:	b507      	push	{r0, r1, r2, lr}
	uint8_t data_[] = "M10000";
 8000c10:	6818      	ldr	r0, [r3, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c12:	4669      	mov	r1, sp
	uint8_t data_[] = "M10000";
 8000c14:	889a      	ldrh	r2, [r3, #4]
 8000c16:	9000      	str	r0, [sp, #0]
 8000c18:	799b      	ldrb	r3, [r3, #6]
 8000c1a:	f8ad 2004 	strh.w	r2, [sp, #4]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c1e:	2208      	movs	r2, #8
 8000c20:	4804      	ldr	r0, [pc, #16]	@ (8000c34 <_Z16send_turnoff_airv+0x28>)
	uint8_t data_[] = "M10000";
 8000c22:	f88d 3006 	strb.w	r3, [sp, #6]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c26:	f003 fe13 	bl	8004850 <Bluetooth_write_data>
}
 8000c2a:	b003      	add	sp, #12
 8000c2c:	f85d fb04 	ldr.w	pc, [sp], #4
 8000c30:	0801fb14 	.word	0x0801fb14
 8000c34:	20001cf4 	.word	0x20001cf4

08000c38 <_Z15send_turnon_airv>:
	uint8_t data_[] = "M10001";
 8000c38:	4b08      	ldr	r3, [pc, #32]	@ (8000c5c <_Z15send_turnon_airv+0x24>)
{
 8000c3a:	b507      	push	{r0, r1, r2, lr}
	uint8_t data_[] = "M10001";
 8000c3c:	6818      	ldr	r0, [r3, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c3e:	4669      	mov	r1, sp
	uint8_t data_[] = "M10001";
 8000c40:	889a      	ldrh	r2, [r3, #4]
 8000c42:	9000      	str	r0, [sp, #0]
 8000c44:	799b      	ldrb	r3, [r3, #6]
 8000c46:	f8ad 2004 	strh.w	r2, [sp, #4]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c4a:	2208      	movs	r2, #8
 8000c4c:	4804      	ldr	r0, [pc, #16]	@ (8000c60 <_Z15send_turnon_airv+0x28>)
	uint8_t data_[] = "M10001";
 8000c4e:	f88d 3006 	strb.w	r3, [sp, #6]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c52:	f003 fdfd 	bl	8004850 <Bluetooth_write_data>
}
 8000c56:	b003      	add	sp, #12
 8000c58:	f85d fb04 	ldr.w	pc, [sp], #4
 8000c5c:	0801fb1b 	.word	0x0801fb1b
 8000c60:	20001cf4 	.word	0x20001cf4

08000c64 <_Z18send_turnoff_waterv>:
	uint8_t data_[] = "M20000";
 8000c64:	4b08      	ldr	r3, [pc, #32]	@ (8000c88 <_Z18send_turnoff_waterv+0x24>)
{
 8000c66:	b507      	push	{r0, r1, r2, lr}
	uint8_t data_[] = "M20000";
 8000c68:	6818      	ldr	r0, [r3, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c6a:	4669      	mov	r1, sp
	uint8_t data_[] = "M20000";
 8000c6c:	889a      	ldrh	r2, [r3, #4]
 8000c6e:	9000      	str	r0, [sp, #0]
 8000c70:	799b      	ldrb	r3, [r3, #6]
 8000c72:	f8ad 2004 	strh.w	r2, [sp, #4]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c76:	2208      	movs	r2, #8
 8000c78:	4804      	ldr	r0, [pc, #16]	@ (8000c8c <_Z18send_turnoff_waterv+0x28>)
	uint8_t data_[] = "M20000";
 8000c7a:	f88d 3006 	strb.w	r3, [sp, #6]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c7e:	f003 fde7 	bl	8004850 <Bluetooth_write_data>
}
 8000c82:	b003      	add	sp, #12
 8000c84:	f85d fb04 	ldr.w	pc, [sp], #4
 8000c88:	0801fb22 	.word	0x0801fb22
 8000c8c:	20001cf4 	.word	0x20001cf4

08000c90 <_Z17send_turnon_waterv>:
	uint8_t data_[] = "M20001";
 8000c90:	4b08      	ldr	r3, [pc, #32]	@ (8000cb4 <_Z17send_turnon_waterv+0x24>)
{
 8000c92:	b507      	push	{r0, r1, r2, lr}
	uint8_t data_[] = "M20001";
 8000c94:	6818      	ldr	r0, [r3, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000c96:	4669      	mov	r1, sp
	uint8_t data_[] = "M20001";
 8000c98:	889a      	ldrh	r2, [r3, #4]
 8000c9a:	9000      	str	r0, [sp, #0]
 8000c9c:	799b      	ldrb	r3, [r3, #6]
 8000c9e:	f8ad 2004 	strh.w	r2, [sp, #4]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000ca2:	2208      	movs	r2, #8
 8000ca4:	4804      	ldr	r0, [pc, #16]	@ (8000cb8 <_Z17send_turnon_waterv+0x28>)
	uint8_t data_[] = "M20001";
 8000ca6:	f88d 3006 	strb.w	r3, [sp, #6]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000caa:	f003 fdd1 	bl	8004850 <Bluetooth_write_data>
}
 8000cae:	b003      	add	sp, #12
 8000cb0:	f85d fb04 	ldr.w	pc, [sp], #4
 8000cb4:	0801fb29 	.word	0x0801fb29
 8000cb8:	20001cf4 	.word	0x20001cf4

08000cbc <_Z16send_turnoff_ledv>:
	uint8_t data_[] = "M30000";
 8000cbc:	4b08      	ldr	r3, [pc, #32]	@ (8000ce0 <_Z16send_turnoff_ledv+0x24>)
{
 8000cbe:	b507      	push	{r0, r1, r2, lr}
	uint8_t data_[] = "M30000";
 8000cc0:	6818      	ldr	r0, [r3, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000cc2:	4669      	mov	r1, sp
	uint8_t data_[] = "M30000";
 8000cc4:	889a      	ldrh	r2, [r3, #4]
 8000cc6:	9000      	str	r0, [sp, #0]
 8000cc8:	799b      	ldrb	r3, [r3, #6]
 8000cca:	f8ad 2004 	strh.w	r2, [sp, #4]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000cce:	2208      	movs	r2, #8
 8000cd0:	4804      	ldr	r0, [pc, #16]	@ (8000ce4 <_Z16send_turnoff_ledv+0x28>)
	uint8_t data_[] = "M30000";
 8000cd2:	f88d 3006 	strb.w	r3, [sp, #6]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000cd6:	f003 fdbb 	bl	8004850 <Bluetooth_write_data>
}
 8000cda:	b003      	add	sp, #12
 8000cdc:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ce0:	0801fb30 	.word	0x0801fb30
 8000ce4:	20001cf4 	.word	0x20001cf4

08000ce8 <_Z15send_turnon_ledv>:
	uint8_t data_[] = "M30001";
 8000ce8:	4b08      	ldr	r3, [pc, #32]	@ (8000d0c <_Z15send_turnon_ledv+0x24>)
{
 8000cea:	b507      	push	{r0, r1, r2, lr}
	uint8_t data_[] = "M30001";
 8000cec:	6818      	ldr	r0, [r3, #0]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000cee:	4669      	mov	r1, sp
	uint8_t data_[] = "M30001";
 8000cf0:	889a      	ldrh	r2, [r3, #4]
 8000cf2:	9000      	str	r0, [sp, #0]
 8000cf4:	799b      	ldrb	r3, [r3, #6]
 8000cf6:	f8ad 2004 	strh.w	r2, [sp, #4]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000cfa:	2208      	movs	r2, #8
 8000cfc:	4804      	ldr	r0, [pc, #16]	@ (8000d10 <_Z15send_turnon_ledv+0x28>)
	uint8_t data_[] = "M30001";
 8000cfe:	f88d 3006 	strb.w	r3, [sp, #6]
	Bluetooth_write_data(&bt, data_, sizeof(data_)+1);
 8000d02:	f003 fda5 	bl	8004850 <Bluetooth_write_data>
}
 8000d06:	b003      	add	sp, #12
 8000d08:	f85d fb04 	ldr.w	pc, [sp], #4
 8000d0c:	0801fb37 	.word	0x0801fb37
 8000d10:	20001cf4 	.word	0x20001cf4

08000d14 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8000d14:	6802      	ldr	r2, [r0, #0]
 8000d16:	4b03      	ldr	r3, [pc, #12]	@ (8000d24 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8000d18:	429a      	cmp	r2, r3
 8000d1a:	d101      	bne.n	8000d20 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8000d1c:	f004 b87e 	b.w	8004e1c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000d20:	4770      	bx	lr
 8000d22:	bf00      	nop
 8000d24:	40001000 	.word	0x40001000

08000d28 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8000d28:	4770      	bx	lr
	...

08000d2c <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8000d2c:	4b0d      	ldr	r3, [pc, #52]	@ (8000d64 <HAL_MspInit+0x38>)
{
 8000d2e:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000d30:	210f      	movs	r1, #15
 8000d32:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 8000d36:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000d38:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000d3c:	641a      	str	r2, [r3, #64]	@ 0x40
 8000d3e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000d40:	f002 5280 	and.w	r2, r2, #268435456	@ 0x10000000
 8000d44:	9200      	str	r2, [sp, #0]
 8000d46:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d48:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000d4a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8000d4e:	645a      	str	r2, [r3, #68]	@ 0x44
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000d50:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d52:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000d54:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000d58:	9301      	str	r3, [sp, #4]
 8000d5a:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000d5c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000d5e:	f004 b893 	b.w	8004e88 <HAL_NVIC_SetPriority>
 8000d62:	bf00      	nop
 8000d64:	40023800 	.word	0x40023800

08000d68 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000d68:	6802      	ldr	r2, [r0, #0]
{
 8000d6a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8000d6c:	4b08      	ldr	r3, [pc, #32]	@ (8000d90 <HAL_CRC_MspInit+0x28>)
 8000d6e:	429a      	cmp	r2, r3
 8000d70:	d10b      	bne.n	8000d8a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000d72:	f8d3 2830 	ldr.w	r2, [r3, #2096]	@ 0x830
 8000d76:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8000d7a:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8000d7e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000d80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d82:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000d86:	9301      	str	r3, [sp, #4]
 8000d88:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000d8a:	b002      	add	sp, #8
 8000d8c:	4770      	bx	lr
 8000d8e:	bf00      	nop
 8000d90:	40023000 	.word	0x40023000

08000d94 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8000d94:	4b0e      	ldr	r3, [pc, #56]	@ (8000dd0 <HAL_DMA2D_MspInit+0x3c>)
{
 8000d96:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8000d98:	6802      	ldr	r2, [r0, #0]
 8000d9a:	429a      	cmp	r2, r3
 8000d9c:	d115      	bne.n	8000dca <HAL_DMA2D_MspInit+0x36>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d9e:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000da2:	2105      	movs	r1, #5
 8000da4:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000da6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000da8:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000dac:	631a      	str	r2, [r3, #48]	@ 0x30
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000dae:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000db0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000db2:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000db6:	9301      	str	r3, [sp, #4]
 8000db8:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000dba:	f004 f865 	bl	8004e88 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000dbe:	205a      	movs	r0, #90	@ 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8000dc0:	b003      	add	sp, #12
 8000dc2:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000dc6:	f004 b891 	b.w	8004eec <HAL_NVIC_EnableIRQ>
}
 8000dca:	b003      	add	sp, #12
 8000dcc:	f85d fb04 	ldr.w	pc, [sp], #4
 8000dd0:	4002b000 	.word	0x4002b000

08000dd4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000dd4:	b510      	push	{r4, lr}
 8000dd6:	b0a8      	sub	sp, #160	@ 0xa0
 8000dd8:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000dda:	2214      	movs	r2, #20
 8000ddc:	2100      	movs	r1, #0
 8000dde:	a802      	add	r0, sp, #8
 8000de0:	f01e f8c2 	bl	801ef68 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000de4:	2284      	movs	r2, #132	@ 0x84
 8000de6:	2100      	movs	r1, #0
 8000de8:	a807      	add	r0, sp, #28
 8000dea:	f01e f8bd 	bl	801ef68 <memset>
  if(hi2c->Instance==I2C3)
 8000dee:	6822      	ldr	r2, [r4, #0]
 8000df0:	4b17      	ldr	r3, [pc, #92]	@ (8000e50 <HAL_I2C_MspInit+0x7c>)
 8000df2:	429a      	cmp	r2, r3
 8000df4:	d12a      	bne.n	8000e4c <HAL_I2C_MspInit+0x78>

  /* USER CODE END I2C3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000df6:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000dfa:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000dfc:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000dfe:	f005 ff67 	bl	8006cd0 <HAL_RCCEx_PeriphCLKConfig>
 8000e02:	b108      	cbz	r0, 8000e08 <HAL_I2C_MspInit+0x34>
    {
      Error_Handler();
 8000e04:	f7ff ff90 	bl	8000d28 <Error_Handler>
    }

    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000e08:	4c12      	ldr	r4, [pc, #72]	@ (8000e54 <HAL_I2C_MspInit+0x80>)
    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000e0a:	f44f 72c0 	mov.w	r2, #384	@ 0x180
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e0e:	2101      	movs	r1, #1
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000e10:	4811      	ldr	r0, [pc, #68]	@ (8000e58 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000e12:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8000e14:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000e18:	6323      	str	r3, [r4, #48]	@ 0x30
 8000e1a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8000e1c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000e20:	9300      	str	r3, [sp, #0]
 8000e22:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000e24:	2312      	movs	r3, #18
 8000e26:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e2a:	2303      	movs	r3, #3
 8000e2c:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000e30:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000e32:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000e34:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000e36:	f004 fa71 	bl	800531c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8000e3a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000e3c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000e40:	6423      	str	r3, [r4, #64]	@ 0x40
 8000e42:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000e44:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000e48:	9301      	str	r3, [sp, #4]
 8000e4a:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8000e4c:	b028      	add	sp, #160	@ 0xa0
 8000e4e:	bd10      	pop	{r4, pc}
 8000e50:	40005c00 	.word	0x40005c00
 8000e54:	40023800 	.word	0x40023800
 8000e58:	40021c00 	.word	0x40021c00

08000e5c <HAL_I2C_MspDeInit>:
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
  if(hi2c->Instance==I2C3)
 8000e5c:	6802      	ldr	r2, [r0, #0]
{
 8000e5e:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C3)
 8000e60:	4b09      	ldr	r3, [pc, #36]	@ (8000e88 <HAL_I2C_MspDeInit+0x2c>)
 8000e62:	429a      	cmp	r2, r3
 8000e64:	d10f      	bne.n	8000e86 <HAL_I2C_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN I2C3_MspDeInit 0 */

  /* USER CODE END I2C3_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000e66:	4a09      	ldr	r2, [pc, #36]	@ (8000e8c <HAL_I2C_MspDeInit+0x30>)

    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_7);
 8000e68:	2180      	movs	r1, #128	@ 0x80
 8000e6a:	4809      	ldr	r0, [pc, #36]	@ (8000e90 <HAL_I2C_MspDeInit+0x34>)
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000e6c:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8000e6e:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8000e72:	6413      	str	r3, [r2, #64]	@ 0x40
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_7);
 8000e74:	f004 fb36 	bl	80054e4 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_8);
 8000e78:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000e7c:	4804      	ldr	r0, [pc, #16]	@ (8000e90 <HAL_I2C_MspDeInit+0x34>)
  /* USER CODE BEGIN I2C3_MspDeInit 1 */

  /* USER CODE END I2C3_MspDeInit 1 */
  }

}
 8000e7e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_8);
 8000e82:	f004 bb2f 	b.w	80054e4 <HAL_GPIO_DeInit>
}
 8000e86:	bd08      	pop	{r3, pc}
 8000e88:	40005c00 	.word	0x40005c00
 8000e8c:	40023800 	.word	0x40023800
 8000e90:	40021c00 	.word	0x40021c00

08000e94 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000e94:	b570      	push	{r4, r5, r6, lr}
 8000e96:	b0ac      	sub	sp, #176	@ 0xb0
 8000e98:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e9a:	2214      	movs	r2, #20
 8000e9c:	2100      	movs	r1, #0
 8000e9e:	a806      	add	r0, sp, #24
 8000ea0:	f01e f862 	bl	801ef68 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000ea4:	2284      	movs	r2, #132	@ 0x84
 8000ea6:	2100      	movs	r1, #0
 8000ea8:	a80b      	add	r0, sp, #44	@ 0x2c
 8000eaa:	f01e f85d 	bl	801ef68 <memset>
  if(hltdc->Instance==LTDC)
 8000eae:	6822      	ldr	r2, [r4, #0]
 8000eb0:	4b48      	ldr	r3, [pc, #288]	@ (8000fd4 <HAL_LTDC_MspInit+0x140>)
 8000eb2:	429a      	cmp	r2, r3
 8000eb4:	f040 808c 	bne.w	8000fd0 <HAL_LTDC_MspInit+0x13c>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000eb8:	2308      	movs	r3, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000eba:	2005      	movs	r0, #5
    PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV2;
    PeriphClkInitStruct.PLLSAIDivQ = 1;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000ebc:	2401      	movs	r4, #1
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000ebe:	930b      	str	r3, [sp, #44]	@ 0x2c
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
 8000ec0:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8000ec4:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000ec6:	2302      	movs	r3, #2
 8000ec8:	e9cd 3011 	strd	r3, r0, [sp, #68]	@ 0x44
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000ecc:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000ed0:	a80b      	add	r0, sp, #44	@ 0x2c
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000ed2:	e9cd 4315 	strd	r4, r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000ed6:	f005 fefb 	bl	8006cd0 <HAL_RCCEx_PeriphCLKConfig>
 8000eda:	b108      	cbz	r0, 8000ee0 <HAL_LTDC_MspInit+0x4c>
    {
      Error_Handler();
 8000edc:	f7ff ff24 	bl	8000d28 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000ee0:	4b3d      	ldr	r3, [pc, #244]	@ (8000fd8 <HAL_LTDC_MspInit+0x144>)
    PJ0     ------> LTDC_R1
    PJ1     ------> LTDC_R2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ee2:	2400      	movs	r4, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ee4:	2502      	movs	r5, #2
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000ee6:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000ee8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000eea:	a906      	add	r1, sp, #24
 8000eec:	483b      	ldr	r0, [pc, #236]	@ (8000fdc <HAL_LTDC_MspInit+0x148>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000eee:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8000ef2:	645a      	str	r2, [r3, #68]	@ 0x44
 8000ef4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000ef6:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8000efa:	9200      	str	r2, [sp, #0]
 8000efc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000efe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f00:	f042 0210 	orr.w	r2, r2, #16
 8000f04:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f06:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f08:	f002 0210 	and.w	r2, r2, #16
 8000f0c:	9201      	str	r2, [sp, #4]
 8000f0e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000f10:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f12:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000f16:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f18:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f1a:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 8000f1e:	9202      	str	r2, [sp, #8]
 8000f20:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOK_CLK_ENABLE();
 8000f22:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f24:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8000f28:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f2a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f2c:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
 8000f30:	9203      	str	r2, [sp, #12]
 8000f32:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000f34:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f36:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8000f3a:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f3c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f3e:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8000f42:	9204      	str	r2, [sp, #16]
 8000f44:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000f46:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f48:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000f4c:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f50:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000f54:	9305      	str	r3, [sp, #20]
 8000f56:	9b05      	ldr	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f58:	2310      	movs	r3, #16
 8000f5a:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f5e:	e9cd 4408 	strd	r4, r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f62:	960a      	str	r6, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000f64:	f004 f9da 	bl	800531c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_11
 8000f68:	f64e 73ff 	movw	r3, #61439	@ 0xefff
                          |GPIO_PIN_2|GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000f6c:	a906      	add	r1, sp, #24
 8000f6e:	481c      	ldr	r0, [pc, #112]	@ (8000fe0 <HAL_LTDC_MspInit+0x14c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f70:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f72:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f76:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000f7a:	f004 f9cf 	bl	800531c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4
 8000f7e:	23f7      	movs	r3, #247	@ 0xf7
                          |GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000f80:	a906      	add	r1, sp, #24
 8000f82:	4818      	ldr	r0, [pc, #96]	@ (8000fe4 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f84:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f86:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f8a:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000f8e:	f004 f9c5 	bl	800531c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000f92:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000f96:	a906      	add	r1, sp, #24
 8000f98:	4813      	ldr	r0, [pc, #76]	@ (8000fe8 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f9a:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000f9e:	2309      	movs	r3, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000fa0:	e9cd 4408 	strd	r4, r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000fa4:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000fa6:	f004 f9b9 	bl	800531c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_15|GPIO_PIN_14;
 8000faa:	f44f 4346 	mov.w	r3, #50688	@ 0xc600
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000fae:	a906      	add	r1, sp, #24
 8000fb0:	480e      	ldr	r0, [pc, #56]	@ (8000fec <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000fb2:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fb4:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000fb8:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000fbc:	f004 f9ae 	bl	800531c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000fc0:	2058      	movs	r0, #88	@ 0x58
 8000fc2:	4622      	mov	r2, r4
 8000fc4:	2105      	movs	r1, #5
 8000fc6:	f003 ff5f 	bl	8004e88 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000fca:	2058      	movs	r0, #88	@ 0x58
 8000fcc:	f003 ff8e 	bl	8004eec <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000fd0:	b02c      	add	sp, #176	@ 0xb0
 8000fd2:	bd70      	pop	{r4, r5, r6, pc}
 8000fd4:	40016800 	.word	0x40016800
 8000fd8:	40023800 	.word	0x40023800
 8000fdc:	40021000 	.word	0x40021000
 8000fe0:	40022400 	.word	0x40022400
 8000fe4:	40022800 	.word	0x40022800
 8000fe8:	40021800 	.word	0x40021800
 8000fec:	40022000 	.word	0x40022000

08000ff0 <HAL_QSPI_MspInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000ff0:	2214      	movs	r2, #20
 8000ff2:	2100      	movs	r1, #0
{
 8000ff4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ff8:	b08a      	sub	sp, #40	@ 0x28
 8000ffa:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000ffc:	eb0d 0002 	add.w	r0, sp, r2
 8001000:	f01d ffb2 	bl	801ef68 <memset>
  if(hqspi->Instance==QUADSPI)
 8001004:	6822      	ldr	r2, [r4, #0]
 8001006:	4b2c      	ldr	r3, [pc, #176]	@ (80010b8 <HAL_QSPI_MspInit+0xc8>)
 8001008:	429a      	cmp	r2, r3
 800100a:	d151      	bne.n	80010b0 <HAL_QSPI_MspInit+0xc0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 800100c:	4b2b      	ldr	r3, [pc, #172]	@ (80010bc <HAL_QSPI_MspInit+0xcc>)
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800100e:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001010:	2403      	movs	r4, #3
 8001012:	2609      	movs	r6, #9
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001014:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001016:	f04f 0804 	mov.w	r8, #4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800101a:	a905      	add	r1, sp, #20
 800101c:	4828      	ldr	r0, [pc, #160]	@ (80010c0 <HAL_QSPI_MspInit+0xd0>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 800101e:	f042 0202 	orr.w	r2, r2, #2

    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001022:	2700      	movs	r7, #0
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001024:	639a      	str	r2, [r3, #56]	@ 0x38
 8001026:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8001028:	f002 0202 	and.w	r2, r2, #2
 800102c:	9201      	str	r2, [sp, #4]
 800102e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8001030:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001032:	f042 0210 	orr.w	r2, r2, #16
 8001036:	631a      	str	r2, [r3, #48]	@ 0x30
 8001038:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800103a:	f002 0210 	and.w	r2, r2, #16
 800103e:	9202      	str	r2, [sp, #8]
 8001040:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001042:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001044:	f042 0202 	orr.w	r2, r2, #2
 8001048:	631a      	str	r2, [r3, #48]	@ 0x30
 800104a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800104c:	f002 0202 	and.w	r2, r2, #2
 8001050:	9203      	str	r2, [sp, #12]
 8001052:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001054:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001056:	f042 0208 	orr.w	r2, r2, #8
 800105a:	631a      	str	r2, [r3, #48]	@ 0x30
 800105c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800105e:	f003 0308 	and.w	r3, r3, #8
 8001062:	9304      	str	r3, [sp, #16]
 8001064:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001066:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 800106a:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800106e:	f004 f955 	bl	800531c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001072:	2340      	movs	r3, #64	@ 0x40
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001074:	a905      	add	r1, sp, #20
 8001076:	4813      	ldr	r0, [pc, #76]	@ (80010c4 <HAL_QSPI_MspInit+0xd4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001078:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 800107c:	230a      	movs	r3, #10
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800107e:	e9cd 7407 	strd	r7, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8001082:	9309      	str	r3, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001084:	f004 f94a 	bl	800531c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001088:	a905      	add	r1, sp, #20
 800108a:	480e      	ldr	r0, [pc, #56]	@ (80010c4 <HAL_QSPI_MspInit+0xd4>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 800108c:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800108e:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001092:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001096:	f004 f941 	bl	800531c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11;
 800109a:	f44f 5360 	mov.w	r3, #14336	@ 0x3800
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800109e:	a905      	add	r1, sp, #20
 80010a0:	4809      	ldr	r0, [pc, #36]	@ (80010c8 <HAL_QSPI_MspInit+0xd8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 80010a2:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010a4:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010a8:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80010ac:	f004 f936 	bl	800531c <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 80010b0:	b00a      	add	sp, #40	@ 0x28
 80010b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80010b6:	bf00      	nop
 80010b8:	a0001000 	.word	0xa0001000
 80010bc:	40023800 	.word	0x40023800
 80010c0:	40021000 	.word	0x40021000
 80010c4:	40020400 	.word	0x40020400
 80010c8:	40020c00 	.word	0x40020c00

080010cc <HAL_QSPI_MspDeInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
  if(hqspi->Instance==QUADSPI)
 80010cc:	6802      	ldr	r2, [r0, #0]
{
 80010ce:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 80010d0:	4b0b      	ldr	r3, [pc, #44]	@ (8001100 <HAL_QSPI_MspDeInit+0x34>)
 80010d2:	429a      	cmp	r2, r3
 80010d4:	d113      	bne.n	80010fe <HAL_QSPI_MspDeInit+0x32>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 80010d6:	4a0b      	ldr	r2, [pc, #44]	@ (8001104 <HAL_QSPI_MspDeInit+0x38>)
    PB2     ------> QUADSPI_CLK
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 80010d8:	2104      	movs	r1, #4
 80010da:	480b      	ldr	r0, [pc, #44]	@ (8001108 <HAL_QSPI_MspDeInit+0x3c>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 80010dc:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80010de:	f023 0302 	bic.w	r3, r3, #2
 80010e2:	6393      	str	r3, [r2, #56]	@ 0x38
    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 80010e4:	f004 f9fe 	bl	80054e4 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_2);
 80010e8:	2144      	movs	r1, #68	@ 0x44
 80010ea:	4808      	ldr	r0, [pc, #32]	@ (800110c <HAL_QSPI_MspDeInit+0x40>)
 80010ec:	f004 f9fa 	bl	80054e4 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11);
 80010f0:	f44f 5160 	mov.w	r1, #14336	@ 0x3800
 80010f4:	4806      	ldr	r0, [pc, #24]	@ (8001110 <HAL_QSPI_MspDeInit+0x44>)
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 80010f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11);
 80010fa:	f004 b9f3 	b.w	80054e4 <HAL_GPIO_DeInit>
}
 80010fe:	bd08      	pop	{r3, pc}
 8001100:	a0001000 	.word	0xa0001000
 8001104:	40023800 	.word	0x40023800
 8001108:	40021000 	.word	0x40021000
 800110c:	40020400 	.word	0x40020400
 8001110:	40020c00 	.word	0x40020c00

08001114 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001114:	b510      	push	{r4, lr}
 8001116:	b0a8      	sub	sp, #160	@ 0xa0
 8001118:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800111a:	2214      	movs	r2, #20
 800111c:	2100      	movs	r1, #0
 800111e:	a802      	add	r0, sp, #8
 8001120:	f01d ff22 	bl	801ef68 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001124:	2284      	movs	r2, #132	@ 0x84
 8001126:	2100      	movs	r1, #0
 8001128:	a807      	add	r0, sp, #28
 800112a:	f01d ff1d 	bl	801ef68 <memset>
  if(huart->Instance==UART7)
 800112e:	6822      	ldr	r2, [r4, #0]
 8001130:	4b17      	ldr	r3, [pc, #92]	@ (8001190 <HAL_UART_MspInit+0x7c>)
 8001132:	429a      	cmp	r2, r3
 8001134:	d12a      	bne.n	800118c <HAL_UART_MspInit+0x78>

  /* USER CODE END UART7_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 8001136:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800113a:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 800113c:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800113e:	f005 fdc7 	bl	8006cd0 <HAL_RCCEx_PeriphCLKConfig>
 8001142:	b108      	cbz	r0, 8001148 <HAL_UART_MspInit+0x34>
    {
      Error_Handler();
 8001144:	f7ff fdf0 	bl	8000d28 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_UART7_CLK_ENABLE();
 8001148:	4b12      	ldr	r3, [pc, #72]	@ (8001194 <HAL_UART_MspInit+0x80>)
    PF6     ------> UART7_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800114a:	2100      	movs	r1, #0
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800114c:	4812      	ldr	r0, [pc, #72]	@ (8001198 <HAL_UART_MspInit+0x84>)
    __HAL_RCC_UART7_CLK_ENABLE();
 800114e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001150:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8001154:	641a      	str	r2, [r3, #64]	@ 0x40
 8001156:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001158:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 800115c:	9200      	str	r2, [sp, #0]
 800115e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001160:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001162:	f042 0220 	orr.w	r2, r2, #32
 8001166:	631a      	str	r2, [r3, #48]	@ 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001168:	22c0      	movs	r2, #192	@ 0xc0
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800116a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800116c:	f003 0320 	and.w	r3, r3, #32
 8001170:	9301      	str	r3, [sp, #4]
 8001172:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001174:	2302      	movs	r3, #2
 8001176:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800117a:	2303      	movs	r3, #3
 800117c:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 8001180:	2308      	movs	r3, #8
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001182:	eb0d 0103 	add.w	r1, sp, r3
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 8001186:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001188:	f004 f8c8 	bl	800531c <HAL_GPIO_Init>
  /* USER CODE BEGIN UART7_MspInit 1 */

  /* USER CODE END UART7_MspInit 1 */
  }

}
 800118c:	b028      	add	sp, #160	@ 0xa0
 800118e:	bd10      	pop	{r4, pc}
 8001190:	40007800 	.word	0x40007800
 8001194:	40023800 	.word	0x40023800
 8001198:	40021400 	.word	0x40021400

0800119c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800119c:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800119e:	2300      	movs	r3, #0
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80011a0:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80011a2:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80011a4:	4b29      	ldr	r3, [pc, #164]	@ (800124c <HAL_SDRAM_MspInit+0xb0>)
 80011a6:	681e      	ldr	r6, [r3, #0]
 80011a8:	2e00      	cmp	r6, #0
 80011aa:	d14d      	bne.n	8001248 <HAL_SDRAM_MspInit+0xac>
  FMC_Initialized = 1;
 80011ac:	2201      	movs	r2, #1
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011ae:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80011b0:	2503      	movs	r5, #3
 80011b2:	240c      	movs	r4, #12
  FMC_Initialized = 1;
 80011b4:	601a      	str	r2, [r3, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80011b6:	a901      	add	r1, sp, #4
  __HAL_RCC_FMC_CLK_ENABLE();
 80011b8:	4b25      	ldr	r3, [pc, #148]	@ (8001250 <HAL_SDRAM_MspInit+0xb4>)
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80011ba:	4826      	ldr	r0, [pc, #152]	@ (8001254 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80011bc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80011be:	f042 0201 	orr.w	r2, r2, #1
 80011c2:	639a      	str	r2, [r3, #56]	@ 0x38
 80011c4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80011c6:	f003 0301 	and.w	r3, r3, #1
 80011ca:	9300      	str	r3, [sp, #0]
 80011cc:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011ce:	f64f 7383 	movw	r3, #65411	@ 0xff83
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80011d2:	e9cd 5404 	strd	r5, r4, [sp, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011d6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80011da:	f004 f89f 	bl	800531c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 80011de:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80011e2:	a901      	add	r1, sp, #4
 80011e4:	481c      	ldr	r0, [pc, #112]	@ (8001258 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80011e6:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011e8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80011ec:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80011f0:	f004 f894 	bl	800531c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 80011f4:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80011f8:	a901      	add	r1, sp, #4
 80011fa:	4818      	ldr	r0, [pc, #96]	@ (800125c <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80011fc:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011fe:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001202:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001206:	f004 f889 	bl	800531c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800120a:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800120e:	a901      	add	r1, sp, #4
 8001210:	4813      	ldr	r0, [pc, #76]	@ (8001260 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001212:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001214:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001218:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800121c:	f004 f87e 	bl	800531c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_3;
 8001220:	2328      	movs	r3, #40	@ 0x28
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001222:	a901      	add	r1, sp, #4
 8001224:	480f      	ldr	r0, [pc, #60]	@ (8001264 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001226:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001228:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800122c:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001230:	f004 f874 	bl	800531c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001234:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001236:	a901      	add	r1, sp, #4
 8001238:	480b      	ldr	r0, [pc, #44]	@ (8001268 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800123a:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800123c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001240:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001244:	f004 f86a 	bl	800531c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001248:	b007      	add	sp, #28
 800124a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800124c:	200004c8 	.word	0x200004c8
 8001250:	40023800 	.word	0x40023800
 8001254:	40021000 	.word	0x40021000
 8001258:	40021800 	.word	0x40021800
 800125c:	40020c00 	.word	0x40020c00
 8001260:	40021400 	.word	0x40021400
 8001264:	40021c00 	.word	0x40021c00
 8001268:	40020800 	.word	0x40020800

0800126c <HAL_InitTick>:
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 800126c:	4b21      	ldr	r3, [pc, #132]	@ (80012f4 <HAL_InitTick+0x88>)
 800126e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001270:	f042 0210 	orr.w	r2, r2, #16
{
 8001274:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001276:	641a      	str	r2, [r3, #64]	@ 0x40
{
 8001278:	b088      	sub	sp, #32
  __HAL_RCC_TIM6_CLK_ENABLE();
 800127a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
{
 800127c:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800127e:	a901      	add	r1, sp, #4
 8001280:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001282:	f003 0310 	and.w	r3, r3, #16
 8001286:	9302      	str	r3, [sp, #8]
 8001288:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800128a:	f005 fd03 	bl	8006c94 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800128e:	9b06      	ldr	r3, [sp, #24]
 8001290:	bb4b      	cbnz	r3, 80012e6 <HAL_InitTick+0x7a>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001292:	f005 fcdf 	bl	8006c54 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001296:	4e18      	ldr	r6, [pc, #96]	@ (80012f8 <HAL_InitTick+0x8c>)
 8001298:	4b18      	ldr	r3, [pc, #96]	@ (80012fc <HAL_InitTick+0x90>)
 800129a:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800129c:	f240 33e7 	movw	r3, #999	@ 0x3e7
 80012a0:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80012a2:	4b17      	ldr	r3, [pc, #92]	@ (8001300 <HAL_InitTick+0x94>)
 80012a4:	fbb0 f3f3 	udiv	r3, r0, r3
 80012a8:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80012aa:	4630      	mov	r0, r6
  htim6.Init.Prescaler = uwPrescalerValue;
 80012ac:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
 80012ae:	2300      	movs	r3, #0
 80012b0:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80012b2:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80012b4:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 80012b6:	f006 f945 	bl	8007544 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80012ba:	4604      	mov	r4, r0
 80012bc:	b980      	cbnz	r0, 80012e0 <HAL_InitTick+0x74>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 80012be:	4630      	mov	r0, r6
 80012c0:	f005 ffe8 	bl	8007294 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80012c4:	4604      	mov	r4, r0
 80012c6:	b958      	cbnz	r0, 80012e0 <HAL_InitTick+0x74>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80012c8:	2036      	movs	r0, #54	@ 0x36
 80012ca:	f003 fe0f 	bl	8004eec <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80012ce:	2d0f      	cmp	r5, #15
 80012d0:	d80d      	bhi.n	80012ee <HAL_InitTick+0x82>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80012d2:	4622      	mov	r2, r4
 80012d4:	4629      	mov	r1, r5
 80012d6:	2036      	movs	r0, #54	@ 0x36
 80012d8:	f003 fdd6 	bl	8004e88 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80012dc:	4b09      	ldr	r3, [pc, #36]	@ (8001304 <HAL_InitTick+0x98>)
 80012de:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 80012e0:	4620      	mov	r0, r4
 80012e2:	b008      	add	sp, #32
 80012e4:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80012e6:	f005 fcb5 	bl	8006c54 <HAL_RCC_GetPCLK1Freq>
 80012ea:	0040      	lsls	r0, r0, #1
 80012ec:	e7d3      	b.n	8001296 <HAL_InitTick+0x2a>
        status = HAL_ERROR;
 80012ee:	2401      	movs	r4, #1
 80012f0:	e7f6      	b.n	80012e0 <HAL_InitTick+0x74>
 80012f2:	bf00      	nop
 80012f4:	40023800 	.word	0x40023800
 80012f8:	200004cc 	.word	0x200004cc
 80012fc:	40001000 	.word	0x40001000
 8001300:	000f4240 	.word	0x000f4240
 8001304:	2000003c 	.word	0x2000003c

08001308 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001308:	4770      	bx	lr

0800130a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800130a:	e7fe      	b.n	800130a <HardFault_Handler>

0800130c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800130c:	e7fe      	b.n	800130c <MemManage_Handler>

0800130e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800130e:	e7fe      	b.n	800130e <BusFault_Handler>

08001310 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001310:	e7fe      	b.n	8001310 <UsageFault_Handler>

08001312 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8001312:	4770      	bx	lr

08001314 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001314:	4801      	ldr	r0, [pc, #4]	@ (800131c <TIM6_DAC_IRQHandler+0x8>)
 8001316:	f005 bfff 	b.w	8007318 <HAL_TIM_IRQHandler>
 800131a:	bf00      	nop
 800131c:	200004cc 	.word	0x200004cc

08001320 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001320:	4801      	ldr	r0, [pc, #4]	@ (8001328 <LTDC_IRQHandler+0x8>)
 8001322:	f004 be09 	b.w	8005f38 <HAL_LTDC_IRQHandler>
 8001326:	bf00      	nop
 8001328:	20000368 	.word	0x20000368

0800132c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800132c:	4801      	ldr	r0, [pc, #4]	@ (8001334 <DMA2D_IRQHandler+0x8>)
 800132e:	f003 bf24 	b.w	800517a <HAL_DMA2D_IRQHandler>
 8001332:	bf00      	nop
 8001334:	20000464 	.word	0x20000464

08001338 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001338:	2001      	movs	r0, #1
 800133a:	4770      	bx	lr

0800133c <_kill>:

int _kill(int pid, int sig)
{
 800133c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800133e:	f01d fedb 	bl	801f0f8 <__errno>
 8001342:	2316      	movs	r3, #22
 8001344:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001346:	f04f 30ff 	mov.w	r0, #4294967295
 800134a:	bd08      	pop	{r3, pc}

0800134c <_exit>:

void _exit (int status)
{
 800134c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800134e:	f01d fed3 	bl	801f0f8 <__errno>
 8001352:	2316      	movs	r3, #22
 8001354:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001356:	e7fe      	b.n	8001356 <_exit+0xa>

08001358 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001358:	b570      	push	{r4, r5, r6, lr}
 800135a:	460d      	mov	r5, r1
 800135c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800135e:	460e      	mov	r6, r1
 8001360:	1b73      	subs	r3, r6, r5
 8001362:	429c      	cmp	r4, r3
 8001364:	dc01      	bgt.n	800136a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001366:	4620      	mov	r0, r4
 8001368:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800136a:	f3af 8000 	nop.w
 800136e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001372:	e7f5      	b.n	8001360 <_read+0x8>

08001374 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001374:	b570      	push	{r4, r5, r6, lr}
 8001376:	460d      	mov	r5, r1
 8001378:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800137a:	460e      	mov	r6, r1
 800137c:	1b73      	subs	r3, r6, r5
 800137e:	429c      	cmp	r4, r3
 8001380:	dc01      	bgt.n	8001386 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001382:	4620      	mov	r0, r4
 8001384:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001386:	f816 0b01 	ldrb.w	r0, [r6], #1
 800138a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800138e:	e7f5      	b.n	800137c <_write+0x8>

08001390 <_close>:

int _close(int file)
{
	return -1;
}
 8001390:	f04f 30ff 	mov.w	r0, #4294967295
 8001394:	4770      	bx	lr

08001396 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001396:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
 800139a:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 800139c:	604b      	str	r3, [r1, #4]
}
 800139e:	4770      	bx	lr

080013a0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80013a0:	2001      	movs	r0, #1
 80013a2:	4770      	bx	lr

080013a4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80013a4:	2000      	movs	r0, #0
 80013a6:	4770      	bx	lr

080013a8 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80013a8:	4a0b      	ldr	r2, [pc, #44]	@ (80013d8 <_sbrk+0x30>)
{
 80013aa:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 80013ac:	6811      	ldr	r1, [r2, #0]
{
 80013ae:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 80013b0:	b909      	cbnz	r1, 80013b6 <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 80013b2:	490a      	ldr	r1, [pc, #40]	@ (80013dc <_sbrk+0x34>)
 80013b4:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80013b6:	6810      	ldr	r0, [r2, #0]
 80013b8:	4909      	ldr	r1, [pc, #36]	@ (80013e0 <_sbrk+0x38>)
 80013ba:	4c0a      	ldr	r4, [pc, #40]	@ (80013e4 <_sbrk+0x3c>)
 80013bc:	4403      	add	r3, r0
 80013be:	1b09      	subs	r1, r1, r4
 80013c0:	428b      	cmp	r3, r1
 80013c2:	d906      	bls.n	80013d2 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 80013c4:	f01d fe98 	bl	801f0f8 <__errno>
 80013c8:	230c      	movs	r3, #12
 80013ca:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80013cc:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 80013d0:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 80013d2:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 80013d4:	e7fc      	b.n	80013d0 <_sbrk+0x28>
 80013d6:	bf00      	nop
 80013d8:	20000518 	.word	0x20000518
 80013dc:	20015ce0 	.word	0x20015ce0
 80013e0:	20050000 	.word	0x20050000
 80013e4:	00000a00 	.word	0x00000a00

080013e8 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
 80013e8:	4770      	bx	lr
	...

080013ec <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80013ec:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001424 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80013f0:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80013f2:	e003      	b.n	80013fc <LoopCopyDataInit>

080013f4 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80013f4:	4b0c      	ldr	r3, [pc, #48]	@ (8001428 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80013f6:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80013f8:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80013fa:	3104      	adds	r1, #4

080013fc <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80013fc:	480b      	ldr	r0, [pc, #44]	@ (800142c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80013fe:	4b0c      	ldr	r3, [pc, #48]	@ (8001430 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8001400:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8001402:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001404:	d3f6      	bcc.n	80013f4 <CopyDataInit>
  ldr  r2, =_sbss
 8001406:	4a0b      	ldr	r2, [pc, #44]	@ (8001434 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001408:	e002      	b.n	8001410 <LoopFillZerobss>

0800140a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800140a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800140c:	f842 3b04 	str.w	r3, [r2], #4

08001410 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001410:	4b09      	ldr	r3, [pc, #36]	@ (8001438 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8001412:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001414:	d3f9      	bcc.n	800140a <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8001416:	f003 fc07 	bl	8004c28 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800141a:	f01d fe73 	bl	801f104 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800141e:	f7ff f951 	bl	80006c4 <main>
  bx  lr    
 8001422:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001424:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8001428:	08021b18 	.word	0x08021b18
  ldr  r0, =_sdata
 800142c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001430:	20000124 	.word	0x20000124
  ldr  r2, =_sbss
 8001434:	20000124 	.word	0x20000124
  ldr  r3, = _ebss
 8001438:	20015cdc 	.word	0x20015cdc

0800143c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800143c:	e7fe      	b.n	800143c <ADC_IRQHandler>

0800143e <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 800143e:	4770      	bx	lr

08001440 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001440:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8001442:	f000 fd5f 	bl	8001f04 <touchgfx_components_init>
    touchgfx_init();
}
 8001446:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 800144a:	f000 bceb 	b.w	8001e24 <touchgfx_init>

0800144e <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 800144e:	f000 bd5b 	b.w	8001f08 <touchgfx_taskEntry>

08001452 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8001452:	6840      	ldr	r0, [r0, #4]
    }
 8001454:	4770      	bx	lr

08001456 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8001456:	6041      	str	r1, [r0, #4]
    }
 8001458:	4770      	bx	lr
	...

0800145c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 800145c:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8001460:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 8001464:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8001468:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 800146c:	4b05      	ldr	r3, [pc, #20]	@ (8001484 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 800146e:	4a06      	ldr	r2, [pc, #24]	@ (8001488 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 8001470:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
 8001474:	430a      	orrs	r2, r1
 8001476:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 800147a:	681a      	ldr	r2, [r3, #0]
 800147c:	f042 0201 	orr.w	r2, r2, #1
 8001480:	601a      	str	r2, [r3, #0]
}
 8001482:	4770      	bx	lr
 8001484:	e0001000 	.word	0xe0001000
 8001488:	c5acce55 	.word	0xc5acce55

0800148c <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 800148c:	1a52      	subs	r2, r2, r1
 800148e:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 8001492:	fbb2 f0f3 	udiv	r0, r2, r3
 8001496:	4770      	bx	lr

08001498 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8001498:	4b01      	ldr	r3, [pc, #4]	@ (80014a0 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 800149a:	6858      	ldr	r0, [r3, #4]
}
 800149c:	4770      	bx	lr
 800149e:	bf00      	nop
 80014a0:	e0001000 	.word	0xe0001000

080014a4 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 80014a4:	4770      	bx	lr

080014a6 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 80014a6:	b510      	push	{r4, lr}
 80014a8:	4604      	mov	r4, r0
 80014aa:	210c      	movs	r1, #12
 80014ac:	f01d fa91 	bl	801e9d2 <_ZdlPvj>
 80014b0:	4620      	mov	r0, r4
 80014b2:	bd10      	pop	{r4, pc}

080014b4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80014b4:	6803      	ldr	r3, [r0, #0]
{
 80014b6:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80014b8:	691b      	ldr	r3, [r3, #16]
{
 80014ba:	4604      	mov	r4, r0
    if (active) //idle task sched out
 80014bc:	b131      	cbz	r1, 80014cc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80014be:	4798      	blx	r3
 80014c0:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 80014c2:	6863      	ldr	r3, [r4, #4]
 80014c4:	1a9b      	subs	r3, r3, r2
 80014c6:	4403      	add	r3, r0
 80014c8:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 80014ca:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 80014cc:	4798      	blx	r3
 80014ce:	60a0      	str	r0, [r4, #8]
}
 80014d0:	e7fb      	b.n	80014ca <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>
	...

080014d4 <_ZN20STM32TouchController4initEv>:
extern I2C_HandleTypeDef hi2c3;

void STM32TouchController::init()
{
    /* Initialize the TS driver structure */
    tsDriver = &ft5336_ts_drv;
 80014d4:	4b02      	ldr	r3, [pc, #8]	@ (80014e0 <_ZN20STM32TouchController4initEv+0xc>)

    /* Initialize the TS driver */
    tsDriver->Start(TS_I2C_ADDRESS);
 80014d6:	2070      	movs	r0, #112	@ 0x70
    tsDriver = &ft5336_ts_drv;
 80014d8:	4a02      	ldr	r2, [pc, #8]	@ (80014e4 <_ZN20STM32TouchController4initEv+0x10>)
 80014da:	6013      	str	r3, [r2, #0]
    tsDriver->Start(TS_I2C_ADDRESS);
 80014dc:	68db      	ldr	r3, [r3, #12]
 80014de:	4718      	bx	r3
 80014e0:	20000010 	.word	0x20000010
 80014e4:	2000051c 	.word	0x2000051c

080014e8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80014e8:	4770      	bx	lr

080014ea <_ZN20STM32TouchControllerD0Ev>:
 80014ea:	b510      	push	{r4, lr}
 80014ec:	4604      	mov	r4, r0
 80014ee:	2104      	movs	r1, #4
 80014f0:	f01d fa6f 	bl	801e9d2 <_ZdlPvj>
 80014f4:	4620      	mov	r0, r4
 80014f6:	bd10      	pop	{r4, pc}

080014f8 <_ZN20STM32TouchController11sampleTouchERlS0_>:
}

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 80014f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (tsDriver)
 80014fa:	4e0e      	ldr	r6, [pc, #56]	@ (8001534 <_ZN20STM32TouchController11sampleTouchERlS0_+0x3c>)
{
 80014fc:	460d      	mov	r5, r1
 80014fe:	4614      	mov	r4, r2
    if (tsDriver)
 8001500:	6833      	ldr	r3, [r6, #0]
 8001502:	b913      	cbnz	r3, 800150a <_ZN20STM32TouchController11sampleTouchERlS0_+0x12>
            x = (int32_t)_x;
            y = (int32_t)_y;
            return true;
        }
    }
    return false;
 8001504:	2000      	movs	r0, #0
}
 8001506:	b002      	add	sp, #8
 8001508:	bd70      	pop	{r4, r5, r6, pc}
        if (tsDriver->DetectTouch(TS_I2C_ADDRESS))
 800150a:	691b      	ldr	r3, [r3, #16]
 800150c:	2070      	movs	r0, #112	@ 0x70
 800150e:	4798      	blx	r3
 8001510:	2800      	cmp	r0, #0
 8001512:	d0f7      	beq.n	8001504 <_ZN20STM32TouchController11sampleTouchERlS0_+0xc>
            tsDriver->GetXY(TS_I2C_ADDRESS, &_y, &_x);
 8001514:	6833      	ldr	r3, [r6, #0]
 8001516:	2070      	movs	r0, #112	@ 0x70
 8001518:	aa01      	add	r2, sp, #4
 800151a:	f10d 0106 	add.w	r1, sp, #6
 800151e:	695b      	ldr	r3, [r3, #20]
 8001520:	4798      	blx	r3
            x = (int32_t)_x;
 8001522:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001526:	2001      	movs	r0, #1
 8001528:	602b      	str	r3, [r5, #0]
            y = (int32_t)_y;
 800152a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800152e:	6023      	str	r3, [r4, #0]
            return true;
 8001530:	e7e9      	b.n	8001506 <_ZN20STM32TouchController11sampleTouchERlS0_+0xe>
 8001532:	bf00      	nop
 8001534:	2000051c 	.word	0x2000051c

08001538 <TS_IO_Write>:
  * @param  Reg: Reg address
  * @param  Value: Data to be written
  * @retval None
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8001538:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 800153a:	2301      	movs	r3, #1
{
 800153c:	f88d 2017 	strb.w	r2, [sp, #23]
    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8001540:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8001544:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001548:	f10d 0217 	add.w	r2, sp, #23
 800154c:	9200      	str	r2, [sp, #0]
 800154e:	460a      	mov	r2, r1
 8001550:	4601      	mov	r1, r0
 8001552:	4805      	ldr	r0, [pc, #20]	@ (8001568 <TS_IO_Write+0x30>)
 8001554:	f004 f9f8 	bl	8005948 <HAL_I2C_Mem_Write>
    if (status != HAL_OK)
 8001558:	b110      	cbz	r0, 8001560 <TS_IO_Write+0x28>
    HAL_I2C_DeInit(i2c_handler);
 800155a:	4803      	ldr	r0, [pc, #12]	@ (8001568 <TS_IO_Write+0x30>)
 800155c:	f004 f9db 	bl	8005916 <HAL_I2C_DeInit>
    I2Cx_WriteMultiple(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&Value, 1);
}
 8001560:	b007      	add	sp, #28
 8001562:	f85d fb04 	ldr.w	pc, [sp], #4
 8001566:	bf00      	nop
 8001568:	20000410 	.word	0x20000410

0800156c <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Reg address
  * @retval Data to be read
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 800156c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    uint8_t read_value = 0;
 800156e:	2300      	movs	r3, #0
{
 8001570:	460a      	mov	r2, r1
    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8001572:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
    uint8_t read_value = 0;
 8001576:	f88d 3017 	strb.w	r3, [sp, #23]
    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 800157a:	2301      	movs	r3, #1
 800157c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8001580:	f10d 0117 	add.w	r1, sp, #23
 8001584:	9100      	str	r1, [sp, #0]
 8001586:	4601      	mov	r1, r0
 8001588:	4805      	ldr	r0, [pc, #20]	@ (80015a0 <TS_IO_Read+0x34>)
 800158a:	f004 fab7 	bl	8005afc <HAL_I2C_Mem_Read>
    if (status != HAL_OK)
 800158e:	b110      	cbz	r0, 8001596 <TS_IO_Read+0x2a>
    HAL_I2C_DeInit(i2c_handler);
 8001590:	4803      	ldr	r0, [pc, #12]	@ (80015a0 <TS_IO_Read+0x34>)
 8001592:	f004 f9c0 	bl	8005916 <HAL_I2C_DeInit>

    I2Cx_ReadMultiple(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&read_value, 1);

    return read_value;
}
 8001596:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800159a:	b007      	add	sp, #28
 800159c:	f85d fb04 	ldr.w	pc, [sp], #4
 80015a0:	20000410 	.word	0x20000410

080015a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 80015a4:	2803      	cmp	r0, #3
 80015a6:	d823      	bhi.n	80015f0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
 80015a8:	e8df f000 	tbb	[pc, r0]
 80015ac:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 80015b0:	4b10      	ldr	r3, [pc, #64]	@ (80015f4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80015b2:	2110      	movs	r1, #16
 80015b4:	4810      	ldr	r0, [pc, #64]	@ (80015f8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 80015b6:	681a      	ldr	r2, [r3, #0]
 80015b8:	fab2 f282 	clz	r2, r2
 80015bc:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80015be:	f004 b831 	b.w	8005624 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 80015c2:	4b0c      	ldr	r3, [pc, #48]	@ (80015f4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80015c4:	2140      	movs	r1, #64	@ 0x40
 80015c6:	685a      	ldr	r2, [r3, #4]
 80015c8:	fab2 f282 	clz	r2, r2
 80015cc:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 80015ce:	480b      	ldr	r0, [pc, #44]	@ (80015fc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 80015d0:	e7f5      	b.n	80015be <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 80015d2:	4b08      	ldr	r3, [pc, #32]	@ (80015f4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80015d4:	2180      	movs	r1, #128	@ 0x80
 80015d6:	689a      	ldr	r2, [r3, #8]
 80015d8:	fab2 f282 	clz	r2, r2
 80015dc:	0952      	lsrs	r2, r2, #5
 80015de:	e7f6      	b.n	80015ce <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80015e0:	4b04      	ldr	r3, [pc, #16]	@ (80015f4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80015e2:	2140      	movs	r1, #64	@ 0x40
 80015e4:	4806      	ldr	r0, [pc, #24]	@ (8001600 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
 80015e6:	68da      	ldr	r2, [r3, #12]
 80015e8:	fab2 f282 	clz	r2, r2
 80015ec:	0952      	lsrs	r2, r2, #5
 80015ee:	e7e6      	b.n	80015be <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 80015f0:	4770      	bx	lr
 80015f2:	bf00      	nop
 80015f4:	20000520 	.word	0x20000520
 80015f8:	40020400 	.word	0x40020400
 80015fc:	40020800 	.word	0x40020800
 8001600:	40021800 	.word	0x40021800

08001604 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001604:	2803      	cmp	r0, #3
 8001606:	d823      	bhi.n	8001650 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
 8001608:	e8df f000 	tbb	[pc, r0]
 800160c:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001610:	4b10      	ldr	r3, [pc, #64]	@ (8001654 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001612:	2110      	movs	r1, #16
 8001614:	4810      	ldr	r0, [pc, #64]	@ (8001658 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 8001616:	681a      	ldr	r2, [r3, #0]
 8001618:	3a00      	subs	r2, #0
 800161a:	bf18      	it	ne
 800161c:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 800161e:	f004 b801 	b.w	8005624 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8001622:	4b0c      	ldr	r3, [pc, #48]	@ (8001654 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001624:	2140      	movs	r1, #64	@ 0x40
 8001626:	685a      	ldr	r2, [r3, #4]
 8001628:	3a00      	subs	r2, #0
 800162a:	bf18      	it	ne
 800162c:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 800162e:	480b      	ldr	r0, [pc, #44]	@ (800165c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 8001630:	e7f5      	b.n	800161e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001632:	4b08      	ldr	r3, [pc, #32]	@ (8001654 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001634:	2180      	movs	r1, #128	@ 0x80
 8001636:	689a      	ldr	r2, [r3, #8]
 8001638:	3a00      	subs	r2, #0
 800163a:	bf18      	it	ne
 800163c:	2201      	movne	r2, #1
 800163e:	e7f6      	b.n	800162e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001640:	4b04      	ldr	r3, [pc, #16]	@ (8001654 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001642:	2140      	movs	r1, #64	@ 0x40
 8001644:	4806      	ldr	r0, [pc, #24]	@ (8001660 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
 8001646:	68da      	ldr	r2, [r3, #12]
 8001648:	3a00      	subs	r2, #0
 800164a:	bf18      	it	ne
 800164c:	2201      	movne	r2, #1
 800164e:	e7e6      	b.n	800161e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8001650:	4770      	bx	lr
 8001652:	bf00      	nop
 8001654:	20000520 	.word	0x20000520
 8001658:	40020400 	.word	0x40020400
 800165c:	40020800 	.word	0x40020800
 8001660:	40021800 	.word	0x40021800

08001664 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001664:	2803      	cmp	r0, #3
 8001666:	d80f      	bhi.n	8001688 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
 8001668:	e8df f000 	tbb	[pc, r0]
 800166c:	0b090602 	.word	0x0b090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001670:	2110      	movs	r1, #16
 8001672:	4806      	ldr	r0, [pc, #24]	@ (800168c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001674:	f003 bfdb 	b.w	800562e <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001678:	2140      	movs	r1, #64	@ 0x40
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800167a:	4805      	ldr	r0, [pc, #20]	@ (8001690 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
 800167c:	e7fa      	b.n	8001674 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 800167e:	2180      	movs	r1, #128	@ 0x80
 8001680:	e7fb      	b.n	800167a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001682:	2140      	movs	r1, #64	@ 0x40
 8001684:	4803      	ldr	r0, [pc, #12]	@ (8001694 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
 8001686:	e7f5      	b.n	8001674 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 8001688:	4770      	bx	lr
 800168a:	bf00      	nop
 800168c:	40020400 	.word	0x40020400
 8001690:	40020800 	.word	0x40020800
 8001694:	40021800 	.word	0x40021800

08001698 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001698:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800169a:	2803      	cmp	r0, #3
 800169c:	d813      	bhi.n	80016c6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 800169e:	e8df f000 	tbb	[pc, r0]
 80016a2:	0a02      	.short	0x0a02
 80016a4:	0f0d      	.short	0x0f0d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80016a6:	2110      	movs	r1, #16
 80016a8:	4808      	ldr	r0, [pc, #32]	@ (80016cc <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80016aa:	f003 ffb5 	bl	8005618 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80016ae:	1e43      	subs	r3, r0, #1
 80016b0:	4258      	negs	r0, r3
 80016b2:	4158      	adcs	r0, r3
 80016b4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80016b6:	2140      	movs	r1, #64	@ 0x40
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80016b8:	4805      	ldr	r0, [pc, #20]	@ (80016d0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
 80016ba:	e7f6      	b.n	80016aa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80016bc:	2180      	movs	r1, #128	@ 0x80
 80016be:	e7fb      	b.n	80016b8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80016c0:	2140      	movs	r1, #64	@ 0x40
 80016c2:	4804      	ldr	r0, [pc, #16]	@ (80016d4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x3c>)
 80016c4:	e7f1      	b.n	80016aa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
    switch (id)
 80016c6:	2000      	movs	r0, #0
 80016c8:	e7f1      	b.n	80016ae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 80016ca:	bf00      	nop
 80016cc:	40020400 	.word	0x40020400
 80016d0:	40020800 	.word	0x40020800
 80016d4:	40021800 	.word	0x40021800

080016d8 <_ZN8touchgfx4GPIO4initEv>:
{
 80016d8:	b570      	push	{r4, r5, r6, lr}
 80016da:	4d08      	ldr	r5, [pc, #32]	@ (80016fc <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80016dc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80016de:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80016e0:	b2e0      	uxtb	r0, r4
 80016e2:	f7ff ffd9 	bl	8001698 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80016e6:	b118      	cbz	r0, 80016f0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80016e8:	682b      	ldr	r3, [r5, #0]
 80016ea:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80016ec:	bf18      	it	ne
 80016ee:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80016f0:	3401      	adds	r4, #1
 80016f2:	3504      	adds	r5, #4
 80016f4:	2c05      	cmp	r4, #5
 80016f6:	d1f3      	bne.n	80016e0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80016f8:	bd70      	pop	{r4, r5, r6, pc}
 80016fa:	bf00      	nop
 80016fc:	20000520 	.word	0x20000520

08001700 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001700:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001702:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8001706:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 800170a:	4770      	bx	lr

0800170c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800170c:	2000      	movs	r0, #0
 800170e:	4770      	bx	lr

08001710 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001710:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001712:	3900      	subs	r1, #0
 8001714:	4b02      	ldr	r3, [pc, #8]	@ (8001720 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 8001716:	bf18      	it	ne
 8001718:	2101      	movne	r1, #1
 800171a:	7019      	strb	r1, [r3, #0]
    }
 800171c:	4770      	bx	lr
 800171e:	bf00      	nop
 8001720:	200150ab 	.word	0x200150ab

08001724 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001724:	2000      	movs	r0, #0
 8001726:	4770      	bx	lr

08001728 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001728:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800172a:	b10b      	cbz	r3, 8001730 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800172c:	4608      	mov	r0, r1
 800172e:	4718      	bx	r3
        }
    }
 8001730:	4770      	bx	lr

08001732 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001732:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8001736:	4770      	bx	lr

08001738 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001738:	6840      	ldr	r0, [r0, #4]
 800173a:	6803      	ldr	r3, [r0, #0]
 800173c:	699b      	ldr	r3, [r3, #24]
 800173e:	4718      	bx	r3

08001740 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001740:	4770      	bx	lr
	...

08001744 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationBuffer[(480 * 272 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001744:	b538      	push	{r3, r4, r5, lr}
 8001746:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001748:	f000 fca6 	bl	8002098 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);  //enable the animation storage to allow slide animations
 800174c:	4908      	ldr	r1, [pc, #32]	@ (8001770 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
 800174e:	6823      	ldr	r3, [r4, #0]
 8001750:	4620      	mov	r0, r4
    lockDMAToFrontPorch(false);
    instrumentation.init();
 8001752:	4d08      	ldr	r5, [pc, #32]	@ (8001774 <_ZN11TouchGFXHAL10initializeEv+0x30>)
    setAnimationStorage((void*)animationBuffer);  //enable the animation storage to allow slide animations
 8001754:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001758:	4798      	blx	r3
        lockDMAToPorch = enableLock;
 800175a:	2300      	movs	r3, #0
    instrumentation.init();
 800175c:	4628      	mov	r0, r5
 800175e:	f884 304a 	strb.w	r3, [r4, #74]	@ 0x4a
 8001762:	f7ff fe7b 	bl	800145c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8001766:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 8001768:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 800176a:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
}
 800176e:	bd38      	pop	{r3, r4, r5, pc}
 8001770:	c0000000 	.word	0xc0000000
 8001774:	20000530 	.word	0x20000530

08001778 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001778:	f000 bc58 	b.w	800202c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800177c <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800177c:	f000 bc5c 	b.w	8002038 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001780 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8001780:	b570      	push	{r4, r5, r6, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001782:	f000 fca7 	bl	80020d4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8001786:	4910      	ldr	r1, [pc, #64]	@ (80017c8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x48>)
 8001788:	2300      	movs	r3, #0
 800178a:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800178e:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 8001792:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001796:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800179a:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800179e:	f3c3 334e 	ubfx	r3, r3, #13, #15
 80017a2:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80017a4:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80017a8:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80017aa:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 80017ae:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80017b0:	f8c1 5274 	str.w	r5, [r1, #628]	@ 0x274
      } while (ways-- != 0U);
 80017b4:	d2f9      	bcs.n	80017aa <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2a>
    } while(sets-- != 0U);
 80017b6:	3b20      	subs	r3, #32
 80017b8:	f113 0f20 	cmn.w	r3, #32
 80017bc:	d1f2      	bne.n	80017a4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x24>
 80017be:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80017c2:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
 80017c6:	bd70      	pop	{r4, r5, r6, pc}
 80017c8:	e000ed00 	.word	0xe000ed00

080017cc <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80017cc:	f000 bc84 	b.w	80020d8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

080017d0 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80017d0:	f000 bc08 	b.w	8001fe4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080017d4 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80017d4:	f000 bc82 	b.w	80020dc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080017d8 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80017d8:	f000 bc8a 	b.w	80020f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080017dc <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80017dc:	f000 bc0c 	b.w	8001ff8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080017e0 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80017e0:	b510      	push	{r4, lr}
 80017e2:	4604      	mov	r4, r0
        swapFrameBuffers();
 80017e4:	f009 ff24 	bl	800b630 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80017e8:	6823      	ldr	r3, [r4, #0]
 80017ea:	4620      	mov	r0, r4
 80017ec:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 80017f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80017f4:	4718      	bx	r3

080017f6 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80017f6:	f009 b979 	b.w	800aaec <_ZN8touchgfx3HAL16flushFrameBufferEv>

080017fa <_ZN11TouchGFXHALD0Ev>:
 80017fa:	b510      	push	{r4, lr}
 80017fc:	4604      	mov	r4, r0
 80017fe:	217c      	movs	r1, #124	@ 0x7c
 8001800:	f01d f8e7 	bl	801e9d2 <_ZdlPvj>
 8001804:	4620      	mov	r0, r4
 8001806:	bd10      	pop	{r4, pc}

08001808 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8001808:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
 800180c:	4b0d      	ldr	r3, [pc, #52]	@ (8001844 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
 800180e:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001810:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001814:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001816:	428c      	cmp	r4, r1
 8001818:	d009      	beq.n	800182e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800181a:	b93a      	cbnz	r2, 800182c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800181c:	490a      	ldr	r1, [pc, #40]	@ (8001848 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800181e:	4a0b      	ldr	r2, [pc, #44]	@ (800184c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001820:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001822:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 8001824:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 8001826:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001828:	800c      	strh	r4, [r1, #0]
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
 800182a:	701a      	strb	r2, [r3, #0]
        }
    }
 800182c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800182e:	2a00      	cmp	r2, #0
 8001830:	d0fc      	beq.n	800182c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001832:	4a06      	ldr	r2, [pc, #24]	@ (800184c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001834:	4904      	ldr	r1, [pc, #16]	@ (8001848 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001836:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001838:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800183a:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800183c:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800183e:	2200      	movs	r2, #0
 8001840:	e7f3      	b.n	800182a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001842:	bf00      	nop
 8001844:	200150a4 	.word	0x200150a4
 8001848:	200150a2 	.word	0x200150a2
 800184c:	200150a0 	.word	0x200150a0

08001850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001850:	b570      	push	{r4, r5, r6, lr}
 8001852:	460d      	mov	r5, r1
 8001854:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001856:	b935      	cbnz	r5, 8001866 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001858:	4b09      	ldr	r3, [pc, #36]	@ (8001880 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800185a:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800185e:	4a09      	ldr	r2, [pc, #36]	@ (8001884 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001860:	4809      	ldr	r0, [pc, #36]	@ (8001888 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001862:	f01d f8e5 	bl	801ea30 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001866:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800186a:	3a00      	subs	r2, #0
 800186c:	4b07      	ldr	r3, [pc, #28]	@ (800188c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 800186e:	bf18      	it	ne
 8001870:	2201      	movne	r2, #1
 8001872:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001874:	6803      	ldr	r3, [r0, #0]
    }
 8001876:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800187a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800187e:	4718      	bx	r3
 8001880:	0801fc2c 	.word	0x0801fc2c
 8001884:	0801fc64 	.word	0x0801fc64
 8001888:	0801fcb2 	.word	0x0801fcb2
 800188c:	200150aa 	.word	0x200150aa

08001890 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001890:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001892:	4b09      	ldr	r3, [pc, #36]	@ (80018b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001894:	881b      	ldrh	r3, [r3, #0]
 8001896:	428b      	cmp	r3, r1
 8001898:	d803      	bhi.n	80018a2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800189a:	4b08      	ldr	r3, [pc, #32]	@ (80018bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 800189c:	881b      	ldrh	r3, [r3, #0]
 800189e:	4293      	cmp	r3, r2
 80018a0:	d905      	bls.n	80018ae <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80018a2:	4b07      	ldr	r3, [pc, #28]	@ (80018c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80018a4:	219e      	movs	r1, #158	@ 0x9e
 80018a6:	4a07      	ldr	r2, [pc, #28]	@ (80018c4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80018a8:	4807      	ldr	r0, [pc, #28]	@ (80018c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80018aa:	f01d f8c1 	bl	801ea30 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80018ae:	4b07      	ldr	r3, [pc, #28]	@ (80018cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80018b0:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80018b2:	4b07      	ldr	r3, [pc, #28]	@ (80018d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80018b4:	801a      	strh	r2, [r3, #0]
    }
 80018b6:	bd08      	pop	{r3, pc}
 80018b8:	200150a0 	.word	0x200150a0
 80018bc:	200150a2 	.word	0x200150a2
 80018c0:	0801fcf7 	.word	0x0801fcf7
 80018c4:	0801fd5a 	.word	0x0801fd5a
 80018c8:	0801fcb2 	.word	0x0801fcb2
 80018cc:	200150a6 	.word	0x200150a6
 80018d0:	200150a8 	.word	0x200150a8

080018d4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 80018d4:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 80018d6:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 80018da:	b118      	cbz	r0, 80018e4 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 80018dc:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 80018de:	6803      	ldr	r3, [r0, #0]
 80018e0:	681b      	ldr	r3, [r3, #0]
 80018e2:	4718      	bx	r3
    }
 80018e4:	4770      	bx	lr
	...

080018e8 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 80018e8:	4601      	mov	r1, r0
 80018ea:	b508      	push	{r3, lr}
        return instance;
 80018ec:	4b03      	ldr	r3, [pc, #12]	@ (80018fc <IdleTaskHook+0x14>)
 80018ee:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 80018f0:	b101      	cbz	r1, 80018f4 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 80018f2:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 80018f4:	f009 feb6 	bl	800b664 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 80018f8:	2001      	movs	r0, #1
 80018fa:	bd08      	pop	{r3, pc}
 80018fc:	200150ac 	.word	0x200150ac

08001900 <_GLOBAL__sub_I_instrumentation>:
        : cc_consumed(0),
 8001900:	4b03      	ldr	r3, [pc, #12]	@ (8001910 <_GLOBAL__sub_I_instrumentation+0x10>)
 8001902:	2200      	movs	r2, #0
 8001904:	605a      	str	r2, [r3, #4]
          cc_in(0)
 8001906:	609a      	str	r2, [r3, #8]
 8001908:	4a02      	ldr	r2, [pc, #8]	@ (8001914 <_GLOBAL__sub_I_instrumentation+0x14>)
 800190a:	601a      	str	r2, [r3, #0]
}
 800190c:	4770      	bx	lr
 800190e:	bf00      	nop
 8001910:	20000530 	.word	0x20000530
 8001914:	0801fbf4 	.word	0x0801fbf4

08001918 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001918:	2101      	movs	r1, #1
 800191a:	2200      	movs	r2, #0
{
 800191c:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800191e:	4608      	mov	r0, r1
 8001920:	f006 fcba 	bl	8008298 <osSemaphoreNew>
 8001924:	4b0a      	ldr	r3, [pc, #40]	@ (8001950 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001926:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001928:	b928      	cbnz	r0, 8001936 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800192a:	4b0a      	ldr	r3, [pc, #40]	@ (8001954 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 800192c:	2128      	movs	r1, #40	@ 0x28
 800192e:	4a0a      	ldr	r2, [pc, #40]	@ (8001958 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001930:	480a      	ldr	r0, [pc, #40]	@ (800195c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001932:	f01d f87d 	bl	801ea30 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001936:	2200      	movs	r2, #0
 8001938:	2104      	movs	r1, #4
 800193a:	2001      	movs	r0, #1
 800193c:	f006 fd76 	bl	800842c <osMessageQueueNew>
 8001940:	4b07      	ldr	r3, [pc, #28]	@ (8001960 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001942:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001944:	b918      	cbnz	r0, 800194e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001946:	4b07      	ldr	r3, [pc, #28]	@ (8001964 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001948:	212c      	movs	r1, #44	@ 0x2c
 800194a:	4a03      	ldr	r2, [pc, #12]	@ (8001958 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800194c:	e7f0      	b.n	8001930 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800194e:	bd08      	pop	{r3, pc}
 8001950:	20000540 	.word	0x20000540
 8001954:	0801fe78 	.word	0x0801fe78
 8001958:	0801fec1 	.word	0x0801fec1
 800195c:	0801fef0 	.word	0x0801fef0
 8001960:	2000053c 	.word	0x2000053c
 8001964:	0801ff3e 	.word	0x0801ff3e

08001968 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001968:	4b02      	ldr	r3, [pc, #8]	@ (8001974 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800196a:	f04f 31ff 	mov.w	r1, #4294967295
 800196e:	6818      	ldr	r0, [r3, #0]
 8001970:	f006 bcea 	b.w	8008348 <osSemaphoreAcquire>
 8001974:	20000540 	.word	0x20000540

08001978 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001978:	4b01      	ldr	r3, [pc, #4]	@ (8001980 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800197a:	6818      	ldr	r0, [r3, #0]
 800197c:	f006 bd20 	b.w	80083c0 <osSemaphoreRelease>
 8001980:	20000540 	.word	0x20000540

08001984 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001984:	4b02      	ldr	r3, [pc, #8]	@ (8001990 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001986:	2100      	movs	r1, #0
 8001988:	6818      	ldr	r0, [r3, #0]
 800198a:	f006 bcdd 	b.w	8008348 <osSemaphoreAcquire>
 800198e:	bf00      	nop
 8001990:	20000540 	.word	0x20000540

08001994 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8001994:	f7ff bff0 	b.w	8001978 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001998 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001998:	2300      	movs	r3, #0
 800199a:	4803      	ldr	r0, [pc, #12]	@ (80019a8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800199c:	4903      	ldr	r1, [pc, #12]	@ (80019ac <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800199e:	461a      	mov	r2, r3
 80019a0:	6800      	ldr	r0, [r0, #0]
 80019a2:	f006 bd89 	b.w	80084b8 <osMessageQueuePut>
 80019a6:	bf00      	nop
 80019a8:	2000053c 	.word	0x2000053c
 80019ac:	20000004 	.word	0x20000004

080019b0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80019b0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80019b2:	2300      	movs	r3, #0
 80019b4:	4c07      	ldr	r4, [pc, #28]	@ (80019d4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80019b6:	a901      	add	r1, sp, #4
 80019b8:	461a      	mov	r2, r3
 80019ba:	6820      	ldr	r0, [r4, #0]
 80019bc:	f006 fdbe 	bl	800853c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80019c0:	f04f 33ff 	mov.w	r3, #4294967295
 80019c4:	2200      	movs	r2, #0
 80019c6:	a901      	add	r1, sp, #4
 80019c8:	6820      	ldr	r0, [r4, #0]
 80019ca:	f006 fdb7 	bl	800853c <osMessageQueueGet>
}
 80019ce:	b002      	add	sp, #8
 80019d0:	bd10      	pop	{r4, pc}
 80019d2:	bf00      	nop
 80019d4:	2000053c 	.word	0x2000053c

080019d8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80019d8:	6803      	ldr	r3, [r0, #0]
 80019da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80019dc:	4718      	bx	r3

080019de <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80019de:	2001      	movs	r0, #1
 80019e0:	4770      	bx	lr

080019e2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80019e2:	6803      	ldr	r3, [r0, #0]
 80019e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80019e6:	4718      	bx	r3

080019e8 <_ZN8STM32DMA10initializeEv>:
}

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80019e8:	4b0d      	ldr	r3, [pc, #52]	@ (8001a20 <_ZN8STM32DMA10initializeEv+0x38>)
{
 80019ea:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80019ec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019ee:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80019f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80019f4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019f6:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 80019fa:	9201      	str	r2, [sp, #4]
 80019fc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80019fe:	691a      	ldr	r2, [r3, #16]
 8001a00:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001a04:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001a06:	691a      	ldr	r2, [r3, #16]
 8001a08:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8001a0c:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001a0e:	4b05      	ldr	r3, [pc, #20]	@ (8001a24 <_ZN8STM32DMA10initializeEv+0x3c>)
 8001a10:	4a05      	ldr	r2, [pc, #20]	@ (8001a28 <_ZN8STM32DMA10initializeEv+0x40>)
 8001a12:	611a      	str	r2, [r3, #16]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001a14:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001a18:	4b04      	ldr	r3, [pc, #16]	@ (8001a2c <_ZN8STM32DMA10initializeEv+0x44>)
 8001a1a:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001a1c:	b002      	add	sp, #8
 8001a1e:	4770      	bx	lr
 8001a20:	40023800 	.word	0x40023800
 8001a24:	20000464 	.word	0x20000464
 8001a28:	08001cb9 	.word	0x08001cb9
 8001a2c:	e000e100 	.word	0xe000e100

08001a30 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001a30:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8001a34:	4770      	bx	lr
	...

08001a38 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001a38:	4b05      	ldr	r3, [pc, #20]	@ (8001a50 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001a3a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001a3e:	6003      	str	r3, [r0, #0]
 8001a40:	4b04      	ldr	r3, [pc, #16]	@ (8001a54 <_ZN8STM32DMAD1Ev+0x1c>)
 8001a42:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001a46:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001a4a:	f3bf 8f6f 	isb	sy
}
 8001a4e:	4770      	bx	lr
 8001a50:	080200dc 	.word	0x080200dc
 8001a54:	e000e100 	.word	0xe000e100

08001a58 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001a58:	b510      	push	{r4, lr}
 8001a5a:	4604      	mov	r4, r0
}
 8001a5c:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001a60:	f7ff ffea 	bl	8001a38 <_ZN8STM32DMAD1Ev>
 8001a64:	4620      	mov	r0, r4
 8001a66:	f01c ffb4 	bl	801e9d2 <_ZdlPvj>
 8001a6a:	4620      	mov	r0, r4
 8001a6c:	bd10      	pop	{r4, pc}
	...

08001a70 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8001a70:	b508      	push	{r3, lr}
    switch (format)
 8001a72:	280a      	cmp	r0, #10
 8001a74:	d809      	bhi.n	8001a8a <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8001a76:	e8df f000 	tbb	[pc, r0]
 8001a7a:	1006      	.short	0x1006
 8001a7c:	0808080e 	.word	0x0808080e
 8001a80:	10101008 	.word	0x10101008
 8001a84:	10          	.byte	0x10
 8001a85:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001a86:	2002      	movs	r0, #2
}
 8001a88:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001a8a:	4b05      	ldr	r3, [pc, #20]	@ (8001aa0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8001a8c:	2186      	movs	r1, #134	@ 0x86
 8001a8e:	4a05      	ldr	r2, [pc, #20]	@ (8001aa4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001a90:	4805      	ldr	r0, [pc, #20]	@ (8001aa8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001a92:	f01c ffcd 	bl	801ea30 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001a96:	2000      	movs	r0, #0
 8001a98:	e7f6      	b.n	8001a88 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001a9a:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001a9c:	e7f4      	b.n	8001a88 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001a9e:	bf00      	nop
 8001aa0:	0801ff80 	.word	0x0801ff80
 8001aa4:	0801ff9b 	.word	0x0801ff9b
 8001aa8:	0801ffe6 	.word	0x0801ffe6

08001aac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001aac:	b538      	push	{r3, r4, r5, lr}
 8001aae:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001ab0:	7f88      	ldrb	r0, [r1, #30]
 8001ab2:	f7ff ffdd 	bl	8001a70 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001ab6:	4b17      	ldr	r3, [pc, #92]	@ (8001b14 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ab8:	8aa5      	ldrh	r5, [r4, #20]
 8001aba:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001abc:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001abe:	ea42 4205 	orr.w	r2, r2, r5, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ac2:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ac4:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001ac6:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ac8:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001aca:	1b52      	subs	r2, r2, r5
 8001acc:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001ace:	6825      	ldr	r5, [r4, #0]
 8001ad0:	2d08      	cmp	r5, #8
 8001ad2:	d10e      	bne.n	8001af2 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001ad4:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001ad6:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001ad8:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001ada:	4a0f      	ldr	r2, [pc, #60]	@ (8001b18 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001adc:	7f20      	ldrb	r0, [r4, #28]
 8001ade:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001ae2:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001ae4:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001ae6:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001ae8:	4a0c      	ldr	r2, [pc, #48]	@ (8001b1c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001aea:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001aec:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001aee:	601a      	str	r2, [r3, #0]
    }
}
 8001af0:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001af2:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001af4:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001af6:	611a      	str	r2, [r3, #16]
 8001af8:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001afa:	0a0a      	lsrs	r2, r1, #8
 8001afc:	0948      	lsrs	r0, r1, #5
 8001afe:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001b02:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8001b06:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8001b0a:	4302      	orrs	r2, r0
 8001b0c:	430a      	orrs	r2, r1
 8001b0e:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001b10:	4a03      	ldr	r2, [pc, #12]	@ (8001b20 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001b12:	e7ec      	b.n	8001aee <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001b14:	4002b000 	.word	0x4002b000
 8001b18:	00010009 	.word	0x00010009
 8001b1c:	00020201 	.word	0x00020201
 8001b20:	00030201 	.word	0x00030201

08001b24 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8001b24:	b508      	push	{r3, lr}
    switch (format)
 8001b26:	280b      	cmp	r0, #11
 8001b28:	d80b      	bhi.n	8001b42 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8001b2a:	e8df f000 	tbb	[pc, r0]
 8001b2e:	1206      	.short	0x1206
 8001b30:	0a0a0a10 	.word	0x0a0a0a10
 8001b34:	0808080a 	.word	0x0808080a
 8001b38:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001b3a:	2002      	movs	r0, #2
}
 8001b3c:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001b3e:	2005      	movs	r0, #5
        break;
 8001b40:	e7fc      	b.n	8001b3c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8001b42:	4b05      	ldr	r3, [pc, #20]	@ (8001b58 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001b44:	2165      	movs	r1, #101	@ 0x65
 8001b46:	4a05      	ldr	r2, [pc, #20]	@ (8001b5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001b48:	4805      	ldr	r0, [pc, #20]	@ (8001b60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8001b4a:	f01c ff71 	bl	801ea30 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001b4e:	2000      	movs	r0, #0
 8001b50:	e7f4      	b.n	8001b3c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001b52:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001b54:	e7f2      	b.n	8001b3c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001b56:	bf00      	nop
 8001b58:	0801ff80 	.word	0x0801ff80
 8001b5c:	08020032 	.word	0x08020032
 8001b60:	0801ffe6 	.word	0x0801ffe6

08001b64 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8001b64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001b68:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8001b6c:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001b6e:	4640      	mov	r0, r8
 8001b70:	f7ff ffd8 	bl	8001b24 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001b74:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001b76:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001b78:	4638      	mov	r0, r7
 8001b7a:	f7ff ffd3 	bl	8001b24 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8001b7e:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001b80:	4638      	mov	r0, r7
 8001b82:	f7ff ff75 	bl	8001a70 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001b86:	8aa1      	ldrh	r1, [r4, #20]
 8001b88:	8b62      	ldrh	r2, [r4, #26]
 8001b8a:	4b43      	ldr	r3, [pc, #268]	@ (8001c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001b8c:	1a52      	subs	r2, r2, r1
 8001b8e:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001b90:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001b92:	8b22      	ldrh	r2, [r4, #24]
 8001b94:	1a52      	subs	r2, r2, r1
 8001b96:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001b98:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001b9a:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001b9c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ba0:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001ba2:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001ba4:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ba6:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001ba8:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8001baa:	6820      	ldr	r0, [r4, #0]
 8001bac:	2880      	cmp	r0, #128	@ 0x80
 8001bae:	d028      	beq.n	8001c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8001bb0:	7f22      	ldrb	r2, [r4, #28]
 8001bb2:	d80f      	bhi.n	8001bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8001bb4:	2820      	cmp	r0, #32
 8001bb6:	d066      	beq.n	8001c86 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
 8001bb8:	2840      	cmp	r0, #64	@ 0x40
 8001bba:	d064      	beq.n	8001c86 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
 8001bbc:	2804      	cmp	r0, #4
 8001bbe:	d01a      	beq.n	8001bf6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bc0:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001bc4:	4b34      	ldr	r3, [pc, #208]	@ (8001c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001bc6:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bc8:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001bcc:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001bce:	d060      	beq.n	8001c92 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12e>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001bd0:	4a32      	ldr	r2, [pc, #200]	@ (8001c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001bd2:	e044      	b.n	8001c5e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8001bd4:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8001bd8:	d004      	beq.n	8001be4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8001bda:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8001bde:	d1ef      	bne.n	8001bc0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001be0:	482f      	ldr	r0, [pc, #188]	@ (8001ca0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001be2:	e000      	b.n	8001be6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001be4:	482f      	ldr	r0, [pc, #188]	@ (8001ca4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001be6:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8001bea:	61da      	str	r2, [r3, #28]
 8001bec:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001bee:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001bf0:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001bf2:	6159      	str	r1, [r3, #20]
 8001bf4:	e032      	b.n	8001c5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bf6:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001bfa:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bfe:	61da      	str	r2, [r3, #28]
 8001c00:	e7f6      	b.n	8001bf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001c02:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001c04:	1d02      	adds	r2, r0, #4
 8001c06:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001c08:	7f22      	ldrb	r2, [r4, #28]
 8001c0a:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001c0e:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001c12:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001c14:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001c16:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001c18:	7801      	ldrb	r1, [r0, #0]
 8001c1a:	b141      	cbz	r1, 8001c2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8001c1c:	2901      	cmp	r1, #1
 8001c1e:	d021      	beq.n	8001c64 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8001c20:	4b21      	ldr	r3, [pc, #132]	@ (8001ca8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8001c22:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8001c26:	4a21      	ldr	r2, [pc, #132]	@ (8001cac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001c28:	4821      	ldr	r0, [pc, #132]	@ (8001cb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8001c2a:	f01c ff01 	bl	801ea30 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001c2e:	69da      	ldr	r2, [r3, #28]
 8001c30:	8841      	ldrh	r1, [r0, #2]
 8001c32:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001c36:	3901      	subs	r1, #1
 8001c38:	f022 0210 	bic.w	r2, r2, #16
 8001c3c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 8001c40:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001c42:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001c44:	4b14      	ldr	r3, [pc, #80]	@ (8001c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001c46:	69da      	ldr	r2, [r3, #28]
 8001c48:	f042 0220 	orr.w	r2, r2, #32
 8001c4c:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001c4e:	69da      	ldr	r2, [r3, #28]
 8001c50:	0692      	lsls	r2, r2, #26
 8001c52:	d4fc      	bmi.n	8001c4e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001c54:	2210      	movs	r2, #16
 8001c56:	609a      	str	r2, [r3, #8]
            if (blend)
 8001c58:	2900      	cmp	r1, #0
 8001c5a:	d0b9      	beq.n	8001bd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001c5c:	4a15      	ldr	r2, [pc, #84]	@ (8001cb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001c5e:	601a      	str	r2, [r3, #0]
}
 8001c60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8001c64:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001c68:	69da      	ldr	r2, [r3, #28]
 8001c6a:	8840      	ldrh	r0, [r0, #2]
 8001c6c:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
                if (blitOp.alpha == 255)
 8001c70:	bf18      	it	ne
 8001c72:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001c74:	3801      	subs	r0, #1
 8001c76:	f022 0210 	bic.w	r2, r2, #16
 8001c7a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001c7e:	f042 0210 	orr.w	r2, r2, #16
 8001c82:	61da      	str	r2, [r3, #28]
                break;
 8001c84:	e7de      	b.n	8001c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001c86:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001c8a:	4b03      	ldr	r3, [pc, #12]	@ (8001c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001c8c:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001c90:	e7b5      	b.n	8001bfe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001c92:	f240 2201 	movw	r2, #513	@ 0x201
 8001c96:	e7e2      	b.n	8001c5e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8001c98:	4002b000 	.word	0x4002b000
 8001c9c:	00010201 	.word	0x00010201
 8001ca0:	00020009 	.word	0x00020009
 8001ca4:	0002000a 	.word	0x0002000a
 8001ca8:	0802007c 	.word	0x0802007c
 8001cac:	08020096 	.word	0x08020096
 8001cb0:	0801ffe6 	.word	0x0801ffe6
 8001cb4:	00020201 	.word	0x00020201

08001cb8 <DMA2D_XferCpltCallback>:
 8001cb8:	4b02      	ldr	r3, [pc, #8]	@ (8001cc4 <DMA2D_XferCpltCallback+0xc>)
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001cbe:	6803      	ldr	r3, [r0, #0]
 8001cc0:	695b      	ldr	r3, [r3, #20]
 8001cc2:	4718      	bx	r3
 8001cc4:	200150ac 	.word	0x200150ac

08001cc8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001cc8:	b570      	push	{r4, r5, r6, lr}
 8001cca:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001ccc:	4b0a      	ldr	r3, [pc, #40]	@ (8001cf8 <_ZN8STM32DMAC1Ev+0x30>)
 8001cce:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001cd0:	2600      	movs	r6, #0
 8001cd2:	4625      	mov	r5, r4
 8001cd4:	2260      	movs	r2, #96	@ 0x60
 8001cd6:	6060      	str	r0, [r4, #4]
 8001cd8:	7226      	strb	r6, [r4, #8]
 8001cda:	7266      	strb	r6, [r4, #9]
 8001cdc:	f845 3b20 	str.w	r3, [r5], #32
 8001ce0:	4629      	mov	r1, r5
 8001ce2:	f009 fdfb 	bl	800b8dc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001ce6:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8001cea:	60ee      	str	r6, [r5, #12]
 8001cec:	3524      	adds	r5, #36	@ 0x24
 8001cee:	429d      	cmp	r5, r3
 8001cf0:	d1fb      	bne.n	8001cea <_ZN8STM32DMAC1Ev+0x22>
}
 8001cf2:	4620      	mov	r0, r4
 8001cf4:	bd70      	pop	{r4, r5, r6, pc}
 8001cf6:	bf00      	nop
 8001cf8:	080200dc 	.word	0x080200dc

08001cfc <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001cfc:	2001      	movs	r0, #1
 8001cfe:	4770      	bx	lr

08001d00 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001d00:	200c      	movs	r0, #12
 8001d02:	4770      	bx	lr

08001d04 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001d04:	230c      	movs	r3, #12
 8001d06:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001d0a:	3008      	adds	r0, #8
 8001d0c:	4770      	bx	lr

08001d0e <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001d0e:	230c      	movs	r3, #12
 8001d10:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001d14:	3008      	adds	r0, #8
 8001d16:	4770      	bx	lr

08001d18 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001d18:	2001      	movs	r0, #1
 8001d1a:	4770      	bx	lr

08001d1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001d1c:	f44f 60d5 	mov.w	r0, #1704	@ 0x6a8
 8001d20:	4770      	bx	lr

08001d22 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001d22:	f44f 63d5 	mov.w	r3, #1704	@ 0x6a8
 8001d26:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001d2a:	3008      	adds	r0, #8
 8001d2c:	4770      	bx	lr

08001d2e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001d2e:	f44f 63d5 	mov.w	r3, #1704	@ 0x6a8
 8001d32:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001d36:	3008      	adds	r0, #8
 8001d38:	4770      	bx	lr

08001d3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001d3a:	2001      	movs	r0, #1
 8001d3c:	4770      	bx	lr

08001d3e <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001d3e:	2010      	movs	r0, #16
 8001d40:	4770      	bx	lr

08001d42 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001d42:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001d46:	3008      	adds	r0, #8
 8001d48:	4770      	bx	lr

08001d4a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001d4a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001d4e:	3008      	adds	r0, #8
 8001d50:	4770      	bx	lr

08001d52 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainScreenNoTransition();
 8001d52:	4608      	mov	r0, r1
 8001d54:	f000 bbcc 	b.w	80024f0 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>

08001d58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001d58:	4b03      	ldr	r3, [pc, #12]	@ (8001d68 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001d5a:	b510      	push	{r4, lr}
 8001d5c:	4604      	mov	r4, r0
 8001d5e:	6003      	str	r3, [r0, #0]
 8001d60:	f008 fc1d 	bl	800a59e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001d64:	4620      	mov	r0, r4
 8001d66:	bd10      	pop	{r4, pc}
 8001d68:	08020194 	.word	0x08020194

08001d6c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001d6c:	b510      	push	{r4, lr}
 8001d6e:	4604      	mov	r4, r0
 8001d70:	f7ff fff2 	bl	8001d58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d74:	2114      	movs	r1, #20
 8001d76:	4620      	mov	r0, r4
 8001d78:	f01c fe2b 	bl	801e9d2 <_ZdlPvj>
 8001d7c:	4620      	mov	r0, r4
 8001d7e:	bd10      	pop	{r4, pc}

08001d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001d80:	4b03      	ldr	r3, [pc, #12]	@ (8001d90 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001d82:	b510      	push	{r4, lr}
 8001d84:	4604      	mov	r4, r0
 8001d86:	6003      	str	r3, [r0, #0]
 8001d88:	f008 fc09 	bl	800a59e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001d8c:	4620      	mov	r0, r4
 8001d8e:	bd10      	pop	{r4, pc}
 8001d90:	08020160 	.word	0x08020160

08001d94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001d94:	b510      	push	{r4, lr}
 8001d96:	4604      	mov	r4, r0
 8001d98:	f7ff fff2 	bl	8001d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001d9c:	f44f 61d6 	mov.w	r1, #1712	@ 0x6b0
 8001da0:	4620      	mov	r0, r4
 8001da2:	f01c fe16 	bl	801e9d2 <_ZdlPvj>
 8001da6:	4620      	mov	r0, r4
 8001da8:	bd10      	pop	{r4, pc}
	...

08001dac <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001dac:	4b03      	ldr	r3, [pc, #12]	@ (8001dbc <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001dae:	b510      	push	{r4, lr}
 8001db0:	4604      	mov	r4, r0
 8001db2:	6003      	str	r3, [r0, #0]
 8001db4:	f008 fbf3 	bl	800a59e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001db8:	4620      	mov	r0, r4
 8001dba:	bd10      	pop	{r4, pc}
 8001dbc:	0802012c 	.word	0x0802012c

08001dc0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001dc0:	b510      	push	{r4, lr}
 8001dc2:	4604      	mov	r4, r0
 8001dc4:	f7ff fff2 	bl	8001dac <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001dc8:	2118      	movs	r1, #24
 8001dca:	4620      	mov	r0, r4
 8001dcc:	f01c fe01 	bl	801e9d2 <_ZdlPvj>
 8001dd0:	4620      	mov	r0, r4
 8001dd2:	bd10      	pop	{r4, pc}

08001dd4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001dd4:	4b08      	ldr	r3, [pc, #32]	@ (8001df8 <_ZN12FrontendHeapD1Ev+0x24>)
 8001dd6:	b510      	push	{r4, lr}
 8001dd8:	4604      	mov	r4, r0
 8001dda:	6003      	str	r3, [r0, #0]
 8001ddc:	f200 60dc 	addw	r0, r0, #1756	@ 0x6dc
 8001de0:	f7ff ffba 	bl	8001d58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001de4:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001de8:	f7ff ffca 	bl	8001d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10sensorViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001dec:	f104 0014 	add.w	r0, r4, #20
 8001df0:	f7ff ffdc 	bl	8001dac <_ZN8touchgfx9PartitionINS_4meta8TypeListI15configPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001df4:	4620      	mov	r0, r4
 8001df6:	bd10      	pop	{r4, pc}
 8001df8:	080201c8 	.word	0x080201c8

08001dfc <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001dfc:	b508      	push	{r3, lr}
 8001dfe:	4802      	ldr	r0, [pc, #8]	@ (8001e08 <__tcf_0+0xc>)
 8001e00:	f7ff ffe8 	bl	8001dd4 <_ZN12FrontendHeapD1Ev>
 8001e04:	bd08      	pop	{r3, pc}
 8001e06:	bf00      	nop
 8001e08:	200013f4 	.word	0x200013f4

08001e0c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001e0c:	b510      	push	{r4, lr}
 8001e0e:	4604      	mov	r4, r0
 8001e10:	f7ff ffe0 	bl	8001dd4 <_ZN12FrontendHeapD1Ev>
 8001e14:	f44f 6105 	mov.w	r1, #2128	@ 0x850
 8001e18:	4620      	mov	r0, r4
 8001e1a:	f01c fdda 	bl	801e9d2 <_ZdlPvj>
 8001e1e:	4620      	mov	r0, r4
 8001e20:	bd10      	pop	{r4, pc}
	...

08001e24 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
 8001e24:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001e28:	f000 f9c4 	bl	80021b4 <_ZN14BitmapDatabase11getInstanceEv>
 8001e2c:	2400      	movs	r4, #0
 8001e2e:	4605      	mov	r5, r0
 8001e30:	f000 f9c4 	bl	80021bc <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001e34:	4623      	mov	r3, r4
 8001e36:	4601      	mov	r1, r0
 8001e38:	4622      	mov	r2, r4
 8001e3a:	4628      	mov	r0, r5
 8001e3c:	9400      	str	r4, [sp, #0]
 8001e3e:	f00f f963 	bl	8011108 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001e42:	4b25      	ldr	r3, [pc, #148]	@ (8001ed8 <touchgfx_init+0xb4>)
 8001e44:	4a25      	ldr	r2, [pc, #148]	@ (8001edc <touchgfx_init+0xb8>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001e46:	4620      	mov	r0, r4
        static FrontendHeap instance;
 8001e48:	4d25      	ldr	r5, [pc, #148]	@ (8001ee0 <touchgfx_init+0xbc>)
 8001e4a:	601a      	str	r2, [r3, #0]
 8001e4c:	f001 f998 	bl	8003180 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001e50:	4824      	ldr	r0, [pc, #144]	@ (8001ee4 <touchgfx_init+0xc0>)
 8001e52:	f00f f8c1 	bl	8010fd8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001e56:	682b      	ldr	r3, [r5, #0]
 8001e58:	f3bf 8f5b 	dmb	ish
 8001e5c:	07db      	lsls	r3, r3, #31
 8001e5e:	d435      	bmi.n	8001ecc <touchgfx_init+0xa8>
 8001e60:	4628      	mov	r0, r5
 8001e62:	f01c fdb8 	bl	801e9d6 <__cxa_guard_acquire>
 8001e66:	b388      	cbz	r0, 8001ecc <touchgfx_init+0xa8>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001e68:	4c1f      	ldr	r4, [pc, #124]	@ (8001ee8 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
        app(model, *this)
 8001e6a:	4b20      	ldr	r3, [pc, #128]	@ (8001eec <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001e6c:	f204 66f4 	addw	r6, r4, #1780	@ 0x6f4
        : presenterStorage(pres),
 8001e70:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8001e74:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 8001e78:	f204 67dc 	addw	r7, r4, #1756	@ 0x6dc
 8001e7c:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 8001e7e:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001e80:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001e84:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001e86:	6126      	str	r6, [r4, #16]
 8001e88:	f008 fb8a 	bl	800a5a0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001e8c:	4b18      	ldr	r3, [pc, #96]	@ (8001ef0 <touchgfx_init+0xcc>)
 8001e8e:	4640      	mov	r0, r8
 8001e90:	6163      	str	r3, [r4, #20]
 8001e92:	f008 fb85 	bl	800a5a0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001e96:	4b17      	ldr	r3, [pc, #92]	@ (8001ef4 <touchgfx_init+0xd0>)
 8001e98:	4638      	mov	r0, r7
 8001e9a:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001e9c:	f008 fb80 	bl	800a5a0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001ea0:	4b15      	ldr	r3, [pc, #84]	@ (8001ef8 <touchgfx_init+0xd4>)
 8001ea2:	f504 60de 	add.w	r0, r4, #1776	@ 0x6f0
 8001ea6:	f8c4 36dc 	str.w	r3, [r4, #1756]	@ 0x6dc
 8001eaa:	f002 fa49 	bl	8004340 <_ZN5ModelC1Ev>
 8001eae:	4622      	mov	r2, r4
 8001eb0:	f504 61de 	add.w	r1, r4, #1776	@ 0x6f0
 8001eb4:	4630      	mov	r0, r6
 8001eb6:	f002 f9e7 	bl	8004288 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001eba:	4630      	mov	r0, r6
 8001ebc:	f000 fb18 	bl	80024f0 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
        static FrontendHeap instance;
 8001ec0:	480e      	ldr	r0, [pc, #56]	@ (8001efc <touchgfx_init+0xd8>)
 8001ec2:	f01c fdd3 	bl	801ea6c <atexit>
 8001ec6:	4628      	mov	r0, r5
 8001ec8:	f01c fd91 	bl	801e9ee <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001ecc:	480c      	ldr	r0, [pc, #48]	@ (8001f00 <touchgfx_init+0xdc>)
}
 8001ece:	b002      	add	sp, #8
 8001ed0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001ed4:	f7ff bc36 	b.w	8001744 <_ZN11TouchGFXHAL10initializeEv>
 8001ed8:	20015108 	.word	0x20015108
 8001edc:	200005c0 	.word	0x200005c0
 8001ee0:	200013f0 	.word	0x200013f0
 8001ee4:	20000008 	.word	0x20000008
 8001ee8:	200013f4 	.word	0x200013f4
 8001eec:	080201c8 	.word	0x080201c8
 8001ef0:	0802012c 	.word	0x0802012c
 8001ef4:	08020160 	.word	0x08020160
 8001ef8:	08020194 	.word	0x08020194
 8001efc:	08001dfd 	.word	0x08001dfd
 8001f00:	20000544 	.word	0x20000544

08001f04 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001f04:	4770      	bx	lr
	...

08001f08 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001f08:	4801      	ldr	r0, [pc, #4]	@ (8001f10 <touchgfx_taskEntry+0x8>)
 8001f0a:	f008 be58 	b.w	800abbe <_ZN8touchgfx3HAL9taskEntryEv>
 8001f0e:	bf00      	nop
 8001f10:	20000544 	.word	0x20000544

08001f14 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001f14:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001f16:	4e22      	ldr	r6, [pc, #136]	@ (8001fa0 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001f18:	4b22      	ldr	r3, [pc, #136]	@ (8001fa4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
 8001f1a:	4c23      	ldr	r4, [pc, #140]	@ (8001fa8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001f1c:	4630      	mov	r0, r6
static LCD16bpp display;
 8001f1e:	4d23      	ldr	r5, [pc, #140]	@ (8001fac <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001f20:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001f22:	f7ff fed1 	bl	8001cc8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001f26:	4628      	mov	r0, r5
 8001f28:	f013 fbc8 	bl	80156bc <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8001f2c:	4b20      	ldr	r3, [pc, #128]	@ (8001fb0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
          mcuInstrumentation(0),
 8001f2e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001f30:	f44f 7180 	mov.w	r1, #256	@ 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001f34:	481f      	ldr	r0, [pc, #124]	@ (8001fb4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001f36:	861a      	strh	r2, [r3, #48]	@ 0x30
          useAuxiliaryLCD(false),
 8001f38:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
 8001f3c:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 8001f3e:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 8001f42:	675a      	str	r2, [r3, #116]	@ 0x74
          touchController(touchCtrl),
 8001f44:	60dc      	str	r4, [r3, #12]
          auxiliaryLCD(0),
 8001f46:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001f4a:	491b      	ldr	r1, [pc, #108]	@ (8001fb8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          vSyncCompensationEnabled(false),
 8001f4c:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001f50:	491a      	ldr	r1, [pc, #104]	@ (8001fbc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001f52:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 8001f54:	491a      	ldr	r1, [pc, #104]	@ (8001fc0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8001f56:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001f58:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8001f5c:	8001      	strh	r1, [r0, #0]
 8001f5e:	4819      	ldr	r0, [pc, #100]	@ (8001fc4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 8001f60:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001f62:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8001f66:	4818      	ldr	r0, [pc, #96]	@ (8001fc8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          buttonController(0),
 8001f68:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001f6c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001f70:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001f74:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8001f78:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8001f7c:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001f80:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 8001f84:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lcdRef(display),
 8001f88:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001f8c:	8001      	strh	r1, [r0, #0]
 8001f8e:	480f      	ldr	r0, [pc, #60]	@ (8001fcc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001f90:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001f94:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001f96:	490e      	ldr	r1, [pc, #56]	@ (8001fd0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001f98:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001f9a:	4a0e      	ldr	r2, [pc, #56]	@ (8001fd4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001f9c:	601a      	str	r2, [r3, #0]
}
 8001f9e:	bd70      	pop	{r4, r5, r6, pc}
 8001fa0:	2000064c 	.word	0x2000064c
 8001fa4:	0801fc1c 	.word	0x0801fc1c
 8001fa8:	200013ec 	.word	0x200013ec
 8001fac:	200005c4 	.word	0x200005c4
 8001fb0:	20000544 	.word	0x20000544
 8001fb4:	200150a0 	.word	0x200150a0
 8001fb8:	01000001 	.word	0x01000001
 8001fbc:	01010000 	.word	0x01010000
 8001fc0:	200150ac 	.word	0x200150ac
 8001fc4:	200150a6 	.word	0x200150a6
 8001fc8:	200150a2 	.word	0x200150a2
 8001fcc:	200150a8 	.word	0x200150a8
 8001fd0:	200150a4 	.word	0x200150a4
 8001fd4:	0801fda8 	.word	0x0801fda8

08001fd8 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001fd8:	4801      	ldr	r0, [pc, #4]	@ (8001fe0 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001fda:	f7ff bd2d 	b.w	8001a38 <_ZN8STM32DMAD1Ev>
 8001fde:	bf00      	nop
 8001fe0:	2000064c 	.word	0x2000064c

08001fe4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001fe4:	4b03      	ldr	r3, [pc, #12]	@ (8001ff4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001fe6:	2290      	movs	r2, #144	@ 0x90
 8001fe8:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8001fec:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001ff0:	4770      	bx	lr
 8001ff2:	bf00      	nop
 8001ff4:	e000e100 	.word	0xe000e100

08001ff8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001ff8:	4a09      	ldr	r2, [pc, #36]	@ (8002020 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001ffa:	490a      	ldr	r1, [pc, #40]	@ (8002024 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001ffc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001ffe:	480a      	ldr	r0, [pc, #40]	@ (8002028 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002000:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002004:	3b01      	subs	r3, #1
 8002006:	b29b      	uxth	r3, r3
 8002008:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800200a:	6911      	ldr	r1, [r2, #16]
 800200c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002010:	3901      	subs	r1, #1
 8002012:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002014:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002016:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8002018:	f043 0301 	orr.w	r3, r3, #1
 800201c:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800201e:	4770      	bx	lr
 8002020:	40016800 	.word	0x40016800
 8002024:	20001c46 	.word	0x20001c46
 8002028:	20001c44 	.word	0x20001c44

0800202c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800202c:	4b01      	ldr	r3, [pc, #4]	@ (8002034 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800202e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8002032:	4770      	bx	lr
 8002034:	40016800 	.word	0x40016800

08002038 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002038:	4b02      	ldr	r3, [pc, #8]	@ (8002044 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800203a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800203c:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002040:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8002042:	4770      	bx	lr
 8002044:	40016800 	.word	0x40016800

08002048 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8002048:	4a12      	ldr	r2, [pc, #72]	@ (8002094 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x4c>)
 800204a:	6953      	ldr	r3, [r2, #20]
 800204c:	03db      	lsls	r3, r3, #15
{
 800204e:	b570      	push	{r4, r5, r6, lr}
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8002050:	d51e      	bpl.n	8002090 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8002052:	2300      	movs	r3, #0
 8002054:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8002058:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 800205c:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002060:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8002064:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8002068:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800206c:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800206e:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8002072:	4601      	mov	r1, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002074:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
 8002078:	3901      	subs	r1, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800207a:	f8c2 5274 	str.w	r5, [r2, #628]	@ 0x274
      } while (ways-- != 0U);
 800207e:	d2f9      	bcs.n	8002074 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>
    } while(sets-- != 0U);
 8002080:	3b20      	subs	r3, #32
 8002082:	f113 0f20 	cmn.w	r3, #32
 8002086:	d1f2      	bne.n	800206e <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x26>
 8002088:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800208c:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
 8002090:	bd70      	pop	{r4, r5, r6, pc}
 8002092:	bf00      	nop
 8002094:	e000ed00 	.word	0xe000ed00

08002098 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002098:	b570      	push	{r4, r5, r6, lr}
 800209a:	4604      	mov	r4, r0
    HAL::initialize();
 800209c:	f008 fd7b 	bl	800ab96 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80020a0:	6823      	ldr	r3, [r4, #0]
 80020a2:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 80020a4:	f00b ffd4 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
 80020a8:	4601      	mov	r1, r0
 80020aa:	4620      	mov	r0, r4
 80020ac:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80020ae:	6823      	ldr	r3, [r4, #0]
 80020b0:	4a05      	ldr	r2, [pc, #20]	@ (80020c8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80020b2:	4620      	mov	r0, r4
 80020b4:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 80020b8:	2300      	movs	r3, #0
 80020ba:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
 80020be:	46ac      	mov	ip, r5
}
 80020c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80020c4:	4760      	bx	ip
 80020c6:	bf00      	nop
 80020c8:	c007f800 	.word	0xc007f800

080020cc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80020cc:	f008 bd4a 	b.w	800ab64 <_ZN8touchgfx3HAL10beginFrameEv>

080020d0 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 80020d0:	f008 bd54 	b.w	800ab7c <_ZN8touchgfx3HAL8endFrameEv>

080020d4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
    HAL::flushFrameBuffer(rect);
 80020d4:	f008 bd10 	b.w	800aaf8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080020d8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
    return HAL::blockCopy(dest, src, numBytes);
 80020d8:	f008 be7f 	b.w	800adda <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080020dc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020dc:	4b03      	ldr	r3, [pc, #12]	@ (80020ec <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80020de:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80020e2:	609a      	str	r2, [r3, #8]
 80020e4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80020e8:	609a      	str	r2, [r3, #8]
}
 80020ea:	4770      	bx	lr
 80020ec:	e000e100 	.word	0xe000e100

080020f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020f0:	4b08      	ldr	r3, [pc, #32]	@ (8002114 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80020f2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80020f6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80020fa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80020fe:	f3bf 8f6f 	isb	sy
 8002102:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002106:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800210a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800210e:	f3bf 8f6f 	isb	sy
}
 8002112:	4770      	bx	lr
 8002114:	e000e100 	.word	0xe000e100

08002118 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002118:	b510      	push	{r4, lr}
        return instance;
 800211a:	4c14      	ldr	r4, [pc, #80]	@ (800216c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 800211c:	6823      	ldr	r3, [r4, #0]
 800211e:	b323      	cbz	r3, 800216a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002120:	4b13      	ldr	r3, [pc, #76]	@ (8002170 <HAL_LTDC_LineEventCallback+0x58>)
 8002122:	4a14      	ldr	r2, [pc, #80]	@ (8002174 <HAL_LTDC_LineEventCallback+0x5c>)
 8002124:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002126:	8811      	ldrh	r1, [r2, #0]
 8002128:	428b      	cmp	r3, r1
 800212a:	d113      	bne.n	8002154 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800212c:	4b12      	ldr	r3, [pc, #72]	@ (8002178 <HAL_LTDC_LineEventCallback+0x60>)
 800212e:	8819      	ldrh	r1, [r3, #0]
 8002130:	f003 ff8c 	bl	800604c <HAL_LTDC_ProgramLineEvent>
 8002134:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002136:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 800213a:	3301      	adds	r3, #1
 800213c:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002140:	f7ff fc2a 	bl	8001998 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002144:	6820      	ldr	r0, [r4, #0]
 8002146:	f009 fa73 	bl	800b630 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800214a:	2000      	movs	r0, #0

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800214c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002150:	f7ff ba28 	b.w	80015a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002154:	f003 ff7a 	bl	800604c <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002158:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800215a:	6803      	ldr	r3, [r0, #0]
 800215c:	6a1b      	ldr	r3, [r3, #32]
 800215e:	4798      	blx	r3
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002160:	2000      	movs	r0, #0
    }
 8002162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002166:	f7ff ba4d 	b.w	8001604 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800216a:	bd10      	pop	{r4, pc}
 800216c:	200150ac 	.word	0x200150ac
 8002170:	40016800 	.word	0x40016800
 8002174:	20001c46 	.word	0x20001c46
 8002178:	20001c44 	.word	0x20001c44

0800217c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId T___SINGLEUSE_JOGG = 1; // verdana_18_4bpp
    static const touchgfx::FontId LARGE = 2;              // verdana_40_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800217c:	4770      	bx	lr

0800217e <_ZN23ApplicationFontProviderD0Ev>:
 800217e:	b510      	push	{r4, lr}
 8002180:	4604      	mov	r4, r0
 8002182:	2104      	movs	r1, #4
 8002184:	f01c fc25 	bl	801e9d2 <_ZdlPvj>
 8002188:	4620      	mov	r0, r4
 800218a:	bd10      	pop	{r4, pc}

0800218c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 800218c:	2901      	cmp	r1, #1
{
 800218e:	b508      	push	{r3, lr}
    switch (typography)
 8002190:	d006      	beq.n	80021a0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002192:	2902      	cmp	r1, #2
 8002194:	d008      	beq.n	80021a8 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002196:	b959      	cbnz	r1, 80021b0 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::LABELS:
        // NotoSans_Regular_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002198:	f001 f83e 	bl	8003218 <_ZN17TypedTextDatabase8getFontsEv>
 800219c:	6800      	ldr	r0, [r0, #0]
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800219e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80021a0:	f001 f83a 	bl	8003218 <_ZN17TypedTextDatabase8getFontsEv>
 80021a4:	6840      	ldr	r0, [r0, #4]
 80021a6:	e7fa      	b.n	800219e <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80021a8:	f001 f836 	bl	8003218 <_ZN17TypedTextDatabase8getFontsEv>
 80021ac:	6880      	ldr	r0, [r0, #8]
 80021ae:	e7f6      	b.n	800219e <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 80021b0:	2000      	movs	r0, #0
 80021b2:	e7f4      	b.n	800219e <_ZN23ApplicationFontProvider7getFontEt+0x12>

080021b4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80021b4:	4800      	ldr	r0, [pc, #0]	@ (80021b8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80021b6:	4770      	bx	lr
 80021b8:	080201e8 	.word	0x080201e8

080021bc <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80021bc:	200c      	movs	r0, #12
 80021be:	4770      	bx	lr

080021c0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80021c0:	b513      	push	{r0, r1, r4, lr}
 80021c2:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80021c4:	b151      	cbz	r1, 80021dc <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021c6:	6803      	ldr	r3, [r0, #0]
 80021c8:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
 80021ca:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80021cc:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021d0:	689c      	ldr	r4, [r3, #8]
 80021d2:	f10d 0303 	add.w	r3, sp, #3
 80021d6:	47a0      	blx	r4
        return glyph;
    }
 80021d8:	b002      	add	sp, #8
 80021da:	bd10      	pop	{r4, pc}
            return 0;
 80021dc:	4608      	mov	r0, r1
 80021de:	e7fb      	b.n	80021d8 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080021e0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80021e0:	89c0      	ldrh	r0, [r0, #14]
 80021e2:	4770      	bx	lr

080021e4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80021e4:	8a00      	ldrh	r0, [r0, #16]
 80021e6:	4770      	bx	lr

080021e8 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80021e8:	88c0      	ldrh	r0, [r0, #6]
 80021ea:	4770      	bx	lr

080021ec <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80021ec:	8880      	ldrh	r0, [r0, #4]
 80021ee:	4770      	bx	lr

080021f0 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80021f0:	7a80      	ldrb	r0, [r0, #10]
    }
 80021f2:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 80021f6:	4770      	bx	lr

080021f8 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80021f8:	7a80      	ldrb	r0, [r0, #10]
    }
 80021fa:	09c0      	lsrs	r0, r0, #7
 80021fc:	4770      	bx	lr

080021fe <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 80021fe:	2000      	movs	r0, #0
 8002200:	4770      	bx	lr
	...

08002204 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002204:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 800220c <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002208:	4770      	bx	lr
 800220a:	bf00      	nop
 800220c:	00000000 	.word	0x00000000

08002210 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002210:	2000      	movs	r0, #0
 8002212:	4770      	bx	lr

08002214 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002214:	8081      	strh	r1, [r0, #4]
    }
 8002216:	4770      	bx	lr

08002218 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002218:	80c1      	strh	r1, [r0, #6]
    }
 800221a:	4770      	bx	lr

0800221c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800221c:	8101      	strh	r1, [r0, #8]
    }
 800221e:	4770      	bx	lr

08002220 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002220:	8141      	strh	r1, [r0, #10]
    }
 8002222:	4770      	bx	lr

08002224 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002224:	4770      	bx	lr

08002226 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002226:	4770      	bx	lr

08002228 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002228:	4770      	bx	lr

0800222a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800222a:	4770      	bx	lr

0800222c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800222c:	4770      	bx	lr

0800222e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800222e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002230:	88c4      	ldrh	r4, [r0, #6]
 8002232:	6803      	ldr	r3, [r0, #0]
 8002234:	1b12      	subs	r2, r2, r4
 8002236:	8884      	ldrh	r4, [r0, #4]
 8002238:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800223a:	1b09      	subs	r1, r1, r4
 800223c:	b212      	sxth	r2, r2
    }
 800223e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002242:	b209      	sxth	r1, r1
 8002244:	4718      	bx	r3

08002246 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002246:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800224a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800224c:	f04f 33ff 	mov.w	r3, #4294967295
 8002250:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002252:	6813      	ldr	r3, [r2, #0]
 8002254:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002256:	6010      	str	r0, [r2, #0]
    }
 8002258:	4770      	bx	lr

0800225a <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800225a:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800225c:	4770      	bx	lr

0800225e <_ZN20CustomContainer1BaseD1Ev>:
}

CustomContainer1Base::~CustomContainer1Base()
{

}
 800225e:	4770      	bx	lr

08002260 <_ZN20CustomContainer1Base10initializeEv>:

void CustomContainer1Base::initialize()
{

}
 8002260:	4770      	bx	lr

08002262 <_ZN20CustomContainer1BaseD0Ev>:
CustomContainer1Base::~CustomContainer1Base()
 8002262:	b510      	push	{r4, lr}
 8002264:	4604      	mov	r4, r0
}
 8002266:	2184      	movs	r1, #132	@ 0x84
 8002268:	f01c fbb3 	bl	801e9d2 <_ZdlPvj>
 800226c:	4620      	mov	r0, r4
 800226e:	bd10      	pop	{r4, pc}

08002270 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002270:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002274:	b112      	cbz	r2, 800227c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002276:	6803      	ldr	r3, [r0, #0]
 8002278:	695b      	ldr	r3, [r3, #20]
 800227a:	4718      	bx	r3
    }
 800227c:	4770      	bx	lr

0800227e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800227e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002282:	b11a      	cbz	r2, 800228c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002284:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8002288:	b102      	cbz	r2, 800228c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800228a:	6018      	str	r0, [r3, #0]
        }
    }
 800228c:	4770      	bx	lr

0800228e <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
 800228e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002290:	b570      	push	{r4, r5, r6, lr}
 8002292:	4604      	mov	r4, r0
        setX(x);
 8002294:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8002296:	4615      	mov	r5, r2
        setX(x);
 8002298:	4798      	blx	r3
        setY(y);
 800229a:	6823      	ldr	r3, [r4, #0]
 800229c:	4620      	mov	r0, r4
 800229e:	4629      	mov	r1, r5
 80022a0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 80022a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80022a6:	4718      	bx	r3

080022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 80022a8:	2300      	movs	r3, #0
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 80022aa:	b510      	push	{r4, lr}
 80022ac:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80022b0:	e9c0 3303 	strd	r3, r3, [r0, #12]
          cachedAbsX(0),
 80022b4:	e9c0 3307 	strd	r3, r3, [r0, #28]
          nextSibling(0),
 80022b8:	e9c0 3305 	strd	r3, r3, [r0, #20]
          touchable(false),
 80022bc:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80022c0:	4604      	mov	r4, r0
 80022c2:	8483      	strh	r3, [r0, #36]	@ 0x24
        : Widget(), bitmap(bmp), alpha(255)
 80022c4:	4b05      	ldr	r3, [pc, #20]	@ (80022dc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x34>)
 80022c6:	6003      	str	r3, [r0, #0]
 80022c8:	880b      	ldrh	r3, [r1, #0]
 80022ca:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80022cc:	23ff      	movs	r3, #255	@ 0xff
 80022ce:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
    {
        Image::setBitmap(bmp);
 80022d2:	f00a f86c 	bl	800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 80022d6:	4620      	mov	r0, r4
 80022d8:	bd10      	pop	{r4, pc}
 80022da:	bf00      	nop
 80022dc:	08021544 	.word	0x08021544

080022e0 <_ZN20CustomContainer1BaseC1Ev>:
 80022e0:	f44f 7380 	mov.w	r3, #256	@ 0x100
CustomContainer1Base::CustomContainer1Base()
 80022e4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80022e8:	4604      	mov	r4, r0
 80022ea:	2500      	movs	r5, #0
 80022ec:	4606      	mov	r6, r0
 80022ee:	8483      	strh	r3, [r0, #36]	@ 0x24
 80022f0:	4b24      	ldr	r3, [pc, #144]	@ (8002384 <_ZN20CustomContainer1BaseC1Ev+0xa4>)
 80022f2:	f104 0758 	add.w	r7, r4, #88	@ 0x58
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80022f6:	f64f 78ff 	movw	r8, #65535	@ 0xffff
          firstChild(0)
 80022fa:	6285      	str	r5, [r0, #40]	@ 0x28
 80022fc:	a901      	add	r1, sp, #4
 80022fe:	f04f 090a 	mov.w	r9, #10
 8002302:	f8ad 8004 	strh.w	r8, [sp, #4]
 8002306:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800230a:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 800230e:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 8002312:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002316:	f846 3b2c 	str.w	r3, [r6], #44
 800231a:	4630      	mov	r0, r6
 800231c:	f7ff ffc4 	bl	80022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002320:	a901      	add	r1, sp, #4
 8002322:	4638      	mov	r0, r7
 8002324:	f8ad 8004 	strh.w	r8, [sp, #4]
 8002328:	f7ff ffbe 	bl	80022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        rect.width = width;
 800232c:	4b16      	ldr	r3, [pc, #88]	@ (8002388 <_ZN20CustomContainer1BaseC1Ev+0xa8>)
    image2.setXY(0, 54);
 800232e:	2236      	movs	r2, #54	@ 0x36
 8002330:	4629      	mov	r1, r5
 8002332:	60a3      	str	r3, [r4, #8]
 8002334:	4630      	mov	r0, r6
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002336:	f04f 0896 	mov.w	r8, #150	@ 0x96
 800233a:	f7ff ffa8 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 800233e:	a901      	add	r1, sp, #4
 8002340:	4630      	mov	r0, r6
 8002342:	f8ad 9004 	strh.w	r9, [sp, #4]
 8002346:	f00a f832 	bl	800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image2);
 800234a:	4631      	mov	r1, r6
 800234c:	4620      	mov	r0, r4
 800234e:	f884 8054 	strb.w	r8, [r4, #84]	@ 0x54
 8002352:	f008 f937 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, -2);
 8002356:	f06f 0201 	mvn.w	r2, #1
 800235a:	4629      	mov	r1, r5
 800235c:	4638      	mov	r0, r7
 800235e:	f7ff ff96 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 8002362:	a901      	add	r1, sp, #4
 8002364:	4638      	mov	r0, r7
 8002366:	f8ad 9004 	strh.w	r9, [sp, #4]
 800236a:	f00a f820 	bl	800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image1);
 800236e:	4620      	mov	r0, r4
 8002370:	4639      	mov	r1, r7
 8002372:	f884 8080 	strb.w	r8, [r4, #128]	@ 0x80
 8002376:	f008 f925 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800237a:	4620      	mov	r0, r4
 800237c:	b003      	add	sp, #12
 800237e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002382:	bf00      	nop
 8002384:	080202e0 	.word	0x080202e0
 8002388:	006e0082 	.word	0x006e0082

0800238c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800238c:	4770      	bx	lr

0800238e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800238e:	b510      	push	{r4, lr}
 8002390:	4604      	mov	r4, r0
    }
 8002392:	2108      	movs	r1, #8
 8002394:	f01c fb1d 	bl	801e9d2 <_ZdlPvj>
 8002398:	4620      	mov	r0, r4
 800239a:	bd10      	pop	{r4, pc}

0800239c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 800239c:	4770      	bx	lr

0800239e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800239e:	4770      	bx	lr

080023a0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80023a0:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 80023a4:	6808      	ldr	r0, [r1, #0]
 80023a6:	6849      	ldr	r1, [r1, #4]
 80023a8:	c303      	stmia	r3!, {r0, r1}
    }
 80023aa:	4770      	bx	lr

080023ac <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80023ac:	4770      	bx	lr

080023ae <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80023ae:	4770      	bx	lr

080023b0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80023b0:	6041      	str	r1, [r0, #4]
    }
 80023b2:	4770      	bx	lr

080023b4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80023b4:	4770      	bx	lr
	...

080023b8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80023b8:	4b06      	ldr	r3, [pc, #24]	@ (80023d4 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80023ba:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80023be:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80023c2:	2300      	movs	r3, #0
 80023c4:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80023c8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80023cc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoMainScreenNoTransition();
    }
 80023d0:	4770      	bx	lr
 80023d2:	bf00      	nop
 80023d4:	08002951 	.word	0x08002951

080023d8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80023d8:	2301      	movs	r3, #1
 80023da:	7203      	strb	r3, [r0, #8]
    }
 80023dc:	4770      	bx	lr

080023de <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80023de:	4770      	bx	lr

080023e0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80023e0:	4770      	bx	lr

080023e2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80023e2:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80023e4:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
 80023e6:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80023e8:	68c2      	ldr	r2, [r0, #12]
 80023ea:	689b      	ldr	r3, [r3, #8]
 80023ec:	1054      	asrs	r4, r2, #1
 80023ee:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80023f2:	07d2      	lsls	r2, r2, #31
 80023f4:	bf48      	it	mi
 80023f6:	590a      	ldrmi	r2, [r1, r4]
    }
 80023f8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80023fc:	bf48      	it	mi
 80023fe:	58d3      	ldrmi	r3, [r2, r3]
 8002400:	4718      	bx	r3

08002402 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002402:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002404:	6840      	ldr	r0, [r0, #4]
 8002406:	b130      	cbz	r0, 8002416 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002408:	689a      	ldr	r2, [r3, #8]
 800240a:	b91a      	cbnz	r2, 8002414 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 800240c:	68d8      	ldr	r0, [r3, #12]
 800240e:	f000 0001 	and.w	r0, r0, #1
 8002412:	4770      	bx	lr
 8002414:	2001      	movs	r0, #1
    }
 8002416:	4770      	bx	lr

08002418 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002418:	b510      	push	{r4, lr}
 800241a:	4604      	mov	r4, r0
 800241c:	210c      	movs	r1, #12
 800241e:	f01c fad8 	bl	801e9d2 <_ZdlPvj>
 8002422:	4620      	mov	r0, r4
 8002424:	bd10      	pop	{r4, pc}

08002426 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002426:	b510      	push	{r4, lr}
 8002428:	4604      	mov	r4, r0
 800242a:	2110      	movs	r1, #16
 800242c:	f01c fad1 	bl	801e9d2 <_ZdlPvj>
 8002430:	4620      	mov	r0, r4
 8002432:	bd10      	pop	{r4, pc}

08002434 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002434:	b510      	push	{r4, lr}
 8002436:	4604      	mov	r4, r0
 8002438:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800243c:	f01c fac9 	bl	801e9d2 <_ZdlPvj>
 8002440:	4620      	mov	r0, r4
 8002442:	bd10      	pop	{r4, pc}

08002444 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002444:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002446:	f00b fe03 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
 800244a:	6803      	ldr	r3, [r0, #0]
    }
 800244c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002450:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002452:	4718      	bx	r3

08002454 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002454:	b510      	push	{r4, lr}
 8002456:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002458:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 800245c:	b158      	cbz	r0, 8002476 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800245e:	6803      	ldr	r3, [r0, #0]
 8002460:	68db      	ldr	r3, [r3, #12]
 8002462:	4798      	blx	r3
 8002464:	b138      	cbz	r0, 8002476 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002466:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 800246a:	6803      	ldr	r3, [r0, #0]
 800246c:	689b      	ldr	r3, [r3, #8]
 800246e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002470:	2300      	movs	r3, #0
 8002472:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8002476:	bd10      	pop	{r4, pc}

08002478 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002478:	4b04      	ldr	r3, [pc, #16]	@ (800248c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002480:	b10a      	cbz	r2, 8002486 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002482:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8002484:	b900      	cbnz	r0, 8002488 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002486:	6898      	ldr	r0, [r3, #8]
    }
 8002488:	4770      	bx	lr
 800248a:	bf00      	nop
 800248c:	200150ac 	.word	0x200150ac

08002490 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002492:	4604      	mov	r4, r0
 8002494:	4617      	mov	r7, r2
 8002496:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002498:	f00b fea0 	bl	800e1dc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 800249c:	4b10      	ldr	r3, [pc, #64]	@ (80024e0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
 800249e:	2500      	movs	r5, #0
        instance = this;
 80024a0:	601c      	str	r4, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024a2:	4629      	mov	r1, r5
      model(m)
 80024a4:	4b0f      	ldr	r3, [pc, #60]	@ (80024e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80024a6:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80024a8:	4b0f      	ldr	r3, [pc, #60]	@ (80024e8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80024aa:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 80024ae:	4b0f      	ldr	r3, [pc, #60]	@ (80024ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80024b0:	6818      	ldr	r0, [r3, #0]
 80024b2:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024b6:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 80024b8:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
 80024bc:	689b      	ldr	r3, [r3, #8]
      model(m)
 80024be:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024c2:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80024c4:	4628      	mov	r0, r5
 80024c6:	f000 fe5b 	bl	8003180 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80024ca:	f7ff ffd5 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 80024ce:	f014 ff26 	bl	801731e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80024d2:	f7ff ffd1 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 80024d6:	f014 ff9d 	bl	8017414 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80024da:	4620      	mov	r0, r4
 80024dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80024de:	bf00      	nop
 80024e0:	200150f8 	.word	0x200150f8
 80024e4:	080208f4 	.word	0x080208f4
 80024e8:	080208dc 	.word	0x080208dc
 80024ec:	200150ac 	.word	0x200150ac

080024f0 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80024f0:	4b06      	ldr	r3, [pc, #24]	@ (800250c <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x1c>)
 80024f2:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80024f6:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80024fa:	2300      	movs	r3, #0
 80024fc:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002500:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002504:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002508:	4770      	bx	lr
 800250a:	bf00      	nop
 800250c:	08002951 	.word	0x08002951

08002510 <_ZN23FrontendApplicationBase28gotosensorScreenNoTransitionEv>:
 8002510:	4b06      	ldr	r3, [pc, #24]	@ (800252c <_ZN23FrontendApplicationBase28gotosensorScreenNoTransitionEv+0x1c>)
 8002512:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002516:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800251a:	2300      	movs	r3, #0
 800251c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// sensor

void FrontendApplicationBase::gotosensorScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotosensorScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002520:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002524:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002528:	4770      	bx	lr
 800252a:	bf00      	nop
 800252c:	08002809 	.word	0x08002809

08002530 <_ZN23FrontendApplicationBase27gotomotorScreenNoTransitionEv>:
 8002530:	4b06      	ldr	r3, [pc, #24]	@ (800254c <_ZN23FrontendApplicationBase27gotomotorScreenNoTransitionEv+0x1c>)
 8002532:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002536:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800253a:	2300      	movs	r3, #0
 800253c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// motor

void FrontendApplicationBase::gotomotorScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotomotorScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002540:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002544:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002548:	4770      	bx	lr
 800254a:	bf00      	nop
 800254c:	080026c1 	.word	0x080026c1

08002550 <_ZN23FrontendApplicationBase28gotoconfigScreenNoTransitionEv>:
 8002550:	4b06      	ldr	r3, [pc, #24]	@ (800256c <_ZN23FrontendApplicationBase28gotoconfigScreenNoTransitionEv+0x1c>)
 8002552:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002556:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800255a:	2300      	movs	r3, #0
 800255c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// config

void FrontendApplicationBase::gotoconfigScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoconfigScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002560:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002564:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002568:	4770      	bx	lr
 800256a:	bf00      	nop
 800256c:	08002579 	.word	0x08002579

08002570 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002570:	6803      	ldr	r3, [r0, #0]
 8002572:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002574:	4718      	bx	r3
	...

08002578 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoconfigScreenNoTransitionImpl()
{
 8002578:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<configView, configPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800257c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002580:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002582:	68b0      	ldr	r0, [r6, #8]
 8002584:	6803      	ldr	r3, [r0, #0]
 8002586:	6a1b      	ldr	r3, [r3, #32]
 8002588:	4798      	blx	r3
 800258a:	28db      	cmp	r0, #219	@ 0xdb
 800258c:	d805      	bhi.n	800259a <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x22>
 800258e:	4b44      	ldr	r3, [pc, #272]	@ (80026a0 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x128>)
 8002590:	21a3      	movs	r1, #163	@ 0xa3
 8002592:	4a44      	ldr	r2, [pc, #272]	@ (80026a4 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002594:	4844      	ldr	r0, [pc, #272]	@ (80026a8 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x130>)
 8002596:	f01c fa4b 	bl	801ea30 <__assert_func>
 800259a:	6870      	ldr	r0, [r6, #4]
 800259c:	6803      	ldr	r3, [r0, #0]
 800259e:	6a1b      	ldr	r3, [r3, #32]
 80025a0:	4798      	blx	r3
 80025a2:	280f      	cmp	r0, #15
 80025a4:	d803      	bhi.n	80025ae <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x36>
 80025a6:	4b41      	ldr	r3, [pc, #260]	@ (80026ac <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x134>)
 80025a8:	21a4      	movs	r1, #164	@ 0xa4
 80025aa:	4a3e      	ldr	r2, [pc, #248]	@ (80026a4 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x12c>)
 80025ac:	e7f2      	b.n	8002594 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80025ae:	68f0      	ldr	r0, [r6, #12]
 80025b0:	6803      	ldr	r3, [r0, #0]
 80025b2:	6a1b      	ldr	r3, [r3, #32]
 80025b4:	4798      	blx	r3
 80025b6:	280b      	cmp	r0, #11
 80025b8:	d803      	bhi.n	80025c2 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x4a>
 80025ba:	4b3d      	ldr	r3, [pc, #244]	@ (80026b0 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x138>)
 80025bc:	21a5      	movs	r1, #165	@ 0xa5
 80025be:	4a39      	ldr	r2, [pc, #228]	@ (80026a4 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x12c>)
 80025c0:	e7e8      	b.n	8002594 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x1c>
    if (*currentTrans)
 80025c2:	f8df 90f4 	ldr.w	r9, [pc, #244]	@ 80026b8 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x140>
    Application::getInstance()->clearAllTimerWidgets();
 80025c6:	f00b fd43 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80025ca:	3004      	adds	r0, #4
 80025cc:	f00b fd65 	bl	800e09a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 80025d0:	f8d9 0000 	ldr.w	r0, [r9]
 80025d4:	b110      	cbz	r0, 80025dc <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80025d6:	6803      	ldr	r3, [r0, #0]
 80025d8:	68db      	ldr	r3, [r3, #12]
 80025da:	4798      	blx	r3
    if (*currentTrans)
 80025dc:	f8d9 0000 	ldr.w	r0, [r9]
 80025e0:	b110      	cbz	r0, 80025e8 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80025e2:	6803      	ldr	r3, [r0, #0]
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	4798      	blx	r3
    if (*currentScreen)
 80025e8:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80026bc <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x144>
 80025ec:	f8d8 0000 	ldr.w	r0, [r8]
 80025f0:	b110      	cbz	r0, 80025f8 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80025f2:	6803      	ldr	r3, [r0, #0]
 80025f4:	695b      	ldr	r3, [r3, #20]
 80025f6:	4798      	blx	r3
    if (*currentPresenter)
 80025f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80025fc:	b110      	cbz	r0, 8002604 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80025fe:	6803      	ldr	r3, [r0, #0]
 8002600:	685b      	ldr	r3, [r3, #4]
 8002602:	4798      	blx	r3
    if (*currentScreen)
 8002604:	f8d8 0000 	ldr.w	r0, [r8]
 8002608:	b110      	cbz	r0, 8002610 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800260a:	6803      	ldr	r3, [r0, #0]
 800260c:	681b      	ldr	r3, [r3, #0]
 800260e:	4798      	blx	r3
    if (*currentPresenter)
 8002610:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002614:	b110      	cbz	r0, 800261c <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002616:	6803      	ldr	r3, [r0, #0]
 8002618:	689b      	ldr	r3, [r3, #8]
 800261a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800261c:	2100      	movs	r1, #0
 800261e:	68f0      	ldr	r0, [r6, #12]
 8002620:	f7ff ffa6 	bl	8002570 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 8002624:	f04f 0b00 	mov.w	fp, #0
 8002628:	4b22      	ldr	r3, [pc, #136]	@ (80026b4 <_ZN23FrontendApplicationBase32gotoconfigScreenNoTransitionImplEv+0x13c>)
 800262a:	4604      	mov	r4, r0
 800262c:	f8c0 b004 	str.w	fp, [r0, #4]
 8002630:	4659      	mov	r1, fp
 8002632:	f880 b008 	strb.w	fp, [r0, #8]
 8002636:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002638:	68b0      	ldr	r0, [r6, #8]
 800263a:	6803      	ldr	r3, [r0, #0]
 800263c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800263e:	4798      	blx	r3
 8002640:	4605      	mov	r5, r0
 8002642:	f001 febf 	bl	80043c4 <_ZN10configViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002646:	6870      	ldr	r0, [r6, #4]
 8002648:	4659      	mov	r1, fp
 800264a:	6803      	ldr	r3, [r0, #0]
 800264c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800264e:	4798      	blx	r3
 8002650:	4606      	mov	r6, r0
 8002652:	4629      	mov	r1, r5
 8002654:	f001 fe96 	bl	8004384 <_ZN15configPresenterC1ER10configView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002658:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800265a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 800265e:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 8002660:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002664:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002668:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800266c:	682b      	ldr	r3, [r5, #0]

    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800266e:	f8c6 a008 	str.w	sl, [r6, #8]
 8002672:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002674:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002676:	4798      	blx	r3
    newPresenter->activate();
 8002678:	6833      	ldr	r3, [r6, #0]
 800267a:	4630      	mov	r0, r6
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002680:	4621      	mov	r1, r4
 8002682:	4628      	mov	r0, r5
 8002684:	f00d f9b0 	bl	800f9e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002688:	6823      	ldr	r3, [r4, #0]
 800268a:	4620      	mov	r0, r4
 800268c:	691b      	ldr	r3, [r3, #16]
 800268e:	4798      	blx	r3
    newTransition->invalidate();
 8002690:	6823      	ldr	r3, [r4, #0]
 8002692:	4620      	mov	r0, r4
 8002694:	695b      	ldr	r3, [r3, #20]
}
 8002696:	b001      	add	sp, #4
 8002698:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800269c:	4718      	bx	r3
 800269e:	bf00      	nop
 80026a0:	0802037c 	.word	0x0802037c
 80026a4:	0802040a 	.word	0x0802040a
 80026a8:	080204da 	.word	0x080204da
 80026ac:	08020521 	.word	0x08020521
 80026b0:	080205c4 	.word	0x080205c4
 80026b4:	08020948 	.word	0x08020948
 80026b8:	200150ec 	.word	0x200150ec
 80026bc:	200150e8 	.word	0x200150e8

080026c0 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv>:
{
 80026c0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<motorView, motorPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80026c4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80026c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80026ca:	68b0      	ldr	r0, [r6, #8]
 80026cc:	6803      	ldr	r3, [r0, #0]
 80026ce:	6a1b      	ldr	r3, [r3, #32]
 80026d0:	4798      	blx	r3
 80026d2:	f5b0 7f44 	cmp.w	r0, #784	@ 0x310
 80026d6:	d205      	bcs.n	80026e4 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x24>
 80026d8:	4b43      	ldr	r3, [pc, #268]	@ (80027e8 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x128>)
 80026da:	21a3      	movs	r1, #163	@ 0xa3
 80026dc:	4a43      	ldr	r2, [pc, #268]	@ (80027ec <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80026de:	4844      	ldr	r0, [pc, #272]	@ (80027f0 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x130>)
 80026e0:	f01c f9a6 	bl	801ea30 <__assert_func>
 80026e4:	6870      	ldr	r0, [r6, #4]
 80026e6:	6803      	ldr	r3, [r0, #0]
 80026e8:	6a1b      	ldr	r3, [r3, #32]
 80026ea:	4798      	blx	r3
 80026ec:	280f      	cmp	r0, #15
 80026ee:	d803      	bhi.n	80026f8 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x38>
 80026f0:	4b40      	ldr	r3, [pc, #256]	@ (80027f4 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x134>)
 80026f2:	21a4      	movs	r1, #164	@ 0xa4
 80026f4:	4a3d      	ldr	r2, [pc, #244]	@ (80027ec <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x12c>)
 80026f6:	e7f2      	b.n	80026de <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80026f8:	68f0      	ldr	r0, [r6, #12]
 80026fa:	6803      	ldr	r3, [r0, #0]
 80026fc:	6a1b      	ldr	r3, [r3, #32]
 80026fe:	4798      	blx	r3
 8002700:	280b      	cmp	r0, #11
 8002702:	d803      	bhi.n	800270c <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x4c>
 8002704:	4b3c      	ldr	r3, [pc, #240]	@ (80027f8 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x138>)
 8002706:	21a5      	movs	r1, #165	@ 0xa5
 8002708:	4a38      	ldr	r2, [pc, #224]	@ (80027ec <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x12c>)
 800270a:	e7e8      	b.n	80026de <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 800270c:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002800 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x140>
    Application::getInstance()->clearAllTimerWidgets();
 8002710:	f00b fc9e 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
 8002714:	3004      	adds	r0, #4
 8002716:	f00b fcc0 	bl	800e09a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 800271a:	f8d9 0000 	ldr.w	r0, [r9]
 800271e:	b110      	cbz	r0, 8002726 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002720:	6803      	ldr	r3, [r0, #0]
 8002722:	68db      	ldr	r3, [r3, #12]
 8002724:	4798      	blx	r3
    if (*currentTrans)
 8002726:	f8d9 0000 	ldr.w	r0, [r9]
 800272a:	b110      	cbz	r0, 8002732 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 800272c:	6803      	ldr	r3, [r0, #0]
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	4798      	blx	r3
    if (*currentScreen)
 8002732:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002804 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x144>
 8002736:	f8d8 0000 	ldr.w	r0, [r8]
 800273a:	b110      	cbz	r0, 8002742 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800273c:	6803      	ldr	r3, [r0, #0]
 800273e:	695b      	ldr	r3, [r3, #20]
 8002740:	4798      	blx	r3
    if (*currentPresenter)
 8002742:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002746:	b110      	cbz	r0, 800274e <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002748:	6803      	ldr	r3, [r0, #0]
 800274a:	685b      	ldr	r3, [r3, #4]
 800274c:	4798      	blx	r3
    if (*currentScreen)
 800274e:	f8d8 0000 	ldr.w	r0, [r8]
 8002752:	b110      	cbz	r0, 800275a <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002754:	6803      	ldr	r3, [r0, #0]
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	4798      	blx	r3
    if (*currentPresenter)
 800275a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800275e:	b110      	cbz	r0, 8002766 <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002760:	6803      	ldr	r3, [r0, #0]
 8002762:	689b      	ldr	r3, [r3, #8]
 8002764:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002766:	2100      	movs	r1, #0
 8002768:	68f0      	ldr	r0, [r6, #12]
 800276a:	f7ff ff01 	bl	8002570 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800276e:	f04f 0b00 	mov.w	fp, #0
 8002772:	4b22      	ldr	r3, [pc, #136]	@ (80027fc <_ZN23FrontendApplicationBase31gotomotorScreenNoTransitionImplEv+0x13c>)
 8002774:	4604      	mov	r4, r0
 8002776:	f8c0 b004 	str.w	fp, [r0, #4]
 800277a:	4659      	mov	r1, fp
 800277c:	f880 b008 	strb.w	fp, [r0, #8]
 8002780:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002782:	68b0      	ldr	r0, [r6, #8]
 8002784:	6803      	ldr	r3, [r0, #0]
 8002786:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002788:	4798      	blx	r3
 800278a:	4605      	mov	r5, r0
 800278c:	f001 fe7c 	bl	8004488 <_ZN9motorViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002790:	6870      	ldr	r0, [r6, #4]
 8002792:	4659      	mov	r1, fp
 8002794:	6803      	ldr	r3, [r0, #0]
 8002796:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002798:	4798      	blx	r3
 800279a:	4606      	mov	r6, r0
 800279c:	4629      	mov	r1, r5
 800279e:	f001 fe2f 	bl	8004400 <_ZN14motorPresenterC1ER9motorView>
    model->bind(newPresenter);
 80027a2:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80027a4:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 80027a8:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 80027aa:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80027ae:	f8c8 5000 	str.w	r5, [r8]
 80027b2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80027b6:	682b      	ldr	r3, [r5, #0]
 80027b8:	f8c6 a008 	str.w	sl, [r6, #8]
 80027bc:	68db      	ldr	r3, [r3, #12]
 80027be:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80027c0:	4798      	blx	r3
    newPresenter->activate();
 80027c2:	6833      	ldr	r3, [r6, #0]
 80027c4:	4630      	mov	r0, r6
 80027c6:	681b      	ldr	r3, [r3, #0]
 80027c8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80027ca:	4621      	mov	r1, r4
 80027cc:	4628      	mov	r0, r5
 80027ce:	f00d f90b 	bl	800f9e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80027d2:	6823      	ldr	r3, [r4, #0]
 80027d4:	4620      	mov	r0, r4
 80027d6:	691b      	ldr	r3, [r3, #16]
 80027d8:	4798      	blx	r3
    newTransition->invalidate();
 80027da:	6823      	ldr	r3, [r4, #0]
 80027dc:	4620      	mov	r0, r4
 80027de:	695b      	ldr	r3, [r3, #20]
}
 80027e0:	b001      	add	sp, #4
 80027e2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027e6:	4718      	bx	r3
 80027e8:	0802037c 	.word	0x0802037c
 80027ec:	08020667 	.word	0x08020667
 80027f0:	080204da 	.word	0x080204da
 80027f4:	08020521 	.word	0x08020521
 80027f8:	080205c4 	.word	0x080205c4
 80027fc:	08020948 	.word	0x08020948
 8002800:	200150ec 	.word	0x200150ec
 8002804:	200150e8 	.word	0x200150e8

08002808 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv>:
{
 8002808:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<sensorView, sensorPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800280c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002810:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002812:	68b0      	ldr	r0, [r6, #8]
 8002814:	6803      	ldr	r3, [r0, #0]
 8002816:	6a1b      	ldr	r3, [r3, #32]
 8002818:	4798      	blx	r3
 800281a:	f5b0 6fd5 	cmp.w	r0, #1704	@ 0x6a8
 800281e:	d205      	bcs.n	800282c <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x24>
 8002820:	4b43      	ldr	r3, [pc, #268]	@ (8002930 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x128>)
 8002822:	21a3      	movs	r1, #163	@ 0xa3
 8002824:	4a43      	ldr	r2, [pc, #268]	@ (8002934 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002826:	4844      	ldr	r0, [pc, #272]	@ (8002938 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x130>)
 8002828:	f01c f902 	bl	801ea30 <__assert_func>
 800282c:	6870      	ldr	r0, [r6, #4]
 800282e:	6803      	ldr	r3, [r0, #0]
 8002830:	6a1b      	ldr	r3, [r3, #32]
 8002832:	4798      	blx	r3
 8002834:	280f      	cmp	r0, #15
 8002836:	d803      	bhi.n	8002840 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x38>
 8002838:	4b40      	ldr	r3, [pc, #256]	@ (800293c <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x134>)
 800283a:	21a4      	movs	r1, #164	@ 0xa4
 800283c:	4a3d      	ldr	r2, [pc, #244]	@ (8002934 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x12c>)
 800283e:	e7f2      	b.n	8002826 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002840:	68f0      	ldr	r0, [r6, #12]
 8002842:	6803      	ldr	r3, [r0, #0]
 8002844:	6a1b      	ldr	r3, [r3, #32]
 8002846:	4798      	blx	r3
 8002848:	280b      	cmp	r0, #11
 800284a:	d803      	bhi.n	8002854 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x4c>
 800284c:	4b3c      	ldr	r3, [pc, #240]	@ (8002940 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x138>)
 800284e:	21a5      	movs	r1, #165	@ 0xa5
 8002850:	4a38      	ldr	r2, [pc, #224]	@ (8002934 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x12c>)
 8002852:	e7e8      	b.n	8002826 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002854:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002948 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x140>
    Application::getInstance()->clearAllTimerWidgets();
 8002858:	f00b fbfa 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
 800285c:	3004      	adds	r0, #4
 800285e:	f00b fc1c 	bl	800e09a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 8002862:	f8d9 0000 	ldr.w	r0, [r9]
 8002866:	b110      	cbz	r0, 800286e <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002868:	6803      	ldr	r3, [r0, #0]
 800286a:	68db      	ldr	r3, [r3, #12]
 800286c:	4798      	blx	r3
    if (*currentTrans)
 800286e:	f8d9 0000 	ldr.w	r0, [r9]
 8002872:	b110      	cbz	r0, 800287a <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002874:	6803      	ldr	r3, [r0, #0]
 8002876:	681b      	ldr	r3, [r3, #0]
 8002878:	4798      	blx	r3
    if (*currentScreen)
 800287a:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 800294c <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x144>
 800287e:	f8d8 0000 	ldr.w	r0, [r8]
 8002882:	b110      	cbz	r0, 800288a <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002884:	6803      	ldr	r3, [r0, #0]
 8002886:	695b      	ldr	r3, [r3, #20]
 8002888:	4798      	blx	r3
    if (*currentPresenter)
 800288a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800288e:	b110      	cbz	r0, 8002896 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002890:	6803      	ldr	r3, [r0, #0]
 8002892:	685b      	ldr	r3, [r3, #4]
 8002894:	4798      	blx	r3
    if (*currentScreen)
 8002896:	f8d8 0000 	ldr.w	r0, [r8]
 800289a:	b110      	cbz	r0, 80028a2 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 800289c:	6803      	ldr	r3, [r0, #0]
 800289e:	681b      	ldr	r3, [r3, #0]
 80028a0:	4798      	blx	r3
    if (*currentPresenter)
 80028a2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80028a6:	b110      	cbz	r0, 80028ae <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80028a8:	6803      	ldr	r3, [r0, #0]
 80028aa:	689b      	ldr	r3, [r3, #8]
 80028ac:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80028ae:	2100      	movs	r1, #0
 80028b0:	68f0      	ldr	r0, [r6, #12]
 80028b2:	f7ff fe5d 	bl	8002570 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80028b6:	f04f 0b00 	mov.w	fp, #0
 80028ba:	4b22      	ldr	r3, [pc, #136]	@ (8002944 <_ZN23FrontendApplicationBase32gotosensorScreenNoTransitionImplEv+0x13c>)
 80028bc:	4604      	mov	r4, r0
 80028be:	f8c0 b004 	str.w	fp, [r0, #4]
 80028c2:	4659      	mov	r1, fp
 80028c4:	f880 b008 	strb.w	fp, [r0, #8]
 80028c8:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80028ca:	68b0      	ldr	r0, [r6, #8]
 80028cc:	6803      	ldr	r3, [r0, #0]
 80028ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028d0:	4798      	blx	r3
 80028d2:	4605      	mov	r5, r0
 80028d4:	f001 fecc 	bl	8004670 <_ZN10sensorViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80028d8:	6870      	ldr	r0, [r6, #4]
 80028da:	4659      	mov	r1, fp
 80028dc:	6803      	ldr	r3, [r0, #0]
 80028de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028e0:	4798      	blx	r3
 80028e2:	4606      	mov	r6, r0
 80028e4:	4629      	mov	r1, r5
 80028e6:	f001 fe99 	bl	800461c <_ZN15sensorPresenterC1ER10sensorView>
    model->bind(newPresenter);
 80028ea:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80028ec:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 80028f0:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 80028f2:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80028f6:	f8c8 5000 	str.w	r5, [r8]
 80028fa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80028fe:	682b      	ldr	r3, [r5, #0]
 8002900:	f8c6 a008 	str.w	sl, [r6, #8]
 8002904:	68db      	ldr	r3, [r3, #12]
 8002906:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002908:	4798      	blx	r3
    newPresenter->activate();
 800290a:	6833      	ldr	r3, [r6, #0]
 800290c:	4630      	mov	r0, r6
 800290e:	681b      	ldr	r3, [r3, #0]
 8002910:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002912:	4621      	mov	r1, r4
 8002914:	4628      	mov	r0, r5
 8002916:	f00d f867 	bl	800f9e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800291a:	6823      	ldr	r3, [r4, #0]
 800291c:	4620      	mov	r0, r4
 800291e:	691b      	ldr	r3, [r3, #16]
 8002920:	4798      	blx	r3
    newTransition->invalidate();
 8002922:	6823      	ldr	r3, [r4, #0]
 8002924:	4620      	mov	r0, r4
 8002926:	695b      	ldr	r3, [r3, #20]
}
 8002928:	b001      	add	sp, #4
 800292a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800292e:	4718      	bx	r3
 8002930:	0802037c 	.word	0x0802037c
 8002934:	08020735 	.word	0x08020735
 8002938:	080204da 	.word	0x080204da
 800293c:	08020521 	.word	0x08020521
 8002940:	080205c4 	.word	0x080205c4
 8002944:	08020948 	.word	0x08020948
 8002948:	200150ec 	.word	0x200150ec
 800294c:	200150e8 	.word	0x200150e8

08002950 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:
{
 8002950:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002954:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002958:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800295a:	68b0      	ldr	r0, [r6, #8]
 800295c:	6803      	ldr	r3, [r0, #0]
 800295e:	6a1b      	ldr	r3, [r3, #32]
 8002960:	4798      	blx	r3
 8002962:	f5b0 7fdc 	cmp.w	r0, #440	@ 0x1b8
 8002966:	d205      	bcs.n	8002974 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x24>
 8002968:	4b43      	ldr	r3, [pc, #268]	@ (8002a78 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x128>)
 800296a:	21a3      	movs	r1, #163	@ 0xa3
 800296c:	4a43      	ldr	r2, [pc, #268]	@ (8002a7c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800296e:	4844      	ldr	r0, [pc, #272]	@ (8002a80 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
 8002970:	f01c f85e 	bl	801ea30 <__assert_func>
 8002974:	6870      	ldr	r0, [r6, #4]
 8002976:	6803      	ldr	r3, [r0, #0]
 8002978:	6a1b      	ldr	r3, [r3, #32]
 800297a:	4798      	blx	r3
 800297c:	280f      	cmp	r0, #15
 800297e:	d803      	bhi.n	8002988 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x38>
 8002980:	4b40      	ldr	r3, [pc, #256]	@ (8002a84 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x134>)
 8002982:	21a4      	movs	r1, #164	@ 0xa4
 8002984:	4a3d      	ldr	r2, [pc, #244]	@ (8002a7c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
 8002986:	e7f2      	b.n	800296e <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002988:	68f0      	ldr	r0, [r6, #12]
 800298a:	6803      	ldr	r3, [r0, #0]
 800298c:	6a1b      	ldr	r3, [r3, #32]
 800298e:	4798      	blx	r3
 8002990:	280b      	cmp	r0, #11
 8002992:	d803      	bhi.n	800299c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x4c>
 8002994:	4b3c      	ldr	r3, [pc, #240]	@ (8002a88 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>)
 8002996:	21a5      	movs	r1, #165	@ 0xa5
 8002998:	4a38      	ldr	r2, [pc, #224]	@ (8002a7c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
 800299a:	e7e8      	b.n	800296e <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 800299c:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002a90 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x140>
    Application::getInstance()->clearAllTimerWidgets();
 80029a0:	f00b fb56 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
 80029a4:	3004      	adds	r0, #4
 80029a6:	f00b fb78 	bl	800e09a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 80029aa:	f8d9 0000 	ldr.w	r0, [r9]
 80029ae:	b110      	cbz	r0, 80029b6 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80029b0:	6803      	ldr	r3, [r0, #0]
 80029b2:	68db      	ldr	r3, [r3, #12]
 80029b4:	4798      	blx	r3
    if (*currentTrans)
 80029b6:	f8d9 0000 	ldr.w	r0, [r9]
 80029ba:	b110      	cbz	r0, 80029c2 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80029bc:	6803      	ldr	r3, [r0, #0]
 80029be:	681b      	ldr	r3, [r3, #0]
 80029c0:	4798      	blx	r3
    if (*currentScreen)
 80029c2:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002a94 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x144>
 80029c6:	f8d8 0000 	ldr.w	r0, [r8]
 80029ca:	b110      	cbz	r0, 80029d2 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80029cc:	6803      	ldr	r3, [r0, #0]
 80029ce:	695b      	ldr	r3, [r3, #20]
 80029d0:	4798      	blx	r3
    if (*currentPresenter)
 80029d2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80029d6:	b110      	cbz	r0, 80029de <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80029d8:	6803      	ldr	r3, [r0, #0]
 80029da:	685b      	ldr	r3, [r3, #4]
 80029dc:	4798      	blx	r3
    if (*currentScreen)
 80029de:	f8d8 0000 	ldr.w	r0, [r8]
 80029e2:	b110      	cbz	r0, 80029ea <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80029e4:	6803      	ldr	r3, [r0, #0]
 80029e6:	681b      	ldr	r3, [r3, #0]
 80029e8:	4798      	blx	r3
    if (*currentPresenter)
 80029ea:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80029ee:	b110      	cbz	r0, 80029f6 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80029f0:	6803      	ldr	r3, [r0, #0]
 80029f2:	689b      	ldr	r3, [r3, #8]
 80029f4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80029f6:	2100      	movs	r1, #0
 80029f8:	68f0      	ldr	r0, [r6, #12]
 80029fa:	f7ff fdb9 	bl	8002570 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80029fe:	f04f 0b00 	mov.w	fp, #0
 8002a02:	4b22      	ldr	r3, [pc, #136]	@ (8002a8c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x13c>)
 8002a04:	4604      	mov	r4, r0
 8002a06:	f8c0 b004 	str.w	fp, [r0, #4]
 8002a0a:	4659      	mov	r1, fp
 8002a0c:	f880 b008 	strb.w	fp, [r0, #8]
 8002a10:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002a12:	68b0      	ldr	r0, [r6, #8]
 8002a14:	6803      	ldr	r3, [r0, #0]
 8002a16:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a18:	4798      	blx	r3
 8002a1a:	4605      	mov	r5, r0
 8002a1c:	f001 fc80 	bl	8004320 <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002a20:	6870      	ldr	r0, [r6, #4]
 8002a22:	4659      	mov	r1, fp
 8002a24:	6803      	ldr	r3, [r0, #0]
 8002a26:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a28:	4798      	blx	r3
 8002a2a:	4606      	mov	r6, r0
 8002a2c:	4629      	mov	r1, r5
 8002a2e:	f001 fc47 	bl	80042c0 <_ZN13MainPresenterC1ER8MainView>
    model->bind(newPresenter);
 8002a32:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002a34:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 8002a38:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 8002a3a:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002a3e:	f8c8 5000 	str.w	r5, [r8]
 8002a42:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002a46:	682b      	ldr	r3, [r5, #0]
 8002a48:	f8c6 a008 	str.w	sl, [r6, #8]
 8002a4c:	68db      	ldr	r3, [r3, #12]
 8002a4e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002a50:	4798      	blx	r3
    newPresenter->activate();
 8002a52:	6833      	ldr	r3, [r6, #0]
 8002a54:	4630      	mov	r0, r6
 8002a56:	681b      	ldr	r3, [r3, #0]
 8002a58:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002a5a:	4621      	mov	r1, r4
 8002a5c:	4628      	mov	r0, r5
 8002a5e:	f00c ffc3 	bl	800f9e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002a62:	6823      	ldr	r3, [r4, #0]
 8002a64:	4620      	mov	r0, r4
 8002a66:	691b      	ldr	r3, [r3, #16]
 8002a68:	4798      	blx	r3
    newTransition->invalidate();
 8002a6a:	6823      	ldr	r3, [r4, #0]
 8002a6c:	4620      	mov	r0, r4
 8002a6e:	695b      	ldr	r3, [r3, #20]
}
 8002a70:	b001      	add	sp, #4
 8002a72:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a76:	4718      	bx	r3
 8002a78:	0802037c 	.word	0x0802037c
 8002a7c:	08020805 	.word	0x08020805
 8002a80:	080204da 	.word	0x080204da
 8002a84:	08020521 	.word	0x08020521
 8002a88:	080205c4 	.word	0x080205c4
 8002a8c:	08020948 	.word	0x08020948
 8002a90:	200150ec 	.word	0x200150ec
 8002a94:	200150e8 	.word	0x200150e8

08002a98 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002a98:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002a9a:	4770      	bx	lr

08002a9c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002a9c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002a9e:	4770      	bx	lr

08002aa0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002aa0:	4770      	bx	lr

08002aa2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002aa2:	888b      	ldrh	r3, [r1, #4]
 8002aa4:	69c0      	ldr	r0, [r0, #28]
 8002aa6:	0adb      	lsrs	r3, r3, #11
 8002aa8:	680a      	ldr	r2, [r1, #0]
 8002aaa:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002aae:	4410      	add	r0, r2
 8002ab0:	4770      	bx	lr

08002ab2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002ab2:	b510      	push	{r4, lr}
 8002ab4:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8002ab6:	b1ba      	cbz	r2, 8002ae8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002ab8:	7b10      	ldrb	r0, [r2, #12]
 8002aba:	b168      	cbz	r0, 8002ad8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002abc:	7b53      	ldrb	r3, [r2, #13]
 8002abe:	7ad2      	ldrb	r2, [r2, #11]
 8002ac0:	021b      	lsls	r3, r3, #8
 8002ac2:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002ac6:	431a      	orrs	r2, r3
 8002ac8:	6a23      	ldr	r3, [r4, #32]
 8002aca:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002ace:	881a      	ldrh	r2, [r3, #0]
 8002ad0:	428a      	cmp	r2, r1
 8002ad2:	d102      	bne.n	8002ada <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002ad4:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8002ad8:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002ada:	d805      	bhi.n	8002ae8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002adc:	3801      	subs	r0, #1
 8002ade:	3304      	adds	r3, #4
 8002ae0:	b280      	uxth	r0, r0
 8002ae2:	2800      	cmp	r0, #0
 8002ae4:	d1f3      	bne.n	8002ace <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002ae6:	e7f7      	b.n	8002ad8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002ae8:	2000      	movs	r0, #0
 8002aea:	e7f5      	b.n	8002ad8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002aec <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002aec:	b510      	push	{r4, lr}
 8002aee:	4604      	mov	r4, r0
 8002af0:	212c      	movs	r1, #44	@ 0x2c
 8002af2:	f01b ff6e 	bl	801e9d2 <_ZdlPvj>
 8002af6:	4620      	mov	r0, r4
 8002af8:	bd10      	pop	{r4, pc}
	...

08002afc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002afc:	b530      	push	{r4, r5, lr}
 8002afe:	b08b      	sub	sp, #44	@ 0x2c
 8002b00:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002b02:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8002b06:	9508      	str	r5, [sp, #32]
 8002b08:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8002b0c:	9507      	str	r5, [sp, #28]
 8002b0e:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8002b12:	9506      	str	r5, [sp, #24]
 8002b14:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8002b18:	9505      	str	r5, [sp, #20]
 8002b1a:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8002b1e:	9504      	str	r5, [sp, #16]
 8002b20:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8002b24:	9503      	str	r5, [sp, #12]
 8002b26:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8002b2a:	9502      	str	r5, [sp, #8]
 8002b2c:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8002b30:	9501      	str	r5, [sp, #4]
 8002b32:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8002b36:	9500      	str	r5, [sp, #0]
 8002b38:	f00c fbb0 	bl	800f29c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8002b3c:	4b06      	ldr	r3, [pc, #24]	@ (8002b58 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
}
 8002b3e:	4620      	mov	r0, r4
      arabicTable(formsTable)
 8002b40:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002b42:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002b44:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002b46:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002b48:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8002b4a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002b4c:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8002b4e:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8002b50:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8002b52:	b00b      	add	sp, #44	@ 0x2c
 8002b54:	bd30      	pop	{r4, r5, pc}
 8002b56:	bf00      	nop
 8002b58:	0802096c 	.word	0x0802096c

08002b5c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002b5c:	4770      	bx	lr

08002b5e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002b5e:	4770      	bx	lr

08002b60 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002b60:	4770      	bx	lr

08002b62 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002b62:	4770      	bx	lr

08002b64 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002b64:	4770      	bx	lr

08002b66 <_ZN12MainViewBaseD1Ev>:
}

MainViewBase::~MainViewBase()
{

}
 8002b66:	4770      	bx	lr

08002b68 <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{

}
 8002b68:	4770      	bx	lr

08002b6a <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002b6a:	4770      	bx	lr

08002b6c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002b6c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b6e:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 8002b70:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002b72:	68c2      	ldr	r2, [r0, #12]
 8002b74:	689b      	ldr	r3, [r3, #8]
 8002b76:	1055      	asrs	r5, r2, #1
 8002b78:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002b7c:	07d2      	lsls	r2, r2, #31
 8002b7e:	bf48      	it	mi
 8002b80:	5962      	ldrmi	r2, [r4, r5]
    }
 8002b82:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b84:	bf48      	it	mi
 8002b86:	58d3      	ldrmi	r3, [r2, r3]
 8002b88:	4718      	bx	r3

08002b8a <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8002b8a:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8002b8c:	6840      	ldr	r0, [r0, #4]
 8002b8e:	b130      	cbz	r0, 8002b9e <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002b90:	689a      	ldr	r2, [r3, #8]
 8002b92:	b91a      	cbnz	r2, 8002b9c <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8002b94:	68d8      	ldr	r0, [r3, #12]
 8002b96:	f000 0001 	and.w	r0, r0, #1
 8002b9a:	4770      	bx	lr
 8002b9c:	2001      	movs	r0, #1
    }
 8002b9e:	4770      	bx	lr

08002ba0 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ba0:	b510      	push	{r4, lr}
 8002ba2:	4604      	mov	r4, r0
 8002ba4:	2110      	movs	r1, #16
 8002ba6:	f01b ff14 	bl	801e9d2 <_ZdlPvj>
 8002baa:	4620      	mov	r0, r4
 8002bac:	bd10      	pop	{r4, pc}

08002bae <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 8002bae:	b510      	push	{r4, lr}
 8002bb0:	4604      	mov	r4, r0
}
 8002bb2:	f44f 71da 	mov.w	r1, #436	@ 0x1b4
 8002bb6:	f01b ff0c 	bl	801e9d2 <_ZdlPvj>
 8002bba:	4620      	mov	r0, r4
 8002bbc:	bd10      	pop	{r4, pc}

08002bbe <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002bbe:	b538      	push	{r3, r4, r5, lr}
    if (&src == &changescreen_motor_btn)
 8002bc0:	f500 7394 	add.w	r3, r0, #296	@ 0x128
{
 8002bc4:	4604      	mov	r4, r0
 8002bc6:	460d      	mov	r5, r1
    if (&src == &changescreen_motor_btn)
 8002bc8:	4299      	cmp	r1, r3
 8002bca:	d103      	bne.n	8002bd4 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MainViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002bcc:	f00b fa40 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //changescreen_motor
        //When changescreen_motor_btn clicked change screen to motor
        //Go to motor with no screen transition
        application().gotomotorScreenNoTransition();
 8002bd0:	f7ff fcae 	bl	8002530 <_ZN23FrontendApplicationBase27gotomotorScreenNoTransitionEv>
    }
    if (&src == &changescreen_sensor_btn)
 8002bd4:	f104 03e0 	add.w	r3, r4, #224	@ 0xe0
 8002bd8:	429d      	cmp	r5, r3
 8002bda:	d103      	bne.n	8002be4 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8002bdc:	f00b fa38 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //changescreen_sensor
        //When changescreen_sensor_btn clicked change screen to sensor
        //Go to sensor with no screen transition
        application().gotosensorScreenNoTransition();
 8002be0:	f7ff fc96 	bl	8002510 <_ZN23FrontendApplicationBase28gotosensorScreenNoTransitionEv>
    }
    if (&src == &config_btn)
 8002be4:	f504 74b8 	add.w	r4, r4, #368	@ 0x170
 8002be8:	42a5      	cmp	r5, r4
 8002bea:	d105      	bne.n	8002bf8 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8002bec:	f00b fa30 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
        //changescreen_config
        //When config_btn clicked change screen to config
        //Go to config with no screen transition
        application().gotoconfigScreenNoTransition();
    }
}
 8002bf0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoconfigScreenNoTransition();
 8002bf4:	f7ff bcac 	b.w	8002550 <_ZN23FrontendApplicationBase28gotoconfigScreenNoTransitionEv>
}
 8002bf8:	bd38      	pop	{r3, r4, r5, pc}
	...

08002bfc <_ZN8touchgfx6WidgetC1Ev>:
 8002bfc:	2200      	movs	r2, #0
 8002bfe:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002c02:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002c06:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002c0a:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002c0e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002c12:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8002c14:	4a01      	ldr	r2, [pc, #4]	@ (8002c1c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002c16:	6002      	str	r2, [r0, #0]
 8002c18:	4770      	bx	lr
 8002c1a:	bf00      	nop
 8002c1c:	08020a98 	.word	0x08020a98

08002c20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002c20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        return typedTextId < numberOfTypedTexts;
 8002c22:	4b19      	ldr	r3, [pc, #100]	@ (8002c88 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x68>)
 8002c24:	4606      	mov	r6, r0
 8002c26:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
    {
        if (typedText.hasValidId())
 8002c28:	881b      	ldrh	r3, [r3, #0]
 8002c2a:	428b      	cmp	r3, r1
 8002c2c:	d92a      	bls.n	8002c84 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c2e:	4b17      	ldr	r3, [pc, #92]	@ (8002c8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
 8002c30:	681b      	ldr	r3, [r3, #0]
 8002c32:	b92b      	cbnz	r3, 8002c40 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002c34:	4b16      	ldr	r3, [pc, #88]	@ (8002c90 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002c36:	216c      	movs	r1, #108	@ 0x6c
 8002c38:	4a16      	ldr	r2, [pc, #88]	@ (8002c94 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002c3a:	4817      	ldr	r0, [pc, #92]	@ (8002c98 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002c3c:	f01b fef8 	bl	801ea30 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002c40:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002c44:	4b15      	ldr	r3, [pc, #84]	@ (8002c9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002c46:	681b      	ldr	r3, [r3, #0]
 8002c48:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002c4c:	4b14      	ldr	r3, [pc, #80]	@ (8002ca0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002c4e:	6818      	ldr	r0, [r3, #0]
 8002c50:	f000 fad2 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002c54:	682b      	ldr	r3, [r5, #0]
 8002c56:	4607      	mov	r7, r0
 8002c58:	4628      	mov	r0, r5
 8002c5a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002c5c:	4798      	blx	r3
 8002c5e:	682b      	ldr	r3, [r5, #0]
 8002c60:	4604      	mov	r4, r0
 8002c62:	4639      	mov	r1, r7
 8002c64:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002c66:	4628      	mov	r0, r5
 8002c68:	4798      	blx	r3
 8002c6a:	fb14 f400 	smulbb	r4, r4, r0
 8002c6e:	682b      	ldr	r3, [r5, #0]
 8002c70:	4639      	mov	r1, r7
 8002c72:	b2a4      	uxth	r4, r4
 8002c74:	4628      	mov	r0, r5
 8002c76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c78:	4798      	blx	r3
 8002c7a:	1823      	adds	r3, r4, r0
 8002c7c:	b21b      	sxth	r3, r3
 8002c7e:	f8a6 3046 	strh.w	r3, [r6, #70]	@ 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002c82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002c84:	2300      	movs	r3, #0
 8002c86:	e7fa      	b.n	8002c7e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002c88:	20015100 	.word	0x20015100
 8002c8c:	200150fc 	.word	0x200150fc
 8002c90:	080209cc 	.word	0x080209cc
 8002c94:	08020a0e 	.word	0x08020a0e
 8002c98:	08020a49 	.word	0x08020a49
 8002c9c:	20015104 	.word	0x20015104
 8002ca0:	20015108 	.word	0x20015108

08002ca4 <_ZN12MainViewBaseC1Ev>:
MainViewBase::MainViewBase() :
 8002ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ca8:	4604      	mov	r4, r0
 8002caa:	b08b      	sub	sp, #44	@ 0x2c
        : presenter(0)
 8002cac:	2500      	movs	r5, #0
 8002cae:	f00c fcef 	bl	800f690 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 8002cb2:	4626      	mov	r6, r4
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002cb4:	f04f 0826 	mov.w	r8, #38	@ 0x26
 8002cb8:	4b92      	ldr	r3, [pc, #584]	@ (8002f04 <_ZN12MainViewBaseC1Ev+0x260>)
 8002cba:	4629      	mov	r1, r5
 8002cbc:	4642      	mov	r2, r8
 8002cbe:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002cc0:	f846 3b40 	str.w	r3, [r6], #64
 8002cc4:	4630      	mov	r0, r6
 8002cc6:	f01c f94f 	bl	801ef68 <memset>
 8002cca:	4630      	mov	r0, r6
 8002ccc:	f7ff ff96 	bl	8002bfc <_ZN8touchgfx6WidgetC1Ev>
 8002cd0:	4b8d      	ldr	r3, [pc, #564]	@ (8002f08 <_ZN12MainViewBaseC1Ev+0x264>)
 8002cd2:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 8002cd6:	27ff      	movs	r7, #255	@ 0xff
 8002cd8:	6423      	str	r3, [r4, #64]	@ 0x40
 8002cda:	f64f 73ff 	movw	r3, #65535	@ 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8002cde:	4642      	mov	r2, r8
 8002ce0:	4629      	mov	r1, r5
 8002ce2:	f884 7066 	strb.w	r7, [r4, #102]	@ 0x66
 8002ce6:	4650      	mov	r0, sl
        : color(col)
 8002ce8:	66a5      	str	r5, [r4, #104]	@ 0x68
 8002cea:	f104 0998 	add.w	r9, r4, #152	@ 0x98
 8002cee:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002cf2:	f01c f939 	bl	801ef68 <memset>
 8002cf6:	4650      	mov	r0, sl
 8002cf8:	f104 0be0 	add.w	fp, r4, #224	@ 0xe0
 8002cfc:	f7ff ff7e 	bl	8002bfc <_ZN8touchgfx6WidgetC1Ev>
 8002d00:	4a82      	ldr	r2, [pc, #520]	@ (8002f0c <_ZN12MainViewBaseC1Ev+0x268>)
        Image::setBitmap(bmp);
 8002d02:	a908      	add	r1, sp, #32
 8002d04:	4650      	mov	r0, sl
        : Widget(), bitmap(bmp), alpha(255)
 8002d06:	66e2      	str	r2, [r4, #108]	@ 0x6c
 8002d08:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8002d0c:	f884 7094 	strb.w	r7, [r4, #148]	@ 0x94
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d10:	f04f 37ff 	mov.w	r7, #4294967295
 8002d14:	f8a4 2092 	strh.w	r2, [r4, #146]	@ 0x92
        Image::setBitmap(bmp);
 8002d18:	f009 fb49 	bl	800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d1c:	4629      	mov	r1, r5
 8002d1e:	4642      	mov	r2, r8
 8002d20:	4648      	mov	r0, r9
 8002d22:	f01c f921 	bl	801ef68 <memset>
 8002d26:	4648      	mov	r0, r9
 8002d28:	f7ff ff68 	bl	8002bfc <_ZN8touchgfx6WidgetC1Ev>
 8002d2c:	4a78      	ldr	r2, [pc, #480]	@ (8002f10 <_ZN12MainViewBaseC1Ev+0x26c>)
        : typedTextId(id)
 8002d2e:	4b79      	ldr	r3, [pc, #484]	@ (8002f14 <_ZN12MainViewBaseC1Ev+0x270>)
 8002d30:	4658      	mov	r0, fp
 8002d32:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
 8002d36:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
 8002d3a:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8002d3e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
        : color(col)
 8002d42:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
 8002d46:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
 8002d4a:	f8c4 20cc 	str.w	r2, [r4, #204]	@ 0xcc
 8002d4e:	f8a4 50d0 	strh.w	r5, [r4, #208]	@ 0xd0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d52:	f8c4 50d4 	str.w	r5, [r4, #212]	@ 0xd4
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8002d56:	e9c4 7536 	strd	r7, r5, [r4, #216]	@ 0xd8
 8002d5a:	f009 fc69 	bl	800c630 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002d5e:	f504 7294 	add.w	r2, r4, #296	@ 0x128
 8002d62:	4610      	mov	r0, r2
 8002d64:	9200      	str	r2, [sp, #0]
 8002d66:	f009 fc63 	bl	800c630 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002d6a:	f504 72b8 	add.w	r2, r4, #368	@ 0x170
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8002d6e:	4629      	mov	r1, r5
 8002d70:	9201      	str	r2, [sp, #4]
 8002d72:	4642      	mov	r2, r8
 8002d74:	9801      	ldr	r0, [sp, #4]
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002d76:	f104 0804 	add.w	r8, r4, #4
 8002d7a:	f01c f8f5 	bl	801ef68 <memset>
 8002d7e:	9801      	ldr	r0, [sp, #4]
 8002d80:	f7ff ff3c 	bl	8002bfc <_ZN8touchgfx6WidgetC1Ev>
 8002d84:	f64f 73ff 	movw	r3, #65535	@ 0xffff
        touchable = touch;
 8002d88:	2201      	movs	r2, #1
        setXY(x, y);
 8002d8a:	4629      	mov	r1, r5
 8002d8c:	f8a4 31a0 	strh.w	r3, [r4, #416]	@ 0x1a0
 8002d90:	4630      	mov	r0, r6
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8002d92:	f884 31a2 	strb.w	r3, [r4, #418]	@ 0x1a2
        : pobject(pObject), pmemfun(pmemfun_1)
 8002d96:	4b60      	ldr	r3, [pc, #384]	@ (8002f18 <_ZN12MainViewBaseC1Ev+0x274>)
        touchable = touch;
 8002d98:	f884 2194 	strb.w	r2, [r4, #404]	@ 0x194
 8002d9c:	4a5f      	ldr	r2, [pc, #380]	@ (8002f1c <_ZN12MainViewBaseC1Ev+0x278>)
 8002d9e:	f8c4 5198 	str.w	r5, [r4, #408]	@ 0x198
 8002da2:	f884 519c 	strb.w	r5, [r4, #412]	@ 0x19c
 8002da6:	f8c4 2170 	str.w	r2, [r4, #368]	@ 0x170
        setXY(x, y);
 8002daa:	462a      	mov	r2, r5
 8002dac:	f8a4 719e 	strh.w	r7, [r4, #414]	@ 0x19e
 8002db0:	e9c4 3469 	strd	r3, r4, [r4, #420]	@ 0x1a4
 8002db4:	4b5a      	ldr	r3, [pc, #360]	@ (8002f20 <_ZN12MainViewBaseC1Ev+0x27c>)
 8002db6:	e9c4 356b 	strd	r3, r5, [r4, #428]	@ 0x1ac
 8002dba:	f7ff fa68 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002dbe:	4630      	mov	r0, r6
 8002dc0:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8002dc4:	f7ff fa2a 	bl	800221c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002dc8:	4630      	mov	r0, r6
 8002dca:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8002dce:	f7ff fa27 	bl	8002220 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002dd2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002dd6:	4631      	mov	r1, r6
 8002dd8:	4640      	mov	r0, r8
 8002dda:	66a3      	str	r3, [r4, #104]	@ 0x68
    changescreen_sensor_btn.setAction(buttonCallback);
 8002ddc:	f504 76d2 	add.w	r6, r4, #420	@ 0x1a4
 8002de0:	f007 fbf0 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 8002de4:	462a      	mov	r2, r5
 8002de6:	4629      	mov	r1, r5
 8002de8:	4650      	mov	r0, sl
 8002dea:	f7ff fa50 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_DARK_ID));
 8002dee:	a908      	add	r1, sp, #32
 8002df0:	4650      	mov	r0, sl
 8002df2:	f8ad 5020 	strh.w	r5, [sp, #32]
 8002df6:	f009 fada 	bl	800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002dfa:	4651      	mov	r1, sl
 8002dfc:	4640      	mov	r0, r8
 8002dfe:	f04f 0a0a 	mov.w	sl, #10
 8002e02:	f007 fbdf 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    title.setXY(84, 87);
 8002e06:	2257      	movs	r2, #87	@ 0x57
 8002e08:	4648      	mov	r0, r9
 8002e0a:	2154      	movs	r1, #84	@ 0x54
 8002e0c:	f7ff fa3f 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 8002e10:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        boundingArea = calculateBoundingArea();
 8002e14:	ad02      	add	r5, sp, #8
 8002e16:	4649      	mov	r1, r9
        color = newColor;
 8002e18:	f8c4 70c8 	str.w	r7, [r4, #200]	@ 0xc8
        boundingArea = calculateBoundingArea();
 8002e1c:	4628      	mov	r0, r5
 8002e1e:	f008 fea5 	bl	800bb6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002e22:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
 8002e26:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002e2a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002e2e:	4b39      	ldr	r3, [pc, #228]	@ (8002f14 <_ZN12MainViewBaseC1Ev+0x270>)
        alpha = newAlpha;
 8002e30:	2596      	movs	r5, #150	@ 0x96
    title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5Q27));
 8002e32:	a908      	add	r1, sp, #32
 8002e34:	4648      	mov	r0, r9
 8002e36:	9308      	str	r3, [sp, #32]
 8002e38:	2303      	movs	r3, #3
 8002e3a:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8002e3e:	f009 f93d 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002e42:	4649      	mov	r1, r9
 8002e44:	4640      	mov	r0, r8
 8002e46:	f884 50ce 	strb.w	r5, [r4, #206]	@ 0xce
 8002e4a:	f04f 0909 	mov.w	r9, #9
 8002e4e:	f007 fbb9 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    changescreen_sensor_btn.setXY(90, 175);
 8002e52:	4658      	mov	r0, fp
 8002e54:	22af      	movs	r2, #175	@ 0xaf
 8002e56:	215a      	movs	r1, #90	@ 0x5a
 8002e58:	f7ff fa19 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    changescreen_sensor_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_ID));
 8002e5c:	aa08      	add	r2, sp, #32
 8002e5e:	a907      	add	r1, sp, #28
 8002e60:	4658      	mov	r0, fp
 8002e62:	f8ad a01c 	strh.w	sl, [sp, #28]
 8002e66:	f8ad 9020 	strh.w	r9, [sp, #32]
 8002e6a:	f009 f982 	bl	800c172 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002e6e:	231a      	movs	r3, #26
        updateTextPosition();
 8002e70:	4658      	mov	r0, fp
 8002e72:	f8a4 3118 	strh.w	r3, [r4, #280]	@ 0x118
 8002e76:	f7ff fed3 	bl	8002c20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002e7a:	4659      	mov	r1, fp
 8002e7c:	4640      	mov	r0, r8
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002e7e:	f884 5112 	strb.w	r5, [r4, #274]	@ 0x112
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002e82:	f8c4 6108 	str.w	r6, [r4, #264]	@ 0x108
        colorPressed = col;
 8002e86:	e9c4 7747 	strd	r7, r7, [r4, #284]	@ 0x11c
 8002e8a:	f007 fb9b 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    changescreen_motor_btn.setXY(270, 175);
 8002e8e:	9800      	ldr	r0, [sp, #0]
 8002e90:	22af      	movs	r2, #175	@ 0xaf
 8002e92:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 8002e96:	f7ff f9fa 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    changescreen_motor_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_ID));
 8002e9a:	aa08      	add	r2, sp, #32
 8002e9c:	a907      	add	r1, sp, #28
 8002e9e:	9800      	ldr	r0, [sp, #0]
 8002ea0:	f8ad a01c 	strh.w	sl, [sp, #28]
 8002ea4:	f8ad 9020 	strh.w	r9, [sp, #32]
 8002ea8:	f009 f963 	bl	800c172 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002eac:	2304      	movs	r3, #4
        updateTextPosition();
 8002eae:	9800      	ldr	r0, [sp, #0]
 8002eb0:	f8a4 3160 	strh.w	r3, [r4, #352]	@ 0x160
 8002eb4:	f7ff feb4 	bl	8002c20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002eb8:	9900      	ldr	r1, [sp, #0]
 8002eba:	4640      	mov	r0, r8
 8002ebc:	f884 515a 	strb.w	r5, [r4, #346]	@ 0x15a
 8002ec0:	f8c4 6150 	str.w	r6, [r4, #336]	@ 0x150
        colorPressed = col;
 8002ec4:	e9c4 7759 	strd	r7, r7, [r4, #356]	@ 0x164
 8002ec8:	f007 fb7c 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    config_btn.setXY(425, 5);
 8002ecc:	9801      	ldr	r0, [sp, #4]
 8002ece:	2205      	movs	r2, #5
 8002ed0:	f240 11a9 	movw	r1, #425	@ 0x1a9
 8002ed4:	f7ff f9db 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8002ed8:	230b      	movs	r3, #11
    config_btn.setBitmaps(touchgfx::Bitmap(BITMAP_CONFIGURATION_ID), touchgfx::Bitmap(BITMAP_CONFIGURATION_ID));
 8002eda:	aa08      	add	r2, sp, #32
 8002edc:	a907      	add	r1, sp, #28
 8002ede:	9801      	ldr	r0, [sp, #4]
 8002ee0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002ee4:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002ee8:	f009 f943 	bl	800c172 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002eec:	4640      	mov	r0, r8
 8002eee:	9901      	ldr	r1, [sp, #4]
 8002ef0:	f884 51a2 	strb.w	r5, [r4, #418]	@ 0x1a2
 8002ef4:	f8c4 6198 	str.w	r6, [r4, #408]	@ 0x198
 8002ef8:	f007 fb64 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002efc:	4620      	mov	r0, r4
 8002efe:	b00b      	add	sp, #44	@ 0x2c
 8002f00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f04:	08020b18 	.word	0x08020b18
 8002f08:	08021468 	.word	0x08021468
 8002f0c:	08021544 	.word	0x08021544
 8002f10:	080213d8 	.word	0x080213d8
 8002f14:	08020374 	.word	0x08020374
 8002f18:	08020b00 	.word	0x08020b00
 8002f1c:	080214d0 	.word	0x080214d0
 8002f20:	08002bbf 	.word	0x08002bbf

08002f24 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_NotoSans_Regular_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_NotoSans_Regular_12_4bpp();

touchgfx::GeneratedFont& getFont_NotoSans_Regular_12_4bpp()
{
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 1, 12, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 8002f24:	4770      	bx	lr
	...

08002f28 <_Z32getFont_NotoSans_Regular_12_4bppv>:
{
 8002f28:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 1, 12, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 8002f2a:	4d16      	ldr	r5, [pc, #88]	@ (8002f84 <_Z32getFont_NotoSans_Regular_12_4bppv+0x5c>)
{
 8002f2c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 1, 12, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 8002f2e:	682c      	ldr	r4, [r5, #0]
 8002f30:	f3bf 8f5b 	dmb	ish
 8002f34:	f014 0401 	ands.w	r4, r4, #1
 8002f38:	d120      	bne.n	8002f7c <_Z32getFont_NotoSans_Regular_12_4bppv+0x54>
 8002f3a:	4628      	mov	r0, r5
 8002f3c:	f01b fd4b 	bl	801e9d6 <__cxa_guard_acquire>
 8002f40:	b1e0      	cbz	r0, 8002f7c <_Z32getFont_NotoSans_Regular_12_4bppv+0x54>
 8002f42:	233f      	movs	r3, #63	@ 0x3f
 8002f44:	2201      	movs	r2, #1
 8002f46:	4910      	ldr	r1, [pc, #64]	@ (8002f88 <_Z32getFont_NotoSans_Regular_12_4bppv+0x60>)
 8002f48:	9309      	str	r3, [sp, #36]	@ 0x24
 8002f4a:	4b10      	ldr	r3, [pc, #64]	@ (8002f8c <_Z32getFont_NotoSans_Regular_12_4bppv+0x64>)
 8002f4c:	4810      	ldr	r0, [pc, #64]	@ (8002f90 <_Z32getFont_NotoSans_Regular_12_4bppv+0x68>)
 8002f4e:	9308      	str	r3, [sp, #32]
 8002f50:	4b10      	ldr	r3, [pc, #64]	@ (8002f94 <_Z32getFont_NotoSans_Regular_12_4bppv+0x6c>)
 8002f52:	940a      	str	r4, [sp, #40]	@ 0x28
 8002f54:	9405      	str	r4, [sp, #20]
 8002f56:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002f5a:	2304      	movs	r3, #4
 8002f5c:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002f60:	230c      	movs	r3, #12
 8002f62:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002f66:	9300      	str	r3, [sp, #0]
 8002f68:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002f6c:	f7ff fdc6 	bl	8002afc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002f70:	4809      	ldr	r0, [pc, #36]	@ (8002f98 <_Z32getFont_NotoSans_Regular_12_4bppv+0x70>)
 8002f72:	f01b fd7b 	bl	801ea6c <atexit>
 8002f76:	4628      	mov	r0, r5
 8002f78:	f01b fd39 	bl	801e9ee <__cxa_guard_release>
    return NotoSans_Regular_12_4bpp;
}
 8002f7c:	4804      	ldr	r0, [pc, #16]	@ (8002f90 <_Z32getFont_NotoSans_Regular_12_4bppv+0x68>)
 8002f7e:	b00f      	add	sp, #60	@ 0x3c
 8002f80:	bd30      	pop	{r4, r5, pc}
 8002f82:	bf00      	nop
 8002f84:	20001c48 	.word	0x20001c48
 8002f88:	900e2238 	.word	0x900e2238
 8002f8c:	08021a98 	.word	0x08021a98
 8002f90:	20001c4c 	.word	0x20001c4c
 8002f94:	08021ae4 	.word	0x08021ae4
 8002f98:	08002f25 	.word	0x08002f25

08002f9c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_18_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_18_4bpp();

touchgfx::GeneratedFont& getFont_verdana_18_4bpp()
{
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 33, 22, 18, 0, 0, 4, 1, 0, 1, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 8002f9c:	4770      	bx	lr
	...

08002fa0 <_Z23getFont_verdana_18_4bppv>:
{
 8002fa0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 33, 22, 18, 0, 0, 4, 1, 0, 1, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 8002fa2:	4d17      	ldr	r5, [pc, #92]	@ (8003000 <_Z23getFont_verdana_18_4bppv+0x60>)
{
 8002fa4:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_18_4bpp(glyphs_verdana_18_4bpp, 33, 22, 18, 0, 0, 4, 1, 0, 1, unicodes_verdana_18_4bpp, kerning_verdana_18_4bpp, 63, 0, 0, 0);
 8002fa6:	682c      	ldr	r4, [r5, #0]
 8002fa8:	f3bf 8f5b 	dmb	ish
 8002fac:	f014 0401 	ands.w	r4, r4, #1
 8002fb0:	d122      	bne.n	8002ff8 <_Z23getFont_verdana_18_4bppv+0x58>
 8002fb2:	4628      	mov	r0, r5
 8002fb4:	f01b fd0f 	bl	801e9d6 <__cxa_guard_acquire>
 8002fb8:	b1f0      	cbz	r0, 8002ff8 <_Z23getFont_verdana_18_4bppv+0x58>
 8002fba:	233f      	movs	r3, #63	@ 0x3f
 8002fbc:	2221      	movs	r2, #33	@ 0x21
 8002fbe:	4911      	ldr	r1, [pc, #68]	@ (8003004 <_Z23getFont_verdana_18_4bppv+0x64>)
 8002fc0:	9309      	str	r3, [sp, #36]	@ 0x24
 8002fc2:	4b11      	ldr	r3, [pc, #68]	@ (8003008 <_Z23getFont_verdana_18_4bppv+0x68>)
 8002fc4:	4811      	ldr	r0, [pc, #68]	@ (800300c <_Z23getFont_verdana_18_4bppv+0x6c>)
 8002fc6:	9308      	str	r3, [sp, #32]
 8002fc8:	4b11      	ldr	r3, [pc, #68]	@ (8003010 <_Z23getFont_verdana_18_4bppv+0x70>)
 8002fca:	940a      	str	r4, [sp, #40]	@ 0x28
 8002fcc:	9307      	str	r3, [sp, #28]
 8002fce:	2301      	movs	r3, #1
 8002fd0:	9401      	str	r4, [sp, #4]
 8002fd2:	9304      	str	r3, [sp, #16]
 8002fd4:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8002fd8:	2304      	movs	r3, #4
 8002fda:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8002fde:	2312      	movs	r3, #18
 8002fe0:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002fe4:	9300      	str	r3, [sp, #0]
 8002fe6:	2316      	movs	r3, #22
 8002fe8:	f7ff fd88 	bl	8002afc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002fec:	4809      	ldr	r0, [pc, #36]	@ (8003014 <_Z23getFont_verdana_18_4bppv+0x74>)
 8002fee:	f01b fd3d 	bl	801ea6c <atexit>
 8002ff2:	4628      	mov	r0, r5
 8002ff4:	f01b fcfb 	bl	801e9ee <__cxa_guard_release>
    return verdana_18_4bpp;
}
 8002ff8:	4804      	ldr	r0, [pc, #16]	@ (800300c <_Z23getFont_verdana_18_4bppv+0x6c>)
 8002ffa:	b00f      	add	sp, #60	@ 0x3c
 8002ffc:	bd30      	pop	{r4, r5, pc}
 8002ffe:	bf00      	nop
 8003000:	20001c78 	.word	0x20001c78
 8003004:	900e2248 	.word	0x900e2248
 8003008:	08021a9c 	.word	0x08021a9c
 800300c:	20001c7c 	.word	0x20001c7c
 8003010:	08021ae8 	.word	0x08021ae8
 8003014:	08002f9d 	.word	0x08002f9d

08003018 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 46, 40, 0, 0, 4, 1, 1, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003018:	4770      	bx	lr
	...

0800301c <_Z23getFont_verdana_40_4bppv>:
{
 800301c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 46, 40, 0, 0, 4, 1, 1, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800301e:	4d17      	ldr	r5, [pc, #92]	@ (800307c <_Z23getFont_verdana_40_4bppv+0x60>)
{
 8003020:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 46, 40, 0, 0, 4, 1, 1, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003022:	682c      	ldr	r4, [r5, #0]
 8003024:	f3bf 8f5b 	dmb	ish
 8003028:	f014 0401 	ands.w	r4, r4, #1
 800302c:	d122      	bne.n	8003074 <_Z23getFont_verdana_40_4bppv+0x58>
 800302e:	4628      	mov	r0, r5
 8003030:	f01b fcd1 	bl	801e9d6 <__cxa_guard_acquire>
 8003034:	b1f0      	cbz	r0, 8003074 <_Z23getFont_verdana_40_4bppv+0x58>
 8003036:	233f      	movs	r3, #63	@ 0x3f
 8003038:	220b      	movs	r2, #11
 800303a:	4911      	ldr	r1, [pc, #68]	@ (8003080 <_Z23getFont_verdana_40_4bppv+0x64>)
 800303c:	9309      	str	r3, [sp, #36]	@ 0x24
 800303e:	4b11      	ldr	r3, [pc, #68]	@ (8003084 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003040:	4811      	ldr	r0, [pc, #68]	@ (8003088 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003042:	9308      	str	r3, [sp, #32]
 8003044:	4b11      	ldr	r3, [pc, #68]	@ (800308c <_Z23getFont_verdana_40_4bppv+0x70>)
 8003046:	940a      	str	r4, [sp, #40]	@ 0x28
 8003048:	9307      	str	r3, [sp, #28]
 800304a:	2301      	movs	r3, #1
 800304c:	9401      	str	r4, [sp, #4]
 800304e:	9304      	str	r3, [sp, #16]
 8003050:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8003054:	2304      	movs	r3, #4
 8003056:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800305a:	2328      	movs	r3, #40	@ 0x28
 800305c:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003060:	9300      	str	r3, [sp, #0]
 8003062:	232e      	movs	r3, #46	@ 0x2e
 8003064:	f7ff fd4a 	bl	8002afc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003068:	4809      	ldr	r0, [pc, #36]	@ (8003090 <_Z23getFont_verdana_40_4bppv+0x74>)
 800306a:	f01b fcff 	bl	801ea6c <atexit>
 800306e:	4628      	mov	r0, r5
 8003070:	f01b fcbd 	bl	801e9ee <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003074:	4804      	ldr	r0, [pc, #16]	@ (8003088 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003076:	b00f      	add	sp, #60	@ 0x3c
 8003078:	bd30      	pop	{r4, r5, pc}
 800307a:	bf00      	nop
 800307c:	20001ca8 	.word	0x20001ca8
 8003080:	900e2418 	.word	0x900e2418
 8003084:	08021ad4 	.word	0x08021ad4
 8003088:	20001cac 	.word	0x20001cac
 800308c:	08021aec 	.word	0x08021aec
 8003090:	08003019 	.word	0x08003019

08003094 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8003094:	2000      	movs	r0, #0
 8003096:	4770      	bx	lr

08003098 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8003098:	2000      	movs	r0, #0
 800309a:	4770      	bx	lr

0800309c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800309c:	b40e      	push	{r1, r2, r3}
 800309e:	b503      	push	{r0, r1, lr}
 80030a0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80030a2:	2100      	movs	r1, #0
{
 80030a4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80030a8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80030aa:	f00b ff1f 	bl	800eeec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80030ae:	b002      	add	sp, #8
 80030b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80030b4:	b003      	add	sp, #12
 80030b6:	4770      	bx	lr

080030b8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80030b8:	b40c      	push	{r2, r3}
 80030ba:	b507      	push	{r0, r1, r2, lr}
 80030bc:	ab04      	add	r3, sp, #16
 80030be:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80030c2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80030c4:	f00b ff12 	bl	800eeec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80030c8:	b003      	add	sp, #12
 80030ca:	f85d eb04 	ldr.w	lr, [sp], #4
 80030ce:	b002      	add	sp, #8
 80030d0:	4770      	bx	lr
	...

080030d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80030d4:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 80030d6:	b510      	push	{r4, lr}
 80030d8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80030da:	b373      	cbz	r3, 800313a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80030dc:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 80030de:	b92b      	cbnz	r3, 80030ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80030e0:	4b18      	ldr	r3, [pc, #96]	@ (8003144 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80030e2:	21c5      	movs	r1, #197	@ 0xc5
 80030e4:	4a18      	ldr	r2, [pc, #96]	@ (8003148 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80030e6:	4819      	ldr	r0, [pc, #100]	@ (800314c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80030e8:	f01b fca2 	bl	801ea30 <__assert_func>
            return buffer[pos];
 80030ec:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80030ee:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80030f2:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 80030f4:	b30b      	cbz	r3, 800313a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80030f6:	f00d f9a7 	bl	8010448 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80030fa:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80030fc:	2b01      	cmp	r3, #1
 80030fe:	d803      	bhi.n	8003108 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003100:	4b13      	ldr	r3, [pc, #76]	@ (8003150 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8003102:	21cb      	movs	r1, #203	@ 0xcb
 8003104:	4a13      	ldr	r2, [pc, #76]	@ (8003154 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8003106:	e7ee      	b.n	80030e6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8003108:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800310a:	f640 103f 	movw	r0, #2367	@ 0x93f
 800310e:	1c53      	adds	r3, r2, #1
 8003110:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8003112:	2b09      	cmp	r3, #9
 8003114:	4619      	mov	r1, r3
 8003116:	bf88      	it	hi
 8003118:	f1a3 010a 	subhi.w	r1, r3, #10
 800311c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8003120:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8003122:	4281      	cmp	r1, r0
 8003124:	d109      	bne.n	800313a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8003126:	2b0a      	cmp	r3, #10
 8003128:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800312c:	bf28      	it	cs
 800312e:	2300      	movcs	r3, #0
            return buffer[pos];
 8003130:	8c50      	ldrh	r0, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003132:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8003136:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8003138:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800313a:	4620      	mov	r0, r4
}
 800313c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003140:	f00d b884 	b.w	801024c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003144:	08020b44 	.word	0x08020b44
 8003148:	08020b4d 	.word	0x08020b4d
 800314c:	08020bf8 	.word	0x08020bf8
 8003150:	08020c42 	.word	0x08020c42
 8003154:	08020c50 	.word	0x08020c50

08003158 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003158:	f00d b841 	b.w	80101de <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800315c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800315c:	b510      	push	{r4, lr}
 800315e:	b086      	sub	sp, #24
 8003160:	ac02      	add	r4, sp, #8
 8003162:	e884 0006 	stmia.w	r4, {r1, r2}
 8003166:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8003168:	ab0a      	add	r3, sp, #40	@ 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800316a:	4621      	mov	r1, r4
    va_start(pArg, format);
 800316c:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800316e:	9301      	str	r3, [sp, #4]
 8003170:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003172:	9300      	str	r3, [sp, #0]
 8003174:	9b08      	ldr	r3, [sp, #32]
 8003176:	f00a fb09 	bl	800d78c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800317a:	b006      	add	sp, #24
 800317c:	bd10      	pop	{r4, pc}
	...

08003180 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003180:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003182:	bb18      	cbnz	r0, 80031cc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003184:	4b12      	ldr	r3, [pc, #72]	@ (80031d0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003186:	4813      	ldr	r0, [pc, #76]	@ (80031d4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003188:	681c      	ldr	r4, [r3, #0]
 800318a:	4913      	ldr	r1, [pc, #76]	@ (80031d8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800318c:	b1b4      	cbz	r4, 80031bc <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800318e:	6822      	ldr	r2, [r4, #0]
 8003190:	4422      	add	r2, r4
 8003192:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003194:	6862      	ldr	r2, [r4, #4]
 8003196:	4422      	add	r2, r4
 8003198:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800319a:	68a2      	ldr	r2, [r4, #8]
 800319c:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800319e:	4b0f      	ldr	r3, [pc, #60]	@ (80031dc <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80031a0:	2200      	movs	r2, #0
 80031a2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80031a4:	f000 f838 	bl	8003218 <_ZN17TypedTextDatabase8getFontsEv>
 80031a8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80031aa:	f000 f833 	bl	8003214 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80031ae:	4b0c      	ldr	r3, [pc, #48]	@ (80031e0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80031b0:	601c      	str	r4, [r3, #0]
        fonts = f;
 80031b2:	4b0c      	ldr	r3, [pc, #48]	@ (80031e4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80031b4:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80031b6:	4b0c      	ldr	r3, [pc, #48]	@ (80031e8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80031b8:	8018      	strh	r0, [r3, #0]
    }
}
 80031ba:	e007      	b.n	80031cc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80031bc:	4b0b      	ldr	r3, [pc, #44]	@ (80031ec <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80031be:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80031c0:	4b0b      	ldr	r3, [pc, #44]	@ (80031f0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80031c2:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80031c4:	4b0b      	ldr	r3, [pc, #44]	@ (80031f4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80031c6:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80031c8:	2c00      	cmp	r4, #0
 80031ca:	d1e8      	bne.n	800319e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80031cc:	bd38      	pop	{r3, r4, r5, pc}
 80031ce:	bf00      	nop
 80031d0:	20001ce4 	.word	0x20001ce4
 80031d4:	20001cdc 	.word	0x20001cdc
 80031d8:	20001cd8 	.word	0x20001cd8
 80031dc:	20001ce0 	.word	0x20001ce0
 80031e0:	200150fc 	.word	0x200150fc
 80031e4:	20015104 	.word	0x20015104
 80031e8:	20015100 	.word	0x20015100
 80031ec:	900e2520 	.word	0x900e2520
 80031f0:	900e24b4 	.word	0x900e24b4
 80031f4:	900e2634 	.word	0x900e2634

080031f8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80031f8:	4b04      	ldr	r3, [pc, #16]	@ (800320c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8003200:	4b03      	ldr	r3, [pc, #12]	@ (8003210 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8003202:	681b      	ldr	r3, [r3, #0]
}
 8003204:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003208:	4770      	bx	lr
 800320a:	bf00      	nop
 800320c:	20001cd8 	.word	0x20001cd8
 8003210:	20001cdc 	.word	0x20001cdc

08003214 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003214:	201b      	movs	r0, #27
 8003216:	4770      	bx	lr

08003218 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003218:	4800      	ldr	r0, [pc, #0]	@ (800321c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800321a:	4770      	bx	lr
 800321c:	20001ce8 	.word	0x20001ce8

08003220 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_40_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003220:	b510      	push	{r4, lr}
};
 8003222:	4c05      	ldr	r4, [pc, #20]	@ (8003238 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_NotoSans_Regular_12_4bpp()),
 8003224:	f7ff fe80 	bl	8002f28 <_Z32getFont_NotoSans_Regular_12_4bppv>
};
 8003228:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_18_4bpp()),
 800322a:	f7ff feb9 	bl	8002fa0 <_Z23getFont_verdana_18_4bppv>
};
 800322e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_40_4bpp())
 8003230:	f7ff fef4 	bl	800301c <_Z23getFont_verdana_40_4bppv>
};
 8003234:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8003236:	bd10      	pop	{r4, pc}
 8003238:	20001ce8 	.word	0x20001ce8

0800323c <_ZN14configViewBaseD1Ev>:
}

configViewBase::~configViewBase()
{

}
 800323c:	4770      	bx	lr

0800323e <_ZN14configViewBase11setupScreenEv>:

void configViewBase::setupScreen()
{

}
 800323e:	4770      	bx	lr

08003240 <_ZN8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003240:	4770      	bx	lr

08003242 <_ZN8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003242:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003244:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 8003246:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003248:	68c2      	ldr	r2, [r0, #12]
 800324a:	689b      	ldr	r3, [r3, #8]
 800324c:	1055      	asrs	r5, r2, #1
 800324e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003252:	07d2      	lsls	r2, r2, #31
 8003254:	bf48      	it	mi
 8003256:	5962      	ldrmi	r2, [r4, r5]
    }
 8003258:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800325a:	bf48      	it	mi
 800325c:	58d3      	ldrmi	r3, [r2, r3]
 800325e:	4718      	bx	r3

08003260 <_ZNK8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8003260:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003262:	6840      	ldr	r0, [r0, #4]
 8003264:	b130      	cbz	r0, 8003274 <_ZNK8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003266:	689a      	ldr	r2, [r3, #8]
 8003268:	b91a      	cbnz	r2, 8003272 <_ZNK8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 800326a:	68d8      	ldr	r0, [r3, #12]
 800326c:	f000 0001 	and.w	r0, r0, #1
 8003270:	4770      	bx	lr
 8003272:	2001      	movs	r0, #1
    }
 8003274:	4770      	bx	lr

08003276 <_ZN8touchgfx8CallbackI14configViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003276:	b510      	push	{r4, lr}
 8003278:	4604      	mov	r4, r0
 800327a:	2110      	movs	r1, #16
 800327c:	f01b fba9 	bl	801e9d2 <_ZdlPvj>
 8003280:	4620      	mov	r0, r4
 8003282:	bd10      	pop	{r4, pc}

08003284 <_ZN14configViewBaseD0Ev>:
configViewBase::~configViewBase()
 8003284:	b510      	push	{r4, lr}
 8003286:	4604      	mov	r4, r0
}
 8003288:	21dc      	movs	r1, #220	@ 0xdc
 800328a:	f01b fba2 	bl	801e9d2 <_ZdlPvj>
 800328e:	4620      	mov	r0, r4
 8003290:	bd10      	pop	{r4, pc}

08003292 <_ZN14configViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void configViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back_main_btn)
 8003292:	3098      	adds	r0, #152	@ 0x98
 8003294:	4288      	cmp	r0, r1
{
 8003296:	b508      	push	{r3, lr}
    if (&src == &back_main_btn)
 8003298:	d105      	bne.n	80032a6 <_ZN14configViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~configViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800329a:	f00a fed9 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
        //back_main
        //When back_main_btn clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    }
}
 800329e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMainScreenNoTransition();
 80032a2:	f7ff b925 	b.w	80024f0 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
}
 80032a6:	bd08      	pop	{r3, pc}

080032a8 <_ZN14configViewBaseC1Ev>:
configViewBase::configViewBase() :
 80032a8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80032ac:	4604      	mov	r4, r0
 80032ae:	2500      	movs	r5, #0
 80032b0:	f00c f9ee 	bl	800f690 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
 80032b4:	f04f 0a26 	mov.w	sl, #38	@ 0x26
    buttonCallback(this, &configViewBase::buttonCallbackHandler)
 80032b8:	4626      	mov	r6, r4
 80032ba:	4b4a      	ldr	r3, [pc, #296]	@ (80033e4 <_ZN14configViewBaseC1Ev+0x13c>)
 80032bc:	4652      	mov	r2, sl
 80032be:	4629      	mov	r1, r5
 80032c0:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80032c2:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 80032c6:	f846 3b40 	str.w	r3, [r6], #64
 80032ca:	4630      	mov	r0, r6
 80032cc:	f01b fe4c 	bl	801ef68 <memset>
 80032d0:	4630      	mov	r0, r6
 80032d2:	f7ff fc93 	bl	8002bfc <_ZN8touchgfx6WidgetC1Ev>
 80032d6:	f04f 08ff 	mov.w	r8, #255	@ 0xff
 80032da:	4b43      	ldr	r3, [pc, #268]	@ (80033e8 <_ZN14configViewBaseC1Ev+0x140>)
 80032dc:	f64f 79ff 	movw	r9, #65535	@ 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 80032e0:	4652      	mov	r2, sl
 80032e2:	4629      	mov	r1, r5
 80032e4:	6423      	str	r3, [r4, #64]	@ 0x40
 80032e6:	4638      	mov	r0, r7
 80032e8:	f884 8066 	strb.w	r8, [r4, #102]	@ 0x66
        : color(col)
 80032ec:	66a5      	str	r5, [r4, #104]	@ 0x68
 80032ee:	f8ad 9004 	strh.w	r9, [sp, #4]
 80032f2:	f01b fe39 	bl	801ef68 <memset>
 80032f6:	4638      	mov	r0, r7
 80032f8:	f7ff fc80 	bl	8002bfc <_ZN8touchgfx6WidgetC1Ev>
 80032fc:	4b3b      	ldr	r3, [pc, #236]	@ (80033ec <_ZN14configViewBaseC1Ev+0x144>)
 80032fe:	f884 8094 	strb.w	r8, [r4, #148]	@ 0x94
 8003302:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8003306:	66e3      	str	r3, [r4, #108]	@ 0x6c
        Image::setBitmap(bmp);
 8003308:	a901      	add	r1, sp, #4
        : Widget(), bitmap(bmp), alpha(255)
 800330a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
        Image::setBitmap(bmp);
 800330e:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8003310:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
        Image::setBitmap(bmp);
 8003314:	f009 f84b 	bl	800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), action(), pressed(false)
 8003318:	4652      	mov	r2, sl
 800331a:	4629      	mov	r1, r5
 800331c:	4640      	mov	r0, r8
 800331e:	f01b fe23 	bl	801ef68 <memset>
 8003322:	4640      	mov	r0, r8
 8003324:	f7ff fc6a 	bl	8002bfc <_ZN8touchgfx6WidgetC1Ev>
        touchable = touch;
 8003328:	2301      	movs	r3, #1
        setXY(x, y);
 800332a:	462a      	mov	r2, r5
 800332c:	4629      	mov	r1, r5
        touchable = touch;
 800332e:	f884 30bc 	strb.w	r3, [r4, #188]	@ 0xbc
        setXY(x, y);
 8003332:	4630      	mov	r0, r6
        : AbstractButton(), up(), down(), alpha(255)
 8003334:	4b2e      	ldr	r3, [pc, #184]	@ (80033f0 <_ZN14configViewBaseC1Ev+0x148>)
 8003336:	f8a4 90c6 	strh.w	r9, [r4, #198]	@ 0xc6
 800333a:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
        : pobject(pObject), pmemfun(pmemfun_1)
 800333e:	4b2d      	ldr	r3, [pc, #180]	@ (80033f4 <_ZN14configViewBaseC1Ev+0x14c>)
 8003340:	f8a4 90c8 	strh.w	r9, [r4, #200]	@ 0xc8
 8003344:	f884 90ca 	strb.w	r9, [r4, #202]	@ 0xca
 8003348:	f104 0904 	add.w	r9, r4, #4
 800334c:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
 8003350:	f884 50c4 	strb.w	r5, [r4, #196]	@ 0xc4
 8003354:	e9c4 3433 	strd	r3, r4, [r4, #204]	@ 0xcc
 8003358:	4b27      	ldr	r3, [pc, #156]	@ (80033f8 <_ZN14configViewBaseC1Ev+0x150>)
 800335a:	e9c4 3535 	strd	r3, r5, [r4, #212]	@ 0xd4
 800335e:	f7fe ff96 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003362:	4630      	mov	r0, r6
 8003364:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8003368:	f7fe ff58 	bl	800221c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800336c:	4630      	mov	r0, r6
 800336e:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8003372:	f7fe ff55 	bl	8002220 <_ZN8touchgfx8Drawable9setHeightEs>
        color = newColor;
 8003376:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800337a:	4631      	mov	r1, r6
 800337c:	4648      	mov	r0, r9
 800337e:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003380:	f007 f920 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 8003384:	462a      	mov	r2, r5
 8003386:	4629      	mov	r1, r5
 8003388:	4638      	mov	r0, r7
 800338a:	f7fe ff80 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_DARK_ID));
 800338e:	a901      	add	r1, sp, #4
 8003390:	4638      	mov	r0, r7
 8003392:	f8ad 5004 	strh.w	r5, [sp, #4]
 8003396:	f009 f80a 	bl	800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800339a:	4639      	mov	r1, r7
 800339c:	4648      	mov	r0, r9
 800339e:	f007 f911 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    back_main_btn.setXY(425, 5);
 80033a2:	4640      	mov	r0, r8
 80033a4:	2205      	movs	r2, #5
 80033a6:	f240 11a9 	movw	r1, #425	@ 0x1a9
 80033aa:	f7fe ff70 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 80033ae:	2304      	movs	r3, #4
    back_main_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BACK50_ID), touchgfx::Bitmap(BITMAP_BACK50_ID));
 80033b0:	4669      	mov	r1, sp
 80033b2:	4640      	mov	r0, r8
 80033b4:	eb0d 0203 	add.w	r2, sp, r3
 80033b8:	f8ad 3000 	strh.w	r3, [sp]
 80033bc:	f8ad 3004 	strh.w	r3, [sp, #4]
 80033c0:	f008 fed7 	bl	800c172 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        alpha = newAlpha;
 80033c4:	2396      	movs	r3, #150	@ 0x96
 80033c6:	4648      	mov	r0, r9
 80033c8:	4641      	mov	r1, r8
 80033ca:	f884 30ca 	strb.w	r3, [r4, #202]	@ 0xca
    back_main_btn.setAction(buttonCallback);
 80033ce:	f104 03cc 	add.w	r3, r4, #204	@ 0xcc
        action = &callback;
 80033d2:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80033d6:	f007 f8f5 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80033da:	4620      	mov	r0, r4
 80033dc:	b002      	add	sp, #8
 80033de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80033e2:	bf00      	nop
 80033e4:	08020d44 	.word	0x08020d44
 80033e8:	08021468 	.word	0x08021468
 80033ec:	08021544 	.word	0x08021544
 80033f0:	080214d0 	.word	0x080214d0
 80033f4:	08020d2c 	.word	0x08020d2c
 80033f8:	08003293 	.word	0x08003293

080033fc <_ZN13motorViewBase9function2Ev>:
     * Virtual Action Handlers
     */
    virtual void function2()
    {
        // Override and implement this function in motor
    }
 80033fc:	4770      	bx	lr

080033fe <_ZN13motorViewBase9function3Ev>:
    virtual void function3()
    {
        // Override and implement this function in motor
    }
 80033fe:	4770      	bx	lr

08003400 <_ZN13motorViewBaseD1Ev>:
}

motorViewBase::~motorViewBase()
{

}
 8003400:	4770      	bx	lr

08003402 <_ZN13motorViewBase11setupScreenEv>:

void motorViewBase::setupScreen()
{

}
 8003402:	4770      	bx	lr

08003404 <_ZN8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003404:	4770      	bx	lr

08003406 <_ZN8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003406:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003408:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 800340a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800340c:	68c2      	ldr	r2, [r0, #12]
 800340e:	689b      	ldr	r3, [r3, #8]
 8003410:	1055      	asrs	r5, r2, #1
 8003412:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003416:	07d2      	lsls	r2, r2, #31
 8003418:	bf48      	it	mi
 800341a:	5962      	ldrmi	r2, [r4, r5]
    }
 800341c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800341e:	bf48      	it	mi
 8003420:	58d3      	ldrmi	r3, [r2, r3]
 8003422:	4718      	bx	r3

08003424 <_ZNK8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8003424:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003426:	6840      	ldr	r0, [r0, #4]
 8003428:	b130      	cbz	r0, 8003438 <_ZNK8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800342a:	689a      	ldr	r2, [r3, #8]
 800342c:	b91a      	cbnz	r2, 8003436 <_ZNK8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 800342e:	68d8      	ldr	r0, [r3, #12]
 8003430:	f000 0001 	and.w	r0, r0, #1
 8003434:	4770      	bx	lr
 8003436:	2001      	movs	r0, #1
    }
 8003438:	4770      	bx	lr

0800343a <_ZN8touchgfx8CallbackI13motorViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800343a:	b510      	push	{r4, lr}
 800343c:	4604      	mov	r4, r0
 800343e:	2110      	movs	r1, #16
 8003440:	f01b fac7 	bl	801e9d2 <_ZdlPvj>
 8003444:	4620      	mov	r0, r4
 8003446:	bd10      	pop	{r4, pc}

08003448 <_ZN13motorViewBaseD0Ev>:
motorViewBase::~motorViewBase()
 8003448:	b510      	push	{r4, lr}
 800344a:	4604      	mov	r4, r0
}
 800344c:	f44f 7138 	mov.w	r1, #736	@ 0x2e0
 8003450:	f01b fabf 	bl	801e9d2 <_ZdlPvj>
 8003454:	4620      	mov	r0, r4
 8003456:	bd10      	pop	{r4, pc}

08003458 <_ZN13motorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void motorViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back_main_btn)
 8003458:	f100 0398 	add.w	r3, r0, #152	@ 0x98
 800345c:	4299      	cmp	r1, r3
{
 800345e:	b570      	push	{r4, r5, r6, lr}
 8003460:	4604      	mov	r4, r0
 8003462:	460d      	mov	r5, r1
    if (&src == &back_main_btn)
 8003464:	d103      	bne.n	800346e <_ZN13motorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003466:	f00a fdf3 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //back_main
        //When back_main_btn clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
 800346a:	f7ff f841 	bl	80024f0 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
    if (&src == &water_btn)
 800346e:	f504 7382 	add.w	r3, r4, #260	@ 0x104
 8003472:	429d      	cmp	r5, r3
 8003474:	d103      	bne.n	800347e <_ZN13motorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
    {
        //water_motor
        //When water_btn clicked call virtual function
        //Call function2
        function2();
 8003476:	6823      	ldr	r3, [r4, #0]
 8003478:	4620      	mov	r0, r4
 800347a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800347c:	4798      	blx	r3
    }
    if (&src == &led_btn)
 800347e:	f504 739e 	add.w	r3, r4, #316	@ 0x13c
 8003482:	429d      	cmp	r5, r3
 8003484:	d105      	bne.n	8003492 <_ZN13motorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //led
        //When led_btn clicked call virtual function
        //Call function3
        function3();
 8003486:	6823      	ldr	r3, [r4, #0]
 8003488:	4620      	mov	r0, r4
 800348a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    }
}
 800348c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        function3();
 8003490:	4718      	bx	r3
}
 8003492:	bd70      	pop	{r4, r5, r6, pc}

08003494 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8003494:	b510      	push	{r4, lr}
 8003496:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 8003498:	2226      	movs	r2, #38	@ 0x26
 800349a:	2100      	movs	r1, #0
 800349c:	f01b fd64 	bl	801ef68 <memset>
 80034a0:	4620      	mov	r0, r4
 80034a2:	f7ff fbab 	bl	8002bfc <_ZN8touchgfx6WidgetC1Ev>
 80034a6:	4b05      	ldr	r3, [pc, #20]	@ (80034bc <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
    }
 80034a8:	4620      	mov	r0, r4
        : Widget(), action(), pressed(false)
 80034aa:	6023      	str	r3, [r4, #0]
 80034ac:	2300      	movs	r3, #0
 80034ae:	62a3      	str	r3, [r4, #40]	@ 0x28
 80034b0:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
        touchable = touch;
 80034b4:	2301      	movs	r3, #1
 80034b6:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
    }
 80034ba:	bd10      	pop	{r4, pc}
 80034bc:	080212f4 	.word	0x080212f4

080034c0 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80034c0:	b510      	push	{r4, lr}
 80034c2:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80034c4:	2226      	movs	r2, #38	@ 0x26
 80034c6:	2100      	movs	r1, #0
 80034c8:	f01b fd4e 	bl	801ef68 <memset>
 80034cc:	4620      	mov	r0, r4
 80034ce:	f7ff fb95 	bl	8002bfc <_ZN8touchgfx6WidgetC1Ev>
 80034d2:	4b0a      	ldr	r3, [pc, #40]	@ (80034fc <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80034d4:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
    }
 80034d8:	4620      	mov	r0, r4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80034da:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80034dc:	4b08      	ldr	r3, [pc, #32]	@ (8003500 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80034de:	62a3      	str	r3, [r4, #40]	@ 0x28
 80034e0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80034e4:	85a3      	strh	r3, [r4, #44]	@ 0x2c
 80034e6:	2300      	movs	r3, #0
 80034e8:	e9c4 320c 	strd	r3, r2, [r4, #48]	@ 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80034ec:	f04f 32ff 	mov.w	r2, #4294967295
 80034f0:	8723      	strh	r3, [r4, #56]	@ 0x38
 80034f2:	63e3      	str	r3, [r4, #60]	@ 0x3c
              text(0)
 80034f4:	e9c4 2310 	strd	r2, r3, [r4, #64]	@ 0x40
    }
 80034f8:	bd10      	pop	{r4, pc}
 80034fa:	bf00      	nop
 80034fc:	080213d8 	.word	0x080213d8
 8003500:	08020374 	.word	0x08020374

08003504 <_ZN8touchgfx12ToggleButtonC1Ev>:
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8003504:	b510      	push	{r4, lr}
 8003506:	4604      	mov	r4, r0
        : AbstractButton(), up(), down(), alpha(255)
 8003508:	f7ff ffc4 	bl	8003494 <_ZN8touchgfx14AbstractButtonC1Ev>
 800350c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003510:	4a04      	ldr	r2, [pc, #16]	@ (8003524 <_ZN8touchgfx12ToggleButtonC1Ev+0x20>)
 8003512:	4620      	mov	r0, r4
 8003514:	85e3      	strh	r3, [r4, #46]	@ 0x2e
 8003516:	8623      	strh	r3, [r4, #48]	@ 0x30
 8003518:	f884 3032 	strb.w	r3, [r4, #50]	@ 0x32
 800351c:	6022      	str	r2, [r4, #0]
 800351e:	86a3      	strh	r3, [r4, #52]	@ 0x34
 8003520:	bd10      	pop	{r4, pc}
 8003522:	bf00      	nop
 8003524:	08021364 	.word	0x08021364

08003528 <_ZN13motorViewBaseC1Ev>:
motorViewBase::motorViewBase() :
 8003528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800352c:	4604      	mov	r4, r0
 800352e:	b091      	sub	sp, #68	@ 0x44
 8003530:	2600      	movs	r6, #0
 8003532:	f00c f8ad 	bl	800f690 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &motorViewBase::buttonCallbackHandler)
 8003536:	4627      	mov	r7, r4
 8003538:	4bd0      	ldr	r3, [pc, #832]	@ (800387c <_ZN13motorViewBaseC1Ev+0x354>)
        : Widget(), alpha(255), color(0)
 800353a:	2226      	movs	r2, #38	@ 0x26
 800353c:	4631      	mov	r1, r6
 800353e:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8003540:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 8003544:	f847 3b40 	str.w	r3, [r7], #64
 8003548:	4638      	mov	r0, r7
 800354a:	f01b fd0d 	bl	801ef68 <memset>
 800354e:	4638      	mov	r0, r7
 8003550:	f7ff fb54 	bl	8002bfc <_ZN8touchgfx6WidgetC1Ev>
 8003554:	4bca      	ldr	r3, [pc, #808]	@ (8003880 <_ZN13motorViewBaseC1Ev+0x358>)
 8003556:	f64f 75ff 	movw	r5, #65535	@ 0xffff
 800355a:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 800355e:	6423      	str	r3, [r4, #64]	@ 0x40
 8003560:	23ff      	movs	r3, #255	@ 0xff
 8003562:	a90e      	add	r1, sp, #56	@ 0x38
 8003564:	4658      	mov	r0, fp
 8003566:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 800356a:	f104 0acc 	add.w	sl, r4, #204	@ 0xcc
        : color(col)
 800356e:	66a6      	str	r6, [r4, #104]	@ 0x68
 8003570:	f504 7982 	add.w	r9, r4, #260	@ 0x104
 8003574:	f8ad 5038 	strh.w	r5, [sp, #56]	@ 0x38
 8003578:	f7fe fe96 	bl	80022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800357c:	4640      	mov	r0, r8
 800357e:	f7ff ff89 	bl	8003494 <_ZN8touchgfx14AbstractButtonC1Ev>
 8003582:	4bc0      	ldr	r3, [pc, #768]	@ (8003884 <_ZN13motorViewBaseC1Ev+0x35c>)
 8003584:	f8a4 50c6 	strh.w	r5, [r4, #198]	@ 0xc6
 8003588:	4650      	mov	r0, sl
 800358a:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 800358e:	f8a4 50c8 	strh.w	r5, [r4, #200]	@ 0xc8
 8003592:	f884 50ca 	strb.w	r5, [r4, #202]	@ 0xca
 8003596:	f7ff ffb5 	bl	8003504 <_ZN8touchgfx12ToggleButtonC1Ev>
 800359a:	4648      	mov	r0, r9
 800359c:	f7ff ffb2 	bl	8003504 <_ZN8touchgfx12ToggleButtonC1Ev>
 80035a0:	f504 739e 	add.w	r3, r4, #316	@ 0x13c
 80035a4:	4618      	mov	r0, r3
 80035a6:	9303      	str	r3, [sp, #12]
 80035a8:	f7ff ffac 	bl	8003504 <_ZN8touchgfx12ToggleButtonC1Ev>
 80035ac:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 80035b0:	a90e      	add	r1, sp, #56	@ 0x38
 80035b2:	f8ad 5038 	strh.w	r5, [sp, #56]	@ 0x38
 80035b6:	4618      	mov	r0, r3
 80035b8:	9304      	str	r3, [sp, #16]
 80035ba:	f7fe fe75 	bl	80022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80035be:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 80035c2:	a90e      	add	r1, sp, #56	@ 0x38
 80035c4:	f8ad 5038 	strh.w	r5, [sp, #56]	@ 0x38
 80035c8:	4618      	mov	r0, r3
 80035ca:	9305      	str	r3, [sp, #20]
 80035cc:	f7fe fe6c 	bl	80022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80035d0:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 80035d4:	a90e      	add	r1, sp, #56	@ 0x38
 80035d6:	f8ad 5038 	strh.w	r5, [sp, #56]	@ 0x38
 80035da:	4618      	mov	r0, r3
 80035dc:	9306      	str	r3, [sp, #24]
 80035de:	f7fe fe63 	bl	80022a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80035e2:	f504 73fc 	add.w	r3, r4, #504	@ 0x1f8
 80035e6:	1d25      	adds	r5, r4, #4
 80035e8:	4618      	mov	r0, r3
 80035ea:	9300      	str	r3, [sp, #0]
 80035ec:	f7ff ff68 	bl	80034c0 <_ZN8touchgfx8TextAreaC1Ev>
 80035f0:	f504 7310 	add.w	r3, r4, #576	@ 0x240
 80035f4:	4618      	mov	r0, r3
 80035f6:	9301      	str	r3, [sp, #4]
 80035f8:	f7ff ff62 	bl	80034c0 <_ZN8touchgfx8TextAreaC1Ev>
 80035fc:	f504 7322 	add.w	r3, r4, #648	@ 0x288
 8003600:	4618      	mov	r0, r3
 8003602:	9302      	str	r3, [sp, #8]
 8003604:	f7ff ff5c 	bl	80034c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003608:	4b9f      	ldr	r3, [pc, #636]	@ (8003888 <_ZN13motorViewBaseC1Ev+0x360>)
        setXY(x, y);
 800360a:	4632      	mov	r2, r6
 800360c:	4631      	mov	r1, r6
 800360e:	4638      	mov	r0, r7
 8003610:	e9c4 34b4 	strd	r3, r4, [r4, #720]	@ 0x2d0
 8003614:	4b9d      	ldr	r3, [pc, #628]	@ (800388c <_ZN13motorViewBaseC1Ev+0x364>)
 8003616:	e9c4 36b6 	strd	r3, r6, [r4, #728]	@ 0x2d8
 800361a:	f7fe fe38 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800361e:	4638      	mov	r0, r7
 8003620:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8003624:	f7fe fdfa 	bl	800221c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003628:	4638      	mov	r0, r7
 800362a:	f44f 7188 	mov.w	r1, #272	@ 0x110
 800362e:	f7fe fdf7 	bl	8002220 <_ZN8touchgfx8Drawable9setHeightEs>
        color = newColor;
 8003632:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003636:	4639      	mov	r1, r7
 8003638:	4628      	mov	r0, r5
 800363a:	66a3      	str	r3, [r4, #104]	@ 0x68
        alpha = newAlpha;
 800363c:	2796      	movs	r7, #150	@ 0x96
 800363e:	f006 ffc1 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 8003642:	4632      	mov	r2, r6
 8003644:	4631      	mov	r1, r6
 8003646:	4658      	mov	r0, fp
 8003648:	f7fe fe21 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 800364c:	f04f 0301 	mov.w	r3, #1
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_LIGHT_ID));
 8003650:	a90e      	add	r1, sp, #56	@ 0x38
 8003652:	4658      	mov	r0, fp
 8003654:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8003658:	f008 fea9 	bl	800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800365c:	4659      	mov	r1, fp
 800365e:	4628      	mov	r0, r5
 8003660:	f006 ffb0 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    back_main_btn.setXY(425, 5);
 8003664:	4640      	mov	r0, r8
 8003666:	2205      	movs	r2, #5
 8003668:	f240 11a9 	movw	r1, #425	@ 0x1a9
 800366c:	f7fe fe0f 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003670:	2304      	movs	r3, #4
    back_main_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BACK50_ID), touchgfx::Bitmap(BITMAP_BACK50_ID));
 8003672:	aa0e      	add	r2, sp, #56	@ 0x38
 8003674:	a90d      	add	r1, sp, #52	@ 0x34
 8003676:	4640      	mov	r0, r8
 8003678:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800367c:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8003680:	f008 fd77 	bl	800c172 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    back_main_btn.setAction(buttonCallback);
 8003684:	f504 7334 	add.w	r3, r4, #720	@ 0x2d0
 8003688:	4641      	mov	r1, r8
 800368a:	4628      	mov	r0, r5
 800368c:	f04f 0802 	mov.w	r8, #2
        action = &callback;
 8003690:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8003694:	f04f 0b03 	mov.w	fp, #3
 8003698:	f884 70ca 	strb.w	r7, [r4, #202]	@ 0xca
 800369c:	9307      	str	r3, [sp, #28]
 800369e:	f006 ff91 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    air_btn.setXY(275, 28);
 80036a2:	4650      	mov	r0, sl
 80036a4:	221c      	movs	r2, #28
 80036a6:	f240 1113 	movw	r1, #275	@ 0x113
 80036aa:	f7fe fdf0 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 80036ae:	aa0e      	add	r2, sp, #56	@ 0x38
 80036b0:	a90d      	add	r1, sp, #52	@ 0x34
 80036b2:	4650      	mov	r0, sl
        originalPressed = bitmapPressed;
 80036b4:	f8a4 8100 	strh.w	r8, [r4, #256]	@ 0x100
 80036b8:	f8ad b034 	strh.w	fp, [sp, #52]	@ 0x34
 80036bc:	f8ad 8038 	strh.w	r8, [sp, #56]	@ 0x38
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 80036c0:	f008 fd57 	bl	800c172 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80036c4:	4651      	mov	r1, sl
 80036c6:	4628      	mov	r0, r5
 80036c8:	f006 ff7c 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    water_btn.setXY(275, 108);
 80036cc:	4648      	mov	r0, r9
 80036ce:	226c      	movs	r2, #108	@ 0x6c
 80036d0:	f240 1113 	movw	r1, #275	@ 0x113
 80036d4:	f7fe fddb 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 80036d8:	aa0e      	add	r2, sp, #56	@ 0x38
 80036da:	a90d      	add	r1, sp, #52	@ 0x34
 80036dc:	4648      	mov	r0, r9
        originalPressed = bitmapPressed;
 80036de:	f8a4 8138 	strh.w	r8, [r4, #312]	@ 0x138
 80036e2:	f8ad b034 	strh.w	fp, [sp, #52]	@ 0x34
 80036e6:	f8ad 8038 	strh.w	r8, [sp, #56]	@ 0x38
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 80036ea:	f008 fd42 	bl	800c172 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80036ee:	9b07      	ldr	r3, [sp, #28]
 80036f0:	4649      	mov	r1, r9
 80036f2:	4628      	mov	r0, r5
 80036f4:	f04f 090a 	mov.w	r9, #10
 80036f8:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
 80036fc:	f006 ff62 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    led_btn.setXY(275, 188);
 8003700:	9803      	ldr	r0, [sp, #12]
 8003702:	22bc      	movs	r2, #188	@ 0xbc
 8003704:	f240 1113 	movw	r1, #275	@ 0x113
 8003708:	f7fe fdc1 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 800370c:	aa0e      	add	r2, sp, #56	@ 0x38
 800370e:	a90d      	add	r1, sp, #52	@ 0x34
 8003710:	9803      	ldr	r0, [sp, #12]
        originalPressed = bitmapPressed;
 8003712:	f8a4 8170 	strh.w	r8, [r4, #368]	@ 0x170
 8003716:	f8ad b034 	strh.w	fp, [sp, #52]	@ 0x34
 800371a:	f8ad 8038 	strh.w	r8, [sp, #56]	@ 0x38
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800371e:	f008 fd28 	bl	800c172 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003722:	9b07      	ldr	r3, [sp, #28]
 8003724:	4628      	mov	r0, r5
 8003726:	9903      	ldr	r1, [sp, #12]
 8003728:	f8c4 3164 	str.w	r3, [r4, #356]	@ 0x164
 800372c:	f006 ff4a 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    air_back.setXY(85, 25);
 8003730:	2219      	movs	r2, #25
 8003732:	9804      	ldr	r0, [sp, #16]
 8003734:	2155      	movs	r1, #85	@ 0x55
 8003736:	f7fe fdaa 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    air_back.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 800373a:	a90e      	add	r1, sp, #56	@ 0x38
 800373c:	9804      	ldr	r0, [sp, #16]
 800373e:	f8ad 9038 	strh.w	r9, [sp, #56]	@ 0x38
 8003742:	f008 fe34 	bl	800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003746:	9904      	ldr	r1, [sp, #16]
 8003748:	4628      	mov	r0, r5
        alpha = newAlpha;
 800374a:	f884 719c 	strb.w	r7, [r4, #412]	@ 0x19c
 800374e:	f006 ff39 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    water_back.setXY(85, 105);
 8003752:	2269      	movs	r2, #105	@ 0x69
 8003754:	9805      	ldr	r0, [sp, #20]
 8003756:	2155      	movs	r1, #85	@ 0x55
 8003758:	f7fe fd99 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    water_back.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 800375c:	a90e      	add	r1, sp, #56	@ 0x38
 800375e:	9805      	ldr	r0, [sp, #20]
 8003760:	f8ad 9038 	strh.w	r9, [sp, #56]	@ 0x38
 8003764:	f008 fe23 	bl	800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003768:	9905      	ldr	r1, [sp, #20]
 800376a:	4628      	mov	r0, r5
 800376c:	f884 71c8 	strb.w	r7, [r4, #456]	@ 0x1c8
 8003770:	f006 ff28 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    led_back.setXY(85, 185);
 8003774:	22b9      	movs	r2, #185	@ 0xb9
 8003776:	9806      	ldr	r0, [sp, #24]
 8003778:	2155      	movs	r1, #85	@ 0x55
 800377a:	f7fe fd88 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    led_back.setBitmap(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_ID));
 800377e:	a90e      	add	r1, sp, #56	@ 0x38
 8003780:	9806      	ldr	r0, [sp, #24]
 8003782:	f8ad 9038 	strh.w	r9, [sp, #56]	@ 0x38
 8003786:	f008 fe12 	bl	800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800378a:	9906      	ldr	r1, [sp, #24]
 800378c:	4628      	mov	r0, r5
 800378e:	f884 71f4 	strb.w	r7, [r4, #500]	@ 0x1f4
        boundingArea = calculateBoundingArea();
 8003792:	f10d 0920 	add.w	r9, sp, #32
 8003796:	f006 ff15 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    air_motor.setXY(108, 40);
 800379a:	9800      	ldr	r0, [sp, #0]
 800379c:	2228      	movs	r2, #40	@ 0x28
 800379e:	216c      	movs	r1, #108	@ 0x6c
 80037a0:	f7fe fd75 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80037a4:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 80037a8:	9900      	ldr	r1, [sp, #0]
 80037aa:	4648      	mov	r0, r9
        color = newColor;
 80037ac:	f8c4 2228 	str.w	r2, [r4, #552]	@ 0x228
        linespace = space;
 80037b0:	f8a4 622c 	strh.w	r6, [r4, #556]	@ 0x22c
        boundingArea = calculateBoundingArea();
 80037b4:	f008 f9da 	bl	800bb6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80037b8:	f504 730d 	add.w	r3, r4, #564	@ 0x234
 80037bc:	f8df a0d0 	ldr.w	sl, [pc, #208]	@ 8003890 <_ZN13motorViewBaseC1Ev+0x368>
 80037c0:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80037c4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    air_motor.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VK8P));
 80037c8:	a90e      	add	r1, sp, #56	@ 0x38
 80037ca:	9800      	ldr	r0, [sp, #0]
 80037cc:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
 80037d0:	f8ad 803c 	strh.w	r8, [sp, #60]	@ 0x3c
 80037d4:	f008 fc72 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80037d8:	9900      	ldr	r1, [sp, #0]
 80037da:	4628      	mov	r0, r5
        alpha = newAlpha;
 80037dc:	f884 722e 	strb.w	r7, [r4, #558]	@ 0x22e
 80037e0:	f006 fef0 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    led.setXY(138, 202);
 80037e4:	9801      	ldr	r0, [sp, #4]
 80037e6:	22ca      	movs	r2, #202	@ 0xca
 80037e8:	218a      	movs	r1, #138	@ 0x8a
 80037ea:	f7fe fd50 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80037ee:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 80037f2:	9901      	ldr	r1, [sp, #4]
 80037f4:	4648      	mov	r0, r9
        color = newColor;
 80037f6:	f8c4 2270 	str.w	r2, [r4, #624]	@ 0x270
        linespace = space;
 80037fa:	f8a4 6274 	strh.w	r6, [r4, #628]	@ 0x274
        boundingArea = calculateBoundingArea();
 80037fe:	f008 f9b5 	bl	800bb6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003802:	f504 731f 	add.w	r3, r4, #636	@ 0x27c
 8003806:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800380a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800380e:	f04f 0301 	mov.w	r3, #1
    led.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3XZ2));
 8003812:	a90e      	add	r1, sp, #56	@ 0x38
 8003814:	9801      	ldr	r0, [sp, #4]
 8003816:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 800381a:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
 800381e:	f008 fc4d 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003822:	9901      	ldr	r1, [sp, #4]
 8003824:	4628      	mov	r0, r5
        alpha = newAlpha;
 8003826:	f884 7276 	strb.w	r7, [r4, #630]	@ 0x276
 800382a:	f006 fecb 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    water_motor.setXY(94, 121);
 800382e:	2279      	movs	r2, #121	@ 0x79
 8003830:	9802      	ldr	r0, [sp, #8]
 8003832:	215e      	movs	r1, #94	@ 0x5e
 8003834:	f7fe fd2b 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003838:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 800383c:	9902      	ldr	r1, [sp, #8]
 800383e:	4648      	mov	r0, r9
        color = newColor;
 8003840:	f8c4 32b8 	str.w	r3, [r4, #696]	@ 0x2b8
        linespace = space;
 8003844:	f8a4 62bc 	strh.w	r6, [r4, #700]	@ 0x2bc
        boundingArea = calculateBoundingArea();
 8003848:	f008 f990 	bl	800bb6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800384c:	f504 7331 	add.w	r3, r4, #708	@ 0x2c4
 8003850:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8003854:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    water_motor.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CHE4));
 8003858:	a90e      	add	r1, sp, #56	@ 0x38
 800385a:	9802      	ldr	r0, [sp, #8]
 800385c:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
 8003860:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8003864:	f008 fc2a 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003868:	4628      	mov	r0, r5
 800386a:	9902      	ldr	r1, [sp, #8]
        alpha = newAlpha;
 800386c:	f884 72be 	strb.w	r7, [r4, #702]	@ 0x2be
 8003870:	f006 fea8 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003874:	4620      	mov	r0, r4
 8003876:	b011      	add	sp, #68	@ 0x44
 8003878:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800387c:	08020d90 	.word	0x08020d90
 8003880:	08021468 	.word	0x08021468
 8003884:	080214d0 	.word	0x080214d0
 8003888:	08020d78 	.word	0x08020d78
 800388c:	08003459 	.word	0x08003459
 8003890:	08020374 	.word	0x08020374

08003894 <_ZN8touchgfx8TextArea8setWidthEs>:
    virtual void setWidth(int16_t width)
 8003894:	b530      	push	{r4, r5, lr}
 8003896:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8003898:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 800389a:	4604      	mov	r4, r0
        rect.width = width;
 800389c:	8101      	strh	r1, [r0, #8]
        boundingArea = calculateBoundingArea();
 800389e:	466d      	mov	r5, sp
 80038a0:	4601      	mov	r1, r0
 80038a2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80038a6:	343c      	adds	r4, #60	@ 0x3c
 80038a8:	4628      	mov	r0, r5
 80038aa:	4798      	blx	r3
 80038ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80038b0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80038b4:	b005      	add	sp, #20
 80038b6:	bd30      	pop	{r4, r5, pc}

080038b8 <_ZN8touchgfx8TextArea9setHeightEs>:
    virtual void setHeight(int16_t height)
 80038b8:	b530      	push	{r4, r5, lr}
 80038ba:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80038bc:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 80038be:	4604      	mov	r4, r0
        rect.height = height;
 80038c0:	8141      	strh	r1, [r0, #10]
        boundingArea = calculateBoundingArea();
 80038c2:	466d      	mov	r5, sp
 80038c4:	4601      	mov	r1, r0
 80038c6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80038ca:	343c      	adds	r4, #60	@ 0x3c
 80038cc:	4628      	mov	r0, r5
 80038ce:	4798      	blx	r3
 80038d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80038d4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80038d8:	b005      	add	sp, #20
 80038da:	bd30      	pop	{r4, r5, pc}

080038dc <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80038dc:	2200      	movs	r2, #0
 80038de:	8002      	strh	r2, [r0, #0]
 80038e0:	8042      	strh	r2, [r0, #2]
 80038e2:	8082      	strh	r2, [r0, #4]
 80038e4:	80c2      	strh	r2, [r0, #6]
    }
 80038e6:	4770      	bx	lr

080038e8 <_ZN8touchgfx8TextArea8setAlphaEh>:
        alpha = newAlpha;
 80038e8:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 80038ec:	4770      	bx	lr

080038ee <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
 80038ee:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80038f0:	b570      	push	{r4, r5, r6, lr}
 80038f2:	4604      	mov	r4, r0
        setX(x);
 80038f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80038f6:	4615      	mov	r5, r2
        setX(x);
 80038f8:	4798      	blx	r3
        setBaselineY(baselineY);
 80038fa:	6823      	ldr	r3, [r4, #0]
 80038fc:	4620      	mov	r0, r4
 80038fe:	4629      	mov	r1, r5
 8003900:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 8003902:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8003906:	4718      	bx	r3

08003908 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8003908:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 800390a:	4770      	bx	lr

0800390c <_ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard2Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return wc2;
    }
 800390c:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800390e:	4770      	bx	lr

08003910 <_ZN8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003910:	4770      	bx	lr

08003912 <_ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev>:
class TextAreaWithTwoWildcards : public TextAreaWithWildcardBase
 8003912:	4770      	bx	lr

08003914 <_ZN8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003914:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003916:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 8003918:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800391a:	68c2      	ldr	r2, [r0, #12]
 800391c:	689b      	ldr	r3, [r3, #8]
 800391e:	1055      	asrs	r5, r2, #1
 8003920:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003924:	07d2      	lsls	r2, r2, #31
 8003926:	bf48      	it	mi
 8003928:	5962      	ldrmi	r2, [r4, r5]
    }
 800392a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800392c:	bf48      	it	mi
 800392e:	58d3      	ldrmi	r3, [r2, r3]
 8003930:	4718      	bx	r3

08003932 <_ZNK8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8003932:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003934:	6840      	ldr	r0, [r0, #4]
 8003936:	b130      	cbz	r0, 8003946 <_ZNK8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003938:	689a      	ldr	r2, [r3, #8]
 800393a:	b91a      	cbnz	r2, 8003944 <_ZNK8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 800393c:	68d8      	ldr	r0, [r3, #12]
 800393e:	f000 0001 	and.w	r0, r0, #1
 8003942:	4770      	bx	lr
 8003944:	2001      	movs	r0, #1
    }
 8003946:	4770      	bx	lr

08003948 <_ZN8touchgfx24TextAreaWithTwoWildcardsD0Ev>:
 8003948:	b510      	push	{r4, lr}
 800394a:	4604      	mov	r4, r0
 800394c:	2150      	movs	r1, #80	@ 0x50
 800394e:	f01b f840 	bl	801e9d2 <_ZdlPvj>
 8003952:	4620      	mov	r0, r4
 8003954:	bd10      	pop	{r4, pc}

08003956 <_ZN8touchgfx8CallbackI14sensorViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003956:	b510      	push	{r4, lr}
 8003958:	4604      	mov	r4, r0
 800395a:	2110      	movs	r1, #16
 800395c:	f01b f839 	bl	801e9d2 <_ZdlPvj>
 8003960:	4620      	mov	r0, r4
 8003962:	bd10      	pop	{r4, pc}

08003964 <_ZN14sensorViewBase11setupScreenEv>:
{

}

void sensorViewBase::setupScreen()
{
 8003964:	b510      	push	{r4, lr}
 8003966:	4604      	mov	r4, r0
    ex1.initialize();
 8003968:	3098      	adds	r0, #152	@ 0x98
 800396a:	f000 fc77 	bl	800425c <_ZN16CustomContainer110initializeEv>
    ex2.initialize();
 800396e:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 8003972:	f000 fc73 	bl	800425c <_ZN16CustomContainer110initializeEv>
    ex3.initialize();
 8003976:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800397a:	f000 fc6f 	bl	800425c <_ZN16CustomContainer110initializeEv>
    ex4.initialize();
 800397e:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 8003982:	f000 fc6b 	bl	800425c <_ZN16CustomContainer110initializeEv>
    ex5.initialize();
 8003986:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
}
 800398a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ex5.initialize();
 800398e:	f000 bc65 	b.w	800425c <_ZN16CustomContainer110initializeEv>

08003992 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003992:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003994:	f7fe fc6c 	bl	8002270 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003998:	bd08      	pop	{r3, pc}
	...

0800399c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800399c:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800399e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80039a0:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
    virtual void setBaselineY(int16_t baselineY)
 80039a2:	4604      	mov	r4, r0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80039a4:	4b11      	ldr	r3, [pc, #68]	@ (80039ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80039a6:	b28d      	uxth	r5, r1
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	b92b      	cbnz	r3, 80039b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80039ac:	4b10      	ldr	r3, [pc, #64]	@ (80039f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80039ae:	216c      	movs	r1, #108	@ 0x6c
 80039b0:	4a10      	ldr	r2, [pc, #64]	@ (80039f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80039b2:	4811      	ldr	r0, [pc, #68]	@ (80039f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80039b4:	f01b f83c 	bl	801ea30 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80039b8:	4910      	ldr	r1, [pc, #64]	@ (80039fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80039ba:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80039bc:	8809      	ldrh	r1, [r1, #0]
 80039be:	4291      	cmp	r1, r2
 80039c0:	d803      	bhi.n	80039ca <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80039c2:	4b0f      	ldr	r3, [pc, #60]	@ (8003a00 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80039c4:	216d      	movs	r1, #109	@ 0x6d
 80039c6:	4a0b      	ldr	r2, [pc, #44]	@ (80039f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80039c8:	e7f3      	b.n	80039b2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80039ca:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80039ce:	4b0d      	ldr	r3, [pc, #52]	@ (8003a04 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80039d0:	681b      	ldr	r3, [r3, #0]
 80039d2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80039d6:	6803      	ldr	r3, [r0, #0]
 80039d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80039da:	4798      	blx	r3
 80039dc:	1a29      	subs	r1, r5, r0
 80039de:	4633      	mov	r3, r6
 80039e0:	4620      	mov	r0, r4
 80039e2:	b209      	sxth	r1, r1
    }
 80039e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80039e8:	4718      	bx	r3
 80039ea:	bf00      	nop
 80039ec:	200150fc 	.word	0x200150fc
 80039f0:	080209cc 	.word	0x080209cc
 80039f4:	08020a0e 	.word	0x08020a0e
 80039f8:	08020a49 	.word	0x08020a49
 80039fc:	20015100 	.word	0x20015100
 8003a00:	08020dc4 	.word	0x08020dc4
 8003a04:	20015104 	.word	0x20015104

08003a08 <_ZN14sensorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void sensorViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back_main_btn)
 8003a08:	f200 6024 	addw	r0, r0, #1572	@ 0x624
 8003a0c:	4288      	cmp	r0, r1
{
 8003a0e:	b508      	push	{r3, lr}
    if (&src == &back_main_btn)
 8003a10:	d105      	bne.n	8003a1e <_ZN14sensorViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~sensorViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003a12:	f00a fb1d 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
        //back_main
        //When back_main_btn clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    }
}
 8003a16:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMainScreenNoTransition();
 8003a1a:	f7fe bd69 	b.w	80024f0 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
}
 8003a1e:	bd08      	pop	{r3, pc}

08003a20 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003a20:	2200      	movs	r2, #0
 8003a22:	f04f 31ff 	mov.w	r1, #4294967295
              text(0)
 8003a26:	6082      	str	r2, [r0, #8]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003a28:	e9c0 2100 	strd	r2, r1, [r0]
    }
 8003a2c:	4770      	bx	lr

08003a2e <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003a2e:	b570      	push	{r4, r5, r6, lr}
 8003a30:	4604      	mov	r4, r0
 8003a32:	461d      	mov	r5, r3
 8003a34:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003a38:	f7fe fc29 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003a3c:	6823      	ldr	r3, [r4, #0]
 8003a3e:	4629      	mov	r1, r5
 8003a40:	4620      	mov	r0, r4
 8003a42:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003a44:	4798      	blx	r3
        setHeight(height);
 8003a46:	6823      	ldr	r3, [r4, #0]
 8003a48:	4631      	mov	r1, r6
 8003a4a:	4620      	mov	r0, r4
 8003a4c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8003a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8003a52:	4718      	bx	r3

08003a54 <_ZN16CustomContainer1D1Ev>:

class CustomContainer1 : public CustomContainer1Base
{
public:
    CustomContainer1();
    virtual ~CustomContainer1() {}
 8003a54:	4b03      	ldr	r3, [pc, #12]	@ (8003a64 <_ZN16CustomContainer1D1Ev+0x10>)
 8003a56:	b510      	push	{r4, lr}
 8003a58:	4604      	mov	r4, r0
 8003a5a:	6003      	str	r3, [r0, #0]
 8003a5c:	f7fe fbff 	bl	800225e <_ZN20CustomContainer1BaseD1Ev>
 8003a60:	4620      	mov	r0, r4
 8003a62:	bd10      	pop	{r4, pc}
 8003a64:	08020f34 	.word	0x08020f34

08003a68 <_ZN14sensorViewBaseD1Ev>:
sensorViewBase::~sensorViewBase()
 8003a68:	4b0c      	ldr	r3, [pc, #48]	@ (8003a9c <_ZN14sensorViewBaseD1Ev+0x34>)
 8003a6a:	b510      	push	{r4, lr}
 8003a6c:	4604      	mov	r4, r0
 8003a6e:	6003      	str	r3, [r0, #0]
}
 8003a70:	f500 702a 	add.w	r0, r0, #680	@ 0x2a8
 8003a74:	f7ff ffee 	bl	8003a54 <_ZN16CustomContainer1D1Ev>
 8003a78:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 8003a7c:	f7ff ffea 	bl	8003a54 <_ZN16CustomContainer1D1Ev>
 8003a80:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 8003a84:	f7ff ffe6 	bl	8003a54 <_ZN16CustomContainer1D1Ev>
 8003a88:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 8003a8c:	f7ff ffe2 	bl	8003a54 <_ZN16CustomContainer1D1Ev>
 8003a90:	f104 0098 	add.w	r0, r4, #152	@ 0x98
 8003a94:	f7ff ffde 	bl	8003a54 <_ZN16CustomContainer1D1Ev>
 8003a98:	4620      	mov	r0, r4
 8003a9a:	bd10      	pop	{r4, pc}
 8003a9c:	08020f00 	.word	0x08020f00

08003aa0 <_ZN14sensorViewBaseD0Ev>:
sensorViewBase::~sensorViewBase()
 8003aa0:	b510      	push	{r4, lr}
 8003aa2:	4604      	mov	r4, r0
}
 8003aa4:	f7ff ffe0 	bl	8003a68 <_ZN14sensorViewBaseD1Ev>
 8003aa8:	f240 61a4 	movw	r1, #1700	@ 0x6a4
 8003aac:	4620      	mov	r0, r4
 8003aae:	f01a ff90 	bl	801e9d2 <_ZdlPvj>
 8003ab2:	4620      	mov	r0, r4
 8003ab4:	bd10      	pop	{r4, pc}

08003ab6 <_ZN16CustomContainer1D0Ev>:
 8003ab6:	b510      	push	{r4, lr}
 8003ab8:	4604      	mov	r4, r0
 8003aba:	f7ff ffcb 	bl	8003a54 <_ZN16CustomContainer1D1Ev>
 8003abe:	2184      	movs	r1, #132	@ 0x84
 8003ac0:	4620      	mov	r0, r4
 8003ac2:	f01a ff86 	bl	801e9d2 <_ZdlPvj>
 8003ac6:	4620      	mov	r0, r4
 8003ac8:	bd10      	pop	{r4, pc}
	...

08003acc <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>:
    TextAreaWithTwoWildcards()
 8003acc:	b510      	push	{r4, lr}
 8003ace:	4604      	mov	r4, r0
        : TextArea()
 8003ad0:	f7ff fcf6 	bl	80034c0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0), wc2(0)
 8003ad4:	4b03      	ldr	r3, [pc, #12]	@ (8003ae4 <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev+0x18>)
    }
 8003ad6:	4620      	mov	r0, r4
        : TextAreaWithWildcardBase(), wc1(0), wc2(0)
 8003ad8:	6023      	str	r3, [r4, #0]
 8003ada:	2300      	movs	r3, #0
 8003adc:	e9c4 3312 	strd	r3, r3, [r4, #72]	@ 0x48
    }
 8003ae0:	bd10      	pop	{r4, pc}
 8003ae2:	bf00      	nop
 8003ae4:	08020e58 	.word	0x08020e58

08003ae8 <_ZN14sensorViewBaseC1Ev>:
sensorViewBase::sensorViewBase() :
 8003ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003aec:	4604      	mov	r4, r0
 8003aee:	b099      	sub	sp, #100	@ 0x64
 8003af0:	2600      	movs	r6, #0
 8003af2:	f00b fdcd 	bl	800f690 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &sensorViewBase::buttonCallbackHandler)
 8003af6:	4627      	mov	r7, r4
 8003af8:	4bdd      	ldr	r3, [pc, #884]	@ (8003e70 <_ZN14sensorViewBaseC1Ev+0x388>)
        : Widget(), alpha(255), color(0)
 8003afa:	2226      	movs	r2, #38	@ 0x26
 8003afc:	4631      	mov	r1, r6
 8003afe:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8003b00:	f104 056c 	add.w	r5, r4, #108	@ 0x6c
 8003b04:	f847 3b40 	str.w	r3, [r7], #64
 8003b08:	4638      	mov	r0, r7
 8003b0a:	f01b fa2d 	bl	801ef68 <memset>
 8003b0e:	4638      	mov	r0, r7
 8003b10:	f7ff f874 	bl	8002bfc <_ZN8touchgfx6WidgetC1Ev>
 8003b14:	f04f 08ff 	mov.w	r8, #255	@ 0xff
 8003b18:	4bd6      	ldr	r3, [pc, #856]	@ (8003e74 <_ZN14sensorViewBaseC1Ev+0x38c>)
 8003b1a:	f64f 7aff 	movw	sl, #65535	@ 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8003b1e:	2226      	movs	r2, #38	@ 0x26
 8003b20:	4631      	mov	r1, r6
 8003b22:	6423      	str	r3, [r4, #64]	@ 0x40
 8003b24:	4628      	mov	r0, r5
 8003b26:	f884 8066 	strb.w	r8, [r4, #102]	@ 0x66
 8003b2a:	f504 798e 	add.w	r9, r4, #284	@ 0x11c
        : color(col)
 8003b2e:	66a6      	str	r6, [r4, #104]	@ 0x68
 8003b30:	f504 7b4b 	add.w	fp, r4, #812	@ 0x32c
 8003b34:	f8ad a058 	strh.w	sl, [sp, #88]	@ 0x58
 8003b38:	f01b fa16 	bl	801ef68 <memset>
 8003b3c:	4628      	mov	r0, r5
 8003b3e:	f7ff f85d 	bl	8002bfc <_ZN8touchgfx6WidgetC1Ev>
 8003b42:	4acd      	ldr	r2, [pc, #820]	@ (8003e78 <_ZN14sensorViewBaseC1Ev+0x390>)
        Image::setBitmap(bmp);
 8003b44:	a916      	add	r1, sp, #88	@ 0x58
 8003b46:	4628      	mov	r0, r5
        : Widget(), bitmap(bmp), alpha(255)
 8003b48:	66e2      	str	r2, [r4, #108]	@ 0x6c
 8003b4a:	f8bd 2058 	ldrh.w	r2, [sp, #88]	@ 0x58
 8003b4e:	f884 8094 	strb.w	r8, [r4, #148]	@ 0x94
 8003b52:	f504 78d0 	add.w	r8, r4, #416	@ 0x1a0
 8003b56:	f8a4 2092 	strh.w	r2, [r4, #146]	@ 0x92
        Image::setBitmap(bmp);
 8003b5a:	f008 fc28 	bl	800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003b5e:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 8003b62:	4618      	mov	r0, r3
 8003b64:	930d      	str	r3, [sp, #52]	@ 0x34
 8003b66:	f000 fb6f 	bl	8004248 <_ZN16CustomContainer1C1Ev>
 8003b6a:	4648      	mov	r0, r9
 8003b6c:	f000 fb6c 	bl	8004248 <_ZN16CustomContainer1C1Ev>
 8003b70:	4640      	mov	r0, r8
 8003b72:	f000 fb69 	bl	8004248 <_ZN16CustomContainer1C1Ev>
 8003b76:	f504 7309 	add.w	r3, r4, #548	@ 0x224
 8003b7a:	4618      	mov	r0, r3
 8003b7c:	930e      	str	r3, [sp, #56]	@ 0x38
 8003b7e:	f000 fb63 	bl	8004248 <_ZN16CustomContainer1C1Ev>
 8003b82:	f504 732a 	add.w	r3, r4, #680	@ 0x2a8
 8003b86:	4618      	mov	r0, r3
 8003b88:	930f      	str	r3, [sp, #60]	@ 0x3c
 8003b8a:	f000 fb5d 	bl	8004248 <_ZN16CustomContainer1C1Ev>
 8003b8e:	4658      	mov	r0, fp
 8003b90:	f7ff fc96 	bl	80034c0 <_ZN8touchgfx8TextAreaC1Ev>
 8003b94:	f504 735d 	add.w	r3, r4, #884	@ 0x374
 8003b98:	4618      	mov	r0, r3
 8003b9a:	9303      	str	r3, [sp, #12]
 8003b9c:	f7ff fc90 	bl	80034c0 <_ZN8touchgfx8TextAreaC1Ev>
 8003ba0:	f504 736f 	add.w	r3, r4, #956	@ 0x3bc
 8003ba4:	4618      	mov	r0, r3
 8003ba6:	9304      	str	r3, [sp, #16]
 8003ba8:	f7ff fc8a 	bl	80034c0 <_ZN8touchgfx8TextAreaC1Ev>
 8003bac:	f204 4304 	addw	r3, r4, #1028	@ 0x404
 8003bb0:	4618      	mov	r0, r3
 8003bb2:	9305      	str	r3, [sp, #20]
 8003bb4:	f7ff fc84 	bl	80034c0 <_ZN8touchgfx8TextAreaC1Ev>
 8003bb8:	f204 434c 	addw	r3, r4, #1100	@ 0x44c
 8003bbc:	4618      	mov	r0, r3
 8003bbe:	9306      	str	r3, [sp, #24]
 8003bc0:	f7ff fc7e 	bl	80034c0 <_ZN8touchgfx8TextAreaC1Ev>
 8003bc4:	f204 4394 	addw	r3, r4, #1172	@ 0x494
 8003bc8:	4618      	mov	r0, r3
 8003bca:	9307      	str	r3, [sp, #28]
 8003bcc:	f7ff ff7e 	bl	8003acc <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>
 8003bd0:	f204 43e4 	addw	r3, r4, #1252	@ 0x4e4
 8003bd4:	4618      	mov	r0, r3
 8003bd6:	9308      	str	r3, [sp, #32]
 8003bd8:	f7ff ff78 	bl	8003acc <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>
 8003bdc:	f204 5334 	addw	r3, r4, #1332	@ 0x534
 8003be0:	4618      	mov	r0, r3
 8003be2:	930a      	str	r3, [sp, #40]	@ 0x28
 8003be4:	f7ff ff72 	bl	8003acc <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>
 8003be8:	f204 5384 	addw	r3, r4, #1412	@ 0x584
 8003bec:	4618      	mov	r0, r3
 8003bee:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003bf0:	f7ff ff6c 	bl	8003acc <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>
 8003bf4:	f204 53d4 	addw	r3, r4, #1492	@ 0x5d4
 8003bf8:	4618      	mov	r0, r3
 8003bfa:	930c      	str	r3, [sp, #48]	@ 0x30
 8003bfc:	f7ff ff66 	bl	8003acc <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>
 8003c00:	f204 6324 	addw	r3, r4, #1572	@ 0x624
        : Widget(), action(), pressed(false)
 8003c04:	2226      	movs	r2, #38	@ 0x26
 8003c06:	4631      	mov	r1, r6
 8003c08:	4618      	mov	r0, r3
 8003c0a:	9309      	str	r3, [sp, #36]	@ 0x24
 8003c0c:	f01b f9ac 	bl	801ef68 <memset>
 8003c10:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003c12:	f7fe fff3 	bl	8002bfc <_ZN8touchgfx6WidgetC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003c16:	4b99      	ldr	r3, [pc, #612]	@ (8003e7c <_ZN14sensorViewBaseC1Ev+0x394>)
        touchable = touch;
 8003c18:	2201      	movs	r2, #1
    __background.setPosition(0, 0, 480, 272);
 8003c1a:	4638      	mov	r0, r7
 8003c1c:	f8c4 3694 	str.w	r3, [r4, #1684]	@ 0x694
 8003c20:	4631      	mov	r1, r6
 8003c22:	4b97      	ldr	r3, [pc, #604]	@ (8003e80 <_ZN14sensorViewBaseC1Ev+0x398>)
 8003c24:	f884 2648 	strb.w	r2, [r4, #1608]	@ 0x648
 8003c28:	f8c4 369c 	str.w	r3, [r4, #1692]	@ 0x69c
 8003c2c:	f44f 7388 	mov.w	r3, #272	@ 0x110
        : AbstractButton(), up(), down(), alpha(255)
 8003c30:	4a94      	ldr	r2, [pc, #592]	@ (8003e84 <_ZN14sensorViewBaseC1Ev+0x39c>)
 8003c32:	f8a4 a652 	strh.w	sl, [r4, #1618]	@ 0x652
 8003c36:	f8c4 2624 	str.w	r2, [r4, #1572]	@ 0x624
 8003c3a:	4632      	mov	r2, r6
 8003c3c:	f8a4 a654 	strh.w	sl, [r4, #1620]	@ 0x654
 8003c40:	f884 a656 	strb.w	sl, [r4, #1622]	@ 0x656
 8003c44:	f104 0a04 	add.w	sl, r4, #4
 8003c48:	f8c4 664c 	str.w	r6, [r4, #1612]	@ 0x64c
 8003c4c:	f884 6650 	strb.w	r6, [r4, #1616]	@ 0x650
 8003c50:	f8c4 4698 	str.w	r4, [r4, #1688]	@ 0x698
 8003c54:	f8c4 66a0 	str.w	r6, [r4, #1696]	@ 0x6a0
 8003c58:	9300      	str	r3, [sp, #0]
 8003c5a:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8003c5e:	f7ff fee6 	bl	8003a2e <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003c62:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003c66:	4639      	mov	r1, r7
 8003c68:	4650      	mov	r0, sl
 8003c6a:	66a3      	str	r3, [r4, #104]	@ 0x68
        alpha = newAlpha;
 8003c6c:	2796      	movs	r7, #150	@ 0x96
 8003c6e:	f006 fca9 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 8003c72:	4632      	mov	r2, r6
 8003c74:	4628      	mov	r0, r5
 8003c76:	4631      	mov	r1, r6
 8003c78:	f7fe fb09 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_DARK_ID));
 8003c7c:	4628      	mov	r0, r5
 8003c7e:	a916      	add	r1, sp, #88	@ 0x58
 8003c80:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
 8003c84:	f008 fb93 	bl	800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003c88:	4629      	mov	r1, r5
 8003c8a:	4650      	mov	r0, sl
        boundingArea = calculateBoundingArea();
 8003c8c:	ad10      	add	r5, sp, #64	@ 0x40
 8003c8e:	f006 fc99 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex1.setXY(100, 15);
 8003c92:	220f      	movs	r2, #15
 8003c94:	2164      	movs	r1, #100	@ 0x64
 8003c96:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8003c98:	f7fe faf9 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003c9c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8003c9e:	4650      	mov	r0, sl
 8003ca0:	f006 fc90 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex2.setXY(250, 15);
 8003ca4:	220f      	movs	r2, #15
 8003ca6:	4648      	mov	r0, r9
 8003ca8:	21fa      	movs	r1, #250	@ 0xfa
 8003caa:	f7fe faf0 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003cae:	4649      	mov	r1, r9
 8003cb0:	4650      	mov	r0, sl
        color = newColor;
 8003cb2:	f04f 39ff 	mov.w	r9, #4294967295
 8003cb6:	f006 fc85 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex3.setXY(25, 145);
 8003cba:	2291      	movs	r2, #145	@ 0x91
 8003cbc:	4640      	mov	r0, r8
 8003cbe:	2119      	movs	r1, #25
 8003cc0:	f7fe fae5 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003cc4:	4641      	mov	r1, r8
 8003cc6:	4650      	mov	r0, sl
    temperature.setPosition(106, 19, 120, 40);
 8003cc8:	f04f 0828 	mov.w	r8, #40	@ 0x28
 8003ccc:	f006 fc7a 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex4.setXY(175, 145);
 8003cd0:	2291      	movs	r2, #145	@ 0x91
 8003cd2:	21af      	movs	r1, #175	@ 0xaf
 8003cd4:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8003cd6:	f7fe fada 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003cda:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8003cdc:	4650      	mov	r0, sl
 8003cde:	f006 fc71 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ex5.setXY(325, 145);
 8003ce2:	2291      	movs	r2, #145	@ 0x91
 8003ce4:	f240 1145 	movw	r1, #325	@ 0x145
 8003ce8:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8003cea:	f7fe fad0 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8003cee:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8003cf0:	4650      	mov	r0, sl
 8003cf2:	f006 fc67 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temperature.setPosition(106, 19, 120, 40);
 8003cf6:	2378      	movs	r3, #120	@ 0x78
 8003cf8:	2213      	movs	r2, #19
 8003cfa:	216a      	movs	r1, #106	@ 0x6a
 8003cfc:	4658      	mov	r0, fp
 8003cfe:	f8cd 8000 	str.w	r8, [sp]
 8003d02:	f7ff fe94 	bl	8003a2e <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003d06:	4659      	mov	r1, fp
 8003d08:	4628      	mov	r0, r5
        color = newColor;
 8003d0a:	f8c4 935c 	str.w	r9, [r4, #860]	@ 0x35c
        linespace = space;
 8003d0e:	f8a4 6360 	strh.w	r6, [r4, #864]	@ 0x360
        boundingArea = calculateBoundingArea();
 8003d12:	f007 ff2b 	bl	800bb6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003d16:	f504 735a 	add.w	r3, r4, #872	@ 0x368
 8003d1a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003d22:	4b59      	ldr	r3, [pc, #356]	@ (8003e88 <_ZN14sensorViewBaseC1Ev+0x3a0>)
    temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NNZ2));
 8003d24:	a916      	add	r1, sp, #88	@ 0x58
 8003d26:	4658      	mov	r0, fp
 8003d28:	9316      	str	r3, [sp, #88]	@ 0x58
 8003d2a:	2317      	movs	r3, #23
 8003d2c:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003d30:	f008 f9c4 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003d34:	4659      	mov	r1, fp
 8003d36:	4650      	mov	r0, sl
        alpha = newAlpha;
 8003d38:	f884 7362 	strb.w	r7, [r4, #866]	@ 0x362
 8003d3c:	f006 fc42 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    humidity.setPosition(256, 19, 120, 40);
 8003d40:	2378      	movs	r3, #120	@ 0x78
 8003d42:	2213      	movs	r2, #19
 8003d44:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003d48:	9803      	ldr	r0, [sp, #12]
 8003d4a:	f8cd 8000 	str.w	r8, [sp]
 8003d4e:	f7ff fe6e 	bl	8003a2e <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003d52:	9903      	ldr	r1, [sp, #12]
 8003d54:	4628      	mov	r0, r5
        color = newColor;
 8003d56:	f8c4 93a4 	str.w	r9, [r4, #932]	@ 0x3a4
        linespace = space;
 8003d5a:	f8a4 63a8 	strh.w	r6, [r4, #936]	@ 0x3a8
        boundingArea = calculateBoundingArea();
 8003d5e:	f007 ff05 	bl	800bb6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003d62:	f504 736c 	add.w	r3, r4, #944	@ 0x3b0
 8003d66:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d6a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003d6e:	4b46      	ldr	r3, [pc, #280]	@ (8003e88 <_ZN14sensorViewBaseC1Ev+0x3a0>)
    humidity.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JSNQ));
 8003d70:	a916      	add	r1, sp, #88	@ 0x58
 8003d72:	9803      	ldr	r0, [sp, #12]
 8003d74:	9316      	str	r3, [sp, #88]	@ 0x58
 8003d76:	2316      	movs	r3, #22
 8003d78:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003d7c:	f008 f99e 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003d80:	9903      	ldr	r1, [sp, #12]
 8003d82:	4650      	mov	r0, sl
        alpha = newAlpha;
 8003d84:	f884 73aa 	strb.w	r7, [r4, #938]	@ 0x3aa
 8003d88:	f006 fc1c 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ph.setPosition(29, 149, 120, 40);
 8003d8c:	2378      	movs	r3, #120	@ 0x78
 8003d8e:	2295      	movs	r2, #149	@ 0x95
 8003d90:	211d      	movs	r1, #29
 8003d92:	9804      	ldr	r0, [sp, #16]
 8003d94:	f8cd 8000 	str.w	r8, [sp]
 8003d98:	f7ff fe49 	bl	8003a2e <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003d9c:	9904      	ldr	r1, [sp, #16]
 8003d9e:	4628      	mov	r0, r5
        color = newColor;
 8003da0:	f8c4 93ec 	str.w	r9, [r4, #1004]	@ 0x3ec
        linespace = space;
 8003da4:	f8a4 63f0 	strh.w	r6, [r4, #1008]	@ 0x3f0
        boundingArea = calculateBoundingArea();
 8003da8:	f007 fee0 	bl	800bb6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003dac:	f504 737e 	add.w	r3, r4, #1016	@ 0x3f8
 8003db0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003db4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003db8:	4b33      	ldr	r3, [pc, #204]	@ (8003e88 <_ZN14sensorViewBaseC1Ev+0x3a0>)
    ph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HHCR));
 8003dba:	a916      	add	r1, sp, #88	@ 0x58
 8003dbc:	9804      	ldr	r0, [sp, #16]
 8003dbe:	9316      	str	r3, [sp, #88]	@ 0x58
 8003dc0:	2315      	movs	r3, #21
 8003dc2:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003dc6:	f008 f979 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003dca:	9904      	ldr	r1, [sp, #16]
 8003dcc:	4650      	mov	r0, sl
        alpha = newAlpha;
 8003dce:	f884 73f2 	strb.w	r7, [r4, #1010]	@ 0x3f2
 8003dd2:	f006 fbf7 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tds.setPosition(181, 149, 120, 40);
 8003dd6:	2378      	movs	r3, #120	@ 0x78
 8003dd8:	2295      	movs	r2, #149	@ 0x95
 8003dda:	21b5      	movs	r1, #181	@ 0xb5
 8003ddc:	9805      	ldr	r0, [sp, #20]
 8003dde:	f8cd 8000 	str.w	r8, [sp]
 8003de2:	f7ff fe24 	bl	8003a2e <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003de6:	9905      	ldr	r1, [sp, #20]
 8003de8:	4628      	mov	r0, r5
        color = newColor;
 8003dea:	f8c4 9434 	str.w	r9, [r4, #1076]	@ 0x434
        linespace = space;
 8003dee:	f8a4 6438 	strh.w	r6, [r4, #1080]	@ 0x438
        boundingArea = calculateBoundingArea();
 8003df2:	f007 febb 	bl	800bb6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003df6:	f504 6388 	add.w	r3, r4, #1088	@ 0x440
 8003dfa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003dfe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003e02:	4b21      	ldr	r3, [pc, #132]	@ (8003e88 <_ZN14sensorViewBaseC1Ev+0x3a0>)
    tds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_44AS));
 8003e04:	a916      	add	r1, sp, #88	@ 0x58
 8003e06:	9805      	ldr	r0, [sp, #20]
 8003e08:	9316      	str	r3, [sp, #88]	@ 0x58
 8003e0a:	2314      	movs	r3, #20
 8003e0c:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003e10:	f008 f954 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e14:	9905      	ldr	r1, [sp, #20]
 8003e16:	4650      	mov	r0, sl
        alpha = newAlpha;
 8003e18:	f884 743a 	strb.w	r7, [r4, #1082]	@ 0x43a
 8003e1c:	f006 fbd2 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    level.setPosition(331, 149, 120, 40);
 8003e20:	2378      	movs	r3, #120	@ 0x78
 8003e22:	2295      	movs	r2, #149	@ 0x95
 8003e24:	f240 114b 	movw	r1, #331	@ 0x14b
 8003e28:	9806      	ldr	r0, [sp, #24]
 8003e2a:	f8cd 8000 	str.w	r8, [sp]
 8003e2e:	f7ff fdfe 	bl	8003a2e <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003e32:	9906      	ldr	r1, [sp, #24]
 8003e34:	4628      	mov	r0, r5
        color = newColor;
 8003e36:	f8c4 947c 	str.w	r9, [r4, #1148]	@ 0x47c
        linespace = space;
 8003e3a:	f8a4 6480 	strh.w	r6, [r4, #1152]	@ 0x480
        boundingArea = calculateBoundingArea();
 8003e3e:	f007 fe95 	bl	800bb6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003e42:	f504 6391 	add.w	r3, r4, #1160	@ 0x488
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e46:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 8003e8c <_ZN14sensorViewBaseC1Ev+0x3a4>
 8003e4a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003e4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003e52:	4b0d      	ldr	r3, [pc, #52]	@ (8003e88 <_ZN14sensorViewBaseC1Ev+0x3a0>)
    level.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1AZS));
 8003e54:	a916      	add	r1, sp, #88	@ 0x58
 8003e56:	9806      	ldr	r0, [sp, #24]
 8003e58:	9316      	str	r3, [sp, #88]	@ 0x58
 8003e5a:	2313      	movs	r3, #19
 8003e5c:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8003e60:	f008 f92c 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e64:	9906      	ldr	r1, [sp, #24]
 8003e66:	4650      	mov	r0, sl
        alpha = newAlpha;
 8003e68:	f884 7482 	strb.w	r7, [r4, #1154]	@ 0x482
 8003e6c:	e010      	b.n	8003e90 <_ZN14sensorViewBaseC1Ev+0x3a8>
 8003e6e:	bf00      	nop
 8003e70:	08020f00 	.word	0x08020f00
 8003e74:	08021468 	.word	0x08021468
 8003e78:	08021544 	.word	0x08021544
 8003e7c:	08020ee8 	.word	0x08020ee8
 8003e80:	08003a09 	.word	0x08003a09
 8003e84:	080214d0 	.word	0x080214d0
 8003e88:	08020374 	.word	0x08020374
 8003e8c:	200150fc 	.word	0x200150fc
 8003e90:	f006 fb98 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_temperature.setPosition(140, 85, 50, 25);
 8003e94:	2319      	movs	r3, #25
 8003e96:	2255      	movs	r2, #85	@ 0x55
 8003e98:	218c      	movs	r1, #140	@ 0x8c
 8003e9a:	9807      	ldr	r0, [sp, #28]
 8003e9c:	9300      	str	r3, [sp, #0]
 8003e9e:	2332      	movs	r3, #50	@ 0x32
 8003ea0:	f7ff fdc5 	bl	8003a2e <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003ea4:	f8d4 3494 	ldr.w	r3, [r4, #1172]	@ 0x494
 8003ea8:	9907      	ldr	r1, [sp, #28]
 8003eaa:	4628      	mov	r0, r5
 8003eac:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8003eb0:	f8c4 94c4 	str.w	r9, [r4, #1220]	@ 0x4c4
        linespace = space;
 8003eb4:	f8a4 64c8 	strh.w	r6, [r4, #1224]	@ 0x4c8
        boundingArea = calculateBoundingArea();
 8003eb8:	4798      	blx	r3
 8003eba:	f504 639a 	add.w	r3, r4, #1232	@ 0x4d0
 8003ebe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ec2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    touchgfx::Unicode::snprintf(text_temperatureBuffer1, TEXT_TEMPERATUREBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7798).getText());
 8003ec6:	f504 63cb 	add.w	r3, r4, #1624	@ 0x658
 8003eca:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ecc:	f8d8 3000 	ldr.w	r3, [r8]
 8003ed0:	b92b      	cbnz	r3, 8003ede <_ZN14sensorViewBaseC1Ev+0x3f6>
 8003ed2:	4b07      	ldr	r3, [pc, #28]	@ (8003ef0 <_ZN14sensorViewBaseC1Ev+0x408>)
 8003ed4:	2160      	movs	r1, #96	@ 0x60
 8003ed6:	4a07      	ldr	r2, [pc, #28]	@ (8003ef4 <_ZN14sensorViewBaseC1Ev+0x40c>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ed8:	4807      	ldr	r0, [pc, #28]	@ (8003ef8 <_ZN14sensorViewBaseC1Ev+0x410>)
 8003eda:	f01a fda9 	bl	801ea30 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003ede:	4f07      	ldr	r7, [pc, #28]	@ (8003efc <_ZN14sensorViewBaseC1Ev+0x414>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ee0:	883b      	ldrh	r3, [r7, #0]
 8003ee2:	2b09      	cmp	r3, #9
 8003ee4:	d80e      	bhi.n	8003f04 <_ZN14sensorViewBaseC1Ev+0x41c>
 8003ee6:	4b06      	ldr	r3, [pc, #24]	@ (8003f00 <_ZN14sensorViewBaseC1Ev+0x418>)
 8003ee8:	2161      	movs	r1, #97	@ 0x61
 8003eea:	4a02      	ldr	r2, [pc, #8]	@ (8003ef4 <_ZN14sensorViewBaseC1Ev+0x40c>)
 8003eec:	e7f4      	b.n	8003ed8 <_ZN14sensorViewBaseC1Ev+0x3f0>
 8003eee:	bf00      	nop
 8003ef0:	080209cc 	.word	0x080209cc
 8003ef4:	08020e02 	.word	0x08020e02
 8003ef8:	08020a49 	.word	0x08020a49
 8003efc:	20015100 	.word	0x20015100
 8003f00:	08020dc4 	.word	0x08020dc4
        return texts->getText(typedTextId);
 8003f04:	f8df b33c 	ldr.w	fp, [pc, #828]	@ 8004244 <_ZN14sensorViewBaseC1Ev+0x75c>
 8003f08:	2109      	movs	r1, #9
 8003f0a:	f8db 0000 	ldr.w	r0, [fp]
 8003f0e:	f7ff f973 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 8003f12:	4ac8      	ldr	r2, [pc, #800]	@ (8004234 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003f14:	4603      	mov	r3, r0
 8003f16:	2103      	movs	r1, #3
 8003f18:	9803      	ldr	r0, [sp, #12]
 8003f1a:	f00d f84f 	bl	8010fbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003f1e:	9b03      	ldr	r3, [sp, #12]
 8003f20:	f8c4 34dc 	str.w	r3, [r4, #1244]	@ 0x4dc
    touchgfx::Unicode::snprintf(text_temperatureBuffer2, TEXT_TEMPERATUREBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IQT9).getText());
 8003f24:	f204 635e 	addw	r3, r4, #1630	@ 0x65e
 8003f28:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003f2a:	f8d8 3000 	ldr.w	r3, [r8]
 8003f2e:	2b00      	cmp	r3, #0
 8003f30:	d0cf      	beq.n	8003ed2 <_ZN14sensorViewBaseC1Ev+0x3ea>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003f32:	883b      	ldrh	r3, [r7, #0]
 8003f34:	2b0a      	cmp	r3, #10
 8003f36:	d9d6      	bls.n	8003ee6 <_ZN14sensorViewBaseC1Ev+0x3fe>
        return texts->getText(typedTextId);
 8003f38:	210a      	movs	r1, #10
 8003f3a:	f8db 0000 	ldr.w	r0, [fp]
 8003f3e:	f7ff f95b 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 8003f42:	4abc      	ldr	r2, [pc, #752]	@ (8004234 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003f44:	4603      	mov	r3, r0
 8003f46:	2103      	movs	r1, #3
 8003f48:	9803      	ldr	r0, [sp, #12]
 8003f4a:	f00d f837 	bl	8010fbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc2 = value;
 8003f4e:	9b03      	ldr	r3, [sp, #12]
        : typedTextId(id)
 8003f50:	f04f 0219 	mov.w	r2, #25
    text_temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MTPN));
 8003f54:	a916      	add	r1, sp, #88	@ 0x58
 8003f56:	f8c4 34e0 	str.w	r3, [r4, #1248]	@ 0x4e0
 8003f5a:	4bb7      	ldr	r3, [pc, #732]	@ (8004238 <_ZN14sensorViewBaseC1Ev+0x750>)
 8003f5c:	9807      	ldr	r0, [sp, #28]
 8003f5e:	9316      	str	r3, [sp, #88]	@ 0x58
 8003f60:	f8ad 205c 	strh.w	r2, [sp, #92]	@ 0x5c
 8003f64:	f008 f8aa 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003f68:	9907      	ldr	r1, [sp, #28]
 8003f6a:	4650      	mov	r0, sl
 8003f6c:	f006 fb2a 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_humidity.setPosition(290, 85, 50, 25);
 8003f70:	2219      	movs	r2, #25
 8003f72:	2332      	movs	r3, #50	@ 0x32
 8003f74:	f44f 7191 	mov.w	r1, #290	@ 0x122
 8003f78:	9808      	ldr	r0, [sp, #32]
 8003f7a:	9200      	str	r2, [sp, #0]
 8003f7c:	2255      	movs	r2, #85	@ 0x55
 8003f7e:	f7ff fd56 	bl	8003a2e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f82:	f8d4 34e4 	ldr.w	r3, [r4, #1252]	@ 0x4e4
 8003f86:	4628      	mov	r0, r5
 8003f88:	9908      	ldr	r1, [sp, #32]
 8003f8a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8003f8e:	f8c4 9514 	str.w	r9, [r4, #1300]	@ 0x514
        linespace = space;
 8003f92:	f8a4 6518 	strh.w	r6, [r4, #1304]	@ 0x518
        boundingArea = calculateBoundingArea();
 8003f96:	4798      	blx	r3
 8003f98:	f504 63a4 	add.w	r3, r4, #1312	@ 0x520
 8003f9c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003fa0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003fa4:	f8d8 3000 	ldr.w	r3, [r8]
    touchgfx::Unicode::snprintf(text_humidityBuffer1, TEXT_HUMIDITYBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_F69V).getText());
 8003fa8:	f204 6564 	addw	r5, r4, #1636	@ 0x664
 8003fac:	2b00      	cmp	r3, #0
 8003fae:	d090      	beq.n	8003ed2 <_ZN14sensorViewBaseC1Ev+0x3ea>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003fb0:	883b      	ldrh	r3, [r7, #0]
 8003fb2:	2b08      	cmp	r3, #8
 8003fb4:	d997      	bls.n	8003ee6 <_ZN14sensorViewBaseC1Ev+0x3fe>
        return texts->getText(typedTextId);
 8003fb6:	2108      	movs	r1, #8
 8003fb8:	f8db 0000 	ldr.w	r0, [fp]
 8003fbc:	f7ff f91c 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 8003fc0:	4a9c      	ldr	r2, [pc, #624]	@ (8004234 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003fc2:	4603      	mov	r3, r0
 8003fc4:	2103      	movs	r1, #3
 8003fc6:	4628      	mov	r0, r5
 8003fc8:	f00c fff8 	bl	8010fbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003fcc:	f8d8 3000 	ldr.w	r3, [r8]
        wc1 = value;
 8003fd0:	f8c4 552c 	str.w	r5, [r4, #1324]	@ 0x52c
    touchgfx::Unicode::snprintf(text_humidityBuffer2, TEXT_HUMIDITYBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_W9Z7).getText());
 8003fd4:	f204 656a 	addw	r5, r4, #1642	@ 0x66a
 8003fd8:	2b00      	cmp	r3, #0
 8003fda:	f43f af7a 	beq.w	8003ed2 <_ZN14sensorViewBaseC1Ev+0x3ea>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003fde:	883b      	ldrh	r3, [r7, #0]
 8003fe0:	2b11      	cmp	r3, #17
 8003fe2:	d980      	bls.n	8003ee6 <_ZN14sensorViewBaseC1Ev+0x3fe>
        return texts->getText(typedTextId);
 8003fe4:	2111      	movs	r1, #17
 8003fe6:	f8db 0000 	ldr.w	r0, [fp]
 8003fea:	f7ff f905 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 8003fee:	4a91      	ldr	r2, [pc, #580]	@ (8004234 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8003ff0:	4603      	mov	r3, r0
 8003ff2:	2103      	movs	r1, #3
 8003ff4:	4628      	mov	r0, r5
 8003ff6:	f00c ffe1 	bl	8010fbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003ffa:	4b8f      	ldr	r3, [pc, #572]	@ (8004238 <_ZN14sensorViewBaseC1Ev+0x750>)
    text_humidity.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D9RX));
 8003ffc:	a916      	add	r1, sp, #88	@ 0x58
 8003ffe:	9808      	ldr	r0, [sp, #32]
 8004000:	9316      	str	r3, [sp, #88]	@ 0x58
 8004002:	2312      	movs	r3, #18
        wc2 = value;
 8004004:	f8c4 5530 	str.w	r5, [r4, #1328]	@ 0x530
    touchgfx::Unicode::snprintf(text_phBuffer1, TEXT_PHBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LXQ5).getText());
 8004008:	f504 65ce 	add.w	r5, r4, #1648	@ 0x670
 800400c:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
    text_humidity.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D9RX));
 8004010:	f008 f854 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004014:	9908      	ldr	r1, [sp, #32]
 8004016:	4650      	mov	r0, sl
 8004018:	f006 fad4 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_ph.setPosition(65, 215, 50, 25);
 800401c:	2219      	movs	r2, #25
 800401e:	2332      	movs	r3, #50	@ 0x32
 8004020:	2141      	movs	r1, #65	@ 0x41
 8004022:	9200      	str	r2, [sp, #0]
 8004024:	22d7      	movs	r2, #215	@ 0xd7
 8004026:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004028:	f7ff fd01 	bl	8003a2e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800402c:	f8d8 3000 	ldr.w	r3, [r8]
        color = newColor;
 8004030:	f8c4 9564 	str.w	r9, [r4, #1380]	@ 0x564
        linespace = space;
 8004034:	f8a4 6568 	strh.w	r6, [r4, #1384]	@ 0x568
        boundingArea = calculateBoundingArea();
 8004038:	f8c4 6570 	str.w	r6, [r4, #1392]	@ 0x570
 800403c:	f8c4 9574 	str.w	r9, [r4, #1396]	@ 0x574
 8004040:	f8c4 6578 	str.w	r6, [r4, #1400]	@ 0x578
 8004044:	2b00      	cmp	r3, #0
 8004046:	f43f af44 	beq.w	8003ed2 <_ZN14sensorViewBaseC1Ev+0x3ea>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800404a:	883b      	ldrh	r3, [r7, #0]
 800404c:	2b07      	cmp	r3, #7
 800404e:	f67f af4a 	bls.w	8003ee6 <_ZN14sensorViewBaseC1Ev+0x3fe>
        return texts->getText(typedTextId);
 8004052:	2107      	movs	r1, #7
 8004054:	f8db 0000 	ldr.w	r0, [fp]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004058:	4f78      	ldr	r7, [pc, #480]	@ (800423c <_ZN14sensorViewBaseC1Ev+0x754>)
        return texts->getText(typedTextId);
 800405a:	f7ff f8cd 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
    touchgfx::Unicode::snprintf(text_phBuffer1, TEXT_PHBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LXQ5).getText());
 800405e:	4a75      	ldr	r2, [pc, #468]	@ (8004234 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8004060:	4603      	mov	r3, r0
 8004062:	2103      	movs	r1, #3
 8004064:	4628      	mov	r0, r5
 8004066:	f00c ffa9 	bl	8010fbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800406a:	683b      	ldr	r3, [r7, #0]
        wc1 = value;
 800406c:	f8c4 557c 	str.w	r5, [r4, #1404]	@ 0x57c
        return texts->getText(typedTextId);
 8004070:	46d8      	mov	r8, fp
    touchgfx::Unicode::snprintf(text_phBuffer2, TEXT_PHBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0F5D).getText());
 8004072:	f204 6576 	addw	r5, r4, #1654	@ 0x676
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004076:	2b00      	cmp	r3, #0
 8004078:	f43f af2b 	beq.w	8003ed2 <_ZN14sensorViewBaseC1Ev+0x3ea>
        return typedTextId < numberOfTypedTexts;
 800407c:	4e70      	ldr	r6, [pc, #448]	@ (8004240 <_ZN14sensorViewBaseC1Ev+0x758>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800407e:	8833      	ldrh	r3, [r6, #0]
 8004080:	2b0f      	cmp	r3, #15
 8004082:	f67f af30 	bls.w	8003ee6 <_ZN14sensorViewBaseC1Ev+0x3fe>
        return texts->getText(typedTextId);
 8004086:	210f      	movs	r1, #15
 8004088:	f8db 0000 	ldr.w	r0, [fp]
 800408c:	f7ff f8b4 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 8004090:	4a68      	ldr	r2, [pc, #416]	@ (8004234 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8004092:	4603      	mov	r3, r0
 8004094:	2103      	movs	r1, #3
 8004096:	4628      	mov	r0, r5
        color = newColor;
 8004098:	f04f 39ff 	mov.w	r9, #4294967295
 800409c:	f00c ff8e 	bl	8010fbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80040a0:	4b65      	ldr	r3, [pc, #404]	@ (8004238 <_ZN14sensorViewBaseC1Ev+0x750>)
    text_ph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WQQ5));
 80040a2:	a916      	add	r1, sp, #88	@ 0x58
 80040a4:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80040a6:	9316      	str	r3, [sp, #88]	@ 0x58
 80040a8:	2310      	movs	r3, #16
        wc2 = value;
 80040aa:	f8c4 5580 	str.w	r5, [r4, #1408]	@ 0x580
        linespace = space;
 80040ae:	2500      	movs	r5, #0
 80040b0:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 80040b4:	f008 f802 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80040b8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80040ba:	4650      	mov	r0, sl
 80040bc:	f006 fa82 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_tds.setPosition(215, 215, 50, 25);
 80040c0:	2219      	movs	r2, #25
 80040c2:	2332      	movs	r3, #50	@ 0x32
 80040c4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80040c6:	9200      	str	r2, [sp, #0]
 80040c8:	22d7      	movs	r2, #215	@ 0xd7
    touchgfx::Unicode::snprintf(text_tdsBuffer1, TEXT_TDSBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PYMH).getText());
 80040ca:	f204 6b7c 	addw	fp, r4, #1660	@ 0x67c
    text_tds.setPosition(215, 215, 50, 25);
 80040ce:	4611      	mov	r1, r2
 80040d0:	f7ff fcad 	bl	8003a2e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80040d4:	683b      	ldr	r3, [r7, #0]
        color = newColor;
 80040d6:	f8c4 95b4 	str.w	r9, [r4, #1460]	@ 0x5b4
        linespace = space;
 80040da:	f8a4 55b8 	strh.w	r5, [r4, #1464]	@ 0x5b8
        boundingArea = calculateBoundingArea();
 80040de:	f8c4 55c0 	str.w	r5, [r4, #1472]	@ 0x5c0
 80040e2:	f8c4 95c4 	str.w	r9, [r4, #1476]	@ 0x5c4
 80040e6:	f8c4 55c8 	str.w	r5, [r4, #1480]	@ 0x5c8
 80040ea:	2b00      	cmp	r3, #0
 80040ec:	f43f aef1 	beq.w	8003ed2 <_ZN14sensorViewBaseC1Ev+0x3ea>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80040f0:	8833      	ldrh	r3, [r6, #0]
 80040f2:	2b06      	cmp	r3, #6
 80040f4:	f67f aef7 	bls.w	8003ee6 <_ZN14sensorViewBaseC1Ev+0x3fe>
        return texts->getText(typedTextId);
 80040f8:	2106      	movs	r1, #6
 80040fa:	f8d8 0000 	ldr.w	r0, [r8]
 80040fe:	f7ff f87b 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
    touchgfx::Unicode::snprintf(text_tdsBuffer1, TEXT_TDSBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PYMH).getText());
 8004102:	4a4c      	ldr	r2, [pc, #304]	@ (8004234 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8004104:	4603      	mov	r3, r0
 8004106:	2103      	movs	r1, #3
 8004108:	4658      	mov	r0, fp
 800410a:	f00c ff57 	bl	8010fbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800410e:	683b      	ldr	r3, [r7, #0]
        wc1 = value;
 8004110:	f8c4 b5cc 	str.w	fp, [r4, #1484]	@ 0x5cc
    touchgfx::Unicode::snprintf(text_tdsBuffer2, TEXT_TDSBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_K2TB).getText());
 8004114:	f204 6b82 	addw	fp, r4, #1666	@ 0x682
 8004118:	2b00      	cmp	r3, #0
 800411a:	f43f aeda 	beq.w	8003ed2 <_ZN14sensorViewBaseC1Ev+0x3ea>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800411e:	8833      	ldrh	r3, [r6, #0]
 8004120:	2b0d      	cmp	r3, #13
 8004122:	f67f aee0 	bls.w	8003ee6 <_ZN14sensorViewBaseC1Ev+0x3fe>
        return texts->getText(typedTextId);
 8004126:	210d      	movs	r1, #13
 8004128:	f8d8 0000 	ldr.w	r0, [r8]
 800412c:	f7ff f864 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 8004130:	4a40      	ldr	r2, [pc, #256]	@ (8004234 <_ZN14sensorViewBaseC1Ev+0x74c>)
 8004132:	4603      	mov	r3, r0
 8004134:	2103      	movs	r1, #3
 8004136:	4658      	mov	r0, fp
 8004138:	f00c ff40 	bl	8010fbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800413c:	4b3e      	ldr	r3, [pc, #248]	@ (8004238 <_ZN14sensorViewBaseC1Ev+0x750>)
    text_tds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EHW8));
 800413e:	a916      	add	r1, sp, #88	@ 0x58
 8004140:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8004142:	9316      	str	r3, [sp, #88]	@ 0x58
 8004144:	230e      	movs	r3, #14
        wc2 = value;
 8004146:	f8c4 b5d0 	str.w	fp, [r4, #1488]	@ 0x5d0
 800414a:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 800414e:	f007 ffb5 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004152:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004154:	4650      	mov	r0, sl
 8004156:	f006 fa35 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    text_level.setPosition(366, 215, 50, 25);
 800415a:	2319      	movs	r3, #25
 800415c:	22d7      	movs	r2, #215	@ 0xd7
 800415e:	f44f 71b7 	mov.w	r1, #366	@ 0x16e
 8004162:	9300      	str	r3, [sp, #0]
 8004164:	2332      	movs	r3, #50	@ 0x32
 8004166:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8004168:	f7ff fc61 	bl	8003a2e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800416c:	683b      	ldr	r3, [r7, #0]
        linespace = space;
 800416e:	f8a4 5608 	strh.w	r5, [r4, #1544]	@ 0x608
        boundingArea = calculateBoundingArea();
 8004172:	f8c4 5610 	str.w	r5, [r4, #1552]	@ 0x610
 8004176:	f8c4 5618 	str.w	r5, [r4, #1560]	@ 0x618
    touchgfx::Unicode::snprintf(text_levelBuffer1, TEXT_LEVELBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Z25Q).getText());
 800417a:	f504 65d1 	add.w	r5, r4, #1672	@ 0x688
        color = newColor;
 800417e:	f8c4 9604 	str.w	r9, [r4, #1540]	@ 0x604
        boundingArea = calculateBoundingArea();
 8004182:	f8c4 9614 	str.w	r9, [r4, #1556]	@ 0x614
 8004186:	2b00      	cmp	r3, #0
 8004188:	f43f aea3 	beq.w	8003ed2 <_ZN14sensorViewBaseC1Ev+0x3ea>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800418c:	8833      	ldrh	r3, [r6, #0]
 800418e:	2b05      	cmp	r3, #5
 8004190:	f67f aea9 	bls.w	8003ee6 <_ZN14sensorViewBaseC1Ev+0x3fe>
        return texts->getText(typedTextId);
 8004194:	2105      	movs	r1, #5
 8004196:	f8d8 0000 	ldr.w	r0, [r8]
 800419a:	f7ff f82d 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 800419e:	4a25      	ldr	r2, [pc, #148]	@ (8004234 <_ZN14sensorViewBaseC1Ev+0x74c>)
 80041a0:	4603      	mov	r3, r0
 80041a2:	2103      	movs	r1, #3
 80041a4:	4628      	mov	r0, r5
 80041a6:	f00c ff09 	bl	8010fbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80041aa:	683b      	ldr	r3, [r7, #0]
        wc1 = value;
 80041ac:	f8c4 561c 	str.w	r5, [r4, #1564]	@ 0x61c
    touchgfx::Unicode::snprintf(text_levelBuffer2, TEXT_LEVELBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7RKY).getText());
 80041b0:	f204 658e 	addw	r5, r4, #1678	@ 0x68e
 80041b4:	2b00      	cmp	r3, #0
 80041b6:	f43f ae8c 	beq.w	8003ed2 <_ZN14sensorViewBaseC1Ev+0x3ea>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80041ba:	8833      	ldrh	r3, [r6, #0]
 80041bc:	2b0b      	cmp	r3, #11
 80041be:	f67f ae92 	bls.w	8003ee6 <_ZN14sensorViewBaseC1Ev+0x3fe>
        return texts->getText(typedTextId);
 80041c2:	210b      	movs	r1, #11
 80041c4:	f8d8 0000 	ldr.w	r0, [r8]
 80041c8:	f7ff f816 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 80041cc:	4a19      	ldr	r2, [pc, #100]	@ (8004234 <_ZN14sensorViewBaseC1Ev+0x74c>)
 80041ce:	4603      	mov	r3, r0
 80041d0:	2103      	movs	r1, #3
 80041d2:	4628      	mov	r0, r5
 80041d4:	f00c fef2 	bl	8010fbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80041d8:	4b17      	ldr	r3, [pc, #92]	@ (8004238 <_ZN14sensorViewBaseC1Ev+0x750>)
    text_level.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I690));
 80041da:	a916      	add	r1, sp, #88	@ 0x58
 80041dc:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80041de:	9316      	str	r3, [sp, #88]	@ 0x58
 80041e0:	230c      	movs	r3, #12
        wc2 = value;
 80041e2:	f8c4 5620 	str.w	r5, [r4, #1568]	@ 0x620
 80041e6:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 80041ea:	f007 ff67 	bl	800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80041ee:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80041f0:	4650      	mov	r0, sl
 80041f2:	f006 f9e7 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    back_main_btn.setXY(425, 5);
 80041f6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80041f8:	2205      	movs	r2, #5
 80041fa:	f240 11a9 	movw	r1, #425	@ 0x1a9
 80041fe:	f7fe f846 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 8004202:	2304      	movs	r3, #4
    back_main_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BACK50_ID), touchgfx::Bitmap(BITMAP_BACK50_ID));
 8004204:	aa16      	add	r2, sp, #88	@ 0x58
 8004206:	a915      	add	r1, sp, #84	@ 0x54
 8004208:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800420a:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 800420e:	f8ad 3058 	strh.w	r3, [sp, #88]	@ 0x58
 8004212:	f007 ffae 	bl	800c172 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        alpha = newAlpha;
 8004216:	2396      	movs	r3, #150	@ 0x96
 8004218:	4650      	mov	r0, sl
 800421a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800421c:	f884 3656 	strb.w	r3, [r4, #1622]	@ 0x656
    back_main_btn.setAction(buttonCallback);
 8004220:	f204 6394 	addw	r3, r4, #1684	@ 0x694
        action = &callback;
 8004224:	f8c4 364c 	str.w	r3, [r4, #1612]	@ 0x64c
 8004228:	f006 f9cc 	bl	800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800422c:	4620      	mov	r0, r4
 800422e:	b019      	add	sp, #100	@ 0x64
 8004230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004234:	08020e4d 	.word	0x08020e4d
 8004238:	08020374 	.word	0x08020374
 800423c:	200150fc 	.word	0x200150fc
 8004240:	20015100 	.word	0x20015100
 8004244:	20015108 	.word	0x20015108

08004248 <_ZN16CustomContainer1C1Ev>:
#include <gui/containers/CustomContainer1.hpp>

CustomContainer1::CustomContainer1()
 8004248:	b510      	push	{r4, lr}
 800424a:	4604      	mov	r4, r0
 800424c:	f7fe f848 	bl	80022e0 <_ZN20CustomContainer1BaseC1Ev>
 8004250:	4b01      	ldr	r3, [pc, #4]	@ (8004258 <_ZN16CustomContainer1C1Ev+0x10>)
{

}
 8004252:	4620      	mov	r0, r4
CustomContainer1::CustomContainer1()
 8004254:	6023      	str	r3, [r4, #0]
}
 8004256:	bd10      	pop	{r4, pc}
 8004258:	08020f34 	.word	0x08020f34

0800425c <_ZN16CustomContainer110initializeEv>:

void CustomContainer1::initialize()
{
    CustomContainer1Base::initialize();
 800425c:	f7fe b800 	b.w	8002260 <_ZN20CustomContainer1Base10initializeEv>

08004260 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004260:	4770      	bx	lr

08004262 <_ZN19FrontendApplicationD0Ev>:
 8004262:	b510      	push	{r4, lr}
 8004264:	4604      	mov	r4, r0
 8004266:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800426a:	f01a fbb2 	bl	801e9d2 <_ZdlPvj>
 800426e:	4620      	mov	r0, r4
 8004270:	bd10      	pop	{r4, pc}

08004272 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004272:	b510      	push	{r4, lr}
 8004274:	4604      	mov	r4, r0
    {
        model.tick();
 8004276:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 800427a:	f000 f864 	bl	8004346 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800427e:	4620      	mov	r0, r4
    }
 8004280:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004284:	f009 bf66 	b.w	800e154 <_ZN8touchgfx11Application15handleTickEventEv>

08004288 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004288:	b510      	push	{r4, lr}
 800428a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800428c:	f7fe f900 	bl	8002490 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004290:	4b01      	ldr	r3, [pc, #4]	@ (8004298 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8004292:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 8004294:	6023      	str	r3, [r4, #0]
}
 8004296:	bd10      	pop	{r4, pc}
 8004298:	08020fc8 	.word	0x08020fc8

0800429c <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 800429c:	4770      	bx	lr

0800429e <_ZThn4_N13MainPresenterD1Ev>:
 800429e:	3804      	subs	r0, #4
 80042a0:	4770      	bx	lr

080042a2 <_ZN13MainPresenter10deactivateEv>:
}

void MainPresenter::activate()
{

}
 80042a2:	4770      	bx	lr

080042a4 <_ZN13MainPresenterD0Ev>:
 80042a4:	b510      	push	{r4, lr}
 80042a6:	4604      	mov	r4, r0
 80042a8:	2110      	movs	r1, #16
 80042aa:	f01a fb92 	bl	801e9d2 <_ZdlPvj>
 80042ae:	4620      	mov	r0, r4
 80042b0:	bd10      	pop	{r4, pc}

080042b2 <_ZThn4_N13MainPresenterD0Ev>:
 80042b2:	f1a0 0004 	sub.w	r0, r0, #4
 80042b6:	e7f5      	b.n	80042a4 <_ZN13MainPresenterD0Ev>

080042b8 <_ZN13MainPresenter9con_sh_bcEv>:

}

void MainPresenter::con_sh_bc()
{
	model->clicked_button();
 80042b8:	6880      	ldr	r0, [r0, #8]
 80042ba:	f000 b845 	b.w	8004348 <_ZN5Model14clicked_buttonEv>
	...

080042c0 <_ZN13MainPresenterC1ER8MainView>:
    ModelListener() : model(0) {}
 80042c0:	2200      	movs	r2, #0
    : view(v)
 80042c2:	60c1      	str	r1, [r0, #12]
 80042c4:	6082      	str	r2, [r0, #8]
 80042c6:	4a02      	ldr	r2, [pc, #8]	@ (80042d0 <_ZN13MainPresenterC1ER8MainView+0x10>)
 80042c8:	6002      	str	r2, [r0, #0]
 80042ca:	3220      	adds	r2, #32
 80042cc:	6042      	str	r2, [r0, #4]
}
 80042ce:	4770      	bx	lr
 80042d0:	0802101c 	.word	0x0802101c

080042d4 <_ZN8MainView14tearDownScreenEv>:
}

void MainView::tearDownScreen()
{
    MainViewBase::tearDownScreen();
}
 80042d4:	4770      	bx	lr

080042d6 <_ZN8MainView15handleTickEventEv>:

void MainView::handleTickEvent()
{
    tickCounter++;
 80042d6:	f8d0 31b4 	ldr.w	r3, [r0, #436]	@ 0x1b4
 80042da:	3301      	adds	r3, #1
 80042dc:	f8c0 31b4 	str.w	r3, [r0, #436]	@ 0x1b4
    presenter->tick();
 80042e0:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 80042e2:	6803      	ldr	r3, [r0, #0]
 80042e4:	691b      	ldr	r3, [r3, #16]
 80042e6:	4718      	bx	r3

080042e8 <_ZN8MainView18sliderValueChangedEi>:
}

void MainView::sliderValueChanged(int value)
{

}
 80042e8:	4770      	bx	lr

080042ea <_ZN8MainView10send_helloEv>:

void MainView::send_hello()
{
	presenter->con_sh_bc();
 80042ea:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 80042ec:	6803      	ldr	r3, [r0, #0]
 80042ee:	695b      	ldr	r3, [r3, #20]
 80042f0:	4718      	bx	r3
	...

080042f4 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    virtual ~MainView() {}
 80042f4:	4b03      	ldr	r3, [pc, #12]	@ (8004304 <_ZN8MainViewD1Ev+0x10>)
 80042f6:	b510      	push	{r4, lr}
 80042f8:	4604      	mov	r4, r0
 80042fa:	6003      	str	r3, [r0, #0]
 80042fc:	f7fe fc33 	bl	8002b66 <_ZN12MainViewBaseD1Ev>
 8004300:	4620      	mov	r0, r4
 8004302:	bd10      	pop	{r4, pc}
 8004304:	0802104c 	.word	0x0802104c

08004308 <_ZN8MainViewD0Ev>:
 8004308:	b510      	push	{r4, lr}
 800430a:	4604      	mov	r4, r0
 800430c:	f7ff fff2 	bl	80042f4 <_ZN8MainViewD1Ev>
 8004310:	f44f 71dc 	mov.w	r1, #440	@ 0x1b8
 8004314:	4620      	mov	r0, r4
 8004316:	f01a fb5c 	bl	801e9d2 <_ZdlPvj>
 800431a:	4620      	mov	r0, r4
 800431c:	bd10      	pop	{r4, pc}
	...

08004320 <_ZN8MainViewC1Ev>:
MainView::MainView()
 8004320:	b510      	push	{r4, lr}
 8004322:	4604      	mov	r4, r0
 8004324:	f7fe fcbe 	bl	8002ca4 <_ZN12MainViewBaseC1Ev>
 8004328:	4b03      	ldr	r3, [pc, #12]	@ (8004338 <_ZN8MainViewC1Ev+0x18>)
}
 800432a:	4620      	mov	r0, r4
MainView::MainView()
 800432c:	6023      	str	r3, [r4, #0]
    tickCounter = 0;
 800432e:	2300      	movs	r3, #0
 8004330:	f8c4 31b4 	str.w	r3, [r4, #436]	@ 0x1b4
}
 8004334:	bd10      	pop	{r4, pc}
 8004336:	bf00      	nop
 8004338:	0802104c 	.word	0x0802104c

0800433c <_ZN8MainView11setupScreenEv>:
    MainViewBase::setupScreen();
 800433c:	f7fe bc14 	b.w	8002b68 <_ZN12MainViewBase11setupScreenEv>

08004340 <_ZN5ModelC1Ev>:
extern void send_turnoff_water(void);
extern void send_turnon_water(void);
extern void send_turnoff_led(void);
extern void send_turnon_led(void);

Model::Model() : modelListener(0)
 8004340:	2200      	movs	r2, #0
 8004342:	6002      	str	r2, [r0, #0]
{

}
 8004344:	4770      	bx	lr

08004346 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8004346:	4770      	bx	lr

08004348 <_ZN5Model14clicked_buttonEv>:

void Model::clicked_button()
 8004348:	4770      	bx	lr

0800434a <_ZN5Model9send_blueEv>:
	waterButtonClicked;
	ledButtonClicked;
}

void Model::send_blue()
{
 800434a:	b508      	push	{r3, lr}
	send_turnoff_air();
 800434c:	f7fc fc5e 	bl	8000c0c <_Z16send_turnoff_airv>
	send_turnon_air();
 8004350:	f7fc fc72 	bl	8000c38 <_Z15send_turnon_airv>
	send_turnoff_water();
 8004354:	f7fc fc86 	bl	8000c64 <_Z18send_turnoff_waterv>
	send_turnon_water();
 8004358:	f7fc fc9a 	bl	8000c90 <_Z17send_turnon_waterv>
	send_turnoff_led();
 800435c:	f7fc fcae 	bl	8000cbc <_Z16send_turnoff_ledv>
	send_turnon_led();
}
 8004360:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	send_turnon_led();
 8004364:	f7fc bcc0 	b.w	8000ce8 <_Z15send_turnon_ledv>

08004368 <_ZN15configPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~configPresenter() {}
 8004368:	4770      	bx	lr

0800436a <_ZThn4_N15configPresenterD1Ev>:
 800436a:	3804      	subs	r0, #4
 800436c:	4770      	bx	lr

0800436e <_ZN15configPresenter10deactivateEv>:
}

void configPresenter::activate()
{

}
 800436e:	4770      	bx	lr

08004370 <_ZN15configPresenterD0Ev>:
 8004370:	b510      	push	{r4, lr}
 8004372:	4604      	mov	r4, r0
 8004374:	2110      	movs	r1, #16
 8004376:	f01a fb2c 	bl	801e9d2 <_ZdlPvj>
 800437a:	4620      	mov	r0, r4
 800437c:	bd10      	pop	{r4, pc}

0800437e <_ZThn4_N15configPresenterD0Ev>:
 800437e:	f1a0 0004 	sub.w	r0, r0, #4
 8004382:	e7f5      	b.n	8004370 <_ZN15configPresenterD0Ev>

08004384 <_ZN15configPresenterC1ER10configView>:
 8004384:	2200      	movs	r2, #0
    : view(v)
 8004386:	60c1      	str	r1, [r0, #12]
 8004388:	6082      	str	r2, [r0, #8]
 800438a:	4a02      	ldr	r2, [pc, #8]	@ (8004394 <_ZN15configPresenterC1ER10configView+0x10>)
 800438c:	6002      	str	r2, [r0, #0]
 800438e:	3218      	adds	r2, #24
 8004390:	6042      	str	r2, [r0, #4]
}
 8004392:	4770      	bx	lr
 8004394:	08021088 	.word	0x08021088

08004398 <_ZN10configView14tearDownScreenEv>:
}

void configView::tearDownScreen()
{
    configViewBase::tearDownScreen();
}
 8004398:	4770      	bx	lr
	...

0800439c <_ZN10configViewD1Ev>:

class configView : public configViewBase
{
public:
    configView();
    virtual ~configView() {}
 800439c:	4b03      	ldr	r3, [pc, #12]	@ (80043ac <_ZN10configViewD1Ev+0x10>)
 800439e:	b510      	push	{r4, lr}
 80043a0:	4604      	mov	r4, r0
 80043a2:	6003      	str	r3, [r0, #0]
 80043a4:	f7fe ff4a 	bl	800323c <_ZN14configViewBaseD1Ev>
 80043a8:	4620      	mov	r0, r4
 80043aa:	bd10      	pop	{r4, pc}
 80043ac:	080210b0 	.word	0x080210b0

080043b0 <_ZN10configViewD0Ev>:
 80043b0:	b510      	push	{r4, lr}
 80043b2:	4604      	mov	r4, r0
 80043b4:	f7ff fff2 	bl	800439c <_ZN10configViewD1Ev>
 80043b8:	21dc      	movs	r1, #220	@ 0xdc
 80043ba:	4620      	mov	r0, r4
 80043bc:	f01a fb09 	bl	801e9d2 <_ZdlPvj>
 80043c0:	4620      	mov	r0, r4
 80043c2:	bd10      	pop	{r4, pc}

080043c4 <_ZN10configViewC1Ev>:
configView::configView()
 80043c4:	b510      	push	{r4, lr}
 80043c6:	4604      	mov	r4, r0
 80043c8:	f7fe ff6e 	bl	80032a8 <_ZN14configViewBaseC1Ev>
 80043cc:	4b01      	ldr	r3, [pc, #4]	@ (80043d4 <_ZN10configViewC1Ev+0x10>)
}
 80043ce:	4620      	mov	r0, r4
configView::configView()
 80043d0:	6023      	str	r3, [r4, #0]
}
 80043d2:	bd10      	pop	{r4, pc}
 80043d4:	080210b0 	.word	0x080210b0

080043d8 <_ZN10configView11setupScreenEv>:
    configViewBase::setupScreen();
 80043d8:	f7fe bf31 	b.w	800323e <_ZN14configViewBase11setupScreenEv>

080043dc <_ZN14motorPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~motorPresenter() {}
 80043dc:	4770      	bx	lr

080043de <_ZThn4_N14motorPresenterD1Ev>:
 80043de:	3804      	subs	r0, #4
 80043e0:	4770      	bx	lr

080043e2 <_ZN14motorPresenter10deactivateEv>:
}

void motorPresenter::activate()
{

}
 80043e2:	4770      	bx	lr

080043e4 <_ZN14motorPresenterD0Ev>:
 80043e4:	b510      	push	{r4, lr}
 80043e6:	4604      	mov	r4, r0
 80043e8:	2110      	movs	r1, #16
 80043ea:	f01a faf2 	bl	801e9d2 <_ZdlPvj>
 80043ee:	4620      	mov	r0, r4
 80043f0:	bd10      	pop	{r4, pc}

080043f2 <_ZThn4_N14motorPresenterD0Ev>:
 80043f2:	f1a0 0004 	sub.w	r0, r0, #4
 80043f6:	e7f5      	b.n	80043e4 <_ZN14motorPresenterD0Ev>

080043f8 <_ZN14motorPresenter8setstateEb>:
	{
		model->send_blue();
	}
	else
	{
		model->send_blue();
 80043f8:	6880      	ldr	r0, [r0, #8]
 80043fa:	f7ff bfa6 	b.w	800434a <_ZN5Model9send_blueEv>
	...

08004400 <_ZN14motorPresenterC1ER9motorView>:
 8004400:	2200      	movs	r2, #0
    : view(v)
 8004402:	60c1      	str	r1, [r0, #12]
 8004404:	6082      	str	r2, [r0, #8]
 8004406:	4a02      	ldr	r2, [pc, #8]	@ (8004410 <_ZN14motorPresenterC1ER9motorView+0x10>)
 8004408:	6002      	str	r2, [r0, #0]
 800440a:	321c      	adds	r2, #28
 800440c:	6042      	str	r2, [r0, #4]
}
 800440e:	4770      	bx	lr
 8004410:	080210e4 	.word	0x080210e4

08004414 <_ZN9motorView14tearDownScreenEv>:
}

void motorView::tearDownScreen()
{
    motorViewBase::tearDownScreen();
}
 8004414:	4770      	bx	lr

08004416 <_ZN8touchgfx8CallbackI9motorViewRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004416:	4770      	bx	lr

08004418 <_ZN8touchgfx8CallbackI9motorViewRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004418:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800441a:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 800441c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800441e:	68c2      	ldr	r2, [r0, #12]
 8004420:	689b      	ldr	r3, [r3, #8]
 8004422:	1055      	asrs	r5, r2, #1
 8004424:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004428:	07d2      	lsls	r2, r2, #31
 800442a:	bf48      	it	mi
 800442c:	5962      	ldrmi	r2, [r4, r5]
    }
 800442e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004430:	bf48      	it	mi
 8004432:	58d3      	ldrmi	r3, [r2, r3]
 8004434:	4718      	bx	r3

08004436 <_ZNK8touchgfx8CallbackI9motorViewRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8004436:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8004438:	6840      	ldr	r0, [r0, #4]
 800443a:	b130      	cbz	r0, 800444a <_ZNK8touchgfx8CallbackI9motorViewRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800443c:	689a      	ldr	r2, [r3, #8]
 800443e:	b91a      	cbnz	r2, 8004448 <_ZNK8touchgfx8CallbackI9motorViewRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8004440:	68d8      	ldr	r0, [r3, #12]
 8004442:	f000 0001 	and.w	r0, r0, #1
 8004446:	4770      	bx	lr
 8004448:	2001      	movs	r0, #1
    }
 800444a:	4770      	bx	lr

0800444c <_ZN8touchgfx8CallbackI9motorViewRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800444c:	b510      	push	{r4, lr}
 800444e:	4604      	mov	r4, r0
 8004450:	2110      	movs	r1, #16
 8004452:	f01a fabe 	bl	801e9d2 <_ZdlPvj>
 8004456:	4620      	mov	r0, r4
 8004458:	bd10      	pop	{r4, pc}
	...

0800445c <_ZN9motorViewD1Ev>:

class motorView : public motorViewBase
{
public:
    motorView();
    virtual ~motorView() {}
 800445c:	4b03      	ldr	r3, [pc, #12]	@ (800446c <_ZN9motorViewD1Ev+0x10>)
 800445e:	b510      	push	{r4, lr}
 8004460:	4604      	mov	r4, r0
 8004462:	6003      	str	r3, [r0, #0]
 8004464:	f7fe ffcc 	bl	8003400 <_ZN13motorViewBaseD1Ev>
 8004468:	4620      	mov	r0, r4
 800446a:	bd10      	pop	{r4, pc}
 800446c:	08021128 	.word	0x08021128

08004470 <_ZN9motorViewD0Ev>:
 8004470:	b510      	push	{r4, lr}
 8004472:	4604      	mov	r4, r0
 8004474:	f7ff fff2 	bl	800445c <_ZN9motorViewD1Ev>
 8004478:	f44f 7144 	mov.w	r1, #784	@ 0x310
 800447c:	4620      	mov	r0, r4
 800447e:	f01a faa8 	bl	801e9d2 <_ZdlPvj>
 8004482:	4620      	mov	r0, r4
 8004484:	bd10      	pop	{r4, pc}
	...

08004488 <_ZN9motorViewC1Ev>:
motorView::motorView()
 8004488:	b510      	push	{r4, lr}
 800448a:	4604      	mov	r4, r0
 800448c:	f7ff f84c 	bl	8003528 <_ZN13motorViewBaseC1Ev>
 8004490:	4b09      	ldr	r3, [pc, #36]	@ (80044b8 <_ZN9motorViewC1Ev+0x30>)
        : pobject(0), pmemfun(0)
 8004492:	4a0a      	ldr	r2, [pc, #40]	@ (80044bc <_ZN9motorViewC1Ev+0x34>)
}
 8004494:	4620      	mov	r0, r4
motorView::motorView()
 8004496:	6023      	str	r3, [r4, #0]
 8004498:	2300      	movs	r3, #0
 800449a:	f8c4 22e0 	str.w	r2, [r4, #736]	@ 0x2e0
 800449e:	f8c4 330c 	str.w	r3, [r4, #780]	@ 0x30c
 80044a2:	e9c4 33b9 	strd	r3, r3, [r4, #740]	@ 0x2e4
 80044a6:	e9c4 32bb 	strd	r3, r2, [r4, #748]	@ 0x2ec
 80044aa:	e9c4 33bd 	strd	r3, r3, [r4, #756]	@ 0x2f4
 80044ae:	e9c4 32bf 	strd	r3, r2, [r4, #764]	@ 0x2fc
 80044b2:	e9c4 33c1 	strd	r3, r3, [r4, #772]	@ 0x304
}
 80044b6:	bd10      	pop	{r4, pc}
 80044b8:	08021128 	.word	0x08021128
 80044bc:	08021110 	.word	0x08021110

080044c0 <_ZN9motorView11setupScreenEv>:
{
 80044c0:	b510      	push	{r4, lr}
 80044c2:	4604      	mov	r4, r0
    motorViewBase::setupScreen();
 80044c4:	f7fe ff9d 	bl	8003402 <_ZN13motorViewBase11setupScreenEv>
    air_btn.setAction(airButtonCallback); // air_btn 클릭 이벤트 설정
 80044c8:	f504 7338 	add.w	r3, r4, #736	@ 0x2e0
 80044cc:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
    water_btn.setAction(waterButtonCallback); // air_btn 클릭 이벤트 설정
 80044d0:	f504 733c 	add.w	r3, r4, #752	@ 0x2f0
 80044d4:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
    led_btn.setAction(ledButtonCallback); // air_btn 클릭 이벤트 설정
 80044d8:	f504 7340 	add.w	r3, r4, #768	@ 0x300
 80044dc:	f8c4 3164 	str.w	r3, [r4, #356]	@ 0x164
}
 80044e0:	bd10      	pop	{r4, pc}

080044e2 <_ZN15sensorPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();
    virtual void tick();
    virtual ~sensorPresenter() {}
 80044e2:	4770      	bx	lr

080044e4 <_ZThn4_N15sensorPresenterD1Ev>:
 80044e4:	3804      	subs	r0, #4
 80044e6:	4770      	bx	lr

080044e8 <_ZN15sensorPresenter10deactivateEv>:
}

void sensorPresenter::activate()
{

}
 80044e8:	4770      	bx	lr

080044ea <_ZN15sensorPresenterD0Ev>:
 80044ea:	b510      	push	{r4, lr}
 80044ec:	4604      	mov	r4, r0
 80044ee:	2110      	movs	r1, #16
 80044f0:	f01a fa6f 	bl	801e9d2 <_ZdlPvj>
 80044f4:	4620      	mov	r0, r4
 80044f6:	bd10      	pop	{r4, pc}

080044f8 <_ZThn4_N15sensorPresenterD0Ev>:
 80044f8:	f1a0 0004 	sub.w	r0, r0, #4
 80044fc:	e7f5      	b.n	80044ea <_ZN15sensorPresenterD0Ev>
	...

08004500 <_ZN15sensorPresenter4tickEv>:
{

}

void sensorPresenter::tick()
{
 8004500:	b537      	push	{r0, r1, r2, r4, r5, lr}
	if(strncmp(rx_data,"S1",2)==0){
 8004502:	4c40      	ldr	r4, [pc, #256]	@ (8004604 <_ZN15sensorPresenter4tickEv+0x104>)
{
 8004504:	4605      	mov	r5, r0
	if(strncmp(rx_data,"S1",2)==0){
 8004506:	2202      	movs	r2, #2
 8004508:	493f      	ldr	r1, [pc, #252]	@ (8004608 <_ZN15sensorPresenter4tickEv+0x108>)
 800450a:	4620      	mov	r0, r4
 800450c:	f01a fd34 	bl	801ef78 <strncmp>
 8004510:	b998      	cbnz	r0, 800453a <_ZN15sensorPresenter4tickEv+0x3a>
		char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004512:	78a3      	ldrb	r3, [r4, #2]
		view.s1_update_text(change_data, 4);
 8004514:	2204      	movs	r2, #4
 8004516:	68e8      	ldr	r0, [r5, #12]
		char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004518:	f88d 3004 	strb.w	r3, [sp, #4]
		view.s1_update_text(change_data, 4);
 800451c:	eb0d 0102 	add.w	r1, sp, r2
		char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004520:	78e3      	ldrb	r3, [r4, #3]
 8004522:	f88d 3005 	strb.w	r3, [sp, #5]
 8004526:	7923      	ldrb	r3, [r4, #4]
 8004528:	f88d 3006 	strb.w	r3, [sp, #6]
 800452c:	7963      	ldrb	r3, [r4, #5]
 800452e:	f88d 3007 	strb.w	r3, [sp, #7]
		view.s1_update_text(change_data, 4);
 8004532:	f000 f8ad 	bl	8004690 <_ZN10sensorView14s1_update_textEPKct>
		}
	else if(strncmp(rx_data,"S5",2)==0){
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
			view.s5_update_text(change_data, 4);
		}
}
 8004536:	b003      	add	sp, #12
 8004538:	bd30      	pop	{r4, r5, pc}
	else if(strncmp(rx_data,"S2",2)==0){
 800453a:	2202      	movs	r2, #2
 800453c:	4933      	ldr	r1, [pc, #204]	@ (800460c <_ZN15sensorPresenter4tickEv+0x10c>)
 800453e:	4620      	mov	r0, r4
 8004540:	f01a fd1a 	bl	801ef78 <strncmp>
 8004544:	b990      	cbnz	r0, 800456c <_ZN15sensorPresenter4tickEv+0x6c>
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004546:	78a3      	ldrb	r3, [r4, #2]
			view.s2_update_text(change_data, 4);
 8004548:	2204      	movs	r2, #4
 800454a:	68e8      	ldr	r0, [r5, #12]
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 800454c:	f88d 3004 	strb.w	r3, [sp, #4]
			view.s2_update_text(change_data, 4);
 8004550:	eb0d 0102 	add.w	r1, sp, r2
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004554:	78e3      	ldrb	r3, [r4, #3]
 8004556:	f88d 3005 	strb.w	r3, [sp, #5]
 800455a:	7923      	ldrb	r3, [r4, #4]
 800455c:	f88d 3006 	strb.w	r3, [sp, #6]
 8004560:	7963      	ldrb	r3, [r4, #5]
 8004562:	f88d 3007 	strb.w	r3, [sp, #7]
			view.s2_update_text(change_data, 4);
 8004566:	f000 f8b8 	bl	80046da <_ZN10sensorView14s2_update_textEPKct>
 800456a:	e7e4      	b.n	8004536 <_ZN15sensorPresenter4tickEv+0x36>
	else if(strncmp(rx_data,"S3",2)==0){
 800456c:	2202      	movs	r2, #2
 800456e:	4928      	ldr	r1, [pc, #160]	@ (8004610 <_ZN15sensorPresenter4tickEv+0x110>)
 8004570:	4620      	mov	r0, r4
 8004572:	f01a fd01 	bl	801ef78 <strncmp>
 8004576:	b990      	cbnz	r0, 800459e <_ZN15sensorPresenter4tickEv+0x9e>
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004578:	78a3      	ldrb	r3, [r4, #2]
			view.s3_update_text(change_data, 4);
 800457a:	2204      	movs	r2, #4
 800457c:	68e8      	ldr	r0, [r5, #12]
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 800457e:	f88d 3004 	strb.w	r3, [sp, #4]
			view.s3_update_text(change_data, 4);
 8004582:	eb0d 0102 	add.w	r1, sp, r2
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 8004586:	78e3      	ldrb	r3, [r4, #3]
 8004588:	f88d 3005 	strb.w	r3, [sp, #5]
 800458c:	7923      	ldrb	r3, [r4, #4]
 800458e:	f88d 3006 	strb.w	r3, [sp, #6]
 8004592:	7963      	ldrb	r3, [r4, #5]
 8004594:	f88d 3007 	strb.w	r3, [sp, #7]
			view.s3_update_text(change_data, 4);
 8004598:	f000 f8c4 	bl	8004724 <_ZN10sensorView14s3_update_textEPKct>
 800459c:	e7cb      	b.n	8004536 <_ZN15sensorPresenter4tickEv+0x36>
	else if(strncmp(rx_data,"S4",2)==0){
 800459e:	2202      	movs	r2, #2
 80045a0:	491c      	ldr	r1, [pc, #112]	@ (8004614 <_ZN15sensorPresenter4tickEv+0x114>)
 80045a2:	4620      	mov	r0, r4
 80045a4:	f01a fce8 	bl	801ef78 <strncmp>
 80045a8:	b990      	cbnz	r0, 80045d0 <_ZN15sensorPresenter4tickEv+0xd0>
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 80045aa:	78a3      	ldrb	r3, [r4, #2]
			view.s4_update_text(change_data, 4);
 80045ac:	2204      	movs	r2, #4
 80045ae:	68e8      	ldr	r0, [r5, #12]
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 80045b0:	f88d 3004 	strb.w	r3, [sp, #4]
			view.s4_update_text(change_data, 4);
 80045b4:	eb0d 0102 	add.w	r1, sp, r2
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 80045b8:	78e3      	ldrb	r3, [r4, #3]
 80045ba:	f88d 3005 	strb.w	r3, [sp, #5]
 80045be:	7923      	ldrb	r3, [r4, #4]
 80045c0:	f88d 3006 	strb.w	r3, [sp, #6]
 80045c4:	7963      	ldrb	r3, [r4, #5]
 80045c6:	f88d 3007 	strb.w	r3, [sp, #7]
			view.s4_update_text(change_data, 4);
 80045ca:	f000 f8d0 	bl	800476e <_ZN10sensorView14s4_update_textEPKct>
 80045ce:	e7b2      	b.n	8004536 <_ZN15sensorPresenter4tickEv+0x36>
	else if(strncmp(rx_data,"S5",2)==0){
 80045d0:	2202      	movs	r2, #2
 80045d2:	4911      	ldr	r1, [pc, #68]	@ (8004618 <_ZN15sensorPresenter4tickEv+0x118>)
 80045d4:	4620      	mov	r0, r4
 80045d6:	f01a fccf 	bl	801ef78 <strncmp>
 80045da:	2800      	cmp	r0, #0
 80045dc:	d1ab      	bne.n	8004536 <_ZN15sensorPresenter4tickEv+0x36>
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 80045de:	78a3      	ldrb	r3, [r4, #2]
			view.s5_update_text(change_data, 4);
 80045e0:	2204      	movs	r2, #4
 80045e2:	68e8      	ldr	r0, [r5, #12]
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 80045e4:	f88d 3004 	strb.w	r3, [sp, #4]
			view.s5_update_text(change_data, 4);
 80045e8:	eb0d 0102 	add.w	r1, sp, r2
			char change_data[4] = {rx_data[2],rx_data[3],rx_data[4],rx_data[5]};
 80045ec:	78e3      	ldrb	r3, [r4, #3]
 80045ee:	f88d 3005 	strb.w	r3, [sp, #5]
 80045f2:	7923      	ldrb	r3, [r4, #4]
 80045f4:	f88d 3006 	strb.w	r3, [sp, #6]
 80045f8:	7963      	ldrb	r3, [r4, #5]
 80045fa:	f88d 3007 	strb.w	r3, [sp, #7]
			view.s5_update_text(change_data, 4);
 80045fe:	f000 f8db 	bl	80047b8 <_ZN10sensorView14s5_update_textEPKct>
}
 8004602:	e798      	b.n	8004536 <_ZN15sensorPresenter4tickEv+0x36>
 8004604:	20000140 	.word	0x20000140
 8004608:	0802115c 	.word	0x0802115c
 800460c:	0802115f 	.word	0x0802115f
 8004610:	08021162 	.word	0x08021162
 8004614:	08021165 	.word	0x08021165
 8004618:	08021168 	.word	0x08021168

0800461c <_ZN15sensorPresenterC1ER10sensorView>:
 800461c:	2200      	movs	r2, #0
    : view(v)
 800461e:	60c1      	str	r1, [r0, #12]
 8004620:	6082      	str	r2, [r0, #8]
 8004622:	4a02      	ldr	r2, [pc, #8]	@ (800462c <_ZN15sensorPresenterC1ER10sensorView+0x10>)
 8004624:	6002      	str	r2, [r0, #0]
 8004626:	321c      	adds	r2, #28
 8004628:	6042      	str	r2, [r0, #4]
}
 800462a:	4770      	bx	lr
 800462c:	08021174 	.word	0x08021174

08004630 <_ZN10sensorView15handleTickEventEv>:
    sensorViewBase::setupScreen();
}

void sensorView::handleTickEvent()
{
    tickCounter++;
 8004630:	f8d0 36a4 	ldr.w	r3, [r0, #1700]	@ 0x6a4
 8004634:	3301      	adds	r3, #1
 8004636:	f8c0 36a4 	str.w	r3, [r0, #1700]	@ 0x6a4
    presenter->tick();
 800463a:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 800463c:	6803      	ldr	r3, [r0, #0]
 800463e:	691b      	ldr	r3, [r3, #16]
 8004640:	4718      	bx	r3

08004642 <_ZN10sensorView14tearDownScreenEv>:
}
void sensorView::tearDownScreen()
{
    sensorViewBase::tearDownScreen();
}
 8004642:	4770      	bx	lr

08004644 <_ZN10sensorViewD1Ev>:

class sensorView : public sensorViewBase
{
public:
    sensorView();
    virtual ~sensorView() {}
 8004644:	4b03      	ldr	r3, [pc, #12]	@ (8004654 <_ZN10sensorViewD1Ev+0x10>)
 8004646:	b510      	push	{r4, lr}
 8004648:	4604      	mov	r4, r0
 800464a:	6003      	str	r3, [r0, #0]
 800464c:	f7ff fa0c 	bl	8003a68 <_ZN14sensorViewBaseD1Ev>
 8004650:	4620      	mov	r0, r4
 8004652:	bd10      	pop	{r4, pc}
 8004654:	080211a0 	.word	0x080211a0

08004658 <_ZN10sensorViewD0Ev>:
 8004658:	b510      	push	{r4, lr}
 800465a:	4604      	mov	r4, r0
 800465c:	f7ff fff2 	bl	8004644 <_ZN10sensorViewD1Ev>
 8004660:	f44f 61d5 	mov.w	r1, #1704	@ 0x6a8
 8004664:	4620      	mov	r0, r4
 8004666:	f01a f9b4 	bl	801e9d2 <_ZdlPvj>
 800466a:	4620      	mov	r0, r4
 800466c:	bd10      	pop	{r4, pc}
	...

08004670 <_ZN10sensorViewC1Ev>:
sensorView::sensorView()
 8004670:	b510      	push	{r4, lr}
 8004672:	4604      	mov	r4, r0
 8004674:	f7ff fa38 	bl	8003ae8 <_ZN14sensorViewBaseC1Ev>
 8004678:	4b03      	ldr	r3, [pc, #12]	@ (8004688 <_ZN10sensorViewC1Ev+0x18>)
}
 800467a:	4620      	mov	r0, r4
sensorView::sensorView()
 800467c:	6023      	str	r3, [r4, #0]
	tickCounter = 0;
 800467e:	2300      	movs	r3, #0
 8004680:	f8c4 36a4 	str.w	r3, [r4, #1700]	@ 0x6a4
}
 8004684:	bd10      	pop	{r4, pc}
 8004686:	bf00      	nop
 8004688:	080211a0 	.word	0x080211a0

0800468c <_ZN10sensorView11setupScreenEv>:
    sensorViewBase::setupScreen();
 800468c:	f7ff b96a 	b.w	8003964 <_ZN14sensorViewBase11setupScreenEv>

08004690 <_ZN10sensorView14s1_update_textEPKct>:

void sensorView::s1_update_text(const char* data, uint16_t size)
{
 8004690:	b513      	push	{r0, r1, r4, lr}
	Unicode::UnicodeChar ch_data1[2];
	Unicode::UnicodeChar ch_data2[2];
	ch_data1[0]= (uint16_t)data[0];
 8004692:	780b      	ldrb	r3, [r1, #0]
{
 8004694:	4604      	mov	r4, r0
	ch_data1[1]= (uint16_t)data[1];
	ch_data2[0]= (uint16_t)data[2];
	ch_data2[1]= (uint16_t)data[3];
    Unicode::strncpy(text_temperatureBuffer1, ch_data1, 3);
 8004696:	2203      	movs	r2, #3
 8004698:	f500 60cb 	add.w	r0, r0, #1624	@ 0x658
	ch_data1[0]= (uint16_t)data[0];
 800469c:	f8ad 3000 	strh.w	r3, [sp]
	ch_data1[1]= (uint16_t)data[1];
 80046a0:	784b      	ldrb	r3, [r1, #1]
 80046a2:	f8ad 3002 	strh.w	r3, [sp, #2]
	ch_data2[0]= (uint16_t)data[2];
 80046a6:	788b      	ldrb	r3, [r1, #2]
 80046a8:	f8ad 3004 	strh.w	r3, [sp, #4]
	ch_data2[1]= (uint16_t)data[3];
 80046ac:	78cb      	ldrb	r3, [r1, #3]
    Unicode::strncpy(text_temperatureBuffer1, ch_data1, 3);
 80046ae:	4669      	mov	r1, sp
	ch_data2[1]= (uint16_t)data[3];
 80046b0:	f8ad 3006 	strh.w	r3, [sp, #6]
    Unicode::strncpy(text_temperatureBuffer1, ch_data1, 3);
 80046b4:	f00c f911 	bl	80108da <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    Unicode::strncpy(text_temperatureBuffer2, ch_data2, 3);
 80046b8:	2203      	movs	r2, #3
 80046ba:	a901      	add	r1, sp, #4
 80046bc:	f204 605e 	addw	r0, r4, #1630	@ 0x65e
 80046c0:	f00c f90b 	bl	80108da <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    text_temperatureBuffer1[2]= '\0';
 80046c4:	2300      	movs	r3, #0
    text_temperatureBuffer2[2]= '\0';
    text_temperature.invalidate(); // 화면 갱신
 80046c6:	f204 4094 	addw	r0, r4, #1172	@ 0x494
    text_temperatureBuffer1[2]= '\0';
 80046ca:	f8a4 365c 	strh.w	r3, [r4, #1628]	@ 0x65c
    text_temperatureBuffer2[2]= '\0';
 80046ce:	f8a4 3662 	strh.w	r3, [r4, #1634]	@ 0x662
    text_temperature.invalidate(); // 화면 갱신
 80046d2:	f00a fd36 	bl	800f142 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80046d6:	b002      	add	sp, #8
 80046d8:	bd10      	pop	{r4, pc}

080046da <_ZN10sensorView14s2_update_textEPKct>:

void sensorView::s2_update_text(const char* data, uint16_t size)
{
 80046da:	b513      	push	{r0, r1, r4, lr}
	Unicode::UnicodeChar ch_data1[2];
	Unicode::UnicodeChar ch_data2[2];
	ch_data1[0]= (uint16_t)data[0];
 80046dc:	780b      	ldrb	r3, [r1, #0]
{
 80046de:	4604      	mov	r4, r0
	ch_data1[1]= (uint16_t)data[1];
	ch_data2[0]= (uint16_t)data[2];
	ch_data2[1]= (uint16_t)data[3];
    Unicode::strncpy(text_humidityBuffer1, ch_data1, 3);
 80046e0:	2203      	movs	r2, #3
 80046e2:	f200 6064 	addw	r0, r0, #1636	@ 0x664
	ch_data1[0]= (uint16_t)data[0];
 80046e6:	f8ad 3000 	strh.w	r3, [sp]
	ch_data1[1]= (uint16_t)data[1];
 80046ea:	784b      	ldrb	r3, [r1, #1]
 80046ec:	f8ad 3002 	strh.w	r3, [sp, #2]
	ch_data2[0]= (uint16_t)data[2];
 80046f0:	788b      	ldrb	r3, [r1, #2]
 80046f2:	f8ad 3004 	strh.w	r3, [sp, #4]
	ch_data2[1]= (uint16_t)data[3];
 80046f6:	78cb      	ldrb	r3, [r1, #3]
    Unicode::strncpy(text_humidityBuffer1, ch_data1, 3);
 80046f8:	4669      	mov	r1, sp
	ch_data2[1]= (uint16_t)data[3];
 80046fa:	f8ad 3006 	strh.w	r3, [sp, #6]
    Unicode::strncpy(text_humidityBuffer1, ch_data1, 3);
 80046fe:	f00c f8ec 	bl	80108da <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    Unicode::strncpy(text_humidityBuffer2, ch_data2, 3);
 8004702:	2203      	movs	r2, #3
 8004704:	a901      	add	r1, sp, #4
 8004706:	f204 606a 	addw	r0, r4, #1642	@ 0x66a
 800470a:	f00c f8e6 	bl	80108da <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    text_humidityBuffer1[2]= '\0';
 800470e:	2300      	movs	r3, #0
    text_humidityBuffer2[2]= '\0';
    text_humidity.invalidate(); // 화면 갱신
 8004710:	f204 40e4 	addw	r0, r4, #1252	@ 0x4e4
    text_humidityBuffer1[2]= '\0';
 8004714:	f8a4 3668 	strh.w	r3, [r4, #1640]	@ 0x668
    text_humidityBuffer2[2]= '\0';
 8004718:	f8a4 366e 	strh.w	r3, [r4, #1646]	@ 0x66e
    text_humidity.invalidate(); // 화면 갱신
 800471c:	f00a fd11 	bl	800f142 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8004720:	b002      	add	sp, #8
 8004722:	bd10      	pop	{r4, pc}

08004724 <_ZN10sensorView14s3_update_textEPKct>:

void sensorView::s3_update_text(const char* data, uint16_t size)
{
 8004724:	b513      	push	{r0, r1, r4, lr}
	Unicode::UnicodeChar ch_data1[2];
	Unicode::UnicodeChar ch_data2[2];
	ch_data1[0]= (uint16_t)data[0];
 8004726:	780b      	ldrb	r3, [r1, #0]
{
 8004728:	4604      	mov	r4, r0
	ch_data1[1]= (uint16_t)data[1];
	ch_data2[0]= (uint16_t)data[2];
	ch_data2[1]= (uint16_t)data[3];
    Unicode::strncpy(text_phBuffer1, ch_data1, 3);
 800472a:	2203      	movs	r2, #3
 800472c:	f500 60ce 	add.w	r0, r0, #1648	@ 0x670
	ch_data1[0]= (uint16_t)data[0];
 8004730:	f8ad 3000 	strh.w	r3, [sp]
	ch_data1[1]= (uint16_t)data[1];
 8004734:	784b      	ldrb	r3, [r1, #1]
 8004736:	f8ad 3002 	strh.w	r3, [sp, #2]
	ch_data2[0]= (uint16_t)data[2];
 800473a:	788b      	ldrb	r3, [r1, #2]
 800473c:	f8ad 3004 	strh.w	r3, [sp, #4]
	ch_data2[1]= (uint16_t)data[3];
 8004740:	78cb      	ldrb	r3, [r1, #3]
    Unicode::strncpy(text_phBuffer1, ch_data1, 3);
 8004742:	4669      	mov	r1, sp
	ch_data2[1]= (uint16_t)data[3];
 8004744:	f8ad 3006 	strh.w	r3, [sp, #6]
    Unicode::strncpy(text_phBuffer1, ch_data1, 3);
 8004748:	f00c f8c7 	bl	80108da <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    Unicode::strncpy(text_phBuffer2, ch_data2, 3);
 800474c:	2203      	movs	r2, #3
 800474e:	a901      	add	r1, sp, #4
 8004750:	f204 6076 	addw	r0, r4, #1654	@ 0x676
 8004754:	f00c f8c1 	bl	80108da <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    text_phBuffer1[2]= '\0';
 8004758:	2300      	movs	r3, #0
    text_phBuffer2[2]= '\0';
    text_ph.invalidate(); // 화면 갱신
 800475a:	f204 5034 	addw	r0, r4, #1332	@ 0x534
    text_phBuffer1[2]= '\0';
 800475e:	f8a4 3674 	strh.w	r3, [r4, #1652]	@ 0x674
    text_phBuffer2[2]= '\0';
 8004762:	f8a4 367a 	strh.w	r3, [r4, #1658]	@ 0x67a
    text_ph.invalidate(); // 화면 갱신
 8004766:	f00a fcec 	bl	800f142 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800476a:	b002      	add	sp, #8
 800476c:	bd10      	pop	{r4, pc}

0800476e <_ZN10sensorView14s4_update_textEPKct>:

void sensorView::s4_update_text(const char* data, uint16_t size)
{
 800476e:	b513      	push	{r0, r1, r4, lr}
	Unicode::UnicodeChar ch_data1[2];
	Unicode::UnicodeChar ch_data2[2];
	ch_data1[0]= (uint16_t)data[0];
 8004770:	780b      	ldrb	r3, [r1, #0]
{
 8004772:	4604      	mov	r4, r0
	ch_data1[1]= (uint16_t)data[1];
	ch_data2[0]= (uint16_t)data[2];
	ch_data2[1]= (uint16_t)data[3];
    Unicode::strncpy(text_tdsBuffer1, ch_data1, 3);
 8004774:	2203      	movs	r2, #3
 8004776:	f200 607c 	addw	r0, r0, #1660	@ 0x67c
	ch_data1[0]= (uint16_t)data[0];
 800477a:	f8ad 3000 	strh.w	r3, [sp]
	ch_data1[1]= (uint16_t)data[1];
 800477e:	784b      	ldrb	r3, [r1, #1]
 8004780:	f8ad 3002 	strh.w	r3, [sp, #2]
	ch_data2[0]= (uint16_t)data[2];
 8004784:	788b      	ldrb	r3, [r1, #2]
 8004786:	f8ad 3004 	strh.w	r3, [sp, #4]
	ch_data2[1]= (uint16_t)data[3];
 800478a:	78cb      	ldrb	r3, [r1, #3]
    Unicode::strncpy(text_tdsBuffer1, ch_data1, 3);
 800478c:	4669      	mov	r1, sp
	ch_data2[1]= (uint16_t)data[3];
 800478e:	f8ad 3006 	strh.w	r3, [sp, #6]
    Unicode::strncpy(text_tdsBuffer1, ch_data1, 3);
 8004792:	f00c f8a2 	bl	80108da <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    Unicode::strncpy(text_tdsBuffer2, ch_data2, 3);
 8004796:	2203      	movs	r2, #3
 8004798:	a901      	add	r1, sp, #4
 800479a:	f204 6082 	addw	r0, r4, #1666	@ 0x682
 800479e:	f00c f89c 	bl	80108da <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    text_tdsBuffer1[2]= '\0';
 80047a2:	2300      	movs	r3, #0
    text_tdsBuffer2[2]= '\0';
    text_tds.invalidate(); // 화면 갱신
 80047a4:	f204 5084 	addw	r0, r4, #1412	@ 0x584
    text_tdsBuffer1[2]= '\0';
 80047a8:	f8a4 3680 	strh.w	r3, [r4, #1664]	@ 0x680
    text_tdsBuffer2[2]= '\0';
 80047ac:	f8a4 3686 	strh.w	r3, [r4, #1670]	@ 0x686
    text_tds.invalidate(); // 화면 갱신
 80047b0:	f00a fcc7 	bl	800f142 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80047b4:	b002      	add	sp, #8
 80047b6:	bd10      	pop	{r4, pc}

080047b8 <_ZN10sensorView14s5_update_textEPKct>:

void sensorView::s5_update_text(const char* data, uint16_t size)
{
 80047b8:	b513      	push	{r0, r1, r4, lr}
	Unicode::UnicodeChar ch_data1[2];
	Unicode::UnicodeChar ch_data2[2];
	ch_data1[0]= (uint16_t)data[0];
 80047ba:	780b      	ldrb	r3, [r1, #0]
{
 80047bc:	4604      	mov	r4, r0
	ch_data1[1]= (uint16_t)data[1];
	ch_data2[0]= (uint16_t)data[2];
	ch_data2[1]= (uint16_t)data[3];
    Unicode::strncpy(text_levelBuffer1, ch_data1, 3);
 80047be:	2203      	movs	r2, #3
 80047c0:	f500 60d1 	add.w	r0, r0, #1672	@ 0x688
	ch_data1[0]= (uint16_t)data[0];
 80047c4:	f8ad 3000 	strh.w	r3, [sp]
	ch_data1[1]= (uint16_t)data[1];
 80047c8:	784b      	ldrb	r3, [r1, #1]
 80047ca:	f8ad 3002 	strh.w	r3, [sp, #2]
	ch_data2[0]= (uint16_t)data[2];
 80047ce:	788b      	ldrb	r3, [r1, #2]
 80047d0:	f8ad 3004 	strh.w	r3, [sp, #4]
	ch_data2[1]= (uint16_t)data[3];
 80047d4:	78cb      	ldrb	r3, [r1, #3]
    Unicode::strncpy(text_levelBuffer1, ch_data1, 3);
 80047d6:	4669      	mov	r1, sp
	ch_data2[1]= (uint16_t)data[3];
 80047d8:	f8ad 3006 	strh.w	r3, [sp, #6]
    Unicode::strncpy(text_levelBuffer1, ch_data1, 3);
 80047dc:	f00c f87d 	bl	80108da <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    Unicode::strncpy(text_levelBuffer2, ch_data2, 3);
 80047e0:	2203      	movs	r2, #3
 80047e2:	a901      	add	r1, sp, #4
 80047e4:	f204 608e 	addw	r0, r4, #1678	@ 0x68e
 80047e8:	f00c f877 	bl	80108da <_ZN8touchgfx7Unicode7strncpyEPtPKtt>
    text_levelBuffer1[2]= '\0';
 80047ec:	2300      	movs	r3, #0
    text_levelBuffer2[2]= '\0';
    text_level.invalidate(); // 화면 갱신
 80047ee:	f204 50d4 	addw	r0, r4, #1492	@ 0x5d4
    text_levelBuffer1[2]= '\0';
 80047f2:	f8a4 368c 	strh.w	r3, [r4, #1676]	@ 0x68c
    text_levelBuffer2[2]= '\0';
 80047f6:	f8a4 3692 	strh.w	r3, [r4, #1682]	@ 0x692
    text_level.invalidate(); // 화면 갱신
 80047fa:	f00a fca2 	bl	800f142 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80047fe:	b002      	add	sp, #8
 8004800:	bd10      	pop	{r4, pc}
	...

08004804 <Bluetooth_init>:
#include "cmsis_os.h"
#include <stdlib.h> // malloc과 free를 사용하기 위한 헤더 파일

Bluetooth bt;

void Bluetooth_init(Bluetooth* bt, UART_HandleTypeDef* huart, void (*rx_callback)(uint8_t* data, uint16_t size), void (*tx_callback)(void)) {
 8004804:	b570      	push	{r4, r5, r6, lr}
 8004806:	4605      	mov	r5, r0
    bt->rx_index = 0;
 8004808:	2400      	movs	r4, #0
    bt->huart = huart;
    bt->bluetooth_rx_callback = rx_callback;
    bt->bluetooth_tx_callback = tx_callback;
    bt->tx_complete = 1; // 전송 완료 플래그 초기화
 800480a:	2601      	movs	r6, #1
void Bluetooth_init(Bluetooth* bt, UART_HandleTypeDef* huart, void (*rx_callback)(uint8_t* data, uint16_t size), void (*tx_callback)(void)) {
 800480c:	4608      	mov	r0, r1
    bt->huart = huart;
 800480e:	6029      	str	r1, [r5, #0]
    bt->rx_index = 0;
 8004810:	f8a5 4104 	strh.w	r4, [r5, #260]	@ 0x104
    bt->tx_complete = 1; // 전송 완료 플래그 초기화
 8004814:	f885 6106 	strb.w	r6, [r5, #262]	@ 0x106
    bt->bluetooth_tx_callback = tx_callback;
 8004818:	e9c5 2342 	strd	r2, r3, [r5, #264]	@ 0x108

    // UART 초기화 코드
    huart->Instance = UART7;
    huart->Init.BaudRate = 9600;
 800481c:	4a0b      	ldr	r2, [pc, #44]	@ (800484c <Bluetooth_init+0x48>)
 800481e:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
    huart->Init.WordLength = UART_WORDLENGTH_8B;
    huart->Init.StopBits = UART_STOPBITS_1;
    huart->Init.Parity = UART_PARITY_NONE;
 8004822:	610c      	str	r4, [r1, #16]
    huart->Init.Mode = UART_MODE_TX_RX;
    huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
    huart->Init.OverSampling = UART_OVERSAMPLING_16;
 8004824:	61cc      	str	r4, [r1, #28]
    huart->Init.BaudRate = 9600;
 8004826:	e9c1 2300 	strd	r2, r3, [r1]
    huart->Init.Mode = UART_MODE_TX_RX;
 800482a:	230c      	movs	r3, #12
    huart->Init.StopBits = UART_STOPBITS_1;
 800482c:	e9c1 4402 	strd	r4, r4, [r1, #8]
    huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004830:	e9c1 3405 	strd	r3, r4, [r1, #20]
    if (HAL_UART_Init(huart) != HAL_OK) {
 8004834:	f003 fb18 	bl	8007e68 <HAL_UART_Init>
        // 초기화 오류 처리
        // 오류 처리 코드 추가
    }

    // UART 인터럽트 활성화
    HAL_NVIC_SetPriority(UART7_IRQn, 0, 1);
 8004838:	4632      	mov	r2, r6
 800483a:	4621      	mov	r1, r4
 800483c:	2052      	movs	r0, #82	@ 0x52
 800483e:	f000 fb23 	bl	8004e88 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART7_IRQn);
 8004842:	2052      	movs	r0, #82	@ 0x52

    // 첫 수신 인터럽트 시작
    //HAL_UART_Receive_IT(huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
}
 8004844:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(UART7_IRQn);
 8004848:	f000 bb50 	b.w	8004eec <HAL_NVIC_EnableIRQ>
 800484c:	40007800 	.word	0x40007800

08004850 <Bluetooth_write_data>:


void Bluetooth_write_data(Bluetooth* bt, uint8_t* data, uint16_t size) {
 8004850:	b508      	push	{r3, lr}
    bt->tx_complete = 0; // 전송 완료 플래그 초기화
 8004852:	2300      	movs	r3, #0
 8004854:	f880 3106 	strb.w	r3, [r0, #262]	@ 0x106
#if 0
    if (HAL_UART_Transmit_IT(bt->huart, data, size) != HAL_OK) {
#else
    if (HAL_UART_Transmit(bt->huart, data, size, -1) != HAL_OK) {
 8004858:	f04f 33ff 	mov.w	r3, #4294967295
 800485c:	6800      	ldr	r0, [r0, #0]
 800485e:	f003 fa90 	bl	8007d82 <HAL_UART_Transmit>
 8004862:	b100      	cbz	r0, 8004866 <Bluetooth_write_data+0x16>
#endif
        // 전송 오류 처리
        	while(1){
 8004864:	e7fe      	b.n	8004864 <Bluetooth_write_data+0x14>
            // 오류 처리 루프
        	}
    }

}
 8004866:	bd08      	pop	{r3, pc}

08004868 <Bluetooth_handle_rx_interrupt>:
// 전송 완료 콜백 함수


void Bluetooth_handle_rx_interrupt(Bluetooth* bt) {
    // 버퍼 오버플로 방지
    if (bt->rx_index >= sizeof(bt->rx_buffer)) {
 8004868:	f8b0 3104 	ldrh.w	r3, [r0, #260]	@ 0x104
        bt->rx_index = 0;
    }
    bt->rx_index++;
    // 다음 수신을 위한 인터럽트 설정
    HAL_UART_Receive_IT(bt->huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
 800486c:	2201      	movs	r2, #1
    if (bt->rx_index >= sizeof(bt->rx_buffer)) {
 800486e:	2bff      	cmp	r3, #255	@ 0xff
        bt->rx_index = 0;
 8004870:	bf88      	it	hi
 8004872:	2300      	movhi	r3, #0
void Bluetooth_handle_rx_interrupt(Bluetooth* bt) {
 8004874:	b510      	push	{r4, lr}
        bt->rx_index = 0;
 8004876:	bf88      	it	hi
 8004878:	f8a0 3104 	strhhi.w	r3, [r0, #260]	@ 0x104
void Bluetooth_handle_rx_interrupt(Bluetooth* bt) {
 800487c:	4604      	mov	r4, r0
    bt->rx_index++;
 800487e:	f8b0 1104 	ldrh.w	r1, [r0, #260]	@ 0x104
 8004882:	3101      	adds	r1, #1
 8004884:	b289      	uxth	r1, r1
 8004886:	f8a0 1104 	strh.w	r1, [r0, #260]	@ 0x104
    HAL_UART_Receive_IT(bt->huart, (uint8_t *)&bt->rx_buffer[bt->rx_index], 1);
 800488a:	3104      	adds	r1, #4
 800488c:	4401      	add	r1, r0
 800488e:	6800      	ldr	r0, [r0, #0]
 8004890:	f003 fb72 	bl	8007f78 <HAL_UART_Receive_IT>


    // 수신된 문자가 '\n'일 경우, 이전 문자가 '\r'인지 확인
    if (bt->rx_buffer[bt->rx_index - 1] == '\n' && bt->rx_buffer[bt->rx_index - 2] == '\r') {
 8004894:	f8b4 1104 	ldrh.w	r1, [r4, #260]	@ 0x104
 8004898:	1863      	adds	r3, r4, r1
 800489a:	78da      	ldrb	r2, [r3, #3]
 800489c:	2a0a      	cmp	r2, #10
 800489e:	d10a      	bne.n	80048b6 <Bluetooth_handle_rx_interrupt+0x4e>
 80048a0:	789b      	ldrb	r3, [r3, #2]
 80048a2:	2b0d      	cmp	r3, #13
 80048a4:	d107      	bne.n	80048b6 <Bluetooth_handle_rx_interrupt+0x4e>
        // 수신된 데이터를 콜백으로 전달
        if (bt->bluetooth_rx_callback) {
 80048a6:	f8d4 3108 	ldr.w	r3, [r4, #264]	@ 0x108
 80048aa:	b10b      	cbz	r3, 80048b0 <Bluetooth_handle_rx_interrupt+0x48>
            bt->bluetooth_rx_callback(bt->rx_buffer, bt->rx_index);
 80048ac:	1d20      	adds	r0, r4, #4
 80048ae:	4798      	blx	r3
        }
        bt->rx_index = 0;
 80048b0:	2300      	movs	r3, #0
 80048b2:	f8a4 3104 	strh.w	r3, [r4, #260]	@ 0x104
    }
}
 80048b6:	bd10      	pop	{r4, pc}

080048b8 <UART7_IRQHandler>:

void UART7_IRQHandler(void) {
    HAL_UART_IRQHandler(bt.huart);
 80048b8:	4b01      	ldr	r3, [pc, #4]	@ (80048c0 <UART7_IRQHandler+0x8>)
 80048ba:	6818      	ldr	r0, [r3, #0]
 80048bc:	f002 beaa 	b.w	8007614 <HAL_UART_IRQHandler>
 80048c0:	20001cf4 	.word	0x20001cf4

080048c4 <QSPI_AutoPollingMemReady.constprop.0>:
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout
  * @retval None
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80048c4:	b500      	push	{lr}
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80048c6:	f44f 7280 	mov.w	r2, #256	@ 0x100
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80048ca:	b095      	sub	sp, #84	@ 0x54
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80048cc:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80048d0:	4603      	mov	r3, r0
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80048d2:	920c      	str	r2, [sp, #48]	@ 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80048d4:	2205      	movs	r2, #5
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80048d6:	910f      	str	r1, [sp, #60]	@ 0x3c
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 80048d8:	2101      	movs	r1, #1
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80048da:	9206      	str	r2, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80048dc:	2200      	movs	r2, #0
  s_config.Mask            = N25Q128A_SR_WIP;
 80048de:	9101      	str	r1, [sp, #4]
  s_command.DummyCycles       = 0;
 80048e0:	920b      	str	r2, [sp, #44]	@ 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80048e2:	9213      	str	r2, [sp, #76]	@ 0x4c
  s_config.Match           = 0;
 80048e4:	9200      	str	r2, [sp, #0]
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
  s_config.Interval        = 0x10;
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 80048e6:	480b      	ldr	r0, [pc, #44]	@ (8004914 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
  s_config.StatusBytesSize = 1;
 80048e8:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80048ec:	e9cd 220d 	strd	r2, r2, [sp, #52]	@ 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80048f0:	e9cd 2211 	strd	r2, r2, [sp, #68]	@ 0x44
  s_config.Interval        = 0x10;
 80048f4:	2210      	movs	r2, #16
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 80048f6:	a906      	add	r1, sp, #24
  s_config.Interval        = 0x10;
 80048f8:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80048fa:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 80048fe:	9205      	str	r2, [sp, #20]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8004900:	466a      	mov	r2, sp
 8004902:	f001 fd83 	bl	800640c <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8004906:	3800      	subs	r0, #0
 8004908:	bf18      	it	ne
 800490a:	2001      	movne	r0, #1
 800490c:	b015      	add	sp, #84	@ 0x54
 800490e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004912:	bf00      	nop
 8004914:	20001e04 	.word	0x20001e04

08004918 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8004918:	b500      	push	{lr}
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800491a:	f44f 7380 	mov.w	r3, #256	@ 0x100
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 800491e:	b095      	sub	sp, #84	@ 0x54
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004920:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004924:	4817      	ldr	r0, [pc, #92]	@ (8004984 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004926:	930c      	str	r3, [sp, #48]	@ 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8004928:	2306      	movs	r3, #6
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800492a:	a906      	add	r1, sp, #24
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800492c:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800492e:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004930:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
  s_command.DataMode          = QSPI_DATA_NONE;
 8004934:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.DummyCycles       = 0;
 8004936:	930b      	str	r3, [sp, #44]	@ 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004938:	9313      	str	r3, [sp, #76]	@ 0x4c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800493a:	e9cd 3311 	strd	r3, r3, [sp, #68]	@ 0x44
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800493e:	f001 fd20 	bl	8006382 <HAL_QSPI_Command>
 8004942:	b9e0      	cbnz	r0, 800497e <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8004944:	2302      	movs	r3, #2
  s_config.Interval        = 0x10;
 8004946:	2201      	movs	r2, #1
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8004948:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 800494c:	9004      	str	r0, [sp, #16]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800494e:	480d      	ldr	r0, [pc, #52]	@ (8004984 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_config.Mask            = N25Q128A_SR_WREN;
 8004950:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8004954:	2310      	movs	r3, #16
 8004956:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800495a:	2305      	movs	r3, #5
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800495c:	466a      	mov	r2, sp
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800495e:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8004962:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004966:	a906      	add	r1, sp, #24
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8004968:	930f      	str	r3, [sp, #60]	@ 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800496a:	f241 3388 	movw	r3, #5000	@ 0x1388
 800496e:	f001 fd4d 	bl	800640c <HAL_QSPI_AutoPolling>
 8004972:	3800      	subs	r0, #0
 8004974:	bf18      	it	ne
 8004976:	2001      	movne	r0, #1
}
 8004978:	b015      	add	sp, #84	@ 0x54
 800497a:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 800497e:	2001      	movs	r0, #1
 8004980:	e7fa      	b.n	8004978 <QSPI_WriteEnable.constprop.0+0x60>
 8004982:	bf00      	nop
 8004984:	20001e04 	.word	0x20001e04

08004988 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8004988:	b500      	push	{lr}
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800498a:	f44f 7380 	mov.w	r3, #256	@ 0x100
{
 800498e:	b091      	sub	sp, #68	@ 0x44
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8004990:	f04f 7240 	mov.w	r2, #50331648	@ 0x3000000
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004994:	480e      	ldr	r0, [pc, #56]	@ (80049d0 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004996:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8004998:	23eb      	movs	r3, #235	@ 0xeb
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800499a:	a902      	add	r1, sp, #8
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 800499c:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 800499e:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 80049a2:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 80049a4:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80049a8:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80049aa:	2300      	movs	r3, #0
 80049ac:	e9cd 320a 	strd	r3, r2, [sp, #40]	@ 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 80049b0:	220a      	movs	r2, #10
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80049b2:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 80049b4:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80049b6:	466a      	mov	r2, sp
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80049b8:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 80049bc:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80049c0:	f001 fd75 	bl	80064ae <HAL_QSPI_MemoryMapped>
}
 80049c4:	3800      	subs	r0, #0
 80049c6:	bf18      	it	ne
 80049c8:	2001      	movne	r0, #1
 80049ca:	b011      	add	sp, #68	@ 0x44
 80049cc:	f85d fb04 	ldr.w	pc, [sp], #4
 80049d0:	20001e04 	.word	0x20001e04

080049d4 <BSP_QSPI_MspInit>:
  QSPI_CLK_ENABLE();
 80049d4:	4b45      	ldr	r3, [pc, #276]	@ (8004aec <BSP_QSPI_MspInit+0x118>)
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 80049d6:	2101      	movs	r1, #1
  QSPI_CLK_ENABLE();
 80049d8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80049da:	f042 0202 	orr.w	r2, r2, #2
{
 80049de:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPI_CLK_ENABLE();
 80049e0:	639a      	str	r2, [r3, #56]	@ 0x38
{
 80049e2:	b08d      	sub	sp, #52	@ 0x34
  QSPI_CLK_ENABLE();
 80049e4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80049e6:	2409      	movs	r4, #9
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80049e8:	4d41      	ldr	r5, [pc, #260]	@ (8004af0 <BSP_QSPI_MspInit+0x11c>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80049ea:	2704      	movs	r7, #4
  QSPI_CLK_ENABLE();
 80049ec:	f002 0202 	and.w	r2, r2, #2
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80049f0:	2600      	movs	r6, #0
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80049f2:	4628      	mov	r0, r5
  QSPI_CLK_ENABLE();
 80049f4:	9200      	str	r2, [sp, #0]
 80049f6:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 80049f8:	699a      	ldr	r2, [r3, #24]
 80049fa:	f042 0202 	orr.w	r2, r2, #2
 80049fe:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8004a00:	699a      	ldr	r2, [r3, #24]
 8004a02:	f022 0202 	bic.w	r2, r2, #2
 8004a06:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8004a08:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004a0a:	f042 0202 	orr.w	r2, r2, #2
 8004a0e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004a10:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004a12:	f002 0202 	and.w	r2, r2, #2
 8004a16:	9201      	str	r2, [sp, #4]
 8004a18:	9a01      	ldr	r2, [sp, #4]
  QSPI_CLK_GPIO_CLK_ENABLE();
 8004a1a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004a1c:	f042 0202 	orr.w	r2, r2, #2
 8004a20:	631a      	str	r2, [r3, #48]	@ 0x30
 8004a22:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004a24:	f002 0202 	and.w	r2, r2, #2
 8004a28:	9202      	str	r2, [sp, #8]
 8004a2a:	9a02      	ldr	r2, [sp, #8]
  QSPI_D0_GPIO_CLK_ENABLE();
 8004a2c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004a2e:	f042 0208 	orr.w	r2, r2, #8
 8004a32:	631a      	str	r2, [r3, #48]	@ 0x30
 8004a34:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004a36:	f002 0208 	and.w	r2, r2, #8
 8004a3a:	9203      	str	r2, [sp, #12]
 8004a3c:	9a03      	ldr	r2, [sp, #12]
  QSPI_D1_GPIO_CLK_ENABLE();
 8004a3e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004a40:	f042 0208 	orr.w	r2, r2, #8
 8004a44:	631a      	str	r2, [r3, #48]	@ 0x30
 8004a46:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004a48:	f002 0208 	and.w	r2, r2, #8
 8004a4c:	9204      	str	r2, [sp, #16]
 8004a4e:	9a04      	ldr	r2, [sp, #16]
  QSPI_D2_GPIO_CLK_ENABLE();
 8004a50:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004a52:	f042 0210 	orr.w	r2, r2, #16
 8004a56:	631a      	str	r2, [r3, #48]	@ 0x30
 8004a58:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004a5a:	f002 0210 	and.w	r2, r2, #16
 8004a5e:	9205      	str	r2, [sp, #20]
 8004a60:	9a05      	ldr	r2, [sp, #20]
  QSPI_D3_GPIO_CLK_ENABLE();
 8004a62:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004a64:	f042 0208 	orr.w	r2, r2, #8
 8004a68:	631a      	str	r2, [r3, #48]	@ 0x30
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8004a6a:	2240      	movs	r2, #64	@ 0x40
  QSPI_D3_GPIO_CLK_ENABLE();
 8004a6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004a6e:	f003 0308 	and.w	r3, r3, #8
 8004a72:	9306      	str	r3, [sp, #24]
 8004a74:	9b06      	ldr	r3, [sp, #24]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8004a76:	2302      	movs	r3, #2
 8004a78:	e9cd 2307 	strd	r2, r3, [sp, #28]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8004a7c:	2303      	movs	r3, #3
 8004a7e:	e9cd 1309 	strd	r1, r3, [sp, #36]	@ 0x24
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 8004a82:	230a      	movs	r3, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004a84:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 8004a86:	930b      	str	r3, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004a88:	f000 fc48 	bl	800531c <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004a8c:	a907      	add	r1, sp, #28
 8004a8e:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8004a90:	9707      	str	r7, [sp, #28]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8004a92:	9609      	str	r6, [sp, #36]	@ 0x24
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004a94:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004a96:	f000 fc41 	bl	800531c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D0_PIN;
 8004a9a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 8004a9e:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004aa0:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 8004aa2:	441d      	add	r5, r3
  gpio_init_structure.Pin       = QSPI_D0_PIN;
 8004aa4:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 8004aa6:	4628      	mov	r0, r5
 8004aa8:	f000 fc38 	bl	800531c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D1_PIN;
 8004aac:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  HAL_GPIO_Init(QSPI_D1_GPIO_PORT, &gpio_init_structure);
 8004ab0:	a907      	add	r1, sp, #28
 8004ab2:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = QSPI_D1_PIN;
 8004ab4:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004ab6:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D1_GPIO_PORT, &gpio_init_structure);
 8004ab8:	f000 fc30 	bl	800531c <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_D2_GPIO_PORT, &gpio_init_structure);
 8004abc:	a907      	add	r1, sp, #28
 8004abe:	480d      	ldr	r0, [pc, #52]	@ (8004af4 <BSP_QSPI_MspInit+0x120>)
  gpio_init_structure.Pin       = QSPI_D2_PIN;
 8004ac0:	9707      	str	r7, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004ac2:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D2_GPIO_PORT, &gpio_init_structure);
 8004ac4:	f000 fc2a 	bl	800531c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D3_PIN;
 8004ac8:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(QSPI_D3_GPIO_PORT, &gpio_init_structure);
 8004acc:	a907      	add	r1, sp, #28
 8004ace:	4628      	mov	r0, r5
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004ad0:	940b      	str	r4, [sp, #44]	@ 0x2c
  gpio_init_structure.Pin       = QSPI_D3_PIN;
 8004ad2:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(QSPI_D3_GPIO_PORT, &gpio_init_structure);
 8004ad4:	f000 fc22 	bl	800531c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8004ad8:	4632      	mov	r2, r6
 8004ada:	210f      	movs	r1, #15
 8004adc:	205c      	movs	r0, #92	@ 0x5c
 8004ade:	f000 f9d3 	bl	8004e88 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8004ae2:	205c      	movs	r0, #92	@ 0x5c
 8004ae4:	f000 fa02 	bl	8004eec <HAL_NVIC_EnableIRQ>
}
 8004ae8:	b00d      	add	sp, #52	@ 0x34
 8004aea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004aec:	40023800 	.word	0x40023800
 8004af0:	40020400 	.word	0x40020400
 8004af4:	40021000 	.word	0x40021000

08004af8 <BSP_QSPI_Init>:
{ 
 8004af8:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8004afa:	4c49      	ldr	r4, [pc, #292]	@ (8004c20 <BSP_QSPI_Init+0x128>)
{ 
 8004afc:	b091      	sub	sp, #68	@ 0x44
  QSPIHandle.Instance = QUADSPI;
 8004afe:	4b49      	ldr	r3, [pc, #292]	@ (8004c24 <BSP_QSPI_Init+0x12c>)
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8004b00:	4620      	mov	r0, r4
  QSPIHandle.Instance = QUADSPI;
 8004b02:	6023      	str	r3, [r4, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8004b04:	f001 fc2a 	bl	800635c <HAL_QSPI_DeInit>
 8004b08:	4605      	mov	r5, r0
 8004b0a:	b110      	cbz	r0, 8004b12 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8004b0c:	2001      	movs	r0, #1
}
 8004b0e:	b011      	add	sp, #68	@ 0x44
 8004b10:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8004b12:	4601      	mov	r1, r0
 8004b14:	4620      	mov	r0, r4
 8004b16:	f7ff ff5d 	bl	80049d4 <BSP_QSPI_MspInit>
  QSPIHandle.Init.FifoThreshold      = 4;
 8004b1a:	2601      	movs	r6, #1
 8004b1c:	2304      	movs	r3, #4
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004b1e:	f04f 7780 	mov.w	r7, #16777216	@ 0x1000000
 8004b22:	e9c4 6301 	strd	r6, r3, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8004b26:	2310      	movs	r3, #16
 8004b28:	60e3      	str	r3, [r4, #12]
 8004b2a:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8004b2e:	fab3 f383 	clz	r3, r3
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8004b32:	4620      	mov	r0, r4
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8004b34:	3b01      	subs	r3, #1
 8004b36:	6123      	str	r3, [r4, #16]
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE; /* Min 50ns for nonRead */
 8004b38:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8004b3c:	e9c4 5507 	strd	r5, r5, [r4, #28]
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8004b40:	e9c4 3505 	strd	r3, r5, [r4, #20]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8004b44:	f001 fbb8 	bl	80062b8 <HAL_QSPI_Init>
 8004b48:	2800      	cmp	r0, #0
 8004b4a:	d1df      	bne.n	8004b0c <BSP_QSPI_Init+0x14>
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004b4c:	f44f 7580 	mov.w	r5, #256	@ 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8004b50:	2366      	movs	r3, #102	@ 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8004b52:	900b      	str	r0, [sp, #44]	@ 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004b54:	f241 3288 	movw	r2, #5000	@ 0x1388
  s_command.DummyCycles       = 0;
 8004b58:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004b5a:	a902      	add	r1, sp, #8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004b5c:	900f      	str	r0, [sp, #60]	@ 0x3c
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004b5e:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8004b60:	9302      	str	r3, [sp, #8]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004b62:	e9cd 0009 	strd	r0, r0, [sp, #36]	@ 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004b66:	e9cd 000d 	strd	r0, r0, [sp, #52]	@ 0x34
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004b6a:	4620      	mov	r0, r4
 8004b6c:	f001 fc09 	bl	8006382 <HAL_QSPI_Command>
 8004b70:	b108      	cbz	r0, 8004b76 <BSP_QSPI_Init+0x7e>
    return QSPI_NOT_SUPPORTED;
 8004b72:	2004      	movs	r0, #4
 8004b74:	e7cb      	b.n	8004b0e <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8004b76:	2399      	movs	r3, #153	@ 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004b78:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004b7c:	a902      	add	r1, sp, #8
 8004b7e:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8004b80:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004b82:	f001 fbfe 	bl	8006382 <HAL_QSPI_Command>
 8004b86:	2800      	cmp	r0, #0
 8004b88:	d1f3      	bne.n	8004b72 <BSP_QSPI_Init+0x7a>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8004b8a:	f241 3088 	movw	r0, #5000	@ 0x1388
 8004b8e:	f7ff fe99 	bl	80048c4 <QSPI_AutoPollingMemReady.constprop.0>
 8004b92:	2800      	cmp	r0, #0
 8004b94:	d1ed      	bne.n	8004b72 <BSP_QSPI_Init+0x7a>
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8004b96:	2385      	movs	r3, #133	@ 0x85
  s_command.DummyCycles       = 0;
 8004b98:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004b9a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004b9e:	a902      	add	r1, sp, #8
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004ba0:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8004ba2:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8004ba4:	970b      	str	r7, [sp, #44]	@ 0x2c
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004ba6:	e9cd 0009 	strd	r0, r0, [sp, #36]	@ 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8004baa:	e9cd 600c 	strd	r6, r0, [sp, #48]	@ 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004bae:	e9cd 000e 	strd	r0, r0, [sp, #56]	@ 0x38
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004bb2:	4620      	mov	r0, r4
 8004bb4:	f001 fbe5 	bl	8006382 <HAL_QSPI_Command>
 8004bb8:	2800      	cmp	r0, #0
 8004bba:	d1da      	bne.n	8004b72 <BSP_QSPI_Init+0x7a>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004bbc:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004bc0:	f10d 0107 	add.w	r1, sp, #7
 8004bc4:	4620      	mov	r0, r4
 8004bc6:	f001 fd5c 	bl	8006682 <HAL_QSPI_Receive>
 8004bca:	2800      	cmp	r0, #0
 8004bcc:	d1d1      	bne.n	8004b72 <BSP_QSPI_Init+0x7a>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8004bce:	f7ff fea3 	bl	8004918 <QSPI_WriteEnable.constprop.0>
 8004bd2:	2800      	cmp	r0, #0
 8004bd4:	d1cd      	bne.n	8004b72 <BSP_QSPI_Init+0x7a>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8004bd6:	2381      	movs	r3, #129	@ 0x81
 8004bd8:	22f0      	movs	r2, #240	@ 0xf0
 8004bda:	9302      	str	r3, [sp, #8]
 8004bdc:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004be0:	210a      	movs	r1, #10
 8004be2:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004be6:	fab2 f282 	clz	r2, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004bea:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004bec:	f003 030f 	and.w	r3, r3, #15
 8004bf0:	fa01 f202 	lsl.w	r2, r1, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004bf4:	a902      	add	r1, sp, #8
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004bf6:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004bf8:	f241 3288 	movw	r2, #5000	@ 0x1388
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004bfc:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004c00:	f001 fbbf 	bl	8006382 <HAL_QSPI_Command>
 8004c04:	2800      	cmp	r0, #0
 8004c06:	d1b4      	bne.n	8004b72 <BSP_QSPI_Init+0x7a>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004c08:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004c0c:	f10d 0107 	add.w	r1, sp, #7
 8004c10:	4620      	mov	r0, r4
 8004c12:	f001 fcd7 	bl	80065c4 <HAL_QSPI_Transmit>
 8004c16:	2800      	cmp	r0, #0
 8004c18:	f43f af79 	beq.w	8004b0e <BSP_QSPI_Init+0x16>
 8004c1c:	e7a9      	b.n	8004b72 <BSP_QSPI_Init+0x7a>
 8004c1e:	bf00      	nop
 8004c20:	20001e04 	.word	0x20001e04
 8004c24:	a0001000 	.word	0xa0001000

08004c28 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004c28:	490f      	ldr	r1, [pc, #60]	@ (8004c68 <SystemInit+0x40>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8004c2a:	2000      	movs	r0, #0
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004c2c:	f8d1 3088 	ldr.w	r3, [r1, #136]	@ 0x88
 8004c30:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8004c34:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
  RCC->CR |= (uint32_t)0x00000001;
 8004c38:	4b0c      	ldr	r3, [pc, #48]	@ (8004c6c <SystemInit+0x44>)
 8004c3a:	681a      	ldr	r2, [r3, #0]
 8004c3c:	f042 0201 	orr.w	r2, r2, #1
 8004c40:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000;
 8004c42:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8004c44:	681a      	ldr	r2, [r3, #0]
 8004c46:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 8004c4a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8004c4e:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 8004c50:	4a07      	ldr	r2, [pc, #28]	@ (8004c70 <SystemInit+0x48>)
 8004c52:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8004c54:	681a      	ldr	r2, [r3, #0]
 8004c56:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8004c5a:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8004c5c:	60d8      	str	r0, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = RAMDTCM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004c5e:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8004c62:	608b      	str	r3, [r1, #8]
#endif
}
 8004c64:	4770      	bx	lr
 8004c66:	bf00      	nop
 8004c68:	e000ed00 	.word	0xe000ed00
 8004c6c:	40023800 	.word	0x40023800
 8004c70:	24003010 	.word	0x24003010

08004c74 <ft5336_Reset>:
  */
void ft5336_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT5336 IC */
}
 8004c74:	4770      	bx	lr

08004c76 <ft5336_TS_ITStatus>:
  */
uint8_t ft5336_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT5336 */
  return 0;
}
 8004c76:	2000      	movs	r0, #0
 8004c78:	4770      	bx	lr
	...

08004c7c <ft5336_ReadID>:
  volatile uint8_t ucReadId = 0;
 8004c7c:	2300      	movs	r3, #0
{
 8004c7e:	b537      	push	{r0, r1, r2, r4, r5, lr}
  volatile uint8_t ucReadId = 0;
 8004c80:	f88d 3007 	strb.w	r3, [sp, #7]
  * @param  None.
  * @retval : I2C initialization status.
  */
static uint8_t ft5336_Get_I2C_InitializedStatus(void)
{
  return(ft5336_handle.i2cInitialized);
 8004c84:	4b0c      	ldr	r3, [pc, #48]	@ (8004cb8 <ft5336_ReadID+0x3c>)
  * @param  None.
  * @retval : None.
  */
static void ft5336_I2C_InitializeIfRequired(void)
{
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8004c86:	781a      	ldrb	r2, [r3, #0]
 8004c88:	b90a      	cbnz	r2, 8004c8e <ft5336_ReadID+0x12>
  {
    /* Initialize TS IO BUS layer (I2C) */
    //TS_IO_Init();

    /* Set state to initialized */
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8004c8a:	2201      	movs	r2, #1
 8004c8c:	701a      	strb	r2, [r3, #0]
{
 8004c8e:	2403      	movs	r4, #3
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8004c90:	b2c5      	uxtb	r5, r0
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8004c92:	3c01      	subs	r4, #1
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8004c94:	21a8      	movs	r1, #168	@ 0xa8
 8004c96:	4628      	mov	r0, r5
 8004c98:	f7fc fc68 	bl	800156c <TS_IO_Read>
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8004c9c:	f014 04ff 	ands.w	r4, r4, #255	@ 0xff
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8004ca0:	f88d 0007 	strb.w	r0, [sp, #7]
    if(ucReadId == FT5336_ID_VALUE)
 8004ca4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004ca8:	b2db      	uxtb	r3, r3
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8004caa:	d001      	beq.n	8004cb0 <ft5336_ReadID+0x34>
 8004cac:	2b51      	cmp	r3, #81	@ 0x51
 8004cae:	d1f0      	bne.n	8004c92 <ft5336_ReadID+0x16>
  return (ucReadId);
 8004cb0:	f89d 0007 	ldrb.w	r0, [sp, #7]
}
 8004cb4:	b003      	add	sp, #12
 8004cb6:	bd30      	pop	{r4, r5, pc}
 8004cb8:	20001e52 	.word	0x20001e52

08004cbc <ft5336_TS_DetectTouch>:
{
 8004cbc:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8004cbe:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 8004cc0:	2102      	movs	r1, #2
 8004cc2:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8004cc4:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 8004cc8:	f7fc fc50 	bl	800156c <TS_IO_Read>
 8004ccc:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT5336_TD_STAT_MASK;
 8004cd0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004cd4:	f003 030f 	and.w	r3, r3, #15
 8004cd8:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT5336_MAX_DETECTABLE_TOUCH)
 8004cdc:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004ce0:	2b05      	cmp	r3, #5
 8004ce2:	d901      	bls.n	8004ce8 <ft5336_TS_DetectTouch+0x2c>
    nbTouch = 0;
 8004ce4:	f88d 4007 	strb.w	r4, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
 8004ce8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8004cec:	4b03      	ldr	r3, [pc, #12]	@ (8004cfc <ft5336_TS_DetectTouch+0x40>)
  return(nbTouch);
 8004cee:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
 8004cf2:	705a      	strb	r2, [r3, #1]
  ft5336_handle.currActiveTouchIdx = 0;
 8004cf4:	2200      	movs	r2, #0
 8004cf6:	709a      	strb	r2, [r3, #2]
}
 8004cf8:	b002      	add	sp, #8
 8004cfa:	bd10      	pop	{r4, pc}
 8004cfc:	20001e52 	.word	0x20001e52

08004d00 <ft5336_TS_GetXY>:
{
 8004d00:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8004d04:	4c2f      	ldr	r4, [pc, #188]	@ (8004dc4 <ft5336_TS_GetXY+0xc4>)
{
 8004d06:	4615      	mov	r5, r2
  volatile uint8_t ucReadData = 0;
 8004d08:	f04f 0800 	mov.w	r8, #0
{
 8004d0c:	460f      	mov	r7, r1
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8004d0e:	78a3      	ldrb	r3, [r4, #2]
 8004d10:	7862      	ldrb	r2, [r4, #1]
  volatile uint8_t ucReadData = 0;
 8004d12:	f88d 8007 	strb.w	r8, [sp, #7]
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8004d16:	429a      	cmp	r2, r3
 8004d18:	d94d      	bls.n	8004db6 <ft5336_TS_GetXY+0xb6>
    switch(ft5336_handle.currActiveTouchIdx)
 8004d1a:	2b09      	cmp	r3, #9
 8004d1c:	d84e      	bhi.n	8004dbc <ft5336_TS_GetXY+0xbc>
 8004d1e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8004d22:	005b      	lsls	r3, r3, #1
 8004d24:	b2db      	uxtb	r3, r3
 8004d26:	1d19      	adds	r1, r3, #4
 8004d28:	f103 0b03 	add.w	fp, r3, #3
 8004d2c:	f103 0a06 	add.w	sl, r3, #6
 8004d30:	3305      	adds	r3, #5
 8004d32:	b2c9      	uxtb	r1, r1
 8004d34:	fa5f fb8b 	uxtb.w	fp, fp
 8004d38:	fa5f fa8a 	uxtb.w	sl, sl
 8004d3c:	fa5f f883 	uxtb.w	r8, r3
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 8004d40:	b2c6      	uxtb	r6, r0
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004d42:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 8004dc8 <ft5336_TS_GetXY+0xc8>
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 8004d46:	4630      	mov	r0, r6
 8004d48:	f7fc fc10 	bl	800156c <TS_IO_Read>
 8004d4c:	f88d 0007 	strb.w	r0, [sp, #7]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004d50:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8004d54:	4659      	mov	r1, fp
 8004d56:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004d58:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8004d5c:	f7fc fc06 	bl	800156c <TS_IO_Read>
 8004d60:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8004d64:	4651      	mov	r1, sl
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004d66:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8004d6a:	4630      	mov	r0, r6
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004d6c:	f8b9 2000 	ldrh.w	r2, [r9]
 8004d70:	021b      	lsls	r3, r3, #8
 8004d72:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8004d76:	4313      	orrs	r3, r2
    *X = coord;
 8004d78:	803b      	strh	r3, [r7, #0]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004d7a:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8004d7e:	f7fc fbf5 	bl	800156c <TS_IO_Read>
 8004d82:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8004d86:	4641      	mov	r1, r8
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004d88:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8004d8c:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8004d8e:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8004d92:	f7fc fbeb 	bl	800156c <TS_IO_Read>
 8004d96:	f88d 0007 	strb.w	r0, [sp, #7]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8004d9a:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004d9e:	f8b9 2000 	ldrh.w	r2, [r9]
 8004da2:	021b      	lsls	r3, r3, #8
 8004da4:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8004da8:	4313      	orrs	r3, r2
 8004daa:	f8a9 3000 	strh.w	r3, [r9]
    *Y = coord;
 8004dae:	802b      	strh	r3, [r5, #0]
    ft5336_handle.currActiveTouchIdx++; /* next call will work on next touch */
 8004db0:	78a3      	ldrb	r3, [r4, #2]
 8004db2:	3301      	adds	r3, #1
 8004db4:	70a3      	strb	r3, [r4, #2]
}
 8004db6:	b003      	add	sp, #12
 8004db8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8004dbc:	46c2      	mov	sl, r8
 8004dbe:	46c3      	mov	fp, r8
 8004dc0:	4641      	mov	r1, r8
 8004dc2:	e7bd      	b.n	8004d40 <ft5336_TS_GetXY+0x40>
 8004dc4:	20001e52 	.word	0x20001e52
 8004dc8:	20001e50 	.word	0x20001e50

08004dcc <ft5336_TS_EnableIT>:
   TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 8004dcc:	2201      	movs	r2, #1
 8004dce:	21a4      	movs	r1, #164	@ 0xa4
 8004dd0:	b2c0      	uxtb	r0, r0
 8004dd2:	f7fc bbb1 	b.w	8001538 <TS_IO_Write>

08004dd6 <ft5336_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 8004dd6:	2200      	movs	r2, #0
 8004dd8:	21a4      	movs	r1, #164	@ 0xa4
 8004dda:	b2c0      	uxtb	r0, r0
 8004ddc:	f7fc bbac 	b.w	8001538 <TS_IO_Write>

08004de0 <ft5336_TS_Start>:
  ft5336_TS_DisableIT(DeviceAddr);
 8004de0:	f7ff bff9 	b.w	8004dd6 <ft5336_TS_DisableIT>

08004de4 <ft5336_TS_ClearIT>:
void ft5336_TS_ClearIT(uint16_t DeviceAddr)
 8004de4:	4770      	bx	lr
	...

08004de8 <ft5336_Init>:
  return(ft5336_handle.i2cInitialized);
 8004de8:	4b02      	ldr	r3, [pc, #8]	@ (8004df4 <ft5336_Init+0xc>)
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8004dea:	781a      	ldrb	r2, [r3, #0]
 8004dec:	b90a      	cbnz	r2, 8004df2 <ft5336_Init+0xa>
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8004dee:	2201      	movs	r2, #1
 8004df0:	701a      	strb	r2, [r3, #0]
}
 8004df2:	4770      	bx	lr
 8004df4:	20001e52 	.word	0x20001e52

08004df8 <HAL_Init>:
  __HAL_FLASH_ART_ENABLE();
#endif /* ART_ACCELERATOR_ENABLE */

  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004df8:	4a07      	ldr	r2, [pc, #28]	@ (8004e18 <HAL_Init+0x20>)
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004dfa:	2003      	movs	r0, #3
{
 8004dfc:	b508      	push	{r3, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004dfe:	6813      	ldr	r3, [r2, #0]
 8004e00:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004e04:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004e06:	f000 f82d 	bl	8004e64 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004e0a:	2000      	movs	r0, #0
 8004e0c:	f7fc fa2e 	bl	800126c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004e10:	f7fb ff8c 	bl	8000d2c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004e14:	2000      	movs	r0, #0
 8004e16:	bd08      	pop	{r3, pc}
 8004e18:	40023c00 	.word	0x40023c00

08004e1c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004e1c:	4a03      	ldr	r2, [pc, #12]	@ (8004e2c <HAL_IncTick+0x10>)
 8004e1e:	4b04      	ldr	r3, [pc, #16]	@ (8004e30 <HAL_IncTick+0x14>)
 8004e20:	6811      	ldr	r1, [r2, #0]
 8004e22:	781b      	ldrb	r3, [r3, #0]
 8004e24:	440b      	add	r3, r1
 8004e26:	6013      	str	r3, [r2, #0]
}
 8004e28:	4770      	bx	lr
 8004e2a:	bf00      	nop
 8004e2c:	20001e58 	.word	0x20001e58
 8004e30:	20000038 	.word	0x20000038

08004e34 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004e34:	4b01      	ldr	r3, [pc, #4]	@ (8004e3c <HAL_GetTick+0x8>)
 8004e36:	6818      	ldr	r0, [r3, #0]
}
 8004e38:	4770      	bx	lr
 8004e3a:	bf00      	nop
 8004e3c:	20001e58 	.word	0x20001e58

08004e40 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004e40:	b538      	push	{r3, r4, r5, lr}
 8004e42:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004e44:	f7ff fff6 	bl	8004e34 <HAL_GetTick>
 8004e48:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004e4a:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004e4c:	bf1e      	ittt	ne
 8004e4e:	4b04      	ldrne	r3, [pc, #16]	@ (8004e60 <HAL_Delay+0x20>)
 8004e50:	781b      	ldrbne	r3, [r3, #0]
 8004e52:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8004e54:	f7ff ffee 	bl	8004e34 <HAL_GetTick>
 8004e58:	1b43      	subs	r3, r0, r5
 8004e5a:	42a3      	cmp	r3, r4
 8004e5c:	d3fa      	bcc.n	8004e54 <HAL_Delay+0x14>
  {
  }
}
 8004e5e:	bd38      	pop	{r3, r4, r5, pc}
 8004e60:	20000038 	.word	0x20000038

08004e64 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004e64:	4907      	ldr	r1, [pc, #28]	@ (8004e84 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004e66:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004e68:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004e6a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004e6e:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8004e72:	0412      	lsls	r2, r2, #16
 8004e74:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004e76:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004e78:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004e7c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8004e80:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004e82:	4770      	bx	lr
 8004e84:	e000ed00 	.word	0xe000ed00

08004e88 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004e88:	4b16      	ldr	r3, [pc, #88]	@ (8004ee4 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004e8a:	b530      	push	{r4, r5, lr}
 8004e8c:	68dc      	ldr	r4, [r3, #12]
 8004e8e:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004e92:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004e96:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004e98:	2b04      	cmp	r3, #4
 8004e9a:	bf28      	it	cs
 8004e9c:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004e9e:	2d06      	cmp	r5, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004ea0:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004ea4:	bf8c      	ite	hi
 8004ea6:	3c03      	subhi	r4, #3
 8004ea8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004eaa:	fa05 f303 	lsl.w	r3, r5, r3
  if ((int32_t)(IRQn) >= 0)
 8004eae:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004eb0:	fa05 f504 	lsl.w	r5, r5, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004eb4:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004eb8:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004ebc:	fa03 f304 	lsl.w	r3, r3, r4
 8004ec0:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004ec4:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8004ec8:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 8004eca:	db06      	blt.n	8004eda <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004ecc:	f100 4060 	add.w	r0, r0, #3758096384	@ 0xe0000000
 8004ed0:	f500 4061 	add.w	r0, r0, #57600	@ 0xe100
 8004ed4:	f880 3300 	strb.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004ed8:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004eda:	f000 000f 	and.w	r0, r0, #15
 8004ede:	4a02      	ldr	r2, [pc, #8]	@ (8004ee8 <HAL_NVIC_SetPriority+0x60>)
 8004ee0:	5413      	strb	r3, [r2, r0]
 8004ee2:	e7f9      	b.n	8004ed8 <HAL_NVIC_SetPriority+0x50>
 8004ee4:	e000ed00 	.word	0xe000ed00
 8004ee8:	e000ed14 	.word	0xe000ed14

08004eec <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004eec:	2800      	cmp	r0, #0
 8004eee:	db07      	blt.n	8004f00 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004ef0:	0941      	lsrs	r1, r0, #5
 8004ef2:	2301      	movs	r3, #1
 8004ef4:	f000 001f 	and.w	r0, r0, #31
 8004ef8:	4a02      	ldr	r2, [pc, #8]	@ (8004f04 <HAL_NVIC_EnableIRQ+0x18>)
 8004efa:	4083      	lsls	r3, r0
 8004efc:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004f00:	4770      	bx	lr
 8004f02:	bf00      	nop
 8004f04:	e000e100 	.word	0xe000e100

08004f08 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004f08:	2800      	cmp	r0, #0
 8004f0a:	db0c      	blt.n	8004f26 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004f0c:	0943      	lsrs	r3, r0, #5
 8004f0e:	2201      	movs	r2, #1
 8004f10:	f000 001f 	and.w	r0, r0, #31
 8004f14:	4904      	ldr	r1, [pc, #16]	@ (8004f28 <HAL_NVIC_DisableIRQ+0x20>)
 8004f16:	3320      	adds	r3, #32
 8004f18:	4082      	lsls	r2, r0
 8004f1a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8004f1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004f22:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8004f26:	4770      	bx	lr
 8004f28:	e000e100 	.word	0xe000e100

08004f2c <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 8004f2c:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 8004f30:	4b04      	ldr	r3, [pc, #16]	@ (8004f44 <HAL_MPU_Disable+0x18>)
 8004f32:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004f34:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8004f38:	625a      	str	r2, [r3, #36]	@ 0x24
  
  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 8004f3a:	2200      	movs	r2, #0
 8004f3c:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
}
 8004f40:	4770      	bx	lr
 8004f42:	bf00      	nop
 8004f44:	e000ed00 	.word	0xe000ed00

08004f48 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 8004f48:	4b06      	ldr	r3, [pc, #24]	@ (8004f64 <HAL_MPU_Enable+0x1c>)
 8004f4a:	f040 0001 	orr.w	r0, r0, #1
 8004f4e:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94
  
  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 8004f52:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004f54:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8004f58:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 8004f5a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004f5e:	f3bf 8f6f 	isb	sy
  
  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 8004f62:	4770      	bx	lr
 8004f64:	e000ed00 	.word	0xe000ed00

08004f68 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8004f68:	7843      	ldrb	r3, [r0, #1]
 8004f6a:	4a14      	ldr	r2, [pc, #80]	@ (8004fbc <HAL_MPU_ConfigRegion+0x54>)
{
 8004f6c:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 8004f6e:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  if ((MPU_Init->Enable) != RESET)
 8004f72:	7801      	ldrb	r1, [r0, #0]
 8004f74:	b1e9      	cbz	r1, 8004fb2 <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
    
    MPU->RBAR = MPU_Init->BaseAddress;
 8004f76:	6843      	ldr	r3, [r0, #4]
 8004f78:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8004f7c:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004f7e:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8004f80:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004f82:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004f86:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8004f88:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004f8a:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 8004f8e:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004f90:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8004f94:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004f96:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 8004f9a:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004f9c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8004fa0:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004fa2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8004fa6:	7a01      	ldrb	r1, [r0, #8]
 8004fa8:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004fac:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 8004fb0:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 8004fb2:	f8c2 109c 	str.w	r1, [r2, #156]	@ 0x9c
    MPU->RASR = 0x00;
 8004fb6:	f8c2 10a0 	str.w	r1, [r2, #160]	@ 0xa0
}
 8004fba:	e7f9      	b.n	8004fb0 <HAL_MPU_ConfigRegion+0x48>
 8004fbc:	e000ed00 	.word	0xe000ed00

08004fc0 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004fc0:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004fc2:	4604      	mov	r4, r0
 8004fc4:	b908      	cbnz	r0, 8004fca <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8004fc6:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8004fc8:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004fca:	7f43      	ldrb	r3, [r0, #29]
 8004fcc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004fd0:	b913      	cbnz	r3, 8004fd8 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8004fd2:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8004fd4:	f7fb fec8 	bl	8000d68 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8004fd8:	2302      	movs	r3, #2
 8004fda:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8004fdc:	7923      	ldrb	r3, [r4, #4]
 8004fde:	b9e3      	cbnz	r3, 800501a <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8004fe0:	6823      	ldr	r3, [r4, #0]
 8004fe2:	4a13      	ldr	r2, [pc, #76]	@ (8005030 <HAL_CRC_Init+0x70>)
 8004fe4:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8004fe6:	689a      	ldr	r2, [r3, #8]
 8004fe8:	f022 0218 	bic.w	r2, r2, #24
 8004fec:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004fee:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004ff0:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004ff2:	b9d2      	cbnz	r2, 800502a <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004ff4:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004ff8:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 8004ffa:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004ffc:	689a      	ldr	r2, [r3, #8]
 8004ffe:	6961      	ldr	r1, [r4, #20]
 8005000:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8005004:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8005006:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8005008:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 800500a:	689a      	ldr	r2, [r3, #8]
 800500c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8005010:	430a      	orrs	r2, r1
 8005012:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8005014:	2301      	movs	r3, #1
 8005016:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8005018:	e7d6      	b.n	8004fc8 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 800501a:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 800501e:	4620      	mov	r0, r4
 8005020:	f000 f808 	bl	8005034 <HAL_CRCEx_Polynomial_Set>
 8005024:	2800      	cmp	r0, #0
 8005026:	d0e2      	beq.n	8004fee <HAL_CRC_Init+0x2e>
 8005028:	e7cd      	b.n	8004fc6 <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 800502a:	6922      	ldr	r2, [r4, #16]
 800502c:	e7e4      	b.n	8004ff8 <HAL_CRC_Init+0x38>
 800502e:	bf00      	nop
 8005030:	04c11db7 	.word	0x04c11db7

08005034 <HAL_CRCEx_Polynomial_Set>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8005034:	231f      	movs	r3, #31
{
 8005036:	b510      	push	{r4, lr}
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8005038:	3b01      	subs	r3, #1
 800503a:	d31d      	bcc.n	8005078 <HAL_CRCEx_Polynomial_Set+0x44>
 800503c:	fa21 f403 	lsr.w	r4, r1, r3
 8005040:	07e4      	lsls	r4, r4, #31
 8005042:	d5f9      	bpl.n	8005038 <HAL_CRCEx_Polynomial_Set+0x4>
  {
  }

  switch (PolyLength)
 8005044:	2a10      	cmp	r2, #16
 8005046:	d013      	beq.n	8005070 <HAL_CRCEx_Polynomial_Set+0x3c>
 8005048:	2a10      	cmp	r2, #16
 800504a:	d804      	bhi.n	8005056 <HAL_CRCEx_Polynomial_Set+0x22>
 800504c:	b13a      	cbz	r2, 800505e <HAL_CRCEx_Polynomial_Set+0x2a>
 800504e:	2a08      	cmp	r2, #8
 8005050:	d010      	beq.n	8005074 <HAL_CRCEx_Polynomial_Set+0x40>
 8005052:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8005054:	e00b      	b.n	800506e <HAL_CRCEx_Polynomial_Set+0x3a>
  switch (PolyLength)
 8005056:	2a18      	cmp	r2, #24
 8005058:	d1fb      	bne.n	8005052 <HAL_CRCEx_Polynomial_Set+0x1e>
      if (msb >= HAL_CRC_LENGTH_7B)
 800505a:	2b06      	cmp	r3, #6
      if (msb >= HAL_CRC_LENGTH_16B)
 800505c:	d8f9      	bhi.n	8005052 <HAL_CRCEx_Polynomial_Set+0x1e>
    WRITE_REG(hcrc->Instance->POL, Pol);
 800505e:	6800      	ldr	r0, [r0, #0]
 8005060:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8005062:	6883      	ldr	r3, [r0, #8]
 8005064:	f023 0318 	bic.w	r3, r3, #24
 8005068:	4313      	orrs	r3, r2
 800506a:	6083      	str	r3, [r0, #8]
 800506c:	2000      	movs	r0, #0
}
 800506e:	bd10      	pop	{r4, pc}
      if (msb >= HAL_CRC_LENGTH_8B)
 8005070:	2b07      	cmp	r3, #7
 8005072:	e7f3      	b.n	800505c <HAL_CRCEx_Polynomial_Set+0x28>
      if (msb >= HAL_CRC_LENGTH_16B)
 8005074:	2b0f      	cmp	r3, #15
 8005076:	e7f1      	b.n	800505c <HAL_CRCEx_Polynomial_Set+0x28>
  switch (PolyLength)
 8005078:	2a10      	cmp	r2, #16
 800507a:	d1e5      	bne.n	8005048 <HAL_CRCEx_Polynomial_Set+0x14>
 800507c:	e7e9      	b.n	8005052 <HAL_CRCEx_Polynomial_Set+0x1e>

0800507e <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 800507e:	b570      	push	{r4, r5, r6, lr}
 8005080:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8005082:	6d86      	ldr	r6, [r0, #88]	@ 0x58
  
  uint32_t tickstart = HAL_GetTick();
 8005084:	f7ff fed6 	bl	8004e34 <HAL_GetTick>
 8005088:	4605      	mov	r5, r0
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800508a:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
 800508e:	2b02      	cmp	r3, #2
 8005090:	d006      	beq.n	80050a0 <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8005092:	2380      	movs	r3, #128	@ 0x80
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
    
    return HAL_ERROR;
 8005094:	2001      	movs	r0, #1
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8005096:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
 8005098:	2300      	movs	r3, #0
 800509a:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
    
  }
  return HAL_OK;
}
 800509e:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80050a0:	6823      	ldr	r3, [r4, #0]
 80050a2:	681a      	ldr	r2, [r3, #0]
 80050a4:	f022 0216 	bic.w	r2, r2, #22
 80050a8:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 80050aa:	695a      	ldr	r2, [r3, #20]
 80050ac:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80050b0:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80050b2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80050b4:	b90a      	cbnz	r2, 80050ba <HAL_DMA_Abort+0x3c>
 80050b6:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 80050b8:	b11a      	cbz	r2, 80050c2 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 80050ba:	681a      	ldr	r2, [r3, #0]
 80050bc:	f022 0208 	bic.w	r2, r2, #8
 80050c0:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 80050c2:	681a      	ldr	r2, [r3, #0]
 80050c4:	f022 0201 	bic.w	r2, r2, #1
 80050c8:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80050ca:	6823      	ldr	r3, [r4, #0]
 80050cc:	6818      	ldr	r0, [r3, #0]
 80050ce:	f010 0001 	ands.w	r0, r0, #1
 80050d2:	d107      	bne.n	80050e4 <HAL_DMA_Abort+0x66>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80050d4:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 80050d6:	233f      	movs	r3, #63	@ 0x3f
 80050d8:	4093      	lsls	r3, r2
 80050da:	60b3      	str	r3, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 80050dc:	2301      	movs	r3, #1
 80050de:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
  return HAL_OK;
 80050e2:	e7d9      	b.n	8005098 <HAL_DMA_Abort+0x1a>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80050e4:	f7ff fea6 	bl	8004e34 <HAL_GetTick>
 80050e8:	1b40      	subs	r0, r0, r5
 80050ea:	2805      	cmp	r0, #5
 80050ec:	d9ed      	bls.n	80050ca <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80050ee:	2320      	movs	r3, #32
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 80050f0:	2003      	movs	r0, #3
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80050f2:	6563      	str	r3, [r4, #84]	@ 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 80050f4:	f884 0035 	strb.w	r0, [r4, #53]	@ 0x35
        return HAL_TIMEOUT;
 80050f8:	e7ce      	b.n	8005098 <HAL_DMA_Abort+0x1a>

080050fa <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80050fa:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 80050fe:	2b02      	cmp	r3, #2
 8005100:	d003      	beq.n	800510a <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8005102:	2380      	movs	r3, #128	@ 0x80
 8005104:	6543      	str	r3, [r0, #84]	@ 0x54
    return HAL_ERROR;
 8005106:	2001      	movs	r0, #1
 8005108:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800510a:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800510c:	2305      	movs	r3, #5
 800510e:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
  }

  return HAL_OK;
 8005112:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8005114:	6813      	ldr	r3, [r2, #0]
 8005116:	f023 0301 	bic.w	r3, r3, #1
 800511a:	6013      	str	r3, [r2, #0]
}
 800511c:	4770      	bx	lr

0800511e <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800511e:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8005120:	4604      	mov	r4, r0
 8005122:	b330      	cbz	r0, 8005172 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8005124:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8005128:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800512c:	b91b      	cbnz	r3, 8005136 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800512e:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8005132:	f7fb fe2f 	bl	8000d94 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005136:	6822      	ldr	r2, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005138:	2302      	movs	r3, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800513a:	6861      	ldr	r1, [r4, #4]
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800513c:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800513e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005142:	6813      	ldr	r3, [r2, #0]
 8005144:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8005148:	430b      	orrs	r3, r1
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800514a:	68a1      	ldr	r1, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800514c:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800514e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8005150:	f023 0307 	bic.w	r3, r3, #7
 8005154:	430b      	orrs	r3, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005156:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8005158:	6353      	str	r3, [r2, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800515a:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800515c:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8005160:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8005164:	430b      	orrs	r3, r1
 8005166:	6413      	str	r3, [r2, #64]	@ 0x40

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005168:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800516a:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800516c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8005170:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005172:	2001      	movs	r0, #1
 8005174:	e7fc      	b.n	8005170 <HAL_DMA2D_Init+0x52>

08005176 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8005176:	4770      	bx	lr

08005178 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8005178:	4770      	bx	lr

0800517a <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800517a:	6803      	ldr	r3, [r0, #0]
{
 800517c:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800517e:	685e      	ldr	r6, [r3, #4]
{
 8005180:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8005182:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8005184:	07f2      	lsls	r2, r6, #31
 8005186:	d514      	bpl.n	80051b2 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8005188:	05e9      	lsls	r1, r5, #23
 800518a:	d512      	bpl.n	80051b2 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800518c:	681a      	ldr	r2, [r3, #0]
 800518e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005192:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8005194:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8005196:	f042 0201 	orr.w	r2, r2, #1
 800519a:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800519c:	2201      	movs	r2, #1
 800519e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80051a0:	2304      	movs	r3, #4
 80051a2:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80051a6:	2300      	movs	r3, #0
 80051a8:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80051ac:	6943      	ldr	r3, [r0, #20]
 80051ae:	b103      	cbz	r3, 80051b2 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80051b0:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80051b2:	06b2      	lsls	r2, r6, #26
 80051b4:	d516      	bpl.n	80051e4 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80051b6:	04ab      	lsls	r3, r5, #18
 80051b8:	d514      	bpl.n	80051e4 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80051ba:	6823      	ldr	r3, [r4, #0]
 80051bc:	681a      	ldr	r2, [r3, #0]
 80051be:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80051c2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80051c4:	2220      	movs	r2, #32
 80051c6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80051c8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80051ca:	f043 0302 	orr.w	r3, r3, #2
 80051ce:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80051d0:	2304      	movs	r3, #4
 80051d2:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80051d6:	2300      	movs	r3, #0
 80051d8:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80051dc:	6963      	ldr	r3, [r4, #20]
 80051de:	b10b      	cbz	r3, 80051e4 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 80051e0:	4620      	mov	r0, r4
 80051e2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80051e4:	0730      	lsls	r0, r6, #28
 80051e6:	d516      	bpl.n	8005216 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80051e8:	0529      	lsls	r1, r5, #20
 80051ea:	d514      	bpl.n	8005216 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80051ec:	6823      	ldr	r3, [r4, #0]
 80051ee:	681a      	ldr	r2, [r3, #0]
 80051f0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80051f4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80051f6:	2208      	movs	r2, #8
 80051f8:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80051fa:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80051fc:	f043 0304 	orr.w	r3, r3, #4
 8005200:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005202:	2304      	movs	r3, #4
 8005204:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8005208:	2300      	movs	r3, #0
 800520a:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800520e:	6963      	ldr	r3, [r4, #20]
 8005210:	b10b      	cbz	r3, 8005216 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8005212:	4620      	mov	r0, r4
 8005214:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8005216:	0772      	lsls	r2, r6, #29
 8005218:	d50b      	bpl.n	8005232 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800521a:	056b      	lsls	r3, r5, #21
 800521c:	d509      	bpl.n	8005232 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800521e:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8005220:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8005222:	681a      	ldr	r2, [r3, #0]
 8005224:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005228:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800522a:	2204      	movs	r2, #4
 800522c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800522e:	f7ff ffa2 	bl	8005176 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8005232:	07b0      	lsls	r0, r6, #30
 8005234:	d514      	bpl.n	8005260 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8005236:	05a9      	lsls	r1, r5, #22
 8005238:	d512      	bpl.n	8005260 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800523a:	6823      	ldr	r3, [r4, #0]
 800523c:	681a      	ldr	r2, [r3, #0]
 800523e:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8005242:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8005244:	2202      	movs	r2, #2
 8005246:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005248:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800524a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800524c:	2301      	movs	r3, #1
 800524e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8005252:	2300      	movs	r3, #0
 8005254:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8005258:	6923      	ldr	r3, [r4, #16]
 800525a:	b10b      	cbz	r3, 8005260 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 800525c:	4620      	mov	r0, r4
 800525e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8005260:	06f2      	lsls	r2, r6, #27
 8005262:	d513      	bpl.n	800528c <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8005264:	04eb      	lsls	r3, r5, #19
 8005266:	d511      	bpl.n	800528c <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8005268:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800526a:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800526c:	681a      	ldr	r2, [r3, #0]
 800526e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8005272:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8005274:	2210      	movs	r2, #16
 8005276:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005278:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800527a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800527c:	2301      	movs	r3, #1
 800527e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8005282:	2300      	movs	r3, #0
 8005284:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8005288:	f7ff ff76 	bl	8005178 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 800528c:	bd70      	pop	{r4, r5, r6, pc}
	...

08005290 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8005290:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8005292:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
{
 8005296:	4603      	mov	r3, r0
 8005298:	2002      	movs	r0, #2
  __HAL_LOCK(hdma2d);
 800529a:	2a01      	cmp	r2, #1
 800529c:	d02b      	beq.n	80052f6 <HAL_DMA2D_ConfigLayer+0x66>
 800529e:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80052a0:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39
#if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
#else
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80052a4:	010e      	lsls	r6, r1, #4
 80052a6:	4f1c      	ldr	r7, [pc, #112]	@ (8005318 <HAL_DMA2D_ConfigLayer+0x88>)
  __HAL_LOCK(hdma2d);
 80052a8:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80052ac:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 80052b0:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 80052b4:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 80052b6:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80052ba:	3c09      	subs	r4, #9
 80052bc:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80052be:	bf96      	itet	ls
 80052c0:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80052c4:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80052c8:	4310      	orrls	r0, r2

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80052ca:	681a      	ldr	r2, [r3, #0]
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80052cc:	b9a1      	cbnz	r1, 80052f8 <HAL_DMA2D_ConfigLayer+0x68>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80052ce:	6a51      	ldr	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80052d0:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80052d2:	ea01 0107 	and.w	r1, r1, r7
 80052d6:	ea41 0100 	orr.w	r1, r1, r0
 80052da:	6251      	str	r1, [r2, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80052dc:	6999      	ldr	r1, [r3, #24]
 80052de:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80052e0:	d803      	bhi.n	80052ea <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80052e2:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 80052e4:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 80052e8:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80052ea:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80052ec:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80052ee:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 80052f2:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 80052f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80052f8:	69d1      	ldr	r1, [r2, #28]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80052fa:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80052fc:	ea01 0107 	and.w	r1, r1, r7
 8005300:	ea41 0100 	orr.w	r1, r1, r0
 8005304:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005306:	eb03 0106 	add.w	r1, r3, r6
 800530a:	6989      	ldr	r1, [r1, #24]
 800530c:	6111      	str	r1, [r2, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800530e:	d8ec      	bhi.n	80052ea <HAL_DMA2D_ConfigLayer+0x5a>
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8005310:	f025 457f 	bic.w	r5, r5, #4278190080	@ 0xff000000
 8005314:	6215      	str	r5, [r2, #32]
 8005316:	e7e8      	b.n	80052ea <HAL_DMA2D_ConfigLayer+0x5a>
 8005318:	00fcfff0 	.word	0x00fcfff0

0800531c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800531c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8005320:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005322:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 80054e0 <HAL_GPIO_Init+0x1c4>
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8005326:	4a6c      	ldr	r2, [pc, #432]	@ (80054d8 <HAL_GPIO_Init+0x1bc>)
    ioposition = ((uint32_t)0x01) << position;
 8005328:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800532a:	680d      	ldr	r5, [r1, #0]
    ioposition = ((uint32_t)0x01) << position;
 800532c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800532e:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8005332:	43ac      	bics	r4, r5
 8005334:	f040 80b7 	bne.w	80054a6 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8005338:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 800533a:	2703      	movs	r7, #3
 800533c:	ea4f 0e43 	mov.w	lr, r3, lsl #1
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8005340:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8005344:	fa07 fc0e 	lsl.w	ip, r7, lr
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8005348:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 800534a:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 800534e:	2f01      	cmp	r7, #1
 8005350:	d834      	bhi.n	80053bc <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8005352:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8005354:	ea07 080c 	and.w	r8, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2));
 8005358:	68cf      	ldr	r7, [r1, #12]
 800535a:	fa07 f70e 	lsl.w	r7, r7, lr
 800535e:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OSPEEDR = temp;
 8005362:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8005364:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005366:	ea27 0806 	bic.w	r8, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800536a:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800536e:	409f      	lsls	r7, r3
 8005370:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OTYPER = temp;
 8005374:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8005376:	68c7      	ldr	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005378:	2c02      	cmp	r4, #2
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 800537a:	ea07 080c 	and.w	r8, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2));
 800537e:	688f      	ldr	r7, [r1, #8]
 8005380:	fa07 f70e 	lsl.w	r7, r7, lr
 8005384:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->PUPDR = temp;
 8005388:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800538a:	d119      	bne.n	80053c0 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3];
 800538c:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8005390:	f003 0a07 	and.w	sl, r3, #7
 8005394:	f04f 0b0f 	mov.w	fp, #15
 8005398:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 800539c:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
        temp = GPIOx->AFR[position >> 3];
 80053a0:	f8d8 7020 	ldr.w	r7, [r8, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80053a4:	fa0b fb0a 	lsl.w	fp, fp, sl
 80053a8:	ea27 0b0b 	bic.w	fp, r7, fp
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 80053ac:	690f      	ldr	r7, [r1, #16]
 80053ae:	fa07 f70a 	lsl.w	r7, r7, sl
 80053b2:	ea47 070b 	orr.w	r7, r7, fp
        GPIOx->AFR[position >> 3] = temp;
 80053b6:	f8c8 7020 	str.w	r7, [r8, #32]
 80053ba:	e001      	b.n	80053c0 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80053bc:	2c03      	cmp	r4, #3
 80053be:	d1da      	bne.n	8005376 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80053c0:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80053c2:	fa04 f40e 	lsl.w	r4, r4, lr
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80053c6:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 80053ca:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80053ce:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
 80053d2:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80053d4:	d067      	beq.n	80054a6 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80053d6:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 80053da:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80053de:	f003 0c03 	and.w	ip, r3, #3
 80053e2:	f04f 0e0f 	mov.w	lr, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80053e6:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 80053ea:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80053ee:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80053f2:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 80053f6:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 80053fa:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80053fe:	fa0e fe0c 	lsl.w	lr, lr, ip
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005402:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8005406:	9401      	str	r4, [sp, #4]
 8005408:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2];
 800540a:	68bc      	ldr	r4, [r7, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800540c:	ea24 0e0e 	bic.w	lr, r4, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8005410:	4c32      	ldr	r4, [pc, #200]	@ (80054dc <HAL_GPIO_Init+0x1c0>)
 8005412:	42a0      	cmp	r0, r4
 8005414:	d04e      	beq.n	80054b4 <HAL_GPIO_Init+0x198>
 8005416:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800541a:	42a0      	cmp	r0, r4
 800541c:	d04c      	beq.n	80054b8 <HAL_GPIO_Init+0x19c>
 800541e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005422:	42a0      	cmp	r0, r4
 8005424:	d04a      	beq.n	80054bc <HAL_GPIO_Init+0x1a0>
 8005426:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800542a:	42a0      	cmp	r0, r4
 800542c:	d048      	beq.n	80054c0 <HAL_GPIO_Init+0x1a4>
 800542e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005432:	42a0      	cmp	r0, r4
 8005434:	d046      	beq.n	80054c4 <HAL_GPIO_Init+0x1a8>
 8005436:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800543a:	42a0      	cmp	r0, r4
 800543c:	d044      	beq.n	80054c8 <HAL_GPIO_Init+0x1ac>
 800543e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005442:	42a0      	cmp	r0, r4
 8005444:	d042      	beq.n	80054cc <HAL_GPIO_Init+0x1b0>
 8005446:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800544a:	42a0      	cmp	r0, r4
 800544c:	d040      	beq.n	80054d0 <HAL_GPIO_Init+0x1b4>
 800544e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005452:	42a0      	cmp	r0, r4
 8005454:	d03e      	beq.n	80054d4 <HAL_GPIO_Init+0x1b8>
 8005456:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800545a:	42a0      	cmp	r0, r4
 800545c:	bf14      	ite	ne
 800545e:	240a      	movne	r4, #10
 8005460:	2409      	moveq	r4, #9
 8005462:	fa04 f40c 	lsl.w	r4, r4, ip
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8005466:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 800546a:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2] = temp;
 800546e:	60bc      	str	r4, [r7, #8]
        temp &= ~((uint32_t)iocurrent);
 8005470:	ea6f 0706 	mvn.w	r7, r6
        temp = EXTI->RTSR;
 8005474:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8005476:	bf0c      	ite	eq
 8005478:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800547a:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 800547c:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        EXTI->RTSR = temp;
 8005480:	6094      	str	r4, [r2, #8]
        temp = EXTI->FTSR;
 8005482:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 8005484:	bf0c      	ite	eq
 8005486:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005488:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 800548a:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        EXTI->FTSR = temp;
 800548e:	60d4      	str	r4, [r2, #12]
        temp = EXTI->EMR;
 8005490:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 8005492:	bf0c      	ite	eq
 8005494:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005496:	4334      	orrne	r4, r6
        EXTI->EMR = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8005498:	03ed      	lsls	r5, r5, #15
        EXTI->EMR = temp;
 800549a:	6054      	str	r4, [r2, #4]
        temp = EXTI->IMR;
 800549c:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800549e:	bf54      	ite	pl
 80054a0:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 80054a2:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 80054a4:	6014      	str	r4, [r2, #0]
  for(position = 0; position < GPIO_NUMBER; position++)
 80054a6:	3301      	adds	r3, #1
 80054a8:	2b10      	cmp	r3, #16
 80054aa:	f47f af3d 	bne.w	8005328 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80054ae:	b003      	add	sp, #12
 80054b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80054b4:	2400      	movs	r4, #0
 80054b6:	e7d4      	b.n	8005462 <HAL_GPIO_Init+0x146>
 80054b8:	2401      	movs	r4, #1
 80054ba:	e7d2      	b.n	8005462 <HAL_GPIO_Init+0x146>
 80054bc:	2402      	movs	r4, #2
 80054be:	e7d0      	b.n	8005462 <HAL_GPIO_Init+0x146>
 80054c0:	2403      	movs	r4, #3
 80054c2:	e7ce      	b.n	8005462 <HAL_GPIO_Init+0x146>
 80054c4:	2404      	movs	r4, #4
 80054c6:	e7cc      	b.n	8005462 <HAL_GPIO_Init+0x146>
 80054c8:	2405      	movs	r4, #5
 80054ca:	e7ca      	b.n	8005462 <HAL_GPIO_Init+0x146>
 80054cc:	2406      	movs	r4, #6
 80054ce:	e7c8      	b.n	8005462 <HAL_GPIO_Init+0x146>
 80054d0:	2407      	movs	r4, #7
 80054d2:	e7c6      	b.n	8005462 <HAL_GPIO_Init+0x146>
 80054d4:	2408      	movs	r4, #8
 80054d6:	e7c4      	b.n	8005462 <HAL_GPIO_Init+0x146>
 80054d8:	40013c00 	.word	0x40013c00
 80054dc:	40020000 	.word	0x40020000
 80054e0:	40023800 	.word	0x40023800

080054e4 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 80054e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 80054e8:	2200      	movs	r2, #0
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 80054ea:	f04f 0a01 	mov.w	sl, #1

    if(iocurrent == ioposition)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2];
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 80054ee:	f04f 080f 	mov.w	r8, #15
        tmp = ((uint32_t)0x0F) << (4 * (position & 0x03));
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
      }
      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 80054f2:	f04f 0b03 	mov.w	fp, #3
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80054f6:	4c46      	ldr	r4, [pc, #280]	@ (8005610 <HAL_GPIO_DeInit+0x12c>)
    ioposition = ((uint32_t)0x01) << position;
 80054f8:	fa0a fc02 	lsl.w	ip, sl, r2
    if(iocurrent == ioposition)
 80054fc:	ea3c 0301 	bics.w	r3, ip, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8005500:	ea0c 0601 	and.w	r6, ip, r1
    if(iocurrent == ioposition)
 8005504:	d16c      	bne.n	80055e0 <HAL_GPIO_DeInit+0xfc>
      tmp = SYSCFG->EXTICR[position >> 2];
 8005506:	f022 0503 	bic.w	r5, r2, #3
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 800550a:	f002 0703 	and.w	r7, r2, #3
 800550e:	f105 4580 	add.w	r5, r5, #1073741824	@ 0x40000000
 8005512:	00bf      	lsls	r7, r7, #2
 8005514:	f505 359c 	add.w	r5, r5, #79872	@ 0x13800
 8005518:	fa08 f907 	lsl.w	r9, r8, r7
      tmp = SYSCFG->EXTICR[position >> 2];
 800551c:	68ab      	ldr	r3, [r5, #8]
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 800551e:	ea09 0e03 	and.w	lr, r9, r3
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 8005522:	4b3c      	ldr	r3, [pc, #240]	@ (8005614 <HAL_GPIO_DeInit+0x130>)
 8005524:	4298      	cmp	r0, r3
 8005526:	d060      	beq.n	80055ea <HAL_GPIO_DeInit+0x106>
 8005528:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800552c:	4298      	cmp	r0, r3
 800552e:	d05e      	beq.n	80055ee <HAL_GPIO_DeInit+0x10a>
 8005530:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005534:	4298      	cmp	r0, r3
 8005536:	d05c      	beq.n	80055f2 <HAL_GPIO_DeInit+0x10e>
 8005538:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800553c:	4298      	cmp	r0, r3
 800553e:	d05a      	beq.n	80055f6 <HAL_GPIO_DeInit+0x112>
 8005540:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005544:	4298      	cmp	r0, r3
 8005546:	d058      	beq.n	80055fa <HAL_GPIO_DeInit+0x116>
 8005548:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800554c:	4298      	cmp	r0, r3
 800554e:	d056      	beq.n	80055fe <HAL_GPIO_DeInit+0x11a>
 8005550:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005554:	4298      	cmp	r0, r3
 8005556:	d054      	beq.n	8005602 <HAL_GPIO_DeInit+0x11e>
 8005558:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800555c:	4298      	cmp	r0, r3
 800555e:	d052      	beq.n	8005606 <HAL_GPIO_DeInit+0x122>
 8005560:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8005564:	4298      	cmp	r0, r3
 8005566:	d050      	beq.n	800560a <HAL_GPIO_DeInit+0x126>
 8005568:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800556c:	4298      	cmp	r0, r3
 800556e:	bf0c      	ite	eq
 8005570:	2309      	moveq	r3, #9
 8005572:	230a      	movne	r3, #10
 8005574:	40bb      	lsls	r3, r7
 8005576:	4573      	cmp	r3, lr
 8005578:	d113      	bne.n	80055a2 <HAL_GPIO_DeInit+0xbe>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800557a:	6823      	ldr	r3, [r4, #0]
 800557c:	ea23 0306 	bic.w	r3, r3, r6
 8005580:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8005582:	6863      	ldr	r3, [r4, #4]
 8005584:	ea23 0306 	bic.w	r3, r3, r6
 8005588:	6063      	str	r3, [r4, #4]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 800558a:	68e3      	ldr	r3, [r4, #12]
 800558c:	ea23 0306 	bic.w	r3, r3, r6
 8005590:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8005592:	68a3      	ldr	r3, [r4, #8]
 8005594:	ea23 0306 	bic.w	r3, r3, r6
 8005598:	60a3      	str	r3, [r4, #8]
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
 800559a:	68ab      	ldr	r3, [r5, #8]
 800559c:	ea23 0309 	bic.w	r3, r3, r9
 80055a0:	60ab      	str	r3, [r5, #8]
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 80055a2:	0053      	lsls	r3, r2, #1
 80055a4:	6805      	ldr	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80055a6:	08d6      	lsrs	r6, r2, #3
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 80055a8:	fa0b f303 	lsl.w	r3, fp, r3
 80055ac:	eb00 0686 	add.w	r6, r0, r6, lsl #2
 80055b0:	ea25 0503 	bic.w	r5, r5, r3
 80055b4:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80055b6:	f002 0507 	and.w	r5, r2, #7
 80055ba:	6a37      	ldr	r7, [r6, #32]
 80055bc:	00ad      	lsls	r5, r5, #2
 80055be:	fa08 f505 	lsl.w	r5, r8, r5
 80055c2:	ea27 0705 	bic.w	r7, r7, r5
 80055c6:	6237      	str	r7, [r6, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 80055c8:	68c5      	ldr	r5, [r0, #12]
 80055ca:	ea25 0503 	bic.w	r5, r5, r3
 80055ce:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 80055d0:	6845      	ldr	r5, [r0, #4]
 80055d2:	ea25 050c 	bic.w	r5, r5, ip
 80055d6:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80055d8:	6885      	ldr	r5, [r0, #8]
 80055da:	ea25 0303 	bic.w	r3, r5, r3
 80055de:	6083      	str	r3, [r0, #8]
  for(position = 0; position < GPIO_NUMBER; position++)
 80055e0:	3201      	adds	r2, #1
 80055e2:	2a10      	cmp	r2, #16
 80055e4:	d188      	bne.n	80054f8 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 80055e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 80055ea:	2300      	movs	r3, #0
 80055ec:	e7c2      	b.n	8005574 <HAL_GPIO_DeInit+0x90>
 80055ee:	2301      	movs	r3, #1
 80055f0:	e7c0      	b.n	8005574 <HAL_GPIO_DeInit+0x90>
 80055f2:	2302      	movs	r3, #2
 80055f4:	e7be      	b.n	8005574 <HAL_GPIO_DeInit+0x90>
 80055f6:	2303      	movs	r3, #3
 80055f8:	e7bc      	b.n	8005574 <HAL_GPIO_DeInit+0x90>
 80055fa:	2304      	movs	r3, #4
 80055fc:	e7ba      	b.n	8005574 <HAL_GPIO_DeInit+0x90>
 80055fe:	2305      	movs	r3, #5
 8005600:	e7b8      	b.n	8005574 <HAL_GPIO_DeInit+0x90>
 8005602:	2306      	movs	r3, #6
 8005604:	e7b6      	b.n	8005574 <HAL_GPIO_DeInit+0x90>
 8005606:	2307      	movs	r3, #7
 8005608:	e7b4      	b.n	8005574 <HAL_GPIO_DeInit+0x90>
 800560a:	2308      	movs	r3, #8
 800560c:	e7b2      	b.n	8005574 <HAL_GPIO_DeInit+0x90>
 800560e:	bf00      	nop
 8005610:	40013c00 	.word	0x40013c00
 8005614:	40020000 	.word	0x40020000

08005618 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8005618:	6903      	ldr	r3, [r0, #16]
 800561a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800561c:	bf14      	ite	ne
 800561e:	2001      	movne	r0, #1
 8005620:	2000      	moveq	r0, #0
 8005622:	4770      	bx	lr

08005624 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8005624:	b10a      	cbz	r2, 800562a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8005626:	6181      	str	r1, [r0, #24]
  }
}
 8005628:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 800562a:	0409      	lsls	r1, r1, #16
 800562c:	e7fb      	b.n	8005626 <HAL_GPIO_WritePin+0x2>

0800562e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800562e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8005630:	ea01 0203 	and.w	r2, r1, r3
 8005634:	ea21 0103 	bic.w	r1, r1, r3
 8005638:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800563c:	6181      	str	r1, [r0, #24]
}
 800563e:	4770      	bx	lr

08005640 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8005640:	6803      	ldr	r3, [r0, #0]
 8005642:	699a      	ldr	r2, [r3, #24]
 8005644:	0791      	lsls	r1, r2, #30
 8005646:	d501      	bpl.n	800564c <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8005648:	2200      	movs	r2, #0
 800564a:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800564c:	699a      	ldr	r2, [r3, #24]
 800564e:	07d2      	lsls	r2, r2, #31
 8005650:	d403      	bmi.n	800565a <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8005652:	699a      	ldr	r2, [r3, #24]
 8005654:	f042 0201 	orr.w	r2, r2, #1
 8005658:	619a      	str	r2, [r3, #24]
  }
}
 800565a:	4770      	bx	lr

0800565c <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 800565c:	b530      	push	{r4, r5, lr}
 800565e:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005660:	f3c1 0109 	ubfx	r1, r1, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8005664:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005666:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
 8005668:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800566a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 800566e:	4a05      	ldr	r2, [pc, #20]	@ (8005684 <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005670:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 8005672:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005676:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 800567a:	ea20 0002 	bic.w	r0, r0, r2
 800567e:	4303      	orrs	r3, r0
 8005680:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8005682:	bd30      	pop	{r4, r5, pc}
 8005684:	03ff63ff 	.word	0x03ff63ff

08005688 <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 8005688:	6803      	ldr	r3, [r0, #0]
{
 800568a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 800568e:	699c      	ldr	r4, [r3, #24]
{
 8005690:	4605      	mov	r5, r0
 8005692:	460f      	mov	r7, r1
 8005694:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8005696:	f014 0410 	ands.w	r4, r4, #16
 800569a:	d06f      	beq.n	800577c <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 800569c:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800569e:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 80056a0:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80056a2:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 80056a4:	682b      	ldr	r3, [r5, #0]
 80056a6:	699a      	ldr	r2, [r3, #24]
 80056a8:	0690      	lsls	r0, r2, #26
 80056aa:	d461      	bmi.n	8005770 <I2C_IsErrorOccurred+0xe8>
 80056ac:	f1b8 0f00 	cmp.w	r8, #0
 80056b0:	d035      	beq.n	800571e <I2C_IsErrorOccurred+0x96>
    error_code |= HAL_I2C_ERROR_AF;
 80056b2:	f044 0404 	orr.w	r4, r4, #4
    status = HAL_ERROR;
 80056b6:	2001      	movs	r0, #1
  itflag = hi2c->Instance->ISR;
 80056b8:	682e      	ldr	r6, [r5, #0]
 80056ba:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 80056bc:	05d9      	lsls	r1, r3, #23
 80056be:	d505      	bpl.n	80056cc <I2C_IsErrorOccurred+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80056c0:	f44f 7280 	mov.w	r2, #256	@ 0x100
    error_code |= HAL_I2C_ERROR_BERR;
 80056c4:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
 80056c8:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80056ca:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 80056cc:	055a      	lsls	r2, r3, #21
 80056ce:	d505      	bpl.n	80056dc <I2C_IsErrorOccurred+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 80056d0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
 80056d4:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
 80056d8:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 80056da:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 80056dc:	059b      	lsls	r3, r3, #22
 80056de:	d54f      	bpl.n	8005780 <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 80056e0:	f44f 7300 	mov.w	r3, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 80056e4:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 80056e8:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 80056ea:	4628      	mov	r0, r5
 80056ec:	f7ff ffa8 	bl	8005640 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 80056f0:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 80056f2:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 80056f4:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
 80056f8:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
 80056fc:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
 8005700:	f023 0301 	bic.w	r3, r3, #1
 8005704:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 8005706:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8005708:	4323      	orrs	r3, r4
 800570a:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 800570c:	2320      	movs	r3, #32
 800570e:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005712:	2300      	movs	r3, #0
 8005714:	f885 3042 	strb.w	r3, [r5, #66]	@ 0x42
    __HAL_UNLOCK(hi2c);
 8005718:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
 800571c:	e032      	b.n	8005784 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 800571e:	1c7a      	adds	r2, r7, #1
 8005720:	d0c1      	beq.n	80056a6 <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8005722:	f7ff fb87 	bl	8004e34 <HAL_GetTick>
 8005726:	1b80      	subs	r0, r0, r6
 8005728:	42b8      	cmp	r0, r7
 800572a:	d801      	bhi.n	8005730 <I2C_IsErrorOccurred+0xa8>
 800572c:	2f00      	cmp	r7, #0
 800572e:	d1b9      	bne.n	80056a4 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8005730:	682b      	ldr	r3, [r5, #0]
 8005732:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8005734:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8005738:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 800573a:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 800573c:	0400      	lsls	r0, r0, #16
 800573e:	d50a      	bpl.n	8005756 <I2C_IsErrorOccurred+0xce>
 8005740:	0449      	lsls	r1, r1, #17
 8005742:	d408      	bmi.n	8005756 <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 8005744:	2a20      	cmp	r2, #32
 8005746:	d006      	beq.n	8005756 <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8005748:	685a      	ldr	r2, [r3, #4]
 800574a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800574e:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8005750:	f7ff fb70 	bl	8004e34 <HAL_GetTick>
 8005754:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8005756:	682b      	ldr	r3, [r5, #0]
 8005758:	699b      	ldr	r3, [r3, #24]
 800575a:	069b      	lsls	r3, r3, #26
 800575c:	d4a2      	bmi.n	80056a4 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 800575e:	f7ff fb69 	bl	8004e34 <HAL_GetTick>
 8005762:	1b80      	subs	r0, r0, r6
 8005764:	2819      	cmp	r0, #25
 8005766:	d9f6      	bls.n	8005756 <I2C_IsErrorOccurred+0xce>
              error_code |=HAL_I2C_ERROR_TIMEOUT;
 8005768:	2420      	movs	r4, #32
              status = HAL_ERROR;
 800576a:	f04f 0801 	mov.w	r8, #1
 800576e:	e799      	b.n	80056a4 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 8005770:	f1b8 0f00 	cmp.w	r8, #0
 8005774:	d19d      	bne.n	80056b2 <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005776:	2220      	movs	r2, #32
 8005778:	61da      	str	r2, [r3, #28]
 800577a:	e79a      	b.n	80056b2 <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 800577c:	4620      	mov	r0, r4
 800577e:	e79b      	b.n	80056b8 <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 8005780:	2800      	cmp	r0, #0
 8005782:	d1b2      	bne.n	80056ea <I2C_IsErrorOccurred+0x62>
}
 8005784:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005788 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8005788:	b570      	push	{r4, r5, r6, lr}
 800578a:	4604      	mov	r4, r0
 800578c:	460d      	mov	r5, r1
 800578e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8005790:	6823      	ldr	r3, [r4, #0]
 8005792:	699b      	ldr	r3, [r3, #24]
 8005794:	079b      	lsls	r3, r3, #30
 8005796:	d501      	bpl.n	800579c <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8005798:	2000      	movs	r0, #0
 800579a:	e01b      	b.n	80057d4 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 800579c:	4632      	mov	r2, r6
 800579e:	4629      	mov	r1, r5
 80057a0:	4620      	mov	r0, r4
 80057a2:	f7ff ff71 	bl	8005688 <I2C_IsErrorOccurred>
 80057a6:	b9a0      	cbnz	r0, 80057d2 <I2C_WaitOnTXISFlagUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 80057a8:	1c6a      	adds	r2, r5, #1
 80057aa:	d0f1      	beq.n	8005790 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80057ac:	f7ff fb42 	bl	8004e34 <HAL_GetTick>
 80057b0:	1b80      	subs	r0, r0, r6
 80057b2:	42a8      	cmp	r0, r5
 80057b4:	d801      	bhi.n	80057ba <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 80057b6:	2d00      	cmp	r5, #0
 80057b8:	d1ea      	bne.n	8005790 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80057ba:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80057bc:	f043 0320 	orr.w	r3, r3, #32
 80057c0:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80057c2:	2320      	movs	r3, #32
 80057c4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80057c8:	2300      	movs	r3, #0
 80057ca:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
 80057ce:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80057d2:	2001      	movs	r0, #1
}
 80057d4:	bd70      	pop	{r4, r5, r6, pc}

080057d6 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 80057d6:	b570      	push	{r4, r5, r6, lr}
 80057d8:	4604      	mov	r4, r0
 80057da:	460d      	mov	r5, r1
 80057dc:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80057de:	6823      	ldr	r3, [r4, #0]
 80057e0:	699b      	ldr	r3, [r3, #24]
 80057e2:	069b      	lsls	r3, r3, #26
 80057e4:	d501      	bpl.n	80057ea <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 80057e6:	2000      	movs	r0, #0
 80057e8:	e019      	b.n	800581e <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80057ea:	4632      	mov	r2, r6
 80057ec:	4629      	mov	r1, r5
 80057ee:	4620      	mov	r0, r4
 80057f0:	f7ff ff4a 	bl	8005688 <I2C_IsErrorOccurred>
 80057f4:	b990      	cbnz	r0, 800581c <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80057f6:	f7ff fb1d 	bl	8004e34 <HAL_GetTick>
 80057fa:	1b80      	subs	r0, r0, r6
 80057fc:	42a8      	cmp	r0, r5
 80057fe:	d801      	bhi.n	8005804 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8005800:	2d00      	cmp	r5, #0
 8005802:	d1ec      	bne.n	80057de <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005804:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8005806:	f043 0320 	orr.w	r3, r3, #32
 800580a:	6463      	str	r3, [r4, #68]	@ 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 800580c:	2320      	movs	r3, #32
 800580e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8005812:	2300      	movs	r3, #0
 8005814:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      __HAL_UNLOCK(hi2c);
 8005818:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800581c:	2001      	movs	r0, #1
}
 800581e:	bd70      	pop	{r4, r5, r6, pc}

08005820 <I2C_WaitOnFlagUntilTimeout>:
{
 8005820:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005824:	9f06      	ldr	r7, [sp, #24]
 8005826:	4604      	mov	r4, r0
 8005828:	4688      	mov	r8, r1
 800582a:	4616      	mov	r6, r2
 800582c:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800582e:	6822      	ldr	r2, [r4, #0]
 8005830:	6993      	ldr	r3, [r2, #24]
 8005832:	ea38 0303 	bics.w	r3, r8, r3
 8005836:	bf0c      	ite	eq
 8005838:	2301      	moveq	r3, #1
 800583a:	2300      	movne	r3, #0
 800583c:	42b3      	cmp	r3, r6
 800583e:	d001      	beq.n	8005844 <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 8005840:	2000      	movs	r0, #0
 8005842:	e015      	b.n	8005870 <I2C_WaitOnFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8005844:	1c6b      	adds	r3, r5, #1
 8005846:	d0f3      	beq.n	8005830 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005848:	f7ff faf4 	bl	8004e34 <HAL_GetTick>
 800584c:	1bc0      	subs	r0, r0, r7
 800584e:	42a8      	cmp	r0, r5
 8005850:	d801      	bhi.n	8005856 <I2C_WaitOnFlagUntilTimeout+0x36>
 8005852:	2d00      	cmp	r5, #0
 8005854:	d1eb      	bne.n	800582e <I2C_WaitOnFlagUntilTimeout+0xe>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005856:	6c63      	ldr	r3, [r4, #68]	@ 0x44
        __HAL_UNLOCK(hi2c);
 8005858:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800585a:	f043 0320 	orr.w	r3, r3, #32
 800585e:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8005860:	2320      	movs	r3, #32
 8005862:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8005866:	2300      	movs	r3, #0
 8005868:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
 800586c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005870:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005874 <HAL_I2C_Init>:
{
 8005874:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005876:	4604      	mov	r4, r0
 8005878:	2800      	cmp	r0, #0
 800587a:	d04a      	beq.n	8005912 <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800587c:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8005880:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005884:	b91b      	cbnz	r3, 800588e <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8005886:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
 800588a:	f7fb faa3 	bl	8000dd4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800588e:	2324      	movs	r3, #36	@ 0x24
 8005890:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005894:	6823      	ldr	r3, [r4, #0]
 8005896:	681a      	ldr	r2, [r3, #0]
 8005898:	f022 0201 	bic.w	r2, r2, #1
 800589c:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 800589e:	6862      	ldr	r2, [r4, #4]
 80058a0:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80058a4:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 80058a6:	689a      	ldr	r2, [r3, #8]
 80058a8:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80058ac:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80058ae:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 80058b2:	2901      	cmp	r1, #1
 80058b4:	d124      	bne.n	8005900 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80058b6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80058ba:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80058bc:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80058be:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80058c0:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 80058c4:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80058c8:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80058ca:	68da      	ldr	r2, [r3, #12]
 80058cc:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80058d0:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80058d2:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 80058d6:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 80058d8:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80058da:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80058de:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 80058e0:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 80058e4:	430a      	orrs	r2, r1
 80058e6:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 80058e8:	681a      	ldr	r2, [r3, #0]
 80058ea:	f042 0201 	orr.w	r2, r2, #1
 80058ee:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 80058f0:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80058f2:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 80058f4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 80058f8:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80058fa:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 80058fe:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005900:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8005904:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005906:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8005908:	d1d8      	bne.n	80058bc <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 800590a:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800590e:	605a      	str	r2, [r3, #4]
 8005910:	e7d4      	b.n	80058bc <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 8005912:	2001      	movs	r0, #1
 8005914:	e7f3      	b.n	80058fe <HAL_I2C_Init+0x8a>

08005916 <HAL_I2C_DeInit>:
{
 8005916:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005918:	4604      	mov	r4, r0
 800591a:	b198      	cbz	r0, 8005944 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800591c:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800591e:	2324      	movs	r3, #36	@ 0x24
 8005920:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005924:	6813      	ldr	r3, [r2, #0]
 8005926:	f023 0301 	bic.w	r3, r3, #1
 800592a:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800592c:	f7fb fa96 	bl	8000e5c <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005930:	2000      	movs	r0, #0
 8005932:	6460      	str	r0, [r4, #68]	@ 0x44
  __HAL_UNLOCK(hi2c);
 8005934:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 8005938:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 800593c:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800593e:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 8005942:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005944:	2001      	movs	r0, #1
 8005946:	e7fc      	b.n	8005942 <HAL_I2C_DeInit+0x2c>

08005948 <HAL_I2C_Mem_Write>:
{
 8005948:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800594c:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 800594e:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8005952:	4604      	mov	r4, r0
 8005954:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005956:	2b20      	cmp	r3, #32
{
 8005958:	4616      	mov	r6, r2
 800595a:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 800595e:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005962:	f040 80c6 	bne.w	8005af2 <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 8005966:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005968:	b113      	cbz	r3, 8005970 <HAL_I2C_Mem_Write+0x28>
 800596a:	f1ba 0f00 	cmp.w	sl, #0
 800596e:	d106      	bne.n	800597e <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005970:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8005974:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8005976:	2001      	movs	r0, #1
}
 8005978:	b003      	add	sp, #12
 800597a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 800597e:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8005982:	2b01      	cmp	r3, #1
 8005984:	f000 80b5 	beq.w	8005af2 <HAL_I2C_Mem_Write+0x1aa>
 8005988:	f04f 0b01 	mov.w	fp, #1
 800598c:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8005990:	f7ff fa50 	bl	8004e34 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005994:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 8005996:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005998:	9000      	str	r0, [sp, #0]
 800599a:	465a      	mov	r2, fp
 800599c:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80059a0:	4620      	mov	r0, r4
 80059a2:	f7ff ff3d 	bl	8005820 <I2C_WaitOnFlagUntilTimeout>
 80059a6:	2800      	cmp	r0, #0
 80059a8:	d1e5      	bne.n	8005976 <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80059aa:	2321      	movs	r3, #33	@ 0x21
    hi2c->XferISR   = NULL;
 80059ac:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80059ae:	fa5f f289 	uxtb.w	r2, r9
 80059b2:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80059b4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80059b8:	2340      	movs	r3, #64	@ 0x40
 80059ba:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 80059be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80059c0:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80059c2:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 80059c4:	6263      	str	r3, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80059c6:	4b4c      	ldr	r3, [pc, #304]	@ (8005af8 <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferCount = Size;
 80059c8:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80059cc:	9300      	str	r3, [sp, #0]
 80059ce:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80059d2:	f7ff fe43 	bl	800565c <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80059d6:	462a      	mov	r2, r5
 80059d8:	4641      	mov	r1, r8
 80059da:	4620      	mov	r0, r4
 80059dc:	f7ff fed4 	bl	8005788 <I2C_WaitOnTXISFlagUntilTimeout>
 80059e0:	bb18      	cbnz	r0, 8005a2a <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80059e2:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80059e6:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80059e8:	d115      	bne.n	8005a16 <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80059ea:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 80059ec:	2200      	movs	r2, #0
 80059ee:	2180      	movs	r1, #128	@ 0x80
 80059f0:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80059f2:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 80059f4:	4643      	mov	r3, r8
 80059f6:	9500      	str	r5, [sp, #0]
 80059f8:	f7ff ff12 	bl	8005820 <I2C_WaitOnFlagUntilTimeout>
 80059fc:	b9a8      	cbnz	r0, 8005a2a <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80059fe:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005a00:	b29b      	uxth	r3, r3
 8005a02:	2bff      	cmp	r3, #255	@ 0xff
 8005a04:	d815      	bhi.n	8005a32 <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8005a06:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005a08:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 8005a0c:	b292      	uxth	r2, r2
 8005a0e:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005a10:	b2d2      	uxtb	r2, r2
 8005a12:	9000      	str	r0, [sp, #0]
 8005a14:	e012      	b.n	8005a3c <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005a16:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005a18:	4641      	mov	r1, r8
 8005a1a:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005a1c:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005a1e:	462a      	mov	r2, r5
 8005a20:	f7ff feb2 	bl	8005788 <I2C_WaitOnTXISFlagUntilTimeout>
 8005a24:	b908      	cbnz	r0, 8005a2a <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005a26:	6823      	ldr	r3, [r4, #0]
 8005a28:	e7df      	b.n	80059ea <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 8005a2a:	2300      	movs	r3, #0
 8005a2c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005a30:	e7a1      	b.n	8005976 <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005a32:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8005a34:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005a38:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8005a3a:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005a3c:	4639      	mov	r1, r7
 8005a3e:	4620      	mov	r0, r4
 8005a40:	f7ff fe0c 	bl	800565c <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005a44:	462a      	mov	r2, r5
 8005a46:	4641      	mov	r1, r8
 8005a48:	4620      	mov	r0, r4
 8005a4a:	f7ff fe9d 	bl	8005788 <I2C_WaitOnTXISFlagUntilTimeout>
 8005a4e:	2800      	cmp	r0, #0
 8005a50:	d191      	bne.n	8005976 <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8005a52:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005a54:	6822      	ldr	r2, [r4, #0]
 8005a56:	f813 1b01 	ldrb.w	r1, [r3], #1
 8005a5a:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8005a5c:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8005a5e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005a60:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8005a62:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8005a64:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 8005a66:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8005a68:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8005a6a:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005a6c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005a6e:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005a70:	b29b      	uxth	r3, r3
 8005a72:	b1b3      	cbz	r3, 8005aa2 <HAL_I2C_Mem_Write+0x15a>
 8005a74:	b9aa      	cbnz	r2, 8005aa2 <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005a76:	4643      	mov	r3, r8
 8005a78:	2180      	movs	r1, #128	@ 0x80
 8005a7a:	4620      	mov	r0, r4
 8005a7c:	9500      	str	r5, [sp, #0]
 8005a7e:	f7ff fecf 	bl	8005820 <I2C_WaitOnFlagUntilTimeout>
 8005a82:	2800      	cmp	r0, #0
 8005a84:	f47f af77 	bne.w	8005976 <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005a88:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005a8a:	b29b      	uxth	r3, r3
 8005a8c:	2bff      	cmp	r3, #255	@ 0xff
 8005a8e:	d928      	bls.n	8005ae2 <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005a90:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005a92:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005a96:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005a98:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005a9a:	4639      	mov	r1, r7
 8005a9c:	4620      	mov	r0, r4
 8005a9e:	f7ff fddd 	bl	800565c <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005aa2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005aa4:	b29b      	uxth	r3, r3
 8005aa6:	2b00      	cmp	r3, #0
 8005aa8:	d1cc      	bne.n	8005a44 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005aaa:	462a      	mov	r2, r5
 8005aac:	4641      	mov	r1, r8
 8005aae:	4620      	mov	r0, r4
 8005ab0:	f7ff fe91 	bl	80057d6 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005ab4:	2800      	cmp	r0, #0
 8005ab6:	f47f af5e 	bne.w	8005976 <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005aba:	6823      	ldr	r3, [r4, #0]
 8005abc:	2120      	movs	r1, #32
 8005abe:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005ac0:	685a      	ldr	r2, [r3, #4]
 8005ac2:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8005ac6:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8005aca:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8005ace:	f022 0201 	bic.w	r2, r2, #1
 8005ad2:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005ad4:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005ad8:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005adc:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8005ae0:	e74a      	b.n	8005978 <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005ae2:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005ae4:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8005ae8:	b292      	uxth	r2, r2
 8005aea:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005aec:	b2d2      	uxtb	r2, r2
 8005aee:	9000      	str	r0, [sp, #0]
 8005af0:	e7d3      	b.n	8005a9a <HAL_I2C_Mem_Write+0x152>
    __HAL_LOCK(hi2c);
 8005af2:	2002      	movs	r0, #2
 8005af4:	e740      	b.n	8005978 <HAL_I2C_Mem_Write+0x30>
 8005af6:	bf00      	nop
 8005af8:	80002000 	.word	0x80002000

08005afc <HAL_I2C_Mem_Read>:
{
 8005afc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b00:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005b02:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8005b06:	4604      	mov	r4, r0
 8005b08:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005b0a:	2b20      	cmp	r3, #32
{
 8005b0c:	4616      	mov	r6, r2
 8005b0e:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8005b12:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005b16:	f040 80c9 	bne.w	8005cac <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 8005b1a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005b1c:	b113      	cbz	r3, 8005b24 <HAL_I2C_Mem_Read+0x28>
 8005b1e:	f1ba 0f00 	cmp.w	sl, #0
 8005b22:	d106      	bne.n	8005b32 <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005b24:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8005b28:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8005b2a:	2001      	movs	r0, #1
}
 8005b2c:	b003      	add	sp, #12
 8005b2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8005b32:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8005b36:	2b01      	cmp	r3, #1
 8005b38:	f000 80b8 	beq.w	8005cac <HAL_I2C_Mem_Read+0x1b0>
 8005b3c:	f04f 0b01 	mov.w	fp, #1
 8005b40:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8005b44:	f7ff f976 	bl	8004e34 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005b48:	2319      	movs	r3, #25
 8005b4a:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8005b4c:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005b4e:	465a      	mov	r2, fp
 8005b50:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005b54:	4620      	mov	r0, r4
 8005b56:	f7ff fe63 	bl	8005820 <I2C_WaitOnFlagUntilTimeout>
 8005b5a:	4603      	mov	r3, r0
 8005b5c:	2800      	cmp	r0, #0
 8005b5e:	d1e4      	bne.n	8005b2a <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005b60:	2222      	movs	r2, #34	@ 0x22
    hi2c->XferISR   = NULL;
 8005b62:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005b64:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005b66:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005b6a:	2240      	movs	r2, #64	@ 0x40
 8005b6c:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8005b70:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005b72:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005b74:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8005b76:	6262      	str	r2, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005b78:	4a4d      	ldr	r2, [pc, #308]	@ (8005cb0 <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferCount = Size;
 8005b7a:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005b7e:	9200      	str	r2, [sp, #0]
 8005b80:	fa5f f289 	uxtb.w	r2, r9
 8005b84:	f7ff fd6a 	bl	800565c <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005b88:	462a      	mov	r2, r5
 8005b8a:	4641      	mov	r1, r8
 8005b8c:	4620      	mov	r0, r4
 8005b8e:	f7ff fdfb 	bl	8005788 <I2C_WaitOnTXISFlagUntilTimeout>
 8005b92:	bb20      	cbnz	r0, 8005bde <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005b94:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005b98:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005b9a:	d116      	bne.n	8005bca <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005b9c:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8005b9e:	2200      	movs	r2, #0
 8005ba0:	2140      	movs	r1, #64	@ 0x40
 8005ba2:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005ba4:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8005ba6:	4643      	mov	r3, r8
 8005ba8:	9500      	str	r5, [sp, #0]
 8005baa:	f7ff fe39 	bl	8005820 <I2C_WaitOnFlagUntilTimeout>
 8005bae:	b9b0      	cbnz	r0, 8005bde <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005bb0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005bb2:	b29b      	uxth	r3, r3
 8005bb4:	2bff      	cmp	r3, #255	@ 0xff
 8005bb6:	4b3f      	ldr	r3, [pc, #252]	@ (8005cb4 <HAL_I2C_Mem_Read+0x1b8>)
 8005bb8:	d815      	bhi.n	8005be6 <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8005bba:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 8005bbc:	b292      	uxth	r2, r2
 8005bbe:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005bc0:	b2d2      	uxtb	r2, r2
 8005bc2:	9300      	str	r3, [sp, #0]
 8005bc4:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8005bc8:	e012      	b.n	8005bf0 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005bca:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005bcc:	4641      	mov	r1, r8
 8005bce:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005bd0:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005bd2:	462a      	mov	r2, r5
 8005bd4:	f7ff fdd8 	bl	8005788 <I2C_WaitOnTXISFlagUntilTimeout>
 8005bd8:	b908      	cbnz	r0, 8005bde <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005bda:	6823      	ldr	r3, [r4, #0]
 8005bdc:	e7de      	b.n	8005b9c <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 8005bde:	2300      	movs	r3, #0
 8005be0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005be4:	e7a1      	b.n	8005b2a <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005be6:	22ff      	movs	r2, #255	@ 0xff
 8005be8:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005bea:	9300      	str	r3, [sp, #0]
 8005bec:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005bf0:	4639      	mov	r1, r7
 8005bf2:	4620      	mov	r0, r4
 8005bf4:	f7ff fd32 	bl	800565c <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8005bf8:	4643      	mov	r3, r8
 8005bfa:	2200      	movs	r2, #0
 8005bfc:	2104      	movs	r1, #4
 8005bfe:	4620      	mov	r0, r4
 8005c00:	9500      	str	r5, [sp, #0]
 8005c02:	f7ff fe0d 	bl	8005820 <I2C_WaitOnFlagUntilTimeout>
 8005c06:	2800      	cmp	r0, #0
 8005c08:	d18f      	bne.n	8005b2a <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8005c0a:	6823      	ldr	r3, [r4, #0]
 8005c0c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005c0e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005c10:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8005c12:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 8005c14:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8005c16:	3301      	adds	r3, #1
      hi2c->XferSize--;
 8005c18:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 8005c1a:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8005c1c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005c1e:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8005c20:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8005c22:	8522      	strh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8005c24:	b29b      	uxth	r3, r3
 8005c26:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005c28:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005c2a:	b29b      	uxth	r3, r3
 8005c2c:	b1b3      	cbz	r3, 8005c5c <HAL_I2C_Mem_Read+0x160>
 8005c2e:	b9aa      	cbnz	r2, 8005c5c <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005c30:	4643      	mov	r3, r8
 8005c32:	2180      	movs	r1, #128	@ 0x80
 8005c34:	4620      	mov	r0, r4
 8005c36:	9500      	str	r5, [sp, #0]
 8005c38:	f7ff fdf2 	bl	8005820 <I2C_WaitOnFlagUntilTimeout>
 8005c3c:	2800      	cmp	r0, #0
 8005c3e:	f47f af74 	bne.w	8005b2a <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005c42:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005c44:	b29b      	uxth	r3, r3
 8005c46:	2bff      	cmp	r3, #255	@ 0xff
 8005c48:	d928      	bls.n	8005c9c <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005c4a:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005c4c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005c50:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005c52:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005c54:	4639      	mov	r1, r7
 8005c56:	4620      	mov	r0, r4
 8005c58:	f7ff fd00 	bl	800565c <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005c5c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005c5e:	b29b      	uxth	r3, r3
 8005c60:	2b00      	cmp	r3, #0
 8005c62:	d1c9      	bne.n	8005bf8 <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005c64:	462a      	mov	r2, r5
 8005c66:	4641      	mov	r1, r8
 8005c68:	4620      	mov	r0, r4
 8005c6a:	f7ff fdb4 	bl	80057d6 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005c6e:	2800      	cmp	r0, #0
 8005c70:	f47f af5b 	bne.w	8005b2a <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005c74:	6823      	ldr	r3, [r4, #0]
 8005c76:	2120      	movs	r1, #32
 8005c78:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005c7a:	685a      	ldr	r2, [r3, #4]
 8005c7c:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8005c80:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8005c84:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8005c88:	f022 0201 	bic.w	r2, r2, #1
 8005c8c:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005c8e:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005c92:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005c96:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8005c9a:	e747      	b.n	8005b2c <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005c9c:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005c9e:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8005ca2:	b292      	uxth	r2, r2
 8005ca4:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005ca6:	b2d2      	uxtb	r2, r2
 8005ca8:	9000      	str	r0, [sp, #0]
 8005caa:	e7d3      	b.n	8005c54 <HAL_I2C_Mem_Read+0x158>
    __HAL_LOCK(hi2c);
 8005cac:	2002      	movs	r0, #2
 8005cae:	e73d      	b.n	8005b2c <HAL_I2C_Mem_Read+0x30>
 8005cb0:	80002000 	.word	0x80002000
 8005cb4:	80002400 	.word	0x80002400

08005cb8 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005cb8:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005cba:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 8005cbe:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005cc0:	2a20      	cmp	r2, #32
 8005cc2:	b2d4      	uxtb	r4, r2
 8005cc4:	d11c      	bne.n	8005d00 <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005cc6:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8005cca:	2a01      	cmp	r2, #1
 8005ccc:	d018      	beq.n	8005d00 <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005cce:	2224      	movs	r2, #36	@ 0x24
 8005cd0:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005cd4:	6802      	ldr	r2, [r0, #0]
 8005cd6:	6810      	ldr	r0, [r2, #0]
 8005cd8:	f020 0001 	bic.w	r0, r0, #1
 8005cdc:	6010      	str	r0, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8005cde:	6810      	ldr	r0, [r2, #0]
 8005ce0:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 8005ce4:	6010      	str	r0, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8005ce6:	6810      	ldr	r0, [r2, #0]
 8005ce8:	4301      	orrs	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005cea:	2000      	movs	r0, #0
    hi2c->Instance->CR1 |= AnalogFilter;
 8005cec:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8005cee:	6811      	ldr	r1, [r2, #0]
 8005cf0:	f041 0101 	orr.w	r1, r1, #1
 8005cf4:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005cf6:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005cfa:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005cfe:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 8005d00:	2002      	movs	r0, #2
 8005d02:	e7fc      	b.n	8005cfe <HAL_I2CEx_ConfigAnalogFilter+0x46>

08005d04 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005d04:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005d06:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 8005d0a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005d0c:	2a20      	cmp	r2, #32
 8005d0e:	b2d4      	uxtb	r4, r2
 8005d10:	d11b      	bne.n	8005d4a <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005d12:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8005d16:	2a01      	cmp	r2, #1
 8005d18:	d017      	beq.n	8005d4a <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005d1a:	2224      	movs	r2, #36	@ 0x24
 8005d1c:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005d20:	6802      	ldr	r2, [r0, #0]
 8005d22:	6810      	ldr	r0, [r2, #0]
 8005d24:	f020 0001 	bic.w	r0, r0, #1
 8005d28:	6010      	str	r0, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8005d2a:	6810      	ldr	r0, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8005d2c:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8005d30:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005d34:	2000      	movs	r0, #0
    hi2c->Instance->CR1 = tmpreg;
 8005d36:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8005d38:	6811      	ldr	r1, [r2, #0]
 8005d3a:	f041 0101 	orr.w	r1, r1, #1
 8005d3e:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005d40:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005d44:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005d48:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 8005d4a:	2002      	movs	r0, #2
 8005d4c:	e7fc      	b.n	8005d48 <HAL_I2CEx_ConfigDigitalFilter+0x44>

08005d4e <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d4e:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d50:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005d52:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d56:	3284      	adds	r2, #132	@ 0x84
 8005d58:	1883      	adds	r3, r0, r2
{
 8005d5a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d5e:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d60:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d64:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005d66:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d6a:	684c      	ldr	r4, [r1, #4]
 8005d6c:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d70:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005d74:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d78:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d7a:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d7c:	68c5      	ldr	r5, [r0, #12]
 8005d7e:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8005d82:	443d      	add	r5, r7
 8005d84:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005d88:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005d8a:	68c6      	ldr	r6, [r0, #12]
 8005d8c:	68cd      	ldr	r5, [r1, #12]
 8005d8e:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005d92:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005d94:	689d      	ldr	r5, [r3, #8]
 8005d96:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8005d9a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005d9c:	688d      	ldr	r5, [r1, #8]
 8005d9e:	68c7      	ldr	r7, [r0, #12]
 8005da0:	3501      	adds	r5, #1
 8005da2:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005da6:	443d      	add	r5, r7
 8005da8:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005dac:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005dae:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005db0:	691d      	ldr	r5, [r3, #16]
 8005db2:	f025 0507 	bic.w	r5, r5, #7
 8005db6:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005db8:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005dba:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005dbc:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005dc0:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005dc4:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005dc8:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8005dcc:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005dd0:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005dd4:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005dd8:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005dda:	695d      	ldr	r5, [r3, #20]
 8005ddc:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8005de0:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005de2:	694d      	ldr	r5, [r1, #20]
 8005de4:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005de6:	69dd      	ldr	r5, [r3, #28]
 8005de8:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8005dec:	f025 0507 	bic.w	r5, r5, #7
 8005df0:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005df2:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005df6:	433d      	orrs	r5, r7
 8005df8:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005dfa:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005dfc:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005dfe:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005e02:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005e04:	b31e      	cbz	r6, 8005e4e <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005e06:	2e01      	cmp	r6, #1
 8005e08:	d023      	beq.n	8005e52 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005e0a:	1eb5      	subs	r5, r6, #2
 8005e0c:	2d02      	cmp	r5, #2
 8005e0e:	d922      	bls.n	8005e56 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 8005e10:	2e07      	cmp	r6, #7
 8005e12:	bf14      	ite	ne
 8005e14:	2501      	movne	r5, #1
 8005e16:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005e18:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005e1a:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005e1e:	f006 26e0 	and.w	r6, r6, #3758153728	@ 0xe000e000
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005e22:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005e24:	62de      	str	r6, [r3, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005e26:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005e28:	6a8e      	ldr	r6, [r1, #40]	@ 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005e2a:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005e2c:	436e      	muls	r6, r5
 8005e2e:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005e32:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005e34:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8005e36:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 8005e3a:	f024 0407 	bic.w	r4, r4, #7
 8005e3e:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005e40:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005e42:	5883      	ldr	r3, [r0, r2]
 8005e44:	f043 0301 	orr.w	r3, r3, #1
 8005e48:	5083      	str	r3, [r0, r2]
}
 8005e4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005e4e:	2504      	movs	r5, #4
 8005e50:	e7e2      	b.n	8005e18 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005e52:	2503      	movs	r5, #3
 8005e54:	e7e0      	b.n	8005e18 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005e56:	2502      	movs	r5, #2
 8005e58:	e7de      	b.n	8005e18 <LTDC_SetConfig+0xca>
	...

08005e5c <HAL_LTDC_Init>:
{
 8005e5c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005e5e:	4604      	mov	r4, r0
 8005e60:	2800      	cmp	r0, #0
 8005e62:	d063      	beq.n	8005f2c <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005e64:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8005e68:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005e6c:	b91b      	cbnz	r3, 8005e76 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005e6e:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005e72:	f7fb f80f 	bl	8000e94 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005e76:	2302      	movs	r3, #2
 8005e78:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005e7c:	6823      	ldr	r3, [r4, #0]
 8005e7e:	699a      	ldr	r2, [r3, #24]
 8005e80:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8005e84:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005e86:	6999      	ldr	r1, [r3, #24]
 8005e88:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005e8c:	4302      	orrs	r2, r0
 8005e8e:	68e0      	ldr	r0, [r4, #12]
 8005e90:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005e92:	6920      	ldr	r0, [r4, #16]
 8005e94:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005e96:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005e98:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005e9a:	4925      	ldr	r1, [pc, #148]	@ (8005f30 <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005e9c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005e9e:	689a      	ldr	r2, [r3, #8]
 8005ea0:	400a      	ands	r2, r1
 8005ea2:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005ea4:	689a      	ldr	r2, [r3, #8]
 8005ea6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005eaa:	69a0      	ldr	r0, [r4, #24]
 8005eac:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005eae:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005eb0:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005eb2:	68da      	ldr	r2, [r3, #12]
 8005eb4:	400a      	ands	r2, r1
 8005eb6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005eb8:	68da      	ldr	r2, [r3, #12]
 8005eba:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005ebe:	6a20      	ldr	r0, [r4, #32]
 8005ec0:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005ec2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005ec4:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005ec6:	691a      	ldr	r2, [r3, #16]
 8005ec8:	400a      	ands	r2, r1
 8005eca:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005ecc:	691a      	ldr	r2, [r3, #16]
 8005ece:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005ed2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005ed4:	4302      	orrs	r2, r0
 8005ed6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005ed8:	695a      	ldr	r2, [r3, #20]
 8005eda:	400a      	ands	r2, r1
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005edc:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005ede:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005ee0:	695a      	ldr	r2, [r3, #20]
 8005ee2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005ee6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8005ee8:	430a      	orrs	r2, r1
 8005eea:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005eec:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005eee:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005ef2:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005ef6:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005efa:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005efc:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8005efe:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8005f02:	432a      	orrs	r2, r5
 8005f04:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005f08:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005f0a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005f0e:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005f10:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005f12:	f042 0206 	orr.w	r2, r2, #6
 8005f16:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005f18:	699a      	ldr	r2, [r3, #24]
 8005f1a:	f042 0201 	orr.w	r2, r2, #1
 8005f1e:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8005f20:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005f22:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005f26:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8005f2a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005f2c:	2001      	movs	r0, #1
 8005f2e:	e7fc      	b.n	8005f2a <HAL_LTDC_Init+0xce>
 8005f30:	f000f800 	.word	0xf000f800

08005f34 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8005f34:	4770      	bx	lr

08005f36 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8005f36:	4770      	bx	lr

08005f38 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005f38:	6803      	ldr	r3, [r0, #0]
{
 8005f3a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005f3c:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
{
 8005f3e:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005f40:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005f42:	0772      	lsls	r2, r6, #29
 8005f44:	d514      	bpl.n	8005f70 <HAL_LTDC_IRQHandler+0x38>
 8005f46:	0769      	lsls	r1, r5, #29
 8005f48:	d512      	bpl.n	8005f70 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005f4a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005f4c:	f022 0204 	bic.w	r2, r2, #4
 8005f50:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005f52:	2204      	movs	r2, #4
 8005f54:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005f56:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8005f5a:	f043 0301 	orr.w	r3, r3, #1
 8005f5e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8005f62:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005f64:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005f68:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005f6c:	f7ff ffe2 	bl	8005f34 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005f70:	07b2      	lsls	r2, r6, #30
 8005f72:	d516      	bpl.n	8005fa2 <HAL_LTDC_IRQHandler+0x6a>
 8005f74:	07ab      	lsls	r3, r5, #30
 8005f76:	d514      	bpl.n	8005fa2 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005f78:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 8005f7a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005f7c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005f7e:	f022 0202 	bic.w	r2, r2, #2
 8005f82:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005f84:	2202      	movs	r2, #2
 8005f86:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005f88:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8005f8c:	4313      	orrs	r3, r2
 8005f8e:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005f92:	2304      	movs	r3, #4
 8005f94:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005f98:	2300      	movs	r3, #0
 8005f9a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005f9e:	f7ff ffc9 	bl	8005f34 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005fa2:	07f0      	lsls	r0, r6, #31
 8005fa4:	d510      	bpl.n	8005fc8 <HAL_LTDC_IRQHandler+0x90>
 8005fa6:	07e9      	lsls	r1, r5, #31
 8005fa8:	d50e      	bpl.n	8005fc8 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005faa:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 8005fac:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005fae:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005fb0:	f022 0201 	bic.w	r2, r2, #1
 8005fb4:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005fb6:	2201      	movs	r2, #1
 8005fb8:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8005fba:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005fbc:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005fc0:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005fc4:	f7fc f8a8 	bl	8002118 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005fc8:	0732      	lsls	r2, r6, #28
 8005fca:	d511      	bpl.n	8005ff0 <HAL_LTDC_IRQHandler+0xb8>
 8005fcc:	072b      	lsls	r3, r5, #28
 8005fce:	d50f      	bpl.n	8005ff0 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005fd0:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005fd2:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005fd4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005fd6:	f022 0208 	bic.w	r2, r2, #8
 8005fda:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005fdc:	2208      	movs	r2, #8
 8005fde:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005fe0:	2301      	movs	r3, #1
 8005fe2:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005fe6:	2300      	movs	r3, #0
 8005fe8:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005fec:	f7ff ffa3 	bl	8005f36 <HAL_LTDC_ReloadEventCallback>
}
 8005ff0:	bd70      	pop	{r4, r5, r6, pc}

08005ff2 <HAL_LTDC_ConfigLayer>:
{
 8005ff2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005ff6:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
 8005ffa:	4606      	mov	r6, r0
 8005ffc:	460f      	mov	r7, r1
 8005ffe:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
 8006000:	2b01      	cmp	r3, #1
 8006002:	f04f 0002 	mov.w	r0, #2
 8006006:	d01f      	beq.n	8006048 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006008:	2434      	movs	r4, #52	@ 0x34
  __HAL_LOCK(hltdc);
 800600a:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800600e:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006010:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006014:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 8006018:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800601c:	3438      	adds	r4, #56	@ 0x38
 800601e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006020:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006022:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006024:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006026:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006028:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800602a:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800602c:	4630      	mov	r0, r6
 800602e:	4662      	mov	r2, ip
 8006030:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006032:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006034:	f7ff fe8b 	bl	8005d4e <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006038:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800603a:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800603c:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8006040:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8006044:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8006048:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800604c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800604c:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
{
 8006050:	4603      	mov	r3, r0
 8006052:	2002      	movs	r0, #2
  __HAL_LOCK(hltdc);
 8006054:	2a01      	cmp	r2, #1
 8006056:	d012      	beq.n	800607e <HAL_LTDC_ProgramLineEvent+0x32>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006058:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800605a:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800605e:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8006060:	f020 0001 	bic.w	r0, r0, #1
 8006064:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8006066:	4806      	ldr	r0, [pc, #24]	@ (8006080 <HAL_LTDC_ProgramLineEvent+0x34>)
 8006068:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_UNLOCK(hltdc);
 800606a:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800606c:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800606e:	f041 0101 	orr.w	r1, r1, #1
 8006072:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8006074:	2201      	movs	r2, #1
  __HAL_UNLOCK(hltdc);
 8006076:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_READY;
 800607a:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
}
 800607e:	4770      	bx	lr
 8006080:	40016800 	.word	0x40016800

08006084 <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 8006084:	4b19      	ldr	r3, [pc, #100]	@ (80060ec <HAL_PWREx_EnableOverDrive+0x68>)
{
 8006086:	b537      	push	{r0, r1, r2, r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 8006088:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 800608a:	4c19      	ldr	r4, [pc, #100]	@ (80060f0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800608c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006090:	641a      	str	r2, [r3, #64]	@ 0x40
 8006092:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006094:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006098:	9301      	str	r3, [sp, #4]
 800609a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800609c:	6823      	ldr	r3, [r4, #0]
 800609e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80060a2:	6023      	str	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80060a4:	f7fe fec6 	bl	8004e34 <HAL_GetTick>
 80060a8:	4605      	mov	r5, r0

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80060aa:	6863      	ldr	r3, [r4, #4]
 80060ac:	03da      	lsls	r2, r3, #15
 80060ae:	d50c      	bpl.n	80060ca <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80060b0:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80060b2:	4d0f      	ldr	r5, [pc, #60]	@ (80060f0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80060b4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80060b8:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 80060ba:	f7fe febb 	bl	8004e34 <HAL_GetTick>
 80060be:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80060c0:	686b      	ldr	r3, [r5, #4]
 80060c2:	039b      	lsls	r3, r3, #14
 80060c4:	d50a      	bpl.n	80060dc <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 80060c6:	2000      	movs	r0, #0
 80060c8:	e006      	b.n	80060d8 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80060ca:	f7fe feb3 	bl	8004e34 <HAL_GetTick>
 80060ce:	1b40      	subs	r0, r0, r5
 80060d0:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80060d4:	d9e9      	bls.n	80060aa <HAL_PWREx_EnableOverDrive+0x26>
      return HAL_TIMEOUT;
 80060d6:	2003      	movs	r0, #3
}
 80060d8:	b003      	add	sp, #12
 80060da:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80060dc:	f7fe feaa 	bl	8004e34 <HAL_GetTick>
 80060e0:	1b00      	subs	r0, r0, r4
 80060e2:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80060e6:	d9eb      	bls.n	80060c0 <HAL_PWREx_EnableOverDrive+0x3c>
 80060e8:	e7f5      	b.n	80060d6 <HAL_PWREx_EnableOverDrive+0x52>
 80060ea:	bf00      	nop
 80060ec:	40023800 	.word	0x40023800
 80060f0:	40007000 	.word	0x40007000

080060f4 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 80060f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 80060f8:	6a4e      	ldr	r6, [r1, #36]	@ 0x24
 80060fa:	b136      	cbz	r6, 800610a <QSPI_Config+0x16>
 80060fc:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
 8006100:	d003      	beq.n	800610a <QSPI_Config+0x16>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8006102:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8006104:	6804      	ldr	r4, [r0, #0]
 8006106:	3b01      	subs	r3, #1
 8006108:	6123      	str	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800610a:	f8d1 a018 	ldr.w	sl, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800610e:	e9d1 7e07 	ldrd	r7, lr, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8006112:	f1ba 0f00 	cmp.w	sl, #0
 8006116:	d04c      	beq.n	80061b2 <QSPI_Config+0xbe>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006118:	694c      	ldr	r4, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800611a:	6805      	ldr	r5, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800611c:	ea4f 4c84 	mov.w	ip, r4, lsl #18
 8006120:	ea4a 0406 	orr.w	r4, sl, r6
 8006124:	680b      	ldr	r3, [r1, #0]
 8006126:	f8d1 8034 	ldr.w	r8, [r1, #52]	@ 0x34
 800612a:	ea44 0a02 	orr.w	sl, r4, r2
 800612e:	e9d1 090b 	ldrd	r0, r9, [r1, #44]	@ 0x2c
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8006132:	f1be 0f00 	cmp.w	lr, #0
 8006136:	d024      	beq.n	8006182 <QSPI_Config+0x8e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006138:	688e      	ldr	r6, [r1, #8]
 800613a:	ea4a 040e 	orr.w	r4, sl, lr
 800613e:	61ee      	str	r6, [r5, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006140:	690e      	ldr	r6, [r1, #16]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006142:	b19f      	cbz	r7, 800616c <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006144:	433b      	orrs	r3, r7
 8006146:	4303      	orrs	r3, r0
 8006148:	68c8      	ldr	r0, [r1, #12]
 800614a:	ea43 0309 	orr.w	r3, r3, r9
 800614e:	ea43 0308 	orr.w	r3, r3, r8
 8006152:	4333      	orrs	r3, r6
 8006154:	4303      	orrs	r3, r0
 8006156:	ea43 030c 	orr.w	r3, r3, ip
 800615a:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800615c:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006160:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006162:	d001      	beq.n	8006168 <QSPI_Config+0x74>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006164:	684b      	ldr	r3, [r1, #4]
 8006166:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8006168:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800616c:	4303      	orrs	r3, r0
 800616e:	ea43 0309 	orr.w	r3, r3, r9
 8006172:	ea43 0308 	orr.w	r3, r3, r8
 8006176:	4333      	orrs	r3, r6
 8006178:	ea43 030c 	orr.w	r3, r3, ip
 800617c:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800617e:	616b      	str	r3, [r5, #20]
 8006180:	e7f2      	b.n	8006168 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006182:	b167      	cbz	r7, 800619e <QSPI_Config+0xaa>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006184:	433b      	orrs	r3, r7
 8006186:	4303      	orrs	r3, r0
 8006188:	68c8      	ldr	r0, [r1, #12]
 800618a:	ea43 0309 	orr.w	r3, r3, r9
 800618e:	ea43 0308 	orr.w	r3, r3, r8
 8006192:	4303      	orrs	r3, r0
 8006194:	ea43 030c 	orr.w	r3, r3, ip
 8006198:	ea43 030a 	orr.w	r3, r3, sl
 800619c:	e7de      	b.n	800615c <QSPI_Config+0x68>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800619e:	4303      	orrs	r3, r0
 80061a0:	ea43 0309 	orr.w	r3, r3, r9
 80061a4:	ea43 0408 	orr.w	r4, r3, r8
 80061a8:	ea44 030c 	orr.w	r3, r4, ip
 80061ac:	ea43 030a 	orr.w	r3, r3, sl
 80061b0:	e7e5      	b.n	800617e <QSPI_Config+0x8a>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80061b2:	f1be 0f00 	cmp.w	lr, #0
 80061b6:	d02c      	beq.n	8006212 <QSPI_Config+0x11e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80061b8:	ea46 050e 	orr.w	r5, r6, lr
 80061bc:	688b      	ldr	r3, [r1, #8]
 80061be:	6804      	ldr	r4, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80061c0:	694e      	ldr	r6, [r1, #20]
 80061c2:	4315      	orrs	r5, r2
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80061c4:	61e3      	str	r3, [r4, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80061c6:	f8d1 c034 	ldr.w	ip, [r1, #52]	@ 0x34
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80061ca:	04b6      	lsls	r6, r6, #18
 80061cc:	690b      	ldr	r3, [r1, #16]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80061ce:	e9d1 8e0b 	ldrd	r8, lr, [r1, #44]	@ 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80061d2:	b1a7      	cbz	r7, 80061fe <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80061d4:	433b      	orrs	r3, r7
 80061d6:	68c8      	ldr	r0, [r1, #12]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80061d8:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80061dc:	ea43 0308 	orr.w	r3, r3, r8
 80061e0:	ea43 030e 	orr.w	r3, r3, lr
 80061e4:	ea43 030c 	orr.w	r3, r3, ip
 80061e8:	ea43 0300 	orr.w	r3, r3, r0
 80061ec:	ea43 0306 	orr.w	r3, r3, r6
 80061f0:	ea43 0305 	orr.w	r3, r3, r5
 80061f4:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80061f6:	d0b7      	beq.n	8006168 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80061f8:	684b      	ldr	r3, [r1, #4]
 80061fa:	61a3      	str	r3, [r4, #24]
 80061fc:	e7b4      	b.n	8006168 <QSPI_Config+0x74>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80061fe:	ea43 0308 	orr.w	r3, r3, r8
 8006202:	ea43 030e 	orr.w	r3, r3, lr
 8006206:	ea43 030c 	orr.w	r3, r3, ip
 800620a:	4333      	orrs	r3, r6
 800620c:	432b      	orrs	r3, r5
 800620e:	6163      	str	r3, [r4, #20]
 8006210:	e7aa      	b.n	8006168 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006212:	b1d7      	cbz	r7, 800624a <QSPI_Config+0x156>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006214:	ea46 0307 	orr.w	r3, r6, r7
 8006218:	6acc      	ldr	r4, [r1, #44]	@ 0x2c
 800621a:	6800      	ldr	r0, [r0, #0]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800621c:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006220:	ea43 0302 	orr.w	r3, r3, r2
 8006224:	ea43 0304 	orr.w	r3, r3, r4
 8006228:	6b0c      	ldr	r4, [r1, #48]	@ 0x30
 800622a:	ea43 0304 	orr.w	r3, r3, r4
 800622e:	6b4c      	ldr	r4, [r1, #52]	@ 0x34
 8006230:	ea43 0304 	orr.w	r3, r3, r4
 8006234:	68cc      	ldr	r4, [r1, #12]
 8006236:	ea43 0304 	orr.w	r3, r3, r4
 800623a:	694c      	ldr	r4, [r1, #20]
 800623c:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8006240:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006242:	d091      	beq.n	8006168 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006244:	684b      	ldr	r3, [r1, #4]
 8006246:	6183      	str	r3, [r0, #24]
 8006248:	e78e      	b.n	8006168 <QSPI_Config+0x74>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800624a:	2e00      	cmp	r6, #0
 800624c:	d08c      	beq.n	8006168 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800624e:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 8006250:	6800      	ldr	r0, [r0, #0]
 8006252:	4333      	orrs	r3, r6
 8006254:	4313      	orrs	r3, r2
 8006256:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 8006258:	4313      	orrs	r3, r2
 800625a:	6b4a      	ldr	r2, [r1, #52]	@ 0x34
 800625c:	4313      	orrs	r3, r2
 800625e:	694a      	ldr	r2, [r1, #20]
 8006260:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8006264:	6143      	str	r3, [r0, #20]
}
 8006266:	e77f      	b.n	8006168 <QSPI_Config+0x74>

08006268 <QSPI_WaitFlagStateUntilTimeout>:
{
 8006268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800626c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8006270:	4604      	mov	r4, r0
 8006272:	460e      	mov	r6, r1
 8006274:	4615      	mov	r5, r2
 8006276:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8006278:	6822      	ldr	r2, [r4, #0]
 800627a:	6893      	ldr	r3, [r2, #8]
 800627c:	4233      	tst	r3, r6
 800627e:	bf14      	ite	ne
 8006280:	2301      	movne	r3, #1
 8006282:	2300      	moveq	r3, #0
 8006284:	42ab      	cmp	r3, r5
 8006286:	d101      	bne.n	800628c <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8006288:	2000      	movs	r0, #0
 800628a:	e012      	b.n	80062b2 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800628c:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006290:	d0f3      	beq.n	800627a <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006292:	f7fe fdcf 	bl	8004e34 <HAL_GetTick>
 8006296:	1bc0      	subs	r0, r0, r7
 8006298:	4540      	cmp	r0, r8
 800629a:	d802      	bhi.n	80062a2 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 800629c:	f1b8 0f00 	cmp.w	r8, #0
 80062a0:	d1ea      	bne.n	8006278 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 80062a2:	2304      	movs	r3, #4
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 80062a4:	2001      	movs	r0, #1
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 80062a6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 80062aa:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80062ac:	f043 0301 	orr.w	r3, r3, #1
 80062b0:	6463      	str	r3, [r4, #68]	@ 0x44
}
 80062b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080062b8 <HAL_QSPI_Init>:
{
 80062b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80062ba:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80062bc:	f7fe fdba 	bl	8004e34 <HAL_GetTick>
 80062c0:	4605      	mov	r5, r0
  if(hqspi == NULL)
 80062c2:	2c00      	cmp	r4, #0
 80062c4:	d046      	beq.n	8006354 <HAL_QSPI_Init+0x9c>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 80062c6:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 80062ca:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80062ce:	b93b      	cbnz	r3, 80062e0 <HAL_QSPI_Init+0x28>
    HAL_QSPI_MspInit(hqspi);
 80062d0:	4620      	mov	r0, r4
    hqspi->Lock = HAL_UNLOCKED;
 80062d2:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    HAL_QSPI_MspInit(hqspi);
 80062d6:	f7fa fe8b 	bl	8000ff0 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 80062da:	f241 3388 	movw	r3, #5000	@ 0x1388
 80062de:	64a3      	str	r3, [r4, #72]	@ 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80062e0:	6821      	ldr	r1, [r4, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80062e2:	4620      	mov	r0, r4
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80062e4:	68a3      	ldr	r3, [r4, #8]
 80062e6:	680a      	ldr	r2, [r1, #0]
 80062e8:	3b01      	subs	r3, #1
 80062ea:	f422 52f8 	bic.w	r2, r2, #7936	@ 0x1f00
 80062ee:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80062f2:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80062f4:	600a      	str	r2, [r1, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80062f6:	2200      	movs	r2, #0
 80062f8:	9300      	str	r3, [sp, #0]
 80062fa:	2120      	movs	r1, #32
 80062fc:	462b      	mov	r3, r5
 80062fe:	f7ff ffb3 	bl	8006268 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8006302:	bb10      	cbnz	r0, 800634a <HAL_QSPI_Init+0x92>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8006304:	6822      	ldr	r2, [r4, #0]
 8006306:	69e5      	ldr	r5, [r4, #28]
 8006308:	68e3      	ldr	r3, [r4, #12]
 800630a:	6811      	ldr	r1, [r2, #0]
 800630c:	432b      	orrs	r3, r5
 800630e:	6a25      	ldr	r5, [r4, #32]
 8006310:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8006314:	432b      	orrs	r3, r5
 8006316:	6865      	ldr	r5, [r4, #4]
 8006318:	f021 01d0 	bic.w	r1, r1, #208	@ 0xd0
 800631c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8006320:	430b      	orrs	r3, r1
 8006322:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8006324:	6855      	ldr	r5, [r2, #4]
 8006326:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800632a:	430b      	orrs	r3, r1
 800632c:	6921      	ldr	r1, [r4, #16]
 800632e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006332:	4909      	ldr	r1, [pc, #36]	@ (8006358 <HAL_QSPI_Init+0xa0>)
 8006334:	4029      	ands	r1, r5
 8006336:	430b      	orrs	r3, r1
 8006338:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800633a:	6813      	ldr	r3, [r2, #0]
 800633c:	f043 0301 	orr.w	r3, r3, #1
 8006340:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8006342:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006344:	6460      	str	r0, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8006346:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 800634a:	2300      	movs	r3, #0
 800634c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8006350:	b003      	add	sp, #12
 8006352:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8006354:	2001      	movs	r0, #1
 8006356:	e7fb      	b.n	8006350 <HAL_QSPI_Init+0x98>
 8006358:	ffe0f8fe 	.word	0xffe0f8fe

0800635c <HAL_QSPI_DeInit>:
{
 800635c:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800635e:	4604      	mov	r4, r0
 8006360:	b168      	cbz	r0, 800637e <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8006362:	6802      	ldr	r2, [r0, #0]
 8006364:	6813      	ldr	r3, [r2, #0]
 8006366:	f023 0301 	bic.w	r3, r3, #1
 800636a:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800636c:	f7fa feae 	bl	80010cc <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006370:	2000      	movs	r0, #0
 8006372:	6460      	str	r0, [r4, #68]	@ 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8006374:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8006378:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
}
 800637c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800637e:	2001      	movs	r0, #1
 8006380:	e7fc      	b.n	800637c <HAL_QSPI_DeInit+0x20>

08006382 <HAL_QSPI_Command>:
{
 8006382:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8006386:	4604      	mov	r4, r0
 8006388:	468a      	mov	sl, r1
 800638a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800638c:	f7fe fd52 	bl	8004e34 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006390:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 8006394:	4607      	mov	r7, r0
  __HAL_LOCK(hqspi);
 8006396:	2b01      	cmp	r3, #1
 8006398:	d036      	beq.n	8006408 <HAL_QSPI_Command+0x86>
 800639a:	2301      	movs	r3, #1
 800639c:	2602      	movs	r6, #2
 800639e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80063a2:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 80063a6:	2b01      	cmp	r3, #1
 80063a8:	fa5f f983 	uxtb.w	r9, r3
 80063ac:	d128      	bne.n	8006400 <HAL_QSPI_Command+0x7e>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80063ae:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80063b0:	4603      	mov	r3, r0
 80063b2:	2120      	movs	r1, #32
 80063b4:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80063b6:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY;
 80063b8:	f884 6041 	strb.w	r6, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80063bc:	f8cd 8000 	str.w	r8, [sp]
 80063c0:	f7ff ff52 	bl	8006268 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80063c4:	4605      	mov	r5, r0
 80063c6:	b9a0      	cbnz	r0, 80063f2 <HAL_QSPI_Command+0x70>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80063c8:	4602      	mov	r2, r0
 80063ca:	4651      	mov	r1, sl
 80063cc:	4620      	mov	r0, r4
 80063ce:	f7ff fe91 	bl	80060f4 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 80063d2:	f8da 3024 	ldr.w	r3, [sl, #36]	@ 0x24
 80063d6:	b953      	cbnz	r3, 80063ee <HAL_QSPI_Command+0x6c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80063d8:	463b      	mov	r3, r7
 80063da:	464a      	mov	r2, r9
 80063dc:	4631      	mov	r1, r6
 80063de:	4620      	mov	r0, r4
 80063e0:	f8cd 8000 	str.w	r8, [sp]
 80063e4:	f7ff ff40 	bl	8006268 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80063e8:	b960      	cbnz	r0, 8006404 <HAL_QSPI_Command+0x82>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80063ea:	6823      	ldr	r3, [r4, #0]
 80063ec:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80063ee:	f884 9041 	strb.w	r9, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 80063f2:	2300      	movs	r3, #0
 80063f4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 80063f8:	4628      	mov	r0, r5
 80063fa:	b002      	add	sp, #8
 80063fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    status = HAL_BUSY;
 8006400:	4635      	mov	r5, r6
 8006402:	e7f6      	b.n	80063f2 <HAL_QSPI_Command+0x70>
 8006404:	4605      	mov	r5, r0
 8006406:	e7f4      	b.n	80063f2 <HAL_QSPI_Command+0x70>
  __HAL_LOCK(hqspi);
 8006408:	2502      	movs	r5, #2
 800640a:	e7f5      	b.n	80063f8 <HAL_QSPI_Command+0x76>

0800640c <HAL_QSPI_AutoPolling>:
{
 800640c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006410:	4604      	mov	r4, r0
 8006412:	461f      	mov	r7, r3
 8006414:	4689      	mov	r9, r1
 8006416:	4615      	mov	r5, r2
  uint32_t tickstart = HAL_GetTick();
 8006418:	f7fe fd0c 	bl	8004e34 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800641c:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 8006420:	4606      	mov	r6, r0
  __HAL_LOCK(hqspi);
 8006422:	2b01      	cmp	r3, #1
 8006424:	d041      	beq.n	80064aa <HAL_QSPI_AutoPolling+0x9e>
 8006426:	2301      	movs	r3, #1
 8006428:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800642c:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8006430:	2b01      	cmp	r3, #1
 8006432:	fa5f f883 	uxtb.w	r8, r3
 8006436:	d136      	bne.n	80064a6 <HAL_QSPI_AutoPolling+0x9a>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8006438:	2342      	movs	r3, #66	@ 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800643a:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800643c:	2120      	movs	r1, #32
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800643e:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8006440:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006444:	4603      	mov	r3, r0
 8006446:	9700      	str	r7, [sp, #0]
 8006448:	4620      	mov	r0, r4
 800644a:	f7ff ff0d 	bl	8006268 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800644e:	bb20      	cbnz	r0, 800649a <HAL_QSPI_AutoPolling+0x8e>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8006450:	6822      	ldr	r2, [r4, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8006452:	4620      	mov	r0, r4
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8006454:	682b      	ldr	r3, [r5, #0]
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8006456:	6929      	ldr	r1, [r5, #16]
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8006458:	6293      	str	r3, [r2, #40]	@ 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800645a:	686b      	ldr	r3, [r5, #4]
 800645c:	6253      	str	r3, [r2, #36]	@ 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800645e:	68ab      	ldr	r3, [r5, #8]
 8006460:	62d3      	str	r3, [r2, #44]	@ 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8006462:	6813      	ldr	r3, [r2, #0]
 8006464:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8006468:	430b      	orrs	r3, r1
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800646a:	4649      	mov	r1, r9
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800646c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8006470:	6013      	str	r3, [r2, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8006472:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
      cmd->NbData = cfg->StatusBytesSize;
 8006476:	68eb      	ldr	r3, [r5, #12]
 8006478:	f8c9 3028 	str.w	r3, [r9, #40]	@ 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800647c:	f7ff fe3a 	bl	80060f4 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8006480:	4633      	mov	r3, r6
 8006482:	4642      	mov	r2, r8
 8006484:	2108      	movs	r1, #8
 8006486:	4620      	mov	r0, r4
 8006488:	9700      	str	r7, [sp, #0]
 800648a:	f7ff feed 	bl	8006268 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800648e:	b920      	cbnz	r0, 800649a <HAL_QSPI_AutoPolling+0x8e>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8006490:	6823      	ldr	r3, [r4, #0]
 8006492:	2208      	movs	r2, #8
 8006494:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8006496:	f884 8041 	strb.w	r8, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 800649a:	2300      	movs	r3, #0
 800649c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 80064a0:	b003      	add	sp, #12
 80064a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 80064a6:	2002      	movs	r0, #2
 80064a8:	e7f7      	b.n	800649a <HAL_QSPI_AutoPolling+0x8e>
  __HAL_LOCK(hqspi);
 80064aa:	2002      	movs	r0, #2
 80064ac:	e7f8      	b.n	80064a0 <HAL_QSPI_AutoPolling+0x94>

080064ae <HAL_QSPI_MemoryMapped>:
{
 80064ae:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80064b0:	4604      	mov	r4, r0
 80064b2:	4616      	mov	r6, r2
 80064b4:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80064b6:	f7fe fcbd 	bl	8004e34 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80064ba:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 80064be:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80064c0:	2a01      	cmp	r2, #1
 80064c2:	d033      	beq.n	800652c <HAL_QSPI_MemoryMapped+0x7e>
 80064c4:	2201      	movs	r2, #1
 80064c6:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80064ca:	f894 2041 	ldrb.w	r2, [r4, #65]	@ 0x41
 80064ce:	2a01      	cmp	r2, #1
 80064d0:	d12a      	bne.n	8006528 <HAL_QSPI_MemoryMapped+0x7a>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80064d2:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80064d4:	2182      	movs	r1, #130	@ 0x82
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80064d6:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80064d8:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80064da:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80064de:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 80064e0:	9100      	str	r1, [sp, #0]
 80064e2:	2120      	movs	r1, #32
 80064e4:	f7ff fec0 	bl	8006268 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80064e8:	4605      	mov	r5, r0
 80064ea:	b9b8      	cbnz	r0, 800651c <HAL_QSPI_MemoryMapped+0x6e>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80064ec:	6823      	ldr	r3, [r4, #0]
 80064ee:	6872      	ldr	r2, [r6, #4]
 80064f0:	6818      	ldr	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80064f2:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80064f4:	f020 0008 	bic.w	r0, r0, #8
 80064f8:	ea40 0002 	orr.w	r0, r0, r2
 80064fc:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80064fe:	d107      	bne.n	8006510 <HAL_QSPI_MemoryMapped+0x62>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8006500:	6832      	ldr	r2, [r6, #0]
 8006502:	631a      	str	r2, [r3, #48]	@ 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8006504:	2210      	movs	r2, #16
 8006506:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8006508:	681a      	ldr	r2, [r3, #0]
 800650a:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 800650e:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8006510:	f04f 6240 	mov.w	r2, #201326592	@ 0xc000000
 8006514:	4639      	mov	r1, r7
 8006516:	4620      	mov	r0, r4
 8006518:	f7ff fdec 	bl	80060f4 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800651c:	2300      	movs	r3, #0
 800651e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8006522:	4628      	mov	r0, r5
 8006524:	b003      	add	sp, #12
 8006526:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8006528:	2502      	movs	r5, #2
 800652a:	e7f7      	b.n	800651c <HAL_QSPI_MemoryMapped+0x6e>
  __HAL_LOCK(hqspi);
 800652c:	2502      	movs	r5, #2
 800652e:	e7f8      	b.n	8006522 <HAL_QSPI_MemoryMapped+0x74>

08006530 <HAL_QSPI_Abort>:
{
 8006530:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006532:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006534:	f7fe fc7e 	bl	8004e34 <HAL_GetTick>
 8006538:	4605      	mov	r5, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800653a:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 800653e:	0798      	lsls	r0, r3, #30
 8006540:	d534      	bpl.n	80065ac <HAL_QSPI_Abort+0x7c>
    __HAL_UNLOCK(hqspi);
 8006542:	2300      	movs	r3, #0
 8006544:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8006548:	6823      	ldr	r3, [r4, #0]
 800654a:	681a      	ldr	r2, [r3, #0]
 800654c:	0751      	lsls	r1, r2, #29
 800654e:	d507      	bpl.n	8006560 <HAL_QSPI_Abort+0x30>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8006550:	681a      	ldr	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8006552:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8006554:	f022 0204 	bic.w	r2, r2, #4
 8006558:	601a      	str	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800655a:	f7fe fd90 	bl	800507e <HAL_DMA_Abort>
      if(status != HAL_OK)
 800655e:	bb40      	cbnz	r0, 80065b2 <HAL_QSPI_Abort+0x82>
  HAL_StatusTypeDef status = HAL_OK;
 8006560:	2000      	movs	r0, #0
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 8006562:	6823      	ldr	r3, [r4, #0]
 8006564:	689a      	ldr	r2, [r3, #8]
 8006566:	0692      	lsls	r2, r2, #26
 8006568:	d528      	bpl.n	80065bc <HAL_QSPI_Abort+0x8c>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800656a:	681a      	ldr	r2, [r3, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800656c:	2102      	movs	r1, #2
 800656e:	4620      	mov	r0, r4
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8006570:	f042 0202 	orr.w	r2, r2, #2
 8006574:	601a      	str	r2, [r3, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8006576:	2201      	movs	r2, #1
 8006578:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800657a:	9300      	str	r3, [sp, #0]
 800657c:	462b      	mov	r3, r5
 800657e:	f7ff fe73 	bl	8006268 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006582:	b9a0      	cbnz	r0, 80065ae <HAL_QSPI_Abort+0x7e>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006584:	6823      	ldr	r3, [r4, #0]
 8006586:	2202      	movs	r2, #2
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006588:	2120      	movs	r1, #32
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800658a:	60da      	str	r2, [r3, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800658c:	4602      	mov	r2, r0
 800658e:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8006590:	4620      	mov	r0, r4
 8006592:	9300      	str	r3, [sp, #0]
 8006594:	462b      	mov	r3, r5
 8006596:	f7ff fe67 	bl	8006268 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800659a:	b940      	cbnz	r0, 80065ae <HAL_QSPI_Abort+0x7e>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800659c:	6822      	ldr	r2, [r4, #0]
 800659e:	6953      	ldr	r3, [r2, #20]
 80065a0:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 80065a4:	6153      	str	r3, [r2, #20]
        hqspi->State = HAL_QSPI_STATE_READY;
 80065a6:	2301      	movs	r3, #1
 80065a8:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  HAL_StatusTypeDef status = HAL_OK;
 80065ac:	2000      	movs	r0, #0
}
 80065ae:	b003      	add	sp, #12
 80065b0:	bd30      	pop	{r4, r5, pc}
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 80065b2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80065b4:	f043 0304 	orr.w	r3, r3, #4
 80065b8:	6463      	str	r3, [r4, #68]	@ 0x44
 80065ba:	e7d2      	b.n	8006562 <HAL_QSPI_Abort+0x32>
      hqspi->State = HAL_QSPI_STATE_READY;
 80065bc:	2301      	movs	r3, #1
 80065be:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 80065c2:	e7f4      	b.n	80065ae <HAL_QSPI_Abort+0x7e>

080065c4 <HAL_QSPI_Transmit>:
{
 80065c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80065c8:	4604      	mov	r4, r0
 80065ca:	4688      	mov	r8, r1
 80065cc:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 80065ce:	f7fe fc31 	bl	8004e34 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80065d2:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 80065d6:	4606      	mov	r6, r0
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 80065d8:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 80065da:	2b01      	cmp	r3, #1
 80065dc:	d04f      	beq.n	800667e <HAL_QSPI_Transmit+0xba>
 80065de:	2301      	movs	r3, #1
 80065e0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80065e4:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 80065e8:	2b01      	cmp	r3, #1
 80065ea:	b2d8      	uxtb	r0, r3
 80065ec:	d145      	bne.n	800667a <HAL_QSPI_Transmit+0xb6>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80065ee:	2300      	movs	r3, #0
 80065f0:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 80065f2:	f1b8 0f00 	cmp.w	r8, #0
 80065f6:	d03b      	beq.n	8006670 <HAL_QSPI_Transmit+0xac>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 80065f8:	2312      	movs	r3, #18
 80065fa:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80065fe:	692b      	ldr	r3, [r5, #16]
 8006600:	3301      	adds	r3, #1
 8006602:	62e3      	str	r3, [r4, #44]	@ 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006604:	692b      	ldr	r3, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8006606:	f8c4 8024 	str.w	r8, [r4, #36]	@ 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800660a:	3301      	adds	r3, #1
 800660c:	62a3      	str	r3, [r4, #40]	@ 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800660e:	696b      	ldr	r3, [r5, #20]
 8006610:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8006614:	616b      	str	r3, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8006616:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8006618:	b9b3      	cbnz	r3, 8006648 <HAL_QSPI_Transmit+0x84>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800661a:	4633      	mov	r3, r6
 800661c:	2201      	movs	r2, #1
 800661e:	2102      	movs	r1, #2
 8006620:	4620      	mov	r0, r4
 8006622:	9700      	str	r7, [sp, #0]
 8006624:	f7ff fe20 	bl	8006268 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006628:	b928      	cbnz	r0, 8006636 <HAL_QSPI_Transmit+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800662a:	6823      	ldr	r3, [r4, #0]
 800662c:	2202      	movs	r2, #2
          status = HAL_QSPI_Abort(hqspi);
 800662e:	4620      	mov	r0, r4
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006630:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8006632:	f7ff ff7d 	bl	8006530 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8006636:	2301      	movs	r3, #1
 8006638:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 800663c:	2300      	movs	r3, #0
 800663e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8006642:	b002      	add	sp, #8
 8006644:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8006648:	4633      	mov	r3, r6
 800664a:	2201      	movs	r2, #1
 800664c:	2104      	movs	r1, #4
 800664e:	4620      	mov	r0, r4
 8006650:	9700      	str	r7, [sp, #0]
 8006652:	f7ff fe09 	bl	8006268 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8006656:	2800      	cmp	r0, #0
 8006658:	d1ed      	bne.n	8006636 <HAL_QSPI_Transmit+0x72>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800665a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800665c:	781b      	ldrb	r3, [r3, #0]
 800665e:	f885 3020 	strb.w	r3, [r5, #32]
        hqspi->pTxBuffPtr++;
 8006662:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006664:	3301      	adds	r3, #1
 8006666:	6263      	str	r3, [r4, #36]	@ 0x24
        hqspi->TxXferCount--;
 8006668:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800666a:	3b01      	subs	r3, #1
 800666c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800666e:	e7d2      	b.n	8006616 <HAL_QSPI_Transmit+0x52>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006670:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006672:	f043 0308 	orr.w	r3, r3, #8
 8006676:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 8006678:	e7e0      	b.n	800663c <HAL_QSPI_Transmit+0x78>
    status = HAL_BUSY;
 800667a:	2002      	movs	r0, #2
 800667c:	e7de      	b.n	800663c <HAL_QSPI_Transmit+0x78>
  __HAL_LOCK(hqspi);
 800667e:	2002      	movs	r0, #2
 8006680:	e7df      	b.n	8006642 <HAL_QSPI_Transmit+0x7e>

08006682 <HAL_QSPI_Receive>:
{
 8006682:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006686:	4604      	mov	r4, r0
 8006688:	4616      	mov	r6, r2
 800668a:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800668c:	f7fe fbd2 	bl	8004e34 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8006690:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8006692:	4607      	mov	r7, r0
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8006694:	69aa      	ldr	r2, [r5, #24]
  __HAL_LOCK(hqspi);
 8006696:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800669a:	2b01      	cmp	r3, #1
 800669c:	d052      	beq.n	8006744 <HAL_QSPI_Receive+0xc2>
 800669e:	2301      	movs	r3, #1
 80066a0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80066a4:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 80066a8:	2b01      	cmp	r3, #1
 80066aa:	b2d8      	uxtb	r0, r3
 80066ac:	d148      	bne.n	8006740 <HAL_QSPI_Receive+0xbe>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80066ae:	2300      	movs	r3, #0
 80066b0:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 80066b2:	f1b8 0f00 	cmp.w	r8, #0
 80066b6:	d03e      	beq.n	8006736 <HAL_QSPI_Receive+0xb4>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 80066b8:	2322      	movs	r3, #34	@ 0x22
 80066ba:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80066be:	692b      	ldr	r3, [r5, #16]
 80066c0:	3301      	adds	r3, #1
 80066c2:	63a3      	str	r3, [r4, #56]	@ 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80066c4:	692b      	ldr	r3, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 80066c6:	f8c4 8030 	str.w	r8, [r4, #48]	@ 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80066ca:	3301      	adds	r3, #1
 80066cc:	6363      	str	r3, [r4, #52]	@ 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80066ce:	6969      	ldr	r1, [r5, #20]
 80066d0:	f021 6140 	bic.w	r1, r1, #201326592	@ 0xc000000
 80066d4:	f041 6180 	orr.w	r1, r1, #67108864	@ 0x4000000
 80066d8:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 80066da:	61aa      	str	r2, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 80066dc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80066de:	b9b3      	cbnz	r3, 800670e <HAL_QSPI_Receive+0x8c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80066e0:	463b      	mov	r3, r7
 80066e2:	2201      	movs	r2, #1
 80066e4:	2102      	movs	r1, #2
 80066e6:	4620      	mov	r0, r4
 80066e8:	9600      	str	r6, [sp, #0]
 80066ea:	f7ff fdbd 	bl	8006268 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 80066ee:	b928      	cbnz	r0, 80066fc <HAL_QSPI_Receive+0x7a>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80066f0:	6823      	ldr	r3, [r4, #0]
 80066f2:	2202      	movs	r2, #2
          status = HAL_QSPI_Abort(hqspi);
 80066f4:	4620      	mov	r0, r4
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80066f6:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 80066f8:	f7ff ff1a 	bl	8006530 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 80066fc:	2301      	movs	r3, #1
 80066fe:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8006702:	2300      	movs	r3, #0
 8006704:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8006708:	b002      	add	sp, #8
 800670a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 800670e:	463b      	mov	r3, r7
 8006710:	2201      	movs	r2, #1
 8006712:	2106      	movs	r1, #6
 8006714:	4620      	mov	r0, r4
 8006716:	9600      	str	r6, [sp, #0]
 8006718:	f7ff fda6 	bl	8006268 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 800671c:	2800      	cmp	r0, #0
 800671e:	d1ed      	bne.n	80066fc <HAL_QSPI_Receive+0x7a>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8006720:	f895 2020 	ldrb.w	r2, [r5, #32]
 8006724:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006726:	701a      	strb	r2, [r3, #0]
        hqspi->pRxBuffPtr++;
 8006728:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800672a:	3301      	adds	r3, #1
 800672c:	6323      	str	r3, [r4, #48]	@ 0x30
        hqspi->RxXferCount--;
 800672e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006730:	3b01      	subs	r3, #1
 8006732:	63a3      	str	r3, [r4, #56]	@ 0x38
 8006734:	e7d2      	b.n	80066dc <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006736:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006738:	f043 0308 	orr.w	r3, r3, #8
 800673c:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 800673e:	e7e0      	b.n	8006702 <HAL_QSPI_Receive+0x80>
    status = HAL_BUSY;
 8006740:	2002      	movs	r0, #2
 8006742:	e7de      	b.n	8006702 <HAL_QSPI_Receive+0x80>
  __HAL_LOCK(hqspi);
 8006744:	2002      	movs	r0, #2
 8006746:	e7df      	b.n	8006708 <HAL_QSPI_Receive+0x86>

08006748 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006748:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800674c:	4604      	mov	r4, r0
 800674e:	b340      	cbz	r0, 80067a2 <HAL_RCC_OscConfig+0x5a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006750:	6803      	ldr	r3, [r0, #0]
 8006752:	07de      	lsls	r6, r3, #31
 8006754:	d410      	bmi.n	8006778 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006756:	6823      	ldr	r3, [r4, #0]
 8006758:	079d      	lsls	r5, r3, #30
 800675a:	d461      	bmi.n	8006820 <HAL_RCC_OscConfig+0xd8>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800675c:	6823      	ldr	r3, [r4, #0]
 800675e:	0719      	lsls	r1, r3, #28
 8006760:	f100 80a6 	bmi.w	80068b0 <HAL_RCC_OscConfig+0x168>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006764:	6823      	ldr	r3, [r4, #0]
 8006766:	075a      	lsls	r2, r3, #29
 8006768:	f100 80c7 	bmi.w	80068fa <HAL_RCC_OscConfig+0x1b2>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800676c:	69a2      	ldr	r2, [r4, #24]
 800676e:	2a00      	cmp	r2, #0
 8006770:	f040 8130 	bne.w	80069d4 <HAL_RCC_OscConfig+0x28c>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
 8006774:	2000      	movs	r0, #0
 8006776:	e02c      	b.n	80067d2 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8006778:	4b94      	ldr	r3, [pc, #592]	@ (80069cc <HAL_RCC_OscConfig+0x284>)
 800677a:	689a      	ldr	r2, [r3, #8]
 800677c:	f002 020c 	and.w	r2, r2, #12
 8006780:	2a04      	cmp	r2, #4
 8006782:	d007      	beq.n	8006794 <HAL_RCC_OscConfig+0x4c>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006784:	689a      	ldr	r2, [r3, #8]
 8006786:	f002 020c 	and.w	r2, r2, #12
 800678a:	2a08      	cmp	r2, #8
 800678c:	d10b      	bne.n	80067a6 <HAL_RCC_OscConfig+0x5e>
 800678e:	685b      	ldr	r3, [r3, #4]
 8006790:	0259      	lsls	r1, r3, #9
 8006792:	d508      	bpl.n	80067a6 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006794:	4b8d      	ldr	r3, [pc, #564]	@ (80069cc <HAL_RCC_OscConfig+0x284>)
 8006796:	681b      	ldr	r3, [r3, #0]
 8006798:	039a      	lsls	r2, r3, #14
 800679a:	d5dc      	bpl.n	8006756 <HAL_RCC_OscConfig+0xe>
 800679c:	6863      	ldr	r3, [r4, #4]
 800679e:	2b00      	cmp	r3, #0
 80067a0:	d1d9      	bne.n	8006756 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 80067a2:	2001      	movs	r0, #1
 80067a4:	e015      	b.n	80067d2 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80067a6:	6863      	ldr	r3, [r4, #4]
 80067a8:	4d88      	ldr	r5, [pc, #544]	@ (80069cc <HAL_RCC_OscConfig+0x284>)
 80067aa:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80067ae:	d113      	bne.n	80067d8 <HAL_RCC_OscConfig+0x90>
 80067b0:	682b      	ldr	r3, [r5, #0]
 80067b2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80067b6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80067b8:	f7fe fb3c 	bl	8004e34 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80067bc:	4e83      	ldr	r6, [pc, #524]	@ (80069cc <HAL_RCC_OscConfig+0x284>)
        tickstart = HAL_GetTick();
 80067be:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80067c0:	6833      	ldr	r3, [r6, #0]
 80067c2:	039b      	lsls	r3, r3, #14
 80067c4:	d4c7      	bmi.n	8006756 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80067c6:	f7fe fb35 	bl	8004e34 <HAL_GetTick>
 80067ca:	1b40      	subs	r0, r0, r5
 80067cc:	2864      	cmp	r0, #100	@ 0x64
 80067ce:	d9f7      	bls.n	80067c0 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 80067d0:	2003      	movs	r0, #3
}
 80067d2:	b002      	add	sp, #8
 80067d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80067d8:	b99b      	cbnz	r3, 8006802 <HAL_RCC_OscConfig+0xba>
 80067da:	682b      	ldr	r3, [r5, #0]
 80067dc:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80067e0:	602b      	str	r3, [r5, #0]
 80067e2:	682b      	ldr	r3, [r5, #0]
 80067e4:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80067e8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80067ea:	f7fe fb23 	bl	8004e34 <HAL_GetTick>
 80067ee:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80067f0:	682b      	ldr	r3, [r5, #0]
 80067f2:	039f      	lsls	r7, r3, #14
 80067f4:	d5af      	bpl.n	8006756 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80067f6:	f7fe fb1d 	bl	8004e34 <HAL_GetTick>
 80067fa:	1b80      	subs	r0, r0, r6
 80067fc:	2864      	cmp	r0, #100	@ 0x64
 80067fe:	d9f7      	bls.n	80067f0 <HAL_RCC_OscConfig+0xa8>
 8006800:	e7e6      	b.n	80067d0 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006802:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006806:	682b      	ldr	r3, [r5, #0]
 8006808:	d103      	bne.n	8006812 <HAL_RCC_OscConfig+0xca>
 800680a:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800680e:	602b      	str	r3, [r5, #0]
 8006810:	e7ce      	b.n	80067b0 <HAL_RCC_OscConfig+0x68>
 8006812:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006816:	602b      	str	r3, [r5, #0]
 8006818:	682b      	ldr	r3, [r5, #0]
 800681a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800681e:	e7ca      	b.n	80067b6 <HAL_RCC_OscConfig+0x6e>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8006820:	4b6a      	ldr	r3, [pc, #424]	@ (80069cc <HAL_RCC_OscConfig+0x284>)
 8006822:	689a      	ldr	r2, [r3, #8]
 8006824:	f012 0f0c 	tst.w	r2, #12
 8006828:	d007      	beq.n	800683a <HAL_RCC_OscConfig+0xf2>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800682a:	689a      	ldr	r2, [r3, #8]
 800682c:	f002 020c 	and.w	r2, r2, #12
 8006830:	2a08      	cmp	r2, #8
 8006832:	d111      	bne.n	8006858 <HAL_RCC_OscConfig+0x110>
 8006834:	685b      	ldr	r3, [r3, #4]
 8006836:	025d      	lsls	r5, r3, #9
 8006838:	d40e      	bmi.n	8006858 <HAL_RCC_OscConfig+0x110>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800683a:	4a64      	ldr	r2, [pc, #400]	@ (80069cc <HAL_RCC_OscConfig+0x284>)
 800683c:	6813      	ldr	r3, [r2, #0]
 800683e:	0799      	lsls	r1, r3, #30
 8006840:	d502      	bpl.n	8006848 <HAL_RCC_OscConfig+0x100>
 8006842:	68e3      	ldr	r3, [r4, #12]
 8006844:	2b01      	cmp	r3, #1
 8006846:	d1ac      	bne.n	80067a2 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006848:	6813      	ldr	r3, [r2, #0]
 800684a:	6921      	ldr	r1, [r4, #16]
 800684c:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8006850:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006854:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006856:	e781      	b.n	800675c <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8006858:	68e3      	ldr	r3, [r4, #12]
 800685a:	4d5c      	ldr	r5, [pc, #368]	@ (80069cc <HAL_RCC_OscConfig+0x284>)
 800685c:	b1bb      	cbz	r3, 800688e <HAL_RCC_OscConfig+0x146>
        __HAL_RCC_HSI_ENABLE();
 800685e:	682b      	ldr	r3, [r5, #0]
 8006860:	f043 0301 	orr.w	r3, r3, #1
 8006864:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006866:	f7fe fae5 	bl	8004e34 <HAL_GetTick>
 800686a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800686c:	682b      	ldr	r3, [r5, #0]
 800686e:	079b      	lsls	r3, r3, #30
 8006870:	d507      	bpl.n	8006882 <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006872:	682b      	ldr	r3, [r5, #0]
 8006874:	6922      	ldr	r2, [r4, #16]
 8006876:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800687a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800687e:	602b      	str	r3, [r5, #0]
 8006880:	e76c      	b.n	800675c <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006882:	f7fe fad7 	bl	8004e34 <HAL_GetTick>
 8006886:	1b80      	subs	r0, r0, r6
 8006888:	2802      	cmp	r0, #2
 800688a:	d9ef      	bls.n	800686c <HAL_RCC_OscConfig+0x124>
 800688c:	e7a0      	b.n	80067d0 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 800688e:	682b      	ldr	r3, [r5, #0]
 8006890:	f023 0301 	bic.w	r3, r3, #1
 8006894:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006896:	f7fe facd 	bl	8004e34 <HAL_GetTick>
 800689a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800689c:	682b      	ldr	r3, [r5, #0]
 800689e:	079f      	lsls	r7, r3, #30
 80068a0:	f57f af5c 	bpl.w	800675c <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80068a4:	f7fe fac6 	bl	8004e34 <HAL_GetTick>
 80068a8:	1b80      	subs	r0, r0, r6
 80068aa:	2802      	cmp	r0, #2
 80068ac:	d9f6      	bls.n	800689c <HAL_RCC_OscConfig+0x154>
 80068ae:	e78f      	b.n	80067d0 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80068b0:	6963      	ldr	r3, [r4, #20]
 80068b2:	4d46      	ldr	r5, [pc, #280]	@ (80069cc <HAL_RCC_OscConfig+0x284>)
 80068b4:	b183      	cbz	r3, 80068d8 <HAL_RCC_OscConfig+0x190>
      __HAL_RCC_LSI_ENABLE();
 80068b6:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80068b8:	f043 0301 	orr.w	r3, r3, #1
 80068bc:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
 80068be:	f7fe fab9 	bl	8004e34 <HAL_GetTick>
 80068c2:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80068c4:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80068c6:	079b      	lsls	r3, r3, #30
 80068c8:	f53f af4c 	bmi.w	8006764 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80068cc:	f7fe fab2 	bl	8004e34 <HAL_GetTick>
 80068d0:	1b80      	subs	r0, r0, r6
 80068d2:	2802      	cmp	r0, #2
 80068d4:	d9f6      	bls.n	80068c4 <HAL_RCC_OscConfig+0x17c>
 80068d6:	e77b      	b.n	80067d0 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 80068d8:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80068da:	f023 0301 	bic.w	r3, r3, #1
 80068de:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
 80068e0:	f7fe faa8 	bl	8004e34 <HAL_GetTick>
 80068e4:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80068e6:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80068e8:	079f      	lsls	r7, r3, #30
 80068ea:	f57f af3b 	bpl.w	8006764 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80068ee:	f7fe faa1 	bl	8004e34 <HAL_GetTick>
 80068f2:	1b80      	subs	r0, r0, r6
 80068f4:	2802      	cmp	r0, #2
 80068f6:	d9f6      	bls.n	80068e6 <HAL_RCC_OscConfig+0x19e>
 80068f8:	e76a      	b.n	80067d0 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80068fa:	4b34      	ldr	r3, [pc, #208]	@ (80069cc <HAL_RCC_OscConfig+0x284>)
 80068fc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80068fe:	00d5      	lsls	r5, r2, #3
 8006900:	d427      	bmi.n	8006952 <HAL_RCC_OscConfig+0x20a>
      __HAL_RCC_PWR_CLK_ENABLE();
 8006902:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
      pwrclkchanged = SET;
 8006904:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8006906:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800690a:	641a      	str	r2, [r3, #64]	@ 0x40
 800690c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800690e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006912:	9301      	str	r3, [sp, #4]
 8006914:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8006916:	4d2e      	ldr	r5, [pc, #184]	@ (80069d0 <HAL_RCC_OscConfig+0x288>)
 8006918:	682b      	ldr	r3, [r5, #0]
 800691a:	05d8      	lsls	r0, r3, #23
 800691c:	d51b      	bpl.n	8006956 <HAL_RCC_OscConfig+0x20e>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800691e:	68a3      	ldr	r3, [r4, #8]
 8006920:	4d2a      	ldr	r5, [pc, #168]	@ (80069cc <HAL_RCC_OscConfig+0x284>)
 8006922:	2b01      	cmp	r3, #1
 8006924:	d127      	bne.n	8006976 <HAL_RCC_OscConfig+0x22e>
 8006926:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006928:	f043 0301 	orr.w	r3, r3, #1
 800692c:	672b      	str	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800692e:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8006932:	f7fe fa7f 	bl	8004e34 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006936:	4e25      	ldr	r6, [pc, #148]	@ (80069cc <HAL_RCC_OscConfig+0x284>)
      tickstart = HAL_GetTick();
 8006938:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800693a:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 800693c:	079a      	lsls	r2, r3, #30
 800693e:	d53f      	bpl.n	80069c0 <HAL_RCC_OscConfig+0x278>
    if (pwrclkchanged == SET)
 8006940:	2f00      	cmp	r7, #0
 8006942:	f43f af13 	beq.w	800676c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006946:	4a21      	ldr	r2, [pc, #132]	@ (80069cc <HAL_RCC_OscConfig+0x284>)
 8006948:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800694a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800694e:	6413      	str	r3, [r2, #64]	@ 0x40
 8006950:	e70c      	b.n	800676c <HAL_RCC_OscConfig+0x24>
  FlagStatus pwrclkchanged = RESET;
 8006952:	2700      	movs	r7, #0
 8006954:	e7df      	b.n	8006916 <HAL_RCC_OscConfig+0x1ce>
      PWR->CR1 |= PWR_CR1_DBP;
 8006956:	682b      	ldr	r3, [r5, #0]
 8006958:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800695c:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800695e:	f7fe fa69 	bl	8004e34 <HAL_GetTick>
 8006962:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8006964:	682b      	ldr	r3, [r5, #0]
 8006966:	05d9      	lsls	r1, r3, #23
 8006968:	d4d9      	bmi.n	800691e <HAL_RCC_OscConfig+0x1d6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800696a:	f7fe fa63 	bl	8004e34 <HAL_GetTick>
 800696e:	1b80      	subs	r0, r0, r6
 8006970:	2864      	cmp	r0, #100	@ 0x64
 8006972:	d9f7      	bls.n	8006964 <HAL_RCC_OscConfig+0x21c>
 8006974:	e72c      	b.n	80067d0 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006976:	b9ab      	cbnz	r3, 80069a4 <HAL_RCC_OscConfig+0x25c>
 8006978:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800697a:	f241 3888 	movw	r8, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800697e:	f023 0301 	bic.w	r3, r3, #1
 8006982:	672b      	str	r3, [r5, #112]	@ 0x70
 8006984:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006986:	f023 0304 	bic.w	r3, r3, #4
 800698a:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 800698c:	f7fe fa52 	bl	8004e34 <HAL_GetTick>
 8006990:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006992:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006994:	079b      	lsls	r3, r3, #30
 8006996:	d5d3      	bpl.n	8006940 <HAL_RCC_OscConfig+0x1f8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006998:	f7fe fa4c 	bl	8004e34 <HAL_GetTick>
 800699c:	1b80      	subs	r0, r0, r6
 800699e:	4540      	cmp	r0, r8
 80069a0:	d9f7      	bls.n	8006992 <HAL_RCC_OscConfig+0x24a>
 80069a2:	e715      	b.n	80067d0 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80069a4:	2b05      	cmp	r3, #5
 80069a6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80069a8:	d103      	bne.n	80069b2 <HAL_RCC_OscConfig+0x26a>
 80069aa:	f043 0304 	orr.w	r3, r3, #4
 80069ae:	672b      	str	r3, [r5, #112]	@ 0x70
 80069b0:	e7b9      	b.n	8006926 <HAL_RCC_OscConfig+0x1de>
 80069b2:	f023 0301 	bic.w	r3, r3, #1
 80069b6:	672b      	str	r3, [r5, #112]	@ 0x70
 80069b8:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80069ba:	f023 0304 	bic.w	r3, r3, #4
 80069be:	e7b5      	b.n	800692c <HAL_RCC_OscConfig+0x1e4>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80069c0:	f7fe fa38 	bl	8004e34 <HAL_GetTick>
 80069c4:	1b40      	subs	r0, r0, r5
 80069c6:	4540      	cmp	r0, r8
 80069c8:	d9b7      	bls.n	800693a <HAL_RCC_OscConfig+0x1f2>
 80069ca:	e701      	b.n	80067d0 <HAL_RCC_OscConfig+0x88>
 80069cc:	40023800 	.word	0x40023800
 80069d0:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80069d4:	4d38      	ldr	r5, [pc, #224]	@ (8006ab8 <HAL_RCC_OscConfig+0x370>)
 80069d6:	68ab      	ldr	r3, [r5, #8]
 80069d8:	f003 030c 	and.w	r3, r3, #12
 80069dc:	2b08      	cmp	r3, #8
 80069de:	d041      	beq.n	8006a64 <HAL_RCC_OscConfig+0x31c>
        __HAL_RCC_PLL_DISABLE();
 80069e0:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80069e2:	2a02      	cmp	r2, #2
        __HAL_RCC_PLL_DISABLE();
 80069e4:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80069e8:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80069ea:	d12e      	bne.n	8006a4a <HAL_RCC_OscConfig+0x302>
        tickstart = HAL_GetTick();
 80069ec:	f7fe fa22 	bl	8004e34 <HAL_GetTick>
 80069f0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80069f2:	682b      	ldr	r3, [r5, #0]
 80069f4:	0199      	lsls	r1, r3, #6
 80069f6:	d422      	bmi.n	8006a3e <HAL_RCC_OscConfig+0x2f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80069f8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80069fa:	085b      	lsrs	r3, r3, #1
 80069fc:	1e5a      	subs	r2, r3, #1
 80069fe:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 8006a02:	430b      	orrs	r3, r1
 8006a04:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006a08:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006a0a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006a0e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8006a10:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006a14:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8006a18:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006a1a:	682b      	ldr	r3, [r5, #0]
 8006a1c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8006a20:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006a22:	f7fe fa07 	bl	8004e34 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006a26:	4d24      	ldr	r5, [pc, #144]	@ (8006ab8 <HAL_RCC_OscConfig+0x370>)
        tickstart = HAL_GetTick();
 8006a28:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006a2a:	682b      	ldr	r3, [r5, #0]
 8006a2c:	019a      	lsls	r2, r3, #6
 8006a2e:	f53f aea1 	bmi.w	8006774 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006a32:	f7fe f9ff 	bl	8004e34 <HAL_GetTick>
 8006a36:	1b00      	subs	r0, r0, r4
 8006a38:	2802      	cmp	r0, #2
 8006a3a:	d9f6      	bls.n	8006a2a <HAL_RCC_OscConfig+0x2e2>
 8006a3c:	e6c8      	b.n	80067d0 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006a3e:	f7fe f9f9 	bl	8004e34 <HAL_GetTick>
 8006a42:	1b80      	subs	r0, r0, r6
 8006a44:	2802      	cmp	r0, #2
 8006a46:	d9d4      	bls.n	80069f2 <HAL_RCC_OscConfig+0x2aa>
 8006a48:	e6c2      	b.n	80067d0 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8006a4a:	f7fe f9f3 	bl	8004e34 <HAL_GetTick>
 8006a4e:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006a50:	682b      	ldr	r3, [r5, #0]
 8006a52:	019b      	lsls	r3, r3, #6
 8006a54:	f57f ae8e 	bpl.w	8006774 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006a58:	f7fe f9ec 	bl	8004e34 <HAL_GetTick>
 8006a5c:	1b00      	subs	r0, r0, r4
 8006a5e:	2802      	cmp	r0, #2
 8006a60:	d9f6      	bls.n	8006a50 <HAL_RCC_OscConfig+0x308>
 8006a62:	e6b5      	b.n	80067d0 <HAL_RCC_OscConfig+0x88>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006a64:	2a01      	cmp	r2, #1
      pll_config = RCC->PLLCFGR;
 8006a66:	686b      	ldr	r3, [r5, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006a68:	f43f ae9b 	beq.w	80067a2 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006a6c:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006a70:	69e1      	ldr	r1, [r4, #28]
 8006a72:	428a      	cmp	r2, r1
 8006a74:	f47f ae95 	bne.w	80067a2 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006a78:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006a7c:	6a21      	ldr	r1, [r4, #32]
 8006a7e:	428a      	cmp	r2, r1
 8006a80:	f47f ae8f 	bne.w	80067a2 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006a84:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8006a88:	6a61      	ldr	r1, [r4, #36]	@ 0x24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006a8a:	401a      	ands	r2, r3
 8006a8c:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8006a90:	f47f ae87 	bne.w	80067a2 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8006a94:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8006a96:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8006a9a:	0852      	lsrs	r2, r2, #1
 8006a9c:	3a01      	subs	r2, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8006a9e:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8006aa2:	f47f ae7e 	bne.w	80067a2 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8006aa6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8006aa8:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8006aac:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8006ab0:	bf14      	ite	ne
 8006ab2:	2001      	movne	r0, #1
 8006ab4:	2000      	moveq	r0, #0
 8006ab6:	e68c      	b.n	80067d2 <HAL_RCC_OscConfig+0x8a>
 8006ab8:	40023800 	.word	0x40023800

08006abc <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006abc:	4913      	ldr	r1, [pc, #76]	@ (8006b0c <HAL_RCC_GetSysClockFreq+0x50>)
{
 8006abe:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006ac0:	688b      	ldr	r3, [r1, #8]
 8006ac2:	f003 030c 	and.w	r3, r3, #12
 8006ac6:	2b04      	cmp	r3, #4
 8006ac8:	d01b      	beq.n	8006b02 <HAL_RCC_GetSysClockFreq+0x46>
 8006aca:	2b08      	cmp	r3, #8
 8006acc:	d11b      	bne.n	8006b06 <HAL_RCC_GetSysClockFreq+0x4a>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006ace:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8006ad0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006ad2:	6849      	ldr	r1, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006ad4:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8006ad8:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006adc:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006ae0:	bf1a      	itte	ne
 8006ae2:	480b      	ldrne	r0, [pc, #44]	@ (8006b10 <HAL_RCC_GetSysClockFreq+0x54>)
 8006ae4:	2300      	movne	r3, #0
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006ae6:	480b      	ldreq	r0, [pc, #44]	@ (8006b14 <HAL_RCC_GetSysClockFreq+0x58>)
 8006ae8:	fba1 0100 	umull	r0, r1, r1, r0
 8006aec:	f7f9 fbe0 	bl	80002b0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8006af0:	4b06      	ldr	r3, [pc, #24]	@ (8006b0c <HAL_RCC_GetSysClockFreq+0x50>)
 8006af2:	685b      	ldr	r3, [r3, #4]
 8006af4:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8006af8:	3301      	adds	r3, #1
 8006afa:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8006afc:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006b00:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006b02:	4803      	ldr	r0, [pc, #12]	@ (8006b10 <HAL_RCC_GetSysClockFreq+0x54>)
 8006b04:	e7fc      	b.n	8006b00 <HAL_RCC_GetSysClockFreq+0x44>
      sysclockfreq = HSI_VALUE;
 8006b06:	4803      	ldr	r0, [pc, #12]	@ (8006b14 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8006b08:	e7fa      	b.n	8006b00 <HAL_RCC_GetSysClockFreq+0x44>
 8006b0a:	bf00      	nop
 8006b0c:	40023800 	.word	0x40023800
 8006b10:	017d7840 	.word	0x017d7840
 8006b14:	00f42400 	.word	0x00f42400

08006b18 <HAL_RCC_ClockConfig>:
{
 8006b18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006b1c:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8006b1e:	4604      	mov	r4, r0
 8006b20:	b910      	cbnz	r0, 8006b28 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006b22:	2001      	movs	r0, #1
}
 8006b24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8006b28:	4a45      	ldr	r2, [pc, #276]	@ (8006c40 <HAL_RCC_ClockConfig+0x128>)
 8006b2a:	6813      	ldr	r3, [r2, #0]
 8006b2c:	f003 030f 	and.w	r3, r3, #15
 8006b30:	428b      	cmp	r3, r1
 8006b32:	d328      	bcc.n	8006b86 <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006b34:	6821      	ldr	r1, [r4, #0]
 8006b36:	078f      	lsls	r7, r1, #30
 8006b38:	d430      	bmi.n	8006b9c <HAL_RCC_ClockConfig+0x84>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006b3a:	07c8      	lsls	r0, r1, #31
 8006b3c:	d443      	bmi.n	8006bc6 <HAL_RCC_ClockConfig+0xae>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8006b3e:	4a40      	ldr	r2, [pc, #256]	@ (8006c40 <HAL_RCC_ClockConfig+0x128>)
 8006b40:	6813      	ldr	r3, [r2, #0]
 8006b42:	f003 030f 	and.w	r3, r3, #15
 8006b46:	42ab      	cmp	r3, r5
 8006b48:	d866      	bhi.n	8006c18 <HAL_RCC_ClockConfig+0x100>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006b4a:	6822      	ldr	r2, [r4, #0]
 8006b4c:	0751      	lsls	r1, r2, #29
 8006b4e:	d46f      	bmi.n	8006c30 <HAL_RCC_ClockConfig+0x118>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006b50:	0713      	lsls	r3, r2, #28
 8006b52:	d507      	bpl.n	8006b64 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8006b54:	4a3b      	ldr	r2, [pc, #236]	@ (8006c44 <HAL_RCC_ClockConfig+0x12c>)
 8006b56:	6921      	ldr	r1, [r4, #16]
 8006b58:	6893      	ldr	r3, [r2, #8]
 8006b5a:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8006b5e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006b62:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8006b64:	f7ff ffaa 	bl	8006abc <HAL_RCC_GetSysClockFreq>
 8006b68:	4b36      	ldr	r3, [pc, #216]	@ (8006c44 <HAL_RCC_ClockConfig+0x12c>)
 8006b6a:	4a37      	ldr	r2, [pc, #220]	@ (8006c48 <HAL_RCC_ClockConfig+0x130>)
 8006b6c:	689b      	ldr	r3, [r3, #8]
 8006b6e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8006b72:	5cd3      	ldrb	r3, [r2, r3]
 8006b74:	40d8      	lsrs	r0, r3
 8006b76:	4b35      	ldr	r3, [pc, #212]	@ (8006c4c <HAL_RCC_ClockConfig+0x134>)
 8006b78:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8006b7a:	4b35      	ldr	r3, [pc, #212]	@ (8006c50 <HAL_RCC_ClockConfig+0x138>)
 8006b7c:	6818      	ldr	r0, [r3, #0]
 8006b7e:	f7fa fb75 	bl	800126c <HAL_InitTick>
  return HAL_OK;
 8006b82:	2000      	movs	r0, #0
 8006b84:	e7ce      	b.n	8006b24 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006b86:	6813      	ldr	r3, [r2, #0]
 8006b88:	f023 030f 	bic.w	r3, r3, #15
 8006b8c:	430b      	orrs	r3, r1
 8006b8e:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006b90:	6813      	ldr	r3, [r2, #0]
 8006b92:	f003 030f 	and.w	r3, r3, #15
 8006b96:	428b      	cmp	r3, r1
 8006b98:	d1c3      	bne.n	8006b22 <HAL_RCC_ClockConfig+0xa>
 8006b9a:	e7cb      	b.n	8006b34 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006b9c:	f011 0f04 	tst.w	r1, #4
 8006ba0:	4b28      	ldr	r3, [pc, #160]	@ (8006c44 <HAL_RCC_ClockConfig+0x12c>)
 8006ba2:	d003      	beq.n	8006bac <HAL_RCC_ClockConfig+0x94>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006ba4:	689a      	ldr	r2, [r3, #8]
 8006ba6:	f442 52e0 	orr.w	r2, r2, #7168	@ 0x1c00
 8006baa:	609a      	str	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006bac:	070e      	lsls	r6, r1, #28
 8006bae:	d503      	bpl.n	8006bb8 <HAL_RCC_ClockConfig+0xa0>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006bb0:	689a      	ldr	r2, [r3, #8]
 8006bb2:	f442 4260 	orr.w	r2, r2, #57344	@ 0xe000
 8006bb6:	609a      	str	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006bb8:	689a      	ldr	r2, [r3, #8]
 8006bba:	68a0      	ldr	r0, [r4, #8]
 8006bbc:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8006bc0:	4302      	orrs	r2, r0
 8006bc2:	609a      	str	r2, [r3, #8]
 8006bc4:	e7b9      	b.n	8006b3a <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006bc6:	6861      	ldr	r1, [r4, #4]
 8006bc8:	4b1e      	ldr	r3, [pc, #120]	@ (8006c44 <HAL_RCC_ClockConfig+0x12c>)
 8006bca:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006bcc:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006bce:	d11b      	bne.n	8006c08 <HAL_RCC_ClockConfig+0xf0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006bd0:	f412 3f00 	tst.w	r2, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006bd4:	d0a5      	beq.n	8006b22 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006bd6:	689a      	ldr	r2, [r3, #8]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006bd8:	f241 3888 	movw	r8, #5000	@ 0x1388
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006bdc:	4f19      	ldr	r7, [pc, #100]	@ (8006c44 <HAL_RCC_ClockConfig+0x12c>)
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006bde:	f022 0203 	bic.w	r2, r2, #3
 8006be2:	430a      	orrs	r2, r1
 8006be4:	609a      	str	r2, [r3, #8]
    tickstart = HAL_GetTick();
 8006be6:	f7fe f925 	bl	8004e34 <HAL_GetTick>
 8006bea:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006bec:	68bb      	ldr	r3, [r7, #8]
 8006bee:	6862      	ldr	r2, [r4, #4]
 8006bf0:	f003 030c 	and.w	r3, r3, #12
 8006bf4:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006bf8:	d0a1      	beq.n	8006b3e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006bfa:	f7fe f91b 	bl	8004e34 <HAL_GetTick>
 8006bfe:	1b80      	subs	r0, r0, r6
 8006c00:	4540      	cmp	r0, r8
 8006c02:	d9f3      	bls.n	8006bec <HAL_RCC_ClockConfig+0xd4>
        return HAL_TIMEOUT;
 8006c04:	2003      	movs	r0, #3
 8006c06:	e78d      	b.n	8006b24 <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8006c08:	2902      	cmp	r1, #2
 8006c0a:	d102      	bne.n	8006c12 <HAL_RCC_ClockConfig+0xfa>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006c0c:	f012 7f00 	tst.w	r2, #33554432	@ 0x2000000
 8006c10:	e7e0      	b.n	8006bd4 <HAL_RCC_ClockConfig+0xbc>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006c12:	f012 0f02 	tst.w	r2, #2
 8006c16:	e7dd      	b.n	8006bd4 <HAL_RCC_ClockConfig+0xbc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006c18:	6813      	ldr	r3, [r2, #0]
 8006c1a:	f023 030f 	bic.w	r3, r3, #15
 8006c1e:	432b      	orrs	r3, r5
 8006c20:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006c22:	6813      	ldr	r3, [r2, #0]
 8006c24:	f003 030f 	and.w	r3, r3, #15
 8006c28:	42ab      	cmp	r3, r5
 8006c2a:	f47f af7a 	bne.w	8006b22 <HAL_RCC_ClockConfig+0xa>
 8006c2e:	e78c      	b.n	8006b4a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006c30:	4904      	ldr	r1, [pc, #16]	@ (8006c44 <HAL_RCC_ClockConfig+0x12c>)
 8006c32:	68e0      	ldr	r0, [r4, #12]
 8006c34:	688b      	ldr	r3, [r1, #8]
 8006c36:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8006c3a:	4303      	orrs	r3, r0
 8006c3c:	608b      	str	r3, [r1, #8]
 8006c3e:	e787      	b.n	8006b50 <HAL_RCC_ClockConfig+0x38>
 8006c40:	40023c00 	.word	0x40023c00
 8006c44:	40023800 	.word	0x40023800
 8006c48:	080211d4 	.word	0x080211d4
 8006c4c:	2000000c 	.word	0x2000000c
 8006c50:	2000003c 	.word	0x2000003c

08006c54 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8006c54:	4b04      	ldr	r3, [pc, #16]	@ (8006c68 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006c56:	4a05      	ldr	r2, [pc, #20]	@ (8006c6c <HAL_RCC_GetPCLK1Freq+0x18>)
 8006c58:	689b      	ldr	r3, [r3, #8]
 8006c5a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006c5e:	5cd3      	ldrb	r3, [r2, r3]
 8006c60:	4a03      	ldr	r2, [pc, #12]	@ (8006c70 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006c62:	6810      	ldr	r0, [r2, #0]
}
 8006c64:	40d8      	lsrs	r0, r3
 8006c66:	4770      	bx	lr
 8006c68:	40023800 	.word	0x40023800
 8006c6c:	080211cc 	.word	0x080211cc
 8006c70:	2000000c 	.word	0x2000000c

08006c74 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8006c74:	4b04      	ldr	r3, [pc, #16]	@ (8006c88 <HAL_RCC_GetPCLK2Freq+0x14>)
 8006c76:	4a05      	ldr	r2, [pc, #20]	@ (8006c8c <HAL_RCC_GetPCLK2Freq+0x18>)
 8006c78:	689b      	ldr	r3, [r3, #8]
 8006c7a:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8006c7e:	5cd3      	ldrb	r3, [r2, r3]
 8006c80:	4a03      	ldr	r2, [pc, #12]	@ (8006c90 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8006c82:	6810      	ldr	r0, [r2, #0]
}
 8006c84:	40d8      	lsrs	r0, r3
 8006c86:	4770      	bx	lr
 8006c88:	40023800 	.word	0x40023800
 8006c8c:	080211cc 	.word	0x080211cc
 8006c90:	2000000c 	.word	0x2000000c

08006c94 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006c94:	230f      	movs	r3, #15
 8006c96:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006c98:	4b0b      	ldr	r3, [pc, #44]	@ (8006cc8 <HAL_RCC_GetClockConfig+0x34>)
 8006c9a:	689a      	ldr	r2, [r3, #8]
 8006c9c:	f002 0203 	and.w	r2, r2, #3
 8006ca0:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006ca2:	689a      	ldr	r2, [r3, #8]
 8006ca4:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8006ca8:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8006caa:	689a      	ldr	r2, [r3, #8]
 8006cac:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8006cb0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 8006cb2:	689b      	ldr	r3, [r3, #8]
 8006cb4:	08db      	lsrs	r3, r3, #3
 8006cb6:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8006cba:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006cbc:	4b03      	ldr	r3, [pc, #12]	@ (8006ccc <HAL_RCC_GetClockConfig+0x38>)
 8006cbe:	681b      	ldr	r3, [r3, #0]
 8006cc0:	f003 030f 	and.w	r3, r3, #15
 8006cc4:	600b      	str	r3, [r1, #0]
}
 8006cc6:	4770      	bx	lr
 8006cc8:	40023800 	.word	0x40023800
 8006ccc:	40023c00 	.word	0x40023c00

08006cd0 <HAL_RCCEx_PeriphCLKConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006cd0:	6803      	ldr	r3, [r0, #0]
{
 8006cd2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006cd6:	f013 0601 	ands.w	r6, r3, #1
{
 8006cda:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006cdc:	d00b      	beq.n	8006cf6 <HAL_RCCEx_PeriphCLKConfig+0x26>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8006cde:	4aad      	ldr	r2, [pc, #692]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006ce0:	6891      	ldr	r1, [r2, #8]
 8006ce2:	f421 0100 	bic.w	r1, r1, #8388608	@ 0x800000
 8006ce6:	6091      	str	r1, [r2, #8]
 8006ce8:	6b46      	ldr	r6, [r0, #52]	@ 0x34
 8006cea:	6891      	ldr	r1, [r2, #8]
 8006cec:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8006cee:	fab6 f686 	clz	r6, r6
 8006cf2:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8006cf4:	6091      	str	r1, [r2, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 8006cf6:	f413 2500 	ands.w	r5, r3, #524288	@ 0x80000
 8006cfa:	d012      	beq.n	8006d22 <HAL_RCCEx_PeriphCLKConfig+0x52>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006cfc:	49a5      	ldr	r1, [pc, #660]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006cfe:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 8006d00:	f8d1 208c 	ldr.w	r2, [r1, #140]	@ 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8006d04:	f5b5 1f80 	cmp.w	r5, #1048576	@ 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006d08:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
    {
      plli2sused = 1;
 8006d0c:	bf08      	it	eq
 8006d0e:	2601      	moveq	r6, #1
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006d10:	ea42 0205 	orr.w	r2, r2, r5
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8006d14:	bf16      	itet	ne
 8006d16:	fab5 f585 	clzne	r5, r5
  uint32_t pllsaiused = 0;
 8006d1a:	2500      	moveq	r5, #0
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8006d1c:	096d      	lsrne	r5, r5, #5
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006d1e:	f8c1 208c 	str.w	r2, [r1, #140]	@ 0x8c
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8006d22:	02d8      	lsls	r0, r3, #11
 8006d24:	d510      	bpl.n	8006d48 <HAL_RCCEx_PeriphCLKConfig+0x78>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8006d26:	489b      	ldr	r0, [pc, #620]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006d28:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8006d2a:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8006d2e:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8006d32:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8006d36:	ea42 0201 	orr.w	r2, r2, r1
 8006d3a:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8006d3e:	f000 8186 	beq.w	800704e <HAL_RCCEx_PeriphCLKConfig+0x37e>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
 8006d42:	2900      	cmp	r1, #0
 8006d44:	bf08      	it	eq
 8006d46:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
 8006d48:	f013 7f80 	tst.w	r3, #16777216	@ 0x1000000
 8006d4c:	bf18      	it	ne
 8006d4e:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006d50:	0699      	lsls	r1, r3, #26
 8006d52:	d532      	bpl.n	8006dba <HAL_RCCEx_PeriphCLKConfig+0xea>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006d54:	4b8f      	ldr	r3, [pc, #572]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8006d56:	4f90      	ldr	r7, [pc, #576]	@ (8006f98 <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006d58:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006d5a:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006d5e:	641a      	str	r2, [r3, #64]	@ 0x40
 8006d60:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006d62:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006d66:	9301      	str	r3, [sp, #4]
 8006d68:	9b01      	ldr	r3, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 8006d6a:	683b      	ldr	r3, [r7, #0]
 8006d6c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006d70:	603b      	str	r3, [r7, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006d72:	f7fe f85f 	bl	8004e34 <HAL_GetTick>
 8006d76:	4680      	mov	r8, r0

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8006d78:	683b      	ldr	r3, [r7, #0]
 8006d7a:	05da      	lsls	r2, r3, #23
 8006d7c:	f140 8169 	bpl.w	8007052 <HAL_RCCEx_PeriphCLKConfig+0x382>
        return HAL_TIMEOUT;
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006d80:	4f84      	ldr	r7, [pc, #528]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006d82:	6b22      	ldr	r2, [r4, #48]	@ 0x30
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006d84:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006d86:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8006d8a:	f040 816d 	bne.w	8007068 <HAL_RCCEx_PeriphCLKConfig+0x398>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006d8e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006d90:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8006d94:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8006d98:	4a7e      	ldr	r2, [pc, #504]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006d9a:	f040 818a 	bne.w	80070b2 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8006d9e:	6891      	ldr	r1, [r2, #8]
 8006da0:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8006da4:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8006da8:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8006dac:	4301      	orrs	r1, r0
 8006dae:	6091      	str	r1, [r2, #8]
 8006db0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006db4:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8006db6:	430b      	orrs	r3, r1
 8006db8:	6713      	str	r3, [r2, #112]	@ 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006dba:	6823      	ldr	r3, [r4, #0]
 8006dbc:	06d9      	lsls	r1, r3, #27
 8006dbe:	d50c      	bpl.n	8006dda <HAL_RCCEx_PeriphCLKConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006dc0:	4a74      	ldr	r2, [pc, #464]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006dc2:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
 8006dc6:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
 8006dca:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
 8006dce:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
 8006dd2:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8006dd4:	4301      	orrs	r1, r0
 8006dd6:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8006dda:	045a      	lsls	r2, r3, #17
 8006ddc:	d508      	bpl.n	8006df0 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8006dde:	496d      	ldr	r1, [pc, #436]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006de0:	6e60      	ldr	r0, [r4, #100]	@ 0x64
 8006de2:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006de6:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8006dea:	4302      	orrs	r2, r0
 8006dec:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8006df0:	041f      	lsls	r7, r3, #16
 8006df2:	d508      	bpl.n	8006e06 <HAL_RCCEx_PeriphCLKConfig+0x136>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8006df4:	4967      	ldr	r1, [pc, #412]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006df6:	6ea0      	ldr	r0, [r4, #104]	@ 0x68
 8006df8:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006dfc:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 8006e00:	4302      	orrs	r2, r0
 8006e02:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8006e06:	03d8      	lsls	r0, r3, #15
 8006e08:	d508      	bpl.n	8006e1c <HAL_RCCEx_PeriphCLKConfig+0x14c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8006e0a:	4962      	ldr	r1, [pc, #392]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006e0c:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
 8006e0e:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006e12:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 8006e16:	4302      	orrs	r2, r0
 8006e18:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8006e1c:	0399      	lsls	r1, r3, #14
 8006e1e:	d508      	bpl.n	8006e32 <HAL_RCCEx_PeriphCLKConfig+0x162>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8006e20:	495c      	ldr	r1, [pc, #368]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006e22:	6f20      	ldr	r0, [r4, #112]	@ 0x70
 8006e24:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006e28:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8006e2c:	4302      	orrs	r2, r0
 8006e2e:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8006e32:	065a      	lsls	r2, r3, #25
 8006e34:	d508      	bpl.n	8006e48 <HAL_RCCEx_PeriphCLKConfig+0x178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8006e36:	4957      	ldr	r1, [pc, #348]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006e38:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8006e3a:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006e3e:	f022 0203 	bic.w	r2, r2, #3
 8006e42:	4302      	orrs	r2, r0
 8006e44:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8006e48:	061f      	lsls	r7, r3, #24
 8006e4a:	d508      	bpl.n	8006e5e <HAL_RCCEx_PeriphCLKConfig+0x18e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8006e4c:	4951      	ldr	r1, [pc, #324]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006e4e:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 8006e50:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006e54:	f022 020c 	bic.w	r2, r2, #12
 8006e58:	4302      	orrs	r2, r0
 8006e5a:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8006e5e:	05d8      	lsls	r0, r3, #23
 8006e60:	d508      	bpl.n	8006e74 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8006e62:	494c      	ldr	r1, [pc, #304]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006e64:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8006e66:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006e6a:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 8006e6e:	4302      	orrs	r2, r0
 8006e70:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8006e74:	0599      	lsls	r1, r3, #22
 8006e76:	d508      	bpl.n	8006e8a <HAL_RCCEx_PeriphCLKConfig+0x1ba>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8006e78:	4946      	ldr	r1, [pc, #280]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006e7a:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 8006e7c:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006e80:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 8006e84:	4302      	orrs	r2, r0
 8006e86:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8006e8a:	055a      	lsls	r2, r3, #21
 8006e8c:	d508      	bpl.n	8006ea0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8006e8e:	4941      	ldr	r1, [pc, #260]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006e90:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8006e92:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006e96:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8006e9a:	4302      	orrs	r2, r0
 8006e9c:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8006ea0:	051f      	lsls	r7, r3, #20
 8006ea2:	d508      	bpl.n	8006eb6 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 8006ea4:	493b      	ldr	r1, [pc, #236]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006ea6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006ea8:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006eac:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 8006eb0:	4302      	orrs	r2, r0
 8006eb2:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8006eb6:	04d8      	lsls	r0, r3, #19
 8006eb8:	d508      	bpl.n	8006ecc <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8006eba:	4936      	ldr	r1, [pc, #216]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006ebc:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8006ebe:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006ec2:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8006ec6:	4302      	orrs	r2, r0
 8006ec8:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8006ecc:	0499      	lsls	r1, r3, #18
 8006ece:	d508      	bpl.n	8006ee2 <HAL_RCCEx_PeriphCLKConfig+0x212>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8006ed0:	4930      	ldr	r1, [pc, #192]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006ed2:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8006ed4:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006ed8:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8006edc:	4302      	orrs	r2, r0
 8006ede:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8006ee2:	025a      	lsls	r2, r3, #9
 8006ee4:	d508      	bpl.n	8006ef8 <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8006ee6:	492b      	ldr	r1, [pc, #172]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006ee8:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
 8006eea:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006eee:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
 8006ef2:	4302      	orrs	r2, r0
 8006ef4:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006ef8:	029f      	lsls	r7, r3, #10
 8006efa:	d50c      	bpl.n	8006f16 <HAL_RCCEx_PeriphCLKConfig+0x246>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006efc:	4825      	ldr	r0, [pc, #148]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006efe:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
 8006f00:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
 8006f04:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006f08:	f022 6200 	bic.w	r2, r2, #134217728	@ 0x8000000
      pllsaiused = 1;
 8006f0c:	bf08      	it	eq
 8006f0e:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006f10:	430a      	orrs	r2, r1
 8006f12:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
 8006f16:	f013 0f08 	tst.w	r3, #8
 8006f1a:	bf18      	it	ne
 8006f1c:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8006f1e:	0358      	lsls	r0, r3, #13
 8006f20:	d508      	bpl.n	8006f34 <HAL_RCCEx_PeriphCLKConfig+0x264>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8006f22:	491c      	ldr	r1, [pc, #112]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006f24:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8006f26:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006f2a:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8006f2e:	4302      	orrs	r2, r0
 8006f30:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8006f34:	0219      	lsls	r1, r3, #8
 8006f36:	d509      	bpl.n	8006f4c <HAL_RCCEx_PeriphCLKConfig+0x27c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8006f38:	4916      	ldr	r1, [pc, #88]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006f3a:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 8006f3e:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8006f42:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
 8006f46:	4302      	orrs	r2, r0
 8006f48:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8006f4c:	2e01      	cmp	r6, #1
 8006f4e:	f000 80b4 	beq.w	80070ba <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8006f52:	019a      	lsls	r2, r3, #6
 8006f54:	f100 80b1 	bmi.w	80070ba <HAL_RCCEx_PeriphCLKConfig+0x3ea>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8006f58:	2d01      	cmp	r5, #1
 8006f5a:	d176      	bne.n	800704a <HAL_RCCEx_PeriphCLKConfig+0x37a>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006f5c:	4d0d      	ldr	r5, [pc, #52]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006f5e:	682b      	ldr	r3, [r5, #0]
 8006f60:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006f64:	602b      	str	r3, [r5, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006f66:	f7fd ff65 	bl	8004e34 <HAL_GetTick>
 8006f6a:	4606      	mov	r6, r0

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006f6c:	682b      	ldr	r3, [r5, #0]
 8006f6e:	009f      	lsls	r7, r3, #2
 8006f70:	f100 8127 	bmi.w	80071c2 <HAL_RCCEx_PeriphCLKConfig+0x4f2>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8006f74:	6821      	ldr	r1, [r4, #0]
 8006f76:	030e      	lsls	r6, r1, #12
 8006f78:	d501      	bpl.n	8006f7e <HAL_RCCEx_PeriphCLKConfig+0x2ae>
 8006f7a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8006f7c:	b11b      	cbz	r3, 8006f86 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8006f7e:	02cd      	lsls	r5, r1, #11
 8006f80:	d523      	bpl.n	8006fca <HAL_RCCEx_PeriphCLKConfig+0x2fa>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8006f82:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8006f84:	bb0b      	cbnz	r3, 8006fca <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8006f86:	4a03      	ldr	r2, [pc, #12]	@ (8006f94 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8006f88:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006f8c:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88
 8006f90:	e004      	b.n	8006f9c <HAL_RCCEx_PeriphCLKConfig+0x2cc>
 8006f92:	bf00      	nop
 8006f94:	40023800 	.word	0x40023800
 8006f98:	40007000 	.word	0x40007000
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006f9c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006fa0:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006fa4:	4303      	orrs	r3, r0
 8006fa6:	6960      	ldr	r0, [r4, #20]
 8006fa8:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006fac:	69a0      	ldr	r0, [r4, #24]
 8006fae:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8006fb2:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006fb6:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8006fba:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8006fbc:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8006fc0:	3801      	subs	r0, #1
 8006fc2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8006fc6:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8006fca:	0288      	lsls	r0, r1, #10
 8006fcc:	d515      	bpl.n	8006ffa <HAL_RCCEx_PeriphCLKConfig+0x32a>
 8006fce:	6fe3      	ldr	r3, [r4, #124]	@ 0x7c
 8006fd0:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006fd4:	d111      	bne.n	8006ffa <HAL_RCCEx_PeriphCLKConfig+0x32a>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006fd6:	4a82      	ldr	r2, [pc, #520]	@ (80071e0 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006fd8:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006fdc:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8006fe0:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
 8006fe4:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006fe8:	4303      	orrs	r3, r0
 8006fea:	6960      	ldr	r0, [r4, #20]
 8006fec:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006ff0:	6a20      	ldr	r0, [r4, #32]
 8006ff2:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8006ff6:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006ffa:	070a      	lsls	r2, r1, #28
 8006ffc:	d519      	bpl.n	8007032 <HAL_RCCEx_PeriphCLKConfig+0x362>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006ffe:	4a78      	ldr	r2, [pc, #480]	@ (80071e0 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8007000:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8007004:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8007008:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 800700c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8007010:	430b      	orrs	r3, r1
 8007012:	6961      	ldr	r1, [r4, #20]
 8007014:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8007018:	69e1      	ldr	r1, [r4, #28]
 800701a:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800701e:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8007022:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8007026:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8007028:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800702c:	430b      	orrs	r3, r1
 800702e:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007032:	4c6b      	ldr	r4, [pc, #428]	@ (80071e0 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8007034:	6823      	ldr	r3, [r4, #0]
 8007036:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800703a:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800703c:	f7fd fefa 	bl	8004e34 <HAL_GetTick>
 8007040:	4605      	mov	r5, r0

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007042:	6823      	ldr	r3, [r4, #0]
 8007044:	009b      	lsls	r3, r3, #2
 8007046:	f140 80c3 	bpl.w	80071d0 <HAL_RCCEx_PeriphCLKConfig+0x500>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800704a:	2000      	movs	r0, #0
 800704c:	e009      	b.n	8007062 <HAL_RCCEx_PeriphCLKConfig+0x392>
      plli2sused = 1;
 800704e:	2601      	movs	r6, #1
 8007050:	e67a      	b.n	8006d48 <HAL_RCCEx_PeriphCLKConfig+0x78>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007052:	f7fd feef 	bl	8004e34 <HAL_GetTick>
 8007056:	eba0 0008 	sub.w	r0, r0, r8
 800705a:	2864      	cmp	r0, #100	@ 0x64
 800705c:	f67f ae8c 	bls.w	8006d78 <HAL_RCCEx_PeriphCLKConfig+0xa8>
        return HAL_TIMEOUT;
 8007060:	2003      	movs	r0, #3
}
 8007062:	b003      	add	sp, #12
 8007064:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007068:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 800706c:	4293      	cmp	r3, r2
 800706e:	f43f ae8e 	beq.w	8006d8e <HAL_RCCEx_PeriphCLKConfig+0xbe>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007072:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007074:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007076:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 800707a:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 800707e:	673a      	str	r2, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007080:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 8007082:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8007086:	673a      	str	r2, [r7, #112]	@ 0x70
      RCC->BDCR = tmpreg0;
 8007088:	673b      	str	r3, [r7, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800708a:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800708c:	07db      	lsls	r3, r3, #31
 800708e:	f57f ae7e 	bpl.w	8006d8e <HAL_RCCEx_PeriphCLKConfig+0xbe>
        tickstart = HAL_GetTick();
 8007092:	f7fd fecf 	bl	8004e34 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007096:	f241 3988 	movw	r9, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 800709a:	4680      	mov	r8, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800709c:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800709e:	0798      	lsls	r0, r3, #30
 80070a0:	f53f ae75 	bmi.w	8006d8e <HAL_RCCEx_PeriphCLKConfig+0xbe>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80070a4:	f7fd fec6 	bl	8004e34 <HAL_GetTick>
 80070a8:	eba0 0008 	sub.w	r0, r0, r8
 80070ac:	4548      	cmp	r0, r9
 80070ae:	d9f5      	bls.n	800709c <HAL_RCCEx_PeriphCLKConfig+0x3cc>
 80070b0:	e7d6      	b.n	8007060 <HAL_RCCEx_PeriphCLKConfig+0x390>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80070b2:	6891      	ldr	r1, [r2, #8]
 80070b4:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 80070b8:	e679      	b.n	8006dae <HAL_RCCEx_PeriphCLKConfig+0xde>
    __HAL_RCC_PLLI2S_DISABLE();
 80070ba:	4e49      	ldr	r6, [pc, #292]	@ (80071e0 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 80070bc:	6833      	ldr	r3, [r6, #0]
 80070be:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80070c2:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 80070c4:	f7fd feb6 	bl	8004e34 <HAL_GetTick>
 80070c8:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80070ca:	6833      	ldr	r3, [r6, #0]
 80070cc:	011b      	lsls	r3, r3, #4
 80070ce:	d472      	bmi.n	80071b6 <HAL_RCCEx_PeriphCLKConfig+0x4e6>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 80070d0:	6822      	ldr	r2, [r4, #0]
 80070d2:	07d7      	lsls	r7, r2, #31
 80070d4:	d512      	bpl.n	80070fc <HAL_RCCEx_PeriphCLKConfig+0x42c>
 80070d6:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80070d8:	b983      	cbnz	r3, 80070fc <HAL_RCCEx_PeriphCLKConfig+0x42c>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 80070da:	f8d6 3084 	ldr.w	r3, [r6, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 80070de:	f8d6 1084 	ldr.w	r1, [r6, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 80070e2:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80070e6:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 80070ea:	430b      	orrs	r3, r1
 80070ec:	6861      	ldr	r1, [r4, #4]
 80070ee:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 80070f2:	68a1      	ldr	r1, [r4, #8]
 80070f4:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 80070f8:	f8c6 3084 	str.w	r3, [r6, #132]	@ 0x84
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 80070fc:	0316      	lsls	r6, r2, #12
 80070fe:	d503      	bpl.n	8007108 <HAL_RCCEx_PeriphCLKConfig+0x438>
 8007100:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007102:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8007106:	d005      	beq.n	8007114 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8007108:	02d0      	lsls	r0, r2, #11
 800710a:	d51e      	bpl.n	800714a <HAL_RCCEx_PeriphCLKConfig+0x47a>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 800710c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800710e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007112:	d11a      	bne.n	800714a <HAL_RCCEx_PeriphCLKConfig+0x47a>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8007114:	4932      	ldr	r1, [pc, #200]	@ (80071e0 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8007116:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800711a:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800711e:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8007122:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8007126:	4303      	orrs	r3, r0
 8007128:	6860      	ldr	r0, [r4, #4]
 800712a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800712e:	68e0      	ldr	r0, [r4, #12]
 8007130:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8007134:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8007138:	f8d1 008c 	ldr.w	r0, [r1, #140]	@ 0x8c
 800713c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800713e:	f020 001f 	bic.w	r0, r0, #31
 8007142:	3b01      	subs	r3, #1
 8007144:	4303      	orrs	r3, r0
 8007146:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 800714a:	01d1      	lsls	r1, r2, #7
 800714c:	d511      	bpl.n	8007172 <HAL_RCCEx_PeriphCLKConfig+0x4a2>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 800714e:	4924      	ldr	r1, [pc, #144]	@ (80071e0 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8007150:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007154:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8007158:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
 800715c:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8007160:	4303      	orrs	r3, r0
 8007162:	6860      	ldr	r0, [r4, #4]
 8007164:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007168:	6920      	ldr	r0, [r4, #16]
 800716a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800716e:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8007172:	0192      	lsls	r2, r2, #6
 8007174:	d50d      	bpl.n	8007192 <HAL_RCCEx_PeriphCLKConfig+0x4c2>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8007176:	6923      	ldr	r3, [r4, #16]
 8007178:	6862      	ldr	r2, [r4, #4]
 800717a:	041b      	lsls	r3, r3, #16
 800717c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007180:	68e2      	ldr	r2, [r4, #12]
 8007182:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007186:	68a2      	ldr	r2, [r4, #8]
 8007188:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800718c:	4a14      	ldr	r2, [pc, #80]	@ (80071e0 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 800718e:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007192:	4e13      	ldr	r6, [pc, #76]	@ (80071e0 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8007194:	6833      	ldr	r3, [r6, #0]
 8007196:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800719a:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 800719c:	f7fd fe4a 	bl	8004e34 <HAL_GetTick>
 80071a0:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80071a2:	6833      	ldr	r3, [r6, #0]
 80071a4:	011b      	lsls	r3, r3, #4
 80071a6:	f53f aed7 	bmi.w	8006f58 <HAL_RCCEx_PeriphCLKConfig+0x288>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80071aa:	f7fd fe43 	bl	8004e34 <HAL_GetTick>
 80071ae:	1bc0      	subs	r0, r0, r7
 80071b0:	2864      	cmp	r0, #100	@ 0x64
 80071b2:	d9f6      	bls.n	80071a2 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 80071b4:	e754      	b.n	8007060 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80071b6:	f7fd fe3d 	bl	8004e34 <HAL_GetTick>
 80071ba:	1bc0      	subs	r0, r0, r7
 80071bc:	2864      	cmp	r0, #100	@ 0x64
 80071be:	d984      	bls.n	80070ca <HAL_RCCEx_PeriphCLKConfig+0x3fa>
 80071c0:	e74e      	b.n	8007060 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80071c2:	f7fd fe37 	bl	8004e34 <HAL_GetTick>
 80071c6:	1b80      	subs	r0, r0, r6
 80071c8:	2864      	cmp	r0, #100	@ 0x64
 80071ca:	f67f aecf 	bls.w	8006f6c <HAL_RCCEx_PeriphCLKConfig+0x29c>
 80071ce:	e747      	b.n	8007060 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80071d0:	f7fd fe30 	bl	8004e34 <HAL_GetTick>
 80071d4:	1b40      	subs	r0, r0, r5
 80071d6:	2864      	cmp	r0, #100	@ 0x64
 80071d8:	f67f af33 	bls.w	8007042 <HAL_RCCEx_PeriphCLKConfig+0x372>
 80071dc:	e740      	b.n	8007060 <HAL_RCCEx_PeriphCLKConfig+0x390>
 80071de:	bf00      	nop
 80071e0:	40023800 	.word	0x40023800

080071e4 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 80071e4:	b538      	push	{r3, r4, r5, lr}
 80071e6:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 80071e8:	4604      	mov	r4, r0
 80071ea:	b1c8      	cbz	r0, 8007220 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 80071ec:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 80071f0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80071f4:	b91b      	cbnz	r3, 80071fe <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80071f6:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80071fa:	f7f9 ffcf 	bl	800119c <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80071fe:	2302      	movs	r3, #2

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007200:	1d21      	adds	r1, r4, #4
 8007202:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007204:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007208:	f000 fed3 	bl	8007fb2 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800720c:	6862      	ldr	r2, [r4, #4]
 800720e:	4629      	mov	r1, r5
 8007210:	6820      	ldr	r0, [r4, #0]
 8007212:	f000 ff06 	bl	8008022 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007216:	2301      	movs	r3, #1

  return HAL_OK;
 8007218:	2000      	movs	r0, #0
  hsdram->State = HAL_SDRAM_STATE_READY;
 800721a:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
}
 800721e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007220:	2001      	movs	r0, #1
 8007222:	e7fc      	b.n	800721e <HAL_SDRAM_Init+0x3a>

08007224 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8007224:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8007226:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
 800722a:	4605      	mov	r5, r0
 800722c:	460e      	mov	r6, r1

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800722e:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8007230:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8007232:	d010      	beq.n	8007256 <HAL_SDRAM_SendCommand+0x32>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8007234:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8007238:	2c01      	cmp	r4, #1
 800723a:	d110      	bne.n	800725e <HAL_SDRAM_SendCommand+0x3a>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800723c:	2302      	movs	r3, #2

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800723e:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007240:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8007244:	f000 ff23 	bl	800808e <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007248:	6833      	ldr	r3, [r6, #0]
 800724a:	2b02      	cmp	r3, #2
 800724c:	d104      	bne.n	8007258 <HAL_SDRAM_SendCommand+0x34>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800724e:	2305      	movs	r3, #5
 8007250:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8007254:	2000      	movs	r0, #0
}
 8007256:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_READY;
 8007258:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
 800725c:	e7fa      	b.n	8007254 <HAL_SDRAM_SendCommand+0x30>
    return HAL_ERROR;
 800725e:	2001      	movs	r0, #1
 8007260:	e7f9      	b.n	8007256 <HAL_SDRAM_SendCommand+0x32>

08007262 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007262:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007264:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
 8007268:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800726a:	2b02      	cmp	r3, #2
 800726c:	b2d8      	uxtb	r0, r3
 800726e:	d00d      	beq.n	800728c <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8007270:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8007274:	2b01      	cmp	r3, #1
 8007276:	b2dd      	uxtb	r5, r3
 8007278:	d109      	bne.n	800728e <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800727a:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800727c:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800727e:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8007282:	f000 ff16 	bl	80080b2 <FMC_SDRAM_ProgramRefreshRate>
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8007286:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007288:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
 800728c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800728e:	2001      	movs	r0, #1
 8007290:	e7fc      	b.n	800728c <HAL_SDRAM_ProgramRefreshRate+0x2a>

08007292 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8007292:	4770      	bx	lr

08007294 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007294:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8007298:	2b01      	cmp	r3, #1
 800729a:	d133      	bne.n	8007304 <HAL_TIM_Base_Start_IT+0x70>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800729c:	2302      	movs	r3, #2
 800729e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80072a2:	6803      	ldr	r3, [r0, #0]
 80072a4:	68da      	ldr	r2, [r3, #12]
 80072a6:	f042 0201 	orr.w	r2, r2, #1
 80072aa:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80072ac:	4a16      	ldr	r2, [pc, #88]	@ (8007308 <HAL_TIM_Base_Start_IT+0x74>)
 80072ae:	4293      	cmp	r3, r2
 80072b0:	d01a      	beq.n	80072e8 <HAL_TIM_Base_Start_IT+0x54>
 80072b2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80072b6:	d017      	beq.n	80072e8 <HAL_TIM_Base_Start_IT+0x54>
 80072b8:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80072bc:	4293      	cmp	r3, r2
 80072be:	d013      	beq.n	80072e8 <HAL_TIM_Base_Start_IT+0x54>
 80072c0:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80072c4:	4293      	cmp	r3, r2
 80072c6:	d00f      	beq.n	80072e8 <HAL_TIM_Base_Start_IT+0x54>
 80072c8:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80072cc:	4293      	cmp	r3, r2
 80072ce:	d00b      	beq.n	80072e8 <HAL_TIM_Base_Start_IT+0x54>
 80072d0:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80072d4:	4293      	cmp	r3, r2
 80072d6:	d007      	beq.n	80072e8 <HAL_TIM_Base_Start_IT+0x54>
 80072d8:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 80072dc:	4293      	cmp	r3, r2
 80072de:	d003      	beq.n	80072e8 <HAL_TIM_Base_Start_IT+0x54>
 80072e0:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 80072e4:	4293      	cmp	r3, r2
 80072e6:	d107      	bne.n	80072f8 <HAL_TIM_Base_Start_IT+0x64>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80072e8:	6899      	ldr	r1, [r3, #8]
 80072ea:	4a08      	ldr	r2, [pc, #32]	@ (800730c <HAL_TIM_Base_Start_IT+0x78>)
 80072ec:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80072ee:	2a06      	cmp	r2, #6
 80072f0:	d006      	beq.n	8007300 <HAL_TIM_Base_Start_IT+0x6c>
 80072f2:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 80072f6:	d003      	beq.n	8007300 <HAL_TIM_Base_Start_IT+0x6c>
    {
      __HAL_TIM_ENABLE(htim);
 80072f8:	681a      	ldr	r2, [r3, #0]
 80072fa:	f042 0201 	orr.w	r2, r2, #1
 80072fe:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8007300:	2000      	movs	r0, #0
 8007302:	4770      	bx	lr
    return HAL_ERROR;
 8007304:	2001      	movs	r0, #1
}
 8007306:	4770      	bx	lr
 8007308:	40010000 	.word	0x40010000
 800730c:	00010007 	.word	0x00010007

08007310 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8007310:	4770      	bx	lr

08007312 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8007312:	4770      	bx	lr

08007314 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8007314:	4770      	bx	lr

08007316 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8007316:	4770      	bx	lr

08007318 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007318:	6803      	ldr	r3, [r0, #0]
 800731a:	691a      	ldr	r2, [r3, #16]
 800731c:	0791      	lsls	r1, r2, #30
{
 800731e:	b510      	push	{r4, lr}
 8007320:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007322:	d50f      	bpl.n	8007344 <HAL_TIM_IRQHandler+0x2c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8007324:	68da      	ldr	r2, [r3, #12]
 8007326:	0792      	lsls	r2, r2, #30
 8007328:	d50c      	bpl.n	8007344 <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800732a:	f06f 0202 	mvn.w	r2, #2
 800732e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007330:	2201      	movs	r2, #1
 8007332:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007334:	699b      	ldr	r3, [r3, #24]
 8007336:	0799      	lsls	r1, r3, #30
 8007338:	f000 8085 	beq.w	8007446 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800733c:	f7ff ffe9 	bl	8007312 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007340:	2300      	movs	r3, #0
 8007342:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8007344:	6823      	ldr	r3, [r4, #0]
 8007346:	691a      	ldr	r2, [r3, #16]
 8007348:	0752      	lsls	r2, r2, #29
 800734a:	d510      	bpl.n	800736e <HAL_TIM_IRQHandler+0x56>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800734c:	68da      	ldr	r2, [r3, #12]
 800734e:	0750      	lsls	r0, r2, #29
 8007350:	d50d      	bpl.n	800736e <HAL_TIM_IRQHandler+0x56>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8007352:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
 8007356:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8007358:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800735a:	2202      	movs	r2, #2
 800735c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800735e:	699b      	ldr	r3, [r3, #24]
 8007360:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8007364:	d075      	beq.n	8007452 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 8007366:	f7ff ffd4 	bl	8007312 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800736a:	2300      	movs	r3, #0
 800736c:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800736e:	6823      	ldr	r3, [r4, #0]
 8007370:	691a      	ldr	r2, [r3, #16]
 8007372:	0711      	lsls	r1, r2, #28
 8007374:	d50f      	bpl.n	8007396 <HAL_TIM_IRQHandler+0x7e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8007376:	68da      	ldr	r2, [r3, #12]
 8007378:	0712      	lsls	r2, r2, #28
 800737a:	d50c      	bpl.n	8007396 <HAL_TIM_IRQHandler+0x7e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800737c:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
 8007380:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8007382:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007384:	2204      	movs	r2, #4
 8007386:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007388:	69db      	ldr	r3, [r3, #28]
 800738a:	079b      	lsls	r3, r3, #30
 800738c:	d067      	beq.n	800745e <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800738e:	f7ff ffc0 	bl	8007312 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007392:	2300      	movs	r3, #0
 8007394:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8007396:	6823      	ldr	r3, [r4, #0]
 8007398:	691a      	ldr	r2, [r3, #16]
 800739a:	06d0      	lsls	r0, r2, #27
 800739c:	d510      	bpl.n	80073c0 <HAL_TIM_IRQHandler+0xa8>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800739e:	68da      	ldr	r2, [r3, #12]
 80073a0:	06d1      	lsls	r1, r2, #27
 80073a2:	d50d      	bpl.n	80073c0 <HAL_TIM_IRQHandler+0xa8>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80073a4:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
 80073a8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80073aa:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80073ac:	2208      	movs	r2, #8
 80073ae:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80073b0:	69db      	ldr	r3, [r3, #28]
 80073b2:	f413 7f40 	tst.w	r3, #768	@ 0x300
 80073b6:	d058      	beq.n	800746a <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 80073b8:	f7ff ffab 	bl	8007312 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80073bc:	2300      	movs	r3, #0
 80073be:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80073c0:	6823      	ldr	r3, [r4, #0]
 80073c2:	691a      	ldr	r2, [r3, #16]
 80073c4:	07d2      	lsls	r2, r2, #31
 80073c6:	d508      	bpl.n	80073da <HAL_TIM_IRQHandler+0xc2>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80073c8:	68da      	ldr	r2, [r3, #12]
 80073ca:	07d0      	lsls	r0, r2, #31
 80073cc:	d505      	bpl.n	80073da <HAL_TIM_IRQHandler+0xc2>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80073ce:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
 80073d2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80073d4:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 80073d6:	f7f9 fc9d 	bl	8000d14 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80073da:	6823      	ldr	r3, [r4, #0]
 80073dc:	691a      	ldr	r2, [r3, #16]
 80073de:	0611      	lsls	r1, r2, #24
 80073e0:	d508      	bpl.n	80073f4 <HAL_TIM_IRQHandler+0xdc>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80073e2:	68da      	ldr	r2, [r3, #12]
 80073e4:	0612      	lsls	r2, r2, #24
 80073e6:	d505      	bpl.n	80073f4 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80073e8:	f06f 0280 	mvn.w	r2, #128	@ 0x80
      HAL_TIMEx_BreakCallback(htim);
 80073ec:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80073ee:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 80073f0:	f000 f8d9 	bl	80075a6 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 80073f4:	6823      	ldr	r3, [r4, #0]
 80073f6:	691a      	ldr	r2, [r3, #16]
 80073f8:	05d0      	lsls	r0, r2, #23
 80073fa:	d508      	bpl.n	800740e <HAL_TIM_IRQHandler+0xf6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80073fc:	68da      	ldr	r2, [r3, #12]
 80073fe:	0611      	lsls	r1, r2, #24
 8007400:	d505      	bpl.n	800740e <HAL_TIM_IRQHandler+0xf6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007402:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
 8007406:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007408:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 800740a:	f000 f8cd 	bl	80075a8 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800740e:	6823      	ldr	r3, [r4, #0]
 8007410:	691a      	ldr	r2, [r3, #16]
 8007412:	0652      	lsls	r2, r2, #25
 8007414:	d508      	bpl.n	8007428 <HAL_TIM_IRQHandler+0x110>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8007416:	68da      	ldr	r2, [r3, #12]
 8007418:	0650      	lsls	r0, r2, #25
 800741a:	d505      	bpl.n	8007428 <HAL_TIM_IRQHandler+0x110>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800741c:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
 8007420:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8007422:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8007424:	f7ff ff77 	bl	8007316 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8007428:	6823      	ldr	r3, [r4, #0]
 800742a:	691a      	ldr	r2, [r3, #16]
 800742c:	0691      	lsls	r1, r2, #26
 800742e:	d522      	bpl.n	8007476 <HAL_TIM_IRQHandler+0x15e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8007430:	68da      	ldr	r2, [r3, #12]
 8007432:	0692      	lsls	r2, r2, #26
 8007434:	d51f      	bpl.n	8007476 <HAL_TIM_IRQHandler+0x15e>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007436:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800743a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800743c:	611a      	str	r2, [r3, #16]
}
 800743e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8007442:	f000 b8af 	b.w	80075a4 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007446:	f7ff ff63 	bl	8007310 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800744a:	4620      	mov	r0, r4
 800744c:	f7ff ff62 	bl	8007314 <HAL_TIM_PWM_PulseFinishedCallback>
 8007450:	e776      	b.n	8007340 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007452:	f7ff ff5d 	bl	8007310 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007456:	4620      	mov	r0, r4
 8007458:	f7ff ff5c 	bl	8007314 <HAL_TIM_PWM_PulseFinishedCallback>
 800745c:	e785      	b.n	800736a <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800745e:	f7ff ff57 	bl	8007310 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007462:	4620      	mov	r0, r4
 8007464:	f7ff ff56 	bl	8007314 <HAL_TIM_PWM_PulseFinishedCallback>
 8007468:	e793      	b.n	8007392 <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800746a:	f7ff ff51 	bl	8007310 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800746e:	4620      	mov	r0, r4
 8007470:	f7ff ff50 	bl	8007314 <HAL_TIM_PWM_PulseFinishedCallback>
 8007474:	e7a2      	b.n	80073bc <HAL_TIM_IRQHandler+0xa4>
}
 8007476:	bd10      	pop	{r4, pc}

08007478 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007478:	4a30      	ldr	r2, [pc, #192]	@ (800753c <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800747a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800747c:	4290      	cmp	r0, r2
 800747e:	d012      	beq.n	80074a6 <TIM_Base_SetConfig+0x2e>
 8007480:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007484:	d00f      	beq.n	80074a6 <TIM_Base_SetConfig+0x2e>
 8007486:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800748a:	4290      	cmp	r0, r2
 800748c:	d00b      	beq.n	80074a6 <TIM_Base_SetConfig+0x2e>
 800748e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007492:	4290      	cmp	r0, r2
 8007494:	d007      	beq.n	80074a6 <TIM_Base_SetConfig+0x2e>
 8007496:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800749a:	4290      	cmp	r0, r2
 800749c:	d003      	beq.n	80074a6 <TIM_Base_SetConfig+0x2e>
 800749e:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80074a2:	4290      	cmp	r0, r2
 80074a4:	d119      	bne.n	80074da <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80074a6:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80074a8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 80074ac:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80074ae:	4a23      	ldr	r2, [pc, #140]	@ (800753c <TIM_Base_SetConfig+0xc4>)
 80074b0:	4290      	cmp	r0, r2
 80074b2:	d029      	beq.n	8007508 <TIM_Base_SetConfig+0x90>
 80074b4:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 80074b8:	d026      	beq.n	8007508 <TIM_Base_SetConfig+0x90>
 80074ba:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80074be:	4290      	cmp	r0, r2
 80074c0:	d022      	beq.n	8007508 <TIM_Base_SetConfig+0x90>
 80074c2:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80074c6:	4290      	cmp	r0, r2
 80074c8:	d01e      	beq.n	8007508 <TIM_Base_SetConfig+0x90>
 80074ca:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80074ce:	4290      	cmp	r0, r2
 80074d0:	d01a      	beq.n	8007508 <TIM_Base_SetConfig+0x90>
 80074d2:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80074d6:	4290      	cmp	r0, r2
 80074d8:	d016      	beq.n	8007508 <TIM_Base_SetConfig+0x90>
 80074da:	4a19      	ldr	r2, [pc, #100]	@ (8007540 <TIM_Base_SetConfig+0xc8>)
 80074dc:	4290      	cmp	r0, r2
 80074de:	d013      	beq.n	8007508 <TIM_Base_SetConfig+0x90>
 80074e0:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80074e4:	4290      	cmp	r0, r2
 80074e6:	d00f      	beq.n	8007508 <TIM_Base_SetConfig+0x90>
 80074e8:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80074ec:	4290      	cmp	r0, r2
 80074ee:	d00b      	beq.n	8007508 <TIM_Base_SetConfig+0x90>
 80074f0:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 80074f4:	4290      	cmp	r0, r2
 80074f6:	d007      	beq.n	8007508 <TIM_Base_SetConfig+0x90>
 80074f8:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80074fc:	4290      	cmp	r0, r2
 80074fe:	d003      	beq.n	8007508 <TIM_Base_SetConfig+0x90>
 8007500:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007504:	4290      	cmp	r0, r2
 8007506:	d103      	bne.n	8007510 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8007508:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800750c:	68ca      	ldr	r2, [r1, #12]
 800750e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007510:	694a      	ldr	r2, [r1, #20]
 8007512:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007516:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8007518:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800751a:	688b      	ldr	r3, [r1, #8]
 800751c:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800751e:	680b      	ldr	r3, [r1, #0]
 8007520:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007522:	4b06      	ldr	r3, [pc, #24]	@ (800753c <TIM_Base_SetConfig+0xc4>)
 8007524:	4298      	cmp	r0, r3
 8007526:	d003      	beq.n	8007530 <TIM_Base_SetConfig+0xb8>
 8007528:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800752c:	4298      	cmp	r0, r3
 800752e:	d101      	bne.n	8007534 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007530:	690b      	ldr	r3, [r1, #16]
 8007532:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007534:	2301      	movs	r3, #1
 8007536:	6143      	str	r3, [r0, #20]
}
 8007538:	4770      	bx	lr
 800753a:	bf00      	nop
 800753c:	40010000 	.word	0x40010000
 8007540:	40014000 	.word	0x40014000

08007544 <HAL_TIM_Base_Init>:
{
 8007544:	b510      	push	{r4, lr}
  if (htim == NULL)
 8007546:	4604      	mov	r4, r0
 8007548:	b350      	cbz	r0, 80075a0 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 800754a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800754e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8007552:	b91b      	cbnz	r3, 800755c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007554:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8007558:	f7ff fe9b 	bl	8007292 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800755c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800755e:	6820      	ldr	r0, [r4, #0]
 8007560:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 8007562:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007566:	f7ff ff87 	bl	8007478 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800756a:	2301      	movs	r3, #1
  return HAL_OK;
 800756c:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800756e:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007572:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8007576:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800757a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800757e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8007582:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8007586:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800758a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800758e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8007592:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 8007596:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 800759a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800759e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80075a0:	2001      	movs	r0, #1
 80075a2:	e7fc      	b.n	800759e <HAL_TIM_Base_Init+0x5a>

080075a4 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 80075a4:	4770      	bx	lr

080075a6 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 80075a6:	4770      	bx	lr

080075a8 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 80075a8:	4770      	bx	lr

080075aa <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80075aa:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80075ac:	e852 3f00 	ldrex	r3, [r2]
 80075b0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80075b4:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 80075b8:	6802      	ldr	r2, [r0, #0]
 80075ba:	2900      	cmp	r1, #0
 80075bc:	d1f5      	bne.n	80075aa <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80075be:	f102 0308 	add.w	r3, r2, #8
 80075c2:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80075c6:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80075ca:	f102 0c08 	add.w	ip, r2, #8
 80075ce:	e84c 3100 	strex	r1, r3, [ip]
 80075d2:	2900      	cmp	r1, #0
 80075d4:	d1f3      	bne.n	80075be <UART_EndRxTransfer+0x14>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80075d6:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 80075d8:	2b01      	cmp	r3, #1
 80075da:	d107      	bne.n	80075ec <UART_EndRxTransfer+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80075dc:	e852 3f00 	ldrex	r3, [r2]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80075e0:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80075e4:	e842 3100 	strex	r1, r3, [r2]
 80075e8:	2900      	cmp	r1, #0
 80075ea:	d1f7      	bne.n	80075dc <UART_EndRxTransfer+0x32>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80075ec:	2320      	movs	r3, #32
 80075ee:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80075f2:	2300      	movs	r3, #0
 80075f4:	6603      	str	r3, [r0, #96]	@ 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 80075f6:	6683      	str	r3, [r0, #104]	@ 0x68
}
 80075f8:	4770      	bx	lr

080075fa <HAL_UART_ErrorCallback>:
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
 80075fa:	4770      	bx	lr

080075fc <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 80075fc:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 80075fe:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->RxXferCount = 0U;
 8007600:	2300      	movs	r3, #0
 8007602:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
  huart->TxXferCount = 0U;
 8007606:	f8a0 3052 	strh.w	r3, [r0, #82]	@ 0x52
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 800760a:	f7ff fff6 	bl	80075fa <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 800760e:	bd08      	pop	{r3, pc}

08007610 <HAL_UARTEx_RxEventCallback>:
}
 8007610:	4770      	bx	lr
	...

08007614 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8007614:	6803      	ldr	r3, [r0, #0]
{
 8007616:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8007618:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
 800761a:	f640 060f 	movw	r6, #2063	@ 0x80f
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 800761e:	6819      	ldr	r1, [r3, #0]
{
 8007620:	4604      	mov	r4, r0
  if (errorflags == 0U)
 8007622:	4232      	tst	r2, r6
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8007624:	689d      	ldr	r5, [r3, #8]
  if (errorflags == 0U)
 8007626:	d10b      	bne.n	8007640 <HAL_UART_IRQHandler+0x2c>
    if (((isrflags & USART_ISR_RXNE) != 0U)
 8007628:	0696      	lsls	r6, r2, #26
 800762a:	f140 8088 	bpl.w	800773e <HAL_UART_IRQHandler+0x12a>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 800762e:	068d      	lsls	r5, r1, #26
 8007630:	f140 8085 	bpl.w	800773e <HAL_UART_IRQHandler+0x12a>
      if (huart->RxISR != NULL)
 8007634:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8007636:	2b00      	cmp	r3, #0
 8007638:	d07b      	beq.n	8007732 <HAL_UART_IRQHandler+0x11e>
}
 800763a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
 800763e:	4718      	bx	r3
      && (((cr3its & USART_CR3_EIE) != 0U)
 8007640:	f005 0001 	and.w	r0, r5, #1
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 8007644:	4d93      	ldr	r5, [pc, #588]	@ (8007894 <HAL_UART_IRQHandler+0x280>)
 8007646:	400d      	ands	r5, r1
 8007648:	4305      	orrs	r5, r0
 800764a:	d078      	beq.n	800773e <HAL_UART_IRQHandler+0x12a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 800764c:	07d6      	lsls	r6, r2, #31
 800764e:	d509      	bpl.n	8007664 <HAL_UART_IRQHandler+0x50>
 8007650:	05cd      	lsls	r5, r1, #23
 8007652:	d507      	bpl.n	8007664 <HAL_UART_IRQHandler+0x50>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8007654:	2501      	movs	r5, #1
 8007656:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8007658:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 800765c:	f045 0501 	orr.w	r5, r5, #1
 8007660:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8007664:	0796      	lsls	r6, r2, #30
 8007666:	d508      	bpl.n	800767a <HAL_UART_IRQHandler+0x66>
 8007668:	b138      	cbz	r0, 800767a <HAL_UART_IRQHandler+0x66>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 800766a:	2502      	movs	r5, #2
 800766c:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 800766e:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 8007672:	f045 0504 	orr.w	r5, r5, #4
 8007676:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 800767a:	0755      	lsls	r5, r2, #29
 800767c:	d508      	bpl.n	8007690 <HAL_UART_IRQHandler+0x7c>
 800767e:	b138      	cbz	r0, 8007690 <HAL_UART_IRQHandler+0x7c>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8007680:	2504      	movs	r5, #4
 8007682:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8007684:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 8007688:	f045 0502 	orr.w	r5, r5, #2
 800768c:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_ORE) != 0U)
 8007690:	0716      	lsls	r6, r2, #28
 8007692:	d50b      	bpl.n	80076ac <HAL_UART_IRQHandler+0x98>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8007694:	f001 0520 	and.w	r5, r1, #32
 8007698:	4305      	orrs	r5, r0
 800769a:	d007      	beq.n	80076ac <HAL_UART_IRQHandler+0x98>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 800769c:	2008      	movs	r0, #8
 800769e:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80076a0:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
 80076a4:	f040 0008 	orr.w	r0, r0, #8
 80076a8:	f8c4 0084 	str.w	r0, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 80076ac:	0515      	lsls	r5, r2, #20
 80076ae:	d50a      	bpl.n	80076c6 <HAL_UART_IRQHandler+0xb2>
 80076b0:	0148      	lsls	r0, r1, #5
 80076b2:	d508      	bpl.n	80076c6 <HAL_UART_IRQHandler+0xb2>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80076b4:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80076b8:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 80076ba:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 80076be:	f043 0320 	orr.w	r3, r3, #32
 80076c2:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80076c6:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 80076ca:	2b00      	cmp	r3, #0
 80076cc:	d031      	beq.n	8007732 <HAL_UART_IRQHandler+0x11e>
      if (((isrflags & USART_ISR_RXNE) != 0U)
 80076ce:	0692      	lsls	r2, r2, #26
 80076d0:	d505      	bpl.n	80076de <HAL_UART_IRQHandler+0xca>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 80076d2:	068b      	lsls	r3, r1, #26
 80076d4:	d503      	bpl.n	80076de <HAL_UART_IRQHandler+0xca>
        if (huart->RxISR != NULL)
 80076d6:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 80076d8:	b10b      	cbz	r3, 80076de <HAL_UART_IRQHandler+0xca>
          huart->RxISR(huart);
 80076da:	4620      	mov	r0, r4
 80076dc:	4798      	blx	r3
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80076de:	6826      	ldr	r6, [r4, #0]
        UART_EndRxTransfer(huart);
 80076e0:	4620      	mov	r0, r4
      errorcode = huart->ErrorCode;
 80076e2:	f8d4 2084 	ldr.w	r2, [r4, #132]	@ 0x84
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80076e6:	68b3      	ldr	r3, [r6, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 80076e8:	f002 0228 	and.w	r2, r2, #40	@ 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80076ec:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80076f0:	ea53 0502 	orrs.w	r5, r3, r2
 80076f4:	d01e      	beq.n	8007734 <HAL_UART_IRQHandler+0x120>
        UART_EndRxTransfer(huart);
 80076f6:	f7ff ff58 	bl	80075aa <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80076fa:	68b3      	ldr	r3, [r6, #8]
 80076fc:	065e      	lsls	r6, r3, #25
 80076fe:	d515      	bpl.n	800772c <HAL_UART_IRQHandler+0x118>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8007700:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007702:	f102 0308 	add.w	r3, r2, #8
 8007706:	e853 3f00 	ldrex	r3, [r3]
 800770a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800770e:	3208      	adds	r2, #8
 8007710:	e842 3100 	strex	r1, r3, [r2]
 8007714:	2900      	cmp	r1, #0
 8007716:	d1f3      	bne.n	8007700 <HAL_UART_IRQHandler+0xec>
          if (huart->hdmarx != NULL)
 8007718:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 800771a:	b138      	cbz	r0, 800772c <HAL_UART_IRQHandler+0x118>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 800771c:	4b5e      	ldr	r3, [pc, #376]	@ (8007898 <HAL_UART_IRQHandler+0x284>)
 800771e:	6503      	str	r3, [r0, #80]	@ 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8007720:	f7fd fceb 	bl	80050fa <HAL_DMA_Abort_IT>
 8007724:	b128      	cbz	r0, 8007732 <HAL_UART_IRQHandler+0x11e>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8007726:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8007728:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 800772a:	e786      	b.n	800763a <HAL_UART_IRQHandler+0x26>
            HAL_UART_ErrorCallback(huart);
 800772c:	4620      	mov	r0, r4
 800772e:	f7ff ff64 	bl	80075fa <HAL_UART_ErrorCallback>
}
 8007732:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_ErrorCallback(huart);
 8007734:	f7ff ff61 	bl	80075fa <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007738:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
 800773c:	e7f9      	b.n	8007732 <HAL_UART_IRQHandler+0x11e>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800773e:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8007740:	2801      	cmp	r0, #1
 8007742:	f040 8088 	bne.w	8007856 <HAL_UART_IRQHandler+0x242>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 8007746:	06d5      	lsls	r5, r2, #27
 8007748:	f140 8085 	bpl.w	8007856 <HAL_UART_IRQHandler+0x242>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 800774c:	06c8      	lsls	r0, r1, #27
 800774e:	f140 8082 	bpl.w	8007856 <HAL_UART_IRQHandler+0x242>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8007752:	2210      	movs	r2, #16
 8007754:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007756:	689a      	ldr	r2, [r3, #8]
 8007758:	0652      	lsls	r2, r2, #25
 800775a:	d54a      	bpl.n	80077f2 <HAL_UART_IRQHandler+0x1de>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 800775c:	6f61      	ldr	r1, [r4, #116]	@ 0x74
 800775e:	680a      	ldr	r2, [r1, #0]
 8007760:	6852      	ldr	r2, [r2, #4]
 8007762:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
 8007764:	2a00      	cmp	r2, #0
 8007766:	d0e4      	beq.n	8007732 <HAL_UART_IRQHandler+0x11e>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8007768:	f8b4 0058 	ldrh.w	r0, [r4, #88]	@ 0x58
 800776c:	4290      	cmp	r0, r2
 800776e:	d9e0      	bls.n	8007732 <HAL_UART_IRQHandler+0x11e>
        huart->RxXferCount = nb_remaining_rx_data;
 8007770:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8007774:	69ca      	ldr	r2, [r1, #28]
 8007776:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 800777a:	d02e      	beq.n	80077da <HAL_UART_IRQHandler+0x1c6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800777c:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8007780:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007784:	e843 2100 	strex	r1, r2, [r3]
 8007788:	2900      	cmp	r1, #0
 800778a:	d1f7      	bne.n	800777c <HAL_UART_IRQHandler+0x168>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800778c:	f103 0208 	add.w	r2, r3, #8
 8007790:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007794:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007798:	f103 0008 	add.w	r0, r3, #8
 800779c:	e840 2100 	strex	r1, r2, [r0]
 80077a0:	2900      	cmp	r1, #0
 80077a2:	d1f3      	bne.n	800778c <HAL_UART_IRQHandler+0x178>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80077a4:	f103 0208 	add.w	r2, r3, #8
 80077a8:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80077ac:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80077b0:	f103 0008 	add.w	r0, r3, #8
 80077b4:	e840 2100 	strex	r1, r2, [r0]
 80077b8:	2900      	cmp	r1, #0
 80077ba:	d1f3      	bne.n	80077a4 <HAL_UART_IRQHandler+0x190>
          huart->RxState = HAL_UART_STATE_READY;
 80077bc:	2220      	movs	r2, #32
 80077be:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80077c2:	6621      	str	r1, [r4, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80077c4:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80077c8:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80077cc:	e843 2100 	strex	r1, r2, [r3]
 80077d0:	2900      	cmp	r1, #0
 80077d2:	d1f7      	bne.n	80077c4 <HAL_UART_IRQHandler+0x1b0>
          (void)HAL_DMA_Abort(huart->hdmarx);
 80077d4:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 80077d6:	f7fd fc52 	bl	800507e <HAL_DMA_Abort>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 80077da:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 80077dc:	f8b4 1058 	ldrh.w	r1, [r4, #88]	@ 0x58
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 80077e0:	6663      	str	r3, [r4, #100]	@ 0x64
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 80077e2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 80077e6:	1ac9      	subs	r1, r1, r3
 80077e8:	b289      	uxth	r1, r1
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 80077ea:	4620      	mov	r0, r4
 80077ec:	f7ff ff10 	bl	8007610 <HAL_UARTEx_RxEventCallback>
 80077f0:	e79f      	b.n	8007732 <HAL_UART_IRQHandler+0x11e>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 80077f2:	f8b4 205a 	ldrh.w	r2, [r4, #90]	@ 0x5a
      if ((huart->RxXferCount > 0U)
 80077f6:	f8b4 005a 	ldrh.w	r0, [r4, #90]	@ 0x5a
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 80077fa:	f8b4 1058 	ldrh.w	r1, [r4, #88]	@ 0x58
 80077fe:	b292      	uxth	r2, r2
      if ((huart->RxXferCount > 0U)
 8007800:	b280      	uxth	r0, r0
 8007802:	2800      	cmp	r0, #0
 8007804:	d095      	beq.n	8007732 <HAL_UART_IRQHandler+0x11e>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8007806:	1a89      	subs	r1, r1, r2
 8007808:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
 800780a:	2900      	cmp	r1, #0
 800780c:	d091      	beq.n	8007732 <HAL_UART_IRQHandler+0x11e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800780e:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8007812:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007816:	e843 2000 	strex	r0, r2, [r3]
 800781a:	2800      	cmp	r0, #0
 800781c:	d1f7      	bne.n	800780e <HAL_UART_IRQHandler+0x1fa>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800781e:	f103 0208 	add.w	r2, r3, #8
 8007822:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007826:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800782a:	f103 0508 	add.w	r5, r3, #8
 800782e:	e845 2000 	strex	r0, r2, [r5]
 8007832:	2800      	cmp	r0, #0
 8007834:	d1f3      	bne.n	800781e <HAL_UART_IRQHandler+0x20a>
        huart->RxState = HAL_UART_STATE_READY;
 8007836:	2220      	movs	r2, #32
        huart->RxISR = NULL;
 8007838:	66a0      	str	r0, [r4, #104]	@ 0x68
        huart->RxState = HAL_UART_STATE_READY;
 800783a:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800783e:	6620      	str	r0, [r4, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007840:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8007844:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007848:	e843 2000 	strex	r0, r2, [r3]
 800784c:	2800      	cmp	r0, #0
 800784e:	d1f7      	bne.n	8007840 <HAL_UART_IRQHandler+0x22c>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8007850:	2302      	movs	r3, #2
 8007852:	6663      	str	r3, [r4, #100]	@ 0x64
 8007854:	e7c9      	b.n	80077ea <HAL_UART_IRQHandler+0x1d6>
  if (((isrflags & USART_ISR_TXE) != 0U)
 8007856:	0616      	lsls	r6, r2, #24
 8007858:	d507      	bpl.n	800786a <HAL_UART_IRQHandler+0x256>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 800785a:	060d      	lsls	r5, r1, #24
 800785c:	d505      	bpl.n	800786a <HAL_UART_IRQHandler+0x256>
    if (huart->TxISR != NULL)
 800785e:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 8007860:	2b00      	cmp	r3, #0
 8007862:	f43f af66 	beq.w	8007732 <HAL_UART_IRQHandler+0x11e>
      huart->TxISR(huart);
 8007866:	4620      	mov	r0, r4
 8007868:	e6e7      	b.n	800763a <HAL_UART_IRQHandler+0x26>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 800786a:	0650      	lsls	r0, r2, #25
 800786c:	f57f af61 	bpl.w	8007732 <HAL_UART_IRQHandler+0x11e>
 8007870:	064a      	lsls	r2, r1, #25
 8007872:	f57f af5e 	bpl.w	8007732 <HAL_UART_IRQHandler+0x11e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007876:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 800787a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800787e:	e843 2100 	strex	r1, r2, [r3]
 8007882:	2900      	cmp	r1, #0
 8007884:	d1f7      	bne.n	8007876 <HAL_UART_IRQHandler+0x262>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8007886:	2320      	movs	r3, #32
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 8007888:	4620      	mov	r0, r4
  huart->TxISR = NULL;
 800788a:	66e1      	str	r1, [r4, #108]	@ 0x6c
  huart->gState = HAL_UART_STATE_READY;
 800788c:	67e3      	str	r3, [r4, #124]	@ 0x7c
  HAL_UART_TxCpltCallback(huart);
 800788e:	f7f9 f99f 	bl	8000bd0 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8007892:	e74e      	b.n	8007732 <HAL_UART_IRQHandler+0x11e>
 8007894:	04000120 	.word	0x04000120
 8007898:	080075fd 	.word	0x080075fd

0800789c <UART_RxISR_8BIT>:
{
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800789c:	f8d0 2080 	ldr.w	r2, [r0, #128]	@ 0x80
  uint16_t uhMask = huart->Mask;
 80078a0:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80078a4:	2a22      	cmp	r2, #34	@ 0x22
{
 80078a6:	b508      	push	{r3, lr}
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80078a8:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80078aa:	d143      	bne.n	8007934 <UART_RxISR_8BIT+0x98>
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80078ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 80078ae:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 80078b0:	400b      	ands	r3, r1
 80078b2:	7013      	strb	r3, [r2, #0]
    huart->pRxBuffPtr++;
 80078b4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80078b6:	3301      	adds	r3, #1
 80078b8:	6543      	str	r3, [r0, #84]	@ 0x54
    huart->RxXferCount--;
 80078ba:	f8b0 305a 	ldrh.w	r3, [r0, #90]	@ 0x5a
 80078be:	3b01      	subs	r3, #1
 80078c0:	b29b      	uxth	r3, r3
 80078c2:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a

    if (huart->RxXferCount == 0U)
 80078c6:	f8b0 305a 	ldrh.w	r3, [r0, #90]	@ 0x5a
 80078ca:	b29b      	uxth	r3, r3
 80078cc:	bb73      	cbnz	r3, 800792c <UART_RxISR_8BIT+0x90>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80078ce:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80078d0:	e852 3f00 	ldrex	r3, [r2]
 80078d4:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80078d8:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 80078dc:	6803      	ldr	r3, [r0, #0]
 80078de:	2900      	cmp	r1, #0
 80078e0:	d1f5      	bne.n	80078ce <UART_RxISR_8BIT+0x32>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80078e2:	f103 0208 	add.w	r2, r3, #8
 80078e6:	e852 1f00 	ldrex	r1, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80078ea:	f021 0101 	bic.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80078ee:	4694      	mov	ip, r2
 80078f0:	e84c 1200 	strex	r2, r1, [ip]
 80078f4:	2a00      	cmp	r2, #0
 80078f6:	d1f4      	bne.n	80078e2 <UART_RxISR_8BIT+0x46>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 80078f8:	2120      	movs	r1, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 80078fa:	6682      	str	r2, [r0, #104]	@ 0x68
      huart->RxState = HAL_UART_STATE_READY;
 80078fc:	f8c0 1080 	str.w	r1, [r0, #128]	@ 0x80

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8007900:	6642      	str	r2, [r0, #100]	@ 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8007902:	6e01      	ldr	r1, [r0, #96]	@ 0x60
 8007904:	2901      	cmp	r1, #1
 8007906:	d112      	bne.n	800792e <UART_RxISR_8BIT+0x92>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007908:	6602      	str	r2, [r0, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800790a:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800790e:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007912:	e843 2100 	strex	r1, r2, [r3]
 8007916:	2900      	cmp	r1, #0
 8007918:	d1f7      	bne.n	800790a <UART_RxISR_8BIT+0x6e>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 800791a:	69da      	ldr	r2, [r3, #28]
 800791c:	06d2      	lsls	r2, r2, #27
 800791e:	d501      	bpl.n	8007924 <UART_RxISR_8BIT+0x88>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8007920:	2210      	movs	r2, #16
 8007922:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8007924:	f8b0 1058 	ldrh.w	r1, [r0, #88]	@ 0x58
 8007928:	f7ff fe72 	bl	8007610 <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 800792c:	bd08      	pop	{r3, pc}
        HAL_UART_RxCpltCallback(huart);
 800792e:	f7f9 f961 	bl	8000bf4 <HAL_UART_RxCpltCallback>
 8007932:	e7fb      	b.n	800792c <UART_RxISR_8BIT+0x90>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8007934:	699a      	ldr	r2, [r3, #24]
 8007936:	f042 0208 	orr.w	r2, r2, #8
 800793a:	619a      	str	r2, [r3, #24]
}
 800793c:	e7f6      	b.n	800792c <UART_RxISR_8BIT+0x90>

0800793e <UART_RxISR_16BIT>:
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800793e:	f8d0 2080 	ldr.w	r2, [r0, #128]	@ 0x80
  uint16_t uhMask = huart->Mask;
 8007942:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8007946:	2a22      	cmp	r2, #34	@ 0x22
{
 8007948:	b508      	push	{r3, lr}
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 800794a:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800794c:	d140      	bne.n	80079d0 <UART_RxISR_16BIT+0x92>
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 800794e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
    tmp = (uint16_t *) huart->pRxBuffPtr ;
    *tmp = (uint16_t)(uhdata & uhMask);
 8007950:	4011      	ands	r1, r2
 8007952:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 8007954:	f822 1b02 	strh.w	r1, [r2], #2
    huart->pRxBuffPtr += 2U;
 8007958:	6542      	str	r2, [r0, #84]	@ 0x54
    huart->RxXferCount--;
 800795a:	f8b0 205a 	ldrh.w	r2, [r0, #90]	@ 0x5a
 800795e:	3a01      	subs	r2, #1
 8007960:	b292      	uxth	r2, r2
 8007962:	f8a0 205a 	strh.w	r2, [r0, #90]	@ 0x5a

    if (huart->RxXferCount == 0U)
 8007966:	f8b0 205a 	ldrh.w	r2, [r0, #90]	@ 0x5a
 800796a:	b292      	uxth	r2, r2
 800796c:	bb62      	cbnz	r2, 80079c8 <UART_RxISR_16BIT+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800796e:	e853 2f00 	ldrex	r2, [r3]
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8007972:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007976:	e843 2100 	strex	r1, r2, [r3]
 800797a:	2900      	cmp	r1, #0
 800797c:	d1f7      	bne.n	800796e <UART_RxISR_16BIT+0x30>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800797e:	f103 0208 	add.w	r2, r3, #8
 8007982:	e852 1f00 	ldrex	r1, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007986:	f021 0101 	bic.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800798a:	4694      	mov	ip, r2
 800798c:	e84c 1200 	strex	r2, r1, [ip]
 8007990:	2a00      	cmp	r2, #0
 8007992:	d1f4      	bne.n	800797e <UART_RxISR_16BIT+0x40>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8007994:	2120      	movs	r1, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 8007996:	6682      	str	r2, [r0, #104]	@ 0x68
      huart->RxState = HAL_UART_STATE_READY;
 8007998:	f8c0 1080 	str.w	r1, [r0, #128]	@ 0x80

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 800799c:	6642      	str	r2, [r0, #100]	@ 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800799e:	6e01      	ldr	r1, [r0, #96]	@ 0x60
 80079a0:	2901      	cmp	r1, #1
 80079a2:	d112      	bne.n	80079ca <UART_RxISR_16BIT+0x8c>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80079a4:	6602      	str	r2, [r0, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80079a6:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80079aa:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80079ae:	e843 2100 	strex	r1, r2, [r3]
 80079b2:	2900      	cmp	r1, #0
 80079b4:	d1f7      	bne.n	80079a6 <UART_RxISR_16BIT+0x68>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 80079b6:	69da      	ldr	r2, [r3, #28]
 80079b8:	06d2      	lsls	r2, r2, #27
 80079ba:	d501      	bpl.n	80079c0 <UART_RxISR_16BIT+0x82>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 80079bc:	2210      	movs	r2, #16
 80079be:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 80079c0:	f8b0 1058 	ldrh.w	r1, [r0, #88]	@ 0x58
 80079c4:	f7ff fe24 	bl	8007610 <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 80079c8:	bd08      	pop	{r3, pc}
        HAL_UART_RxCpltCallback(huart);
 80079ca:	f7f9 f913 	bl	8000bf4 <HAL_UART_RxCpltCallback>
 80079ce:	e7fb      	b.n	80079c8 <UART_RxISR_16BIT+0x8a>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 80079d0:	699a      	ldr	r2, [r3, #24]
 80079d2:	f042 0208 	orr.w	r2, r2, #8
 80079d6:	619a      	str	r2, [r3, #24]
}
 80079d8:	e7f6      	b.n	80079c8 <UART_RxISR_16BIT+0x8a>
	...

080079dc <UART_SetConfig>:
{
 80079dc:	b538      	push	{r3, r4, r5, lr}
 80079de:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80079e0:	69c0      	ldr	r0, [r0, #28]
 80079e2:	6921      	ldr	r1, [r4, #16]
 80079e4:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80079e6:	6823      	ldr	r3, [r4, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80079e8:	430a      	orrs	r2, r1
 80079ea:	6961      	ldr	r1, [r4, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80079ec:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80079ee:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80079f0:	497d      	ldr	r1, [pc, #500]	@ (8007be8 <UART_SetConfig+0x20c>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80079f2:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80079f4:	4029      	ands	r1, r5
  tmpreg |= huart->Init.OneBitSampling;
 80079f6:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80079f8:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80079fa:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80079fc:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80079fe:	685a      	ldr	r2, [r3, #4]
 8007a00:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8007a04:	430a      	orrs	r2, r1
 8007a06:	605a      	str	r2, [r3, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8007a08:	69a2      	ldr	r2, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8007a0a:	6899      	ldr	r1, [r3, #8]
  tmpreg |= huart->Init.OneBitSampling;
 8007a0c:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8007a0e:	f421 6130 	bic.w	r1, r1, #2816	@ 0xb00
 8007a12:	430a      	orrs	r2, r1
 8007a14:	609a      	str	r2, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8007a16:	4a75      	ldr	r2, [pc, #468]	@ (8007bec <UART_SetConfig+0x210>)
 8007a18:	4293      	cmp	r3, r2
 8007a1a:	d113      	bne.n	8007a44 <UART_SetConfig+0x68>
 8007a1c:	4b74      	ldr	r3, [pc, #464]	@ (8007bf0 <UART_SetConfig+0x214>)
 8007a1e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007a22:	f003 0303 	and.w	r3, r3, #3
 8007a26:	2b02      	cmp	r3, #2
 8007a28:	f000 80a8 	beq.w	8007b7c <UART_SetConfig+0x1a0>
 8007a2c:	2b03      	cmp	r3, #3
 8007a2e:	d021      	beq.n	8007a74 <UART_SetConfig+0x98>
 8007a30:	2b01      	cmp	r3, #1
 8007a32:	f040 80bd 	bne.w	8007bb0 <UART_SetConfig+0x1d4>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007a36:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8007a3a:	f040 809c 	bne.w	8007b76 <UART_SetConfig+0x19a>
        pclk = HAL_RCC_GetSysClockFreq();
 8007a3e:	f7ff f83d 	bl	8006abc <HAL_RCC_GetSysClockFreq>
        break;
 8007a42:	e092      	b.n	8007b6a <UART_SetConfig+0x18e>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8007a44:	4a6b      	ldr	r2, [pc, #428]	@ (8007bf4 <UART_SetConfig+0x218>)
 8007a46:	4293      	cmp	r3, r2
 8007a48:	d11b      	bne.n	8007a82 <UART_SetConfig+0xa6>
 8007a4a:	4b69      	ldr	r3, [pc, #420]	@ (8007bf0 <UART_SetConfig+0x214>)
 8007a4c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007a50:	f003 030c 	and.w	r3, r3, #12
 8007a54:	2b08      	cmp	r3, #8
 8007a56:	f000 8091 	beq.w	8007b7c <UART_SetConfig+0x1a0>
 8007a5a:	d809      	bhi.n	8007a70 <UART_SetConfig+0x94>
 8007a5c:	2b00      	cmp	r3, #0
 8007a5e:	f000 80ad 	beq.w	8007bbc <UART_SetConfig+0x1e0>
 8007a62:	2b04      	cmp	r3, #4
 8007a64:	d0e7      	beq.n	8007a36 <UART_SetConfig+0x5a>
        ret = HAL_ERROR;
 8007a66:	2001      	movs	r0, #1
  huart->RxISR = NULL;
 8007a68:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 8007a6a:	e9c4 331a 	strd	r3, r3, [r4, #104]	@ 0x68
}
 8007a6e:	bd38      	pop	{r3, r4, r5, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 8007a70:	2b0c      	cmp	r3, #12
 8007a72:	d1f8      	bne.n	8007a66 <UART_SetConfig+0x8a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007a74:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8007a78:	f000 8084 	beq.w	8007b84 <UART_SetConfig+0x1a8>
        pclk = (uint32_t) LSE_VALUE;
 8007a7c:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 8007a80:	e0a3      	b.n	8007bca <UART_SetConfig+0x1ee>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8007a82:	4a5d      	ldr	r2, [pc, #372]	@ (8007bf8 <UART_SetConfig+0x21c>)
 8007a84:	4293      	cmp	r3, r2
 8007a86:	d10e      	bne.n	8007aa6 <UART_SetConfig+0xca>
 8007a88:	4b59      	ldr	r3, [pc, #356]	@ (8007bf0 <UART_SetConfig+0x214>)
 8007a8a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007a8e:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8007a92:	2b20      	cmp	r3, #32
 8007a94:	d072      	beq.n	8007b7c <UART_SetConfig+0x1a0>
 8007a96:	d804      	bhi.n	8007aa2 <UART_SetConfig+0xc6>
 8007a98:	2b00      	cmp	r3, #0
 8007a9a:	f000 808f 	beq.w	8007bbc <UART_SetConfig+0x1e0>
 8007a9e:	2b10      	cmp	r3, #16
 8007aa0:	e7e0      	b.n	8007a64 <UART_SetConfig+0x88>
 8007aa2:	2b30      	cmp	r3, #48	@ 0x30
 8007aa4:	e7e5      	b.n	8007a72 <UART_SetConfig+0x96>
 8007aa6:	4a55      	ldr	r2, [pc, #340]	@ (8007bfc <UART_SetConfig+0x220>)
 8007aa8:	4293      	cmp	r3, r2
 8007aaa:	d10d      	bne.n	8007ac8 <UART_SetConfig+0xec>
 8007aac:	4b50      	ldr	r3, [pc, #320]	@ (8007bf0 <UART_SetConfig+0x214>)
 8007aae:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007ab2:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 8007ab6:	2b80      	cmp	r3, #128	@ 0x80
 8007ab8:	d060      	beq.n	8007b7c <UART_SetConfig+0x1a0>
 8007aba:	d803      	bhi.n	8007ac4 <UART_SetConfig+0xe8>
 8007abc:	2b00      	cmp	r3, #0
 8007abe:	d07d      	beq.n	8007bbc <UART_SetConfig+0x1e0>
 8007ac0:	2b40      	cmp	r3, #64	@ 0x40
 8007ac2:	e7cf      	b.n	8007a64 <UART_SetConfig+0x88>
 8007ac4:	2bc0      	cmp	r3, #192	@ 0xc0
 8007ac6:	e7d4      	b.n	8007a72 <UART_SetConfig+0x96>
 8007ac8:	4a4d      	ldr	r2, [pc, #308]	@ (8007c00 <UART_SetConfig+0x224>)
 8007aca:	4293      	cmp	r3, r2
 8007acc:	d110      	bne.n	8007af0 <UART_SetConfig+0x114>
 8007ace:	4b48      	ldr	r3, [pc, #288]	@ (8007bf0 <UART_SetConfig+0x214>)
 8007ad0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007ad4:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007ad8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8007adc:	d04e      	beq.n	8007b7c <UART_SetConfig+0x1a0>
 8007ade:	d804      	bhi.n	8007aea <UART_SetConfig+0x10e>
 8007ae0:	2b00      	cmp	r3, #0
 8007ae2:	d06b      	beq.n	8007bbc <UART_SetConfig+0x1e0>
 8007ae4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8007ae8:	e7bc      	b.n	8007a64 <UART_SetConfig+0x88>
 8007aea:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8007aee:	e7c0      	b.n	8007a72 <UART_SetConfig+0x96>
 8007af0:	4a44      	ldr	r2, [pc, #272]	@ (8007c04 <UART_SetConfig+0x228>)
 8007af2:	4293      	cmp	r3, r2
 8007af4:	d110      	bne.n	8007b18 <UART_SetConfig+0x13c>
 8007af6:	4b3e      	ldr	r3, [pc, #248]	@ (8007bf0 <UART_SetConfig+0x214>)
 8007af8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007afc:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8007b00:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8007b04:	d03a      	beq.n	8007b7c <UART_SetConfig+0x1a0>
 8007b06:	d804      	bhi.n	8007b12 <UART_SetConfig+0x136>
 8007b08:	2b00      	cmp	r3, #0
 8007b0a:	d051      	beq.n	8007bb0 <UART_SetConfig+0x1d4>
 8007b0c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007b10:	e7a8      	b.n	8007a64 <UART_SetConfig+0x88>
 8007b12:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8007b16:	e7ac      	b.n	8007a72 <UART_SetConfig+0x96>
 8007b18:	4a3b      	ldr	r2, [pc, #236]	@ (8007c08 <UART_SetConfig+0x22c>)
 8007b1a:	4293      	cmp	r3, r2
 8007b1c:	d110      	bne.n	8007b40 <UART_SetConfig+0x164>
 8007b1e:	4b34      	ldr	r3, [pc, #208]	@ (8007bf0 <UART_SetConfig+0x214>)
 8007b20:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007b24:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 8007b28:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007b2c:	d026      	beq.n	8007b7c <UART_SetConfig+0x1a0>
 8007b2e:	d804      	bhi.n	8007b3a <UART_SetConfig+0x15e>
 8007b30:	2b00      	cmp	r3, #0
 8007b32:	d043      	beq.n	8007bbc <UART_SetConfig+0x1e0>
 8007b34:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007b38:	e794      	b.n	8007a64 <UART_SetConfig+0x88>
 8007b3a:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8007b3e:	e798      	b.n	8007a72 <UART_SetConfig+0x96>
 8007b40:	4a32      	ldr	r2, [pc, #200]	@ (8007c0c <UART_SetConfig+0x230>)
 8007b42:	4293      	cmp	r3, r2
 8007b44:	d18f      	bne.n	8007a66 <UART_SetConfig+0x8a>
 8007b46:	4b2a      	ldr	r3, [pc, #168]	@ (8007bf0 <UART_SetConfig+0x214>)
 8007b48:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007b4c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8007b50:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007b54:	d012      	beq.n	8007b7c <UART_SetConfig+0x1a0>
 8007b56:	d803      	bhi.n	8007b60 <UART_SetConfig+0x184>
 8007b58:	b383      	cbz	r3, 8007bbc <UART_SetConfig+0x1e0>
 8007b5a:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8007b5e:	e781      	b.n	8007a64 <UART_SetConfig+0x88>
 8007b60:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 8007b64:	e785      	b.n	8007a72 <UART_SetConfig+0x96>
        pclk = HAL_RCC_GetPCLK1Freq();
 8007b66:	f7ff f875 	bl	8006c54 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 8007b6a:	b958      	cbnz	r0, 8007b84 <UART_SetConfig+0x1a8>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007b6c:	2000      	movs	r0, #0
 8007b6e:	e77b      	b.n	8007a68 <UART_SetConfig+0x8c>
        pclk = HAL_RCC_GetPCLK2Freq();
 8007b70:	f7ff f880 	bl	8006c74 <HAL_RCC_GetPCLK2Freq>
        break;
 8007b74:	e027      	b.n	8007bc6 <UART_SetConfig+0x1ea>
        pclk = HAL_RCC_GetSysClockFreq();
 8007b76:	f7fe ffa1 	bl	8006abc <HAL_RCC_GetSysClockFreq>
        break;
 8007b7a:	e024      	b.n	8007bc6 <UART_SetConfig+0x1ea>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007b7c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) HSI_VALUE;
 8007b80:	4823      	ldr	r0, [pc, #140]	@ (8007c10 <UART_SetConfig+0x234>)
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007b82:	d122      	bne.n	8007bca <UART_SetConfig+0x1ee>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8007b84:	6862      	ldr	r2, [r4, #4]
 8007b86:	0853      	lsrs	r3, r2, #1
 8007b88:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8007b8c:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8007b90:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 8007b94:	f1a3 0110 	sub.w	r1, r3, #16
 8007b98:	4291      	cmp	r1, r2
 8007b9a:	f63f af64 	bhi.w	8007a66 <UART_SetConfig+0x8a>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8007b9e:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8007ba2:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
 8007ba6:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8007ba8:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
 8007baa:	4313      	orrs	r3, r2
 8007bac:	60cb      	str	r3, [r1, #12]
 8007bae:	e7dd      	b.n	8007b6c <UART_SetConfig+0x190>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007bb0:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8007bb4:	d1dc      	bne.n	8007b70 <UART_SetConfig+0x194>
        pclk = HAL_RCC_GetPCLK2Freq();
 8007bb6:	f7ff f85d 	bl	8006c74 <HAL_RCC_GetPCLK2Freq>
        break;
 8007bba:	e7d6      	b.n	8007b6a <UART_SetConfig+0x18e>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007bbc:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8007bc0:	d0d1      	beq.n	8007b66 <UART_SetConfig+0x18a>
        pclk = HAL_RCC_GetPCLK1Freq();
 8007bc2:	f7ff f847 	bl	8006c54 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 8007bc6:	2800      	cmp	r0, #0
 8007bc8:	d0d0      	beq.n	8007b6c <UART_SetConfig+0x190>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8007bca:	6862      	ldr	r2, [r4, #4]
 8007bcc:	eb00 0352 	add.w	r3, r0, r2, lsr #1
 8007bd0:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8007bd4:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 8007bd8:	f1a3 0110 	sub.w	r1, r3, #16
 8007bdc:	4291      	cmp	r1, r2
 8007bde:	f63f af42 	bhi.w	8007a66 <UART_SetConfig+0x8a>
        huart->Instance->BRR = (uint16_t)usartdiv;
 8007be2:	6822      	ldr	r2, [r4, #0]
 8007be4:	60d3      	str	r3, [r2, #12]
 8007be6:	e7c1      	b.n	8007b6c <UART_SetConfig+0x190>
 8007be8:	efff69f3 	.word	0xefff69f3
 8007bec:	40011000 	.word	0x40011000
 8007bf0:	40023800 	.word	0x40023800
 8007bf4:	40004400 	.word	0x40004400
 8007bf8:	40004800 	.word	0x40004800
 8007bfc:	40004c00 	.word	0x40004c00
 8007c00:	40005000 	.word	0x40005000
 8007c04:	40011400 	.word	0x40011400
 8007c08:	40007800 	.word	0x40007800
 8007c0c:	40007c00 	.word	0x40007c00
 8007c10:	00f42400 	.word	0x00f42400

08007c14 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8007c14:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8007c16:	07da      	lsls	r2, r3, #31
{
 8007c18:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8007c1a:	d506      	bpl.n	8007c2a <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8007c1c:	6801      	ldr	r1, [r0, #0]
 8007c1e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8007c20:	684a      	ldr	r2, [r1, #4]
 8007c22:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
 8007c26:	4322      	orrs	r2, r4
 8007c28:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8007c2a:	079c      	lsls	r4, r3, #30
 8007c2c:	d506      	bpl.n	8007c3c <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8007c2e:	6801      	ldr	r1, [r0, #0]
 8007c30:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 8007c32:	684a      	ldr	r2, [r1, #4]
 8007c34:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8007c38:	4322      	orrs	r2, r4
 8007c3a:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8007c3c:	0759      	lsls	r1, r3, #29
 8007c3e:	d506      	bpl.n	8007c4e <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8007c40:	6801      	ldr	r1, [r0, #0]
 8007c42:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 8007c44:	684a      	ldr	r2, [r1, #4]
 8007c46:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8007c4a:	4322      	orrs	r2, r4
 8007c4c:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8007c4e:	071a      	lsls	r2, r3, #28
 8007c50:	d506      	bpl.n	8007c60 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8007c52:	6801      	ldr	r1, [r0, #0]
 8007c54:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 8007c56:	684a      	ldr	r2, [r1, #4]
 8007c58:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8007c5c:	4322      	orrs	r2, r4
 8007c5e:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8007c60:	06dc      	lsls	r4, r3, #27
 8007c62:	d506      	bpl.n	8007c72 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8007c64:	6801      	ldr	r1, [r0, #0]
 8007c66:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8007c68:	688a      	ldr	r2, [r1, #8]
 8007c6a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8007c6e:	4322      	orrs	r2, r4
 8007c70:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8007c72:	0699      	lsls	r1, r3, #26
 8007c74:	d506      	bpl.n	8007c84 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8007c76:	6801      	ldr	r1, [r0, #0]
 8007c78:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8007c7a:	688a      	ldr	r2, [r1, #8]
 8007c7c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8007c80:	4322      	orrs	r2, r4
 8007c82:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8007c84:	065a      	lsls	r2, r3, #25
 8007c86:	d510      	bpl.n	8007caa <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8007c88:	6801      	ldr	r1, [r0, #0]
 8007c8a:	6c04      	ldr	r4, [r0, #64]	@ 0x40
 8007c8c:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8007c8e:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8007c92:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 8007c96:	ea42 0204 	orr.w	r2, r2, r4
 8007c9a:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8007c9c:	d105      	bne.n	8007caa <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8007c9e:	684a      	ldr	r2, [r1, #4]
 8007ca0:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 8007ca2:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
 8007ca6:	4322      	orrs	r2, r4
 8007ca8:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8007caa:	061b      	lsls	r3, r3, #24
 8007cac:	d506      	bpl.n	8007cbc <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8007cae:	6802      	ldr	r2, [r0, #0]
 8007cb0:	6c81      	ldr	r1, [r0, #72]	@ 0x48
 8007cb2:	6853      	ldr	r3, [r2, #4]
 8007cb4:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 8007cb8:	430b      	orrs	r3, r1
 8007cba:	6053      	str	r3, [r2, #4]
}
 8007cbc:	bd10      	pop	{r4, pc}

08007cbe <UART_WaitOnFlagUntilTimeout>:
{
 8007cbe:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007cc2:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007cc6:	4605      	mov	r5, r0
 8007cc8:	460f      	mov	r7, r1
 8007cca:	4616      	mov	r6, r2
 8007ccc:	4698      	mov	r8, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8007cce:	682a      	ldr	r2, [r5, #0]
 8007cd0:	69d3      	ldr	r3, [r2, #28]
 8007cd2:	ea37 0303 	bics.w	r3, r7, r3
 8007cd6:	bf0c      	ite	eq
 8007cd8:	2301      	moveq	r3, #1
 8007cda:	2300      	movne	r3, #0
 8007cdc:	42b3      	cmp	r3, r6
 8007cde:	d001      	beq.n	8007ce4 <UART_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
 8007ce0:	2000      	movs	r0, #0
 8007ce2:	e028      	b.n	8007d36 <UART_WaitOnFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
 8007ce4:	f1b9 3fff 	cmp.w	r9, #4294967295
 8007ce8:	d0f2      	beq.n	8007cd0 <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007cea:	f7fd f8a3 	bl	8004e34 <HAL_GetTick>
 8007cee:	eba0 0008 	sub.w	r0, r0, r8
 8007cf2:	682c      	ldr	r4, [r5, #0]
 8007cf4:	4548      	cmp	r0, r9
 8007cf6:	d802      	bhi.n	8007cfe <UART_WaitOnFlagUntilTimeout+0x40>
 8007cf8:	f1b9 0f00 	cmp.w	r9, #0
 8007cfc:	d11d      	bne.n	8007d3a <UART_WaitOnFlagUntilTimeout+0x7c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007cfe:	e854 3f00 	ldrex	r3, [r4]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8007d02:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007d06:	e844 3200 	strex	r2, r3, [r4]
 8007d0a:	2a00      	cmp	r2, #0
 8007d0c:	d1f7      	bne.n	8007cfe <UART_WaitOnFlagUntilTimeout+0x40>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007d0e:	f104 0308 	add.w	r3, r4, #8
 8007d12:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007d16:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007d1a:	f104 0108 	add.w	r1, r4, #8
 8007d1e:	e841 3200 	strex	r2, r3, [r1]
 8007d22:	2a00      	cmp	r2, #0
 8007d24:	d1f3      	bne.n	8007d0e <UART_WaitOnFlagUntilTimeout+0x50>
        huart->gState = HAL_UART_STATE_READY;
 8007d26:	2320      	movs	r3, #32
 8007d28:	67eb      	str	r3, [r5, #124]	@ 0x7c
        huart->RxState = HAL_UART_STATE_READY;
 8007d2a:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
          __HAL_UNLOCK(huart);
 8007d2e:	2300      	movs	r3, #0
        return HAL_TIMEOUT;
 8007d30:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 8007d32:	f885 3078 	strb.w	r3, [r5, #120]	@ 0x78
}
 8007d36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8007d3a:	6823      	ldr	r3, [r4, #0]
 8007d3c:	075a      	lsls	r2, r3, #29
 8007d3e:	d5c6      	bpl.n	8007cce <UART_WaitOnFlagUntilTimeout+0x10>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8007d40:	69e3      	ldr	r3, [r4, #28]
 8007d42:	051b      	lsls	r3, r3, #20
 8007d44:	d5c3      	bpl.n	8007cce <UART_WaitOnFlagUntilTimeout+0x10>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8007d46:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8007d4a:	6223      	str	r3, [r4, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007d4c:	e854 3f00 	ldrex	r3, [r4]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8007d50:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007d54:	e844 3200 	strex	r2, r3, [r4]
 8007d58:	2a00      	cmp	r2, #0
 8007d5a:	d1f7      	bne.n	8007d4c <UART_WaitOnFlagUntilTimeout+0x8e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007d5c:	f104 0308 	add.w	r3, r4, #8
 8007d60:	e853 3f00 	ldrex	r3, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007d64:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007d68:	f104 0108 	add.w	r1, r4, #8
 8007d6c:	e841 3200 	strex	r2, r3, [r1]
 8007d70:	2a00      	cmp	r2, #0
 8007d72:	d1f3      	bne.n	8007d5c <UART_WaitOnFlagUntilTimeout+0x9e>
          huart->gState = HAL_UART_STATE_READY;
 8007d74:	2320      	movs	r3, #32
 8007d76:	67eb      	str	r3, [r5, #124]	@ 0x7c
          huart->RxState = HAL_UART_STATE_READY;
 8007d78:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8007d7c:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
          return HAL_TIMEOUT;
 8007d80:	e7d5      	b.n	8007d2e <UART_WaitOnFlagUntilTimeout+0x70>

08007d82 <HAL_UART_Transmit>:
{
 8007d82:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007d86:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8007d88:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
{
 8007d8a:	4604      	mov	r4, r0
 8007d8c:	460e      	mov	r6, r1
  if (huart->gState == HAL_UART_STATE_READY)
 8007d8e:	2b20      	cmp	r3, #32
{
 8007d90:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8007d92:	d141      	bne.n	8007e18 <HAL_UART_Transmit+0x96>
    if ((pData == NULL) || (Size == 0U))
 8007d94:	2900      	cmp	r1, #0
 8007d96:	d041      	beq.n	8007e1c <HAL_UART_Transmit+0x9a>
 8007d98:	2a00      	cmp	r2, #0
 8007d9a:	d03f      	beq.n	8007e1c <HAL_UART_Transmit+0x9a>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007d9c:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007d9e:	2500      	movs	r5, #0
 8007da0:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007da4:	67c3      	str	r3, [r0, #124]	@ 0x7c
    tickstart = HAL_GetTick();
 8007da6:	f7fd f845 	bl	8004e34 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007daa:	68a3      	ldr	r3, [r4, #8]
    tickstart = HAL_GetTick();
 8007dac:	4681      	mov	r9, r0
    huart->TxXferSize  = Size;
 8007dae:	f8a4 7050 	strh.w	r7, [r4, #80]	@ 0x50
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007db2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->TxXferCount = Size;
 8007db6:	f8a4 7052 	strh.w	r7, [r4, #82]	@ 0x52
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007dba:	d103      	bne.n	8007dc4 <HAL_UART_Transmit+0x42>
 8007dbc:	6923      	ldr	r3, [r4, #16]
 8007dbe:	b90b      	cbnz	r3, 8007dc4 <HAL_UART_Transmit+0x42>
 8007dc0:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 8007dc2:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 8007dc4:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8007dc8:	464b      	mov	r3, r9
 8007dca:	f8cd 8000 	str.w	r8, [sp]
    while (huart->TxXferCount > 0U)
 8007dce:	b292      	uxth	r2, r2
 8007dd0:	b93a      	cbnz	r2, 8007de2 <HAL_UART_Transmit+0x60>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8007dd2:	2140      	movs	r1, #64	@ 0x40
 8007dd4:	4620      	mov	r0, r4
 8007dd6:	f7ff ff72 	bl	8007cbe <UART_WaitOnFlagUntilTimeout>
 8007dda:	b940      	cbnz	r0, 8007dee <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 8007ddc:	2320      	movs	r3, #32
 8007dde:	67e3      	str	r3, [r4, #124]	@ 0x7c
    return HAL_OK;
 8007de0:	e006      	b.n	8007df0 <HAL_UART_Transmit+0x6e>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8007de2:	2200      	movs	r2, #0
 8007de4:	2180      	movs	r1, #128	@ 0x80
 8007de6:	4620      	mov	r0, r4
 8007de8:	f7ff ff69 	bl	8007cbe <UART_WaitOnFlagUntilTimeout>
 8007dec:	b118      	cbz	r0, 8007df6 <HAL_UART_Transmit+0x74>
        return HAL_TIMEOUT;
 8007dee:	2003      	movs	r0, #3
}
 8007df0:	b003      	add	sp, #12
 8007df2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8007df6:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 8007df8:	b95e      	cbnz	r6, 8007e12 <HAL_UART_Transmit+0x90>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8007dfa:	f835 3b02 	ldrh.w	r3, [r5], #2
 8007dfe:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8007e02:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
 8007e04:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
 8007e08:	3a01      	subs	r2, #1
 8007e0a:	b292      	uxth	r2, r2
 8007e0c:	f8a4 2052 	strh.w	r2, [r4, #82]	@ 0x52
 8007e10:	e7d8      	b.n	8007dc4 <HAL_UART_Transmit+0x42>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8007e12:	f816 3b01 	ldrb.w	r3, [r6], #1
 8007e16:	e7f4      	b.n	8007e02 <HAL_UART_Transmit+0x80>
    return HAL_BUSY;
 8007e18:	2002      	movs	r0, #2
 8007e1a:	e7e9      	b.n	8007df0 <HAL_UART_Transmit+0x6e>
      return  HAL_ERROR;
 8007e1c:	2001      	movs	r0, #1
 8007e1e:	e7e7      	b.n	8007df0 <HAL_UART_Transmit+0x6e>

08007e20 <UART_CheckIdleState>:
{
 8007e20:	b537      	push	{r0, r1, r2, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007e22:	2500      	movs	r5, #0
{
 8007e24:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007e26:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
  tickstart = HAL_GetTick();
 8007e2a:	f7fd f803 	bl	8004e34 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8007e2e:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
 8007e30:	4603      	mov	r3, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8007e32:	6812      	ldr	r2, [r2, #0]
 8007e34:	0712      	lsls	r2, r2, #28
 8007e36:	d40a      	bmi.n	8007e4e <UART_CheckIdleState+0x2e>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007e38:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8007e3a:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 8007e3c:	f884 0078 	strb.w	r0, [r4, #120]	@ 0x78
  huart->gState = HAL_UART_STATE_READY;
 8007e40:	67e3      	str	r3, [r4, #124]	@ 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 8007e42:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007e46:	6620      	str	r0, [r4, #96]	@ 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8007e48:	6660      	str	r0, [r4, #100]	@ 0x64
}
 8007e4a:	b003      	add	sp, #12
 8007e4c:	bd30      	pop	{r4, r5, pc}
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8007e4e:	f06f 427e 	mvn.w	r2, #4261412864	@ 0xfe000000
 8007e52:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8007e56:	4620      	mov	r0, r4
 8007e58:	9200      	str	r2, [sp, #0]
 8007e5a:	462a      	mov	r2, r5
 8007e5c:	f7ff ff2f 	bl	8007cbe <UART_WaitOnFlagUntilTimeout>
 8007e60:	2800      	cmp	r0, #0
 8007e62:	d0e9      	beq.n	8007e38 <UART_CheckIdleState+0x18>
      return HAL_TIMEOUT;
 8007e64:	2003      	movs	r0, #3
 8007e66:	e7f0      	b.n	8007e4a <UART_CheckIdleState+0x2a>

08007e68 <HAL_UART_Init>:
{
 8007e68:	b510      	push	{r4, lr}
  if (huart == NULL)
 8007e6a:	4604      	mov	r4, r0
 8007e6c:	b340      	cbz	r0, 8007ec0 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8007e6e:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
 8007e70:	b91b      	cbnz	r3, 8007e7a <HAL_UART_Init+0x12>
    huart->Lock = HAL_UNLOCKED;
 8007e72:	f880 3078 	strb.w	r3, [r0, #120]	@ 0x78
    HAL_UART_MspInit(huart);
 8007e76:	f7f9 f94d 	bl	8001114 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8007e7a:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8007e7c:	2324      	movs	r3, #36	@ 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
 8007e7e:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
 8007e80:	67e3      	str	r3, [r4, #124]	@ 0x7c
  __HAL_UART_DISABLE(huart);
 8007e82:	6813      	ldr	r3, [r2, #0]
 8007e84:	f023 0301 	bic.w	r3, r3, #1
 8007e88:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8007e8a:	f7ff fda7 	bl	80079dc <UART_SetConfig>
 8007e8e:	2801      	cmp	r0, #1
 8007e90:	d016      	beq.n	8007ec0 <HAL_UART_Init+0x58>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8007e92:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007e94:	b113      	cbz	r3, 8007e9c <HAL_UART_Init+0x34>
    UART_AdvFeatureConfig(huart);
 8007e96:	4620      	mov	r0, r4
 8007e98:	f7ff febc 	bl	8007c14 <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8007e9c:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
 8007e9e:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8007ea0:	685a      	ldr	r2, [r3, #4]
 8007ea2:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8007ea6:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8007ea8:	689a      	ldr	r2, [r3, #8]
 8007eaa:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8007eae:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8007eb0:	681a      	ldr	r2, [r3, #0]
 8007eb2:	f042 0201 	orr.w	r2, r2, #1
}
 8007eb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
 8007eba:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 8007ebc:	f7ff bfb0 	b.w	8007e20 <UART_CheckIdleState>
}
 8007ec0:	2001      	movs	r0, #1
 8007ec2:	bd10      	pop	{r4, pc}

08007ec4 <UART_Start_Receive_IT>:
{
 8007ec4:	b510      	push	{r4, lr}
  huart->RxXferSize  = Size;
 8007ec6:	f8a0 2058 	strh.w	r2, [r0, #88]	@ 0x58
  huart->RxISR       = NULL;
 8007eca:	2300      	movs	r3, #0
  huart->RxXferCount = Size;
 8007ecc:	f8a0 205a 	strh.w	r2, [r0, #90]	@ 0x5a
  UART_MASK_COMPUTATION(huart);
 8007ed0:	6882      	ldr	r2, [r0, #8]
  huart->pRxBuffPtr  = pData;
 8007ed2:	6541      	str	r1, [r0, #84]	@ 0x54
  UART_MASK_COMPUTATION(huart);
 8007ed4:	f5b2 5f80 	cmp.w	r2, #4096	@ 0x1000
  huart->RxISR       = NULL;
 8007ed8:	6683      	str	r3, [r0, #104]	@ 0x68
  UART_MASK_COMPUTATION(huart);
 8007eda:	d130      	bne.n	8007f3e <UART_Start_Receive_IT+0x7a>
 8007edc:	6903      	ldr	r3, [r0, #16]
 8007ede:	2b00      	cmp	r3, #0
 8007ee0:	f240 13ff 	movw	r3, #511	@ 0x1ff
 8007ee4:	bf18      	it	ne
 8007ee6:	23ff      	movne	r3, #255	@ 0xff
 8007ee8:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007eec:	2300      	movs	r3, #0
 8007eee:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 8007ef2:	2322      	movs	r3, #34	@ 0x22
 8007ef4:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007ef8:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007efa:	f102 0308 	add.w	r3, r2, #8
 8007efe:	e853 3f00 	ldrex	r3, [r3]
 8007f02:	f043 0301 	orr.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007f06:	3208      	adds	r2, #8
 8007f08:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8007f0c:	6802      	ldr	r2, [r0, #0]
 8007f0e:	2900      	cmp	r1, #0
 8007f10:	d1f2      	bne.n	8007ef8 <UART_Start_Receive_IT+0x34>
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007f12:	6883      	ldr	r3, [r0, #8]
 8007f14:	6901      	ldr	r1, [r0, #16]
 8007f16:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->RxISR = UART_RxISR_16BIT;
 8007f1a:	4b15      	ldr	r3, [pc, #84]	@ (8007f70 <UART_Start_Receive_IT+0xac>)
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007f1c:	d103      	bne.n	8007f26 <UART_Start_Receive_IT+0x62>
    huart->RxISR = UART_RxISR_16BIT;
 8007f1e:	4c15      	ldr	r4, [pc, #84]	@ (8007f74 <UART_Start_Receive_IT+0xb0>)
 8007f20:	2900      	cmp	r1, #0
 8007f22:	bf08      	it	eq
 8007f24:	4623      	moveq	r3, r4
 8007f26:	6683      	str	r3, [r0, #104]	@ 0x68
  if (huart->Init.Parity != UART_PARITY_NONE)
 8007f28:	b1c9      	cbz	r1, 8007f5e <UART_Start_Receive_IT+0x9a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007f2a:	e852 3f00 	ldrex	r3, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 8007f2e:	f443 7390 	orr.w	r3, r3, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007f32:	e842 3100 	strex	r1, r3, [r2]
 8007f36:	2900      	cmp	r1, #0
 8007f38:	d1f7      	bne.n	8007f2a <UART_Start_Receive_IT+0x66>
}
 8007f3a:	2000      	movs	r0, #0
 8007f3c:	bd10      	pop	{r4, pc}
  UART_MASK_COMPUTATION(huart);
 8007f3e:	b92a      	cbnz	r2, 8007f4c <UART_Start_Receive_IT+0x88>
 8007f40:	6903      	ldr	r3, [r0, #16]
 8007f42:	2b00      	cmp	r3, #0
 8007f44:	bf14      	ite	ne
 8007f46:	237f      	movne	r3, #127	@ 0x7f
 8007f48:	23ff      	moveq	r3, #255	@ 0xff
 8007f4a:	e7cd      	b.n	8007ee8 <UART_Start_Receive_IT+0x24>
 8007f4c:	f1b2 5f80 	cmp.w	r2, #268435456	@ 0x10000000
 8007f50:	d1ca      	bne.n	8007ee8 <UART_Start_Receive_IT+0x24>
 8007f52:	6903      	ldr	r3, [r0, #16]
 8007f54:	2b00      	cmp	r3, #0
 8007f56:	bf14      	ite	ne
 8007f58:	233f      	movne	r3, #63	@ 0x3f
 8007f5a:	237f      	moveq	r3, #127	@ 0x7f
 8007f5c:	e7c4      	b.n	8007ee8 <UART_Start_Receive_IT+0x24>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007f5e:	e852 3f00 	ldrex	r3, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE);
 8007f62:	f043 0320 	orr.w	r3, r3, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007f66:	e842 3100 	strex	r1, r3, [r2]
 8007f6a:	2900      	cmp	r1, #0
 8007f6c:	d1f7      	bne.n	8007f5e <UART_Start_Receive_IT+0x9a>
 8007f6e:	e7e4      	b.n	8007f3a <UART_Start_Receive_IT+0x76>
 8007f70:	0800789d 	.word	0x0800789d
 8007f74:	0800793f 	.word	0x0800793f

08007f78 <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
 8007f78:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
 8007f7c:	2b20      	cmp	r3, #32
{
 8007f7e:	b430      	push	{r4, r5}
  if (huart->RxState == HAL_UART_STATE_READY)
 8007f80:	d112      	bne.n	8007fa8 <HAL_UART_Receive_IT+0x30>
    if ((pData == NULL) || (Size == 0U))
 8007f82:	b1a1      	cbz	r1, 8007fae <HAL_UART_Receive_IT+0x36>
 8007f84:	b19a      	cbz	r2, 8007fae <HAL_UART_Receive_IT+0x36>
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007f86:	2300      	movs	r3, #0
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 8007f88:	6804      	ldr	r4, [r0, #0]
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007f8a:	6603      	str	r3, [r0, #96]	@ 0x60
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 8007f8c:	6863      	ldr	r3, [r4, #4]
 8007f8e:	021b      	lsls	r3, r3, #8
 8007f90:	d507      	bpl.n	8007fa2 <HAL_UART_Receive_IT+0x2a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007f92:	e854 3f00 	ldrex	r3, [r4]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 8007f96:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007f9a:	e844 3500 	strex	r5, r3, [r4]
 8007f9e:	2d00      	cmp	r5, #0
 8007fa0:	d1f7      	bne.n	8007f92 <HAL_UART_Receive_IT+0x1a>
}
 8007fa2:	bc30      	pop	{r4, r5}
    return (UART_Start_Receive_IT(huart, pData, Size));
 8007fa4:	f7ff bf8e 	b.w	8007ec4 <UART_Start_Receive_IT>
    return HAL_BUSY;
 8007fa8:	2002      	movs	r0, #2
}
 8007faa:	bc30      	pop	{r4, r5}
 8007fac:	4770      	bx	lr
      return HAL_ERROR;
 8007fae:	2001      	movs	r0, #1
 8007fb0:	e7fb      	b.n	8007faa <HAL_UART_Receive_IT+0x32>

08007fb2 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007fb2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007fb6:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8007fba:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8007fbe:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
 8007fc2:	ea43 0308 	orr.w	r3, r3, r8
 8007fc6:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8007fca:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8007fce:	6809      	ldr	r1, [r1, #0]
 8007fd0:	b991      	cbnz	r1, 8007ff8 <FMC_SDRAM_Init+0x46>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007fd2:	ea43 030e 	orr.w	r3, r3, lr
 8007fd6:	6801      	ldr	r1, [r0, #0]
 8007fd8:	4313      	orrs	r3, r2
 8007fda:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8007fde:	ea43 030c 	orr.w	r3, r3, ip
 8007fe2:	f021 017f 	bic.w	r1, r1, #127	@ 0x7f
 8007fe6:	433b      	orrs	r3, r7
 8007fe8:	4333      	orrs	r3, r6
 8007fea:	432b      	orrs	r3, r5
 8007fec:	4323      	orrs	r3, r4
 8007fee:	430b      	orrs	r3, r1
 8007ff0:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8007ff2:	2000      	movs	r0, #0
 8007ff4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007ff8:	6801      	ldr	r1, [r0, #0]
 8007ffa:	ea43 030e 	orr.w	r3, r3, lr
 8007ffe:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8008002:	430b      	orrs	r3, r1
 8008004:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8008006:	ea42 030c 	orr.w	r3, r2, ip
 800800a:	6841      	ldr	r1, [r0, #4]
 800800c:	433b      	orrs	r3, r7
 800800e:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8008012:	4333      	orrs	r3, r6
 8008014:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8008018:	432b      	orrs	r3, r5
 800801a:	4323      	orrs	r3, r4
 800801c:	4313      	orrs	r3, r2
 800801e:	6043      	str	r3, [r0, #4]
 8008020:	e7e7      	b.n	8007ff2 <FMC_SDRAM_Init+0x40>

08008022 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008022:	68cb      	ldr	r3, [r1, #12]
 8008024:	f103 3cff 	add.w	ip, r3, #4294967295
 8008028:	694b      	ldr	r3, [r1, #20]
{
 800802a:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800802c:	3b01      	subs	r3, #1
 800802e:	680f      	ldr	r7, [r1, #0]
 8008030:	684c      	ldr	r4, [r1, #4]
 8008032:	688e      	ldr	r6, [r1, #8]
 8008034:	051b      	lsls	r3, r3, #20
 8008036:	690d      	ldr	r5, [r1, #16]
 8008038:	3c01      	subs	r4, #1
 800803a:	6989      	ldr	r1, [r1, #24]
 800803c:	3e01      	subs	r6, #1
 800803e:	3d01      	subs	r5, #1
 8008040:	3f01      	subs	r7, #1
 8008042:	3901      	subs	r1, #1
 8008044:	0124      	lsls	r4, r4, #4
 8008046:	0236      	lsls	r6, r6, #8
 8008048:	042d      	lsls	r5, r5, #16
 800804a:	0609      	lsls	r1, r1, #24
 800804c:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8008050:	b95a      	cbnz	r2, 800806a <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008052:	433b      	orrs	r3, r7
 8008054:	6882      	ldr	r2, [r0, #8]
 8008056:	4323      	orrs	r3, r4
 8008058:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800805c:	4333      	orrs	r3, r6
 800805e:	432b      	orrs	r3, r5
 8008060:	430b      	orrs	r3, r1
 8008062:	4313      	orrs	r3, r2
 8008064:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8008066:	2000      	movs	r0, #0
 8008068:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800806a:	6882      	ldr	r2, [r0, #8]
 800806c:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8008070:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8008074:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8008076:	ea44 0306 	orr.w	r3, r4, r6
 800807a:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800807c:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800807e:	68c2      	ldr	r2, [r0, #12]
 8008080:	432b      	orrs	r3, r5
 8008082:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8008086:	430b      	orrs	r3, r1
 8008088:	4313      	orrs	r3, r2
 800808a:	60c3      	str	r3, [r0, #12]
 800808c:	e7eb      	b.n	8008066 <FMC_SDRAM_Timing_Init+0x44>

0800808e <FMC_SDRAM_SendCommand>:
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800808e:	6902      	ldr	r2, [r0, #16]
{
 8008090:	b510      	push	{r4, lr}
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8008092:	e9d1 3400 	ldrd	r3, r4, [r1]
 8008096:	0d92      	lsrs	r2, r2, #22
 8008098:	4323      	orrs	r3, r4
 800809a:	68cc      	ldr	r4, [r1, #12]
 800809c:	0592      	lsls	r2, r2, #22
 800809e:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
 80080a2:	4313      	orrs	r3, r2
 80080a4:	688a      	ldr	r2, [r1, #8]
 80080a6:	3a01      	subs	r2, #1
 80080a8:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80080ac:	6103      	str	r3, [r0, #16]
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
 80080ae:	2000      	movs	r0, #0
 80080b0:	bd10      	pop	{r4, pc}

080080b2 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 80080b2:	6943      	ldr	r3, [r0, #20]
 80080b4:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 80080b8:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
 80080bc:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 80080c0:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 80080c2:	2000      	movs	r0, #0
 80080c4:	4770      	bx	lr
	...

080080c8 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80080c8:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80080cc:	b113      	cbz	r3, 80080d4 <osKernelInitialize+0xc>
    stat = osErrorISR;
 80080ce:	f06f 0005 	mvn.w	r0, #5
 80080d2:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80080d4:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80080d8:	4b07      	ldr	r3, [pc, #28]	@ (80080f8 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 80080da:	b912      	cbnz	r2, 80080e2 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80080dc:	f3ef 8211 	mrs	r2, BASEPRI
 80080e0:	b112      	cbz	r2, 80080e8 <osKernelInitialize+0x20>
 80080e2:	681a      	ldr	r2, [r3, #0]
 80080e4:	2a02      	cmp	r2, #2
 80080e6:	d0f2      	beq.n	80080ce <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 80080e8:	6818      	ldr	r0, [r3, #0]
 80080ea:	b910      	cbnz	r0, 80080f2 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80080ec:	2201      	movs	r2, #1
 80080ee:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80080f0:	4770      	bx	lr
    } else {
      stat = osError;
 80080f2:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80080f6:	4770      	bx	lr
 80080f8:	2000251c 	.word	0x2000251c

080080fc <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80080fc:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80080fe:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008102:	b113      	cbz	r3, 800810a <osKernelStart+0xe>
    stat = osErrorISR;
 8008104:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8008108:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800810a:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 800810e:	4b0a      	ldr	r3, [pc, #40]	@ (8008138 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8008110:	b912      	cbnz	r2, 8008118 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008112:	f3ef 8211 	mrs	r2, BASEPRI
 8008116:	b112      	cbz	r2, 800811e <osKernelStart+0x22>
 8008118:	681a      	ldr	r2, [r3, #0]
 800811a:	2a02      	cmp	r2, #2
 800811c:	d0f2      	beq.n	8008104 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 800811e:	681a      	ldr	r2, [r3, #0]
 8008120:	2a01      	cmp	r2, #1
 8008122:	d105      	bne.n	8008130 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8008124:	2202      	movs	r2, #2
 8008126:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8008128:	f001 fdc8 	bl	8009cbc <vTaskStartScheduler>
      stat = osOK;
 800812c:	2000      	movs	r0, #0
 800812e:	e7eb      	b.n	8008108 <osKernelStart+0xc>
      stat = osError;
 8008130:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008134:	e7e8      	b.n	8008108 <osKernelStart+0xc>
 8008136:	bf00      	nop
 8008138:	2000251c 	.word	0x2000251c

0800813c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800813c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800813e:	4614      	mov	r4, r2
 8008140:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8008142:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008144:	460b      	mov	r3, r1
  hTask = NULL;
 8008146:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008148:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800814c:	bb1a      	cbnz	r2, 8008196 <osThreadNew+0x5a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800814e:	f3ef 8210 	mrs	r2, PRIMASK
 8008152:	b912      	cbnz	r2, 800815a <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008154:	f3ef 8211 	mrs	r2, BASEPRI
 8008158:	b11a      	cbz	r2, 8008162 <osThreadNew+0x26>
 800815a:	4a21      	ldr	r2, [pc, #132]	@ (80081e0 <osThreadNew+0xa4>)
 800815c:	6812      	ldr	r2, [r2, #0]
 800815e:	2a02      	cmp	r2, #2
 8008160:	d019      	beq.n	8008196 <osThreadNew+0x5a>
 8008162:	b1c0      	cbz	r0, 8008196 <osThreadNew+0x5a>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008164:	b36c      	cbz	r4, 80081c2 <osThreadNew+0x86>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008166:	69a5      	ldr	r5, [r4, #24]
 8008168:	2d00      	cmp	r5, #0
 800816a:	bf08      	it	eq
 800816c:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800816e:	1e6a      	subs	r2, r5, #1
 8008170:	46ac      	mov	ip, r5
 8008172:	2a37      	cmp	r2, #55	@ 0x37
 8008174:	d82a      	bhi.n	80081cc <osThreadNew+0x90>
 8008176:	6862      	ldr	r2, [r4, #4]
 8008178:	07d2      	lsls	r2, r2, #31
 800817a:	d427      	bmi.n	80081cc <osThreadNew+0x90>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800817c:	6966      	ldr	r6, [r4, #20]
 800817e:	b16e      	cbz	r6, 800819c <osThreadNew+0x60>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008180:	08b2      	lsrs	r2, r6, #2
      if (attr->name != NULL) {
 8008182:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008184:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
 8008188:	b157      	cbz	r7, 80081a0 <osThreadNew+0x64>
 800818a:	f1be 0f5f 	cmp.w	lr, #95	@ 0x5f
 800818e:	d902      	bls.n	8008196 <osThreadNew+0x5a>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008190:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008192:	b104      	cbz	r4, 8008196 <osThreadNew+0x5a>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008194:	b9e6      	cbnz	r6, 80081d0 <osThreadNew+0x94>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008196:	9805      	ldr	r0, [sp, #20]
}
 8008198:	b007      	add	sp, #28
 800819a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800819c:	2280      	movs	r2, #128	@ 0x80
 800819e:	e7f0      	b.n	8008182 <osThreadNew+0x46>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80081a0:	f1be 0f00 	cmp.w	lr, #0
 80081a4:	d1f7      	bne.n	8008196 <osThreadNew+0x5a>
      if (mem == 0) {
 80081a6:	6924      	ldr	r4, [r4, #16]
 80081a8:	2c00      	cmp	r4, #0
 80081aa:	d1f4      	bne.n	8008196 <osThreadNew+0x5a>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80081ac:	ac05      	add	r4, sp, #20
 80081ae:	b292      	uxth	r2, r2
 80081b0:	e9cd c400 	strd	ip, r4, [sp]
 80081b4:	f001 fbf5 	bl	80099a2 <xTaskCreate>
 80081b8:	2801      	cmp	r0, #1
          hTask = NULL;
 80081ba:	bf1c      	itt	ne
 80081bc:	2300      	movne	r3, #0
 80081be:	9305      	strne	r3, [sp, #20]
 80081c0:	e7e9      	b.n	8008196 <osThreadNew+0x5a>
    name = NULL;
 80081c2:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 80081c4:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80081c8:	2280      	movs	r2, #128	@ 0x80
 80081ca:	e7ef      	b.n	80081ac <osThreadNew+0x70>
        return (NULL);
 80081cc:	2000      	movs	r0, #0
 80081ce:	e7e3      	b.n	8008198 <osThreadNew+0x5c>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80081d0:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80081d4:	9500      	str	r5, [sp, #0]
 80081d6:	f001 fba6 	bl	8009926 <xTaskCreateStatic>
 80081da:	9005      	str	r0, [sp, #20]
 80081dc:	e7db      	b.n	8008196 <osThreadNew+0x5a>
 80081de:	bf00      	nop
 80081e0:	2000251c 	.word	0x2000251c

080081e4 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 80081e4:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80081e6:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80081ea:	b113      	cbz	r3, 80081f2 <osDelay+0xe>
    stat = osErrorISR;
 80081ec:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 80081f0:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80081f2:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80081f6:	b913      	cbnz	r3, 80081fe <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80081f8:	f3ef 8311 	mrs	r3, BASEPRI
 80081fc:	b11b      	cbz	r3, 8008206 <osDelay+0x22>
 80081fe:	4b04      	ldr	r3, [pc, #16]	@ (8008210 <osDelay+0x2c>)
 8008200:	681b      	ldr	r3, [r3, #0]
 8008202:	2b02      	cmp	r3, #2
 8008204:	d0f2      	beq.n	80081ec <osDelay+0x8>
    if (ticks != 0U) {
 8008206:	b108      	cbz	r0, 800820c <osDelay+0x28>
      vTaskDelay(ticks);
 8008208:	f001 fd16 	bl	8009c38 <vTaskDelay>
    stat = osOK;
 800820c:	2000      	movs	r0, #0
  return (stat);
 800820e:	e7ef      	b.n	80081f0 <osDelay+0xc>
 8008210:	2000251c 	.word	0x2000251c

08008214 <osMutexNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
 8008214:	b570      	push	{r4, r5, r6, lr}
 8008216:	4605      	mov	r5, r0
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008218:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
 800821c:	b116      	cbz	r6, 8008224 <osMutexNew+0x10>
  hMutex = NULL;
 800821e:	2400      	movs	r4, #0
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
 8008220:	4620      	mov	r0, r4
 8008222:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008224:	f3ef 8210 	mrs	r2, PRIMASK
  if (!IS_IRQ()) {
 8008228:	b912      	cbnz	r2, 8008230 <osMutexNew+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800822a:	f3ef 8211 	mrs	r2, BASEPRI
 800822e:	b11a      	cbz	r2, 8008238 <osMutexNew+0x24>
 8008230:	4a18      	ldr	r2, [pc, #96]	@ (8008294 <osMutexNew+0x80>)
 8008232:	6812      	ldr	r2, [r2, #0]
 8008234:	2a02      	cmp	r2, #2
 8008236:	d0f2      	beq.n	800821e <osMutexNew+0xa>
    if (attr != NULL) {
 8008238:	b115      	cbz	r5, 8008240 <osMutexNew+0x2c>
      type = attr->attr_bits;
 800823a:	686e      	ldr	r6, [r5, #4]
    if ((type & osMutexRobust) != osMutexRobust) {
 800823c:	0733      	lsls	r3, r6, #28
 800823e:	d4ee      	bmi.n	800821e <osMutexNew+0xa>
    if ((type & osMutexRecursive) == osMutexRecursive) {
 8008240:	f006 0601 	and.w	r6, r6, #1
      if (attr != NULL) {
 8008244:	b17d      	cbz	r5, 8008266 <osMutexNew+0x52>
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008246:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
 800824a:	b151      	cbz	r1, 8008262 <osMutexNew+0x4e>
 800824c:	2b4f      	cmp	r3, #79	@ 0x4f
 800824e:	d9e6      	bls.n	800821e <osMutexNew+0xa>
        if (rmtx != 0U) {
 8008250:	b1de      	cbz	r6, 800828a <osMutexNew+0x76>
          hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
 8008252:	2004      	movs	r0, #4
          hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
 8008254:	f000 fef3 	bl	800903e <xQueueCreateMutexStatic>
 8008258:	4604      	mov	r4, r0
      if (hMutex != NULL) {
 800825a:	2800      	cmp	r0, #0
 800825c:	d0df      	beq.n	800821e <osMutexNew+0xa>
          name = attr->name;
 800825e:	682d      	ldr	r5, [r5, #0]
 8008260:	e00a      	b.n	8008278 <osMutexNew+0x64>
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008262:	2b00      	cmp	r3, #0
 8008264:	d1db      	bne.n	800821e <osMutexNew+0xa>
          if (rmtx != 0U) {
 8008266:	b196      	cbz	r6, 800828e <osMutexNew+0x7a>
            hMutex = xSemaphoreCreateRecursiveMutex ();
 8008268:	2004      	movs	r0, #4
            hMutex = xSemaphoreCreateMutex ();
 800826a:	f000 fefd 	bl	8009068 <xQueueCreateMutex>
 800826e:	4604      	mov	r4, r0
      if (hMutex != NULL) {
 8008270:	2800      	cmp	r0, #0
 8008272:	d0d4      	beq.n	800821e <osMutexNew+0xa>
        if (attr != NULL) {
 8008274:	2d00      	cmp	r5, #0
 8008276:	d1f2      	bne.n	800825e <osMutexNew+0x4a>
        vQueueAddToRegistry (hMutex, name);
 8008278:	4629      	mov	r1, r5
 800827a:	4620      	mov	r0, r4
 800827c:	f001 f98a 	bl	8009594 <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
 8008280:	2e00      	cmp	r6, #0
 8008282:	d0cd      	beq.n	8008220 <osMutexNew+0xc>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
 8008284:	f044 0401 	orr.w	r4, r4, #1
  return ((osMutexId_t)hMutex);
 8008288:	e7ca      	b.n	8008220 <osMutexNew+0xc>
          hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
 800828a:	2001      	movs	r0, #1
 800828c:	e7e2      	b.n	8008254 <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutex ();
 800828e:	2001      	movs	r0, #1
 8008290:	e7eb      	b.n	800826a <osMutexNew+0x56>
 8008292:	bf00      	nop
 8008294:	2000251c 	.word	0x2000251c

08008298 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008298:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800829a:	460e      	mov	r6, r1
 800829c:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800829e:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80082a2:	b993      	cbnz	r3, 80082ca <osSemaphoreNew+0x32>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80082a4:	f3ef 8310 	mrs	r3, PRIMASK
 80082a8:	b913      	cbnz	r3, 80082b0 <osSemaphoreNew+0x18>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80082aa:	f3ef 8311 	mrs	r3, BASEPRI
 80082ae:	b11b      	cbz	r3, 80082b8 <osSemaphoreNew+0x20>
 80082b0:	4b24      	ldr	r3, [pc, #144]	@ (8008344 <osSemaphoreNew+0xac>)
 80082b2:	681b      	ldr	r3, [r3, #0]
 80082b4:	2b02      	cmp	r3, #2
 80082b6:	d008      	beq.n	80082ca <osSemaphoreNew+0x32>
 80082b8:	b138      	cbz	r0, 80082ca <osSemaphoreNew+0x32>
 80082ba:	42b0      	cmp	r0, r6
 80082bc:	d305      	bcc.n	80082ca <osSemaphoreNew+0x32>
    mem = -1;

    if (attr != NULL) {
 80082be:	b155      	cbz	r5, 80082d6 <osSemaphoreNew+0x3e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80082c0:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 80082c4:	b12b      	cbz	r3, 80082d2 <osSemaphoreNew+0x3a>
 80082c6:	2a4f      	cmp	r2, #79	@ 0x4f
 80082c8:	d823      	bhi.n	8008312 <osSemaphoreNew+0x7a>
  hSemaphore = NULL;
 80082ca:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80082cc:	4620      	mov	r0, r4
 80082ce:	b002      	add	sp, #8
 80082d0:	bd70      	pop	{r4, r5, r6, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80082d2:	2a00      	cmp	r2, #0
 80082d4:	d1f9      	bne.n	80082ca <osSemaphoreNew+0x32>
      if (max_count == 1U) {
 80082d6:	2801      	cmp	r0, #1
 80082d8:	d10e      	bne.n	80082f8 <osSemaphoreNew+0x60>
          hSemaphore = xSemaphoreCreateBinary();
 80082da:	2203      	movs	r2, #3
 80082dc:	2100      	movs	r1, #0
 80082de:	2001      	movs	r0, #1
 80082e0:	f000 fd82 	bl	8008de8 <xQueueGenericCreate>
 80082e4:	e01d      	b.n	8008322 <osSemaphoreNew+0x8a>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80082e6:	461a      	mov	r2, r3
 80082e8:	4631      	mov	r1, r6
 80082ea:	f000 fda6 	bl	8008e3a <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80082ee:	4604      	mov	r4, r0
 80082f0:	2800      	cmp	r0, #0
 80082f2:	d0ea      	beq.n	80082ca <osSemaphoreNew+0x32>
          name = attr->name;
 80082f4:	682d      	ldr	r5, [r5, #0]
 80082f6:	e007      	b.n	8008308 <osSemaphoreNew+0x70>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80082f8:	4631      	mov	r1, r6
 80082fa:	f000 fdc4 	bl	8008e86 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80082fe:	4604      	mov	r4, r0
 8008300:	2800      	cmp	r0, #0
 8008302:	d0e2      	beq.n	80082ca <osSemaphoreNew+0x32>
        if (attr != NULL) {
 8008304:	2d00      	cmp	r5, #0
 8008306:	d1f5      	bne.n	80082f4 <osSemaphoreNew+0x5c>
        vQueueAddToRegistry (hSemaphore, name);
 8008308:	4629      	mov	r1, r5
 800830a:	4620      	mov	r0, r4
 800830c:	f001 f942 	bl	8009594 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008310:	e7dc      	b.n	80082cc <osSemaphoreNew+0x34>
      if (max_count == 1U) {
 8008312:	2801      	cmp	r0, #1
 8008314:	d1e7      	bne.n	80082e6 <osSemaphoreNew+0x4e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008316:	2203      	movs	r2, #3
 8008318:	9200      	str	r2, [sp, #0]
 800831a:	2200      	movs	r2, #0
 800831c:	4611      	mov	r1, r2
 800831e:	f000 fd4f 	bl	8008dc0 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8008322:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008324:	2800      	cmp	r0, #0
 8008326:	d0d0      	beq.n	80082ca <osSemaphoreNew+0x32>
 8008328:	2e00      	cmp	r6, #0
 800832a:	d0eb      	beq.n	8008304 <osSemaphoreNew+0x6c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800832c:	2300      	movs	r3, #0
 800832e:	461a      	mov	r2, r3
 8008330:	4619      	mov	r1, r3
 8008332:	f000 fdca 	bl	8008eca <xQueueGenericSend>
 8008336:	2801      	cmp	r0, #1
 8008338:	d0e4      	beq.n	8008304 <osSemaphoreNew+0x6c>
            vSemaphoreDelete (hSemaphore);
 800833a:	4620      	mov	r0, r4
 800833c:	f001 f954 	bl	80095e8 <vQueueDelete>
      if (hSemaphore != NULL) {
 8008340:	e7c3      	b.n	80082ca <osSemaphoreNew+0x32>
 8008342:	bf00      	nop
 8008344:	2000251c 	.word	0x2000251c

08008348 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008348:	b513      	push	{r0, r1, r4, lr}
 800834a:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800834c:	b918      	cbnz	r0, 8008356 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 800834e:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008352:	b002      	add	sp, #8
 8008354:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008356:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 800835a:	b15b      	cbz	r3, 8008374 <osSemaphoreAcquire+0x2c>
    if (timeout != 0U) {
 800835c:	2c00      	cmp	r4, #0
 800835e:	d1f6      	bne.n	800834e <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008360:	aa01      	add	r2, sp, #4
 8008362:	4621      	mov	r1, r4
      yield = pdFALSE;
 8008364:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008366:	f001 f8c2 	bl	80094ee <xQueueReceiveFromISR>
 800836a:	2801      	cmp	r0, #1
 800836c:	d016      	beq.n	800839c <osSemaphoreAcquire+0x54>
        stat = osErrorResource;
 800836e:	f06f 0002 	mvn.w	r0, #2
 8008372:	e7ee      	b.n	8008352 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008374:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008378:	b913      	cbnz	r3, 8008380 <osSemaphoreAcquire+0x38>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800837a:	f3ef 8311 	mrs	r3, BASEPRI
 800837e:	b11b      	cbz	r3, 8008388 <osSemaphoreAcquire+0x40>
 8008380:	4b0e      	ldr	r3, [pc, #56]	@ (80083bc <osSemaphoreAcquire+0x74>)
 8008382:	681b      	ldr	r3, [r3, #0]
 8008384:	2b02      	cmp	r3, #2
 8008386:	d0e9      	beq.n	800835c <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008388:	4621      	mov	r1, r4
 800838a:	f000 ffeb 	bl	8009364 <xQueueSemaphoreTake>
 800838e:	2801      	cmp	r0, #1
 8008390:	d006      	beq.n	80083a0 <osSemaphoreAcquire+0x58>
      if (timeout != 0U) {
 8008392:	2c00      	cmp	r4, #0
 8008394:	d0eb      	beq.n	800836e <osSemaphoreAcquire+0x26>
        stat = osErrorTimeout;
 8008396:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800839a:	e7da      	b.n	8008352 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 800839c:	9b01      	ldr	r3, [sp, #4]
 800839e:	b90b      	cbnz	r3, 80083a4 <osSemaphoreAcquire+0x5c>
  stat = osOK;
 80083a0:	2000      	movs	r0, #0
 80083a2:	e7d6      	b.n	8008352 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 80083a4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80083a8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80083ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80083b0:	f3bf 8f4f 	dsb	sy
 80083b4:	f3bf 8f6f 	isb	sy
 80083b8:	e7f2      	b.n	80083a0 <osSemaphoreAcquire+0x58>
 80083ba:	bf00      	nop
 80083bc:	2000251c 	.word	0x2000251c

080083c0 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80083c0:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80083c2:	b370      	cbz	r0, 8008422 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80083c4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80083c8:	b15b      	cbz	r3, 80083e2 <osSemaphoreRelease+0x22>
    yield = pdFALSE;
 80083ca:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80083cc:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80083ce:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80083d0:	f000 fecb 	bl	800916a <xQueueGiveFromISR>
 80083d4:	2801      	cmp	r0, #1
 80083d6:	d016      	beq.n	8008406 <osSemaphoreRelease+0x46>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 80083d8:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 80083dc:	b003      	add	sp, #12
 80083de:	f85d fb04 	ldr.w	pc, [sp], #4
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80083e2:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80083e6:	b913      	cbnz	r3, 80083ee <osSemaphoreRelease+0x2e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80083e8:	f3ef 8311 	mrs	r3, BASEPRI
 80083ec:	b11b      	cbz	r3, 80083f6 <osSemaphoreRelease+0x36>
 80083ee:	4b0e      	ldr	r3, [pc, #56]	@ (8008428 <osSemaphoreRelease+0x68>)
 80083f0:	681b      	ldr	r3, [r3, #0]
 80083f2:	2b02      	cmp	r3, #2
 80083f4:	d0e9      	beq.n	80083ca <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80083f6:	2300      	movs	r3, #0
 80083f8:	461a      	mov	r2, r3
 80083fa:	4619      	mov	r1, r3
 80083fc:	f000 fd65 	bl	8008eca <xQueueGenericSend>
 8008400:	2801      	cmp	r0, #1
 8008402:	d00c      	beq.n	800841e <osSemaphoreRelease+0x5e>
 8008404:	e7e8      	b.n	80083d8 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8008406:	9b01      	ldr	r3, [sp, #4]
 8008408:	b14b      	cbz	r3, 800841e <osSemaphoreRelease+0x5e>
 800840a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800840e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008412:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008416:	f3bf 8f4f 	dsb	sy
 800841a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800841e:	2000      	movs	r0, #0
 8008420:	e7dc      	b.n	80083dc <osSemaphoreRelease+0x1c>
    stat = osErrorParameter;
 8008422:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008426:	e7d9      	b.n	80083dc <osSemaphoreRelease+0x1c>
 8008428:	2000251c 	.word	0x2000251c

0800842c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800842c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800842e:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008430:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008434:	b11b      	cbz	r3, 800843e <osMessageQueueNew+0x12>
  hQueue = NULL;
 8008436:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008438:	4628      	mov	r0, r5
 800843a:	b002      	add	sp, #8
 800843c:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800843e:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008442:	b913      	cbnz	r3, 800844a <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008444:	f3ef 8311 	mrs	r3, BASEPRI
 8008448:	b11b      	cbz	r3, 8008452 <osMessageQueueNew+0x26>
 800844a:	4b1a      	ldr	r3, [pc, #104]	@ (80084b4 <osMessageQueueNew+0x88>)
 800844c:	681b      	ldr	r3, [r3, #0]
 800844e:	2b02      	cmp	r3, #2
 8008450:	d0f1      	beq.n	8008436 <osMessageQueueNew+0xa>
 8008452:	2800      	cmp	r0, #0
 8008454:	d0ef      	beq.n	8008436 <osMessageQueueNew+0xa>
 8008456:	2900      	cmp	r1, #0
 8008458:	d0ed      	beq.n	8008436 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800845a:	b1ec      	cbz	r4, 8008498 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800845c:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008460:	b193      	cbz	r3, 8008488 <osMessageQueueNew+0x5c>
 8008462:	2a4f      	cmp	r2, #79	@ 0x4f
 8008464:	d9e7      	bls.n	8008436 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008466:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008468:	2a00      	cmp	r2, #0
 800846a:	d0e4      	beq.n	8008436 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800846c:	fb01 f500 	mul.w	r5, r1, r0
 8008470:	6966      	ldr	r6, [r4, #20]
 8008472:	42ae      	cmp	r6, r5
 8008474:	d3df      	bcc.n	8008436 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008476:	2500      	movs	r5, #0
 8008478:	9500      	str	r5, [sp, #0]
 800847a:	f000 fca1 	bl	8008dc0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800847e:	4605      	mov	r5, r0
 8008480:	2800      	cmp	r0, #0
 8008482:	d0d8      	beq.n	8008436 <osMessageQueueNew+0xa>
        name = attr->name;
 8008484:	6824      	ldr	r4, [r4, #0]
 8008486:	e00f      	b.n	80084a8 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008488:	2a00      	cmp	r2, #0
 800848a:	d1d4      	bne.n	8008436 <osMessageQueueNew+0xa>
 800848c:	6923      	ldr	r3, [r4, #16]
 800848e:	2b00      	cmp	r3, #0
 8008490:	d1d1      	bne.n	8008436 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008492:	6963      	ldr	r3, [r4, #20]
 8008494:	2b00      	cmp	r3, #0
 8008496:	d1ce      	bne.n	8008436 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8008498:	2200      	movs	r2, #0
 800849a:	f000 fca5 	bl	8008de8 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800849e:	4605      	mov	r5, r0
 80084a0:	2800      	cmp	r0, #0
 80084a2:	d0c8      	beq.n	8008436 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 80084a4:	2c00      	cmp	r4, #0
 80084a6:	d1ed      	bne.n	8008484 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 80084a8:	4621      	mov	r1, r4
 80084aa:	4628      	mov	r0, r5
 80084ac:	f001 f872 	bl	8009594 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80084b0:	e7c2      	b.n	8008438 <osMessageQueueNew+0xc>
 80084b2:	bf00      	nop
 80084b4:	2000251c 	.word	0x2000251c

080084b8 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80084b8:	b513      	push	{r0, r1, r4, lr}
 80084ba:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80084bc:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80084c0:	b123      	cbz	r3, 80084cc <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80084c2:	b9d8      	cbnz	r0, 80084fc <osMessageQueuePut+0x44>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
 80084c4:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80084c8:	b002      	add	sp, #8
 80084ca:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80084cc:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80084d0:	b913      	cbnz	r3, 80084d8 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80084d2:	f3ef 8311 	mrs	r3, BASEPRI
 80084d6:	b11b      	cbz	r3, 80084e0 <osMessageQueuePut+0x28>
 80084d8:	4b17      	ldr	r3, [pc, #92]	@ (8008538 <osMessageQueuePut+0x80>)
 80084da:	681b      	ldr	r3, [r3, #0]
 80084dc:	2b02      	cmp	r3, #2
 80084de:	d0f0      	beq.n	80084c2 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80084e0:	2800      	cmp	r0, #0
 80084e2:	d0ef      	beq.n	80084c4 <osMessageQueuePut+0xc>
 80084e4:	2900      	cmp	r1, #0
 80084e6:	d0ed      	beq.n	80084c4 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80084e8:	2300      	movs	r3, #0
 80084ea:	4622      	mov	r2, r4
 80084ec:	f000 fced 	bl	8008eca <xQueueGenericSend>
 80084f0:	2801      	cmp	r0, #1
 80084f2:	d013      	beq.n	800851c <osMessageQueuePut+0x64>
        if (timeout != 0U) {
 80084f4:	b16c      	cbz	r4, 8008512 <osMessageQueuePut+0x5a>
          stat = osErrorTimeout;
 80084f6:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80084fa:	e7e5      	b.n	80084c8 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80084fc:	2900      	cmp	r1, #0
 80084fe:	d0e1      	beq.n	80084c4 <osMessageQueuePut+0xc>
 8008500:	2c00      	cmp	r4, #0
 8008502:	d1df      	bne.n	80084c4 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008504:	4623      	mov	r3, r4
 8008506:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008508:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800850a:	f000 fdca 	bl	80090a2 <xQueueGenericSendFromISR>
 800850e:	2801      	cmp	r0, #1
 8008510:	d002      	beq.n	8008518 <osMessageQueuePut+0x60>
        stat = osErrorResource;
 8008512:	f06f 0002 	mvn.w	r0, #2
 8008516:	e7d7      	b.n	80084c8 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8008518:	9b01      	ldr	r3, [sp, #4]
 800851a:	b90b      	cbnz	r3, 8008520 <osMessageQueuePut+0x68>
  stat = osOK;
 800851c:	2000      	movs	r0, #0
 800851e:	e7d3      	b.n	80084c8 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8008520:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008524:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008528:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800852c:	f3bf 8f4f 	dsb	sy
 8008530:	f3bf 8f6f 	isb	sy
 8008534:	e7f2      	b.n	800851c <osMessageQueuePut+0x64>
 8008536:	bf00      	nop
 8008538:	2000251c 	.word	0x2000251c

0800853c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800853c:	b513      	push	{r0, r1, r4, lr}
 800853e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008540:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008544:	b123      	cbz	r3, 8008550 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008546:	b9d0      	cbnz	r0, 800857e <osMessageQueueGet+0x42>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
 8008548:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800854c:	b002      	add	sp, #8
 800854e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008550:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008554:	b913      	cbnz	r3, 800855c <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008556:	f3ef 8311 	mrs	r3, BASEPRI
 800855a:	b11b      	cbz	r3, 8008564 <osMessageQueueGet+0x28>
 800855c:	4b16      	ldr	r3, [pc, #88]	@ (80085b8 <osMessageQueueGet+0x7c>)
 800855e:	681b      	ldr	r3, [r3, #0]
 8008560:	2b02      	cmp	r3, #2
 8008562:	d0f0      	beq.n	8008546 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008564:	2800      	cmp	r0, #0
 8008566:	d0ef      	beq.n	8008548 <osMessageQueueGet+0xc>
 8008568:	2900      	cmp	r1, #0
 800856a:	d0ed      	beq.n	8008548 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800856c:	4622      	mov	r2, r4
 800856e:	f000 fe55 	bl	800921c <xQueueReceive>
 8008572:	2801      	cmp	r0, #1
 8008574:	d012      	beq.n	800859c <osMessageQueueGet+0x60>
        if (timeout != 0U) {
 8008576:	b164      	cbz	r4, 8008592 <osMessageQueueGet+0x56>
          stat = osErrorTimeout;
 8008578:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800857c:	e7e6      	b.n	800854c <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800857e:	2900      	cmp	r1, #0
 8008580:	d0e2      	beq.n	8008548 <osMessageQueueGet+0xc>
 8008582:	2c00      	cmp	r4, #0
 8008584:	d1e0      	bne.n	8008548 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008586:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008588:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800858a:	f000 ffb0 	bl	80094ee <xQueueReceiveFromISR>
 800858e:	2801      	cmp	r0, #1
 8008590:	d002      	beq.n	8008598 <osMessageQueueGet+0x5c>
        stat = osErrorResource;
 8008592:	f06f 0002 	mvn.w	r0, #2
 8008596:	e7d9      	b.n	800854c <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8008598:	9b01      	ldr	r3, [sp, #4]
 800859a:	b90b      	cbnz	r3, 80085a0 <osMessageQueueGet+0x64>
  stat = osOK;
 800859c:	2000      	movs	r0, #0
 800859e:	e7d5      	b.n	800854c <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 80085a0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80085a4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80085a8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80085ac:	f3bf 8f4f 	dsb	sy
 80085b0:	f3bf 8f6f 	isb	sy
 80085b4:	e7f2      	b.n	800859c <osMessageQueueGet+0x60>
 80085b6:	bf00      	nop
 80085b8:	2000251c 	.word	0x2000251c

080085bc <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80085bc:	4b03      	ldr	r3, [pc, #12]	@ (80085cc <vApplicationGetIdleTaskMemory+0x10>)
 80085be:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80085c0:	4b03      	ldr	r3, [pc, #12]	@ (80085d0 <vApplicationGetIdleTaskMemory+0x14>)
 80085c2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80085c4:	2380      	movs	r3, #128	@ 0x80
 80085c6:	6013      	str	r3, [r2, #0]
}
 80085c8:	4770      	bx	lr
 80085ca:	bf00      	nop
 80085cc:	200024bc 	.word	0x200024bc
 80085d0:	200022bc 	.word	0x200022bc

080085d4 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80085d4:	4b03      	ldr	r3, [pc, #12]	@ (80085e4 <vApplicationGetTimerTaskMemory+0x10>)
 80085d6:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80085d8:	4b03      	ldr	r3, [pc, #12]	@ (80085e8 <vApplicationGetTimerTaskMemory+0x14>)
 80085da:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80085dc:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80085e0:	6013      	str	r3, [r2, #0]
}
 80085e2:	4770      	bx	lr
 80085e4:	2000225c 	.word	0x2000225c
 80085e8:	20001e5c 	.word	0x20001e5c

080085ec <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80085ec:	4b10      	ldr	r3, [pc, #64]	@ (8008630 <prvInsertBlockIntoFreeList+0x44>)
{
 80085ee:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80085f0:	461a      	mov	r2, r3
 80085f2:	681b      	ldr	r3, [r3, #0]
 80085f4:	4283      	cmp	r3, r0
 80085f6:	d3fb      	bcc.n	80085f0 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80085f8:	6854      	ldr	r4, [r2, #4]
 80085fa:	1911      	adds	r1, r2, r4
 80085fc:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80085fe:	bf01      	itttt	eq
 8008600:	6841      	ldreq	r1, [r0, #4]
 8008602:	4610      	moveq	r0, r2
 8008604:	1909      	addeq	r1, r1, r4
 8008606:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008608:	6844      	ldr	r4, [r0, #4]
 800860a:	1901      	adds	r1, r0, r4
 800860c:	428b      	cmp	r3, r1
 800860e:	d10c      	bne.n	800862a <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008610:	4908      	ldr	r1, [pc, #32]	@ (8008634 <prvInsertBlockIntoFreeList+0x48>)
 8008612:	6809      	ldr	r1, [r1, #0]
 8008614:	428b      	cmp	r3, r1
 8008616:	d003      	beq.n	8008620 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008618:	6859      	ldr	r1, [r3, #4]
 800861a:	4421      	add	r1, r4
 800861c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800861e:	6819      	ldr	r1, [r3, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008620:	4290      	cmp	r0, r2
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8008622:	6001      	str	r1, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008624:	bf18      	it	ne
 8008626:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008628:	bd10      	pop	{r4, pc}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800862a:	4619      	mov	r1, r3
 800862c:	e7f8      	b.n	8008620 <prvInsertBlockIntoFreeList+0x34>
 800862e:	bf00      	nop
 8008630:	20002530 	.word	0x20002530
 8008634:	2000252c 	.word	0x2000252c

08008638 <pvPortMalloc>:
{
 8008638:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800863c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800863e:	f001 f9df 	bl	8009a00 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008642:	4940      	ldr	r1, [pc, #256]	@ (8008744 <pvPortMalloc+0x10c>)
 8008644:	4d40      	ldr	r5, [pc, #256]	@ (8008748 <pvPortMalloc+0x110>)
 8008646:	680b      	ldr	r3, [r1, #0]
 8008648:	b9f3      	cbnz	r3, 8008688 <pvPortMalloc+0x50>
	uxAddress = ( size_t ) ucHeap;
 800864a:	4a40      	ldr	r2, [pc, #256]	@ (800874c <pvPortMalloc+0x114>)
	xStart.xBlockSize = ( size_t ) 0;
 800864c:	2000      	movs	r0, #0
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800864e:	0756      	lsls	r6, r2, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008650:	4e3f      	ldr	r6, [pc, #252]	@ (8008750 <pvPortMalloc+0x118>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008652:	bf1b      	ittet	ne
 8008654:	3207      	addne	r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008656:	4b3f      	ldrne	r3, [pc, #252]	@ (8008754 <pvPortMalloc+0x11c>)
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008658:	4b3f      	ldreq	r3, [pc, #252]	@ (8008758 <pvPortMalloc+0x120>)
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800865a:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800865e:	6070      	str	r0, [r6, #4]
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008660:	bf18      	it	ne
 8008662:	1a9b      	subne	r3, r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008664:	6032      	str	r2, [r6, #0]
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008666:	4413      	add	r3, r2
	uxAddress -= xHeapStructSize;
 8008668:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800866a:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 800866e:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008672:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8008674:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008676:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800867a:	4b38      	ldr	r3, [pc, #224]	@ (800875c <pvPortMalloc+0x124>)
 800867c:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800867e:	4b38      	ldr	r3, [pc, #224]	@ (8008760 <pvPortMalloc+0x128>)
 8008680:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008682:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8008686:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008688:	682e      	ldr	r6, [r5, #0]
 800868a:	4226      	tst	r6, r4
 800868c:	d154      	bne.n	8008738 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 800868e:	2c00      	cmp	r4, #0
 8008690:	d043      	beq.n	800871a <pvPortMalloc+0xe2>
				xWantedSize += xHeapStructSize;
 8008692:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008696:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008698:	bf1c      	itt	ne
 800869a:	f023 0307 	bicne.w	r3, r3, #7
 800869e:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80086a0:	2b00      	cmp	r3, #0
 80086a2:	d049      	beq.n	8008738 <pvPortMalloc+0x100>
 80086a4:	4f2e      	ldr	r7, [pc, #184]	@ (8008760 <pvPortMalloc+0x128>)
 80086a6:	683c      	ldr	r4, [r7, #0]
 80086a8:	429c      	cmp	r4, r3
 80086aa:	d345      	bcc.n	8008738 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 80086ac:	4a28      	ldr	r2, [pc, #160]	@ (8008750 <pvPortMalloc+0x118>)
 80086ae:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80086b0:	6868      	ldr	r0, [r5, #4]
 80086b2:	4298      	cmp	r0, r3
 80086b4:	d204      	bcs.n	80086c0 <pvPortMalloc+0x88>
 80086b6:	f8d5 c000 	ldr.w	ip, [r5]
 80086ba:	f1bc 0f00 	cmp.w	ip, #0
 80086be:	d117      	bne.n	80086f0 <pvPortMalloc+0xb8>
				if( pxBlock != pxEnd )
 80086c0:	6809      	ldr	r1, [r1, #0]
 80086c2:	42a9      	cmp	r1, r5
 80086c4:	d038      	beq.n	8008738 <pvPortMalloc+0x100>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80086c6:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80086c8:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80086cc:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80086ce:	1ac2      	subs	r2, r0, r3
 80086d0:	2a10      	cmp	r2, #16
 80086d2:	d914      	bls.n	80086fe <pvPortMalloc+0xc6>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80086d4:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80086d6:	0741      	lsls	r1, r0, #29
 80086d8:	d00d      	beq.n	80086f6 <pvPortMalloc+0xbe>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80086da:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80086de:	b672      	cpsid	i
 80086e0:	f383 8811 	msr	BASEPRI, r3
 80086e4:	f3bf 8f6f 	isb	sy
 80086e8:	f3bf 8f4f 	dsb	sy
 80086ec:	b662      	cpsie	i
 80086ee:	e7fe      	b.n	80086ee <pvPortMalloc+0xb6>
 80086f0:	462a      	mov	r2, r5
 80086f2:	4665      	mov	r5, ip
 80086f4:	e7dc      	b.n	80086b0 <pvPortMalloc+0x78>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80086f6:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80086f8:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80086fa:	f7ff ff77 	bl	80085ec <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80086fe:	686a      	ldr	r2, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008700:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008702:	4916      	ldr	r1, [pc, #88]	@ (800875c <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008704:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008706:	4316      	orrs	r6, r2
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008708:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800870a:	603c      	str	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800870c:	4284      	cmp	r4, r0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800870e:	606e      	str	r6, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008710:	602b      	str	r3, [r5, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008712:	bf38      	it	cc
 8008714:	600c      	strcc	r4, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008716:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800871a:	f001 fa17 	bl	8009b4c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800871e:	0763      	lsls	r3, r4, #29
 8008720:	d00c      	beq.n	800873c <pvPortMalloc+0x104>
 8008722:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008726:	b672      	cpsid	i
 8008728:	f383 8811 	msr	BASEPRI, r3
 800872c:	f3bf 8f6f 	isb	sy
 8008730:	f3bf 8f4f 	dsb	sy
 8008734:	b662      	cpsie	i
 8008736:	e7fe      	b.n	8008736 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008738:	2400      	movs	r4, #0
 800873a:	e7ee      	b.n	800871a <pvPortMalloc+0xe2>
}
 800873c:	4620      	mov	r0, r4
 800873e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008742:	bf00      	nop
 8008744:	2000252c 	.word	0x2000252c
 8008748:	20002520 	.word	0x20002520
 800874c:	20002538 	.word	0x20002538
 8008750:	20002530 	.word	0x20002530
 8008754:	20014a30 	.word	0x20014a30
 8008758:	000124f8 	.word	0x000124f8
 800875c:	20002524 	.word	0x20002524
 8008760:	20002528 	.word	0x20002528

08008764 <vPortFree>:
{
 8008764:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008766:	4604      	mov	r4, r0
 8008768:	2800      	cmp	r0, #0
 800876a:	d032      	beq.n	80087d2 <vPortFree+0x6e>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800876c:	4a19      	ldr	r2, [pc, #100]	@ (80087d4 <vPortFree+0x70>)
 800876e:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008772:	6812      	ldr	r2, [r2, #0]
 8008774:	4213      	tst	r3, r2
 8008776:	d10a      	bne.n	800878e <vPortFree+0x2a>
 8008778:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800877c:	b672      	cpsid	i
 800877e:	f383 8811 	msr	BASEPRI, r3
 8008782:	f3bf 8f6f 	isb	sy
 8008786:	f3bf 8f4f 	dsb	sy
 800878a:	b662      	cpsie	i
 800878c:	e7fe      	b.n	800878c <vPortFree+0x28>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800878e:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008792:	b151      	cbz	r1, 80087aa <vPortFree+0x46>
 8008794:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008798:	b672      	cpsid	i
 800879a:	f383 8811 	msr	BASEPRI, r3
 800879e:	f3bf 8f6f 	isb	sy
 80087a2:	f3bf 8f4f 	dsb	sy
 80087a6:	b662      	cpsie	i
 80087a8:	e7fe      	b.n	80087a8 <vPortFree+0x44>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80087aa:	ea23 0302 	bic.w	r3, r3, r2
 80087ae:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80087b2:	f001 f925 	bl	8009a00 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80087b6:	4a08      	ldr	r2, [pc, #32]	@ (80087d8 <vPortFree+0x74>)
 80087b8:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80087bc:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80087c0:	6811      	ldr	r1, [r2, #0]
 80087c2:	440b      	add	r3, r1
 80087c4:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80087c6:	f7ff ff11 	bl	80085ec <prvInsertBlockIntoFreeList>
}
 80087ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 80087ce:	f001 b9bd 	b.w	8009b4c <xTaskResumeAll>
}
 80087d2:	bd10      	pop	{r4, pc}
 80087d4:	20002520 	.word	0x20002520
 80087d8:	20002528 	.word	0x20002528

080087dc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80087dc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80087e0:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80087e4:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80087e6:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80087e8:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80087ec:	2300      	movs	r3, #0
 80087ee:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80087f0:	4770      	bx	lr

080087f2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80087f2:	2300      	movs	r3, #0
 80087f4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80087f6:	4770      	bx	lr

080087f8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80087f8:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80087fa:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 80087fc:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80087fe:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008800:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008802:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008804:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008806:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008808:	3301      	adds	r3, #1
 800880a:	6003      	str	r3, [r0, #0]
}
 800880c:	4770      	bx	lr

0800880e <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800880e:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008810:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008812:	1c63      	adds	r3, r4, #1
 8008814:	d10a      	bne.n	800882c <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008816:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008818:	685a      	ldr	r2, [r3, #4]
 800881a:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800881c:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800881e:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008820:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008822:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008824:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008826:	3301      	adds	r3, #1
 8008828:	6003      	str	r3, [r0, #0]
}
 800882a:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800882c:	f100 0208 	add.w	r2, r0, #8
 8008830:	4613      	mov	r3, r2
 8008832:	6852      	ldr	r2, [r2, #4]
 8008834:	6815      	ldr	r5, [r2, #0]
 8008836:	42a5      	cmp	r5, r4
 8008838:	d9fa      	bls.n	8008830 <vListInsert+0x22>
 800883a:	e7ed      	b.n	8008818 <vListInsert+0xa>

0800883c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800883c:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800883e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8008842:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008844:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008846:	6859      	ldr	r1, [r3, #4]
 8008848:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800884a:	bf08      	it	eq
 800884c:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800884e:	2200      	movs	r2, #0
 8008850:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008852:	681a      	ldr	r2, [r3, #0]
 8008854:	3a01      	subs	r2, #1
 8008856:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008858:	6818      	ldr	r0, [r3, #0]
}
 800885a:	4770      	bx	lr

0800885c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800885c:	4808      	ldr	r0, [pc, #32]	@ (8008880 <prvPortStartFirstTask+0x24>)
 800885e:	6800      	ldr	r0, [r0, #0]
 8008860:	6800      	ldr	r0, [r0, #0]
 8008862:	f380 8808 	msr	MSP, r0
 8008866:	f04f 0000 	mov.w	r0, #0
 800886a:	f380 8814 	msr	CONTROL, r0
 800886e:	b662      	cpsie	i
 8008870:	b661      	cpsie	f
 8008872:	f3bf 8f4f 	dsb	sy
 8008876:	f3bf 8f6f 	isb	sy
 800887a:	df00      	svc	0
 800887c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800887e:	0000      	.short	0x0000
 8008880:	e000ed08 	.word	0xe000ed08

08008884 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008884:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8008894 <vPortEnableVFP+0x10>
 8008888:	6801      	ldr	r1, [r0, #0]
 800888a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800888e:	6001      	str	r1, [r0, #0]
 8008890:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008892:	0000      	.short	0x0000
 8008894:	e000ed88 	.word	0xe000ed88

08008898 <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
 8008898:	2300      	movs	r3, #0
{
 800889a:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800889c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800889e:	4b0f      	ldr	r3, [pc, #60]	@ (80088dc <prvTaskExitError+0x44>)
 80088a0:	681b      	ldr	r3, [r3, #0]
 80088a2:	3301      	adds	r3, #1
 80088a4:	d00a      	beq.n	80088bc <prvTaskExitError+0x24>
 80088a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088aa:	b672      	cpsid	i
 80088ac:	f383 8811 	msr	BASEPRI, r3
 80088b0:	f3bf 8f6f 	isb	sy
 80088b4:	f3bf 8f4f 	dsb	sy
 80088b8:	b662      	cpsie	i
 80088ba:	e7fe      	b.n	80088ba <prvTaskExitError+0x22>
 80088bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088c0:	b672      	cpsid	i
 80088c2:	f383 8811 	msr	BASEPRI, r3
 80088c6:	f3bf 8f6f 	isb	sy
 80088ca:	f3bf 8f4f 	dsb	sy
 80088ce:	b662      	cpsie	i
	while( ulDummy == 0 )
 80088d0:	9b01      	ldr	r3, [sp, #4]
 80088d2:	2b00      	cmp	r3, #0
 80088d4:	d0fc      	beq.n	80088d0 <prvTaskExitError+0x38>
}
 80088d6:	b002      	add	sp, #8
 80088d8:	4770      	bx	lr
 80088da:	bf00      	nop
 80088dc:	20000040 	.word	0x20000040

080088e0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80088e0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80088e4:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80088e8:	f840 2c20 	str.w	r2, [r0, #-32]
}
 80088ec:	3844      	subs	r0, #68	@ 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80088ee:	6403      	str	r3, [r0, #64]	@ 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80088f0:	4b03      	ldr	r3, [pc, #12]	@ (8008900 <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80088f2:	63c1      	str	r1, [r0, #60]	@ 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80088f4:	6383      	str	r3, [r0, #56]	@ 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80088f6:	f06f 0302 	mvn.w	r3, #2
 80088fa:	6203      	str	r3, [r0, #32]
}
 80088fc:	4770      	bx	lr
 80088fe:	bf00      	nop
 8008900:	08008899 	.word	0x08008899
	...

08008910 <SVC_Handler>:
	__asm volatile (
 8008910:	4b07      	ldr	r3, [pc, #28]	@ (8008930 <pxCurrentTCBConst2>)
 8008912:	6819      	ldr	r1, [r3, #0]
 8008914:	6808      	ldr	r0, [r1, #0]
 8008916:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800891a:	f380 8809 	msr	PSP, r0
 800891e:	f3bf 8f6f 	isb	sy
 8008922:	f04f 0000 	mov.w	r0, #0
 8008926:	f380 8811 	msr	BASEPRI, r0
 800892a:	4770      	bx	lr
 800892c:	f3af 8000 	nop.w

08008930 <pxCurrentTCBConst2>:
 8008930:	20014f70 	.word	0x20014f70

08008934 <vPortEnterCritical>:
 8008934:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008938:	b672      	cpsid	i
 800893a:	f383 8811 	msr	BASEPRI, r3
 800893e:	f3bf 8f6f 	isb	sy
 8008942:	f3bf 8f4f 	dsb	sy
 8008946:	b662      	cpsie	i
	uxCriticalNesting++;
 8008948:	4a0b      	ldr	r2, [pc, #44]	@ (8008978 <vPortEnterCritical+0x44>)
 800894a:	6813      	ldr	r3, [r2, #0]
 800894c:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800894e:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008950:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008952:	d110      	bne.n	8008976 <vPortEnterCritical+0x42>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008954:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008958:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 800895c:	b2db      	uxtb	r3, r3
 800895e:	b153      	cbz	r3, 8008976 <vPortEnterCritical+0x42>
 8008960:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008964:	b672      	cpsid	i
 8008966:	f383 8811 	msr	BASEPRI, r3
 800896a:	f3bf 8f6f 	isb	sy
 800896e:	f3bf 8f4f 	dsb	sy
 8008972:	b662      	cpsie	i
 8008974:	e7fe      	b.n	8008974 <vPortEnterCritical+0x40>
}
 8008976:	4770      	bx	lr
 8008978:	20000040 	.word	0x20000040

0800897c <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800897c:	4a09      	ldr	r2, [pc, #36]	@ (80089a4 <vPortExitCritical+0x28>)
 800897e:	6813      	ldr	r3, [r2, #0]
 8008980:	b953      	cbnz	r3, 8008998 <vPortExitCritical+0x1c>
 8008982:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008986:	b672      	cpsid	i
 8008988:	f383 8811 	msr	BASEPRI, r3
 800898c:	f3bf 8f6f 	isb	sy
 8008990:	f3bf 8f4f 	dsb	sy
 8008994:	b662      	cpsie	i
 8008996:	e7fe      	b.n	8008996 <vPortExitCritical+0x1a>
	uxCriticalNesting--;
 8008998:	3b01      	subs	r3, #1
 800899a:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800899c:	b90b      	cbnz	r3, 80089a2 <vPortExitCritical+0x26>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800899e:	f383 8811 	msr	BASEPRI, r3
}
 80089a2:	4770      	bx	lr
 80089a4:	20000040 	.word	0x20000040
	...

080089b0 <PendSV_Handler>:
	__asm volatile
 80089b0:	f3ef 8009 	mrs	r0, PSP
 80089b4:	f3bf 8f6f 	isb	sy
 80089b8:	4b15      	ldr	r3, [pc, #84]	@ (8008a10 <pxCurrentTCBConst>)
 80089ba:	681a      	ldr	r2, [r3, #0]
 80089bc:	f01e 0f10 	tst.w	lr, #16
 80089c0:	bf08      	it	eq
 80089c2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80089c6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80089ca:	6010      	str	r0, [r2, #0]
 80089cc:	e92d 0009 	stmdb	sp!, {r0, r3}
 80089d0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 80089d4:	b672      	cpsid	i
 80089d6:	f380 8811 	msr	BASEPRI, r0
 80089da:	f3bf 8f4f 	dsb	sy
 80089de:	f3bf 8f6f 	isb	sy
 80089e2:	b662      	cpsie	i
 80089e4:	f001 f9bc 	bl	8009d60 <vTaskSwitchContext>
 80089e8:	f04f 0000 	mov.w	r0, #0
 80089ec:	f380 8811 	msr	BASEPRI, r0
 80089f0:	bc09      	pop	{r0, r3}
 80089f2:	6819      	ldr	r1, [r3, #0]
 80089f4:	6808      	ldr	r0, [r1, #0]
 80089f6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80089fa:	f01e 0f10 	tst.w	lr, #16
 80089fe:	bf08      	it	eq
 8008a00:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008a04:	f380 8809 	msr	PSP, r0
 8008a08:	f3bf 8f6f 	isb	sy
 8008a0c:	4770      	bx	lr
 8008a0e:	bf00      	nop

08008a10 <pxCurrentTCBConst>:
 8008a10:	20014f70 	.word	0x20014f70

08008a14 <SysTick_Handler>:
{
 8008a14:	b508      	push	{r3, lr}
	__asm volatile
 8008a16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a1a:	b672      	cpsid	i
 8008a1c:	f383 8811 	msr	BASEPRI, r3
 8008a20:	f3bf 8f6f 	isb	sy
 8008a24:	f3bf 8f4f 	dsb	sy
 8008a28:	b662      	cpsie	i
		if( xTaskIncrementTick() != pdFALSE )
 8008a2a:	f000 fff7 	bl	8009a1c <xTaskIncrementTick>
 8008a2e:	b128      	cbz	r0, 8008a3c <SysTick_Handler+0x28>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008a30:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008a34:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008a38:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8008a3c:	2300      	movs	r3, #0
 8008a3e:	f383 8811 	msr	BASEPRI, r3
}
 8008a42:	bd08      	pop	{r3, pc}

08008a44 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008a44:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8008a48:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008a4a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008a4e:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008a50:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008a52:	4b04      	ldr	r3, [pc, #16]	@ (8008a64 <vPortSetupTimerInterrupt+0x20>)
 8008a54:	681b      	ldr	r3, [r3, #0]
 8008a56:	fbb3 f3f1 	udiv	r3, r3, r1
 8008a5a:	3b01      	subs	r3, #1
 8008a5c:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008a5e:	2307      	movs	r3, #7
 8008a60:	6113      	str	r3, [r2, #16]
}
 8008a62:	4770      	bx	lr
 8008a64:	2000000c 	.word	0x2000000c

08008a68 <xPortStartScheduler>:
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008a68:	4b2c      	ldr	r3, [pc, #176]	@ (8008b1c <xPortStartScheduler+0xb4>)
{
 8008a6a:	b537      	push	{r0, r1, r2, r4, r5, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008a6c:	781a      	ldrb	r2, [r3, #0]
 8008a6e:	b2d2      	uxtb	r2, r2
 8008a70:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008a72:	22ff      	movs	r2, #255	@ 0xff
 8008a74:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008a76:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008a78:	4a29      	ldr	r2, [pc, #164]	@ (8008b20 <xPortStartScheduler+0xb8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008a7a:	b2db      	uxtb	r3, r3
 8008a7c:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008a80:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008a84:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8008a88:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008a8a:	2307      	movs	r3, #7
 8008a8c:	4a25      	ldr	r2, [pc, #148]	@ (8008b24 <xPortStartScheduler+0xbc>)
 8008a8e:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008a90:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 8008a94:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008a96:	0609      	lsls	r1, r1, #24
 8008a98:	d40c      	bmi.n	8008ab4 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008a9a:	2b03      	cmp	r3, #3
 8008a9c:	d013      	beq.n	8008ac6 <xPortStartScheduler+0x5e>
	__asm volatile
 8008a9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008aa2:	b672      	cpsid	i
 8008aa4:	f383 8811 	msr	BASEPRI, r3
 8008aa8:	f3bf 8f6f 	isb	sy
 8008aac:	f3bf 8f4f 	dsb	sy
 8008ab0:	b662      	cpsie	i
 8008ab2:	e7fe      	b.n	8008ab2 <xPortStartScheduler+0x4a>
			ulMaxPRIGROUPValue--;
 8008ab4:	3b01      	subs	r3, #1
 8008ab6:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008ab8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008abc:	005b      	lsls	r3, r3, #1
 8008abe:	b2db      	uxtb	r3, r3
 8008ac0:	f88d 3003 	strb.w	r3, [sp, #3]
 8008ac4:	e7e4      	b.n	8008a90 <xPortStartScheduler+0x28>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008ac6:	f44f 7340 	mov.w	r3, #768	@ 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008aca:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
	uxCriticalNesting = 0;
 8008ace:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008ad0:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008ad2:	9b01      	ldr	r3, [sp, #4]
 8008ad4:	4a11      	ldr	r2, [pc, #68]	@ (8008b1c <xPortStartScheduler+0xb4>)
 8008ad6:	b2db      	uxtb	r3, r3
 8008ad8:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008ada:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8008ade:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8008ae2:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008ae6:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8008aea:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8008aee:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8008af2:	f7ff ffa7 	bl	8008a44 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008af6:	4b0c      	ldr	r3, [pc, #48]	@ (8008b28 <xPortStartScheduler+0xc0>)
 8008af8:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008afa:	f7ff fec3 	bl	8008884 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008afe:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8008b02:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8008b06:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 8008b0a:	f7ff fea7 	bl	800885c <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008b0e:	f001 f927 	bl	8009d60 <vTaskSwitchContext>
}
 8008b12:	4628      	mov	r0, r5
	prvTaskExitError();
 8008b14:	f7ff fec0 	bl	8008898 <prvTaskExitError>
}
 8008b18:	b003      	add	sp, #12
 8008b1a:	bd30      	pop	{r4, r5, pc}
 8008b1c:	e000e400 	.word	0xe000e400
 8008b20:	20014a34 	.word	0x20014a34
 8008b24:	20014a30 	.word	0x20014a30
 8008b28:	20000040 	.word	0x20000040

08008b2c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008b2c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008b30:	2b0f      	cmp	r3, #15
 8008b32:	d910      	bls.n	8008b56 <vPortValidateInterruptPriority+0x2a>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008b34:	4a13      	ldr	r2, [pc, #76]	@ (8008b84 <vPortValidateInterruptPriority+0x58>)
 8008b36:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008b38:	4a13      	ldr	r2, [pc, #76]	@ (8008b88 <vPortValidateInterruptPriority+0x5c>)
 8008b3a:	7812      	ldrb	r2, [r2, #0]
 8008b3c:	429a      	cmp	r2, r3
 8008b3e:	d90a      	bls.n	8008b56 <vPortValidateInterruptPriority+0x2a>
 8008b40:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b44:	b672      	cpsid	i
 8008b46:	f383 8811 	msr	BASEPRI, r3
 8008b4a:	f3bf 8f6f 	isb	sy
 8008b4e:	f3bf 8f4f 	dsb	sy
 8008b52:	b662      	cpsie	i
 8008b54:	e7fe      	b.n	8008b54 <vPortValidateInterruptPriority+0x28>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008b56:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008b5a:	4a0c      	ldr	r2, [pc, #48]	@ (8008b8c <vPortValidateInterruptPriority+0x60>)
 8008b5c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8008b60:	6812      	ldr	r2, [r2, #0]
 8008b62:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8008b66:	4293      	cmp	r3, r2
 8008b68:	d90a      	bls.n	8008b80 <vPortValidateInterruptPriority+0x54>
 8008b6a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b6e:	b672      	cpsid	i
 8008b70:	f383 8811 	msr	BASEPRI, r3
 8008b74:	f3bf 8f6f 	isb	sy
 8008b78:	f3bf 8f4f 	dsb	sy
 8008b7c:	b662      	cpsie	i
 8008b7e:	e7fe      	b.n	8008b7e <vPortValidateInterruptPriority+0x52>
	}
 8008b80:	4770      	bx	lr
 8008b82:	bf00      	nop
 8008b84:	e000e3f0 	.word	0xe000e3f0
 8008b88:	20014a34 	.word	0x20014a34
 8008b8c:	20014a30 	.word	0x20014a30

08008b90 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008b90:	b510      	push	{r4, lr}
 8008b92:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008b94:	f7ff fece 	bl	8008934 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008b98:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008b9a:	f7ff feef 	bl	800897c <vPortExitCritical>

	return xReturn;
}
 8008b9e:	fab4 f084 	clz	r0, r4
 8008ba2:	0940      	lsrs	r0, r0, #5
 8008ba4:	bd10      	pop	{r4, pc}

08008ba6 <prvCopyDataToQueue>:
{
 8008ba6:	b570      	push	{r4, r5, r6, lr}
 8008ba8:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008baa:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
 8008bac:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008bae:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008bb0:	b942      	cbnz	r2, 8008bc4 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008bb2:	6806      	ldr	r6, [r0, #0]
 8008bb4:	b99e      	cbnz	r6, 8008bde <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008bb6:	6880      	ldr	r0, [r0, #8]
 8008bb8:	f001 fa38 	bl	800a02c <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008bbc:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008bbe:	3501      	adds	r5, #1
 8008bc0:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8008bc2:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008bc4:	b96e      	cbnz	r6, 8008be2 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008bc6:	6840      	ldr	r0, [r0, #4]
 8008bc8:	f016 fac3 	bl	801f152 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008bcc:	6863      	ldr	r3, [r4, #4]
 8008bce:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008bd0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008bd2:	68a2      	ldr	r2, [r4, #8]
 8008bd4:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008bd6:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008bd8:	bf24      	itt	cs
 8008bda:	6823      	ldrcs	r3, [r4, #0]
 8008bdc:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8008bde:	2000      	movs	r0, #0
 8008be0:	e7ed      	b.n	8008bbe <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008be2:	68c0      	ldr	r0, [r0, #12]
 8008be4:	f016 fab5 	bl	801f152 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008be8:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008bea:	68e3      	ldr	r3, [r4, #12]
 8008bec:	4251      	negs	r1, r2
 8008bee:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008bf0:	6822      	ldr	r2, [r4, #0]
 8008bf2:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008bf4:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008bf6:	bf3e      	ittt	cc
 8008bf8:	68a3      	ldrcc	r3, [r4, #8]
 8008bfa:	185b      	addcc	r3, r3, r1
 8008bfc:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008bfe:	2e02      	cmp	r6, #2
 8008c00:	d1ed      	bne.n	8008bde <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008c02:	b10d      	cbz	r5, 8008c08 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8008c04:	3d01      	subs	r5, #1
 8008c06:	e7ea      	b.n	8008bde <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8008c08:	4628      	mov	r0, r5
 8008c0a:	e7d8      	b.n	8008bbe <prvCopyDataToQueue+0x18>

08008c0c <prvCopyDataFromQueue>:
{
 8008c0c:	4603      	mov	r3, r0
 8008c0e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008c10:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8008c12:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008c14:	b162      	cbz	r2, 8008c30 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008c16:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008c18:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008c1a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008c1c:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008c1e:	60dc      	str	r4, [r3, #12]
}
 8008c20:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008c24:	bf24      	itt	cs
 8008c26:	6819      	ldrcs	r1, [r3, #0]
 8008c28:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008c2a:	68d9      	ldr	r1, [r3, #12]
 8008c2c:	f016 ba91 	b.w	801f152 <memcpy>
}
 8008c30:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008c34:	4770      	bx	lr

08008c36 <prvUnlockQueue>:
{
 8008c36:	b570      	push	{r4, r5, r6, lr}
 8008c38:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008c3a:	f7ff fe7b 	bl	8008934 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008c3e:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008c42:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008c46:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008c48:	2d00      	cmp	r5, #0
 8008c4a:	dc14      	bgt.n	8008c76 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008c4c:	23ff      	movs	r3, #255	@ 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008c4e:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 8008c52:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8008c56:	f7ff fe91 	bl	800897c <vPortExitCritical>
	taskENTER_CRITICAL();
 8008c5a:	f7ff fe6b 	bl	8008934 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008c5e:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
 8008c62:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008c64:	2d00      	cmp	r5, #0
 8008c66:	dc12      	bgt.n	8008c8e <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008c68:	23ff      	movs	r3, #255	@ 0xff
 8008c6a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8008c6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008c72:	f7ff be83 	b.w	800897c <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008c76:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008c78:	2b00      	cmp	r3, #0
 8008c7a:	d0e7      	beq.n	8008c4c <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008c7c:	4630      	mov	r0, r6
 8008c7e:	f001 f8f1 	bl	8009e64 <xTaskRemoveFromEventList>
 8008c82:	b108      	cbz	r0, 8008c88 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008c84:	f001 f97e 	bl	8009f84 <vTaskMissedYield>
			--cTxLock;
 8008c88:	3d01      	subs	r5, #1
 8008c8a:	b26d      	sxtb	r5, r5
 8008c8c:	e7dc      	b.n	8008c48 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008c8e:	6923      	ldr	r3, [r4, #16]
 8008c90:	2b00      	cmp	r3, #0
 8008c92:	d0e9      	beq.n	8008c68 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008c94:	4630      	mov	r0, r6
 8008c96:	f001 f8e5 	bl	8009e64 <xTaskRemoveFromEventList>
 8008c9a:	b108      	cbz	r0, 8008ca0 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8008c9c:	f001 f972 	bl	8009f84 <vTaskMissedYield>
				--cRxLock;
 8008ca0:	3d01      	subs	r5, #1
 8008ca2:	b26d      	sxtb	r5, r5
 8008ca4:	e7de      	b.n	8008c64 <prvUnlockQueue+0x2e>

08008ca6 <xQueueGenericReset>:
{
 8008ca6:	b538      	push	{r3, r4, r5, lr}
 8008ca8:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008caa:	4604      	mov	r4, r0
 8008cac:	b950      	cbnz	r0, 8008cc4 <xQueueGenericReset+0x1e>
 8008cae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008cb2:	b672      	cpsid	i
 8008cb4:	f383 8811 	msr	BASEPRI, r3
 8008cb8:	f3bf 8f6f 	isb	sy
 8008cbc:	f3bf 8f4f 	dsb	sy
 8008cc0:	b662      	cpsie	i
 8008cc2:	e7fe      	b.n	8008cc2 <xQueueGenericReset+0x1c>
	taskENTER_CRITICAL();
 8008cc4:	f7ff fe36 	bl	8008934 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008cc8:	6822      	ldr	r2, [r4, #0]
 8008cca:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8008cce:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008cd0:	434b      	muls	r3, r1
 8008cd2:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008cd4:	1a5b      	subs	r3, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008cd6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008cd8:	441a      	add	r2, r3
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008cda:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8008cdc:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008cde:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008ce0:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8008ce2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008ce6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 8008cea:	b9a5      	cbnz	r5, 8008d16 <xQueueGenericReset+0x70>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008cec:	6923      	ldr	r3, [r4, #16]
 8008cee:	b173      	cbz	r3, 8008d0e <xQueueGenericReset+0x68>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008cf0:	f104 0010 	add.w	r0, r4, #16
 8008cf4:	f001 f8b6 	bl	8009e64 <xTaskRemoveFromEventList>
 8008cf8:	b148      	cbz	r0, 8008d0e <xQueueGenericReset+0x68>
					queueYIELD_IF_USING_PREEMPTION();
 8008cfa:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008cfe:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008d02:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008d06:	f3bf 8f4f 	dsb	sy
 8008d0a:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8008d0e:	f7ff fe35 	bl	800897c <vPortExitCritical>
}
 8008d12:	2001      	movs	r0, #1
 8008d14:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008d16:	f104 0010 	add.w	r0, r4, #16
 8008d1a:	f7ff fd5f 	bl	80087dc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8008d1e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008d22:	f7ff fd5b 	bl	80087dc <vListInitialise>
 8008d26:	e7f2      	b.n	8008d0e <xQueueGenericReset+0x68>

08008d28 <xQueueGenericCreateStatic.part.0>:
	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType )
 8008d28:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008d2a:	460d      	mov	r5, r1
		configASSERT( pxStaticQueue != NULL );
 8008d2c:	461c      	mov	r4, r3
 8008d2e:	b953      	cbnz	r3, 8008d46 <xQueueGenericCreateStatic.part.0+0x1e>
 8008d30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d34:	b672      	cpsid	i
 8008d36:	f383 8811 	msr	BASEPRI, r3
 8008d3a:	f3bf 8f6f 	isb	sy
 8008d3e:	f3bf 8f4f 	dsb	sy
 8008d42:	b662      	cpsie	i
 8008d44:	e7fe      	b.n	8008d44 <xQueueGenericCreateStatic.part.0+0x1c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008d46:	b15a      	cbz	r2, 8008d60 <xQueueGenericCreateStatic.part.0+0x38>
 8008d48:	b9b1      	cbnz	r1, 8008d78 <xQueueGenericCreateStatic.part.0+0x50>
 8008d4a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d4e:	b672      	cpsid	i
 8008d50:	f383 8811 	msr	BASEPRI, r3
 8008d54:	f3bf 8f6f 	isb	sy
 8008d58:	f3bf 8f4f 	dsb	sy
 8008d5c:	b662      	cpsie	i
 8008d5e:	e7fe      	b.n	8008d5e <xQueueGenericCreateStatic.part.0+0x36>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008d60:	b151      	cbz	r1, 8008d78 <xQueueGenericCreateStatic.part.0+0x50>
 8008d62:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d66:	b672      	cpsid	i
 8008d68:	f383 8811 	msr	BASEPRI, r3
 8008d6c:	f3bf 8f6f 	isb	sy
 8008d70:	f3bf 8f4f 	dsb	sy
 8008d74:	b662      	cpsie	i
 8008d76:	e7fe      	b.n	8008d76 <xQueueGenericCreateStatic.part.0+0x4e>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008d78:	2350      	movs	r3, #80	@ 0x50
 8008d7a:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008d7c:	9b01      	ldr	r3, [sp, #4]
 8008d7e:	2b50      	cmp	r3, #80	@ 0x50
 8008d80:	d00a      	beq.n	8008d98 <xQueueGenericCreateStatic.part.0+0x70>
 8008d82:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d86:	b672      	cpsid	i
 8008d88:	f383 8811 	msr	BASEPRI, r3
 8008d8c:	f3bf 8f6f 	isb	sy
 8008d90:	f3bf 8f4f 	dsb	sy
 8008d94:	b662      	cpsie	i
 8008d96:	e7fe      	b.n	8008d96 <xQueueGenericCreateStatic.part.0+0x6e>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008d98:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008d9a:	2d00      	cmp	r5, #0
 8008d9c:	bf08      	it	eq
 8008d9e:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8008da0:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008da2:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008da6:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8008da8:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008dac:	4620      	mov	r0, r4
 8008dae:	f7ff ff7a 	bl	8008ca6 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008db2:	f89d 3018 	ldrb.w	r3, [sp, #24]
	}
 8008db6:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8008db8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8008dbc:	b003      	add	sp, #12
 8008dbe:	bd30      	pop	{r4, r5, pc}

08008dc0 <xQueueGenericCreateStatic>:
	{
 8008dc0:	b410      	push	{r4}
 8008dc2:	f89d 4004 	ldrb.w	r4, [sp, #4]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008dc6:	b950      	cbnz	r0, 8008dde <xQueueGenericCreateStatic+0x1e>
 8008dc8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dcc:	b672      	cpsid	i
 8008dce:	f383 8811 	msr	BASEPRI, r3
 8008dd2:	f3bf 8f6f 	isb	sy
 8008dd6:	f3bf 8f4f 	dsb	sy
 8008dda:	b662      	cpsie	i
 8008ddc:	e7fe      	b.n	8008ddc <xQueueGenericCreateStatic+0x1c>
 8008dde:	9401      	str	r4, [sp, #4]
	}
 8008de0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008de4:	f7ff bfa0 	b.w	8008d28 <xQueueGenericCreateStatic.part.0>

08008de8 <xQueueGenericCreate>:
	{
 8008de8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008dea:	460d      	mov	r5, r1
 8008dec:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008dee:	4606      	mov	r6, r0
 8008df0:	b950      	cbnz	r0, 8008e08 <xQueueGenericCreate+0x20>
 8008df2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008df6:	b672      	cpsid	i
 8008df8:	f383 8811 	msr	BASEPRI, r3
 8008dfc:	f3bf 8f6f 	isb	sy
 8008e00:	f3bf 8f4f 	dsb	sy
 8008e04:	b662      	cpsie	i
 8008e06:	e7fe      	b.n	8008e06 <xQueueGenericCreate+0x1e>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008e08:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008e0a:	3050      	adds	r0, #80	@ 0x50
 8008e0c:	f7ff fc14 	bl	8008638 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008e10:	4604      	mov	r4, r0
 8008e12:	b170      	cbz	r0, 8008e32 <xQueueGenericCreate+0x4a>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008e14:	2300      	movs	r3, #0
 8008e16:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008e1a:	b165      	cbz	r5, 8008e36 <xQueueGenericCreate+0x4e>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008e1c:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008e20:	2101      	movs	r1, #1
 8008e22:	4620      	mov	r0, r4
 8008e24:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8008e26:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008e2a:	f7ff ff3c 	bl	8008ca6 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008e2e:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8008e32:	4620      	mov	r0, r4
 8008e34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008e36:	4603      	mov	r3, r0
 8008e38:	e7f2      	b.n	8008e20 <xQueueGenericCreate+0x38>

08008e3a <xQueueCreateCountingSemaphoreStatic>:
	{
 8008e3a:	b513      	push	{r0, r1, r4, lr}
 8008e3c:	4613      	mov	r3, r2
 8008e3e:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008e40:	b950      	cbnz	r0, 8008e58 <xQueueCreateCountingSemaphoreStatic+0x1e>
 8008e42:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e46:	b672      	cpsid	i
 8008e48:	f383 8811 	msr	BASEPRI, r3
 8008e4c:	f3bf 8f6f 	isb	sy
 8008e50:	f3bf 8f4f 	dsb	sy
 8008e54:	b662      	cpsie	i
 8008e56:	e7fe      	b.n	8008e56 <xQueueCreateCountingSemaphoreStatic+0x1c>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008e58:	4288      	cmp	r0, r1
 8008e5a:	d20a      	bcs.n	8008e72 <xQueueCreateCountingSemaphoreStatic+0x38>
 8008e5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e60:	b672      	cpsid	i
 8008e62:	f383 8811 	msr	BASEPRI, r3
 8008e66:	f3bf 8f6f 	isb	sy
 8008e6a:	f3bf 8f4f 	dsb	sy
 8008e6e:	b662      	cpsie	i
 8008e70:	e7fe      	b.n	8008e70 <xQueueCreateCountingSemaphoreStatic+0x36>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008e72:	2202      	movs	r2, #2
 8008e74:	9200      	str	r2, [sp, #0]
 8008e76:	2200      	movs	r2, #0
 8008e78:	4611      	mov	r1, r2
 8008e7a:	f7ff ffa1 	bl	8008dc0 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8008e7e:	b100      	cbz	r0, 8008e82 <xQueueCreateCountingSemaphoreStatic+0x48>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008e80:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008e82:	b002      	add	sp, #8
 8008e84:	bd10      	pop	{r4, pc}

08008e86 <xQueueCreateCountingSemaphore>:
	{
 8008e86:	b510      	push	{r4, lr}
 8008e88:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008e8a:	b950      	cbnz	r0, 8008ea2 <xQueueCreateCountingSemaphore+0x1c>
 8008e8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e90:	b672      	cpsid	i
 8008e92:	f383 8811 	msr	BASEPRI, r3
 8008e96:	f3bf 8f6f 	isb	sy
 8008e9a:	f3bf 8f4f 	dsb	sy
 8008e9e:	b662      	cpsie	i
 8008ea0:	e7fe      	b.n	8008ea0 <xQueueCreateCountingSemaphore+0x1a>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008ea2:	4288      	cmp	r0, r1
 8008ea4:	d20a      	bcs.n	8008ebc <xQueueCreateCountingSemaphore+0x36>
 8008ea6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008eaa:	b672      	cpsid	i
 8008eac:	f383 8811 	msr	BASEPRI, r3
 8008eb0:	f3bf 8f6f 	isb	sy
 8008eb4:	f3bf 8f4f 	dsb	sy
 8008eb8:	b662      	cpsie	i
 8008eba:	e7fe      	b.n	8008eba <xQueueCreateCountingSemaphore+0x34>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008ebc:	2202      	movs	r2, #2
 8008ebe:	2100      	movs	r1, #0
 8008ec0:	f7ff ff92 	bl	8008de8 <xQueueGenericCreate>
		if( xHandle != NULL )
 8008ec4:	b100      	cbz	r0, 8008ec8 <xQueueCreateCountingSemaphore+0x42>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008ec6:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008ec8:	bd10      	pop	{r4, pc}

08008eca <xQueueGenericSend>:
{
 8008eca:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008ece:	460f      	mov	r7, r1
 8008ed0:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8008ed2:	4604      	mov	r4, r0
{
 8008ed4:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 8008ed6:	b950      	cbnz	r0, 8008eee <xQueueGenericSend+0x24>
 8008ed8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008edc:	b672      	cpsid	i
 8008ede:	f383 8811 	msr	BASEPRI, r3
 8008ee2:	f3bf 8f6f 	isb	sy
 8008ee6:	f3bf 8f4f 	dsb	sy
 8008eea:	b662      	cpsie	i
 8008eec:	e7fe      	b.n	8008eec <xQueueGenericSend+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008eee:	b961      	cbnz	r1, 8008f0a <xQueueGenericSend+0x40>
 8008ef0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008ef2:	b153      	cbz	r3, 8008f0a <xQueueGenericSend+0x40>
 8008ef4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ef8:	b672      	cpsid	i
 8008efa:	f383 8811 	msr	BASEPRI, r3
 8008efe:	f3bf 8f6f 	isb	sy
 8008f02:	f3bf 8f4f 	dsb	sy
 8008f06:	b662      	cpsie	i
 8008f08:	e7fe      	b.n	8008f08 <xQueueGenericSend+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008f0a:	2e02      	cmp	r6, #2
 8008f0c:	d10d      	bne.n	8008f2a <xQueueGenericSend+0x60>
 8008f0e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008f10:	2b01      	cmp	r3, #1
 8008f12:	d00a      	beq.n	8008f2a <xQueueGenericSend+0x60>
 8008f14:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f18:	b672      	cpsid	i
 8008f1a:	f383 8811 	msr	BASEPRI, r3
 8008f1e:	f3bf 8f6f 	isb	sy
 8008f22:	f3bf 8f4f 	dsb	sy
 8008f26:	b662      	cpsie	i
 8008f28:	e7fe      	b.n	8008f28 <xQueueGenericSend+0x5e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008f2a:	f001 f831 	bl	8009f90 <xTaskGetSchedulerState>
 8008f2e:	4605      	mov	r5, r0
 8008f30:	b330      	cbz	r0, 8008f80 <xQueueGenericSend+0xb6>
 8008f32:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008f34:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008f38:	f7ff fcfc 	bl	8008934 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008f3c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008f3e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008f40:	429a      	cmp	r2, r3
 8008f42:	d301      	bcc.n	8008f48 <xQueueGenericSend+0x7e>
 8008f44:	2e02      	cmp	r6, #2
 8008f46:	d129      	bne.n	8008f9c <xQueueGenericSend+0xd2>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008f48:	4632      	mov	r2, r6
 8008f4a:	4639      	mov	r1, r7
 8008f4c:	4620      	mov	r0, r4
 8008f4e:	f7ff fe2a 	bl	8008ba6 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008f52:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008f54:	b11b      	cbz	r3, 8008f5e <xQueueGenericSend+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008f56:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008f5a:	f000 ff83 	bl	8009e64 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008f5e:	b148      	cbz	r0, 8008f74 <xQueueGenericSend+0xaa>
						queueYIELD_IF_USING_PREEMPTION();
 8008f60:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008f64:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008f68:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008f6c:	f3bf 8f4f 	dsb	sy
 8008f70:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008f74:	f7ff fd02 	bl	800897c <vPortExitCritical>
				return pdPASS;
 8008f78:	2001      	movs	r0, #1
}
 8008f7a:	b004      	add	sp, #16
 8008f7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008f80:	9b01      	ldr	r3, [sp, #4]
 8008f82:	2b00      	cmp	r3, #0
 8008f84:	d0d6      	beq.n	8008f34 <xQueueGenericSend+0x6a>
 8008f86:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f8a:	b672      	cpsid	i
 8008f8c:	f383 8811 	msr	BASEPRI, r3
 8008f90:	f3bf 8f6f 	isb	sy
 8008f94:	f3bf 8f4f 	dsb	sy
 8008f98:	b662      	cpsie	i
 8008f9a:	e7fe      	b.n	8008f9a <xQueueGenericSend+0xd0>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008f9c:	9b01      	ldr	r3, [sp, #4]
 8008f9e:	b91b      	cbnz	r3, 8008fa8 <xQueueGenericSend+0xde>
					taskEXIT_CRITICAL();
 8008fa0:	f7ff fcec 	bl	800897c <vPortExitCritical>
					return errQUEUE_FULL;
 8008fa4:	2000      	movs	r0, #0
 8008fa6:	e7e8      	b.n	8008f7a <xQueueGenericSend+0xb0>
				else if( xEntryTimeSet == pdFALSE )
 8008fa8:	b915      	cbnz	r5, 8008fb0 <xQueueGenericSend+0xe6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008faa:	a802      	add	r0, sp, #8
 8008fac:	f000 ff9e 	bl	8009eec <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008fb0:	f7ff fce4 	bl	800897c <vPortExitCritical>
		vTaskSuspendAll();
 8008fb4:	f000 fd24 	bl	8009a00 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008fb8:	f7ff fcbc 	bl	8008934 <vPortEnterCritical>
 8008fbc:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008fc0:	2bff      	cmp	r3, #255	@ 0xff
 8008fc2:	d101      	bne.n	8008fc8 <xQueueGenericSend+0xfe>
 8008fc4:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
 8008fc8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008fcc:	2bff      	cmp	r3, #255	@ 0xff
 8008fce:	d101      	bne.n	8008fd4 <xQueueGenericSend+0x10a>
 8008fd0:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
 8008fd4:	f7ff fcd2 	bl	800897c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008fd8:	a901      	add	r1, sp, #4
 8008fda:	a802      	add	r0, sp, #8
 8008fdc:	f000 ff92 	bl	8009f04 <xTaskCheckForTimeOut>
 8008fe0:	bb38      	cbnz	r0, 8009032 <xQueueGenericSend+0x168>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008fe2:	f7ff fca7 	bl	8008934 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008fe6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008fe8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008fea:	429a      	cmp	r2, r3
 8008fec:	d10e      	bne.n	800900c <xQueueGenericSend+0x142>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008fee:	f7ff fcc5 	bl	800897c <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008ff2:	9901      	ldr	r1, [sp, #4]
 8008ff4:	f104 0010 	add.w	r0, r4, #16
 8008ff8:	f000 fef8 	bl	8009dec <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008ffc:	4620      	mov	r0, r4
 8008ffe:	f7ff fe1a 	bl	8008c36 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009002:	f000 fda3 	bl	8009b4c <xTaskResumeAll>
 8009006:	b148      	cbz	r0, 800901c <xQueueGenericSend+0x152>
 8009008:	2501      	movs	r5, #1
 800900a:	e795      	b.n	8008f38 <xQueueGenericSend+0x6e>
	taskEXIT_CRITICAL();
 800900c:	f7ff fcb6 	bl	800897c <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009010:	4620      	mov	r0, r4
 8009012:	f7ff fe10 	bl	8008c36 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009016:	f000 fd99 	bl	8009b4c <xTaskResumeAll>
 800901a:	e7f5      	b.n	8009008 <xQueueGenericSend+0x13e>
					portYIELD_WITHIN_API();
 800901c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009020:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009024:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009028:	f3bf 8f4f 	dsb	sy
 800902c:	f3bf 8f6f 	isb	sy
 8009030:	e7ea      	b.n	8009008 <xQueueGenericSend+0x13e>
			prvUnlockQueue( pxQueue );
 8009032:	4620      	mov	r0, r4
 8009034:	f7ff fdff 	bl	8008c36 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009038:	f000 fd88 	bl	8009b4c <xTaskResumeAll>
			return errQUEUE_FULL;
 800903c:	e7b2      	b.n	8008fa4 <xQueueGenericSend+0xda>

0800903e <xQueueCreateMutexStatic>:
		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueType );
 800903e:	2200      	movs	r2, #0
	{
 8009040:	460b      	mov	r3, r1
 8009042:	b513      	push	{r0, r1, r4, lr}
 8009044:	4611      	mov	r1, r2
 8009046:	9000      	str	r0, [sp, #0]
 8009048:	2001      	movs	r0, #1
 800904a:	f7ff fe6d 	bl	8008d28 <xQueueGenericCreateStatic.part.0>
		if( pxNewQueue != NULL )
 800904e:	4604      	mov	r4, r0
 8009050:	b138      	cbz	r0, 8009062 <xQueueCreateMutexStatic+0x24>
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 8009052:	2300      	movs	r3, #0
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 8009054:	461a      	mov	r2, r3
 8009056:	4619      	mov	r1, r3
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 8009058:	6083      	str	r3, [r0, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 800905a:	6003      	str	r3, [r0, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 800905c:	60c3      	str	r3, [r0, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 800905e:	f7ff ff34 	bl	8008eca <xQueueGenericSend>
	}
 8009062:	4620      	mov	r0, r4
 8009064:	b002      	add	sp, #8
 8009066:	bd10      	pop	{r4, pc}

08009068 <xQueueCreateMutex>:
	{
 8009068:	b570      	push	{r4, r5, r6, lr}
 800906a:	4606      	mov	r6, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800906c:	2050      	movs	r0, #80	@ 0x50
 800906e:	f7ff fae3 	bl	8008638 <pvPortMalloc>
 8009072:	4604      	mov	r4, r0
		if( pxNewQueue != NULL )
 8009074:	b198      	cbz	r0, 800909e <xQueueCreateMutex+0x36>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8009076:	2500      	movs	r5, #0
	pxNewQueue->uxLength = uxQueueLength;
 8009078:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800907a:	6000      	str	r0, [r0, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800907c:	f880 5046 	strb.w	r5, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
 8009080:	e9c0 150f 	strd	r1, r5, [r0, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009084:	f7ff fe0f 	bl	8008ca6 <xQueueGenericReset>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 8009088:	462b      	mov	r3, r5
 800908a:	462a      	mov	r2, r5
 800908c:	4629      	mov	r1, r5
 800908e:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8009090:	f884 604c 	strb.w	r6, [r4, #76]	@ 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 8009094:	60a5      	str	r5, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 8009096:	6025      	str	r5, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 8009098:	60e5      	str	r5, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 800909a:	f7ff ff16 	bl	8008eca <xQueueGenericSend>
	}
 800909e:	4620      	mov	r0, r4
 80090a0:	bd70      	pop	{r4, r5, r6, pc}

080090a2 <xQueueGenericSendFromISR>:
{
 80090a2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80090a6:	4689      	mov	r9, r1
 80090a8:	4617      	mov	r7, r2
 80090aa:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 80090ac:	4604      	mov	r4, r0
 80090ae:	b950      	cbnz	r0, 80090c6 <xQueueGenericSendFromISR+0x24>
 80090b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090b4:	b672      	cpsid	i
 80090b6:	f383 8811 	msr	BASEPRI, r3
 80090ba:	f3bf 8f6f 	isb	sy
 80090be:	f3bf 8f4f 	dsb	sy
 80090c2:	b662      	cpsie	i
 80090c4:	e7fe      	b.n	80090c4 <xQueueGenericSendFromISR+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80090c6:	b961      	cbnz	r1, 80090e2 <xQueueGenericSendFromISR+0x40>
 80090c8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80090ca:	b153      	cbz	r3, 80090e2 <xQueueGenericSendFromISR+0x40>
 80090cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090d0:	b672      	cpsid	i
 80090d2:	f383 8811 	msr	BASEPRI, r3
 80090d6:	f3bf 8f6f 	isb	sy
 80090da:	f3bf 8f4f 	dsb	sy
 80090de:	b662      	cpsie	i
 80090e0:	e7fe      	b.n	80090e0 <xQueueGenericSendFromISR+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80090e2:	2e02      	cmp	r6, #2
 80090e4:	d10d      	bne.n	8009102 <xQueueGenericSendFromISR+0x60>
 80090e6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80090e8:	2b01      	cmp	r3, #1
 80090ea:	d00a      	beq.n	8009102 <xQueueGenericSendFromISR+0x60>
 80090ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090f0:	b672      	cpsid	i
 80090f2:	f383 8811 	msr	BASEPRI, r3
 80090f6:	f3bf 8f6f 	isb	sy
 80090fa:	f3bf 8f4f 	dsb	sy
 80090fe:	b662      	cpsie	i
 8009100:	e7fe      	b.n	8009100 <xQueueGenericSendFromISR+0x5e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009102:	f7ff fd13 	bl	8008b2c <vPortValidateInterruptPriority>
	__asm volatile
 8009106:	f3ef 8811 	mrs	r8, BASEPRI
 800910a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800910e:	b672      	cpsid	i
 8009110:	f383 8811 	msr	BASEPRI, r3
 8009114:	f3bf 8f6f 	isb	sy
 8009118:	f3bf 8f4f 	dsb	sy
 800911c:	b662      	cpsie	i
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800911e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009120:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009122:	429a      	cmp	r2, r3
 8009124:	d301      	bcc.n	800912a <xQueueGenericSendFromISR+0x88>
 8009126:	2e02      	cmp	r6, #2
 8009128:	d11d      	bne.n	8009166 <xQueueGenericSendFromISR+0xc4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800912a:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800912e:	4632      	mov	r2, r6
 8009130:	4649      	mov	r1, r9
 8009132:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 8009134:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009136:	f7ff fd36 	bl	8008ba6 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800913a:	1c6b      	adds	r3, r5, #1
 800913c:	d10e      	bne.n	800915c <xQueueGenericSendFromISR+0xba>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800913e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009140:	b13b      	cbz	r3, 8009152 <xQueueGenericSendFromISR+0xb0>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009142:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009146:	f000 fe8d 	bl	8009e64 <xTaskRemoveFromEventList>
 800914a:	b110      	cbz	r0, 8009152 <xQueueGenericSendFromISR+0xb0>
							if( pxHigherPriorityTaskWoken != NULL )
 800914c:	b10f      	cbz	r7, 8009152 <xQueueGenericSendFromISR+0xb0>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800914e:	2301      	movs	r3, #1
 8009150:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8009152:	2001      	movs	r0, #1
	__asm volatile
 8009154:	f388 8811 	msr	BASEPRI, r8
}
 8009158:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800915c:	3501      	adds	r5, #1
 800915e:	b26d      	sxtb	r5, r5
 8009160:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8009164:	e7f5      	b.n	8009152 <xQueueGenericSendFromISR+0xb0>
			xReturn = errQUEUE_FULL;
 8009166:	2000      	movs	r0, #0
 8009168:	e7f4      	b.n	8009154 <xQueueGenericSendFromISR+0xb2>

0800916a <xQueueGiveFromISR>:
{
 800916a:	b570      	push	{r4, r5, r6, lr}
 800916c:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800916e:	4604      	mov	r4, r0
 8009170:	b950      	cbnz	r0, 8009188 <xQueueGiveFromISR+0x1e>
	__asm volatile
 8009172:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009176:	b672      	cpsid	i
 8009178:	f383 8811 	msr	BASEPRI, r3
 800917c:	f3bf 8f6f 	isb	sy
 8009180:	f3bf 8f4f 	dsb	sy
 8009184:	b662      	cpsie	i
 8009186:	e7fe      	b.n	8009186 <xQueueGiveFromISR+0x1c>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009188:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800918a:	b153      	cbz	r3, 80091a2 <xQueueGiveFromISR+0x38>
 800918c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009190:	b672      	cpsid	i
 8009192:	f383 8811 	msr	BASEPRI, r3
 8009196:	f3bf 8f6f 	isb	sy
 800919a:	f3bf 8f4f 	dsb	sy
 800919e:	b662      	cpsie	i
 80091a0:	e7fe      	b.n	80091a0 <xQueueGiveFromISR+0x36>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80091a2:	6803      	ldr	r3, [r0, #0]
 80091a4:	b963      	cbnz	r3, 80091c0 <xQueueGiveFromISR+0x56>
 80091a6:	6883      	ldr	r3, [r0, #8]
 80091a8:	b153      	cbz	r3, 80091c0 <xQueueGiveFromISR+0x56>
 80091aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80091ae:	b672      	cpsid	i
 80091b0:	f383 8811 	msr	BASEPRI, r3
 80091b4:	f3bf 8f6f 	isb	sy
 80091b8:	f3bf 8f4f 	dsb	sy
 80091bc:	b662      	cpsie	i
 80091be:	e7fe      	b.n	80091be <xQueueGiveFromISR+0x54>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80091c0:	f7ff fcb4 	bl	8008b2c <vPortValidateInterruptPriority>
	__asm volatile
 80091c4:	f3ef 8611 	mrs	r6, BASEPRI
 80091c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80091cc:	b672      	cpsid	i
 80091ce:	f383 8811 	msr	BASEPRI, r3
 80091d2:	f3bf 8f6f 	isb	sy
 80091d6:	f3bf 8f4f 	dsb	sy
 80091da:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80091dc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80091de:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80091e0:	4293      	cmp	r3, r2
 80091e2:	d919      	bls.n	8009218 <xQueueGiveFromISR+0xae>
			const int8_t cTxLock = pxQueue->cTxLock;
 80091e4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80091e8:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80091ea:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80091ec:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80091ee:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 80091f0:	d10d      	bne.n	800920e <xQueueGiveFromISR+0xa4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80091f2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80091f4:	b13b      	cbz	r3, 8009206 <xQueueGiveFromISR+0x9c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80091f6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80091fa:	f000 fe33 	bl	8009e64 <xTaskRemoveFromEventList>
 80091fe:	b110      	cbz	r0, 8009206 <xQueueGiveFromISR+0x9c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009200:	b10d      	cbz	r5, 8009206 <xQueueGiveFromISR+0x9c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009202:	2301      	movs	r3, #1
 8009204:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 8009206:	2001      	movs	r0, #1
	__asm volatile
 8009208:	f386 8811 	msr	BASEPRI, r6
}
 800920c:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800920e:	3301      	adds	r3, #1
 8009210:	b25b      	sxtb	r3, r3
 8009212:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8009216:	e7f6      	b.n	8009206 <xQueueGiveFromISR+0x9c>
			xReturn = errQUEUE_FULL;
 8009218:	2000      	movs	r0, #0
 800921a:	e7f5      	b.n	8009208 <xQueueGiveFromISR+0x9e>

0800921c <xQueueReceive>:
{
 800921c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009220:	460e      	mov	r6, r1
	configASSERT( ( pxQueue ) );
 8009222:	4604      	mov	r4, r0
{
 8009224:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009226:	b950      	cbnz	r0, 800923e <xQueueReceive+0x22>
	__asm volatile
 8009228:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800922c:	b672      	cpsid	i
 800922e:	f383 8811 	msr	BASEPRI, r3
 8009232:	f3bf 8f6f 	isb	sy
 8009236:	f3bf 8f4f 	dsb	sy
 800923a:	b662      	cpsie	i
 800923c:	e7fe      	b.n	800923c <xQueueReceive+0x20>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800923e:	b961      	cbnz	r1, 800925a <xQueueReceive+0x3e>
 8009240:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009242:	b153      	cbz	r3, 800925a <xQueueReceive+0x3e>
 8009244:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009248:	b672      	cpsid	i
 800924a:	f383 8811 	msr	BASEPRI, r3
 800924e:	f3bf 8f6f 	isb	sy
 8009252:	f3bf 8f4f 	dsb	sy
 8009256:	b662      	cpsie	i
 8009258:	e7fe      	b.n	8009258 <xQueueReceive+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800925a:	f000 fe99 	bl	8009f90 <xTaskGetSchedulerState>
 800925e:	4605      	mov	r5, r0
 8009260:	b318      	cbz	r0, 80092aa <xQueueReceive+0x8e>
 8009262:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8009264:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8009268:	f7ff fb64 	bl	8008934 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800926c:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800926e:	b357      	cbz	r7, 80092c6 <xQueueReceive+0xaa>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009270:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009272:	4631      	mov	r1, r6
 8009274:	4620      	mov	r0, r4
 8009276:	f7ff fcc9 	bl	8008c0c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800927a:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800927c:	6923      	ldr	r3, [r4, #16]
 800927e:	b173      	cbz	r3, 800929e <xQueueReceive+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009280:	f104 0010 	add.w	r0, r4, #16
 8009284:	f000 fdee 	bl	8009e64 <xTaskRemoveFromEventList>
 8009288:	b148      	cbz	r0, 800929e <xQueueReceive+0x82>
						queueYIELD_IF_USING_PREEMPTION();
 800928a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800928e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009292:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009296:	f3bf 8f4f 	dsb	sy
 800929a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800929e:	f7ff fb6d 	bl	800897c <vPortExitCritical>
				return pdPASS;
 80092a2:	2001      	movs	r0, #1
}
 80092a4:	b004      	add	sp, #16
 80092a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80092aa:	9b01      	ldr	r3, [sp, #4]
 80092ac:	2b00      	cmp	r3, #0
 80092ae:	d0d9      	beq.n	8009264 <xQueueReceive+0x48>
 80092b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092b4:	b672      	cpsid	i
 80092b6:	f383 8811 	msr	BASEPRI, r3
 80092ba:	f3bf 8f6f 	isb	sy
 80092be:	f3bf 8f4f 	dsb	sy
 80092c2:	b662      	cpsie	i
 80092c4:	e7fe      	b.n	80092c4 <xQueueReceive+0xa8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80092c6:	9b01      	ldr	r3, [sp, #4]
 80092c8:	b91b      	cbnz	r3, 80092d2 <xQueueReceive+0xb6>
					taskEXIT_CRITICAL();
 80092ca:	f7ff fb57 	bl	800897c <vPortExitCritical>
					return errQUEUE_EMPTY;
 80092ce:	2000      	movs	r0, #0
 80092d0:	e7e8      	b.n	80092a4 <xQueueReceive+0x88>
				else if( xEntryTimeSet == pdFALSE )
 80092d2:	b915      	cbnz	r5, 80092da <xQueueReceive+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80092d4:	a802      	add	r0, sp, #8
 80092d6:	f000 fe09 	bl	8009eec <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80092da:	f7ff fb4f 	bl	800897c <vPortExitCritical>
		vTaskSuspendAll();
 80092de:	f000 fb8f 	bl	8009a00 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80092e2:	f7ff fb27 	bl	8008934 <vPortEnterCritical>
 80092e6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80092ea:	2bff      	cmp	r3, #255	@ 0xff
 80092ec:	d101      	bne.n	80092f2 <xQueueReceive+0xd6>
 80092ee:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
 80092f2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80092f6:	2bff      	cmp	r3, #255	@ 0xff
 80092f8:	d101      	bne.n	80092fe <xQueueReceive+0xe2>
 80092fa:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
 80092fe:	f7ff fb3d 	bl	800897c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009302:	a901      	add	r1, sp, #4
 8009304:	a802      	add	r0, sp, #8
 8009306:	f000 fdfd 	bl	8009f04 <xTaskCheckForTimeOut>
 800930a:	bb00      	cbnz	r0, 800934e <xQueueReceive+0x132>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800930c:	4620      	mov	r0, r4
 800930e:	f7ff fc3f 	bl	8008b90 <prvIsQueueEmpty>
 8009312:	b1b0      	cbz	r0, 8009342 <xQueueReceive+0x126>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009314:	9901      	ldr	r1, [sp, #4]
 8009316:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800931a:	f000 fd67 	bl	8009dec <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800931e:	4620      	mov	r0, r4
 8009320:	f7ff fc89 	bl	8008c36 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009324:	f000 fc12 	bl	8009b4c <xTaskResumeAll>
 8009328:	b948      	cbnz	r0, 800933e <xQueueReceive+0x122>
					portYIELD_WITHIN_API();
 800932a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800932e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009332:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009336:	f3bf 8f4f 	dsb	sy
 800933a:	f3bf 8f6f 	isb	sy
 800933e:	2501      	movs	r5, #1
 8009340:	e792      	b.n	8009268 <xQueueReceive+0x4c>
				prvUnlockQueue( pxQueue );
 8009342:	4620      	mov	r0, r4
 8009344:	f7ff fc77 	bl	8008c36 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009348:	f000 fc00 	bl	8009b4c <xTaskResumeAll>
 800934c:	e7f7      	b.n	800933e <xQueueReceive+0x122>
			prvUnlockQueue( pxQueue );
 800934e:	4620      	mov	r0, r4
 8009350:	f7ff fc71 	bl	8008c36 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009354:	f000 fbfa 	bl	8009b4c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009358:	4620      	mov	r0, r4
 800935a:	f7ff fc19 	bl	8008b90 <prvIsQueueEmpty>
 800935e:	2800      	cmp	r0, #0
 8009360:	d0ed      	beq.n	800933e <xQueueReceive+0x122>
 8009362:	e7b4      	b.n	80092ce <xQueueReceive+0xb2>

08009364 <xQueueSemaphoreTake>:
{
 8009364:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009366:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009368:	4604      	mov	r4, r0
{
 800936a:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800936c:	b950      	cbnz	r0, 8009384 <xQueueSemaphoreTake+0x20>
 800936e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009372:	b672      	cpsid	i
 8009374:	f383 8811 	msr	BASEPRI, r3
 8009378:	f3bf 8f6f 	isb	sy
 800937c:	f3bf 8f4f 	dsb	sy
 8009380:	b662      	cpsie	i
 8009382:	e7fe      	b.n	8009382 <xQueueSemaphoreTake+0x1e>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009384:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8009386:	b155      	cbz	r5, 800939e <xQueueSemaphoreTake+0x3a>
 8009388:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800938c:	b672      	cpsid	i
 800938e:	f383 8811 	msr	BASEPRI, r3
 8009392:	f3bf 8f6f 	isb	sy
 8009396:	f3bf 8f4f 	dsb	sy
 800939a:	b662      	cpsie	i
 800939c:	e7fe      	b.n	800939c <xQueueSemaphoreTake+0x38>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800939e:	f000 fdf7 	bl	8009f90 <xTaskGetSchedulerState>
 80093a2:	4606      	mov	r6, r0
 80093a4:	b320      	cbz	r0, 80093f0 <xQueueSemaphoreTake+0x8c>
 80093a6:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 80093a8:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 80093aa:	f7ff fac3 	bl	8008934 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80093ae:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80093b0:	b363      	cbz	r3, 800940c <xQueueSemaphoreTake+0xa8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80093b2:	3b01      	subs	r3, #1
 80093b4:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80093b6:	6823      	ldr	r3, [r4, #0]
 80093b8:	b913      	cbnz	r3, 80093c0 <xQueueSemaphoreTake+0x5c>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80093ba:	f000 fecf 	bl	800a15c <pvTaskIncrementMutexHeldCount>
 80093be:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80093c0:	6923      	ldr	r3, [r4, #16]
 80093c2:	b173      	cbz	r3, 80093e2 <xQueueSemaphoreTake+0x7e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80093c4:	f104 0010 	add.w	r0, r4, #16
 80093c8:	f000 fd4c 	bl	8009e64 <xTaskRemoveFromEventList>
 80093cc:	b148      	cbz	r0, 80093e2 <xQueueSemaphoreTake+0x7e>
						queueYIELD_IF_USING_PREEMPTION();
 80093ce:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80093d2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80093d6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80093da:	f3bf 8f4f 	dsb	sy
 80093de:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80093e2:	f7ff facb 	bl	800897c <vPortExitCritical>
				return pdPASS;
 80093e6:	2001      	movs	r0, #1
}
 80093e8:	b005      	add	sp, #20
 80093ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80093ec:	4635      	mov	r5, r6
 80093ee:	e7db      	b.n	80093a8 <xQueueSemaphoreTake+0x44>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80093f0:	9b01      	ldr	r3, [sp, #4]
 80093f2:	2b00      	cmp	r3, #0
 80093f4:	d0fa      	beq.n	80093ec <xQueueSemaphoreTake+0x88>
 80093f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093fa:	b672      	cpsid	i
 80093fc:	f383 8811 	msr	BASEPRI, r3
 8009400:	f3bf 8f6f 	isb	sy
 8009404:	f3bf 8f4f 	dsb	sy
 8009408:	b662      	cpsie	i
 800940a:	e7fe      	b.n	800940a <xQueueSemaphoreTake+0xa6>
				if( xTicksToWait == ( TickType_t ) 0 )
 800940c:	9b01      	ldr	r3, [sp, #4]
 800940e:	b963      	cbnz	r3, 800942a <xQueueSemaphoreTake+0xc6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8009410:	2d00      	cmp	r5, #0
 8009412:	d068      	beq.n	80094e6 <xQueueSemaphoreTake+0x182>
 8009414:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009418:	b672      	cpsid	i
 800941a:	f383 8811 	msr	BASEPRI, r3
 800941e:	f3bf 8f6f 	isb	sy
 8009422:	f3bf 8f4f 	dsb	sy
 8009426:	b662      	cpsie	i
 8009428:	e7fe      	b.n	8009428 <xQueueSemaphoreTake+0xc4>
				else if( xEntryTimeSet == pdFALSE )
 800942a:	b916      	cbnz	r6, 8009432 <xQueueSemaphoreTake+0xce>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800942c:	a802      	add	r0, sp, #8
 800942e:	f000 fd5d 	bl	8009eec <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009432:	f7ff faa3 	bl	800897c <vPortExitCritical>
		vTaskSuspendAll();
 8009436:	f000 fae3 	bl	8009a00 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800943a:	f7ff fa7b 	bl	8008934 <vPortEnterCritical>
 800943e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009442:	2bff      	cmp	r3, #255	@ 0xff
 8009444:	d101      	bne.n	800944a <xQueueSemaphoreTake+0xe6>
 8009446:	f884 7044 	strb.w	r7, [r4, #68]	@ 0x44
 800944a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800944e:	2bff      	cmp	r3, #255	@ 0xff
 8009450:	d101      	bne.n	8009456 <xQueueSemaphoreTake+0xf2>
 8009452:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8009456:	f7ff fa91 	bl	800897c <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800945a:	a901      	add	r1, sp, #4
 800945c:	a802      	add	r0, sp, #8
 800945e:	f000 fd51 	bl	8009f04 <xTaskCheckForTimeOut>
 8009462:	bb50      	cbnz	r0, 80094ba <xQueueSemaphoreTake+0x156>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009464:	4620      	mov	r0, r4
 8009466:	f7ff fb93 	bl	8008b90 <prvIsQueueEmpty>
 800946a:	b300      	cbz	r0, 80094ae <xQueueSemaphoreTake+0x14a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800946c:	6823      	ldr	r3, [r4, #0]
 800946e:	b93b      	cbnz	r3, 8009480 <xQueueSemaphoreTake+0x11c>
						taskENTER_CRITICAL();
 8009470:	f7ff fa60 	bl	8008934 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009474:	68a0      	ldr	r0, [r4, #8]
 8009476:	f000 fd9b 	bl	8009fb0 <xTaskPriorityInherit>
 800947a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800947c:	f7ff fa7e 	bl	800897c <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009480:	9901      	ldr	r1, [sp, #4]
 8009482:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009486:	f000 fcb1 	bl	8009dec <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800948a:	4620      	mov	r0, r4
 800948c:	f7ff fbd3 	bl	8008c36 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009490:	f000 fb5c 	bl	8009b4c <xTaskResumeAll>
 8009494:	b948      	cbnz	r0, 80094aa <xQueueSemaphoreTake+0x146>
					portYIELD_WITHIN_API();
 8009496:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800949a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800949e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80094a2:	f3bf 8f4f 	dsb	sy
 80094a6:	f3bf 8f6f 	isb	sy
 80094aa:	2601      	movs	r6, #1
 80094ac:	e77d      	b.n	80093aa <xQueueSemaphoreTake+0x46>
				prvUnlockQueue( pxQueue );
 80094ae:	4620      	mov	r0, r4
 80094b0:	f7ff fbc1 	bl	8008c36 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80094b4:	f000 fb4a 	bl	8009b4c <xTaskResumeAll>
 80094b8:	e7f7      	b.n	80094aa <xQueueSemaphoreTake+0x146>
			prvUnlockQueue( pxQueue );
 80094ba:	4620      	mov	r0, r4
 80094bc:	f7ff fbbb 	bl	8008c36 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80094c0:	f000 fb44 	bl	8009b4c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80094c4:	4620      	mov	r0, r4
 80094c6:	f7ff fb63 	bl	8008b90 <prvIsQueueEmpty>
 80094ca:	2800      	cmp	r0, #0
 80094cc:	d0ed      	beq.n	80094aa <xQueueSemaphoreTake+0x146>
					if( xInheritanceOccurred != pdFALSE )
 80094ce:	b165      	cbz	r5, 80094ea <xQueueSemaphoreTake+0x186>
						taskENTER_CRITICAL();
 80094d0:	f7ff fa30 	bl	8008934 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80094d4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80094d6:	b119      	cbz	r1, 80094e0 <xQueueSemaphoreTake+0x17c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80094d8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80094da:	6819      	ldr	r1, [r3, #0]
 80094dc:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80094e0:	68a0      	ldr	r0, [r4, #8]
 80094e2:	f000 fde9 	bl	800a0b8 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 80094e6:	f7ff fa49 	bl	800897c <vPortExitCritical>
					return errQUEUE_EMPTY;
 80094ea:	2000      	movs	r0, #0
 80094ec:	e77c      	b.n	80093e8 <xQueueSemaphoreTake+0x84>

080094ee <xQueueReceiveFromISR>:
{
 80094ee:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80094f2:	4689      	mov	r9, r1
 80094f4:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80094f6:	4604      	mov	r4, r0
 80094f8:	b950      	cbnz	r0, 8009510 <xQueueReceiveFromISR+0x22>
 80094fa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094fe:	b672      	cpsid	i
 8009500:	f383 8811 	msr	BASEPRI, r3
 8009504:	f3bf 8f6f 	isb	sy
 8009508:	f3bf 8f4f 	dsb	sy
 800950c:	b662      	cpsie	i
 800950e:	e7fe      	b.n	800950e <xQueueReceiveFromISR+0x20>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009510:	b961      	cbnz	r1, 800952c <xQueueReceiveFromISR+0x3e>
 8009512:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009514:	b153      	cbz	r3, 800952c <xQueueReceiveFromISR+0x3e>
 8009516:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800951a:	b672      	cpsid	i
 800951c:	f383 8811 	msr	BASEPRI, r3
 8009520:	f3bf 8f6f 	isb	sy
 8009524:	f3bf 8f4f 	dsb	sy
 8009528:	b662      	cpsie	i
 800952a:	e7fe      	b.n	800952a <xQueueReceiveFromISR+0x3c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800952c:	f7ff fafe 	bl	8008b2c <vPortValidateInterruptPriority>
	__asm volatile
 8009530:	f3ef 8711 	mrs	r7, BASEPRI
 8009534:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009538:	b672      	cpsid	i
 800953a:	f383 8811 	msr	BASEPRI, r3
 800953e:	f3bf 8f6f 	isb	sy
 8009542:	f3bf 8f4f 	dsb	sy
 8009546:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009548:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800954a:	b30d      	cbz	r5, 8009590 <xQueueReceiveFromISR+0xa2>
			const int8_t cRxLock = pxQueue->cRxLock;
 800954c:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009550:	4649      	mov	r1, r9
 8009552:	4620      	mov	r0, r4
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009554:	3d01      	subs	r5, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 8009556:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009558:	f7ff fb58 	bl	8008c0c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800955c:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 800955e:	1c73      	adds	r3, r6, #1
 8009560:	d111      	bne.n	8009586 <xQueueReceiveFromISR+0x98>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009562:	6923      	ldr	r3, [r4, #16]
 8009564:	b153      	cbz	r3, 800957c <xQueueReceiveFromISR+0x8e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009566:	f104 0010 	add.w	r0, r4, #16
 800956a:	f000 fc7b 	bl	8009e64 <xTaskRemoveFromEventList>
 800956e:	b128      	cbz	r0, 800957c <xQueueReceiveFromISR+0x8e>
						if( pxHigherPriorityTaskWoken != NULL )
 8009570:	f1b8 0f00 	cmp.w	r8, #0
 8009574:	d002      	beq.n	800957c <xQueueReceiveFromISR+0x8e>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009576:	2301      	movs	r3, #1
 8009578:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 800957c:	2001      	movs	r0, #1
	__asm volatile
 800957e:	f387 8811 	msr	BASEPRI, r7
}
 8009582:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009586:	3601      	adds	r6, #1
 8009588:	b276      	sxtb	r6, r6
 800958a:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 800958e:	e7f5      	b.n	800957c <xQueueReceiveFromISR+0x8e>
			xReturn = pdFAIL;
 8009590:	4628      	mov	r0, r5
 8009592:	e7f4      	b.n	800957e <xQueueReceiveFromISR+0x90>

08009594 <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009594:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009596:	4a07      	ldr	r2, [pc, #28]	@ (80095b4 <vQueueAddToRegistry+0x20>)
	{
 8009598:	b530      	push	{r4, r5, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800959a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800959e:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80095a2:	b91d      	cbnz	r5, 80095ac <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80095a4:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80095a8:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80095aa:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80095ac:	3301      	adds	r3, #1
 80095ae:	2b08      	cmp	r3, #8
 80095b0:	d1f3      	bne.n	800959a <vQueueAddToRegistry+0x6>
 80095b2:	e7fa      	b.n	80095aa <vQueueAddToRegistry+0x16>
 80095b4:	20014a38 	.word	0x20014a38

080095b8 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80095b8:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80095ba:	4a09      	ldr	r2, [pc, #36]	@ (80095e0 <vQueueUnregisterQueue+0x28>)
	{
 80095bc:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80095be:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 80095c2:	00dc      	lsls	r4, r3, #3
 80095c4:	4281      	cmp	r1, r0
 80095c6:	d106      	bne.n	80095d6 <vQueueUnregisterQueue+0x1e>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80095c8:	4a06      	ldr	r2, [pc, #24]	@ (80095e4 <vQueueUnregisterQueue+0x2c>)
 80095ca:	2100      	movs	r1, #0
 80095cc:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80095d0:	4422      	add	r2, r4
 80095d2:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80095d4:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80095d6:	3301      	adds	r3, #1
 80095d8:	2b08      	cmp	r3, #8
 80095da:	d1f0      	bne.n	80095be <vQueueUnregisterQueue+0x6>
 80095dc:	e7fa      	b.n	80095d4 <vQueueUnregisterQueue+0x1c>
 80095de:	bf00      	nop
 80095e0:	20014a3c 	.word	0x20014a3c
 80095e4:	20014a38 	.word	0x20014a38

080095e8 <vQueueDelete>:
{
 80095e8:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 80095ea:	b950      	cbnz	r0, 8009602 <vQueueDelete+0x1a>
	__asm volatile
 80095ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80095f0:	b672      	cpsid	i
 80095f2:	f383 8811 	msr	BASEPRI, r3
 80095f6:	f3bf 8f6f 	isb	sy
 80095fa:	f3bf 8f4f 	dsb	sy
 80095fe:	b662      	cpsie	i
 8009600:	e7fe      	b.n	8009600 <vQueueDelete+0x18>
		vQueueUnregisterQueue( pxQueue );
 8009602:	f7ff ffd9 	bl	80095b8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8009606:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 800960a:	b91b      	cbnz	r3, 8009614 <vQueueDelete+0x2c>
}
 800960c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009610:	f7ff b8a8 	b.w	8008764 <vPortFree>
}
 8009614:	bd10      	pop	{r4, pc}

08009616 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8009616:	b570      	push	{r4, r5, r6, lr}
 8009618:	4604      	mov	r4, r0
 800961a:	460d      	mov	r5, r1
 800961c:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800961e:	f7ff f989 	bl	8008934 <vPortEnterCritical>
 8009622:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009626:	2bff      	cmp	r3, #255	@ 0xff
 8009628:	d102      	bne.n	8009630 <vQueueWaitForMessageRestricted+0x1a>
 800962a:	2300      	movs	r3, #0
 800962c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8009630:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8009634:	2bff      	cmp	r3, #255	@ 0xff
 8009636:	d102      	bne.n	800963e <vQueueWaitForMessageRestricted+0x28>
 8009638:	2300      	movs	r3, #0
 800963a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800963e:	f7ff f99d 	bl	800897c <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8009642:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8009644:	b92b      	cbnz	r3, 8009652 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8009646:	4632      	mov	r2, r6
 8009648:	4629      	mov	r1, r5
 800964a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800964e:	f000 fbe9 	bl	8009e24 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8009652:	4620      	mov	r0, r4
	}
 8009654:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009658:	f7ff baed 	b.w	8008c36 <prvUnlockQueue>

0800965c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800965c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009660:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8009662:	f7ff f967 	bl	8008934 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8009666:	4b2f      	ldr	r3, [pc, #188]	@ (8009724 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8009668:	4e2f      	ldr	r6, [pc, #188]	@ (8009728 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 800966a:	681a      	ldr	r2, [r3, #0]
 800966c:	4f2f      	ldr	r7, [pc, #188]	@ (800972c <prvAddNewTaskToReadyList+0xd0>)
 800966e:	3201      	adds	r2, #1
 8009670:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8009672:	6835      	ldr	r5, [r6, #0]
 8009674:	2d00      	cmp	r5, #0
 8009676:	d14a      	bne.n	800970e <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009678:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800967a:	681b      	ldr	r3, [r3, #0]
 800967c:	2b01      	cmp	r3, #1
 800967e:	d11f      	bne.n	80096c0 <prvAddNewTaskToReadyList+0x64>
 8009680:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009682:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009684:	4640      	mov	r0, r8
 8009686:	f7ff f8a9 	bl	80087dc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800968a:	f108 0814 	add.w	r8, r8, #20
 800968e:	2d38      	cmp	r5, #56	@ 0x38
 8009690:	d1f7      	bne.n	8009682 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8009692:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8009754 <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 8009696:	4d26      	ldr	r5, [pc, #152]	@ (8009730 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8009698:	4640      	mov	r0, r8
 800969a:	f7ff f89f 	bl	80087dc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800969e:	4628      	mov	r0, r5
 80096a0:	f7ff f89c 	bl	80087dc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80096a4:	4823      	ldr	r0, [pc, #140]	@ (8009734 <prvAddNewTaskToReadyList+0xd8>)
 80096a6:	f7ff f899 	bl	80087dc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80096aa:	4823      	ldr	r0, [pc, #140]	@ (8009738 <prvAddNewTaskToReadyList+0xdc>)
 80096ac:	f7ff f896 	bl	80087dc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80096b0:	4822      	ldr	r0, [pc, #136]	@ (800973c <prvAddNewTaskToReadyList+0xe0>)
 80096b2:	f7ff f893 	bl	80087dc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80096b6:	4b22      	ldr	r3, [pc, #136]	@ (8009740 <prvAddNewTaskToReadyList+0xe4>)
 80096b8:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80096bc:	4b21      	ldr	r3, [pc, #132]	@ (8009744 <prvAddNewTaskToReadyList+0xe8>)
 80096be:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80096c0:	4a21      	ldr	r2, [pc, #132]	@ (8009748 <prvAddNewTaskToReadyList+0xec>)
 80096c2:	6813      	ldr	r3, [r2, #0]
 80096c4:	3301      	adds	r3, #1
 80096c6:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80096c8:	4a20      	ldr	r2, [pc, #128]	@ (800974c <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80096ca:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80096cc:	6811      	ldr	r1, [r2, #0]
 80096ce:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80096d0:	428b      	cmp	r3, r1
 80096d2:	d900      	bls.n	80096d6 <prvAddNewTaskToReadyList+0x7a>
 80096d4:	6013      	str	r3, [r2, #0]
 80096d6:	2014      	movs	r0, #20
 80096d8:	1d21      	adds	r1, r4, #4
 80096da:	fb00 7003 	mla	r0, r0, r3, r7
 80096de:	f7ff f88b 	bl	80087f8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 80096e2:	f7ff f94b 	bl	800897c <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80096e6:	4b1a      	ldr	r3, [pc, #104]	@ (8009750 <prvAddNewTaskToReadyList+0xf4>)
 80096e8:	681b      	ldr	r3, [r3, #0]
 80096ea:	b173      	cbz	r3, 800970a <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80096ec:	6833      	ldr	r3, [r6, #0]
 80096ee:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80096f0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80096f2:	429a      	cmp	r2, r3
 80096f4:	d209      	bcs.n	800970a <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
 80096f6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80096fa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80096fe:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009702:	f3bf 8f4f 	dsb	sy
 8009706:	f3bf 8f6f 	isb	sy
}
 800970a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800970e:	4b10      	ldr	r3, [pc, #64]	@ (8009750 <prvAddNewTaskToReadyList+0xf4>)
 8009710:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009712:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 8009714:	2a00      	cmp	r2, #0
 8009716:	d1d3      	bne.n	80096c0 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009718:	6832      	ldr	r2, [r6, #0]
 800971a:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800971c:	429a      	cmp	r2, r3
 800971e:	d8cf      	bhi.n	80096c0 <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 8009720:	6034      	str	r4, [r6, #0]
 8009722:	e7cd      	b.n	80096c0 <prvAddNewTaskToReadyList+0x64>
 8009724:	20014a9c 	.word	0x20014a9c
 8009728:	20014f70 	.word	0x20014f70
 800972c:	20014b10 	.word	0x20014b10
 8009730:	20014ae8 	.word	0x20014ae8
 8009734:	20014acc 	.word	0x20014acc
 8009738:	20014ab8 	.word	0x20014ab8
 800973c:	20014aa0 	.word	0x20014aa0
 8009740:	20014ae4 	.word	0x20014ae4
 8009744:	20014ae0 	.word	0x20014ae0
 8009748:	20014a80 	.word	0x20014a80
 800974c:	20014a94 	.word	0x20014a94
 8009750:	20014a90 	.word	0x20014a90
 8009754:	20014afc 	.word	0x20014afc

08009758 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800975a:	4b15      	ldr	r3, [pc, #84]	@ (80097b0 <prvAddCurrentTaskToDelayedList+0x58>)
{
 800975c:	4606      	mov	r6, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800975e:	4d15      	ldr	r5, [pc, #84]	@ (80097b4 <prvAddCurrentTaskToDelayedList+0x5c>)
{
 8009760:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 8009762:	681c      	ldr	r4, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009764:	6828      	ldr	r0, [r5, #0]
 8009766:	3004      	adds	r0, #4
 8009768:	f7ff f868 	bl	800883c <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800976c:	1c73      	adds	r3, r6, #1
 800976e:	d107      	bne.n	8009780 <prvAddCurrentTaskToDelayedList+0x28>
 8009770:	b137      	cbz	r7, 8009780 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009772:	6829      	ldr	r1, [r5, #0]
 8009774:	4810      	ldr	r0, [pc, #64]	@ (80097b8 <prvAddCurrentTaskToDelayedList+0x60>)
 8009776:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009778:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800977c:	f7ff b83c 	b.w	80087f8 <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
 8009780:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009782:	682b      	ldr	r3, [r5, #0]
 8009784:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009786:	d307      	bcc.n	8009798 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009788:	4b0c      	ldr	r3, [pc, #48]	@ (80097bc <prvAddCurrentTaskToDelayedList+0x64>)
 800978a:	6818      	ldr	r0, [r3, #0]
 800978c:	6829      	ldr	r1, [r5, #0]
}
 800978e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009792:	3104      	adds	r1, #4
 8009794:	f7ff b83b 	b.w	800880e <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009798:	4b09      	ldr	r3, [pc, #36]	@ (80097c0 <prvAddCurrentTaskToDelayedList+0x68>)
 800979a:	6818      	ldr	r0, [r3, #0]
 800979c:	6829      	ldr	r1, [r5, #0]
 800979e:	3104      	adds	r1, #4
 80097a0:	f7ff f835 	bl	800880e <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80097a4:	4b07      	ldr	r3, [pc, #28]	@ (80097c4 <prvAddCurrentTaskToDelayedList+0x6c>)
 80097a6:	681a      	ldr	r2, [r3, #0]
 80097a8:	42a2      	cmp	r2, r4
 80097aa:	d900      	bls.n	80097ae <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
 80097ac:	601c      	str	r4, [r3, #0]
}
 80097ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80097b0:	20014a98 	.word	0x20014a98
 80097b4:	20014f70 	.word	0x20014f70
 80097b8:	20014aa0 	.word	0x20014aa0
 80097bc:	20014ae0 	.word	0x20014ae0
 80097c0:	20014ae4 	.word	0x20014ae4
 80097c4:	20014a7c 	.word	0x20014a7c

080097c8 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80097c8:	4a06      	ldr	r2, [pc, #24]	@ (80097e4 <prvResetNextTaskUnblockTime+0x1c>)
 80097ca:	6813      	ldr	r3, [r2, #0]
 80097cc:	6819      	ldr	r1, [r3, #0]
 80097ce:	4b06      	ldr	r3, [pc, #24]	@ (80097e8 <prvResetNextTaskUnblockTime+0x20>)
 80097d0:	b919      	cbnz	r1, 80097da <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80097d2:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80097d6:	601a      	str	r2, [r3, #0]
}
 80097d8:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80097da:	6812      	ldr	r2, [r2, #0]
 80097dc:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80097de:	68d2      	ldr	r2, [r2, #12]
 80097e0:	6852      	ldr	r2, [r2, #4]
 80097e2:	e7f8      	b.n	80097d6 <prvResetNextTaskUnblockTime+0xe>
 80097e4:	20014ae4 	.word	0x20014ae4
 80097e8:	20014a7c 	.word	0x20014a7c

080097ec <prvDeleteTCB>:
	{
 80097ec:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80097ee:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 80097f2:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80097f4:	b93b      	cbnz	r3, 8009806 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 80097f6:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 80097f8:	f7fe ffb4 	bl	8008764 <vPortFree>
				vPortFree( pxTCB );
 80097fc:	4620      	mov	r0, r4
	}
 80097fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009802:	f7fe bfaf 	b.w	8008764 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009806:	2b01      	cmp	r3, #1
 8009808:	d0f9      	beq.n	80097fe <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800980a:	2b02      	cmp	r3, #2
 800980c:	d00a      	beq.n	8009824 <prvDeleteTCB+0x38>
 800980e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009812:	b672      	cpsid	i
 8009814:	f383 8811 	msr	BASEPRI, r3
 8009818:	f3bf 8f6f 	isb	sy
 800981c:	f3bf 8f4f 	dsb	sy
 8009820:	b662      	cpsie	i
 8009822:	e7fe      	b.n	8009822 <prvDeleteTCB+0x36>
	}
 8009824:	bd10      	pop	{r4, pc}
	...

08009828 <prvIdleTask>:
{
 8009828:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800982a:	4c14      	ldr	r4, [pc, #80]	@ (800987c <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800982c:	4f14      	ldr	r7, [pc, #80]	@ (8009880 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 800982e:	4d15      	ldr	r5, [pc, #84]	@ (8009884 <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009830:	6823      	ldr	r3, [r4, #0]
 8009832:	b983      	cbnz	r3, 8009856 <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009834:	4b14      	ldr	r3, [pc, #80]	@ (8009888 <prvIdleTask+0x60>)
 8009836:	681b      	ldr	r3, [r3, #0]
 8009838:	2b01      	cmp	r3, #1
 800983a:	d909      	bls.n	8009850 <prvIdleTask+0x28>
				taskYIELD();
 800983c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009840:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009844:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009848:	f3bf 8f4f 	dsb	sy
 800984c:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8009850:	f7f6 fea6 	bl	80005a0 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8009854:	e7eb      	b.n	800982e <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009856:	f7ff f86d 	bl	8008934 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800985a:	68fb      	ldr	r3, [r7, #12]
 800985c:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800985e:	1d30      	adds	r0, r6, #4
 8009860:	f7fe ffec 	bl	800883c <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009864:	682b      	ldr	r3, [r5, #0]
 8009866:	3b01      	subs	r3, #1
 8009868:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800986a:	6823      	ldr	r3, [r4, #0]
 800986c:	3b01      	subs	r3, #1
 800986e:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009870:	f7ff f884 	bl	800897c <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009874:	4630      	mov	r0, r6
 8009876:	f7ff ffb9 	bl	80097ec <prvDeleteTCB>
 800987a:	e7d9      	b.n	8009830 <prvIdleTask+0x8>
 800987c:	20014ab4 	.word	0x20014ab4
 8009880:	20014ab8 	.word	0x20014ab8
 8009884:	20014a9c 	.word	0x20014a9c
 8009888:	20014b10 	.word	0x20014b10

0800988c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800988c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009890:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009892:	4607      	mov	r7, r0
 8009894:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009896:	21a5      	movs	r1, #165	@ 0xa5
 8009898:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800989a:	4698      	mov	r8, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800989c:	3e04      	subs	r6, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800989e:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80098a2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80098a4:	f015 fb60 	bl	801ef68 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80098a8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80098aa:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80098ac:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 80098b0:	b3b5      	cbz	r5, 8009920 <prvInitialiseNewTask.constprop.0+0x94>
 80098b2:	1e6b      	subs	r3, r5, #1
 80098b4:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 80098b8:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80098ba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80098be:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 80098c2:	b109      	cbz	r1, 80098c8 <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80098c4:	42ab      	cmp	r3, r5
 80098c6:	d1f8      	bne.n	80098ba <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80098c8:	2300      	movs	r3, #0
 80098ca:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80098ce:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 80098d0:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80098d4:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80098d6:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80098d8:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80098dc:	bf28      	it	cs
 80098de:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
 80098e0:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80098e2:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80098e4:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80098e8:	f7fe ff83 	bl	80087f2 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80098ec:	f104 0018 	add.w	r0, r4, #24
 80098f0:	f7fe ff7f 	bl	80087f2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 80098f4:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80098f8:	4642      	mov	r2, r8
 80098fa:	4639      	mov	r1, r7
 80098fc:	4630      	mov	r0, r6
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80098fe:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009900:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009902:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009904:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009908:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800990c:	f7fe ffe8 	bl	80088e0 <pxPortInitialiseStack>
 8009910:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009912:	f1b9 0f00 	cmp.w	r9, #0
 8009916:	d001      	beq.n	800991c <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009918:	f8c9 4000 	str.w	r4, [r9]
}
 800991c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009920:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8009924:	e7d3      	b.n	80098ce <prvInitialiseNewTask.constprop.0+0x42>

08009926 <xTaskCreateStatic>:
	{
 8009926:	b570      	push	{r4, r5, r6, lr}
 8009928:	b086      	sub	sp, #24
 800992a:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 800992e:	b955      	cbnz	r5, 8009946 <xTaskCreateStatic+0x20>
 8009930:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009934:	b672      	cpsid	i
 8009936:	f383 8811 	msr	BASEPRI, r3
 800993a:	f3bf 8f6f 	isb	sy
 800993e:	f3bf 8f4f 	dsb	sy
 8009942:	b662      	cpsie	i
 8009944:	e7fe      	b.n	8009944 <xTaskCreateStatic+0x1e>
		configASSERT( pxTaskBuffer != NULL );
 8009946:	b954      	cbnz	r4, 800995e <xTaskCreateStatic+0x38>
 8009948:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800994c:	b672      	cpsid	i
 800994e:	f383 8811 	msr	BASEPRI, r3
 8009952:	f3bf 8f6f 	isb	sy
 8009956:	f3bf 8f4f 	dsb	sy
 800995a:	b662      	cpsie	i
 800995c:	e7fe      	b.n	800995c <xTaskCreateStatic+0x36>
			volatile size_t xSize = sizeof( StaticTask_t );
 800995e:	2660      	movs	r6, #96	@ 0x60
 8009960:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009962:	9e05      	ldr	r6, [sp, #20]
 8009964:	2e60      	cmp	r6, #96	@ 0x60
 8009966:	d00a      	beq.n	800997e <xTaskCreateStatic+0x58>
 8009968:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800996c:	b672      	cpsid	i
 800996e:	f383 8811 	msr	BASEPRI, r3
 8009972:	f3bf 8f6f 	isb	sy
 8009976:	f3bf 8f4f 	dsb	sy
 800997a:	b662      	cpsie	i
 800997c:	e7fe      	b.n	800997c <xTaskCreateStatic+0x56>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800997e:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009980:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009982:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009984:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009988:	ad04      	add	r5, sp, #16
 800998a:	9402      	str	r4, [sp, #8]
 800998c:	9501      	str	r5, [sp, #4]
 800998e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8009990:	9500      	str	r5, [sp, #0]
 8009992:	f7ff ff7b 	bl	800988c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009996:	4620      	mov	r0, r4
 8009998:	f7ff fe60 	bl	800965c <prvAddNewTaskToReadyList>
	}
 800999c:	9804      	ldr	r0, [sp, #16]
 800999e:	b006      	add	sp, #24
 80099a0:	bd70      	pop	{r4, r5, r6, pc}

080099a2 <xTaskCreate>:
	{
 80099a2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80099a6:	4607      	mov	r7, r0
 80099a8:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80099aa:	0090      	lsls	r0, r2, #2
	{
 80099ac:	4688      	mov	r8, r1
 80099ae:	4616      	mov	r6, r2
 80099b0:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80099b2:	f7fe fe41 	bl	8008638 <pvPortMalloc>
			if( pxStack != NULL )
 80099b6:	4605      	mov	r5, r0
 80099b8:	b920      	cbnz	r0, 80099c4 <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80099ba:	f04f 30ff 	mov.w	r0, #4294967295
	}
 80099be:	b005      	add	sp, #20
 80099c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80099c4:	2060      	movs	r0, #96	@ 0x60
 80099c6:	f7fe fe37 	bl	8008638 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80099ca:	4604      	mov	r4, r0
 80099cc:	b198      	cbz	r0, 80099f6 <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80099ce:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 80099d0:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80099d2:	4632      	mov	r2, r6
 80099d4:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80099d6:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80099da:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80099dc:	9002      	str	r0, [sp, #8]
 80099de:	4638      	mov	r0, r7
 80099e0:	9301      	str	r3, [sp, #4]
 80099e2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80099e4:	9300      	str	r3, [sp, #0]
 80099e6:	464b      	mov	r3, r9
 80099e8:	f7ff ff50 	bl	800988c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80099ec:	4620      	mov	r0, r4
 80099ee:	f7ff fe35 	bl	800965c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80099f2:	2001      	movs	r0, #1
 80099f4:	e7e3      	b.n	80099be <xTaskCreate+0x1c>
					vPortFree( pxStack );
 80099f6:	4628      	mov	r0, r5
 80099f8:	f7fe feb4 	bl	8008764 <vPortFree>
		if( pxNewTCB != NULL )
 80099fc:	e7dd      	b.n	80099ba <xTaskCreate+0x18>
	...

08009a00 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009a00:	4a02      	ldr	r2, [pc, #8]	@ (8009a0c <vTaskSuspendAll+0xc>)
 8009a02:	6813      	ldr	r3, [r2, #0]
 8009a04:	3301      	adds	r3, #1
 8009a06:	6013      	str	r3, [r2, #0]
}
 8009a08:	4770      	bx	lr
 8009a0a:	bf00      	nop
 8009a0c:	20014a78 	.word	0x20014a78

08009a10 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009a10:	4b01      	ldr	r3, [pc, #4]	@ (8009a18 <xTaskGetTickCount+0x8>)
 8009a12:	6818      	ldr	r0, [r3, #0]
}
 8009a14:	4770      	bx	lr
 8009a16:	bf00      	nop
 8009a18:	20014a98 	.word	0x20014a98

08009a1c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009a1c:	4b40      	ldr	r3, [pc, #256]	@ (8009b20 <xTaskIncrementTick+0x104>)
 8009a1e:	681b      	ldr	r3, [r3, #0]
{
 8009a20:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009a24:	2b00      	cmp	r3, #0
 8009a26:	d173      	bne.n	8009b10 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009a28:	4b3e      	ldr	r3, [pc, #248]	@ (8009b24 <xTaskIncrementTick+0x108>)
 8009a2a:	681c      	ldr	r4, [r3, #0]
 8009a2c:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8009a2e:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009a30:	b9cc      	cbnz	r4, 8009a66 <xTaskIncrementTick+0x4a>
			taskSWITCH_DELAYED_LISTS();
 8009a32:	4b3d      	ldr	r3, [pc, #244]	@ (8009b28 <xTaskIncrementTick+0x10c>)
 8009a34:	681a      	ldr	r2, [r3, #0]
 8009a36:	6812      	ldr	r2, [r2, #0]
 8009a38:	b152      	cbz	r2, 8009a50 <xTaskIncrementTick+0x34>
 8009a3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a3e:	b672      	cpsid	i
 8009a40:	f383 8811 	msr	BASEPRI, r3
 8009a44:	f3bf 8f6f 	isb	sy
 8009a48:	f3bf 8f4f 	dsb	sy
 8009a4c:	b662      	cpsie	i
 8009a4e:	e7fe      	b.n	8009a4e <xTaskIncrementTick+0x32>
 8009a50:	4a36      	ldr	r2, [pc, #216]	@ (8009b2c <xTaskIncrementTick+0x110>)
 8009a52:	6819      	ldr	r1, [r3, #0]
 8009a54:	6810      	ldr	r0, [r2, #0]
 8009a56:	6018      	str	r0, [r3, #0]
 8009a58:	6011      	str	r1, [r2, #0]
 8009a5a:	4a35      	ldr	r2, [pc, #212]	@ (8009b30 <xTaskIncrementTick+0x114>)
 8009a5c:	6813      	ldr	r3, [r2, #0]
 8009a5e:	3301      	adds	r3, #1
 8009a60:	6013      	str	r3, [r2, #0]
 8009a62:	f7ff feb1 	bl	80097c8 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009a66:	4d33      	ldr	r5, [pc, #204]	@ (8009b34 <xTaskIncrementTick+0x118>)
BaseType_t xSwitchRequired = pdFALSE;
 8009a68:	f04f 0b00 	mov.w	fp, #0
 8009a6c:	4e32      	ldr	r6, [pc, #200]	@ (8009b38 <xTaskIncrementTick+0x11c>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009a6e:	682b      	ldr	r3, [r5, #0]
 8009a70:	4f32      	ldr	r7, [pc, #200]	@ (8009b3c <xTaskIncrementTick+0x120>)
 8009a72:	42a3      	cmp	r3, r4
 8009a74:	d911      	bls.n	8009a9a <xTaskIncrementTick+0x7e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009a76:	683a      	ldr	r2, [r7, #0]
 8009a78:	2114      	movs	r1, #20
 8009a7a:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009a7c:	434a      	muls	r2, r1
 8009a7e:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8009a80:	2a02      	cmp	r2, #2
 8009a82:	bf28      	it	cs
 8009a84:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 8009a88:	4a2d      	ldr	r2, [pc, #180]	@ (8009b40 <xTaskIncrementTick+0x124>)
 8009a8a:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 8009a8c:	2a00      	cmp	r2, #0
}
 8009a8e:	bf0c      	ite	eq
 8009a90:	4658      	moveq	r0, fp
 8009a92:	2001      	movne	r0, #1
 8009a94:	b003      	add	sp, #12
 8009a96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009a9a:	f8df 908c 	ldr.w	r9, [pc, #140]	@ 8009b28 <xTaskIncrementTick+0x10c>
					prvAddTaskToReadyList( pxTCB );
 8009a9e:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 8009b48 <xTaskIncrementTick+0x12c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009aa2:	f8d9 2000 	ldr.w	r2, [r9]
 8009aa6:	6812      	ldr	r2, [r2, #0]
 8009aa8:	b91a      	cbnz	r2, 8009ab2 <xTaskIncrementTick+0x96>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009aaa:	f04f 32ff 	mov.w	r2, #4294967295
 8009aae:	602a      	str	r2, [r5, #0]
					break;
 8009ab0:	e7e1      	b.n	8009a76 <xTaskIncrementTick+0x5a>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ab2:	f8d9 2000 	ldr.w	r2, [r9]
 8009ab6:	68d2      	ldr	r2, [r2, #12]
 8009ab8:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009abc:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8009ac0:	428c      	cmp	r4, r1
 8009ac2:	d201      	bcs.n	8009ac8 <xTaskIncrementTick+0xac>
						xNextTaskUnblockTime = xItemValue;
 8009ac4:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009ac6:	e7d6      	b.n	8009a76 <xTaskIncrementTick+0x5a>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009ac8:	f108 0304 	add.w	r3, r8, #4
 8009acc:	4618      	mov	r0, r3
 8009ace:	9301      	str	r3, [sp, #4]
 8009ad0:	f7fe feb4 	bl	800883c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009ad4:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8009ad8:	b119      	cbz	r1, 8009ae2 <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009ada:	f108 0018 	add.w	r0, r8, #24
 8009ade:	f7fe fead 	bl	800883c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009ae2:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8009ae6:	f8da 1000 	ldr.w	r1, [sl]
 8009aea:	4288      	cmp	r0, r1
 8009aec:	d901      	bls.n	8009af2 <xTaskIncrementTick+0xd6>
 8009aee:	f8ca 0000 	str.w	r0, [sl]
 8009af2:	2314      	movs	r3, #20
 8009af4:	9901      	ldr	r1, [sp, #4]
 8009af6:	fb03 6000 	mla	r0, r3, r0, r6
 8009afa:	f7fe fe7d 	bl	80087f8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009afe:	6838      	ldr	r0, [r7, #0]
 8009b00:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8009b04:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8009b06:	4291      	cmp	r1, r2
 8009b08:	bf28      	it	cs
 8009b0a:	f04f 0b01 	movcs.w	fp, #1
 8009b0e:	e7c8      	b.n	8009aa2 <xTaskIncrementTick+0x86>
		++uxPendedTicks;
 8009b10:	4a0c      	ldr	r2, [pc, #48]	@ (8009b44 <xTaskIncrementTick+0x128>)
BaseType_t xSwitchRequired = pdFALSE;
 8009b12:	f04f 0b00 	mov.w	fp, #0
		++uxPendedTicks;
 8009b16:	6813      	ldr	r3, [r2, #0]
 8009b18:	3301      	adds	r3, #1
 8009b1a:	6013      	str	r3, [r2, #0]
 8009b1c:	e7b4      	b.n	8009a88 <xTaskIncrementTick+0x6c>
 8009b1e:	bf00      	nop
 8009b20:	20014a78 	.word	0x20014a78
 8009b24:	20014a98 	.word	0x20014a98
 8009b28:	20014ae4 	.word	0x20014ae4
 8009b2c:	20014ae0 	.word	0x20014ae0
 8009b30:	20014a84 	.word	0x20014a84
 8009b34:	20014a7c 	.word	0x20014a7c
 8009b38:	20014b10 	.word	0x20014b10
 8009b3c:	20014f70 	.word	0x20014f70
 8009b40:	20014a88 	.word	0x20014a88
 8009b44:	20014a8c 	.word	0x20014a8c
 8009b48:	20014a94 	.word	0x20014a94

08009b4c <xTaskResumeAll>:
{
 8009b4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8009b50:	4c31      	ldr	r4, [pc, #196]	@ (8009c18 <xTaskResumeAll+0xcc>)
 8009b52:	6823      	ldr	r3, [r4, #0]
 8009b54:	b953      	cbnz	r3, 8009b6c <xTaskResumeAll+0x20>
 8009b56:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009b5a:	b672      	cpsid	i
 8009b5c:	f383 8811 	msr	BASEPRI, r3
 8009b60:	f3bf 8f6f 	isb	sy
 8009b64:	f3bf 8f4f 	dsb	sy
 8009b68:	b662      	cpsie	i
 8009b6a:	e7fe      	b.n	8009b6a <xTaskResumeAll+0x1e>
	taskENTER_CRITICAL();
 8009b6c:	f7fe fee2 	bl	8008934 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009b70:	6823      	ldr	r3, [r4, #0]
 8009b72:	3b01      	subs	r3, #1
 8009b74:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009b76:	6824      	ldr	r4, [r4, #0]
 8009b78:	b12c      	cbz	r4, 8009b86 <xTaskResumeAll+0x3a>
BaseType_t xAlreadyYielded = pdFALSE;
 8009b7a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009b7c:	f7fe fefe 	bl	800897c <vPortExitCritical>
}
 8009b80:	4620      	mov	r0, r4
 8009b82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009b86:	4b25      	ldr	r3, [pc, #148]	@ (8009c1c <xTaskResumeAll+0xd0>)
 8009b88:	681b      	ldr	r3, [r3, #0]
 8009b8a:	2b00      	cmp	r3, #0
 8009b8c:	d0f5      	beq.n	8009b7a <xTaskResumeAll+0x2e>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009b8e:	4d24      	ldr	r5, [pc, #144]	@ (8009c20 <xTaskResumeAll+0xd4>)
					prvAddTaskToReadyList( pxTCB );
 8009b90:	4e24      	ldr	r6, [pc, #144]	@ (8009c24 <xTaskResumeAll+0xd8>)
 8009b92:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8009c34 <xTaskResumeAll+0xe8>
 8009b96:	e01d      	b.n	8009bd4 <xTaskResumeAll+0x88>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b98:	68eb      	ldr	r3, [r5, #12]
 8009b9a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009b9c:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009b9e:	f104 0018 	add.w	r0, r4, #24
 8009ba2:	f7fe fe4b 	bl	800883c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009ba6:	4638      	mov	r0, r7
 8009ba8:	f7fe fe48 	bl	800883c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009bac:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009bae:	6832      	ldr	r2, [r6, #0]
 8009bb0:	4293      	cmp	r3, r2
 8009bb2:	d900      	bls.n	8009bb6 <xTaskResumeAll+0x6a>
 8009bb4:	6033      	str	r3, [r6, #0]
 8009bb6:	2014      	movs	r0, #20
 8009bb8:	4639      	mov	r1, r7
 8009bba:	fb00 8003 	mla	r0, r0, r3, r8
 8009bbe:	f7fe fe1b 	bl	80087f8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009bc2:	4b19      	ldr	r3, [pc, #100]	@ (8009c28 <xTaskResumeAll+0xdc>)
 8009bc4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8009bc6:	681b      	ldr	r3, [r3, #0]
 8009bc8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009bca:	429a      	cmp	r2, r3
 8009bcc:	d302      	bcc.n	8009bd4 <xTaskResumeAll+0x88>
						xYieldPending = pdTRUE;
 8009bce:	4b17      	ldr	r3, [pc, #92]	@ (8009c2c <xTaskResumeAll+0xe0>)
 8009bd0:	2201      	movs	r2, #1
 8009bd2:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009bd4:	682b      	ldr	r3, [r5, #0]
 8009bd6:	2b00      	cmp	r3, #0
 8009bd8:	d1de      	bne.n	8009b98 <xTaskResumeAll+0x4c>
				if( pxTCB != NULL )
 8009bda:	b10c      	cbz	r4, 8009be0 <xTaskResumeAll+0x94>
					prvResetNextTaskUnblockTime();
 8009bdc:	f7ff fdf4 	bl	80097c8 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009be0:	4d13      	ldr	r5, [pc, #76]	@ (8009c30 <xTaskResumeAll+0xe4>)
 8009be2:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009be4:	b144      	cbz	r4, 8009bf8 <xTaskResumeAll+0xac>
								xYieldPending = pdTRUE;
 8009be6:	4e11      	ldr	r6, [pc, #68]	@ (8009c2c <xTaskResumeAll+0xe0>)
 8009be8:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009bea:	f7ff ff17 	bl	8009a1c <xTaskIncrementTick>
 8009bee:	b100      	cbz	r0, 8009bf2 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009bf0:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8009bf2:	3c01      	subs	r4, #1
 8009bf4:	d1f9      	bne.n	8009bea <xTaskResumeAll+0x9e>
						uxPendedTicks = 0;
 8009bf6:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009bf8:	4b0c      	ldr	r3, [pc, #48]	@ (8009c2c <xTaskResumeAll+0xe0>)
 8009bfa:	681b      	ldr	r3, [r3, #0]
 8009bfc:	2b00      	cmp	r3, #0
 8009bfe:	d0bc      	beq.n	8009b7a <xTaskResumeAll+0x2e>
					taskYIELD_IF_USING_PREEMPTION();
 8009c00:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009c04:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009c08:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009c0c:	f3bf 8f4f 	dsb	sy
 8009c10:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009c14:	2401      	movs	r4, #1
 8009c16:	e7b1      	b.n	8009b7c <xTaskResumeAll+0x30>
 8009c18:	20014a78 	.word	0x20014a78
 8009c1c:	20014a9c 	.word	0x20014a9c
 8009c20:	20014acc 	.word	0x20014acc
 8009c24:	20014a94 	.word	0x20014a94
 8009c28:	20014f70 	.word	0x20014f70
 8009c2c:	20014a88 	.word	0x20014a88
 8009c30:	20014a8c 	.word	0x20014a8c
 8009c34:	20014b10 	.word	0x20014b10

08009c38 <vTaskDelay>:
	{
 8009c38:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009c3a:	b950      	cbnz	r0, 8009c52 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009c3c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009c40:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009c44:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009c48:	f3bf 8f4f 	dsb	sy
 8009c4c:	f3bf 8f6f 	isb	sy
	}
 8009c50:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009c52:	4b0b      	ldr	r3, [pc, #44]	@ (8009c80 <vTaskDelay+0x48>)
 8009c54:	6819      	ldr	r1, [r3, #0]
 8009c56:	b151      	cbz	r1, 8009c6e <vTaskDelay+0x36>
 8009c58:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c5c:	b672      	cpsid	i
 8009c5e:	f383 8811 	msr	BASEPRI, r3
 8009c62:	f3bf 8f6f 	isb	sy
 8009c66:	f3bf 8f4f 	dsb	sy
 8009c6a:	b662      	cpsie	i
 8009c6c:	e7fe      	b.n	8009c6c <vTaskDelay+0x34>
			vTaskSuspendAll();
 8009c6e:	f7ff fec7 	bl	8009a00 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009c72:	f7ff fd71 	bl	8009758 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009c76:	f7ff ff69 	bl	8009b4c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009c7a:	2800      	cmp	r0, #0
 8009c7c:	d0de      	beq.n	8009c3c <vTaskDelay+0x4>
 8009c7e:	e7e7      	b.n	8009c50 <vTaskDelay+0x18>
 8009c80:	20014a78 	.word	0x20014a78

08009c84 <vTaskSetApplicationTaskTag>:
	{
 8009c84:	b538      	push	{r3, r4, r5, lr}
 8009c86:	460d      	mov	r5, r1
		if( xTask == NULL )
 8009c88:	4604      	mov	r4, r0
 8009c8a:	b908      	cbnz	r0, 8009c90 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8009c8c:	4b04      	ldr	r3, [pc, #16]	@ (8009ca0 <vTaskSetApplicationTaskTag+0x1c>)
 8009c8e:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8009c90:	f7fe fe50 	bl	8008934 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8009c94:	6565      	str	r5, [r4, #84]	@ 0x54
	}
 8009c96:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8009c9a:	f7fe be6f 	b.w	800897c <vPortExitCritical>
 8009c9e:	bf00      	nop
 8009ca0:	20014f70 	.word	0x20014f70

08009ca4 <xTaskCallApplicationTaskHook>:
	{
 8009ca4:	4603      	mov	r3, r0
 8009ca6:	4608      	mov	r0, r1
		if( xTask == NULL )
 8009ca8:	b90b      	cbnz	r3, 8009cae <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 8009caa:	4b03      	ldr	r3, [pc, #12]	@ (8009cb8 <xTaskCallApplicationTaskHook+0x14>)
 8009cac:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8009cae:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009cb0:	b103      	cbz	r3, 8009cb4 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8009cb2:	4718      	bx	r3
	}
 8009cb4:	4618      	mov	r0, r3
 8009cb6:	4770      	bx	lr
 8009cb8:	20014f70 	.word	0x20014f70

08009cbc <vTaskStartScheduler>:
{
 8009cbc:	b510      	push	{r4, lr}
 8009cbe:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009cc0:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009cc2:	aa07      	add	r2, sp, #28
 8009cc4:	a906      	add	r1, sp, #24
 8009cc6:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009cc8:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009ccc:	f7fe fc76 	bl	80085bc <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009cd0:	9b05      	ldr	r3, [sp, #20]
 8009cd2:	9a07      	ldr	r2, [sp, #28]
 8009cd4:	9302      	str	r3, [sp, #8]
 8009cd6:	9b06      	ldr	r3, [sp, #24]
 8009cd8:	491b      	ldr	r1, [pc, #108]	@ (8009d48 <vTaskStartScheduler+0x8c>)
 8009cda:	481c      	ldr	r0, [pc, #112]	@ (8009d4c <vTaskStartScheduler+0x90>)
 8009cdc:	e9cd 4300 	strd	r4, r3, [sp]
 8009ce0:	4623      	mov	r3, r4
 8009ce2:	f7ff fe20 	bl	8009926 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009ce6:	b360      	cbz	r0, 8009d42 <vTaskStartScheduler+0x86>
			xReturn = xTimerCreateTimerTask();
 8009ce8:	f000 fa96 	bl	800a218 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009cec:	2801      	cmp	r0, #1
 8009cee:	d11b      	bne.n	8009d28 <vTaskStartScheduler+0x6c>
 8009cf0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009cf4:	b672      	cpsid	i
 8009cf6:	f383 8811 	msr	BASEPRI, r3
 8009cfa:	f3bf 8f6f 	isb	sy
 8009cfe:	f3bf 8f4f 	dsb	sy
 8009d02:	b662      	cpsie	i
		xNextTaskUnblockTime = portMAX_DELAY;
 8009d04:	f04f 32ff 	mov.w	r2, #4294967295
 8009d08:	4b11      	ldr	r3, [pc, #68]	@ (8009d50 <vTaskStartScheduler+0x94>)
		traceTASK_SWITCHED_IN();
 8009d0a:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
 8009d0c:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009d0e:	4b11      	ldr	r3, [pc, #68]	@ (8009d54 <vTaskStartScheduler+0x98>)
 8009d10:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009d12:	4b11      	ldr	r3, [pc, #68]	@ (8009d58 <vTaskStartScheduler+0x9c>)
 8009d14:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8009d16:	4b11      	ldr	r3, [pc, #68]	@ (8009d5c <vTaskStartScheduler+0xa0>)
 8009d18:	6818      	ldr	r0, [r3, #0]
 8009d1a:	f7ff ffc3 	bl	8009ca4 <xTaskCallApplicationTaskHook>
}
 8009d1e:	b008      	add	sp, #32
 8009d20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009d24:	f7fe bea0 	b.w	8008a68 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009d28:	3001      	adds	r0, #1
 8009d2a:	d10a      	bne.n	8009d42 <vTaskStartScheduler+0x86>
 8009d2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d30:	b672      	cpsid	i
 8009d32:	f383 8811 	msr	BASEPRI, r3
 8009d36:	f3bf 8f6f 	isb	sy
 8009d3a:	f3bf 8f4f 	dsb	sy
 8009d3e:	b662      	cpsie	i
 8009d40:	e7fe      	b.n	8009d40 <vTaskStartScheduler+0x84>
}
 8009d42:	b008      	add	sp, #32
 8009d44:	bd10      	pop	{r4, pc}
 8009d46:	bf00      	nop
 8009d48:	080211e4 	.word	0x080211e4
 8009d4c:	08009829 	.word	0x08009829
 8009d50:	20014a7c 	.word	0x20014a7c
 8009d54:	20014a90 	.word	0x20014a90
 8009d58:	20014a98 	.word	0x20014a98
 8009d5c:	20014f70 	.word	0x20014f70

08009d60 <vTaskSwitchContext>:
{
 8009d60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009d62:	4b1d      	ldr	r3, [pc, #116]	@ (8009dd8 <vTaskSwitchContext+0x78>)
 8009d64:	681a      	ldr	r2, [r3, #0]
 8009d66:	4b1d      	ldr	r3, [pc, #116]	@ (8009ddc <vTaskSwitchContext+0x7c>)
 8009d68:	b112      	cbz	r2, 8009d70 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009d6a:	2201      	movs	r2, #1
 8009d6c:	601a      	str	r2, [r3, #0]
}
 8009d6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8009d70:	4c1b      	ldr	r4, [pc, #108]	@ (8009de0 <vTaskSwitchContext+0x80>)
 8009d72:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d74:	4e1b      	ldr	r6, [pc, #108]	@ (8009de4 <vTaskSwitchContext+0x84>)
 8009d76:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
 8009d78:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 8009d7a:	6820      	ldr	r0, [r4, #0]
 8009d7c:	f7ff ff92 	bl	8009ca4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d80:	6832      	ldr	r2, [r6, #0]
 8009d82:	4919      	ldr	r1, [pc, #100]	@ (8009de8 <vTaskSwitchContext+0x88>)
 8009d84:	fb07 f302 	mul.w	r3, r7, r2
 8009d88:	58cd      	ldr	r5, [r1, r3]
 8009d8a:	18c8      	adds	r0, r1, r3
 8009d8c:	b1ad      	cbz	r5, 8009dba <vTaskSwitchContext+0x5a>
 8009d8e:	6845      	ldr	r5, [r0, #4]
 8009d90:	3308      	adds	r3, #8
 8009d92:	686d      	ldr	r5, [r5, #4]
 8009d94:	440b      	add	r3, r1
 8009d96:	429d      	cmp	r5, r3
 8009d98:	6045      	str	r5, [r0, #4]
 8009d9a:	bf04      	itt	eq
 8009d9c:	686b      	ldreq	r3, [r5, #4]
 8009d9e:	6043      	streq	r3, [r0, #4]
 8009da0:	2314      	movs	r3, #20
 8009da2:	fb03 1102 	mla	r1, r3, r2, r1
 8009da6:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
 8009da8:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009daa:	68db      	ldr	r3, [r3, #12]
 8009dac:	6023      	str	r3, [r4, #0]
 8009dae:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 8009db0:	6820      	ldr	r0, [r4, #0]
}
 8009db2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 8009db6:	f7ff bf75 	b.w	8009ca4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009dba:	b952      	cbnz	r2, 8009dd2 <vTaskSwitchContext+0x72>
 8009dbc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009dc0:	b672      	cpsid	i
 8009dc2:	f383 8811 	msr	BASEPRI, r3
 8009dc6:	f3bf 8f6f 	isb	sy
 8009dca:	f3bf 8f4f 	dsb	sy
 8009dce:	b662      	cpsie	i
 8009dd0:	e7fe      	b.n	8009dd0 <vTaskSwitchContext+0x70>
 8009dd2:	3a01      	subs	r2, #1
 8009dd4:	e7d6      	b.n	8009d84 <vTaskSwitchContext+0x24>
 8009dd6:	bf00      	nop
 8009dd8:	20014a78 	.word	0x20014a78
 8009ddc:	20014a88 	.word	0x20014a88
 8009de0:	20014f70 	.word	0x20014f70
 8009de4:	20014a94 	.word	0x20014a94
 8009de8:	20014b10 	.word	0x20014b10

08009dec <vTaskPlaceOnEventList>:
{
 8009dec:	b510      	push	{r4, lr}
 8009dee:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009df0:	b950      	cbnz	r0, 8009e08 <vTaskPlaceOnEventList+0x1c>
 8009df2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009df6:	b672      	cpsid	i
 8009df8:	f383 8811 	msr	BASEPRI, r3
 8009dfc:	f3bf 8f6f 	isb	sy
 8009e00:	f3bf 8f4f 	dsb	sy
 8009e04:	b662      	cpsie	i
 8009e06:	e7fe      	b.n	8009e06 <vTaskPlaceOnEventList+0x1a>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009e08:	4b05      	ldr	r3, [pc, #20]	@ (8009e20 <vTaskPlaceOnEventList+0x34>)
 8009e0a:	6819      	ldr	r1, [r3, #0]
 8009e0c:	3118      	adds	r1, #24
 8009e0e:	f7fe fcfe 	bl	800880e <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009e12:	4620      	mov	r0, r4
 8009e14:	2101      	movs	r1, #1
}
 8009e16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009e1a:	f7ff bc9d 	b.w	8009758 <prvAddCurrentTaskToDelayedList>
 8009e1e:	bf00      	nop
 8009e20:	20014f70 	.word	0x20014f70

08009e24 <vTaskPlaceOnEventListRestricted>:
	{
 8009e24:	b538      	push	{r3, r4, r5, lr}
 8009e26:	460d      	mov	r5, r1
 8009e28:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009e2a:	b950      	cbnz	r0, 8009e42 <vTaskPlaceOnEventListRestricted+0x1e>
 8009e2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e30:	b672      	cpsid	i
 8009e32:	f383 8811 	msr	BASEPRI, r3
 8009e36:	f3bf 8f6f 	isb	sy
 8009e3a:	f3bf 8f4f 	dsb	sy
 8009e3e:	b662      	cpsie	i
 8009e40:	e7fe      	b.n	8009e40 <vTaskPlaceOnEventListRestricted+0x1c>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009e42:	4b07      	ldr	r3, [pc, #28]	@ (8009e60 <vTaskPlaceOnEventListRestricted+0x3c>)
 8009e44:	6819      	ldr	r1, [r3, #0]
 8009e46:	3118      	adds	r1, #24
 8009e48:	f7fe fcd6 	bl	80087f8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009e4c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009e4e:	4621      	mov	r1, r4
 8009e50:	bf0c      	ite	eq
 8009e52:	4628      	moveq	r0, r5
 8009e54:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8009e58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009e5c:	f7ff bc7c 	b.w	8009758 <prvAddCurrentTaskToDelayedList>
 8009e60:	20014f70 	.word	0x20014f70

08009e64 <xTaskRemoveFromEventList>:
{
 8009e64:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009e66:	68c3      	ldr	r3, [r0, #12]
 8009e68:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8009e6a:	b954      	cbnz	r4, 8009e82 <xTaskRemoveFromEventList+0x1e>
 8009e6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e70:	b672      	cpsid	i
 8009e72:	f383 8811 	msr	BASEPRI, r3
 8009e76:	f3bf 8f6f 	isb	sy
 8009e7a:	f3bf 8f4f 	dsb	sy
 8009e7e:	b662      	cpsie	i
 8009e80:	e7fe      	b.n	8009e80 <xTaskRemoveFromEventList+0x1c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009e82:	f104 0518 	add.w	r5, r4, #24
 8009e86:	4628      	mov	r0, r5
 8009e88:	f7fe fcd8 	bl	800883c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009e8c:	4b11      	ldr	r3, [pc, #68]	@ (8009ed4 <xTaskRemoveFromEventList+0x70>)
 8009e8e:	681b      	ldr	r3, [r3, #0]
 8009e90:	b9d3      	cbnz	r3, 8009ec8 <xTaskRemoveFromEventList+0x64>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8009e92:	1d25      	adds	r5, r4, #4
 8009e94:	4628      	mov	r0, r5
 8009e96:	f7fe fcd1 	bl	800883c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009e9a:	4a0f      	ldr	r2, [pc, #60]	@ (8009ed8 <xTaskRemoveFromEventList+0x74>)
 8009e9c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009e9e:	6811      	ldr	r1, [r2, #0]
 8009ea0:	428b      	cmp	r3, r1
 8009ea2:	d900      	bls.n	8009ea6 <xTaskRemoveFromEventList+0x42>
 8009ea4:	6013      	str	r3, [r2, #0]
 8009ea6:	2014      	movs	r0, #20
 8009ea8:	4a0c      	ldr	r2, [pc, #48]	@ (8009edc <xTaskRemoveFromEventList+0x78>)
 8009eaa:	4629      	mov	r1, r5
 8009eac:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009eb0:	f7fe fca2 	bl	80087f8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8009eb4:	4b0a      	ldr	r3, [pc, #40]	@ (8009ee0 <xTaskRemoveFromEventList+0x7c>)
 8009eb6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8009eb8:	681b      	ldr	r3, [r3, #0]
 8009eba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009ebc:	429a      	cmp	r2, r3
 8009ebe:	d906      	bls.n	8009ece <xTaskRemoveFromEventList+0x6a>
		xYieldPending = pdTRUE;
 8009ec0:	2001      	movs	r0, #1
 8009ec2:	4b08      	ldr	r3, [pc, #32]	@ (8009ee4 <xTaskRemoveFromEventList+0x80>)
 8009ec4:	6018      	str	r0, [r3, #0]
}
 8009ec6:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009ec8:	4629      	mov	r1, r5
 8009eca:	4807      	ldr	r0, [pc, #28]	@ (8009ee8 <xTaskRemoveFromEventList+0x84>)
 8009ecc:	e7f0      	b.n	8009eb0 <xTaskRemoveFromEventList+0x4c>
		xReturn = pdFALSE;
 8009ece:	2000      	movs	r0, #0
	return xReturn;
 8009ed0:	e7f9      	b.n	8009ec6 <xTaskRemoveFromEventList+0x62>
 8009ed2:	bf00      	nop
 8009ed4:	20014a78 	.word	0x20014a78
 8009ed8:	20014a94 	.word	0x20014a94
 8009edc:	20014b10 	.word	0x20014b10
 8009ee0:	20014f70 	.word	0x20014f70
 8009ee4:	20014a88 	.word	0x20014a88
 8009ee8:	20014acc 	.word	0x20014acc

08009eec <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009eec:	4b03      	ldr	r3, [pc, #12]	@ (8009efc <vTaskInternalSetTimeOutState+0x10>)
 8009eee:	681b      	ldr	r3, [r3, #0]
 8009ef0:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8009ef2:	4b03      	ldr	r3, [pc, #12]	@ (8009f00 <vTaskInternalSetTimeOutState+0x14>)
 8009ef4:	681b      	ldr	r3, [r3, #0]
 8009ef6:	6043      	str	r3, [r0, #4]
}
 8009ef8:	4770      	bx	lr
 8009efa:	bf00      	nop
 8009efc:	20014a84 	.word	0x20014a84
 8009f00:	20014a98 	.word	0x20014a98

08009f04 <xTaskCheckForTimeOut>:
{
 8009f04:	b570      	push	{r4, r5, r6, lr}
 8009f06:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009f08:	4605      	mov	r5, r0
 8009f0a:	b950      	cbnz	r0, 8009f22 <xTaskCheckForTimeOut+0x1e>
 8009f0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009f10:	b672      	cpsid	i
 8009f12:	f383 8811 	msr	BASEPRI, r3
 8009f16:	f3bf 8f6f 	isb	sy
 8009f1a:	f3bf 8f4f 	dsb	sy
 8009f1e:	b662      	cpsie	i
 8009f20:	e7fe      	b.n	8009f20 <xTaskCheckForTimeOut+0x1c>
	configASSERT( pxTicksToWait );
 8009f22:	b951      	cbnz	r1, 8009f3a <xTaskCheckForTimeOut+0x36>
 8009f24:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009f28:	b672      	cpsid	i
 8009f2a:	f383 8811 	msr	BASEPRI, r3
 8009f2e:	f3bf 8f6f 	isb	sy
 8009f32:	f3bf 8f4f 	dsb	sy
 8009f36:	b662      	cpsie	i
 8009f38:	e7fe      	b.n	8009f38 <xTaskCheckForTimeOut+0x34>
	taskENTER_CRITICAL();
 8009f3a:	f7fe fcfb 	bl	8008934 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8009f3e:	4b0f      	ldr	r3, [pc, #60]	@ (8009f7c <xTaskCheckForTimeOut+0x78>)
 8009f40:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009f42:	6823      	ldr	r3, [r4, #0]
 8009f44:	1c5a      	adds	r2, r3, #1
 8009f46:	d010      	beq.n	8009f6a <xTaskCheckForTimeOut+0x66>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009f48:	480d      	ldr	r0, [pc, #52]	@ (8009f80 <xTaskCheckForTimeOut+0x7c>)
 8009f4a:	682e      	ldr	r6, [r5, #0]
 8009f4c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009f4e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009f50:	4286      	cmp	r6, r0
 8009f52:	d001      	beq.n	8009f58 <xTaskCheckForTimeOut+0x54>
 8009f54:	428a      	cmp	r2, r1
 8009f56:	d90f      	bls.n	8009f78 <xTaskCheckForTimeOut+0x74>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009f58:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8009f5a:	4283      	cmp	r3, r0
 8009f5c:	d90a      	bls.n	8009f74 <xTaskCheckForTimeOut+0x70>
			*pxTicksToWait -= xElapsedTime;
 8009f5e:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009f60:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 8009f62:	4413      	add	r3, r2
 8009f64:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009f66:	f7ff ffc1 	bl	8009eec <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8009f6a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009f6c:	f7fe fd06 	bl	800897c <vPortExitCritical>
}
 8009f70:	4620      	mov	r0, r4
 8009f72:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009f74:	2300      	movs	r3, #0
 8009f76:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8009f78:	2401      	movs	r4, #1
 8009f7a:	e7f7      	b.n	8009f6c <xTaskCheckForTimeOut+0x68>
 8009f7c:	20014a98 	.word	0x20014a98
 8009f80:	20014a84 	.word	0x20014a84

08009f84 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009f84:	4b01      	ldr	r3, [pc, #4]	@ (8009f8c <vTaskMissedYield+0x8>)
 8009f86:	2201      	movs	r2, #1
 8009f88:	601a      	str	r2, [r3, #0]
}
 8009f8a:	4770      	bx	lr
 8009f8c:	20014a88 	.word	0x20014a88

08009f90 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009f90:	4b05      	ldr	r3, [pc, #20]	@ (8009fa8 <xTaskGetSchedulerState+0x18>)
 8009f92:	681b      	ldr	r3, [r3, #0]
 8009f94:	b133      	cbz	r3, 8009fa4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009f96:	4b05      	ldr	r3, [pc, #20]	@ (8009fac <xTaskGetSchedulerState+0x1c>)
 8009f98:	6818      	ldr	r0, [r3, #0]
 8009f9a:	fab0 f080 	clz	r0, r0
 8009f9e:	0940      	lsrs	r0, r0, #5
 8009fa0:	0040      	lsls	r0, r0, #1
 8009fa2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009fa4:	2001      	movs	r0, #1
	}
 8009fa6:	4770      	bx	lr
 8009fa8:	20014a90 	.word	0x20014a90
 8009fac:	20014a78 	.word	0x20014a78

08009fb0 <xTaskPriorityInherit>:
	{
 8009fb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8009fb2:	4604      	mov	r4, r0
 8009fb4:	b338      	cbz	r0, 800a006 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009fb6:	4d1a      	ldr	r5, [pc, #104]	@ (800a020 <xTaskPriorityInherit+0x70>)
 8009fb8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8009fba:	682a      	ldr	r2, [r5, #0]
 8009fbc:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009fbe:	4293      	cmp	r3, r2
 8009fc0:	d226      	bcs.n	800a010 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009fc2:	6982      	ldr	r2, [r0, #24]
 8009fc4:	2a00      	cmp	r2, #0
 8009fc6:	db04      	blt.n	8009fd2 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009fc8:	682a      	ldr	r2, [r5, #0]
 8009fca:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009fcc:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
 8009fd0:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009fd2:	2214      	movs	r2, #20
 8009fd4:	4e13      	ldr	r6, [pc, #76]	@ (800a024 <xTaskPriorityInherit+0x74>)
 8009fd6:	fb02 6303 	mla	r3, r2, r3, r6
 8009fda:	6962      	ldr	r2, [r4, #20]
 8009fdc:	429a      	cmp	r2, r3
 8009fde:	d113      	bne.n	800a008 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009fe0:	1d27      	adds	r7, r4, #4
 8009fe2:	4638      	mov	r0, r7
 8009fe4:	f7fe fc2a 	bl	800883c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009fe8:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009fea:	4a0f      	ldr	r2, [pc, #60]	@ (800a028 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009fec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009fee:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009ff0:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009ff2:	428b      	cmp	r3, r1
 8009ff4:	d900      	bls.n	8009ff8 <xTaskPriorityInherit+0x48>
 8009ff6:	6013      	str	r3, [r2, #0]
 8009ff8:	2014      	movs	r0, #20
 8009ffa:	4639      	mov	r1, r7
 8009ffc:	fb00 6003 	mla	r0, r0, r3, r6
 800a000:	f7fe fbfa 	bl	80087f8 <vListInsertEnd>
				xReturn = pdTRUE;
 800a004:	2001      	movs	r0, #1
	}
 800a006:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a008:	682b      	ldr	r3, [r5, #0]
 800a00a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a00c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800a00e:	e7f9      	b.n	800a004 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a010:	682b      	ldr	r3, [r5, #0]
 800a012:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800a014:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a016:	4298      	cmp	r0, r3
 800a018:	bf2c      	ite	cs
 800a01a:	2000      	movcs	r0, #0
 800a01c:	2001      	movcc	r0, #1
 800a01e:	e7f2      	b.n	800a006 <xTaskPriorityInherit+0x56>
 800a020:	20014f70 	.word	0x20014f70
 800a024:	20014b10 	.word	0x20014b10
 800a028:	20014a94 	.word	0x20014a94

0800a02c <xTaskPriorityDisinherit>:
	{
 800a02c:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a02e:	b908      	cbnz	r0, 800a034 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 800a030:	2000      	movs	r0, #0
	}
 800a032:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a034:	4b1d      	ldr	r3, [pc, #116]	@ (800a0ac <xTaskPriorityDisinherit+0x80>)
 800a036:	681c      	ldr	r4, [r3, #0]
 800a038:	4284      	cmp	r4, r0
 800a03a:	d00a      	beq.n	800a052 <xTaskPriorityDisinherit+0x26>
 800a03c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a040:	b672      	cpsid	i
 800a042:	f383 8811 	msr	BASEPRI, r3
 800a046:	f3bf 8f6f 	isb	sy
 800a04a:	f3bf 8f4f 	dsb	sy
 800a04e:	b662      	cpsie	i
 800a050:	e7fe      	b.n	800a050 <xTaskPriorityDisinherit+0x24>
			configASSERT( pxTCB->uxMutexesHeld );
 800a052:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800a054:	b953      	cbnz	r3, 800a06c <xTaskPriorityDisinherit+0x40>
 800a056:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a05a:	b672      	cpsid	i
 800a05c:	f383 8811 	msr	BASEPRI, r3
 800a060:	f3bf 8f6f 	isb	sy
 800a064:	f3bf 8f4f 	dsb	sy
 800a068:	b662      	cpsie	i
 800a06a:	e7fe      	b.n	800a06a <xTaskPriorityDisinherit+0x3e>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a06c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
 800a06e:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a070:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a072:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a074:	4291      	cmp	r1, r2
 800a076:	d0db      	beq.n	800a030 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a078:	2b00      	cmp	r3, #0
 800a07a:	d1d9      	bne.n	800a030 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a07c:	1d25      	adds	r5, r4, #4
 800a07e:	4628      	mov	r0, r5
 800a080:	f7fe fbdc 	bl	800883c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a084:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a086:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a08a:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a08c:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a08e:	4a08      	ldr	r2, [pc, #32]	@ (800a0b0 <xTaskPriorityDisinherit+0x84>)
 800a090:	6811      	ldr	r1, [r2, #0]
 800a092:	428b      	cmp	r3, r1
 800a094:	d900      	bls.n	800a098 <xTaskPriorityDisinherit+0x6c>
 800a096:	6013      	str	r3, [r2, #0]
 800a098:	4a06      	ldr	r2, [pc, #24]	@ (800a0b4 <xTaskPriorityDisinherit+0x88>)
 800a09a:	2014      	movs	r0, #20
 800a09c:	4629      	mov	r1, r5
 800a09e:	fb00 2003 	mla	r0, r0, r3, r2
 800a0a2:	f7fe fba9 	bl	80087f8 <vListInsertEnd>
					xReturn = pdTRUE;
 800a0a6:	2001      	movs	r0, #1
		return xReturn;
 800a0a8:	e7c3      	b.n	800a032 <xTaskPriorityDisinherit+0x6>
 800a0aa:	bf00      	nop
 800a0ac:	20014f70 	.word	0x20014f70
 800a0b0:	20014a94 	.word	0x20014a94
 800a0b4:	20014b10 	.word	0x20014b10

0800a0b8 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a0b8:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a0ba:	4604      	mov	r4, r0
 800a0bc:	2800      	cmp	r0, #0
 800a0be:	d046      	beq.n	800a14e <vTaskPriorityDisinheritAfterTimeout+0x96>
			configASSERT( pxTCB->uxMutexesHeld );
 800a0c0:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800a0c2:	b952      	cbnz	r2, 800a0da <vTaskPriorityDisinheritAfterTimeout+0x22>
 800a0c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a0c8:	b672      	cpsid	i
 800a0ca:	f383 8811 	msr	BASEPRI, r3
 800a0ce:	f3bf 8f6f 	isb	sy
 800a0d2:	f3bf 8f4f 	dsb	sy
 800a0d6:	b662      	cpsie	i
 800a0d8:	e7fe      	b.n	800a0d8 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a0da:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800a0dc:	4299      	cmp	r1, r3
 800a0de:	bf38      	it	cc
 800a0e0:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a0e2:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a0e4:	428b      	cmp	r3, r1
 800a0e6:	d032      	beq.n	800a14e <vTaskPriorityDisinheritAfterTimeout+0x96>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a0e8:	2a01      	cmp	r2, #1
 800a0ea:	d130      	bne.n	800a14e <vTaskPriorityDisinheritAfterTimeout+0x96>
					configASSERT( pxTCB != pxCurrentTCB );
 800a0ec:	4a18      	ldr	r2, [pc, #96]	@ (800a150 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a0ee:	6812      	ldr	r2, [r2, #0]
 800a0f0:	4282      	cmp	r2, r0
 800a0f2:	d10a      	bne.n	800a10a <vTaskPriorityDisinheritAfterTimeout+0x52>
 800a0f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a0f8:	b672      	cpsid	i
 800a0fa:	f383 8811 	msr	BASEPRI, r3
 800a0fe:	f3bf 8f6f 	isb	sy
 800a102:	f3bf 8f4f 	dsb	sy
 800a106:	b662      	cpsie	i
 800a108:	e7fe      	b.n	800a108 <vTaskPriorityDisinheritAfterTimeout+0x50>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a10a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a10c:	4d11      	ldr	r5, [pc, #68]	@ (800a154 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a10e:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a110:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 800a114:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a116:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a11a:	bfa8      	it	ge
 800a11c:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a120:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a122:	bfa8      	it	ge
 800a124:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a126:	429a      	cmp	r2, r3
 800a128:	d111      	bne.n	800a14e <vTaskPriorityDisinheritAfterTimeout+0x96>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a12a:	1d06      	adds	r6, r0, #4
 800a12c:	4630      	mov	r0, r6
 800a12e:	f7fe fb85 	bl	800883c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a132:	4a09      	ldr	r2, [pc, #36]	@ (800a158 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a134:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a136:	6811      	ldr	r1, [r2, #0]
 800a138:	428b      	cmp	r3, r1
 800a13a:	d900      	bls.n	800a13e <vTaskPriorityDisinheritAfterTimeout+0x86>
 800a13c:	6013      	str	r3, [r2, #0]
 800a13e:	2014      	movs	r0, #20
 800a140:	4631      	mov	r1, r6
 800a142:	fb00 5003 	mla	r0, r0, r3, r5
	}
 800a146:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 800a14a:	f7fe bb55 	b.w	80087f8 <vListInsertEnd>
	}
 800a14e:	bd70      	pop	{r4, r5, r6, pc}
 800a150:	20014f70 	.word	0x20014f70
 800a154:	20014b10 	.word	0x20014b10
 800a158:	20014a94 	.word	0x20014a94

0800a15c <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a15c:	4b04      	ldr	r3, [pc, #16]	@ (800a170 <pvTaskIncrementMutexHeldCount+0x14>)
 800a15e:	681a      	ldr	r2, [r3, #0]
 800a160:	b11a      	cbz	r2, 800a16a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a162:	6819      	ldr	r1, [r3, #0]
 800a164:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800a166:	3201      	adds	r2, #1
 800a168:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800a16a:	6818      	ldr	r0, [r3, #0]
	}
 800a16c:	4770      	bx	lr
 800a16e:	bf00      	nop
 800a170:	20014f70 	.word	0x20014f70

0800a174 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 800a174:	4291      	cmp	r1, r2
{
 800a176:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a178:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a17a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a17c:	d80a      	bhi.n	800a194 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a17e:	1ad2      	subs	r2, r2, r3
 800a180:	6983      	ldr	r3, [r0, #24]
 800a182:	429a      	cmp	r2, r3
 800a184:	d20d      	bcs.n	800a1a2 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a186:	1d01      	adds	r1, r0, #4
 800a188:	4b07      	ldr	r3, [pc, #28]	@ (800a1a8 <prvInsertTimerInActiveList+0x34>)
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a18a:	6818      	ldr	r0, [r3, #0]
 800a18c:	f7fe fb3f 	bl	800880e <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a190:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 800a192:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a194:	429a      	cmp	r2, r3
 800a196:	d201      	bcs.n	800a19c <prvInsertTimerInActiveList+0x28>
 800a198:	4299      	cmp	r1, r3
 800a19a:	d202      	bcs.n	800a1a2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a19c:	1d01      	adds	r1, r0, #4
 800a19e:	4b03      	ldr	r3, [pc, #12]	@ (800a1ac <prvInsertTimerInActiveList+0x38>)
 800a1a0:	e7f3      	b.n	800a18a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a1a2:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a1a4:	e7f5      	b.n	800a192 <prvInsertTimerInActiveList+0x1e>
 800a1a6:	bf00      	nop
 800a1a8:	20015070 	.word	0x20015070
 800a1ac:	20015074 	.word	0x20015074

0800a1b0 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a1b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a1b2:	4c11      	ldr	r4, [pc, #68]	@ (800a1f8 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a1b4:	f7fe fbbe 	bl	8008934 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a1b8:	6825      	ldr	r5, [r4, #0]
 800a1ba:	b9bd      	cbnz	r5, 800a1ec <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a1bc:	4f0f      	ldr	r7, [pc, #60]	@ (800a1fc <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a1be:	4e10      	ldr	r6, [pc, #64]	@ (800a200 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a1c0:	4638      	mov	r0, r7
 800a1c2:	f7fe fb0b 	bl	80087dc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a1c6:	4630      	mov	r0, r6
 800a1c8:	f7fe fb08 	bl	80087dc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a1cc:	4b0d      	ldr	r3, [pc, #52]	@ (800a204 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a1ce:	4a0e      	ldr	r2, [pc, #56]	@ (800a208 <prvCheckForValidListAndQueue+0x58>)
 800a1d0:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 800a1d2:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a1d4:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 800a1d6:	4b0d      	ldr	r3, [pc, #52]	@ (800a20c <prvCheckForValidListAndQueue+0x5c>)
 800a1d8:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a1da:	4b0d      	ldr	r3, [pc, #52]	@ (800a210 <prvCheckForValidListAndQueue+0x60>)
 800a1dc:	9500      	str	r5, [sp, #0]
 800a1de:	f7fe fdef 	bl	8008dc0 <xQueueGenericCreateStatic>
 800a1e2:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a1e4:	b110      	cbz	r0, 800a1ec <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a1e6:	490b      	ldr	r1, [pc, #44]	@ (800a214 <prvCheckForValidListAndQueue+0x64>)
 800a1e8:	f7ff f9d4 	bl	8009594 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a1ec:	b003      	add	sp, #12
 800a1ee:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a1f2:	f7fe bbc3 	b.w	800897c <vPortExitCritical>
 800a1f6:	bf00      	nop
 800a1f8:	2001506c 	.word	0x2001506c
 800a1fc:	2001508c 	.word	0x2001508c
 800a200:	20015078 	.word	0x20015078
 800a204:	20015074 	.word	0x20015074
 800a208:	20014fc4 	.word	0x20014fc4
 800a20c:	20015070 	.word	0x20015070
 800a210:	20014f74 	.word	0x20014f74
 800a214:	080211e9 	.word	0x080211e9

0800a218 <xTimerCreateTimerTask>:
{
 800a218:	b510      	push	{r4, lr}
 800a21a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a21c:	f7ff ffc8 	bl	800a1b0 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a220:	4b13      	ldr	r3, [pc, #76]	@ (800a270 <xTimerCreateTimerTask+0x58>)
 800a222:	681b      	ldr	r3, [r3, #0]
 800a224:	b1b3      	cbz	r3, 800a254 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a226:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a228:	aa07      	add	r2, sp, #28
 800a22a:	a906      	add	r1, sp, #24
 800a22c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a22e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a232:	f7fe f9cf 	bl	80085d4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a236:	9b05      	ldr	r3, [sp, #20]
 800a238:	9a07      	ldr	r2, [sp, #28]
 800a23a:	9302      	str	r3, [sp, #8]
 800a23c:	9b06      	ldr	r3, [sp, #24]
 800a23e:	490d      	ldr	r1, [pc, #52]	@ (800a274 <xTimerCreateTimerTask+0x5c>)
 800a240:	9301      	str	r3, [sp, #4]
 800a242:	2302      	movs	r3, #2
 800a244:	480c      	ldr	r0, [pc, #48]	@ (800a278 <xTimerCreateTimerTask+0x60>)
 800a246:	9300      	str	r3, [sp, #0]
 800a248:	4623      	mov	r3, r4
 800a24a:	f7ff fb6c 	bl	8009926 <xTaskCreateStatic>
 800a24e:	4b0b      	ldr	r3, [pc, #44]	@ (800a27c <xTimerCreateTimerTask+0x64>)
 800a250:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a252:	b950      	cbnz	r0, 800a26a <xTimerCreateTimerTask+0x52>
 800a254:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a258:	b672      	cpsid	i
 800a25a:	f383 8811 	msr	BASEPRI, r3
 800a25e:	f3bf 8f6f 	isb	sy
 800a262:	f3bf 8f4f 	dsb	sy
 800a266:	b662      	cpsie	i
	configASSERT( xReturn );
 800a268:	e7fe      	b.n	800a268 <xTimerCreateTimerTask+0x50>
}
 800a26a:	2001      	movs	r0, #1
 800a26c:	b008      	add	sp, #32
 800a26e:	bd10      	pop	{r4, pc}
 800a270:	2001506c 	.word	0x2001506c
 800a274:	080211ee 	.word	0x080211ee
 800a278:	0800a381 	.word	0x0800a381
 800a27c:	20015068 	.word	0x20015068

0800a280 <xTimerGenericCommand>:
{
 800a280:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a282:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a284:	4604      	mov	r4, r0
{
 800a286:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a288:	b950      	cbnz	r0, 800a2a0 <xTimerGenericCommand+0x20>
 800a28a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a28e:	b672      	cpsid	i
 800a290:	f383 8811 	msr	BASEPRI, r3
 800a294:	f3bf 8f6f 	isb	sy
 800a298:	f3bf 8f4f 	dsb	sy
 800a29c:	b662      	cpsie	i
 800a29e:	e7fe      	b.n	800a29e <xTimerGenericCommand+0x1e>
	if( xTimerQueue != NULL )
 800a2a0:	4d0c      	ldr	r5, [pc, #48]	@ (800a2d4 <xTimerGenericCommand+0x54>)
 800a2a2:	6828      	ldr	r0, [r5, #0]
 800a2a4:	b178      	cbz	r0, 800a2c6 <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a2a6:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a2a8:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a2aa:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a2ae:	dc0c      	bgt.n	800a2ca <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a2b0:	f7ff fe6e 	bl	8009f90 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a2b4:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a2b6:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a2b8:	4669      	mov	r1, sp
 800a2ba:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a2bc:	bf0c      	ite	eq
 800a2be:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a2c0:	461a      	movne	r2, r3
 800a2c2:	f7fe fe02 	bl	8008eca <xQueueGenericSend>
}
 800a2c6:	b004      	add	sp, #16
 800a2c8:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a2ca:	2300      	movs	r3, #0
 800a2cc:	4669      	mov	r1, sp
 800a2ce:	f7fe fee8 	bl	80090a2 <xQueueGenericSendFromISR>
 800a2d2:	e7f8      	b.n	800a2c6 <xTimerGenericCommand+0x46>
 800a2d4:	2001506c 	.word	0x2001506c

0800a2d8 <prvSampleTimeNow>:
{
 800a2d8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a2dc:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 800a37c <prvSampleTimeNow+0xa4>
{
 800a2e0:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a2e2:	f7ff fb95 	bl	8009a10 <xTaskGetTickCount>
 800a2e6:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a2e8:	f8d8 3000 	ldr.w	r3, [r8]
 800a2ec:	4283      	cmp	r3, r0
 800a2ee:	d909      	bls.n	800a304 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a2f0:	4f20      	ldr	r7, [pc, #128]	@ (800a374 <prvSampleTimeNow+0x9c>)
 800a2f2:	683b      	ldr	r3, [r7, #0]
 800a2f4:	681a      	ldr	r2, [r3, #0]
 800a2f6:	b96a      	cbnz	r2, 800a314 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a2f8:	4a1f      	ldr	r2, [pc, #124]	@ (800a378 <prvSampleTimeNow+0xa0>)
 800a2fa:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 800a2fc:	6013      	str	r3, [r2, #0]
 800a2fe:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
 800a300:	6039      	str	r1, [r7, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a302:	e000      	b.n	800a306 <prvSampleTimeNow+0x2e>
 800a304:	2300      	movs	r3, #0
}
 800a306:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800a308:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a30a:	f8c8 5000 	str.w	r5, [r8]
}
 800a30e:	b002      	add	sp, #8
 800a310:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a314:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a316:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a318:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a31c:	f104 0a04 	add.w	sl, r4, #4
 800a320:	4650      	mov	r0, sl
 800a322:	f7fe fa8b 	bl	800883c <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a326:	6a23      	ldr	r3, [r4, #32]
 800a328:	4620      	mov	r0, r4
 800a32a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a32c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a330:	075b      	lsls	r3, r3, #29
 800a332:	d5de      	bpl.n	800a2f2 <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a334:	69a3      	ldr	r3, [r4, #24]
 800a336:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 800a338:	4599      	cmp	r9, r3
 800a33a:	d206      	bcs.n	800a34a <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a33c:	4651      	mov	r1, sl
 800a33e:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a340:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a342:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a344:	f7fe fa63 	bl	800880e <vListInsert>
 800a348:	e7d3      	b.n	800a2f2 <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a34a:	2300      	movs	r3, #0
 800a34c:	464a      	mov	r2, r9
 800a34e:	4620      	mov	r0, r4
 800a350:	4619      	mov	r1, r3
 800a352:	9300      	str	r3, [sp, #0]
 800a354:	f7ff ff94 	bl	800a280 <xTimerGenericCommand>
				configASSERT( xResult );
 800a358:	2800      	cmp	r0, #0
 800a35a:	d1ca      	bne.n	800a2f2 <prvSampleTimeNow+0x1a>
 800a35c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a360:	b672      	cpsid	i
 800a362:	f383 8811 	msr	BASEPRI, r3
 800a366:	f3bf 8f6f 	isb	sy
 800a36a:	f3bf 8f4f 	dsb	sy
 800a36e:	b662      	cpsie	i
 800a370:	e7fe      	b.n	800a370 <prvSampleTimeNow+0x98>
 800a372:	bf00      	nop
 800a374:	20015074 	.word	0x20015074
 800a378:	20015070 	.word	0x20015070
 800a37c:	20015064 	.word	0x20015064

0800a380 <prvTimerTask>:
{
 800a380:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a384:	4d71      	ldr	r5, [pc, #452]	@ (800a54c <prvTimerTask+0x1cc>)
{
 800a386:	b089      	sub	sp, #36	@ 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a388:	4e71      	ldr	r6, [pc, #452]	@ (800a550 <prvTimerTask+0x1d0>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a38a:	682b      	ldr	r3, [r5, #0]
 800a38c:	f8d3 8000 	ldr.w	r8, [r3]
 800a390:	f1b8 0f00 	cmp.w	r8, #0
 800a394:	d037      	beq.n	800a406 <prvTimerTask+0x86>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a396:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a398:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a39a:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
 800a39e:	f7ff fb2f 	bl	8009a00 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a3a2:	a804      	add	r0, sp, #16
 800a3a4:	f7ff ff98 	bl	800a2d8 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a3a8:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a3aa:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a3ac:	2b00      	cmp	r3, #0
 800a3ae:	d16b      	bne.n	800a488 <prvTimerTask+0x108>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a3b0:	2c00      	cmp	r4, #0
 800a3b2:	d14e      	bne.n	800a452 <prvTimerTask+0xd2>
 800a3b4:	4540      	cmp	r0, r8
 800a3b6:	d352      	bcc.n	800a45e <prvTimerTask+0xde>
				( void ) xTaskResumeAll();
 800a3b8:	f7ff fbc8 	bl	8009b4c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a3bc:	682b      	ldr	r3, [r5, #0]
 800a3be:	68db      	ldr	r3, [r3, #12]
 800a3c0:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a3c2:	1d38      	adds	r0, r7, #4
 800a3c4:	f7fe fa3a 	bl	800883c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a3c8:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800a3cc:	0758      	lsls	r0, r3, #29
 800a3ce:	d51c      	bpl.n	800a40a <prvTimerTask+0x8a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a3d0:	69b9      	ldr	r1, [r7, #24]
 800a3d2:	4643      	mov	r3, r8
 800a3d4:	464a      	mov	r2, r9
 800a3d6:	4638      	mov	r0, r7
 800a3d8:	4441      	add	r1, r8
 800a3da:	f7ff fecb 	bl	800a174 <prvInsertTimerInActiveList>
 800a3de:	b1c0      	cbz	r0, 800a412 <prvTimerTask+0x92>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a3e0:	4623      	mov	r3, r4
 800a3e2:	4642      	mov	r2, r8
 800a3e4:	4621      	mov	r1, r4
 800a3e6:	4638      	mov	r0, r7
 800a3e8:	9400      	str	r4, [sp, #0]
 800a3ea:	f7ff ff49 	bl	800a280 <xTimerGenericCommand>
			configASSERT( xResult );
 800a3ee:	b980      	cbnz	r0, 800a412 <prvTimerTask+0x92>
 800a3f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a3f4:	b672      	cpsid	i
 800a3f6:	f383 8811 	msr	BASEPRI, r3
 800a3fa:	f3bf 8f6f 	isb	sy
 800a3fe:	f3bf 8f4f 	dsb	sy
 800a402:	b662      	cpsie	i
 800a404:	e7fe      	b.n	800a404 <prvTimerTask+0x84>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a406:	2401      	movs	r4, #1
 800a408:	e7c9      	b.n	800a39e <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a40a:	f023 0301 	bic.w	r3, r3, #1
 800a40e:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a412:	6a3b      	ldr	r3, [r7, #32]
 800a414:	4638      	mov	r0, r7
 800a416:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a418:	2200      	movs	r2, #0
 800a41a:	a904      	add	r1, sp, #16
 800a41c:	6830      	ldr	r0, [r6, #0]
 800a41e:	f7fe fefd 	bl	800921c <xQueueReceive>
 800a422:	2800      	cmp	r0, #0
 800a424:	d0b1      	beq.n	800a38a <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a426:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a428:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a42a:	2b00      	cmp	r3, #0
 800a42c:	db2f      	blt.n	800a48e <prvTimerTask+0x10e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a42e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a430:	6963      	ldr	r3, [r4, #20]
 800a432:	2b00      	cmp	r3, #0
 800a434:	d132      	bne.n	800a49c <prvTimerTask+0x11c>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a436:	a803      	add	r0, sp, #12
 800a438:	f7ff ff4e 	bl	800a2d8 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a43c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a43e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a440:	2b09      	cmp	r3, #9
 800a442:	d8e9      	bhi.n	800a418 <prvTimerTask+0x98>
 800a444:	e8df f003 	tbb	[pc, r3]
 800a448:	592e2e2e 	.word	0x592e2e2e
 800a44c:	2e2e7a60 	.word	0x2e2e7a60
 800a450:	6059      	.short	0x6059
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a452:	4b40      	ldr	r3, [pc, #256]	@ (800a554 <prvTimerTask+0x1d4>)
 800a454:	681b      	ldr	r3, [r3, #0]
 800a456:	681c      	ldr	r4, [r3, #0]
 800a458:	fab4 f484 	clz	r4, r4
 800a45c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a45e:	4622      	mov	r2, r4
 800a460:	eba8 0109 	sub.w	r1, r8, r9
 800a464:	6830      	ldr	r0, [r6, #0]
 800a466:	f7ff f8d6 	bl	8009616 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a46a:	f7ff fb6f 	bl	8009b4c <xTaskResumeAll>
 800a46e:	2800      	cmp	r0, #0
 800a470:	d1d2      	bne.n	800a418 <prvTimerTask+0x98>
					portYIELD_WITHIN_API();
 800a472:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a476:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a47a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a47e:	f3bf 8f4f 	dsb	sy
 800a482:	f3bf 8f6f 	isb	sy
 800a486:	e7c7      	b.n	800a418 <prvTimerTask+0x98>
			( void ) xTaskResumeAll();
 800a488:	f7ff fb60 	bl	8009b4c <xTaskResumeAll>
}
 800a48c:	e7c4      	b.n	800a418 <prvTimerTask+0x98>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a48e:	9b05      	ldr	r3, [sp, #20]
 800a490:	9907      	ldr	r1, [sp, #28]
 800a492:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a494:	9b04      	ldr	r3, [sp, #16]
 800a496:	2b00      	cmp	r3, #0
 800a498:	dbbe      	blt.n	800a418 <prvTimerTask+0x98>
 800a49a:	e7c8      	b.n	800a42e <prvTimerTask+0xae>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a49c:	1d20      	adds	r0, r4, #4
 800a49e:	f7fe f9cd 	bl	800883c <uxListRemove>
 800a4a2:	e7c8      	b.n	800a436 <prvTimerTask+0xb6>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a4a4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a4a8:	4620      	mov	r0, r4
 800a4aa:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a4ac:	f043 0301 	orr.w	r3, r3, #1
 800a4b0:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a4b4:	9b05      	ldr	r3, [sp, #20]
 800a4b6:	4419      	add	r1, r3
 800a4b8:	f7ff fe5c 	bl	800a174 <prvInsertTimerInActiveList>
 800a4bc:	2800      	cmp	r0, #0
 800a4be:	d0ab      	beq.n	800a418 <prvTimerTask+0x98>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a4c0:	6a23      	ldr	r3, [r4, #32]
 800a4c2:	4620      	mov	r0, r4
 800a4c4:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a4c6:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a4ca:	0759      	lsls	r1, r3, #29
 800a4cc:	d5a4      	bpl.n	800a418 <prvTimerTask+0x98>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a4ce:	69a2      	ldr	r2, [r4, #24]
 800a4d0:	2300      	movs	r3, #0
 800a4d2:	9905      	ldr	r1, [sp, #20]
 800a4d4:	4620      	mov	r0, r4
 800a4d6:	9300      	str	r3, [sp, #0]
 800a4d8:	440a      	add	r2, r1
 800a4da:	4619      	mov	r1, r3
 800a4dc:	f7ff fed0 	bl	800a280 <xTimerGenericCommand>
							configASSERT( xResult );
 800a4e0:	2800      	cmp	r0, #0
 800a4e2:	d199      	bne.n	800a418 <prvTimerTask+0x98>
 800a4e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a4e8:	b672      	cpsid	i
 800a4ea:	f383 8811 	msr	BASEPRI, r3
 800a4ee:	f3bf 8f6f 	isb	sy
 800a4f2:	f3bf 8f4f 	dsb	sy
 800a4f6:	b662      	cpsie	i
 800a4f8:	e7fe      	b.n	800a4f8 <prvTimerTask+0x178>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a4fa:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a4fe:	f023 0301 	bic.w	r3, r3, #1
 800a502:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a506:	e787      	b.n	800a418 <prvTimerTask+0x98>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a508:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a50c:	f043 0301 	orr.w	r3, r3, #1
 800a510:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a514:	9905      	ldr	r1, [sp, #20]
 800a516:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a518:	b951      	cbnz	r1, 800a530 <prvTimerTask+0x1b0>
 800a51a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a51e:	b672      	cpsid	i
 800a520:	f383 8811 	msr	BASEPRI, r3
 800a524:	f3bf 8f6f 	isb	sy
 800a528:	f3bf 8f4f 	dsb	sy
 800a52c:	b662      	cpsie	i
 800a52e:	e7fe      	b.n	800a52e <prvTimerTask+0x1ae>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a530:	4603      	mov	r3, r0
 800a532:	4401      	add	r1, r0
 800a534:	4620      	mov	r0, r4
 800a536:	f7ff fe1d 	bl	800a174 <prvInsertTimerInActiveList>
					break;
 800a53a:	e76d      	b.n	800a418 <prvTimerTask+0x98>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a53c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a540:	079a      	lsls	r2, r3, #30
 800a542:	d4dc      	bmi.n	800a4fe <prvTimerTask+0x17e>
							vPortFree( pxTimer );
 800a544:	4620      	mov	r0, r4
 800a546:	f7fe f90d 	bl	8008764 <vPortFree>
 800a54a:	e765      	b.n	800a418 <prvTimerTask+0x98>
 800a54c:	20015074 	.word	0x20015074
 800a550:	2001506c 	.word	0x2001506c
 800a554:	20015070 	.word	0x20015070

0800a558 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a558:	8880      	ldrh	r0, [r0, #4]
 800a55a:	4770      	bx	lr

0800a55c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a55c:	b570      	push	{r4, r5, r6, lr}
 800a55e:	6803      	ldr	r3, [r0, #0]
 800a560:	460c      	mov	r4, r1
 800a562:	2100      	movs	r1, #0
 800a564:	4605      	mov	r5, r0
 800a566:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a568:	4798      	blx	r3
 800a56a:	4606      	mov	r6, r0
 800a56c:	682b      	ldr	r3, [r5, #0]
 800a56e:	4628      	mov	r0, r5
 800a570:	1ba4      	subs	r4, r4, r6
 800a572:	6a1b      	ldr	r3, [r3, #32]
 800a574:	b2a4      	uxth	r4, r4
 800a576:	4798      	blx	r3
 800a578:	fbb4 f0f0 	udiv	r0, r4, r0
 800a57c:	bd70      	pop	{r4, r5, r6, pc}

0800a57e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a57e:	2300      	movs	r3, #0
 800a580:	8083      	strh	r3, [r0, #4]
 800a582:	4770      	bx	lr

0800a584 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a584:	b510      	push	{r4, lr}
 800a586:	6803      	ldr	r3, [r0, #0]
 800a588:	4604      	mov	r4, r0
 800a58a:	8881      	ldrh	r1, [r0, #4]
 800a58c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a58e:	4798      	blx	r3
 800a590:	88a3      	ldrh	r3, [r4, #4]
 800a592:	3301      	adds	r3, #1
 800a594:	80a3      	strh	r3, [r4, #4]
 800a596:	bd10      	pop	{r4, pc}

0800a598 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a598:	6803      	ldr	r3, [r0, #0]
 800a59a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a59c:	4718      	bx	r3

0800a59e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a59e:	4770      	bx	lr

0800a5a0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a5a0:	4a02      	ldr	r2, [pc, #8]	@ (800a5ac <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a5a2:	6002      	str	r2, [r0, #0]
 800a5a4:	2200      	movs	r2, #0
 800a5a6:	8082      	strh	r2, [r0, #4]
 800a5a8:	4770      	bx	lr
 800a5aa:	bf00      	nop
 800a5ac:	08021200 	.word	0x08021200

0800a5b0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a5b0:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a5b2:	2000      	movs	r0, #0
 800a5b4:	b12b      	cbz	r3, 800a5c2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a5b6:	b920      	cbnz	r0, 800a5c2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a5b8:	1a5a      	subs	r2, r3, r1
 800a5ba:	699b      	ldr	r3, [r3, #24]
 800a5bc:	4250      	negs	r0, r2
 800a5be:	4150      	adcs	r0, r2
 800a5c0:	e7f8      	b.n	800a5b4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a5c2:	4770      	bx	lr

0800a5c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a5c4:	2300      	movs	r3, #0
 800a5c6:	6148      	str	r0, [r1, #20]
 800a5c8:	618b      	str	r3, [r1, #24]
 800a5ca:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a5cc:	b913      	cbnz	r3, 800a5d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a5ce:	6281      	str	r1, [r0, #40]	@ 0x28
 800a5d0:	4770      	bx	lr
 800a5d2:	4613      	mov	r3, r2
 800a5d4:	699a      	ldr	r2, [r3, #24]
 800a5d6:	2a00      	cmp	r2, #0
 800a5d8:	d1fb      	bne.n	800a5d2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a5da:	6199      	str	r1, [r3, #24]
 800a5dc:	4770      	bx	lr

0800a5de <_ZN8touchgfx9Container9removeAllEv>:
 800a5de:	2200      	movs	r2, #0
 800a5e0:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a5e2:	b123      	cbz	r3, 800a5ee <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a5e4:	6999      	ldr	r1, [r3, #24]
 800a5e6:	6281      	str	r1, [r0, #40]	@ 0x28
 800a5e8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a5ec:	e7f8      	b.n	800a5e0 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a5ee:	4770      	bx	lr

0800a5f0 <_ZN8touchgfx9Container6unlinkEv>:
 800a5f0:	2300      	movs	r3, #0
 800a5f2:	6283      	str	r3, [r0, #40]	@ 0x28
 800a5f4:	4770      	bx	lr

0800a5f6 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a5f6:	2200      	movs	r2, #0
 800a5f8:	8002      	strh	r2, [r0, #0]
 800a5fa:	8042      	strh	r2, [r0, #2]
 800a5fc:	8082      	strh	r2, [r0, #4]
 800a5fe:	80c2      	strh	r2, [r0, #6]
 800a600:	4770      	bx	lr

0800a602 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a602:	b570      	push	{r4, r5, r6, lr}
 800a604:	460d      	mov	r5, r1
 800a606:	4616      	mov	r6, r2
 800a608:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a60a:	b13c      	cbz	r4, 800a61c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a60c:	6823      	ldr	r3, [r4, #0]
 800a60e:	4620      	mov	r0, r4
 800a610:	4632      	mov	r2, r6
 800a612:	4629      	mov	r1, r5
 800a614:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a616:	4798      	blx	r3
 800a618:	69a4      	ldr	r4, [r4, #24]
 800a61a:	e7f6      	b.n	800a60a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a61c:	bd70      	pop	{r4, r5, r6, pc}

0800a61e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a61e:	b538      	push	{r3, r4, r5, lr}
 800a620:	460d      	mov	r5, r1
 800a622:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a624:	b134      	cbz	r4, 800a634 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a626:	682b      	ldr	r3, [r5, #0]
 800a628:	4621      	mov	r1, r4
 800a62a:	4628      	mov	r0, r5
 800a62c:	689b      	ldr	r3, [r3, #8]
 800a62e:	4798      	blx	r3
 800a630:	69a4      	ldr	r4, [r4, #24]
 800a632:	e7f7      	b.n	800a624 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a634:	bd38      	pop	{r3, r4, r5, pc}

0800a636 <_ZN8touchgfx9ContainerD1Ev>:
 800a636:	4770      	bx	lr

0800a638 <_ZN8touchgfx9ContainerD0Ev>:
 800a638:	b510      	push	{r4, lr}
 800a63a:	4604      	mov	r4, r0
 800a63c:	212c      	movs	r1, #44	@ 0x2c
 800a63e:	f014 f9c8 	bl	801e9d2 <_ZdlPvj>
 800a642:	4620      	mov	r0, r4
 800a644:	bd10      	pop	{r4, pc}

0800a646 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a646:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a648:	b19b      	cbz	r3, 800a672 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a64a:	428b      	cmp	r3, r1
 800a64c:	d109      	bne.n	800a662 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a64e:	699a      	ldr	r2, [r3, #24]
 800a650:	2100      	movs	r1, #0
 800a652:	6159      	str	r1, [r3, #20]
 800a654:	6282      	str	r2, [r0, #40]	@ 0x28
 800a656:	b902      	cbnz	r2, 800a65a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a658:	4770      	bx	lr
 800a65a:	6199      	str	r1, [r3, #24]
 800a65c:	4770      	bx	lr
 800a65e:	4613      	mov	r3, r2
 800a660:	b13a      	cbz	r2, 800a672 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a662:	699a      	ldr	r2, [r3, #24]
 800a664:	428a      	cmp	r2, r1
 800a666:	d1fa      	bne.n	800a65e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a668:	698a      	ldr	r2, [r1, #24]
 800a66a:	619a      	str	r2, [r3, #24]
 800a66c:	2300      	movs	r3, #0
 800a66e:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a672:	4770      	bx	lr

0800a674 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a674:	b410      	push	{r4}
 800a676:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a678:	4604      	mov	r4, r0
 800a67a:	b92b      	cbnz	r3, 800a688 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a67c:	6803      	ldr	r3, [r0, #0]
 800a67e:	4611      	mov	r1, r2
 800a680:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a684:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a686:	4718      	bx	r3
 800a688:	b941      	cbnz	r1, 800a69c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a68a:	6193      	str	r3, [r2, #24]
 800a68c:	6282      	str	r2, [r0, #40]	@ 0x28
 800a68e:	6154      	str	r4, [r2, #20]
 800a690:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a694:	4770      	bx	lr
 800a696:	4603      	mov	r3, r0
 800a698:	2800      	cmp	r0, #0
 800a69a:	d0f9      	beq.n	800a690 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a69c:	4299      	cmp	r1, r3
 800a69e:	6998      	ldr	r0, [r3, #24]
 800a6a0:	d1f9      	bne.n	800a696 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a6a2:	6190      	str	r0, [r2, #24]
 800a6a4:	618a      	str	r2, [r1, #24]
 800a6a6:	e7f2      	b.n	800a68e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a6a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a6a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6ac:	461f      	mov	r7, r3
 800a6ae:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800a6b2:	460d      	mov	r5, r1
 800a6b4:	4616      	mov	r6, r2
 800a6b6:	b103      	cbz	r3, 800a6ba <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a6b8:	6038      	str	r0, [r7, #0]
 800a6ba:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a6bc:	b314      	cbz	r4, 800a704 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a6be:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a6c2:	b1eb      	cbz	r3, 800a700 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a6c4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a6c8:	428d      	cmp	r5, r1
 800a6ca:	db19      	blt.n	800a700 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a6cc:	b289      	uxth	r1, r1
 800a6ce:	8923      	ldrh	r3, [r4, #8]
 800a6d0:	440b      	add	r3, r1
 800a6d2:	b21b      	sxth	r3, r3
 800a6d4:	429d      	cmp	r5, r3
 800a6d6:	da13      	bge.n	800a700 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a6d8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a6dc:	4296      	cmp	r6, r2
 800a6de:	db0f      	blt.n	800a700 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a6e0:	b292      	uxth	r2, r2
 800a6e2:	8963      	ldrh	r3, [r4, #10]
 800a6e4:	4413      	add	r3, r2
 800a6e6:	b21b      	sxth	r3, r3
 800a6e8:	429e      	cmp	r6, r3
 800a6ea:	da09      	bge.n	800a700 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a6ec:	6823      	ldr	r3, [r4, #0]
 800a6ee:	1ab2      	subs	r2, r6, r2
 800a6f0:	1a69      	subs	r1, r5, r1
 800a6f2:	4620      	mov	r0, r4
 800a6f4:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800a6f8:	b212      	sxth	r2, r2
 800a6fa:	463b      	mov	r3, r7
 800a6fc:	b209      	sxth	r1, r1
 800a6fe:	47c0      	blx	r8
 800a700:	69a4      	ldr	r4, [r4, #24]
 800a702:	e7db      	b.n	800a6bc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a708 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a70c:	4c6d      	ldr	r4, [pc, #436]	@ (800a8c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800a70e:	b0a1      	sub	sp, #132	@ 0x84
 800a710:	4606      	mov	r6, r0
 800a712:	6824      	ldr	r4, [r4, #0]
 800a714:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800a716:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800a71a:	2400      	movs	r4, #0
 800a71c:	9303      	str	r3, [sp, #12]
 800a71e:	802c      	strh	r4, [r5, #0]
 800a720:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800a722:	802c      	strh	r4, [r5, #0]
 800a724:	601c      	str	r4, [r3, #0]
 800a726:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a72a:	f7ff ffbd 	bl	800a6a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a72e:	f1b9 0f03 	cmp.w	r9, #3
 800a732:	f340 80c1 	ble.w	800a8b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800a736:	4631      	mov	r1, r6
 800a738:	a80c      	add	r0, sp, #48	@ 0x30
 800a73a:	f004 fd9d 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a73e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800a742:	9306      	str	r3, [sp, #24]
 800a744:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800a748:	9307      	str	r3, [sp, #28]
 800a74a:	9b03      	ldr	r3, [sp, #12]
 800a74c:	f8d3 a000 	ldr.w	sl, [r3]
 800a750:	f1ba 0f00 	cmp.w	sl, #0
 800a754:	f000 80b3 	beq.w	800a8be <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800a758:	4651      	mov	r1, sl
 800a75a:	a810      	add	r0, sp, #64	@ 0x40
 800a75c:	f004 fd8c 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a760:	2002      	movs	r0, #2
 800a762:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800a766:	9b01      	ldr	r3, [sp, #4]
 800a768:	9a06      	ldr	r2, [sp, #24]
 800a76a:	fb91 f1f0 	sdiv	r1, r1, r0
 800a76e:	189d      	adds	r5, r3, r2
 800a770:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800a774:	9a07      	ldr	r2, [sp, #28]
 800a776:	4419      	add	r1, r3
 800a778:	9b02      	ldr	r3, [sp, #8]
 800a77a:	4413      	add	r3, r2
 800a77c:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800a780:	1a6d      	subs	r5, r5, r1
 800a782:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800a786:	fb92 f2f0 	sdiv	r2, r2, r0
 800a78a:	440a      	add	r2, r1
 800a78c:	1a9b      	subs	r3, r3, r2
 800a78e:	435b      	muls	r3, r3
 800a790:	fb05 3505 	mla	r5, r5, r5, r3
 800a794:	4f4c      	ldr	r7, [pc, #304]	@ (800a8c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a796:	ac10      	add	r4, sp, #64	@ 0x40
 800a798:	f1b9 0f0c 	cmp.w	r9, #12
 800a79c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a79e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a7a0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a7a2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a7a4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a7a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a7a8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a7ac:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a7b0:	f04f 0303 	mov.w	r3, #3
 800a7b4:	bfd8      	it	le
 800a7b6:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a7ba:	f04f 0400 	mov.w	r4, #0
 800a7be:	f8cd 9000 	str.w	r9, [sp]
 800a7c2:	bfcc      	ite	gt
 800a7c4:	4698      	movgt	r8, r3
 800a7c6:	fb92 f8f3 	sdivle	r8, r2, r3
 800a7ca:	1c63      	adds	r3, r4, #1
 800a7cc:	aa10      	add	r2, sp, #64	@ 0x40
 800a7ce:	f004 0401 	and.w	r4, r4, #1
 800a7d2:	f04f 0b00 	mov.w	fp, #0
 800a7d6:	9308      	str	r3, [sp, #32]
 800a7d8:	9b00      	ldr	r3, [sp, #0]
 800a7da:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a7de:	fb93 f3f8 	sdiv	r3, r3, r8
 800a7e2:	3404      	adds	r4, #4
 800a7e4:	b29b      	uxth	r3, r3
 800a7e6:	9304      	str	r3, [sp, #16]
 800a7e8:	9a04      	ldr	r2, [sp, #16]
 800a7ea:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a7ee:	fb13 f302 	smulbb	r3, r3, r2
 800a7f2:	9a01      	ldr	r2, [sp, #4]
 800a7f4:	b29b      	uxth	r3, r3
 800a7f6:	1899      	adds	r1, r3, r2
 800a7f8:	9305      	str	r3, [sp, #20]
 800a7fa:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a7fe:	b209      	sxth	r1, r1
 800a800:	4299      	cmp	r1, r3
 800a802:	db4d      	blt.n	800a8a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a804:	8932      	ldrh	r2, [r6, #8]
 800a806:	4413      	add	r3, r2
 800a808:	b21b      	sxth	r3, r3
 800a80a:	4299      	cmp	r1, r3
 800a80c:	da48      	bge.n	800a8a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a80e:	9b04      	ldr	r3, [sp, #16]
 800a810:	6827      	ldr	r7, [r4, #0]
 800a812:	fb17 f703 	smulbb	r7, r7, r3
 800a816:	9b02      	ldr	r3, [sp, #8]
 800a818:	b2bf      	uxth	r7, r7
 800a81a:	18fa      	adds	r2, r7, r3
 800a81c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a820:	b212      	sxth	r2, r2
 800a822:	429a      	cmp	r2, r3
 800a824:	db3c      	blt.n	800a8a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a826:	8970      	ldrh	r0, [r6, #10]
 800a828:	4403      	add	r3, r0
 800a82a:	b21b      	sxth	r3, r3
 800a82c:	429a      	cmp	r2, r3
 800a82e:	da37      	bge.n	800a8a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a830:	2300      	movs	r3, #0
 800a832:	4630      	mov	r0, r6
 800a834:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a836:	ab0b      	add	r3, sp, #44	@ 0x2c
 800a838:	f7ff ff36 	bl	800a6a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a83c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800a83e:	b37a      	cbz	r2, 800a8a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a840:	4552      	cmp	r2, sl
 800a842:	d02d      	beq.n	800a8a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a844:	4611      	mov	r1, r2
 800a846:	a80e      	add	r0, sp, #56	@ 0x38
 800a848:	9209      	str	r2, [sp, #36]	@ 0x24
 800a84a:	f004 fd15 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a84e:	f04f 0e02 	mov.w	lr, #2
 800a852:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800a856:	9a06      	ldr	r2, [sp, #24]
 800a858:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800a85c:	9b01      	ldr	r3, [sp, #4]
 800a85e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800a862:	4413      	add	r3, r2
 800a864:	9a07      	ldr	r2, [sp, #28]
 800a866:	fb91 f1fe 	sdiv	r1, r1, lr
 800a86a:	fb9c fcfe 	sdiv	ip, ip, lr
 800a86e:	4401      	add	r1, r0
 800a870:	1a58      	subs	r0, r3, r1
 800a872:	9b02      	ldr	r3, [sp, #8]
 800a874:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800a878:	4413      	add	r3, r2
 800a87a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a87c:	448c      	add	ip, r1
 800a87e:	eba3 030c 	sub.w	r3, r3, ip
 800a882:	435b      	muls	r3, r3
 800a884:	fb00 3300 	mla	r3, r0, r0, r3
 800a888:	42ab      	cmp	r3, r5
 800a88a:	d208      	bcs.n	800a89e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a88c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800a88e:	461d      	mov	r5, r3
 800a890:	9803      	ldr	r0, [sp, #12]
 800a892:	6001      	str	r1, [r0, #0]
 800a894:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800a896:	9805      	ldr	r0, [sp, #20]
 800a898:	8008      	strh	r0, [r1, #0]
 800a89a:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800a89c:	800f      	strh	r7, [r1, #0]
 800a89e:	4692      	mov	sl, r2
 800a8a0:	f10b 0b01 	add.w	fp, fp, #1
 800a8a4:	3408      	adds	r4, #8
 800a8a6:	f1bb 0f04 	cmp.w	fp, #4
 800a8aa:	d19d      	bne.n	800a7e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a8ac:	9b00      	ldr	r3, [sp, #0]
 800a8ae:	9c08      	ldr	r4, [sp, #32]
 800a8b0:	444b      	add	r3, r9
 800a8b2:	4544      	cmp	r4, r8
 800a8b4:	9300      	str	r3, [sp, #0]
 800a8b6:	d188      	bne.n	800a7ca <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a8b8:	b021      	add	sp, #132	@ 0x84
 800a8ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a8be:	f04f 35ff 	mov.w	r5, #4294967295
 800a8c2:	e767      	b.n	800a794 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a8c4:	200150ac 	.word	0x200150ac
 800a8c8:	0801fad4 	.word	0x0801fad4

0800a8cc <_ZN8touchgfx4RectaNERKS0_>:
 800a8cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a8d0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a8d4:	888c      	ldrh	r4, [r1, #4]
 800a8d6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a8da:	443c      	add	r4, r7
 800a8dc:	b2a4      	uxth	r4, r4
 800a8de:	fa0f f884 	sxth.w	r8, r4
 800a8e2:	45c1      	cmp	r9, r8
 800a8e4:	da2f      	bge.n	800a946 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a8e6:	8882      	ldrh	r2, [r0, #4]
 800a8e8:	444a      	add	r2, r9
 800a8ea:	b292      	uxth	r2, r2
 800a8ec:	fa0f fe82 	sxth.w	lr, r2
 800a8f0:	4577      	cmp	r7, lr
 800a8f2:	da28      	bge.n	800a946 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a8f4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a8f8:	88cb      	ldrh	r3, [r1, #6]
 800a8fa:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a8fe:	442b      	add	r3, r5
 800a900:	b21b      	sxth	r3, r3
 800a902:	429e      	cmp	r6, r3
 800a904:	da1f      	bge.n	800a946 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a906:	88c3      	ldrh	r3, [r0, #6]
 800a908:	4433      	add	r3, r6
 800a90a:	b29b      	uxth	r3, r3
 800a90c:	fa0f fc83 	sxth.w	ip, r3
 800a910:	4565      	cmp	r5, ip
 800a912:	da18      	bge.n	800a946 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a914:	454f      	cmp	r7, r9
 800a916:	bfb8      	it	lt
 800a918:	464f      	movlt	r7, r9
 800a91a:	42b5      	cmp	r5, r6
 800a91c:	bfb8      	it	lt
 800a91e:	4635      	movlt	r5, r6
 800a920:	45f0      	cmp	r8, lr
 800a922:	bfd8      	it	le
 800a924:	4622      	movle	r2, r4
 800a926:	1bd2      	subs	r2, r2, r7
 800a928:	8082      	strh	r2, [r0, #4]
 800a92a:	884a      	ldrh	r2, [r1, #2]
 800a92c:	88c9      	ldrh	r1, [r1, #6]
 800a92e:	8007      	strh	r7, [r0, #0]
 800a930:	440a      	add	r2, r1
 800a932:	8045      	strh	r5, [r0, #2]
 800a934:	b292      	uxth	r2, r2
 800a936:	b211      	sxth	r1, r2
 800a938:	458c      	cmp	ip, r1
 800a93a:	bfa8      	it	ge
 800a93c:	4613      	movge	r3, r2
 800a93e:	1b5b      	subs	r3, r3, r5
 800a940:	80c3      	strh	r3, [r0, #6]
 800a942:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a946:	2300      	movs	r3, #0
 800a948:	8003      	strh	r3, [r0, #0]
 800a94a:	8043      	strh	r3, [r0, #2]
 800a94c:	8083      	strh	r3, [r0, #4]
 800a94e:	80c3      	strh	r3, [r0, #6]
 800a950:	e7f7      	b.n	800a942 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a952 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a952:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a956:	2b00      	cmp	r3, #0
 800a958:	dd06      	ble.n	800a968 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a95a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a95e:	2800      	cmp	r0, #0
 800a960:	bfcc      	ite	gt
 800a962:	2000      	movgt	r0, #0
 800a964:	2001      	movle	r0, #1
 800a966:	4770      	bx	lr
 800a968:	2001      	movs	r0, #1
 800a96a:	4770      	bx	lr

0800a96c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a96c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a970:	2300      	movs	r3, #0
 800a972:	4604      	mov	r4, r0
 800a974:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800a976:	8003      	strh	r3, [r0, #0]
 800a978:	8043      	strh	r3, [r0, #2]
 800a97a:	8083      	strh	r3, [r0, #4]
 800a97c:	80c3      	strh	r3, [r0, #6]
 800a97e:	2d00      	cmp	r5, #0
 800a980:	d040      	beq.n	800aa04 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a982:	1d28      	adds	r0, r5, #4
 800a984:	f7ff ffe5 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a988:	b988      	cbnz	r0, 800a9ae <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a98a:	4620      	mov	r0, r4
 800a98c:	f7ff ffe1 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a990:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a994:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a998:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a99c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a9a0:	b138      	cbz	r0, 800a9b2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a9a2:	8022      	strh	r2, [r4, #0]
 800a9a4:	8063      	strh	r3, [r4, #2]
 800a9a6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a9aa:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a9ae:	69ad      	ldr	r5, [r5, #24]
 800a9b0:	e7e5      	b.n	800a97e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a9b2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a9b6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a9ba:	4290      	cmp	r0, r2
 800a9bc:	4607      	mov	r7, r0
 800a9be:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a9c2:	460e      	mov	r6, r1
 800a9c4:	bfa8      	it	ge
 800a9c6:	4617      	movge	r7, r2
 800a9c8:	4299      	cmp	r1, r3
 800a9ca:	4472      	add	r2, lr
 800a9cc:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a9d0:	bfa8      	it	ge
 800a9d2:	461e      	movge	r6, r3
 800a9d4:	4440      	add	r0, r8
 800a9d6:	4471      	add	r1, lr
 800a9d8:	4463      	add	r3, ip
 800a9da:	b200      	sxth	r0, r0
 800a9dc:	8027      	strh	r7, [r4, #0]
 800a9de:	b212      	sxth	r2, r2
 800a9e0:	8066      	strh	r6, [r4, #2]
 800a9e2:	b209      	sxth	r1, r1
 800a9e4:	b21b      	sxth	r3, r3
 800a9e6:	4290      	cmp	r0, r2
 800a9e8:	bfac      	ite	ge
 800a9ea:	ebc7 0200 	rsbge	r2, r7, r0
 800a9ee:	ebc7 0202 	rsblt	r2, r7, r2
 800a9f2:	4299      	cmp	r1, r3
 800a9f4:	bfac      	ite	ge
 800a9f6:	ebc6 0301 	rsbge	r3, r6, r1
 800a9fa:	ebc6 0303 	rsblt	r3, r6, r3
 800a9fe:	80a2      	strh	r2, [r4, #4]
 800aa00:	80e3      	strh	r3, [r4, #6]
 800aa02:	e7d4      	b.n	800a9ae <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800aa04:	4620      	mov	r0, r4
 800aa06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aa0a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800aa0a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800aa0e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800aa12:	b383      	cbz	r3, 800aa76 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800aa14:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aa16:	b374      	cbz	r4, 800aa76 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800aa18:	f9b1 5000 	ldrsh.w	r5, [r1]
 800aa1c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800aa20:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800aa24:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800aa28:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800aa2c:	b303      	cbz	r3, 800aa70 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800aa2e:	4668      	mov	r0, sp
 800aa30:	1d21      	adds	r1, r4, #4
 800aa32:	f8ad 5000 	strh.w	r5, [sp]
 800aa36:	f8ad 6002 	strh.w	r6, [sp, #2]
 800aa3a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800aa3e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800aa42:	f7ff ff43 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 800aa46:	4668      	mov	r0, sp
 800aa48:	f7ff ff83 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aa4c:	b980      	cbnz	r0, 800aa70 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800aa4e:	f8bd 3000 	ldrh.w	r3, [sp]
 800aa52:	4669      	mov	r1, sp
 800aa54:	88a2      	ldrh	r2, [r4, #4]
 800aa56:	4620      	mov	r0, r4
 800aa58:	1a9b      	subs	r3, r3, r2
 800aa5a:	88e2      	ldrh	r2, [r4, #6]
 800aa5c:	f8ad 3000 	strh.w	r3, [sp]
 800aa60:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800aa64:	1a9b      	subs	r3, r3, r2
 800aa66:	f8ad 3002 	strh.w	r3, [sp, #2]
 800aa6a:	6823      	ldr	r3, [r4, #0]
 800aa6c:	689b      	ldr	r3, [r3, #8]
 800aa6e:	4798      	blx	r3
 800aa70:	69a4      	ldr	r4, [r4, #24]
 800aa72:	2c00      	cmp	r4, #0
 800aa74:	d1d8      	bne.n	800aa28 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800aa76:	b002      	add	sp, #8
 800aa78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aa7c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800aa7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aa7e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800aa82:	460d      	mov	r5, r1
 800aa84:	4616      	mov	r6, r2
 800aa86:	b323      	cbz	r3, 800aad2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aa88:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aa8a:	b314      	cbz	r4, 800aad2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aa8c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800aa90:	b1eb      	cbz	r3, 800aace <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800aa92:	6828      	ldr	r0, [r5, #0]
 800aa94:	466b      	mov	r3, sp
 800aa96:	6869      	ldr	r1, [r5, #4]
 800aa98:	c303      	stmia	r3!, {r0, r1}
 800aa9a:	4668      	mov	r0, sp
 800aa9c:	1d21      	adds	r1, r4, #4
 800aa9e:	f7ff ff15 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 800aaa2:	4668      	mov	r0, sp
 800aaa4:	f7ff ff55 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aaa8:	b988      	cbnz	r0, 800aace <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800aaaa:	f8bd 3000 	ldrh.w	r3, [sp]
 800aaae:	4669      	mov	r1, sp
 800aab0:	88a2      	ldrh	r2, [r4, #4]
 800aab2:	4620      	mov	r0, r4
 800aab4:	1a9b      	subs	r3, r3, r2
 800aab6:	88e2      	ldrh	r2, [r4, #6]
 800aab8:	f8ad 3000 	strh.w	r3, [sp]
 800aabc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800aac0:	1a9b      	subs	r3, r3, r2
 800aac2:	4632      	mov	r2, r6
 800aac4:	f8ad 3002 	strh.w	r3, [sp, #2]
 800aac8:	6823      	ldr	r3, [r4, #0]
 800aaca:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800aacc:	4798      	blx	r3
 800aace:	69a4      	ldr	r4, [r4, #24]
 800aad0:	e7db      	b.n	800aa8a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800aad2:	b002      	add	sp, #8
 800aad4:	bd70      	pop	{r4, r5, r6, pc}

0800aad6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800aad6:	6803      	ldr	r3, [r0, #0]
 800aad8:	b513      	push	{r0, r1, r4, lr}
 800aada:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800aade:	2300      	movs	r3, #0
 800aae0:	e9cd 3300 	strd	r3, r3, [sp]
 800aae4:	466b      	mov	r3, sp
 800aae6:	47a0      	blx	r4
 800aae8:	b002      	add	sp, #8
 800aaea:	bd10      	pop	{r4, pc}

0800aaec <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800aaec:	2301      	movs	r3, #1
 800aaee:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800aaf2:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800aaf6:	4770      	bx	lr

0800aaf8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800aaf8:	2301      	movs	r3, #1
 800aafa:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800aafe:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800ab02:	4770      	bx	lr

0800ab04 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800ab04:	6843      	ldr	r3, [r0, #4]
 800ab06:	2201      	movs	r2, #1
 800ab08:	725a      	strb	r2, [r3, #9]
 800ab0a:	6840      	ldr	r0, [r0, #4]
 800ab0c:	6803      	ldr	r3, [r0, #0]
 800ab0e:	691b      	ldr	r3, [r3, #16]
 800ab10:	4718      	bx	r3

0800ab12 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ab12:	6840      	ldr	r0, [r0, #4]
 800ab14:	6803      	ldr	r3, [r0, #0]
 800ab16:	689b      	ldr	r3, [r3, #8]
 800ab18:	4718      	bx	r3

0800ab1a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800ab1a:	b530      	push	{r4, r5, lr}
 800ab1c:	b08b      	sub	sp, #44	@ 0x2c
 800ab1e:	6804      	ldr	r4, [r0, #0]
 800ab20:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800ab24:	9509      	str	r5, [sp, #36]	@ 0x24
 800ab26:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800ab2a:	9508      	str	r5, [sp, #32]
 800ab2c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800ab30:	9507      	str	r5, [sp, #28]
 800ab32:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800ab36:	9506      	str	r5, [sp, #24]
 800ab38:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800ab3c:	9505      	str	r5, [sp, #20]
 800ab3e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800ab42:	9504      	str	r5, [sp, #16]
 800ab44:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800ab48:	9503      	str	r5, [sp, #12]
 800ab4a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800ab4e:	9502      	str	r5, [sp, #8]
 800ab50:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800ab54:	e9cd 3500 	strd	r3, r5, [sp]
 800ab58:	4613      	mov	r3, r2
 800ab5a:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800ab5c:	2200      	movs	r2, #0
 800ab5e:	47a0      	blx	r4
 800ab60:	b00b      	add	sp, #44	@ 0x2c
 800ab62:	bd30      	pop	{r4, r5, pc}

0800ab64 <_ZN8touchgfx3HAL10beginFrameEv>:
 800ab64:	4b04      	ldr	r3, [pc, #16]	@ (800ab78 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800ab66:	781b      	ldrb	r3, [r3, #0]
 800ab68:	b123      	cbz	r3, 800ab74 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800ab6a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800ab6e:	f080 0001 	eor.w	r0, r0, #1
 800ab72:	4770      	bx	lr
 800ab74:	2001      	movs	r0, #1
 800ab76:	4770      	bx	lr
 800ab78:	200150aa 	.word	0x200150aa

0800ab7c <_ZN8touchgfx3HAL8endFrameEv>:
 800ab7c:	b510      	push	{r4, lr}
 800ab7e:	4604      	mov	r4, r0
 800ab80:	6840      	ldr	r0, [r0, #4]
 800ab82:	6803      	ldr	r3, [r0, #0]
 800ab84:	689b      	ldr	r3, [r3, #8]
 800ab86:	4798      	blx	r3
 800ab88:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800ab8c:	b113      	cbz	r3, 800ab94 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800ab8e:	2301      	movs	r3, #1
 800ab90:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800ab94:	bd10      	pop	{r4, pc}

0800ab96 <_ZN8touchgfx3HAL10initializeEv>:
 800ab96:	b510      	push	{r4, lr}
 800ab98:	4604      	mov	r4, r0
 800ab9a:	f7f6 febd 	bl	8001918 <_ZN8touchgfx10OSWrappers10initializeEv>
 800ab9e:	f7f6 fd9b 	bl	80016d8 <_ZN8touchgfx4GPIO4initEv>
 800aba2:	6860      	ldr	r0, [r4, #4]
 800aba4:	6803      	ldr	r3, [r0, #0]
 800aba6:	68db      	ldr	r3, [r3, #12]
 800aba8:	4798      	blx	r3
 800abaa:	68e0      	ldr	r0, [r4, #12]
 800abac:	6803      	ldr	r3, [r0, #0]
 800abae:	689b      	ldr	r3, [r3, #8]
 800abb0:	4798      	blx	r3
 800abb2:	6823      	ldr	r3, [r4, #0]
 800abb4:	4620      	mov	r0, r4
 800abb6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800abb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800abbc:	4718      	bx	r3

0800abbe <_ZN8touchgfx3HAL9taskEntryEv>:
 800abbe:	b508      	push	{r3, lr}
 800abc0:	6803      	ldr	r3, [r0, #0]
 800abc2:	4604      	mov	r4, r0
 800abc4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800abc8:	4798      	blx	r3
 800abca:	6823      	ldr	r3, [r4, #0]
 800abcc:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800abce:	4620      	mov	r0, r4
 800abd0:	4798      	blx	r3
 800abd2:	f7f6 feed 	bl	80019b0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800abd6:	6823      	ldr	r3, [r4, #0]
 800abd8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800abda:	e7f8      	b.n	800abce <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800abdc <_ZN8touchgfx3HAL4tickEv>:
 800abdc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800abde:	6803      	ldr	r3, [r0, #0]
 800abe0:	4604      	mov	r4, r0
 800abe2:	4d5b      	ldr	r5, [pc, #364]	@ (800ad50 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800abe4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800abe8:	4798      	blx	r3
 800abea:	2800      	cmp	r0, #0
 800abec:	f000 8095 	beq.w	800ad1a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800abf0:	2001      	movs	r0, #1
 800abf2:	2600      	movs	r6, #0
 800abf4:	f7f6 fcd6 	bl	80015a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800abf8:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800abfc:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800ac00:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800ac04:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800ac08:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800ac0c:	b133      	cbz	r3, 800ac1c <_ZN8touchgfx3HAL4tickEv+0x40>
 800ac0e:	6823      	ldr	r3, [r4, #0]
 800ac10:	4620      	mov	r0, r4
 800ac12:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800ac16:	4798      	blx	r3
 800ac18:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800ac1c:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800ac20:	2601      	movs	r6, #1
 800ac22:	6862      	ldr	r2, [r4, #4]
 800ac24:	f083 0301 	eor.w	r3, r3, #1
 800ac28:	702e      	strb	r6, [r5, #0]
 800ac2a:	7253      	strb	r3, [r2, #9]
 800ac2c:	f003 fa10 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
 800ac30:	6803      	ldr	r3, [r0, #0]
 800ac32:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ac34:	4798      	blx	r3
 800ac36:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800ac3a:	b90b      	cbnz	r3, 800ac40 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ac3c:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800ac40:	f003 fa06 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
 800ac44:	6803      	ldr	r3, [r0, #0]
 800ac46:	695b      	ldr	r3, [r3, #20]
 800ac48:	4798      	blx	r3
 800ac4a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800ac4c:	6803      	ldr	r3, [r0, #0]
 800ac4e:	691b      	ldr	r3, [r3, #16]
 800ac50:	4798      	blx	r3
 800ac52:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800ac56:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800ac5a:	3b01      	subs	r3, #1
 800ac5c:	b2db      	uxtb	r3, r3
 800ac5e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800ac62:	b10a      	cbz	r2, 800ac68 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ac64:	2b00      	cmp	r3, #0
 800ac66:	d1eb      	bne.n	800ac40 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ac68:	4a3a      	ldr	r2, [pc, #232]	@ (800ad54 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ac6a:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800ac6e:	7813      	ldrb	r3, [r2, #0]
 800ac70:	3301      	adds	r3, #1
 800ac72:	b25b      	sxtb	r3, r3
 800ac74:	4299      	cmp	r1, r3
 800ac76:	7013      	strb	r3, [r2, #0]
 800ac78:	dc10      	bgt.n	800ac9c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ac7a:	2300      	movs	r3, #0
 800ac7c:	68e0      	ldr	r0, [r4, #12]
 800ac7e:	a902      	add	r1, sp, #8
 800ac80:	7013      	strb	r3, [r2, #0]
 800ac82:	aa03      	add	r2, sp, #12
 800ac84:	6803      	ldr	r3, [r0, #0]
 800ac86:	68db      	ldr	r3, [r3, #12]
 800ac88:	4798      	blx	r3
 800ac8a:	6823      	ldr	r3, [r4, #0]
 800ac8c:	2800      	cmp	r0, #0
 800ac8e:	d050      	beq.n	800ad32 <_ZN8touchgfx3HAL4tickEv+0x156>
 800ac90:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800ac94:	4620      	mov	r0, r4
 800ac96:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ac9a:	4798      	blx	r3
 800ac9c:	2300      	movs	r3, #0
 800ac9e:	6960      	ldr	r0, [r4, #20]
 800aca0:	f88d 3007 	strb.w	r3, [sp, #7]
 800aca4:	b158      	cbz	r0, 800acbe <_ZN8touchgfx3HAL4tickEv+0xe2>
 800aca6:	6803      	ldr	r3, [r0, #0]
 800aca8:	f10d 0107 	add.w	r1, sp, #7
 800acac:	68db      	ldr	r3, [r3, #12]
 800acae:	4798      	blx	r3
 800acb0:	b128      	cbz	r0, 800acbe <_ZN8touchgfx3HAL4tickEv+0xe2>
 800acb2:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800acb4:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800acb8:	6803      	ldr	r3, [r0, #0]
 800acba:	68db      	ldr	r3, [r3, #12]
 800acbc:	4798      	blx	r3
 800acbe:	f104 001c 	add.w	r0, r4, #28
 800acc2:	f013 fdd1 	bl	801e868 <_ZN8touchgfx8Gestures4tickEv>
 800acc6:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800acca:	b30b      	cbz	r3, 800ad10 <_ZN8touchgfx3HAL4tickEv+0x134>
 800accc:	6920      	ldr	r0, [r4, #16]
 800acce:	6803      	ldr	r3, [r0, #0]
 800acd0:	691b      	ldr	r3, [r3, #16]
 800acd2:	4798      	blx	r3
 800acd4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800acd6:	4606      	mov	r6, r0
 800acd8:	b903      	cbnz	r3, 800acdc <_ZN8touchgfx3HAL4tickEv+0x100>
 800acda:	6760      	str	r0, [r4, #116]	@ 0x74
 800acdc:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800acde:	4a1e      	ldr	r2, [pc, #120]	@ (800ad58 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800ace0:	1af3      	subs	r3, r6, r3
 800ace2:	4293      	cmp	r3, r2
 800ace4:	d914      	bls.n	800ad10 <_ZN8touchgfx3HAL4tickEv+0x134>
 800ace6:	6920      	ldr	r0, [r4, #16]
 800ace8:	6803      	ldr	r3, [r0, #0]
 800acea:	699b      	ldr	r3, [r3, #24]
 800acec:	4798      	blx	r3
 800acee:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800acf0:	2264      	movs	r2, #100	@ 0x64
 800acf2:	1af3      	subs	r3, r6, r3
 800acf4:	fbb3 f3f2 	udiv	r3, r3, r2
 800acf8:	fbb0 f0f3 	udiv	r0, r0, r3
 800acfc:	2800      	cmp	r0, #0
 800acfe:	dc1d      	bgt.n	800ad3c <_ZN8touchgfx3HAL4tickEv+0x160>
 800ad00:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800ad04:	6920      	ldr	r0, [r4, #16]
 800ad06:	2100      	movs	r1, #0
 800ad08:	6803      	ldr	r3, [r0, #0]
 800ad0a:	69db      	ldr	r3, [r3, #28]
 800ad0c:	4798      	blx	r3
 800ad0e:	6766      	str	r6, [r4, #116]	@ 0x74
 800ad10:	f003 f99e 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
 800ad14:	6803      	ldr	r3, [r0, #0]
 800ad16:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ad18:	4798      	blx	r3
 800ad1a:	6823      	ldr	r3, [r4, #0]
 800ad1c:	4620      	mov	r0, r4
 800ad1e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800ad22:	4798      	blx	r3
 800ad24:	2001      	movs	r0, #1
 800ad26:	f7f6 fc6d 	bl	8001604 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ad2a:	2300      	movs	r3, #0
 800ad2c:	702b      	strb	r3, [r5, #0]
 800ad2e:	b004      	add	sp, #16
 800ad30:	bd70      	pop	{r4, r5, r6, pc}
 800ad32:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800ad36:	4620      	mov	r0, r4
 800ad38:	4798      	blx	r3
 800ad3a:	e7af      	b.n	800ac9c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ad3c:	2863      	cmp	r0, #99	@ 0x63
 800ad3e:	bfcb      	itete	gt
 800ad40:	2300      	movgt	r3, #0
 800ad42:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800ad46:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800ad4a:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800ad4e:	e7d9      	b.n	800ad04 <_ZN8touchgfx3HAL4tickEv+0x128>
 800ad50:	200150b0 	.word	0x200150b0
 800ad54:	200150b1 	.word	0x200150b1
 800ad58:	05f5e100 	.word	0x05f5e100

0800ad5c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800ad5c:	b510      	push	{r4, lr}
 800ad5e:	4604      	mov	r4, r0
 800ad60:	f7f6 fe0a 	bl	8001978 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800ad64:	2200      	movs	r2, #0
 800ad66:	6863      	ldr	r3, [r4, #4]
 800ad68:	729a      	strb	r2, [r3, #10]
 800ad6a:	bd10      	pop	{r4, pc}

0800ad6c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800ad6c:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800ad6e:	301c      	adds	r0, #28
 800ad70:	f013 bd78 	b.w	801e864 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800ad74 <_ZN8touchgfx3HAL5touchEll>:
 800ad74:	b530      	push	{r4, r5, lr}
 800ad76:	b087      	sub	sp, #28
 800ad78:	4604      	mov	r4, r0
 800ad7a:	a804      	add	r0, sp, #16
 800ad7c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800ad80:	f002 ff4e 	bl	800dc20 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800ad84:	9b04      	ldr	r3, [sp, #16]
 800ad86:	a906      	add	r1, sp, #24
 800ad88:	a803      	add	r0, sp, #12
 800ad8a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ad8e:	9b05      	ldr	r3, [sp, #20]
 800ad90:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800ad94:	f002 ff96 	bl	800dcc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800ad98:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800ad9c:	f104 001c 	add.w	r0, r4, #28
 800ada0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ada4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800ada8:	b189      	cbz	r1, 800adce <_ZN8touchgfx3HAL5touchEll+0x5a>
 800adaa:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800adae:	9300      	str	r3, [sp, #0]
 800adb0:	4613      	mov	r3, r2
 800adb2:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800adb6:	462a      	mov	r2, r5
 800adb8:	f013 fd64 	bl	801e884 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800adbc:	b128      	cbz	r0, 800adca <_ZN8touchgfx3HAL5touchEll+0x56>
 800adbe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800adc2:	6623      	str	r3, [r4, #96]	@ 0x60
 800adc4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800adc8:	6663      	str	r3, [r4, #100]	@ 0x64
 800adca:	b007      	add	sp, #28
 800adcc:	bd30      	pop	{r4, r5, pc}
 800adce:	f013 fd99 	bl	801e904 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800add2:	2301      	movs	r3, #1
 800add4:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800add8:	e7f1      	b.n	800adbe <_ZN8touchgfx3HAL5touchEll+0x4a>

0800adda <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800adda:	b510      	push	{r4, lr}
 800addc:	2b00      	cmp	r3, #0
 800adde:	d046      	beq.n	800ae6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ade0:	ea81 0002 	eor.w	r0, r1, r2
 800ade4:	07c4      	lsls	r4, r0, #31
 800ade6:	d508      	bpl.n	800adfa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800ade8:	440b      	add	r3, r1
 800adea:	3a01      	subs	r2, #1
 800adec:	428b      	cmp	r3, r1
 800adee:	d93e      	bls.n	800ae6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800adf0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800adf4:	f801 0b01 	strb.w	r0, [r1], #1
 800adf8:	e7f8      	b.n	800adec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800adfa:	07d0      	lsls	r0, r2, #31
 800adfc:	bf42      	ittt	mi
 800adfe:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800ae02:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800ae06:	f801 0b01 	strbmi.w	r0, [r1], #1
 800ae0a:	2b01      	cmp	r3, #1
 800ae0c:	d911      	bls.n	800ae32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ae0e:	ea81 0402 	eor.w	r4, r1, r2
 800ae12:	4610      	mov	r0, r2
 800ae14:	07a4      	lsls	r4, r4, #30
 800ae16:	d022      	beq.n	800ae5e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800ae18:	f023 0401 	bic.w	r4, r3, #1
 800ae1c:	440c      	add	r4, r1
 800ae1e:	428c      	cmp	r4, r1
 800ae20:	4602      	mov	r2, r0
 800ae22:	d904      	bls.n	800ae2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800ae24:	8812      	ldrh	r2, [r2, #0]
 800ae26:	3002      	adds	r0, #2
 800ae28:	f821 2b02 	strh.w	r2, [r1], #2
 800ae2c:	e7f7      	b.n	800ae1e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800ae2e:	f003 0301 	and.w	r3, r3, #1
 800ae32:	f023 0003 	bic.w	r0, r3, #3
 800ae36:	4408      	add	r0, r1
 800ae38:	4288      	cmp	r0, r1
 800ae3a:	4614      	mov	r4, r2
 800ae3c:	d904      	bls.n	800ae48 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800ae3e:	6824      	ldr	r4, [r4, #0]
 800ae40:	3204      	adds	r2, #4
 800ae42:	f841 4b04 	str.w	r4, [r1], #4
 800ae46:	e7f7      	b.n	800ae38 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800ae48:	f003 0303 	and.w	r3, r3, #3
 800ae4c:	3a01      	subs	r2, #1
 800ae4e:	440b      	add	r3, r1
 800ae50:	428b      	cmp	r3, r1
 800ae52:	d90c      	bls.n	800ae6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ae54:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ae58:	f801 0b01 	strb.w	r0, [r1], #1
 800ae5c:	e7f8      	b.n	800ae50 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800ae5e:	0790      	lsls	r0, r2, #30
 800ae60:	d0e7      	beq.n	800ae32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ae62:	f832 0b02 	ldrh.w	r0, [r2], #2
 800ae66:	3b02      	subs	r3, #2
 800ae68:	f821 0b02 	strh.w	r0, [r1], #2
 800ae6c:	e7e1      	b.n	800ae32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ae6e:	2001      	movs	r0, #1
 800ae70:	bd10      	pop	{r4, pc}

0800ae72 <_ZN8touchgfx3HAL7noTouchEv>:
 800ae72:	b510      	push	{r4, lr}
 800ae74:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800ae78:	4604      	mov	r4, r0
 800ae7a:	b153      	cbz	r3, 800ae92 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800ae7c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800ae80:	2101      	movs	r1, #1
 800ae82:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800ae86:	301c      	adds	r0, #28
 800ae88:	f013 fd3c 	bl	801e904 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ae8c:	2300      	movs	r3, #0
 800ae8e:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800ae92:	bd10      	pop	{r4, pc}

0800ae94 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800ae94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ae98:	b085      	sub	sp, #20
 800ae9a:	4604      	mov	r4, r0
 800ae9c:	2000      	movs	r0, #0
 800ae9e:	4699      	mov	r9, r3
 800aea0:	ad04      	add	r5, sp, #16
 800aea2:	460f      	mov	r7, r1
 800aea4:	4690      	mov	r8, r2
 800aea6:	f845 0d04 	str.w	r0, [r5, #-4]!
 800aeaa:	69a0      	ldr	r0, [r4, #24]
 800aeac:	6806      	ldr	r6, [r0, #0]
 800aeae:	9501      	str	r5, [sp, #4]
 800aeb0:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800aeb4:	9500      	str	r5, [sp, #0]
 800aeb6:	6835      	ldr	r5, [r6, #0]
 800aeb8:	47a8      	blx	r5
 800aeba:	4d10      	ldr	r5, [pc, #64]	@ (800aefc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800aebc:	4606      	mov	r6, r0
 800aebe:	f8a5 9000 	strh.w	r9, [r5]
 800aec2:	f7f7 fad9 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800aec6:	6803      	ldr	r3, [r0, #0]
 800aec8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aeca:	4798      	blx	r3
 800aecc:	b128      	cbz	r0, 800aeda <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800aece:	2801      	cmp	r0, #1
 800aed0:	d00b      	beq.n	800aeea <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800aed2:	4630      	mov	r0, r6
 800aed4:	b005      	add	sp, #20
 800aed6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aeda:	882b      	ldrh	r3, [r5, #0]
 800aedc:	fb08 7203 	mla	r2, r8, r3, r7
 800aee0:	9b03      	ldr	r3, [sp, #12]
 800aee2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800aee6:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800aee8:	e7f3      	b.n	800aed2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800aeea:	882a      	ldrh	r2, [r5, #0]
 800aeec:	9b03      	ldr	r3, [sp, #12]
 800aeee:	fb08 7202 	mla	r2, r8, r2, r7
 800aef2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800aef6:	1a9a      	subs	r2, r3, r2
 800aef8:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800aefa:	e7ea      	b.n	800aed2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800aefc:	200150a6 	.word	0x200150a6

0800af00 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800af00:	b5f0      	push	{r4, r5, r6, r7, lr}
 800af02:	b08b      	sub	sp, #44	@ 0x2c
 800af04:	4617      	mov	r7, r2
 800af06:	4604      	mov	r4, r0
 800af08:	460e      	mov	r6, r1
 800af0a:	461d      	mov	r5, r3
 800af0c:	f7f7 fab4 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800af10:	6803      	ldr	r3, [r0, #0]
 800af12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800af14:	4798      	blx	r3
 800af16:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800af1a:	9007      	str	r0, [sp, #28]
 800af1c:	4631      	mov	r1, r6
 800af1e:	6822      	ldr	r2, [r4, #0]
 800af20:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800af24:	4b0c      	ldr	r3, [pc, #48]	@ (800af58 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800af26:	4620      	mov	r0, r4
 800af28:	881b      	ldrh	r3, [r3, #0]
 800af2a:	9306      	str	r3, [sp, #24]
 800af2c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800af30:	9305      	str	r3, [sp, #20]
 800af32:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800af36:	9304      	str	r3, [sp, #16]
 800af38:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800af3c:	9303      	str	r3, [sp, #12]
 800af3e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800af42:	9302      	str	r3, [sp, #8]
 800af44:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800af48:	e9cd 5300 	strd	r5, r3, [sp]
 800af4c:	463b      	mov	r3, r7
 800af4e:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800af50:	2200      	movs	r2, #0
 800af52:	47a8      	blx	r5
 800af54:	b00b      	add	sp, #44	@ 0x2c
 800af56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800af58:	200150a6 	.word	0x200150a6

0800af5c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800af5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800af60:	4698      	mov	r8, r3
 800af62:	6803      	ldr	r3, [r0, #0]
 800af64:	b08b      	sub	sp, #44	@ 0x2c
 800af66:	4617      	mov	r7, r2
 800af68:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800af6a:	460e      	mov	r6, r1
 800af6c:	4b13      	ldr	r3, [pc, #76]	@ (800afbc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800af6e:	4604      	mov	r4, r0
 800af70:	f8b3 9000 	ldrh.w	r9, [r3]
 800af74:	f7f7 fa80 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800af78:	6803      	ldr	r3, [r0, #0]
 800af7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800af7c:	4798      	blx	r3
 800af7e:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800af82:	2200      	movs	r2, #0
 800af84:	4631      	mov	r1, r6
 800af86:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800af8a:	2302      	movs	r3, #2
 800af8c:	4620      	mov	r0, r4
 800af8e:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800af92:	2301      	movs	r3, #1
 800af94:	9305      	str	r3, [sp, #20]
 800af96:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800af9a:	9304      	str	r3, [sp, #16]
 800af9c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800afa0:	9303      	str	r3, [sp, #12]
 800afa2:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800afa6:	9302      	str	r3, [sp, #8]
 800afa8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800afac:	e9cd 8300 	strd	r8, r3, [sp]
 800afb0:	463b      	mov	r3, r7
 800afb2:	47a8      	blx	r5
 800afb4:	b00b      	add	sp, #44	@ 0x2c
 800afb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800afba:	bf00      	nop
 800afbc:	200150a6 	.word	0x200150a6

0800afc0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800afc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800afc4:	4698      	mov	r8, r3
 800afc6:	6803      	ldr	r3, [r0, #0]
 800afc8:	b087      	sub	sp, #28
 800afca:	460e      	mov	r6, r1
 800afcc:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800afce:	4617      	mov	r7, r2
 800afd0:	4b0f      	ldr	r3, [pc, #60]	@ (800b010 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800afd2:	4604      	mov	r4, r0
 800afd4:	f8b3 9000 	ldrh.w	r9, [r3]
 800afd8:	f7f7 fa4e 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800afdc:	6803      	ldr	r3, [r0, #0]
 800afde:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800afe0:	4798      	blx	r3
 800afe2:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800afe6:	463a      	mov	r2, r7
 800afe8:	4631      	mov	r1, r6
 800afea:	f8cd 900c 	str.w	r9, [sp, #12]
 800afee:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800aff2:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800aff6:	4620      	mov	r0, r4
 800aff8:	9302      	str	r3, [sp, #8]
 800affa:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800affe:	9301      	str	r3, [sp, #4]
 800b000:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800b004:	9300      	str	r3, [sp, #0]
 800b006:	4643      	mov	r3, r8
 800b008:	47a8      	blx	r5
 800b00a:	b007      	add	sp, #28
 800b00c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b010:	200150a6 	.word	0x200150a6

0800b014 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b018:	4604      	mov	r4, r0
 800b01a:	b08f      	sub	sp, #60	@ 0x3c
 800b01c:	4610      	mov	r0, r2
 800b01e:	460d      	mov	r5, r1
 800b020:	4691      	mov	r9, r2
 800b022:	461e      	mov	r6, r3
 800b024:	f005 fff0 	bl	8011008 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b028:	2800      	cmp	r0, #0
 800b02a:	f000 809d 	beq.w	800b168 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b02e:	6823      	ldr	r3, [r4, #0]
 800b030:	4620      	mov	r0, r4
 800b032:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800b1cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b036:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800b03a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b03c:	4798      	blx	r3
 800b03e:	6823      	ldr	r3, [r4, #0]
 800b040:	4620      	mov	r0, r4
 800b042:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800b1d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b046:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b048:	4798      	blx	r3
 800b04a:	f8bb 3000 	ldrh.w	r3, [fp]
 800b04e:	4f5c      	ldr	r7, [pc, #368]	@ (800b1c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b050:	9301      	str	r3, [sp, #4]
 800b052:	f8ba 3000 	ldrh.w	r3, [sl]
 800b056:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b05a:	4640      	mov	r0, r8
 800b05c:	9302      	str	r3, [sp, #8]
 800b05e:	883b      	ldrh	r3, [r7, #0]
 800b060:	9303      	str	r3, [sp, #12]
 800b062:	4b58      	ldr	r3, [pc, #352]	@ (800b1c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b064:	881a      	ldrh	r2, [r3, #0]
 800b066:	9305      	str	r3, [sp, #20]
 800b068:	9204      	str	r2, [sp, #16]
 800b06a:	f006 f861 	bl	8011130 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b06e:	8038      	strh	r0, [r7, #0]
 800b070:	4640      	mov	r0, r8
 800b072:	f006 f891 	bl	8011198 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b076:	9b05      	ldr	r3, [sp, #20]
 800b078:	b280      	uxth	r0, r0
 800b07a:	8018      	strh	r0, [r3, #0]
 800b07c:	4b52      	ldr	r3, [pc, #328]	@ (800b1c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b07e:	781b      	ldrb	r3, [r3, #0]
 800b080:	2b00      	cmp	r3, #0
 800b082:	d174      	bne.n	800b16e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b084:	883b      	ldrh	r3, [r7, #0]
 800b086:	f8aa 0000 	strh.w	r0, [sl]
 800b08a:	f8ab 3000 	strh.w	r3, [fp]
 800b08e:	4648      	mov	r0, r9
 800b090:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800b094:	f005 ffb8 	bl	8011008 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b098:	2200      	movs	r2, #0
 800b09a:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800b09e:	4611      	mov	r1, r2
 800b0a0:	4628      	mov	r0, r5
 800b0a2:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b0a6:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b0aa:	f7f7 f8f0 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 800b0ae:	2301      	movs	r3, #1
 800b0b0:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800b0b4:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800b0b8:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b0bc:	2b00      	cmp	r3, #0
 800b0be:	dd5c      	ble.n	800b17a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b0c0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b0c4:	2b00      	cmp	r3, #0
 800b0c6:	dd58      	ble.n	800b17a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b0c8:	462a      	mov	r2, r5
 800b0ca:	ab0a      	add	r3, sp, #40	@ 0x28
 800b0cc:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b0d0:	6851      	ldr	r1, [r2, #4]
 800b0d2:	c303      	stmia	r3!, {r0, r1}
 800b0d4:	4631      	mov	r1, r6
 800b0d6:	a80a      	add	r0, sp, #40	@ 0x28
 800b0d8:	f7ff fbf8 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 800b0dc:	4b38      	ldr	r3, [pc, #224]	@ (800b1c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b0de:	2100      	movs	r1, #0
 800b0e0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b0e4:	4b37      	ldr	r3, [pc, #220]	@ (800b1c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b0e6:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800b0ea:	aa0a      	add	r2, sp, #40	@ 0x28
 800b0ec:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b0f0:	910c      	str	r1, [sp, #48]	@ 0x30
 800b0f2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800b0f6:	ab08      	add	r3, sp, #32
 800b0f8:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b0fc:	e883 0003 	stmia.w	r3, {r0, r1}
 800b100:	4618      	mov	r0, r3
 800b102:	a90c      	add	r1, sp, #48	@ 0x30
 800b104:	f7ff fbe2 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 800b108:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800b10a:	2b00      	cmp	r3, #0
 800b10c:	d13c      	bne.n	800b188 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b10e:	2000      	movs	r0, #0
 800b110:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800b114:	2600      	movs	r6, #0
 800b116:	696b      	ldr	r3, [r5, #20]
 800b118:	a908      	add	r1, sp, #32
 800b11a:	682a      	ldr	r2, [r5, #0]
 800b11c:	4628      	mov	r0, r5
 800b11e:	9305      	str	r3, [sp, #20]
 800b120:	616e      	str	r6, [r5, #20]
 800b122:	6892      	ldr	r2, [r2, #8]
 800b124:	4790      	blx	r2
 800b126:	9b05      	ldr	r3, [sp, #20]
 800b128:	4652      	mov	r2, sl
 800b12a:	4649      	mov	r1, r9
 800b12c:	616b      	str	r3, [r5, #20]
 800b12e:	4628      	mov	r0, r5
 800b130:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800b134:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800b138:	f7f7 f8a9 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 800b13c:	9a01      	ldr	r2, [sp, #4]
 800b13e:	4b23      	ldr	r3, [pc, #140]	@ (800b1cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b140:	4620      	mov	r0, r4
 800b142:	801a      	strh	r2, [r3, #0]
 800b144:	9a02      	ldr	r2, [sp, #8]
 800b146:	4b22      	ldr	r3, [pc, #136]	@ (800b1d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b148:	801a      	strh	r2, [r3, #0]
 800b14a:	9a03      	ldr	r2, [sp, #12]
 800b14c:	4b1c      	ldr	r3, [pc, #112]	@ (800b1c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b14e:	801a      	strh	r2, [r3, #0]
 800b150:	4b1c      	ldr	r3, [pc, #112]	@ (800b1c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b152:	9a04      	ldr	r2, [sp, #16]
 800b154:	801a      	strh	r2, [r3, #0]
 800b156:	6823      	ldr	r3, [r4, #0]
 800b158:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800b15c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b15e:	4798      	blx	r3
 800b160:	6823      	ldr	r3, [r4, #0]
 800b162:	4620      	mov	r0, r4
 800b164:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b166:	4798      	blx	r3
 800b168:	b00f      	add	sp, #60	@ 0x3c
 800b16a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b16e:	883b      	ldrh	r3, [r7, #0]
 800b170:	f8ab 0000 	strh.w	r0, [fp]
 800b174:	f8aa 3000 	strh.w	r3, [sl]
 800b178:	e789      	b.n	800b08e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b17a:	462a      	mov	r2, r5
 800b17c:	ab0a      	add	r3, sp, #40	@ 0x28
 800b17e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b182:	6851      	ldr	r1, [r2, #4]
 800b184:	c303      	stmia	r3!, {r0, r1}
 800b186:	e7a9      	b.n	800b0dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b188:	a807      	add	r0, sp, #28
 800b18a:	f006 f941 	bl	8011410 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b18e:	4606      	mov	r6, r0
 800b190:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800b192:	6803      	ldr	r3, [r0, #0]
 800b194:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b196:	4798      	blx	r3
 800b198:	4286      	cmp	r6, r0
 800b19a:	d1b8      	bne.n	800b10e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b19c:	f7f7 f96c 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800b1a0:	6803      	ldr	r3, [r0, #0]
 800b1a2:	4606      	mov	r6, r0
 800b1a4:	a807      	add	r0, sp, #28
 800b1a6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b1a8:	9305      	str	r3, [sp, #20]
 800b1aa:	f006 f931 	bl	8011410 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b1ae:	9b05      	ldr	r3, [sp, #20]
 800b1b0:	4601      	mov	r1, r0
 800b1b2:	4630      	mov	r0, r6
 800b1b4:	4798      	blx	r3
 800b1b6:	f080 0001 	eor.w	r0, r0, #1
 800b1ba:	b2c0      	uxtb	r0, r0
 800b1bc:	e7a8      	b.n	800b110 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b1be:	bf00      	nop
 800b1c0:	200150a0 	.word	0x200150a0
 800b1c4:	200150a2 	.word	0x200150a2
 800b1c8:	200150a4 	.word	0x200150a4
 800b1cc:	200150a6 	.word	0x200150a6
 800b1d0:	200150a8 	.word	0x200150a8

0800b1d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b1d4:	4b07      	ldr	r3, [pc, #28]	@ (800b1f4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b1d6:	b510      	push	{r4, lr}
 800b1d8:	781b      	ldrb	r3, [r3, #0]
 800b1da:	4604      	mov	r4, r0
 800b1dc:	b13b      	cbz	r3, 800b1ee <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b1de:	6803      	ldr	r3, [r0, #0]
 800b1e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b1e2:	4798      	blx	r3
 800b1e4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b1e6:	4283      	cmp	r3, r0
 800b1e8:	d101      	bne.n	800b1ee <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b1ea:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800b1ec:	bd10      	pop	{r4, pc}
 800b1ee:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800b1f0:	e7fc      	b.n	800b1ec <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b1f2:	bf00      	nop
 800b1f4:	200150aa 	.word	0x200150aa

0800b1f8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b1f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b1fc:	461d      	mov	r5, r3
 800b1fe:	b08a      	sub	sp, #40	@ 0x28
 800b200:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b204:	4690      	mov	r8, r2
 800b206:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800b20a:	2400      	movs	r4, #0
 800b20c:	4607      	mov	r7, r0
 800b20e:	fb06 8505 	mla	r5, r6, r5, r8
 800b212:	9404      	str	r4, [sp, #16]
 800b214:	f88d 4020 	strb.w	r4, [sp, #32]
 800b218:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b21c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b220:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b224:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b228:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b22c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b230:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b234:	f7ff ffce 	bl	800b1d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b238:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b23c:	6878      	ldr	r0, [r7, #4]
 800b23e:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b242:	a901      	add	r1, sp, #4
 800b244:	9505      	str	r5, [sp, #20]
 800b246:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b24a:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800b24e:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b252:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b256:	6803      	ldr	r3, [r0, #0]
 800b258:	685b      	ldr	r3, [r3, #4]
 800b25a:	4798      	blx	r3
 800b25c:	b00a      	add	sp, #40	@ 0x28
 800b25e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b262 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b262:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b266:	b08b      	sub	sp, #44	@ 0x2c
 800b268:	2400      	movs	r4, #0
 800b26a:	4691      	mov	r9, r2
 800b26c:	461d      	mov	r5, r3
 800b26e:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800b272:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800b276:	4688      	mov	r8, r1
 800b278:	4607      	mov	r7, r0
 800b27a:	9404      	str	r4, [sp, #16]
 800b27c:	fb06 9505 	mla	r5, r6, r5, r9
 800b280:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b284:	f7ff ffa6 	bl	800b1d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b288:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b28c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b290:	6878      	ldr	r0, [r7, #4]
 800b292:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b296:	a901      	add	r1, sp, #4
 800b298:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b29c:	9505      	str	r5, [sp, #20]
 800b29e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b2a2:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b2a6:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b2aa:	f8cd 8010 	str.w	r8, [sp, #16]
 800b2ae:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b2b2:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b2b6:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b2ba:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b2be:	6803      	ldr	r3, [r0, #0]
 800b2c0:	685b      	ldr	r3, [r3, #4]
 800b2c2:	4798      	blx	r3
 800b2c4:	b00b      	add	sp, #44	@ 0x2c
 800b2c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b2cc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b2cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b2d0:	b08a      	sub	sp, #40	@ 0x28
 800b2d2:	4698      	mov	r8, r3
 800b2d4:	2300      	movs	r3, #0
 800b2d6:	4606      	mov	r6, r0
 800b2d8:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800b2dc:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800b2e0:	2d0b      	cmp	r5, #11
 800b2e2:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800b2e6:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800b2ea:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800b2ee:	9304      	str	r3, [sp, #16]
 800b2f0:	d137      	bne.n	800b362 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b2f2:	2380      	movs	r3, #128	@ 0x80
 800b2f4:	f88d 0020 	strb.w	r0, [sp, #32]
 800b2f8:	4630      	mov	r0, r6
 800b2fa:	9203      	str	r2, [sp, #12]
 800b2fc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b300:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b304:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b308:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b30c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b310:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b314:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b318:	f7ff ff5c 	bl	800b1d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b31c:	2c0b      	cmp	r4, #11
 800b31e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800b322:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b326:	bf94      	ite	ls
 800b328:	4b19      	ldrls	r3, [pc, #100]	@ (800b390 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b32a:	2100      	movhi	r1, #0
 800b32c:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800b330:	bf98      	it	ls
 800b332:	5d19      	ldrbls	r1, [r3, r4]
 800b334:	fb02 8307 	mla	r3, r2, r7, r8
 800b338:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b33c:	10c9      	asrs	r1, r1, #3
 800b33e:	fb01 0003 	mla	r0, r1, r3, r0
 800b342:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800b346:	a901      	add	r1, sp, #4
 800b348:	9005      	str	r0, [sp, #20]
 800b34a:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b34e:	2300      	movs	r3, #0
 800b350:	6870      	ldr	r0, [r6, #4]
 800b352:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b356:	6803      	ldr	r3, [r0, #0]
 800b358:	685b      	ldr	r3, [r3, #4]
 800b35a:	4798      	blx	r3
 800b35c:	b00a      	add	sp, #40	@ 0x28
 800b35e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b362:	2d02      	cmp	r5, #2
 800b364:	d109      	bne.n	800b37a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b366:	28ff      	cmp	r0, #255	@ 0xff
 800b368:	d105      	bne.n	800b376 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b36a:	f1bc 0f00 	cmp.w	ip, #0
 800b36e:	bf14      	ite	ne
 800b370:	2340      	movne	r3, #64	@ 0x40
 800b372:	2320      	moveq	r3, #32
 800b374:	e7be      	b.n	800b2f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b376:	2340      	movs	r3, #64	@ 0x40
 800b378:	e7bc      	b.n	800b2f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b37a:	28ff      	cmp	r0, #255	@ 0xff
 800b37c:	d105      	bne.n	800b38a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b37e:	f1bc 0f00 	cmp.w	ip, #0
 800b382:	bf14      	ite	ne
 800b384:	2304      	movne	r3, #4
 800b386:	2301      	moveq	r3, #1
 800b388:	e7b4      	b.n	800b2f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b38a:	2304      	movs	r3, #4
 800b38c:	e7b2      	b.n	800b2f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b38e:	bf00      	nop
 800b390:	080212bc 	.word	0x080212bc

0800b394 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b398:	b08b      	sub	sp, #44	@ 0x2c
 800b39a:	461d      	mov	r5, r3
 800b39c:	2400      	movs	r4, #0
 800b39e:	4688      	mov	r8, r1
 800b3a0:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800b3a4:	4693      	mov	fp, r2
 800b3a6:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b3aa:	4607      	mov	r7, r0
 800b3ac:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800b3b0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800b3b4:	9404      	str	r4, [sp, #16]
 800b3b6:	bf14      	ite	ne
 800b3b8:	2308      	movne	r3, #8
 800b3ba:	2302      	moveq	r3, #2
 800b3bc:	fb05 b50a 	mla	r5, r5, sl, fp
 800b3c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b3c4:	f7ff ff06 	bl	800b1d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b3c8:	2e0b      	cmp	r6, #11
 800b3ca:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800b3ce:	a901      	add	r1, sp, #4
 800b3d0:	bf98      	it	ls
 800b3d2:	4b13      	ldrls	r3, [pc, #76]	@ (800b420 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b3d4:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b3d8:	bf98      	it	ls
 800b3da:	5d9c      	ldrbls	r4, [r3, r6]
 800b3dc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b3e0:	10e4      	asrs	r4, r4, #3
 800b3e2:	f8cd 8010 	str.w	r8, [sp, #16]
 800b3e6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b3ea:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b3ee:	fb04 0405 	mla	r4, r4, r5, r0
 800b3f2:	6878      	ldr	r0, [r7, #4]
 800b3f4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b3f8:	2300      	movs	r3, #0
 800b3fa:	9405      	str	r4, [sp, #20]
 800b3fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b400:	f88d 9020 	strb.w	r9, [sp, #32]
 800b404:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800b408:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b40c:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800b410:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800b414:	6803      	ldr	r3, [r0, #0]
 800b416:	685b      	ldr	r3, [r3, #4]
 800b418:	4798      	blx	r3
 800b41a:	b00b      	add	sp, #44	@ 0x2c
 800b41c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b420:	080212bc 	.word	0x080212bc

0800b424 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b424:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b428:	461e      	mov	r6, r3
 800b42a:	4b0a      	ldr	r3, [pc, #40]	@ (800b454 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b42c:	460f      	mov	r7, r1
 800b42e:	4690      	mov	r8, r2
 800b430:	881d      	ldrh	r5, [r3, #0]
 800b432:	f7f7 f821 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800b436:	6803      	ldr	r3, [r0, #0]
 800b438:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b43a:	4798      	blx	r3
 800b43c:	280b      	cmp	r0, #11
 800b43e:	bf96      	itet	ls
 800b440:	4b05      	ldrls	r3, [pc, #20]	@ (800b458 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b442:	2400      	movhi	r4, #0
 800b444:	5c1c      	ldrbls	r4, [r3, r0]
 800b446:	fb08 7005 	mla	r0, r8, r5, r7
 800b44a:	10e4      	asrs	r4, r4, #3
 800b44c:	fb04 6000 	mla	r0, r4, r0, r6
 800b450:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b454:	200150a6 	.word	0x200150a6
 800b458:	080212bc 	.word	0x080212bc

0800b45c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b45c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b45e:	b08b      	sub	sp, #44	@ 0x2c
 800b460:	461f      	mov	r7, r3
 800b462:	4604      	mov	r4, r0
 800b464:	4616      	mov	r6, r2
 800b466:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b46a:	2500      	movs	r5, #0
 800b46c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b470:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b474:	9504      	str	r5, [sp, #16]
 800b476:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b47a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b47e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b482:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b486:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b48a:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b48e:	f88d 3020 	strb.w	r3, [sp, #32]
 800b492:	f7ff fe9f 	bl	800b1d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b496:	463a      	mov	r2, r7
 800b498:	4631      	mov	r1, r6
 800b49a:	4603      	mov	r3, r0
 800b49c:	4620      	mov	r0, r4
 800b49e:	f7ff ffc1 	bl	800b424 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b4a2:	4b0e      	ldr	r3, [pc, #56]	@ (800b4dc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b4a4:	9005      	str	r0, [sp, #20]
 800b4a6:	881b      	ldrh	r3, [r3, #0]
 800b4a8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b4ac:	f7f6 ffe4 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800b4b0:	6803      	ldr	r3, [r0, #0]
 800b4b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b4b4:	4798      	blx	r3
 800b4b6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800b4b8:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800b4bc:	a901      	add	r1, sp, #4
 800b4be:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800b4c2:	9304      	str	r3, [sp, #16]
 800b4c4:	6860      	ldr	r0, [r4, #4]
 800b4c6:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b4ca:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800b4ce:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b4d2:	6803      	ldr	r3, [r0, #0]
 800b4d4:	685b      	ldr	r3, [r3, #4]
 800b4d6:	4798      	blx	r3
 800b4d8:	b00b      	add	sp, #44	@ 0x2c
 800b4da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b4dc:	200150a6 	.word	0x200150a6

0800b4e0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b4e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b4e2:	b08d      	sub	sp, #52	@ 0x34
 800b4e4:	2501      	movs	r5, #1
 800b4e6:	4604      	mov	r4, r0
 800b4e8:	466b      	mov	r3, sp
 800b4ea:	9503      	str	r5, [sp, #12]
 800b4ec:	e883 0006 	stmia.w	r3, {r1, r2}
 800b4f0:	2300      	movs	r3, #0
 800b4f2:	f8bd 6000 	ldrh.w	r6, [sp]
 800b4f6:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b4fa:	9306      	str	r3, [sp, #24]
 800b4fc:	6803      	ldr	r3, [r0, #0]
 800b4fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b500:	4798      	blx	r3
 800b502:	463a      	mov	r2, r7
 800b504:	4631      	mov	r1, r6
 800b506:	4603      	mov	r3, r0
 800b508:	4620      	mov	r0, r4
 800b50a:	f7ff ff8b 	bl	800b424 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b50e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800b510:	9004      	str	r0, [sp, #16]
 800b512:	9307      	str	r3, [sp, #28]
 800b514:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b518:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b51c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b520:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b524:	4b0e      	ldr	r3, [pc, #56]	@ (800b560 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b526:	881b      	ldrh	r3, [r3, #0]
 800b528:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b52c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b530:	f7f6 ffa2 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800b534:	6803      	ldr	r3, [r0, #0]
 800b536:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b538:	4798      	blx	r3
 800b53a:	23ff      	movs	r3, #255	@ 0xff
 800b53c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b540:	a903      	add	r1, sp, #12
 800b542:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b546:	6860      	ldr	r0, [r4, #4]
 800b548:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b54c:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b550:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b554:	6803      	ldr	r3, [r0, #0]
 800b556:	685b      	ldr	r3, [r3, #4]
 800b558:	4798      	blx	r3
 800b55a:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800b55c:	b00d      	add	sp, #52	@ 0x34
 800b55e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b560:	200150a6 	.word	0x200150a6

0800b564 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b564:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b568:	b08c      	sub	sp, #48	@ 0x30
 800b56a:	461e      	mov	r6, r3
 800b56c:	2300      	movs	r3, #0
 800b56e:	4604      	mov	r4, r0
 800b570:	466d      	mov	r5, sp
 800b572:	9306      	str	r3, [sp, #24]
 800b574:	6803      	ldr	r3, [r0, #0]
 800b576:	e885 0006 	stmia.w	r5, {r1, r2}
 800b57a:	2501      	movs	r5, #1
 800b57c:	f8bd 7000 	ldrh.w	r7, [sp]
 800b580:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b584:	9503      	str	r5, [sp, #12]
 800b586:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b588:	4798      	blx	r3
 800b58a:	4642      	mov	r2, r8
 800b58c:	4639      	mov	r1, r7
 800b58e:	4603      	mov	r3, r0
 800b590:	4620      	mov	r0, r4
 800b592:	f7ff ff47 	bl	800b424 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b596:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b59a:	9004      	str	r0, [sp, #16]
 800b59c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b5a0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b5a4:	9607      	str	r6, [sp, #28]
 800b5a6:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b5aa:	4b10      	ldr	r3, [pc, #64]	@ (800b5ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b5ac:	881b      	ldrh	r3, [r3, #0]
 800b5ae:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b5b2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b5b4:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b5b8:	f7f6 ff5e 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 800b5bc:	6803      	ldr	r3, [r0, #0]
 800b5be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b5c0:	4798      	blx	r3
 800b5c2:	23ff      	movs	r3, #255	@ 0xff
 800b5c4:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b5c8:	a903      	add	r1, sp, #12
 800b5ca:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b5ce:	6860      	ldr	r0, [r4, #4]
 800b5d0:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b5d4:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b5d8:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b5dc:	6803      	ldr	r3, [r0, #0]
 800b5de:	685b      	ldr	r3, [r3, #4]
 800b5e0:	4798      	blx	r3
 800b5e2:	4630      	mov	r0, r6
 800b5e4:	b00c      	add	sp, #48	@ 0x30
 800b5e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b5ea:	bf00      	nop
 800b5ec:	200150a6 	.word	0x200150a6

0800b5f0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b5f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b5f2:	b085      	sub	sp, #20
 800b5f4:	4605      	mov	r5, r0
 800b5f6:	ac02      	add	r4, sp, #8
 800b5f8:	e884 0006 	stmia.w	r4, {r1, r2}
 800b5fc:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b600:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b604:	f7ff fde6 	bl	800b1d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b608:	4631      	mov	r1, r6
 800b60a:	4603      	mov	r3, r0
 800b60c:	463a      	mov	r2, r7
 800b60e:	4628      	mov	r0, r5
 800b610:	f7ff ff08 	bl	800b424 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b614:	4a05      	ldr	r2, [pc, #20]	@ (800b62c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b616:	682b      	ldr	r3, [r5, #0]
 800b618:	8812      	ldrh	r2, [r2, #0]
 800b61a:	9200      	str	r2, [sp, #0]
 800b61c:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800b61e:	4603      	mov	r3, r0
 800b620:	4628      	mov	r0, r5
 800b622:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b626:	47b0      	blx	r6
 800b628:	b005      	add	sp, #20
 800b62a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b62c:	200150a6 	.word	0x200150a6

0800b630 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b630:	b570      	push	{r4, r5, r6, lr}
 800b632:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800b636:	4604      	mov	r4, r0
 800b638:	b19b      	cbz	r3, 800b662 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b63a:	2002      	movs	r0, #2
 800b63c:	f7f6 f812 	bl	8001664 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b640:	2300      	movs	r3, #0
 800b642:	4620      	mov	r0, r4
 800b644:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b648:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800b64c:	6823      	ldr	r3, [r4, #0]
 800b64e:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800b652:	f7ff fdbf 	bl	800b1d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b656:	4601      	mov	r1, r0
 800b658:	4620      	mov	r0, r4
 800b65a:	462b      	mov	r3, r5
 800b65c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b660:	4718      	bx	r3
 800b662:	bd70      	pop	{r4, r5, r6, pc}

0800b664 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800b664:	b570      	push	{r4, r5, r6, lr}
 800b666:	4605      	mov	r5, r0
 800b668:	460c      	mov	r4, r1
 800b66a:	2003      	movs	r0, #3
 800b66c:	b149      	cbz	r1, 800b682 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800b66e:	f7f5 ff99 	bl	80015a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b672:	6928      	ldr	r0, [r5, #16]
 800b674:	b168      	cbz	r0, 800b692 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b676:	6803      	ldr	r3, [r0, #0]
 800b678:	2101      	movs	r1, #1
 800b67a:	695b      	ldr	r3, [r3, #20]
 800b67c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b680:	4718      	bx	r3
 800b682:	f7f5 ffbf 	bl	8001604 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b686:	6928      	ldr	r0, [r5, #16]
 800b688:	b118      	cbz	r0, 800b692 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b68a:	6803      	ldr	r3, [r0, #0]
 800b68c:	4621      	mov	r1, r4
 800b68e:	695b      	ldr	r3, [r3, #20]
 800b690:	e7f4      	b.n	800b67c <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800b692:	bd70      	pop	{r4, r5, r6, pc}

0800b694 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b694:	b538      	push	{r3, r4, r5, lr}
 800b696:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800b69a:	4604      	mov	r4, r0
 800b69c:	460d      	mov	r5, r1
 800b69e:	428b      	cmp	r3, r1
 800b6a0:	d006      	beq.n	800b6b0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b6a2:	6803      	ldr	r3, [r0, #0]
 800b6a4:	b929      	cbnz	r1, 800b6b2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b6a6:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800b6aa:	4798      	blx	r3
 800b6ac:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800b6b0:	bd38      	pop	{r3, r4, r5, pc}
 800b6b2:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800b6b6:	e7f8      	b.n	800b6aa <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b6b8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b6b8:	4b0d      	ldr	r3, [pc, #52]	@ (800b6f0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b6ba:	b510      	push	{r4, lr}
 800b6bc:	781b      	ldrb	r3, [r3, #0]
 800b6be:	4604      	mov	r4, r0
 800b6c0:	b95b      	cbnz	r3, 800b6da <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b6c2:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800b6c6:	2b02      	cmp	r3, #2
 800b6c8:	d007      	beq.n	800b6da <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b6ca:	6840      	ldr	r0, [r0, #4]
 800b6cc:	f000 f912 	bl	800b8f4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b6d0:	b118      	cbz	r0, 800b6da <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b6d2:	6862      	ldr	r2, [r4, #4]
 800b6d4:	7a53      	ldrb	r3, [r2, #9]
 800b6d6:	2b00      	cmp	r3, #0
 800b6d8:	d0fc      	beq.n	800b6d4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b6da:	f7f6 f945 	bl	8001968 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b6de:	4620      	mov	r0, r4
 800b6e0:	2100      	movs	r1, #0
 800b6e2:	f7ff ffd7 	bl	800b694 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b6e6:	4620      	mov	r0, r4
 800b6e8:	f7ff fd74 	bl	800b1d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6ec:	bd10      	pop	{r4, pc}
 800b6ee:	bf00      	nop
 800b6f0:	200150aa 	.word	0x200150aa

0800b6f4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b6f4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b6f8:	1a13      	subs	r3, r2, r0
 800b6fa:	4258      	negs	r0, r3
 800b6fc:	4158      	adcs	r0, r3
 800b6fe:	4770      	bx	lr

0800b700 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b700:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b704:	1a9b      	subs	r3, r3, r2
 800b706:	2b00      	cmp	r3, #0
 800b708:	bfdc      	itt	le
 800b70a:	6882      	ldrle	r2, [r0, #8]
 800b70c:	189b      	addle	r3, r3, r2
 800b70e:	2b01      	cmp	r3, #1
 800b710:	bfcc      	ite	gt
 800b712:	2000      	movgt	r0, #0
 800b714:	2001      	movle	r0, #1
 800b716:	4770      	bx	lr

0800b718 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b718:	6902      	ldr	r2, [r0, #16]
 800b71a:	6843      	ldr	r3, [r0, #4]
 800b71c:	2024      	movs	r0, #36	@ 0x24
 800b71e:	fb00 3002 	mla	r0, r0, r2, r3
 800b722:	4770      	bx	lr

0800b724 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b724:	6803      	ldr	r3, [r0, #0]
 800b726:	691b      	ldr	r3, [r3, #16]
 800b728:	4718      	bx	r3

0800b72a <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b72a:	2301      	movs	r3, #1
 800b72c:	b570      	push	{r4, r5, r6, lr}
 800b72e:	7203      	strb	r3, [r0, #8]
 800b730:	4604      	mov	r4, r0
 800b732:	6840      	ldr	r0, [r0, #4]
 800b734:	6803      	ldr	r3, [r0, #0]
 800b736:	699b      	ldr	r3, [r3, #24]
 800b738:	4798      	blx	r3
 800b73a:	6803      	ldr	r3, [r0, #0]
 800b73c:	4605      	mov	r5, r0
 800b73e:	2b40      	cmp	r3, #64	@ 0x40
 800b740:	d00c      	beq.n	800b75c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b742:	d810      	bhi.n	800b766 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b744:	2b04      	cmp	r3, #4
 800b746:	d01d      	beq.n	800b784 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b748:	d804      	bhi.n	800b754 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b74a:	2b01      	cmp	r3, #1
 800b74c:	d006      	beq.n	800b75c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b74e:	2b02      	cmp	r3, #2
 800b750:	d02c      	beq.n	800b7ac <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b752:	bd70      	pop	{r4, r5, r6, pc}
 800b754:	2b08      	cmp	r3, #8
 800b756:	d01d      	beq.n	800b794 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b758:	2b20      	cmp	r3, #32
 800b75a:	d1fa      	bne.n	800b752 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b75c:	6823      	ldr	r3, [r4, #0]
 800b75e:	4620      	mov	r0, r4
 800b760:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b762:	4798      	blx	r3
 800b764:	e013      	b.n	800b78e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b766:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b76a:	d0f7      	beq.n	800b75c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b76c:	d804      	bhi.n	800b778 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b76e:	2b80      	cmp	r3, #128	@ 0x80
 800b770:	d0f4      	beq.n	800b75c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b772:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800b776:	e7f0      	b.n	800b75a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b778:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800b77c:	d0ee      	beq.n	800b75c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b77e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b782:	e7e5      	b.n	800b750 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b784:	6823      	ldr	r3, [r4, #0]
 800b786:	7f01      	ldrb	r1, [r0, #28]
 800b788:	4620      	mov	r0, r4
 800b78a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b78c:	4798      	blx	r3
 800b78e:	6823      	ldr	r3, [r4, #0]
 800b790:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b792:	e006      	b.n	800b7a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b794:	6823      	ldr	r3, [r4, #0]
 800b796:	7f01      	ldrb	r1, [r0, #28]
 800b798:	4620      	mov	r0, r4
 800b79a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b79c:	4798      	blx	r3
 800b79e:	6823      	ldr	r3, [r4, #0]
 800b7a0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b7a2:	4629      	mov	r1, r5
 800b7a4:	4620      	mov	r0, r4
 800b7a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b7aa:	4718      	bx	r3
 800b7ac:	6823      	ldr	r3, [r4, #0]
 800b7ae:	4620      	mov	r0, r4
 800b7b0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b7b2:	4798      	blx	r3
 800b7b4:	e7f3      	b.n	800b79e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b7b6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b7b6:	4770      	bx	lr

0800b7b8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b7b8:	4770      	bx	lr

0800b7ba <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b7ba:	4770      	bx	lr

0800b7bc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b7bc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b7c0:	b510      	push	{r4, lr}
 800b7c2:	1ad2      	subs	r2, r2, r3
 800b7c4:	2a00      	cmp	r2, #0
 800b7c6:	bfdc      	itt	le
 800b7c8:	6884      	ldrle	r4, [r0, #8]
 800b7ca:	1912      	addle	r2, r2, r4
 800b7cc:	2a01      	cmp	r2, #1
 800b7ce:	dd16      	ble.n	800b7fe <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b7d0:	6842      	ldr	r2, [r0, #4]
 800b7d2:	2424      	movs	r4, #36	@ 0x24
 800b7d4:	fb04 2303 	mla	r3, r4, r3, r2
 800b7d8:	f101 0220 	add.w	r2, r1, #32
 800b7dc:	f851 4b04 	ldr.w	r4, [r1], #4
 800b7e0:	4291      	cmp	r1, r2
 800b7e2:	f843 4b04 	str.w	r4, [r3], #4
 800b7e6:	d1f9      	bne.n	800b7dc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b7e8:	780a      	ldrb	r2, [r1, #0]
 800b7ea:	701a      	strb	r2, [r3, #0]
 800b7ec:	68c3      	ldr	r3, [r0, #12]
 800b7ee:	6882      	ldr	r2, [r0, #8]
 800b7f0:	f3bf 8f5b 	dmb	ish
 800b7f4:	3301      	adds	r3, #1
 800b7f6:	429a      	cmp	r2, r3
 800b7f8:	bfd8      	it	le
 800b7fa:	1a9b      	suble	r3, r3, r2
 800b7fc:	60c3      	str	r3, [r0, #12]
 800b7fe:	bd10      	pop	{r4, pc}

0800b800 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b800:	6903      	ldr	r3, [r0, #16]
 800b802:	6882      	ldr	r2, [r0, #8]
 800b804:	f3bf 8f5b 	dmb	ish
 800b808:	3301      	adds	r3, #1
 800b80a:	429a      	cmp	r2, r3
 800b80c:	bfd8      	it	le
 800b80e:	1a9b      	suble	r3, r3, r2
 800b810:	6103      	str	r3, [r0, #16]
 800b812:	4770      	bx	lr

0800b814 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b814:	b570      	push	{r4, r5, r6, lr}
 800b816:	4604      	mov	r4, r0
 800b818:	460e      	mov	r6, r1
 800b81a:	6860      	ldr	r0, [r4, #4]
 800b81c:	6803      	ldr	r3, [r0, #0]
 800b81e:	685b      	ldr	r3, [r3, #4]
 800b820:	4798      	blx	r3
 800b822:	2800      	cmp	r0, #0
 800b824:	d1f9      	bne.n	800b81a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b826:	4d0d      	ldr	r5, [pc, #52]	@ (800b85c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b828:	6828      	ldr	r0, [r5, #0]
 800b82a:	6803      	ldr	r3, [r0, #0]
 800b82c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b82e:	4798      	blx	r3
 800b830:	f7f6 f8a8 	bl	8001984 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b834:	6828      	ldr	r0, [r5, #0]
 800b836:	2101      	movs	r1, #1
 800b838:	f7ff ff2c 	bl	800b694 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b83c:	6860      	ldr	r0, [r4, #4]
 800b83e:	4631      	mov	r1, r6
 800b840:	6803      	ldr	r3, [r0, #0]
 800b842:	689b      	ldr	r3, [r3, #8]
 800b844:	4798      	blx	r3
 800b846:	6823      	ldr	r3, [r4, #0]
 800b848:	4620      	mov	r0, r4
 800b84a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b84c:	4798      	blx	r3
 800b84e:	6828      	ldr	r0, [r5, #0]
 800b850:	6803      	ldr	r3, [r0, #0]
 800b852:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b856:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800b858:	4718      	bx	r3
 800b85a:	bf00      	nop
 800b85c:	200150ac 	.word	0x200150ac

0800b860 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b860:	b508      	push	{r3, lr}
 800b862:	f7f6 f881 	bl	8001968 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b866:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b86a:	f7f6 b885 	b.w	8001978 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b86e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b86e:	b510      	push	{r4, lr}
 800b870:	4604      	mov	r4, r0
 800b872:	2114      	movs	r1, #20
 800b874:	f013 f8ad 	bl	801e9d2 <_ZdlPvj>
 800b878:	4620      	mov	r0, r4
 800b87a:	bd10      	pop	{r4, pc}

0800b87c <_ZN8touchgfx13DMA_Interface5startEv>:
 800b87c:	b510      	push	{r4, lr}
 800b87e:	4604      	mov	r4, r0
 800b880:	6840      	ldr	r0, [r0, #4]
 800b882:	6803      	ldr	r3, [r0, #0]
 800b884:	681b      	ldr	r3, [r3, #0]
 800b886:	4798      	blx	r3
 800b888:	b948      	cbnz	r0, 800b89e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b88a:	7a63      	ldrb	r3, [r4, #9]
 800b88c:	b13b      	cbz	r3, 800b89e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b88e:	7a23      	ldrb	r3, [r4, #8]
 800b890:	b92b      	cbnz	r3, 800b89e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b892:	6823      	ldr	r3, [r4, #0]
 800b894:	4620      	mov	r0, r4
 800b896:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b898:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b89c:	4718      	bx	r3
 800b89e:	bd10      	pop	{r4, pc}

0800b8a0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b8a0:	b570      	push	{r4, r5, r6, lr}
 800b8a2:	4604      	mov	r4, r0
 800b8a4:	6840      	ldr	r0, [r0, #4]
 800b8a6:	6803      	ldr	r3, [r0, #0]
 800b8a8:	681b      	ldr	r3, [r3, #0]
 800b8aa:	4798      	blx	r3
 800b8ac:	4605      	mov	r5, r0
 800b8ae:	b930      	cbnz	r0, 800b8be <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b8b0:	7a23      	ldrb	r3, [r4, #8]
 800b8b2:	b123      	cbz	r3, 800b8be <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b8b4:	6860      	ldr	r0, [r4, #4]
 800b8b6:	6803      	ldr	r3, [r0, #0]
 800b8b8:	695b      	ldr	r3, [r3, #20]
 800b8ba:	4798      	blx	r3
 800b8bc:	7225      	strb	r5, [r4, #8]
 800b8be:	6860      	ldr	r0, [r4, #4]
 800b8c0:	6803      	ldr	r3, [r0, #0]
 800b8c2:	681b      	ldr	r3, [r3, #0]
 800b8c4:	4798      	blx	r3
 800b8c6:	b928      	cbnz	r0, 800b8d4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b8c8:	6823      	ldr	r3, [r4, #0]
 800b8ca:	4620      	mov	r0, r4
 800b8cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b8ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b8d2:	4718      	bx	r3
 800b8d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b8d8:	f7f6 b85c 	b.w	8001994 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b8dc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b8dc:	b510      	push	{r4, lr}
 800b8de:	6082      	str	r2, [r0, #8]
 800b8e0:	2200      	movs	r2, #0
 800b8e2:	4c03      	ldr	r4, [pc, #12]	@ (800b8f0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b8e4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b8e8:	e9c0 4100 	strd	r4, r1, [r0]
 800b8ec:	bd10      	pop	{r4, pc}
 800b8ee:	bf00      	nop
 800b8f0:	080212d0 	.word	0x080212d0

0800b8f4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b8f4:	6840      	ldr	r0, [r0, #4]
 800b8f6:	6803      	ldr	r3, [r0, #0]
 800b8f8:	681b      	ldr	r3, [r3, #0]
 800b8fa:	4718      	bx	r3

0800b8fc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800b8fc:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800b900:	4770      	bx	lr

0800b902 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800b902:	b510      	push	{r4, lr}
 800b904:	4604      	mov	r4, r0
 800b906:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800b908:	b150      	cbz	r0, 800b920 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b90a:	6803      	ldr	r3, [r0, #0]
 800b90c:	68db      	ldr	r3, [r3, #12]
 800b90e:	4798      	blx	r3
 800b910:	b130      	cbz	r0, 800b920 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b912:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800b914:	4621      	mov	r1, r4
 800b916:	6803      	ldr	r3, [r0, #0]
 800b918:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b91c:	689b      	ldr	r3, [r3, #8]
 800b91e:	4718      	bx	r3
 800b920:	bd10      	pop	{r4, pc}

0800b922 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800b922:	790b      	ldrb	r3, [r1, #4]
 800b924:	2b00      	cmp	r3, #0
 800b926:	bf0c      	ite	eq
 800b928:	2301      	moveq	r3, #1
 800b92a:	2300      	movne	r3, #0
 800b92c:	b570      	push	{r4, r5, r6, lr}
 800b92e:	4604      	mov	r4, r0
 800b930:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 800b934:	460e      	mov	r6, r1
 800b936:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 800b93a:	d109      	bne.n	800b950 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800b93c:	b14d      	cbz	r5, 800b952 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800b93e:	7933      	ldrb	r3, [r6, #4]
 800b940:	2b01      	cmp	r3, #1
 800b942:	d10c      	bne.n	800b95e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800b944:	6823      	ldr	r3, [r4, #0]
 800b946:	4620      	mov	r0, r4
 800b948:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800b94a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b94e:	4718      	bx	r3
 800b950:	b12d      	cbz	r5, 800b95e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800b952:	6823      	ldr	r3, [r4, #0]
 800b954:	4620      	mov	r0, r4
 800b956:	695b      	ldr	r3, [r3, #20]
 800b958:	4798      	blx	r3
 800b95a:	2d00      	cmp	r5, #0
 800b95c:	d1ef      	bne.n	800b93e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800b95e:	bd70      	pop	{r4, r5, r6, pc}

0800b960 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800b960:	4770      	bx	lr

0800b962 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800b962:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800b966:	b133      	cbz	r3, 800b976 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800b968:	790b      	ldrb	r3, [r1, #4]
 800b96a:	2b01      	cmp	r3, #1
 800b96c:	bf01      	itttt	eq
 800b96e:	8dc3      	ldrheq	r3, [r0, #46]	@ 0x2e
 800b970:	8e02      	ldrheq	r2, [r0, #48]	@ 0x30
 800b972:	8603      	strheq	r3, [r0, #48]	@ 0x30
 800b974:	85c2      	strheq	r2, [r0, #46]	@ 0x2e
 800b976:	f7ff bfd4 	b.w	800b922 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800b97a <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800b97a:	8813      	ldrh	r3, [r2, #0]
 800b97c:	8683      	strh	r3, [r0, #52]	@ 0x34
 800b97e:	f000 bbf8 	b.w	800c172 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800b982 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800b982:	b510      	push	{r4, lr}
 800b984:	4604      	mov	r4, r0
 800b986:	2138      	movs	r1, #56	@ 0x38
 800b988:	f013 f823 	bl	801e9d2 <_ZdlPvj>
 800b98c:	4620      	mov	r0, r4
 800b98e:	bd10      	pop	{r4, pc}

0800b990 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800b990:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800b994:	b12a      	cbz	r2, 800b9a2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800b996:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800b99a:	b112      	cbz	r2, 800b9a2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800b99c:	6803      	ldr	r3, [r0, #0]
 800b99e:	695b      	ldr	r3, [r3, #20]
 800b9a0:	4718      	bx	r3
 800b9a2:	4770      	bx	lr

0800b9a4 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800b9a4:	2000      	movs	r0, #0
 800b9a6:	4770      	bx	lr

0800b9a8 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 800b9a8:	2000      	movs	r0, #0
 800b9aa:	4770      	bx	lr

0800b9ac <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800b9ac:	4b07      	ldr	r3, [pc, #28]	@ (800b9cc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800b9ae:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800b9b0:	881b      	ldrh	r3, [r3, #0]
 800b9b2:	4293      	cmp	r3, r2
 800b9b4:	bf81      	itttt	hi
 800b9b6:	4b06      	ldrhi	r3, [pc, #24]	@ (800b9d0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800b9b8:	681b      	ldrhi	r3, [r3, #0]
 800b9ba:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800b9be:	7858      	ldrbhi	r0, [r3, #1]
 800b9c0:	bf8c      	ite	hi
 800b9c2:	f000 0003 	andhi.w	r0, r0, #3
 800b9c6:	2000      	movls	r0, #0
 800b9c8:	4770      	bx	lr
 800b9ca:	bf00      	nop
 800b9cc:	20015100 	.word	0x20015100
 800b9d0:	200150fc 	.word	0x200150fc

0800b9d4 <_ZN8touchgfx8TextAreaD1Ev>:
 800b9d4:	4770      	bx	lr
	...

0800b9d8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800b9d8:	4b11      	ldr	r3, [pc, #68]	@ (800ba20 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800b9da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b9de:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800b9e0:	4604      	mov	r4, r0
 800b9e2:	881b      	ldrh	r3, [r3, #0]
 800b9e4:	428b      	cmp	r3, r1
 800b9e6:	d918      	bls.n	800ba1a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800b9e8:	6803      	ldr	r3, [r0, #0]
 800b9ea:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800b9ec:	4b0d      	ldr	r3, [pc, #52]	@ (800ba24 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800b9ee:	6818      	ldr	r0, [r3, #0]
 800b9f0:	f7f7 fc02 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 800b9f4:	6823      	ldr	r3, [r4, #0]
 800b9f6:	4606      	mov	r6, r0
 800b9f8:	4620      	mov	r0, r4
 800b9fa:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b9fc:	4798      	blx	r3
 800b9fe:	6823      	ldr	r3, [r4, #0]
 800ba00:	4607      	mov	r7, r0
 800ba02:	4620      	mov	r0, r4
 800ba04:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ba08:	4798      	blx	r3
 800ba0a:	463a      	mov	r2, r7
 800ba0c:	4603      	mov	r3, r0
 800ba0e:	4631      	mov	r1, r6
 800ba10:	4620      	mov	r0, r4
 800ba12:	46ac      	mov	ip, r5
 800ba14:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ba18:	4760      	bx	ip
 800ba1a:	2000      	movs	r0, #0
 800ba1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ba20:	20015100 	.word	0x20015100
 800ba24:	20015108 	.word	0x20015108

0800ba28 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800ba28:	4b18      	ldr	r3, [pc, #96]	@ (800ba8c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800ba2a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ba2e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800ba30:	4604      	mov	r4, r0
 800ba32:	881b      	ldrh	r3, [r3, #0]
 800ba34:	428b      	cmp	r3, r1
 800ba36:	d926      	bls.n	800ba86 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800ba38:	4b15      	ldr	r3, [pc, #84]	@ (800ba90 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800ba3a:	681b      	ldr	r3, [r3, #0]
 800ba3c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ba40:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ba44:	4b13      	ldr	r3, [pc, #76]	@ (800ba94 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800ba46:	7855      	ldrb	r5, [r2, #1]
 800ba48:	681b      	ldr	r3, [r3, #0]
 800ba4a:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800ba4e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800ba52:	6833      	ldr	r3, [r6, #0]
 800ba54:	69df      	ldr	r7, [r3, #28]
 800ba56:	4b10      	ldr	r3, [pc, #64]	@ (800ba98 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800ba58:	6818      	ldr	r0, [r3, #0]
 800ba5a:	f7f7 fbcd 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 800ba5e:	6823      	ldr	r3, [r4, #0]
 800ba60:	4680      	mov	r8, r0
 800ba62:	4620      	mov	r0, r4
 800ba64:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ba66:	4798      	blx	r3
 800ba68:	6823      	ldr	r3, [r4, #0]
 800ba6a:	4681      	mov	r9, r0
 800ba6c:	4620      	mov	r0, r4
 800ba6e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ba72:	4798      	blx	r3
 800ba74:	464b      	mov	r3, r9
 800ba76:	9000      	str	r0, [sp, #0]
 800ba78:	4642      	mov	r2, r8
 800ba7a:	4629      	mov	r1, r5
 800ba7c:	4630      	mov	r0, r6
 800ba7e:	47b8      	blx	r7
 800ba80:	b003      	add	sp, #12
 800ba82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ba86:	2000      	movs	r0, #0
 800ba88:	e7fa      	b.n	800ba80 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800ba8a:	bf00      	nop
 800ba8c:	20015100 	.word	0x20015100
 800ba90:	200150fc 	.word	0x200150fc
 800ba94:	20015104 	.word	0x20015104
 800ba98:	20015108 	.word	0x20015108

0800ba9c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800ba9c:	b40e      	push	{r1, r2, r3}
 800ba9e:	4b30      	ldr	r3, [pc, #192]	@ (800bb60 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800baa0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800baa4:	881a      	ldrh	r2, [r3, #0]
 800baa6:	b09d      	sub	sp, #116	@ 0x74
 800baa8:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800baaa:	4604      	mov	r4, r0
 800baac:	429a      	cmp	r2, r3
 800baae:	d954      	bls.n	800bb5a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800bab0:	aa26      	add	r2, sp, #152	@ 0x98
 800bab2:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800bb64 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800bab6:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800bb68 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800baba:	9202      	str	r2, [sp, #8]
 800babc:	f8d9 2000 	ldr.w	r2, [r9]
 800bac0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800bac4:	f8d8 3000 	ldr.w	r3, [r8]
 800bac8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800bacc:	682b      	ldr	r3, [r5, #0]
 800bace:	4628      	mov	r0, r5
 800bad0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bad2:	4798      	blx	r3
 800bad4:	4606      	mov	r6, r0
 800bad6:	b207      	sxth	r7, r0
 800bad8:	a803      	add	r0, sp, #12
 800bada:	f003 ff8b 	bl	800f9f4 <_ZN8touchgfx12TextProviderC1Ev>
 800bade:	682b      	ldr	r3, [r5, #0]
 800bae0:	4628      	mov	r0, r5
 800bae2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800bae4:	4798      	blx	r3
 800bae6:	682b      	ldr	r3, [r5, #0]
 800bae8:	4682      	mov	sl, r0
 800baea:	4628      	mov	r0, r5
 800baec:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800baee:	4798      	blx	r3
 800baf0:	4653      	mov	r3, sl
 800baf2:	9000      	str	r0, [sp, #0]
 800baf4:	a803      	add	r0, sp, #12
 800baf6:	9a02      	ldr	r2, [sp, #8]
 800baf8:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800bafa:	f003 ffd6 	bl	800faaa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800bafe:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800bb00:	f8d9 3000 	ldr.w	r3, [r9]
 800bb04:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800bb08:	8925      	ldrh	r5, [r4, #8]
 800bb0a:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800bb0e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800bb12:	eba5 050c 	sub.w	r5, r5, ip
 800bb16:	784a      	ldrb	r2, [r1, #1]
 800bb18:	f8d8 3000 	ldr.w	r3, [r8]
 800bb1c:	b22d      	sxth	r5, r5
 800bb1e:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800bb22:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800bb26:	9500      	str	r5, [sp, #0]
 800bb28:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800bb2c:	a803      	add	r0, sp, #12
 800bb2e:	f001 fdfd 	bl	800d72c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800bb32:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800bb36:	b203      	sxth	r3, r0
 800bb38:	18b9      	adds	r1, r7, r2
 800bb3a:	2900      	cmp	r1, #0
 800bb3c:	dd0b      	ble.n	800bb56 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800bb3e:	3b01      	subs	r3, #1
 800bb40:	fb13 f302 	smulbb	r3, r3, r2
 800bb44:	fb16 3300 	smlabb	r3, r6, r0, r3
 800bb48:	b21f      	sxth	r7, r3
 800bb4a:	4638      	mov	r0, r7
 800bb4c:	b01d      	add	sp, #116	@ 0x74
 800bb4e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bb52:	b003      	add	sp, #12
 800bb54:	4770      	bx	lr
 800bb56:	2b00      	cmp	r3, #0
 800bb58:	dcf7      	bgt.n	800bb4a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800bb5a:	2700      	movs	r7, #0
 800bb5c:	e7f5      	b.n	800bb4a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800bb5e:	bf00      	nop
 800bb60:	20015100 	.word	0x20015100
 800bb64:	200150fc 	.word	0x200150fc
 800bb68:	20015104 	.word	0x20015104

0800bb6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800bb6c:	4bbd      	ldr	r3, [pc, #756]	@ (800be64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800bb6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb72:	460c      	mov	r4, r1
 800bb74:	881b      	ldrh	r3, [r3, #0]
 800bb76:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 800bb78:	b0a9      	sub	sp, #164	@ 0xa4
 800bb7a:	4680      	mov	r8, r0
 800bb7c:	428b      	cmp	r3, r1
 800bb7e:	d809      	bhi.n	800bb94 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800bb80:	2300      	movs	r3, #0
 800bb82:	f04f 32ff 	mov.w	r2, #4294967295
 800bb86:	6083      	str	r3, [r0, #8]
 800bb88:	e9c0 3200 	strd	r3, r2, [r0]
 800bb8c:	4640      	mov	r0, r8
 800bb8e:	b029      	add	sp, #164	@ 0xa4
 800bb90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb94:	4eb4      	ldr	r6, [pc, #720]	@ (800be68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800bb96:	6833      	ldr	r3, [r6, #0]
 800bb98:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800bb9c:	4bb3      	ldr	r3, [pc, #716]	@ (800be6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800bb9e:	681b      	ldr	r3, [r3, #0]
 800bba0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800bba4:	4bb2      	ldr	r3, [pc, #712]	@ (800be70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800bba6:	6818      	ldr	r0, [r3, #0]
 800bba8:	f7f7 fb26 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 800bbac:	682b      	ldr	r3, [r5, #0]
 800bbae:	4681      	mov	r9, r0
 800bbb0:	4628      	mov	r0, r5
 800bbb2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bbb4:	4798      	blx	r3
 800bbb6:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 800bbb8:	b203      	sxth	r3, r0
 800bbba:	4682      	mov	sl, r0
 800bbbc:	4407      	add	r7, r0
 800bbbe:	a80f      	add	r0, sp, #60	@ 0x3c
 800bbc0:	9304      	str	r3, [sp, #16]
 800bbc2:	b2bb      	uxth	r3, r7
 800bbc4:	9303      	str	r3, [sp, #12]
 800bbc6:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800bbca:	2b00      	cmp	r3, #0
 800bbcc:	f040 80a5 	bne.w	800bd1a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 800bbd0:	f003 ff10 	bl	800f9f4 <_ZN8touchgfx12TextProviderC1Ev>
 800bbd4:	682b      	ldr	r3, [r5, #0]
 800bbd6:	4628      	mov	r0, r5
 800bbd8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800bbda:	4798      	blx	r3
 800bbdc:	682b      	ldr	r3, [r5, #0]
 800bbde:	4606      	mov	r6, r0
 800bbe0:	4628      	mov	r0, r5
 800bbe2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800bbe4:	4798      	blx	r3
 800bbe6:	6823      	ldr	r3, [r4, #0]
 800bbe8:	4607      	mov	r7, r0
 800bbea:	4620      	mov	r0, r4
 800bbec:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bbee:	4798      	blx	r3
 800bbf0:	6823      	ldr	r3, [r4, #0]
 800bbf2:	4683      	mov	fp, r0
 800bbf4:	4620      	mov	r0, r4
 800bbf6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800bbfa:	4798      	blx	r3
 800bbfc:	463b      	mov	r3, r7
 800bbfe:	4649      	mov	r1, r9
 800bc00:	4632      	mov	r2, r6
 800bc02:	2600      	movs	r6, #0
 800bc04:	e9cd b000 	strd	fp, r0, [sp]
 800bc08:	a80f      	add	r0, sp, #60	@ 0x3c
 800bc0a:	4637      	mov	r7, r6
 800bc0c:	f003 ff62 	bl	800fad4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800bc10:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800bc14:	f8df b250 	ldr.w	fp, [pc, #592]	@ 800be68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800bc18:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800bc1c:	bf0c      	ite	eq
 800bc1e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800bc22:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800bc26:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800bc28:	4629      	mov	r1, r5
 800bc2a:	f8db 3000 	ldr.w	r3, [fp]
 800bc2e:	a80f      	add	r0, sp, #60	@ 0x3c
 800bc30:	3701      	adds	r7, #1
 800bc32:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800bc36:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800bc3a:	b2bf      	uxth	r7, r7
 800bc3c:	785b      	ldrb	r3, [r3, #1]
 800bc3e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800bc42:	f001 fa7a 	bl	800d13a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800bc46:	9b03      	ldr	r3, [sp, #12]
 800bc48:	4286      	cmp	r6, r0
 800bc4a:	eba9 0903 	sub.w	r9, r9, r3
 800bc4e:	bfb8      	it	lt
 800bc50:	4606      	movlt	r6, r0
 800bc52:	a80f      	add	r0, sp, #60	@ 0x3c
 800bc54:	fa0f f989 	sxth.w	r9, r9
 800bc58:	b236      	sxth	r6, r6
 800bc5a:	f003 fef2 	bl	800fa42 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800bc5e:	b918      	cbnz	r0, 800bc68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800bc60:	7a2b      	ldrb	r3, [r5, #8]
 800bc62:	444b      	add	r3, r9
 800bc64:	2b00      	cmp	r3, #0
 800bc66:	dcde      	bgt.n	800bc26 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 800bc68:	9b03      	ldr	r3, [sp, #12]
 800bc6a:	4620      	mov	r0, r4
 800bc6c:	9a04      	ldr	r2, [sp, #16]
 800bc6e:	fb13 f707 	smulbb	r7, r3, r7
 800bc72:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800bc74:	f895 9009 	ldrb.w	r9, [r5, #9]
 800bc78:	1aff      	subs	r7, r7, r3
 800bc7a:	b2bf      	uxth	r7, r7
 800bc7c:	b23b      	sxth	r3, r7
 800bc7e:	429a      	cmp	r2, r3
 800bc80:	bfa8      	it	ge
 800bc82:	4657      	movge	r7, sl
 800bc84:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800bc88:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800bc8c:	6823      	ldr	r3, [r4, #0]
 800bc8e:	444f      	add	r7, r9
 800bc90:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800bc92:	bf08      	it	eq
 800bc94:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800bc98:	fa1f f987 	uxth.w	r9, r7
 800bc9c:	bf18      	it	ne
 800bc9e:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800bca2:	4798      	blx	r3
 800bca4:	2801      	cmp	r0, #1
 800bca6:	fa0f f789 	sxth.w	r7, r9
 800bcaa:	b2b3      	uxth	r3, r6
 800bcac:	f000 80e2 	beq.w	800be74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800bcb0:	2802      	cmp	r0, #2
 800bcb2:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 800bcb6:	f000 80e3 	beq.w	800be80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800bcba:	7aea      	ldrb	r2, [r5, #11]
 800bcbc:	b236      	sxth	r6, r6
 800bcbe:	7b2d      	ldrb	r5, [r5, #12]
 800bcc0:	1ab6      	subs	r6, r6, r2
 800bcc2:	442a      	add	r2, r5
 800bcc4:	fa1f fa86 	uxth.w	sl, r6
 800bcc8:	4413      	add	r3, r2
 800bcca:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800bcce:	fa0f fb8a 	sxth.w	fp, sl
 800bcd2:	b29b      	uxth	r3, r3
 800bcd4:	2a02      	cmp	r2, #2
 800bcd6:	b21e      	sxth	r6, r3
 800bcd8:	f000 80d6 	beq.w	800be88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800bcdc:	2a03      	cmp	r2, #3
 800bcde:	f000 80de 	beq.w	800be9e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800bce2:	2a01      	cmp	r2, #1
 800bce4:	f040 80e6 	bne.w	800beb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800bce8:	8925      	ldrh	r5, [r4, #8]
 800bcea:	4633      	mov	r3, r6
 800bcec:	463e      	mov	r6, r7
 800bcee:	eba5 0909 	sub.w	r9, r5, r9
 800bcf2:	461f      	mov	r7, r3
 800bcf4:	465d      	mov	r5, fp
 800bcf6:	fa0f fb89 	sxth.w	fp, r9
 800bcfa:	4b5d      	ldr	r3, [pc, #372]	@ (800be70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800bcfc:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800bcfe:	6818      	ldr	r0, [r3, #0]
 800bd00:	f7f7 fa7a 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 800bd04:	f8a8 b000 	strh.w	fp, [r8]
 800bd08:	f8a8 5002 	strh.w	r5, [r8, #2]
 800bd0c:	f8a8 6004 	strh.w	r6, [r8, #4]
 800bd10:	f8a8 7006 	strh.w	r7, [r8, #6]
 800bd14:	f8c8 0008 	str.w	r0, [r8, #8]
 800bd18:	e738      	b.n	800bb8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800bd1a:	f003 fe6b 	bl	800f9f4 <_ZN8touchgfx12TextProviderC1Ev>
 800bd1e:	682b      	ldr	r3, [r5, #0]
 800bd20:	4628      	mov	r0, r5
 800bd22:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800bd24:	4798      	blx	r3
 800bd26:	682b      	ldr	r3, [r5, #0]
 800bd28:	4607      	mov	r7, r0
 800bd2a:	4628      	mov	r0, r5
 800bd2c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800bd2e:	4798      	blx	r3
 800bd30:	6823      	ldr	r3, [r4, #0]
 800bd32:	4683      	mov	fp, r0
 800bd34:	4620      	mov	r0, r4
 800bd36:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bd38:	4798      	blx	r3
 800bd3a:	6822      	ldr	r2, [r4, #0]
 800bd3c:	9005      	str	r0, [sp, #20]
 800bd3e:	4620      	mov	r0, r4
 800bd40:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800bd44:	4790      	blx	r2
 800bd46:	9b05      	ldr	r3, [sp, #20]
 800bd48:	463a      	mov	r2, r7
 800bd4a:	4649      	mov	r1, r9
 800bd4c:	9001      	str	r0, [sp, #4]
 800bd4e:	a80f      	add	r0, sp, #60	@ 0x3c
 800bd50:	9300      	str	r3, [sp, #0]
 800bd52:	465b      	mov	r3, fp
 800bd54:	f003 febe 	bl	800fad4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800bd58:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800bd5c:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800bd60:	af0f      	add	r7, sp, #60	@ 0x3c
 800bd62:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800bd66:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bd6a:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800bd6c:	bf0a      	itet	eq
 800bd6e:	464a      	moveq	r2, r9
 800bd70:	461a      	movne	r2, r3
 800bd72:	4699      	moveq	r9, r3
 800bd74:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800bd78:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 800bd7c:	1ad2      	subs	r2, r2, r3
 800bd7e:	6833      	ldr	r3, [r6, #0]
 800bd80:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 800bd84:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800bd88:	7859      	ldrb	r1, [r3, #1]
 800bd8a:	2300      	movs	r3, #0
 800bd8c:	9707      	str	r7, [sp, #28]
 800bd8e:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800bd92:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bd96:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800bd9a:	f88d 1020 	strb.w	r1, [sp, #32]
 800bd9e:	9509      	str	r5, [sp, #36]	@ 0x24
 800bda0:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800bda4:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 800bda8:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 800bdac:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800bdb0:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800bdb4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800bdb8:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800bdbc:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800bdc0:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800bdc4:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800bdc8:	b350      	cbz	r0, 800be20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800bdca:	682b      	ldr	r3, [r5, #0]
 800bdcc:	4628      	mov	r0, r5
 800bdce:	695b      	ldr	r3, [r3, #20]
 800bdd0:	4798      	blx	r3
 800bdd2:	4607      	mov	r7, r0
 800bdd4:	b320      	cbz	r0, 800be20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800bdd6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800bdd8:	4639      	mov	r1, r7
 800bdda:	6803      	ldr	r3, [r0, #0]
 800bddc:	68db      	ldr	r3, [r3, #12]
 800bdde:	4798      	blx	r3
 800bde0:	4606      	mov	r6, r0
 800bde2:	b1e8      	cbz	r0, 800be20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800bde4:	7b43      	ldrb	r3, [r0, #13]
 800bde6:	7a82      	ldrb	r2, [r0, #10]
 800bde8:	005b      	lsls	r3, r3, #1
 800bdea:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800bdee:	4313      	orrs	r3, r2
 800bdf0:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800bdf4:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 800bdf8:	2b06      	cmp	r3, #6
 800bdfa:	d111      	bne.n	800be20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800bdfc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800bdfe:	4632      	mov	r2, r6
 800be00:	4639      	mov	r1, r7
 800be02:	6803      	ldr	r3, [r0, #0]
 800be04:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800be06:	4798      	blx	r3
 800be08:	7b73      	ldrb	r3, [r6, #13]
 800be0a:	005b      	lsls	r3, r3, #1
 800be0c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800be10:	7ab3      	ldrb	r3, [r6, #10]
 800be12:	4313      	orrs	r3, r2
 800be14:	4418      	add	r0, r3
 800be16:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800be1a:	4418      	add	r0, r3
 800be1c:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 800be20:	2600      	movs	r6, #0
 800be22:	4637      	mov	r7, r6
 800be24:	a806      	add	r0, sp, #24
 800be26:	3701      	adds	r7, #1
 800be28:	f001 fb7d 	bl	800d526 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800be2c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 800be30:	9b03      	ldr	r3, [sp, #12]
 800be32:	b2bf      	uxth	r7, r7
 800be34:	4286      	cmp	r6, r0
 800be36:	eba9 0903 	sub.w	r9, r9, r3
 800be3a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800be3e:	bfb8      	it	lt
 800be40:	4606      	movlt	r6, r0
 800be42:	fa0f f989 	sxth.w	r9, r9
 800be46:	b236      	sxth	r6, r6
 800be48:	2b00      	cmp	r3, #0
 800be4a:	f43f af0d 	beq.w	800bc68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800be4e:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 800be52:	2b00      	cmp	r3, #0
 800be54:	f47f af08 	bne.w	800bc68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800be58:	7a2b      	ldrb	r3, [r5, #8]
 800be5a:	444b      	add	r3, r9
 800be5c:	2b00      	cmp	r3, #0
 800be5e:	dce1      	bgt.n	800be24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 800be60:	e702      	b.n	800bc68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800be62:	bf00      	nop
 800be64:	20015100 	.word	0x20015100
 800be68:	200150fc 	.word	0x200150fc
 800be6c:	20015104 	.word	0x20015104
 800be70:	20015108 	.word	0x20015108
 800be74:	ebaa 0606 	sub.w	r6, sl, r6
 800be78:	2002      	movs	r0, #2
 800be7a:	fb96 f6f0 	sdiv	r6, r6, r0
 800be7e:	e71c      	b.n	800bcba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800be80:	441e      	add	r6, r3
 800be82:	ebaa 0606 	sub.w	r6, sl, r6
 800be86:	e718      	b.n	800bcba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800be88:	8925      	ldrh	r5, [r4, #8]
 800be8a:	1aed      	subs	r5, r5, r3
 800be8c:	eba5 050a 	sub.w	r5, r5, sl
 800be90:	fa0f fb85 	sxth.w	fp, r5
 800be94:	8965      	ldrh	r5, [r4, #10]
 800be96:	eba5 0509 	sub.w	r5, r5, r9
 800be9a:	b22d      	sxth	r5, r5
 800be9c:	e72d      	b.n	800bcfa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800be9e:	8965      	ldrh	r5, [r4, #10]
 800bea0:	f04f 0b00 	mov.w	fp, #0
 800bea4:	1aed      	subs	r5, r5, r3
 800bea6:	4633      	mov	r3, r6
 800bea8:	463e      	mov	r6, r7
 800beaa:	eba5 050a 	sub.w	r5, r5, sl
 800beae:	461f      	mov	r7, r3
 800beb0:	b22d      	sxth	r5, r5
 800beb2:	e722      	b.n	800bcfa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800beb4:	2500      	movs	r5, #0
 800beb6:	e720      	b.n	800bcfa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

0800beb8 <_ZN8touchgfx8TextAreaD0Ev>:
 800beb8:	b510      	push	{r4, lr}
 800beba:	4604      	mov	r4, r0
 800bebc:	2148      	movs	r1, #72	@ 0x48
 800bebe:	f012 fd88 	bl	801e9d2 <_ZdlPvj>
 800bec2:	4620      	mov	r0, r4
 800bec4:	bd10      	pop	{r4, pc}
	...

0800bec8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800bec8:	b513      	push	{r0, r1, r4, lr}
 800beca:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 800bece:	4604      	mov	r4, r0
 800bed0:	b1fb      	cbz	r3, 800bf12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800bed2:	4b16      	ldr	r3, [pc, #88]	@ (800bf2c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800bed4:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800bed6:	881b      	ldrh	r3, [r3, #0]
 800bed8:	428b      	cmp	r3, r1
 800beda:	d91a      	bls.n	800bf12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800bedc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800bee0:	2b00      	cmp	r3, #0
 800bee2:	dd16      	ble.n	800bf12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800bee4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800bee8:	2b00      	cmp	r3, #0
 800beea:	dd12      	ble.n	800bf12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800beec:	4b10      	ldr	r3, [pc, #64]	@ (800bf30 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800beee:	6818      	ldr	r0, [r3, #0]
 800bef0:	f7f7 f982 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 800bef4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800bef8:	6822      	ldr	r2, [r4, #0]
 800befa:	2b00      	cmp	r3, #0
 800befc:	db06      	blt.n	800bf0c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800befe:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800bf02:	2b00      	cmp	r3, #0
 800bf04:	db02      	blt.n	800bf0c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800bf06:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800bf08:	4298      	cmp	r0, r3
 800bf0a:	d004      	beq.n	800bf16 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800bf0c:	6953      	ldr	r3, [r2, #20]
 800bf0e:	4620      	mov	r0, r4
 800bf10:	4798      	blx	r3
 800bf12:	b002      	add	sp, #8
 800bf14:	bd10      	pop	{r4, pc}
 800bf16:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 800bf1a:	466b      	mov	r3, sp
 800bf1c:	6912      	ldr	r2, [r2, #16]
 800bf1e:	c903      	ldmia	r1, {r0, r1}
 800bf20:	e883 0003 	stmia.w	r3, {r0, r1}
 800bf24:	4619      	mov	r1, r3
 800bf26:	4620      	mov	r0, r4
 800bf28:	4790      	blx	r2
 800bf2a:	e7f2      	b.n	800bf12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800bf2c:	20015100 	.word	0x20015100
 800bf30:	20015108 	.word	0x20015108

0800bf34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800bf34:	4b45      	ldr	r3, [pc, #276]	@ (800c04c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800bf36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf3a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800bf3c:	b08e      	sub	sp, #56	@ 0x38
 800bf3e:	881b      	ldrh	r3, [r3, #0]
 800bf40:	4604      	mov	r4, r0
 800bf42:	4293      	cmp	r3, r2
 800bf44:	d97e      	bls.n	800c044 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800bf46:	6808      	ldr	r0, [r1, #0]
 800bf48:	ab05      	add	r3, sp, #20
 800bf4a:	6849      	ldr	r1, [r1, #4]
 800bf4c:	4d40      	ldr	r5, [pc, #256]	@ (800c050 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800bf4e:	c303      	stmia	r3!, {r0, r1}
 800bf50:	4611      	mov	r1, r2
 800bf52:	6828      	ldr	r0, [r5, #0]
 800bf54:	f7f7 f950 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 800bf58:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800bf5c:	2b00      	cmp	r3, #0
 800bf5e:	db11      	blt.n	800bf84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800bf60:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800bf64:	2b00      	cmp	r3, #0
 800bf66:	db0d      	blt.n	800bf84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800bf68:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800bf6a:	4298      	cmp	r0, r3
 800bf6c:	d10a      	bne.n	800bf84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800bf6e:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 800bf72:	ab09      	add	r3, sp, #36	@ 0x24
 800bf74:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bf78:	e883 0003 	stmia.w	r3, {r0, r1}
 800bf7c:	4619      	mov	r1, r3
 800bf7e:	a805      	add	r0, sp, #20
 800bf80:	f7fe fca4 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 800bf84:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800bf88:	2b00      	cmp	r3, #0
 800bf8a:	dd5b      	ble.n	800c044 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800bf8c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800bf90:	2b00      	cmp	r3, #0
 800bf92:	dd57      	ble.n	800c044 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800bf94:	4f2f      	ldr	r7, [pc, #188]	@ (800c054 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800bf96:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800bf98:	683b      	ldr	r3, [r7, #0]
 800bf9a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800bf9e:	4b2e      	ldr	r3, [pc, #184]	@ (800c058 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800bfa0:	681b      	ldr	r3, [r3, #0]
 800bfa2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800bfa6:	2e00      	cmp	r6, #0
 800bfa8:	d04c      	beq.n	800c044 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800bfaa:	6823      	ldr	r3, [r4, #0]
 800bfac:	4620      	mov	r0, r4
 800bfae:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 800bfb2:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800bfb4:	4798      	blx	r3
 800bfb6:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800bfb8:	683b      	ldr	r3, [r7, #0]
 800bfba:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 800bfbe:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800bfc2:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 800bfc6:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 800bfca:	785b      	ldrb	r3, [r3, #1]
 800bfcc:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 800bfd0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800bfd4:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800bfd6:	9609      	str	r6, [sp, #36]	@ 0x24
 800bfd8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800bfdc:	4b1f      	ldr	r3, [pc, #124]	@ (800c05c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800bfde:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 800bfe2:	681b      	ldr	r3, [r3, #0]
 800bfe4:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 800bfe8:	910b      	str	r1, [sp, #44]	@ 0x2c
 800bfea:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 800bfee:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 800bff2:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 800bff6:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 800bffa:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bffe:	b10a      	cbz	r2, 800c004 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800c000:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 800c002:	b906      	cbnz	r6, 800c006 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800c004:	689e      	ldr	r6, [r3, #8]
 800c006:	af07      	add	r7, sp, #28
 800c008:	4621      	mov	r1, r4
 800c00a:	4638      	mov	r0, r7
 800c00c:	f003 f934 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c010:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800c012:	6828      	ldr	r0, [r5, #0]
 800c014:	f7f7 f8f0 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 800c018:	6823      	ldr	r3, [r4, #0]
 800c01a:	4605      	mov	r5, r0
 800c01c:	4620      	mov	r0, r4
 800c01e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800c020:	4798      	blx	r3
 800c022:	6823      	ldr	r3, [r4, #0]
 800c024:	4680      	mov	r8, r0
 800c026:	4620      	mov	r0, r4
 800c028:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800c02c:	4798      	blx	r3
 800c02e:	ab09      	add	r3, sp, #36	@ 0x24
 800c030:	9501      	str	r5, [sp, #4]
 800c032:	9300      	str	r3, [sp, #0]
 800c034:	ab05      	add	r3, sp, #20
 800c036:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800c03a:	4630      	mov	r0, r6
 800c03c:	e897 0006 	ldmia.w	r7, {r1, r2}
 800c040:	f7f7 f88c 	bl	800315c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c044:	b00e      	add	sp, #56	@ 0x38
 800c046:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c04a:	bf00      	nop
 800c04c:	20015100 	.word	0x20015100
 800c050:	20015108 	.word	0x20015108
 800c054:	200150fc 	.word	0x200150fc
 800c058:	20015104 	.word	0x20015104
 800c05c:	200150ac 	.word	0x200150ac

0800c060 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800c060:	b570      	push	{r4, r5, r6, lr}
 800c062:	6803      	ldr	r3, [r0, #0]
 800c064:	4604      	mov	r4, r0
 800c066:	4615      	mov	r5, r2
 800c068:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c06a:	4798      	blx	r3
 800c06c:	6823      	ldr	r3, [r4, #0]
 800c06e:	4629      	mov	r1, r5
 800c070:	4620      	mov	r0, r4
 800c072:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c074:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c078:	4718      	bx	r3
	...

0800c07c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800c07c:	b538      	push	{r3, r4, r5, lr}
 800c07e:	4b0e      	ldr	r3, [pc, #56]	@ (800c0b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800c080:	4604      	mov	r4, r0
 800c082:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800c084:	881b      	ldrh	r3, [r3, #0]
 800c086:	429a      	cmp	r2, r3
 800c088:	d214      	bcs.n	800c0b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800c08a:	6803      	ldr	r3, [r0, #0]
 800c08c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800c08e:	4798      	blx	r3
 800c090:	6823      	ldr	r3, [r4, #0]
 800c092:	4605      	mov	r5, r0
 800c094:	4620      	mov	r0, r4
 800c096:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800c098:	4798      	blx	r3
 800c09a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800c09e:	b22d      	sxth	r5, r5
 800c0a0:	4601      	mov	r1, r0
 800c0a2:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800c0a6:	bf06      	itte	eq
 800c0a8:	4602      	moveq	r2, r0
 800c0aa:	4629      	moveq	r1, r5
 800c0ac:	462a      	movne	r2, r5
 800c0ae:	4620      	mov	r0, r4
 800c0b0:	f7ff ffd6 	bl	800c060 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800c0b4:	bd38      	pop	{r3, r4, r5, pc}
 800c0b6:	bf00      	nop
 800c0b8:	20015100 	.word	0x20015100

0800c0bc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800c0bc:	b530      	push	{r4, r5, lr}
 800c0be:	888b      	ldrh	r3, [r1, #4]
 800c0c0:	b085      	sub	sp, #20
 800c0c2:	4604      	mov	r4, r0
 800c0c4:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800c0c6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c0ca:	b923      	cbnz	r3, 800c0d6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800c0cc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c0d0:	b90b      	cbnz	r3, 800c0d6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800c0d2:	f7ff ffd3 	bl	800c07c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800c0d6:	6823      	ldr	r3, [r4, #0]
 800c0d8:	466d      	mov	r5, sp
 800c0da:	4621      	mov	r1, r4
 800c0dc:	343c      	adds	r4, #60	@ 0x3c
 800c0de:	4628      	mov	r0, r5
 800c0e0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800c0e4:	4798      	blx	r3
 800c0e6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800c0ea:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800c0ee:	b005      	add	sp, #20
 800c0f0:	bd30      	pop	{r4, r5, pc}

0800c0f2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800c0f2:	2300      	movs	r3, #0
 800c0f4:	8083      	strh	r3, [r0, #4]
 800c0f6:	80c3      	strh	r3, [r0, #6]
 800c0f8:	8003      	strh	r3, [r0, #0]
 800c0fa:	8043      	strh	r3, [r0, #2]
 800c0fc:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800c100:	2bff      	cmp	r3, #255	@ 0xff
 800c102:	bf01      	itttt	eq
 800c104:	890b      	ldrheq	r3, [r1, #8]
 800c106:	8083      	strheq	r3, [r0, #4]
 800c108:	894b      	ldrheq	r3, [r1, #10]
 800c10a:	80c3      	strheq	r3, [r0, #6]
 800c10c:	4770      	bx	lr
	...

0800c110 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800c110:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c112:	4604      	mov	r4, r0
 800c114:	466b      	mov	r3, sp
 800c116:	6808      	ldr	r0, [r1, #0]
 800c118:	6849      	ldr	r1, [r1, #4]
 800c11a:	c303      	stmia	r3!, {r0, r1}
 800c11c:	6823      	ldr	r3, [r4, #0]
 800c11e:	4669      	mov	r1, sp
 800c120:	4620      	mov	r0, r4
 800c122:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c124:	4798      	blx	r3
 800c126:	4b08      	ldr	r3, [pc, #32]	@ (800c148 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800c128:	681b      	ldr	r3, [r3, #0]
 800c12a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c12e:	b10a      	cbz	r2, 800c134 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800c130:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800c132:	b900      	cbnz	r0, 800c136 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800c134:	6898      	ldr	r0, [r3, #8]
 800c136:	6803      	ldr	r3, [r0, #0]
 800c138:	4669      	mov	r1, sp
 800c13a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800c13c:	6a1d      	ldr	r5, [r3, #32]
 800c13e:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800c142:	47a8      	blx	r5
 800c144:	b003      	add	sp, #12
 800c146:	bd30      	pop	{r4, r5, pc}
 800c148:	200150ac 	.word	0x200150ac

0800c14c <_ZN8touchgfx3BoxD1Ev>:
 800c14c:	4770      	bx	lr

0800c14e <_ZN8touchgfx3BoxD0Ev>:
 800c14e:	b510      	push	{r4, lr}
 800c150:	4604      	mov	r4, r0
 800c152:	212c      	movs	r1, #44	@ 0x2c
 800c154:	f012 fc3d 	bl	801e9d2 <_ZdlPvj>
 800c158:	4620      	mov	r0, r4
 800c15a:	bd10      	pop	{r4, pc}

0800c15c <_ZNK8touchgfx3Box17invalidateContentEv>:
 800c15c:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800c160:	b12a      	cbz	r2, 800c16e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c162:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800c166:	b112      	cbz	r2, 800c16e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c168:	6803      	ldr	r3, [r0, #0]
 800c16a:	695b      	ldr	r3, [r3, #20]
 800c16c:	4718      	bx	r3
 800c16e:	4770      	bx	lr

0800c170 <_ZN8touchgfx6ButtonD1Ev>:
 800c170:	4770      	bx	lr

0800c172 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800c172:	b570      	push	{r4, r5, r6, lr}
 800c174:	880b      	ldrh	r3, [r1, #0]
 800c176:	4605      	mov	r5, r0
 800c178:	4604      	mov	r4, r0
 800c17a:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800c17c:	8813      	ldrh	r3, [r2, #0]
 800c17e:	f825 3f30 	strh.w	r3, [r5, #48]!
 800c182:	4628      	mov	r0, r5
 800c184:	f004 ffd4 	bl	8011130 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c188:	4606      	mov	r6, r0
 800c18a:	4628      	mov	r0, r5
 800c18c:	f005 f804 	bl	8011198 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c190:	6823      	ldr	r3, [r4, #0]
 800c192:	4605      	mov	r5, r0
 800c194:	4631      	mov	r1, r6
 800c196:	4620      	mov	r0, r4
 800c198:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c19a:	4798      	blx	r3
 800c19c:	6823      	ldr	r3, [r4, #0]
 800c19e:	4629      	mov	r1, r5
 800c1a0:	4620      	mov	r0, r4
 800c1a2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c1a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c1a8:	4718      	bx	r3

0800c1aa <_ZN8touchgfx6ButtonD0Ev>:
 800c1aa:	b510      	push	{r4, lr}
 800c1ac:	4604      	mov	r4, r0
 800c1ae:	2134      	movs	r1, #52	@ 0x34
 800c1b0:	f012 fc0f 	bl	801e9d2 <_ZdlPvj>
 800c1b4:	4620      	mov	r0, r4
 800c1b6:	bd10      	pop	{r4, pc}

0800c1b8 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800c1b8:	b510      	push	{r4, lr}
 800c1ba:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 800c1be:	4604      	mov	r4, r0
 800c1c0:	2bff      	cmp	r3, #255	@ 0xff
 800c1c2:	d006      	beq.n	800c1d2 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800c1c4:	2300      	movs	r3, #0
 800c1c6:	8003      	strh	r3, [r0, #0]
 800c1c8:	8043      	strh	r3, [r0, #2]
 800c1ca:	8083      	strh	r3, [r0, #4]
 800c1cc:	80c3      	strh	r3, [r0, #6]
 800c1ce:	4620      	mov	r0, r4
 800c1d0:	bd10      	pop	{r4, pc}
 800c1d2:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 800c1d6:	b11b      	cbz	r3, 800c1e0 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800c1d8:	3130      	adds	r1, #48	@ 0x30
 800c1da:	f005 f811 	bl	8011200 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c1de:	e7f6      	b.n	800c1ce <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800c1e0:	312e      	adds	r1, #46	@ 0x2e
 800c1e2:	e7fa      	b.n	800c1da <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800c1e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800c1e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c1e8:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800c1ec:	b08a      	sub	sp, #40	@ 0x28
 800c1ee:	4604      	mov	r4, r0
 800c1f0:	4688      	mov	r8, r1
 800c1f2:	2b00      	cmp	r3, #0
 800c1f4:	d066      	beq.n	800c2c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800c1f6:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800c1f8:	a805      	add	r0, sp, #20
 800c1fa:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c1fe:	f004 ff97 	bl	8011130 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c202:	4607      	mov	r7, r0
 800c204:	a805      	add	r0, sp, #20
 800c206:	f004 ffc7 	bl	8011198 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c20a:	f9b8 6000 	ldrsh.w	r6, [r8]
 800c20e:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800c212:	2300      	movs	r3, #0
 800c214:	4432      	add	r2, r6
 800c216:	9306      	str	r3, [sp, #24]
 800c218:	b292      	uxth	r2, r2
 800c21a:	fa0f fc82 	sxth.w	ip, r2
 800c21e:	459c      	cmp	ip, r3
 800c220:	dd52      	ble.n	800c2c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800c222:	42b7      	cmp	r7, r6
 800c224:	dd50      	ble.n	800c2c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800c226:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800c22a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800c22e:	442b      	add	r3, r5
 800c230:	b29b      	uxth	r3, r3
 800c232:	b219      	sxth	r1, r3
 800c234:	2900      	cmp	r1, #0
 800c236:	dd47      	ble.n	800c2c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800c238:	42a8      	cmp	r0, r5
 800c23a:	dd45      	ble.n	800c2c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800c23c:	4567      	cmp	r7, ip
 800c23e:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800c242:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800c246:	bfb8      	it	lt
 800c248:	b2ba      	uxthlt	r2, r7
 800c24a:	4288      	cmp	r0, r1
 800c24c:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c250:	bfb8      	it	lt
 800c252:	b283      	uxthlt	r3, r0
 800c254:	1b92      	subs	r2, r2, r6
 800c256:	f8ad 501a 	strh.w	r5, [sp, #26]
 800c25a:	1b5b      	subs	r3, r3, r5
 800c25c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c260:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c264:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c268:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800c26c:	429a      	cmp	r2, r3
 800c26e:	d026      	beq.n	800c2be <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800c270:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c274:	2b00      	cmp	r3, #0
 800c276:	dd22      	ble.n	800c2be <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800c278:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c27c:	2b00      	cmp	r3, #0
 800c27e:	dd1e      	ble.n	800c2be <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800c280:	2300      	movs	r3, #0
 800c282:	a908      	add	r1, sp, #32
 800c284:	4620      	mov	r0, r4
 800c286:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800c28a:	6823      	ldr	r3, [r4, #0]
 800c28c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c28e:	4798      	blx	r3
 800c290:	4b0f      	ldr	r3, [pc, #60]	@ (800c2d0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800c292:	681b      	ldr	r3, [r3, #0]
 800c294:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c298:	b10a      	cbz	r2, 800c29e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800c29a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800c29c:	b900      	cbnz	r0, 800c2a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800c29e:	6898      	ldr	r0, [r3, #8]
 800c2a0:	2501      	movs	r5, #1
 800c2a2:	6801      	ldr	r1, [r0, #0]
 800c2a4:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 800c2a8:	9502      	str	r5, [sp, #8]
 800c2aa:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800c2ae:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800c2b2:	9401      	str	r4, [sp, #4]
 800c2b4:	ac06      	add	r4, sp, #24
 800c2b6:	9400      	str	r4, [sp, #0]
 800c2b8:	688c      	ldr	r4, [r1, #8]
 800c2ba:	a905      	add	r1, sp, #20
 800c2bc:	47a0      	blx	r4
 800c2be:	b00a      	add	sp, #40	@ 0x28
 800c2c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c2c4:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 800c2c6:	e797      	b.n	800c1f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800c2c8:	2300      	movs	r3, #0
 800c2ca:	9307      	str	r3, [sp, #28]
 800c2cc:	e7ca      	b.n	800c264 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800c2ce:	bf00      	nop
 800c2d0:	200150ac 	.word	0x200150ac

0800c2d4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800c2d4:	4b30      	ldr	r3, [pc, #192]	@ (800c398 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800c2d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c2da:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800c2dc:	b08d      	sub	sp, #52	@ 0x34
 800c2de:	881b      	ldrh	r3, [r3, #0]
 800c2e0:	4604      	mov	r4, r0
 800c2e2:	460f      	mov	r7, r1
 800c2e4:	4293      	cmp	r3, r2
 800c2e6:	d954      	bls.n	800c392 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800c2e8:	4b2c      	ldr	r3, [pc, #176]	@ (800c39c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800c2ea:	6819      	ldr	r1, [r3, #0]
 800c2ec:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800c2f0:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800c2f4:	4a2a      	ldr	r2, [pc, #168]	@ (800c3a0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800c2f6:	6812      	ldr	r2, [r2, #0]
 800c2f8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800c2fc:	2900      	cmp	r1, #0
 800c2fe:	d048      	beq.n	800c392 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800c300:	785a      	ldrb	r2, [r3, #1]
 800c302:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800c306:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800c30a:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800c30e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800c312:	4b24      	ldr	r3, [pc, #144]	@ (800c3a4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800c314:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800c318:	681a      	ldr	r2, [r3, #0]
 800c31a:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800c31e:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800c322:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800c326:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800c328:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800c32c:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800c330:	9107      	str	r1, [sp, #28]
 800c332:	f88d 8020 	strb.w	r8, [sp, #32]
 800c336:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800c33a:	9609      	str	r6, [sp, #36]	@ 0x24
 800c33c:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800c340:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800c344:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800c348:	b10b      	cbz	r3, 800c34e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800c34a:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800c34c:	b905      	cbnz	r5, 800c350 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800c34e:	6895      	ldr	r5, [r2, #8]
 800c350:	ae05      	add	r6, sp, #20
 800c352:	4621      	mov	r1, r4
 800c354:	4630      	mov	r0, r6
 800c356:	f002 ff8f 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c35a:	4b13      	ldr	r3, [pc, #76]	@ (800c3a8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800c35c:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800c35e:	6818      	ldr	r0, [r3, #0]
 800c360:	f7f6 ff4a 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 800c364:	6823      	ldr	r3, [r4, #0]
 800c366:	4680      	mov	r8, r0
 800c368:	4620      	mov	r0, r4
 800c36a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800c36c:	4798      	blx	r3
 800c36e:	6823      	ldr	r3, [r4, #0]
 800c370:	4681      	mov	r9, r0
 800c372:	4620      	mov	r0, r4
 800c374:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800c378:	4798      	blx	r3
 800c37a:	ab07      	add	r3, sp, #28
 800c37c:	f8cd 8004 	str.w	r8, [sp, #4]
 800c380:	9300      	str	r3, [sp, #0]
 800c382:	463b      	mov	r3, r7
 800c384:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800c388:	4628      	mov	r0, r5
 800c38a:	e896 0006 	ldmia.w	r6, {r1, r2}
 800c38e:	f7f6 fee5 	bl	800315c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c392:	b00d      	add	sp, #52	@ 0x34
 800c394:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c398:	20015100 	.word	0x20015100
 800c39c:	200150fc 	.word	0x200150fc
 800c3a0:	20015104 	.word	0x20015104
 800c3a4:	200150ac 	.word	0x200150ac
 800c3a8:	20015108 	.word	0x20015108

0800c3ac <_ZN8touchgfx5ImageD1Ev>:
 800c3ac:	4770      	bx	lr

0800c3ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800c3ae:	b570      	push	{r4, r5, r6, lr}
 800c3b0:	880b      	ldrh	r3, [r1, #0]
 800c3b2:	460d      	mov	r5, r1
 800c3b4:	4604      	mov	r4, r0
 800c3b6:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800c3b8:	4608      	mov	r0, r1
 800c3ba:	f004 feb9 	bl	8011130 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c3be:	4606      	mov	r6, r0
 800c3c0:	4628      	mov	r0, r5
 800c3c2:	f004 fee9 	bl	8011198 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c3c6:	6823      	ldr	r3, [r4, #0]
 800c3c8:	4605      	mov	r5, r0
 800c3ca:	4631      	mov	r1, r6
 800c3cc:	4620      	mov	r0, r4
 800c3ce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c3d0:	4798      	blx	r3
 800c3d2:	6823      	ldr	r3, [r4, #0]
 800c3d4:	4629      	mov	r1, r5
 800c3d6:	4620      	mov	r0, r4
 800c3d8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c3da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c3de:	4718      	bx	r3

0800c3e0 <_ZN8touchgfx5ImageD0Ev>:
 800c3e0:	b510      	push	{r4, lr}
 800c3e2:	4604      	mov	r4, r0
 800c3e4:	212c      	movs	r1, #44	@ 0x2c
 800c3e6:	f012 faf4 	bl	801e9d2 <_ZdlPvj>
 800c3ea:	4620      	mov	r0, r4
 800c3ec:	bd10      	pop	{r4, pc}

0800c3ee <_ZNK8touchgfx5Image12getSolidRectEv>:
 800c3ee:	b510      	push	{r4, lr}
 800c3f0:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800c3f4:	4604      	mov	r4, r0
 800c3f6:	2bff      	cmp	r3, #255	@ 0xff
 800c3f8:	d006      	beq.n	800c408 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800c3fa:	2300      	movs	r3, #0
 800c3fc:	8003      	strh	r3, [r0, #0]
 800c3fe:	8043      	strh	r3, [r0, #2]
 800c400:	8083      	strh	r3, [r0, #4]
 800c402:	80c3      	strh	r3, [r0, #6]
 800c404:	4620      	mov	r0, r4
 800c406:	bd10      	pop	{r4, pc}
 800c408:	3126      	adds	r1, #38	@ 0x26
 800c40a:	f004 fef9 	bl	8011200 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c40e:	e7f9      	b.n	800c404 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800c410 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800c410:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800c414:	b12a      	cbz	r2, 800c422 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c416:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800c41a:	b112      	cbz	r2, 800c422 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c41c:	6803      	ldr	r3, [r0, #0]
 800c41e:	695b      	ldr	r3, [r3, #20]
 800c420:	4718      	bx	r3
 800c422:	4770      	bx	lr

0800c424 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800c424:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c428:	4604      	mov	r4, r0
 800c42a:	b088      	sub	sp, #32
 800c42c:	2500      	movs	r5, #0
 800c42e:	460f      	mov	r7, r1
 800c430:	f854 3b26 	ldr.w	r3, [r4], #38
 800c434:	a904      	add	r1, sp, #16
 800c436:	4606      	mov	r6, r0
 800c438:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c43a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800c43e:	4798      	blx	r3
 800c440:	4620      	mov	r0, r4
 800c442:	f004 fe75 	bl	8011130 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c446:	4680      	mov	r8, r0
 800c448:	4620      	mov	r0, r4
 800c44a:	f004 fea5 	bl	8011198 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c44e:	9506      	str	r5, [sp, #24]
 800c450:	ad06      	add	r5, sp, #24
 800c452:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c456:	4639      	mov	r1, r7
 800c458:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c45c:	4628      	mov	r0, r5
 800c45e:	f7fe fa35 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 800c462:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c466:	2b00      	cmp	r3, #0
 800c468:	dd19      	ble.n	800c49e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c46a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c46e:	2b00      	cmp	r3, #0
 800c470:	dd15      	ble.n	800c49e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c472:	4b0c      	ldr	r3, [pc, #48]	@ (800c4a4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800c474:	681b      	ldr	r3, [r3, #0]
 800c476:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c47a:	b10a      	cbz	r2, 800c480 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800c47c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800c47e:	b900      	cbnz	r0, 800c482 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800c480:	6898      	ldr	r0, [r3, #8]
 800c482:	2701      	movs	r7, #1
 800c484:	6801      	ldr	r1, [r0, #0]
 800c486:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800c48a:	9702      	str	r7, [sp, #8]
 800c48c:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800c490:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800c494:	e9cd 5600 	strd	r5, r6, [sp]
 800c498:	688d      	ldr	r5, [r1, #8]
 800c49a:	4621      	mov	r1, r4
 800c49c:	47a8      	blx	r5
 800c49e:	b008      	add	sp, #32
 800c4a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c4a4:	200150ac 	.word	0x200150ac

0800c4a8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800c4a8:	4770      	bx	lr

0800c4aa <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800c4aa:	b510      	push	{r4, lr}
 800c4ac:	4604      	mov	r4, r0
 800c4ae:	2148      	movs	r1, #72	@ 0x48
 800c4b0:	f012 fa8f 	bl	801e9d2 <_ZdlPvj>
 800c4b4:	4620      	mov	r0, r4
 800c4b6:	bd10      	pop	{r4, pc}

0800c4b8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800c4b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c4bc:	b08d      	sub	sp, #52	@ 0x34
 800c4be:	4604      	mov	r4, r0
 800c4c0:	460f      	mov	r7, r1
 800c4c2:	f7ff fe8f 	bl	800c1e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800c4c6:	4a55      	ldr	r2, [pc, #340]	@ (800c61c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800c4c8:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800c4ca:	8812      	ldrh	r2, [r2, #0]
 800c4cc:	429a      	cmp	r2, r3
 800c4ce:	f240 8082 	bls.w	800c5d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800c4d2:	4d53      	ldr	r5, [pc, #332]	@ (800c620 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800c4d4:	682a      	ldr	r2, [r5, #0]
 800c4d6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c4da:	4b52      	ldr	r3, [pc, #328]	@ (800c624 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800c4dc:	681b      	ldr	r3, [r3, #0]
 800c4de:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800c4e2:	2200      	movs	r2, #0
 800c4e4:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
 800c4e8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 800c4ec:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 800c4f0:	2a03      	cmp	r2, #3
 800c4f2:	d811      	bhi.n	800c518 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800c4f4:	e8df f002 	tbb	[pc, r2]
 800c4f8:	89727902 	.word	0x89727902
 800c4fc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800c500:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c504:	1ad2      	subs	r2, r2, r3
 800c506:	2002      	movs	r0, #2
 800c508:	f8ad 1010 	strh.w	r1, [sp, #16]
 800c50c:	f8ad 3012 	strh.w	r3, [sp, #18]
 800c510:	fb92 f2f0 	sdiv	r2, r2, r0
 800c514:	f8ad 200e 	strh.w	r2, [sp, #14]
 800c518:	f10d 080c 	add.w	r8, sp, #12
 800c51c:	f10d 0914 	add.w	r9, sp, #20
 800c520:	e898 0003 	ldmia.w	r8, {r0, r1}
 800c524:	e889 0003 	stmia.w	r9, {r0, r1}
 800c528:	4639      	mov	r1, r7
 800c52a:	4648      	mov	r0, r9
 800c52c:	f7fe f9ce 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 800c530:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800c534:	2b00      	cmp	r3, #0
 800c536:	dd4e      	ble.n	800c5d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800c538:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800c53c:	2b00      	cmp	r3, #0
 800c53e:	dd4a      	ble.n	800c5d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800c540:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800c544:	4641      	mov	r1, r8
 800c546:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c54a:	4620      	mov	r0, r4
 800c54c:	1a9b      	subs	r3, r3, r2
 800c54e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800c552:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c556:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800c55a:	1a9b      	subs	r3, r3, r2
 800c55c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c560:	6823      	ldr	r3, [r4, #0]
 800c562:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c564:	4798      	blx	r3
 800c566:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800c56a:	2b00      	cmp	r3, #0
 800c56c:	d053      	beq.n	800c616 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 800c56e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800c570:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
 800c572:	682b      	ldr	r3, [r5, #0]
 800c574:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
 800c578:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800c57c:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
 800c580:	785b      	ldrb	r3, [r3, #1]
 800c582:	9209      	str	r2, [sp, #36]	@ 0x24
 800c584:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800c588:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c58c:	9607      	str	r6, [sp, #28]
 800c58e:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 800c592:	2300      	movs	r3, #0
 800c594:	f88d 5020 	strb.w	r5, [sp, #32]
 800c598:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 800c59c:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
 800c5a0:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800c5a4:	4b20      	ldr	r3, [pc, #128]	@ (800c628 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800c5a6:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800c5aa:	681b      	ldr	r3, [r3, #0]
 800c5ac:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800c5b0:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c5b4:	b10a      	cbz	r2, 800c5ba <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800c5b6:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 800c5b8:	b904      	cbnz	r4, 800c5bc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 800c5ba:	689c      	ldr	r4, [r3, #8]
 800c5bc:	4b1b      	ldr	r3, [pc, #108]	@ (800c62c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800c5be:	6818      	ldr	r0, [r3, #0]
 800c5c0:	f7f6 fe1a 	bl	80031f8 <_ZNK8touchgfx5Texts7getTextEt>
 800c5c4:	ab07      	add	r3, sp, #28
 800c5c6:	9001      	str	r0, [sp, #4]
 800c5c8:	4620      	mov	r0, r4
 800c5ca:	9300      	str	r3, [sp, #0]
 800c5cc:	464b      	mov	r3, r9
 800c5ce:	e898 0006 	ldmia.w	r8, {r1, r2}
 800c5d2:	f7f6 fdc3 	bl	800315c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c5d6:	b00d      	add	sp, #52	@ 0x34
 800c5d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c5dc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800c5e0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c5e4:	1ad2      	subs	r2, r2, r3
 800c5e6:	3201      	adds	r2, #1
 800c5e8:	e78d      	b.n	800c506 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 800c5ea:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c5ee:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800c5f2:	1ad2      	subs	r2, r2, r3
 800c5f4:	3201      	adds	r2, #1
 800c5f6:	2002      	movs	r0, #2
 800c5f8:	f8ad 3010 	strh.w	r3, [sp, #16]
 800c5fc:	f8ad 1012 	strh.w	r1, [sp, #18]
 800c600:	fb92 f2f0 	sdiv	r2, r2, r0
 800c604:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c608:	e786      	b.n	800c518 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800c60a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c60e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800c612:	1ad2      	subs	r2, r2, r3
 800c614:	e7ef      	b.n	800c5f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 800c616:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 800c618:	e7aa      	b.n	800c570 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 800c61a:	bf00      	nop
 800c61c:	20015100 	.word	0x20015100
 800c620:	200150fc 	.word	0x200150fc
 800c624:	20015104 	.word	0x20015104
 800c628:	200150ac 	.word	0x200150ac
 800c62c:	20015108 	.word	0x20015108

0800c630 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800c630:	2101      	movs	r1, #1
 800c632:	2200      	movs	r2, #0
 800c634:	b510      	push	{r4, lr}
 800c636:	4c13      	ldr	r4, [pc, #76]	@ (800c684 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800c638:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800c63c:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800c640:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800c644:	6004      	str	r4, [r0, #0]
 800c646:	4c10      	ldr	r4, [pc, #64]	@ (800c688 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800c648:	8082      	strh	r2, [r0, #4]
 800c64a:	80c2      	strh	r2, [r0, #6]
 800c64c:	8102      	strh	r2, [r0, #8]
 800c64e:	8142      	strh	r2, [r0, #10]
 800c650:	8182      	strh	r2, [r0, #12]
 800c652:	81c2      	strh	r2, [r0, #14]
 800c654:	8202      	strh	r2, [r0, #16]
 800c656:	8242      	strh	r2, [r0, #18]
 800c658:	61c2      	str	r2, [r0, #28]
 800c65a:	8402      	strh	r2, [r0, #32]
 800c65c:	8442      	strh	r2, [r0, #34]	@ 0x22
 800c65e:	6282      	str	r2, [r0, #40]	@ 0x28
 800c660:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 800c664:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 800c666:	8601      	strh	r1, [r0, #48]	@ 0x30
 800c668:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 800c66c:	6344      	str	r4, [r0, #52]	@ 0x34
 800c66e:	8701      	strh	r1, [r0, #56]	@ 0x38
 800c670:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
 800c674:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
 800c678:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c67c:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 800c680:	bd10      	pop	{r4, pc}
 800c682:	bf00      	nop
 800c684:	080215b0 	.word	0x080215b0
 800c688:	08020374 	.word	0x08020374

0800c68c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800c68c:	b510      	push	{r4, lr}
 800c68e:	6803      	ldr	r3, [r0, #0]
 800c690:	460c      	mov	r4, r1
 800c692:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c694:	4798      	blx	r3
 800c696:	1b03      	subs	r3, r0, r4
 800c698:	4258      	negs	r0, r3
 800c69a:	4158      	adcs	r0, r3
 800c69c:	bd10      	pop	{r4, pc}
	...

0800c6a0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800c6a0:	4b01      	ldr	r3, [pc, #4]	@ (800c6a8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800c6a2:	6019      	str	r1, [r3, #0]
 800c6a4:	4770      	bx	lr
 800c6a6:	bf00      	nop
 800c6a8:	200150b4 	.word	0x200150b4

0800c6ac <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c6ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6b0:	4696      	mov	lr, r2
 800c6b2:	b097      	sub	sp, #92	@ 0x5c
 800c6b4:	4605      	mov	r5, r0
 800c6b6:	4614      	mov	r4, r2
 800c6b8:	460e      	mov	r6, r1
 800c6ba:	461f      	mov	r7, r3
 800c6bc:	f10d 0c1c 	add.w	ip, sp, #28
 800c6c0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800c6c4:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800c6c8:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800c6cc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c6d0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c6d4:	f8de 3000 	ldr.w	r3, [lr]
 800c6d8:	f104 0e14 	add.w	lr, r4, #20
 800c6dc:	f8cc 3000 	str.w	r3, [ip]
 800c6e0:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c6e4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c6e8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c6ec:	f8de 3000 	ldr.w	r3, [lr]
 800c6f0:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c6f4:	f8cc 3000 	str.w	r3, [ip]
 800c6f8:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c6fc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c700:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c704:	f8de 3000 	ldr.w	r3, [lr]
 800c708:	4631      	mov	r1, r6
 800c70a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c70c:	4628      	mov	r0, r5
 800c70e:	f8cc 3000 	str.w	r3, [ip]
 800c712:	682b      	ldr	r3, [r5, #0]
 800c714:	9201      	str	r2, [sp, #4]
 800c716:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c718:	f8cd 8008 	str.w	r8, [sp, #8]
 800c71c:	9200      	str	r2, [sp, #0]
 800c71e:	aa07      	add	r2, sp, #28
 800c720:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c724:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800c728:	463b      	mov	r3, r7
 800c72a:	47d8      	blx	fp
 800c72c:	46a6      	mov	lr, r4
 800c72e:	f10d 0c1c 	add.w	ip, sp, #28
 800c732:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c736:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c73a:	f8de 3000 	ldr.w	r3, [lr]
 800c73e:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c742:	343c      	adds	r4, #60	@ 0x3c
 800c744:	f8cc 3000 	str.w	r3, [ip]
 800c748:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c74c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c750:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c754:	f8de 3000 	ldr.w	r3, [lr]
 800c758:	f8cc 3000 	str.w	r3, [ip]
 800c75c:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c760:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c762:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c766:	6823      	ldr	r3, [r4, #0]
 800c768:	4631      	mov	r1, r6
 800c76a:	4628      	mov	r0, r5
 800c76c:	f8cc 3000 	str.w	r3, [ip]
 800c770:	682b      	ldr	r3, [r5, #0]
 800c772:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c776:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c778:	f8cd 8008 	str.w	r8, [sp, #8]
 800c77c:	9201      	str	r2, [sp, #4]
 800c77e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c780:	9200      	str	r2, [sp, #0]
 800c782:	aa07      	add	r2, sp, #28
 800c784:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800c786:	463b      	mov	r3, r7
 800c788:	47a0      	blx	r4
 800c78a:	b017      	add	sp, #92	@ 0x5c
 800c78c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c790 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c794:	b08d      	sub	sp, #52	@ 0x34
 800c796:	4688      	mov	r8, r1
 800c798:	f8d3 c000 	ldr.w	ip, [r3]
 800c79c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800c79e:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800c7a2:	680f      	ldr	r7, [r1, #0]
 800c7a4:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800c7a8:	eba7 070c 	sub.w	r7, r7, ip
 800c7ac:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800c7b0:	edd3 6a07 	vldr	s13, [r3, #28]
 800c7b4:	42bc      	cmp	r4, r7
 800c7b6:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800c7b8:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800c7bc:	bfa8      	it	ge
 800c7be:	463c      	movge	r4, r7
 800c7c0:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c7c4:	f9ba 1000 	ldrsh.w	r1, [sl]
 800c7c8:	ee07 4a90 	vmov	s15, r4
 800c7cc:	eb09 0e0c 	add.w	lr, r9, ip
 800c7d0:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800c7d4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c7d8:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800c7dc:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800c7e0:	4571      	cmp	r1, lr
 800c7e2:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c7e6:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c7ea:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c7ee:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800c7f2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c7f6:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c7fa:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c7fe:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c802:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c806:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c80a:	f340 808c 	ble.w	800c926 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800c80e:	eba1 060e 	sub.w	r6, r1, lr
 800c812:	fb96 f5f4 	sdiv	r5, r6, r4
 800c816:	ee07 5a10 	vmov	s14, r5
 800c81a:	2d00      	cmp	r5, #0
 800c81c:	fb04 6615 	mls	r6, r4, r5, r6
 800c820:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c824:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c828:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c82c:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c830:	dd12      	ble.n	800c858 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800c832:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c836:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c83a:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c83e:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c842:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c846:	bf14      	ite	ne
 800c848:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c84c:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c850:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c854:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c858:	fb05 f204 	mul.w	r2, r5, r4
 800c85c:	1abf      	subs	r7, r7, r2
 800c85e:	4494      	add	ip, r2
 800c860:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800c864:	4411      	add	r1, r2
 800c866:	eb09 020c 	add.w	r2, r9, ip
 800c86a:	b209      	sxth	r1, r1
 800c86c:	443a      	add	r2, r7
 800c86e:	428a      	cmp	r2, r1
 800c870:	bfc4      	itt	gt
 800c872:	eba1 0209 	subgt.w	r2, r1, r9
 800c876:	eba2 070c 	subgt.w	r7, r2, ip
 800c87a:	2f00      	cmp	r7, #0
 800c87c:	dd50      	ble.n	800c920 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800c87e:	fb97 f1f4 	sdiv	r1, r7, r4
 800c882:	fb04 7211 	mls	r2, r4, r1, r7
 800c886:	b90a      	cbnz	r2, 800c88c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800c888:	3901      	subs	r1, #1
 800c88a:	4622      	mov	r2, r4
 800c88c:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c890:	6840      	ldr	r0, [r0, #4]
 800c892:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800c896:	44b6      	add	lr, r6
 800c898:	f8d0 a000 	ldr.w	sl, [r0]
 800c89c:	2900      	cmp	r1, #0
 800c89e:	bfcc      	ite	gt
 800c8a0:	46a1      	movgt	r9, r4
 800c8a2:	4691      	movle	r9, r2
 800c8a4:	900b      	str	r0, [sp, #44]	@ 0x2c
 800c8a6:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800c8a8:	fb04 e505 	mla	r5, r4, r5, lr
 800c8ac:	eef0 6a42 	vmov.f32	s13, s4
 800c8b0:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800c8b4:	9008      	str	r0, [sp, #32]
 800c8b6:	eeb0 7a61 	vmov.f32	s14, s3
 800c8ba:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800c8bc:	695b      	ldr	r3, [r3, #20]
 800c8be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c8c2:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800c8c6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c8ca:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800c8cc:	445b      	add	r3, fp
 800c8ce:	9307      	str	r3, [sp, #28]
 800c8d0:	ee16 3a90 	vmov	r3, s13
 800c8d4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800c8d8:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c8dc:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c8e0:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c8e4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c8e8:	ee17 7a90 	vmov	r7, s15
 800c8ec:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c8f0:	fb97 f7f4 	sdiv	r7, r7, r4
 800c8f4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c8f8:	ee17 ca90 	vmov	ip, s15
 800c8fc:	fb9c fcf4 	sdiv	ip, ip, r4
 800c900:	fb0c 3306 	mla	r3, ip, r6, r3
 800c904:	9302      	str	r3, [sp, #8]
 800c906:	ee17 3a10 	vmov	r3, s14
 800c90a:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800c90e:	fb07 3706 	mla	r7, r7, r6, r3
 800c912:	eba9 0306 	sub.w	r3, r9, r6
 800c916:	e9cd 4700 	strd	r4, r7, [sp]
 800c91a:	f8da 4008 	ldr.w	r4, [sl, #8]
 800c91e:	47a0      	blx	r4
 800c920:	b00d      	add	sp, #52	@ 0x34
 800c922:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c926:	2500      	movs	r5, #0
 800c928:	462e      	mov	r6, r5
 800c92a:	e799      	b.n	800c860 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800c92c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c92c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c930:	b0db      	sub	sp, #364	@ 0x16c
 800c932:	461d      	mov	r5, r3
 800c934:	4614      	mov	r4, r2
 800c936:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800c93a:	910f      	str	r1, [sp, #60]	@ 0x3c
 800c93c:	4629      	mov	r1, r5
 800c93e:	930a      	str	r3, [sp, #40]	@ 0x28
 800c940:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800c944:	9009      	str	r0, [sp, #36]	@ 0x24
 800c946:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c948:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800c94c:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800c950:	9310      	str	r3, [sp, #64]	@ 0x40
 800c952:	6803      	ldr	r3, [r0, #0]
 800c954:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800c956:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800c95a:	47b8      	blx	r7
 800c95c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c95e:	6058      	str	r0, [r3, #4]
 800c960:	2800      	cmp	r0, #0
 800c962:	f000 83a1 	beq.w	800d0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c966:	682b      	ldr	r3, [r5, #0]
 800c968:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800c96c:	ed94 7a02 	vldr	s14, [r4, #8]
 800c970:	9314      	str	r3, [sp, #80]	@ 0x50
 800c972:	686b      	ldr	r3, [r5, #4]
 800c974:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c978:	9315      	str	r3, [sp, #84]	@ 0x54
 800c97a:	4bc1      	ldr	r3, [pc, #772]	@ (800cc80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800c97c:	7819      	ldrb	r1, [r3, #0]
 800c97e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800c982:	2900      	cmp	r1, #0
 800c984:	bf16      	itet	ne
 800c986:	4619      	movne	r1, r3
 800c988:	4611      	moveq	r1, r2
 800c98a:	4613      	movne	r3, r2
 800c98c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c990:	9116      	str	r1, [sp, #88]	@ 0x58
 800c992:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800c996:	f240 8387 	bls.w	800d0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c99a:	ed94 7a07 	vldr	s14, [r4, #28]
 800c99e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c9a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c9a6:	f240 837f 	bls.w	800d0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9aa:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800c9ae:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c9b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c9b6:	f240 8377 	bls.w	800d0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9ba:	6822      	ldr	r2, [r4, #0]
 800c9bc:	4bb1      	ldr	r3, [pc, #708]	@ (800cc84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800c9be:	429a      	cmp	r2, r3
 800c9c0:	f2c0 8372 	blt.w	800d0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9c4:	49b0      	ldr	r1, [pc, #704]	@ (800cc88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800c9c6:	6963      	ldr	r3, [r4, #20]
 800c9c8:	428a      	cmp	r2, r1
 800c9ca:	f300 836d 	bgt.w	800d0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9ce:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c9d2:	48ae      	ldr	r0, [pc, #696]	@ (800cc8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800c9d4:	33ff      	adds	r3, #255	@ 0xff
 800c9d6:	4283      	cmp	r3, r0
 800c9d8:	f200 8366 	bhi.w	800d0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9dc:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800c9de:	4dac      	ldr	r5, [pc, #688]	@ (800cc90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800c9e0:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c9e4:	33ff      	adds	r3, #255	@ 0xff
 800c9e6:	42ab      	cmp	r3, r5
 800c9e8:	f200 835e 	bhi.w	800d0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9ec:	6862      	ldr	r2, [r4, #4]
 800c9ee:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800c9f2:	33ff      	adds	r3, #255	@ 0xff
 800c9f4:	4283      	cmp	r3, r0
 800c9f6:	f200 8357 	bhi.w	800d0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9fa:	69a1      	ldr	r1, [r4, #24]
 800c9fc:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800ca00:	33ff      	adds	r3, #255	@ 0xff
 800ca02:	4283      	cmp	r3, r0
 800ca04:	f200 8350 	bhi.w	800d0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ca08:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ca0a:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800ca0e:	30ff      	adds	r0, #255	@ 0xff
 800ca10:	42a8      	cmp	r0, r5
 800ca12:	f200 8349 	bhi.w	800d0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ca16:	428a      	cmp	r2, r1
 800ca18:	f280 8110 	bge.w	800cc3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800ca1c:	429a      	cmp	r2, r3
 800ca1e:	f300 8119 	bgt.w	800cc54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800ca22:	4299      	cmp	r1, r3
 800ca24:	f280 811d 	bge.w	800cc62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800ca28:	2502      	movs	r5, #2
 800ca2a:	2701      	movs	r7, #1
 800ca2c:	46a9      	mov	r9, r5
 800ca2e:	46b8      	mov	r8, r7
 800ca30:	f04f 0a00 	mov.w	sl, #0
 800ca34:	4621      	mov	r1, r4
 800ca36:	a849      	add	r0, sp, #292	@ 0x124
 800ca38:	f003 fd26 	bl	8010488 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800ca3c:	4622      	mov	r2, r4
 800ca3e:	4653      	mov	r3, sl
 800ca40:	a949      	add	r1, sp, #292	@ 0x124
 800ca42:	f8cd 9000 	str.w	r9, [sp]
 800ca46:	a819      	add	r0, sp, #100	@ 0x64
 800ca48:	f003 fe4e 	bl	80106e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ca4c:	4622      	mov	r2, r4
 800ca4e:	4653      	mov	r3, sl
 800ca50:	a949      	add	r1, sp, #292	@ 0x124
 800ca52:	f8cd 8000 	str.w	r8, [sp]
 800ca56:	a829      	add	r0, sp, #164	@ 0xa4
 800ca58:	f003 fe46 	bl	80106e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ca5c:	4643      	mov	r3, r8
 800ca5e:	4622      	mov	r2, r4
 800ca60:	a949      	add	r1, sp, #292	@ 0x124
 800ca62:	f8cd 9000 	str.w	r9, [sp]
 800ca66:	a839      	add	r0, sp, #228	@ 0xe4
 800ca68:	f003 fe3e 	bl	80106e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ca6c:	42af      	cmp	r7, r5
 800ca6e:	af12      	add	r7, sp, #72	@ 0x48
 800ca70:	bfb7      	itett	lt
 800ca72:	2300      	movlt	r3, #0
 800ca74:	2301      	movge	r3, #1
 800ca76:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800ca78:	ac19      	addlt	r4, sp, #100	@ 0x64
 800ca7a:	bfb1      	iteee	lt
 800ca7c:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800ca7e:	ad19      	addge	r5, sp, #100	@ 0x64
 800ca80:	930e      	strge	r3, [sp, #56]	@ 0x38
 800ca82:	ac29      	addge	r4, sp, #164	@ 0xa4
 800ca84:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ca86:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ca8a:	e887 0003 	stmia.w	r7, {r0, r1}
 800ca8e:	b928      	cbnz	r0, 800ca9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800ca90:	4b80      	ldr	r3, [pc, #512]	@ (800cc94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800ca92:	6818      	ldr	r0, [r3, #0]
 800ca94:	6803      	ldr	r3, [r0, #0]
 800ca96:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ca98:	4798      	blx	r3
 800ca9a:	6038      	str	r0, [r7, #0]
 800ca9c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ca9e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800caa2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800caa6:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800caa8:	930c      	str	r3, [sp, #48]	@ 0x30
 800caaa:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800caac:	6963      	ldr	r3, [r4, #20]
 800caae:	440b      	add	r3, r1
 800cab0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800cab4:	4408      	add	r0, r1
 800cab6:	b200      	sxth	r0, r0
 800cab8:	4283      	cmp	r3, r0
 800caba:	900d      	str	r0, [sp, #52]	@ 0x34
 800cabc:	f280 80dd 	bge.w	800cc7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800cac0:	428b      	cmp	r3, r1
 800cac2:	da08      	bge.n	800cad6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800cac4:	2a00      	cmp	r2, #0
 800cac6:	dd06      	ble.n	800cad6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800cac8:	1acb      	subs	r3, r1, r3
 800caca:	429a      	cmp	r2, r3
 800cacc:	f2c0 80e4 	blt.w	800cc98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800cad0:	2b00      	cmp	r3, #0
 800cad2:	f300 80e2 	bgt.w	800cc9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800cad6:	6967      	ldr	r7, [r4, #20]
 800cad8:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800cadc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800cade:	443b      	add	r3, r7
 800cae0:	461f      	mov	r7, r3
 800cae2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800cae4:	1bdf      	subs	r7, r3, r7
 800cae6:	4297      	cmp	r7, r2
 800cae8:	bfa8      	it	ge
 800caea:	4617      	movge	r7, r2
 800caec:	2f00      	cmp	r7, #0
 800caee:	f340 8166 	ble.w	800cdbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800caf2:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800caf4:	6829      	ldr	r1, [r5, #0]
 800caf6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cafa:	f9bb 3000 	ldrsh.w	r3, [fp]
 800cafe:	4411      	add	r1, r2
 800cb00:	6820      	ldr	r0, [r4, #0]
 800cb02:	4299      	cmp	r1, r3
 800cb04:	dd1a      	ble.n	800cb3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800cb06:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800cb0a:	4402      	add	r2, r0
 800cb0c:	440b      	add	r3, r1
 800cb0e:	b21b      	sxth	r3, r3
 800cb10:	429a      	cmp	r2, r3
 800cb12:	dc13      	bgt.n	800cb3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800cb14:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800cb16:	a912      	add	r1, sp, #72	@ 0x48
 800cb18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800cb1a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800cb1c:	681b      	ldr	r3, [r3, #0]
 800cb1e:	9206      	str	r2, [sp, #24]
 800cb20:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800cb22:	9500      	str	r5, [sp, #0]
 800cb24:	9205      	str	r2, [sp, #20]
 800cb26:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800cb28:	e9cd b203 	strd	fp, r2, [sp, #12]
 800cb2c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800cb2e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800cb32:	aa49      	add	r2, sp, #292	@ 0x124
 800cb34:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800cb38:	4623      	mov	r3, r4
 800cb3a:	47c8      	blx	r9
 800cb3c:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800cb40:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800cb44:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800cb48:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cb4c:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800cb50:	68a1      	ldr	r1, [r4, #8]
 800cb52:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cb56:	ed94 6a08 	vldr	s12, [r4, #32]
 800cb5a:	edd4 6a07 	vldr	s13, [r4, #28]
 800cb5e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800cb62:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cb66:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800cb6a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800cb6e:	edc4 6a07 	vstr	s13, [r4, #28]
 800cb72:	441a      	add	r2, r3
 800cb74:	6963      	ldr	r3, [r4, #20]
 800cb76:	3301      	adds	r3, #1
 800cb78:	6022      	str	r2, [r4, #0]
 800cb7a:	6163      	str	r3, [r4, #20]
 800cb7c:	69a3      	ldr	r3, [r4, #24]
 800cb7e:	3b01      	subs	r3, #1
 800cb80:	61a3      	str	r3, [r4, #24]
 800cb82:	6923      	ldr	r3, [r4, #16]
 800cb84:	440b      	add	r3, r1
 800cb86:	68e1      	ldr	r1, [r4, #12]
 800cb88:	428b      	cmp	r3, r1
 800cb8a:	6123      	str	r3, [r4, #16]
 800cb8c:	db15      	blt.n	800cbba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800cb8e:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800cb92:	3201      	adds	r2, #1
 800cb94:	1a5b      	subs	r3, r3, r1
 800cb96:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cb9a:	6022      	str	r2, [r4, #0]
 800cb9c:	6123      	str	r3, [r4, #16]
 800cb9e:	edc4 6a07 	vstr	s13, [r4, #28]
 800cba2:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800cba6:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cbaa:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800cbae:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800cbb2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cbb6:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800cbba:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800cbbe:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800cbc2:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800cbc6:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cbca:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800cbce:	68a9      	ldr	r1, [r5, #8]
 800cbd0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cbd4:	ed95 6a08 	vldr	s12, [r5, #32]
 800cbd8:	edd5 6a07 	vldr	s13, [r5, #28]
 800cbdc:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800cbe0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cbe4:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800cbe8:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cbec:	edc5 6a07 	vstr	s13, [r5, #28]
 800cbf0:	441a      	add	r2, r3
 800cbf2:	696b      	ldr	r3, [r5, #20]
 800cbf4:	3301      	adds	r3, #1
 800cbf6:	602a      	str	r2, [r5, #0]
 800cbf8:	616b      	str	r3, [r5, #20]
 800cbfa:	69ab      	ldr	r3, [r5, #24]
 800cbfc:	3b01      	subs	r3, #1
 800cbfe:	61ab      	str	r3, [r5, #24]
 800cc00:	692b      	ldr	r3, [r5, #16]
 800cc02:	440b      	add	r3, r1
 800cc04:	68e9      	ldr	r1, [r5, #12]
 800cc06:	428b      	cmp	r3, r1
 800cc08:	612b      	str	r3, [r5, #16]
 800cc0a:	db15      	blt.n	800cc38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800cc0c:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800cc10:	3201      	adds	r2, #1
 800cc12:	1a5b      	subs	r3, r3, r1
 800cc14:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cc18:	602a      	str	r2, [r5, #0]
 800cc1a:	612b      	str	r3, [r5, #16]
 800cc1c:	edc5 6a07 	vstr	s13, [r5, #28]
 800cc20:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800cc24:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cc28:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800cc2c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800cc30:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cc34:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800cc38:	3f01      	subs	r7, #1
 800cc3a:	e757      	b.n	800caec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800cc3c:	4299      	cmp	r1, r3
 800cc3e:	dc13      	bgt.n	800cc68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800cc40:	429a      	cmp	r2, r3
 800cc42:	da14      	bge.n	800cc6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800cc44:	2502      	movs	r5, #2
 800cc46:	2703      	movs	r7, #3
 800cc48:	f04f 0800 	mov.w	r8, #0
 800cc4c:	46a9      	mov	r9, r5
 800cc4e:	f04f 0a01 	mov.w	sl, #1
 800cc52:	e6ef      	b.n	800ca34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cc54:	2501      	movs	r5, #1
 800cc56:	2700      	movs	r7, #0
 800cc58:	46a9      	mov	r9, r5
 800cc5a:	46b8      	mov	r8, r7
 800cc5c:	f04f 0a02 	mov.w	sl, #2
 800cc60:	e6e8      	b.n	800ca34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cc62:	2501      	movs	r5, #1
 800cc64:	2702      	movs	r7, #2
 800cc66:	e6e1      	b.n	800ca2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800cc68:	2500      	movs	r5, #0
 800cc6a:	2701      	movs	r7, #1
 800cc6c:	e7f4      	b.n	800cc58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800cc6e:	2702      	movs	r7, #2
 800cc70:	2503      	movs	r5, #3
 800cc72:	f04f 0900 	mov.w	r9, #0
 800cc76:	46b8      	mov	r8, r7
 800cc78:	e7e9      	b.n	800cc4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800cc7a:	4613      	mov	r3, r2
 800cc7c:	e728      	b.n	800cad0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800cc7e:	bf00      	nop
 800cc80:	200150a4 	.word	0x200150a4
 800cc84:	fffd8f01 	.word	0xfffd8f01
 800cc88:	00027100 	.word	0x00027100
 800cc8c:	0004e1ff 	.word	0x0004e1ff
 800cc90:	0004e1fe 	.word	0x0004e1fe
 800cc94:	200150ac 	.word	0x200150ac
 800cc98:	4613      	mov	r3, r2
 800cc9a:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800cc9c:	469e      	mov	lr, r3
 800cc9e:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800cca0:	469c      	mov	ip, r3
 800cca2:	9111      	str	r1, [sp, #68]	@ 0x44
 800cca4:	f04f 0900 	mov.w	r9, #0
 800cca8:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800ccac:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800ccb0:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800ccb4:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800ccb8:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800ccbc:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800ccc0:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800ccc4:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800ccc8:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800cccc:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800ccd0:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800ccd4:	f1bc 0f00 	cmp.w	ip, #0
 800ccd8:	d147      	bne.n	800cd6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800ccda:	eb03 0c07 	add.w	ip, r3, r7
 800ccde:	1ad7      	subs	r7, r2, r3
 800cce0:	f1b9 0f00 	cmp.w	r9, #0
 800cce4:	d009      	beq.n	800ccfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800cce6:	9029      	str	r0, [sp, #164]	@ 0xa4
 800cce8:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800ccec:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800ccf0:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800ccf4:	912d      	str	r1, [sp, #180]	@ 0xb4
 800ccf6:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800ccfa:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800ccfc:	f04f 0800 	mov.w	r8, #0
 800cd00:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800cd04:	9111      	str	r1, [sp, #68]	@ 0x44
 800cd06:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800cd0a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800cd0e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800cd12:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800cd16:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800cd1a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800cd1e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800cd22:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800cd26:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800cd2a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800cd2e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800cd32:	f1be 0f00 	cmp.w	lr, #0
 800cd36:	d031      	beq.n	800cd9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800cd38:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800cd3a:	4450      	add	r0, sl
 800cd3c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800cd40:	4431      	add	r1, r6
 800cd42:	ee37 7a04 	vadd.f32	s14, s14, s8
 800cd46:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800cd4a:	4549      	cmp	r1, r9
 800cd4c:	db08      	blt.n	800cd60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800cd4e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800cd52:	3001      	adds	r0, #1
 800cd54:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800cd58:	eba1 0109 	sub.w	r1, r1, r9
 800cd5c:	ee37 7a06 	vadd.f32	s14, s14, s12
 800cd60:	f10e 3eff 	add.w	lr, lr, #4294967295
 800cd64:	f04f 0801 	mov.w	r8, #1
 800cd68:	e7e3      	b.n	800cd32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800cd6a:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800cd6c:	4450      	add	r0, sl
 800cd6e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800cd72:	4431      	add	r1, r6
 800cd74:	ee77 7a84 	vadd.f32	s15, s15, s8
 800cd78:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800cd7c:	4541      	cmp	r1, r8
 800cd7e:	db08      	blt.n	800cd92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800cd80:	ee76 6a85 	vadd.f32	s13, s13, s10
 800cd84:	3001      	adds	r0, #1
 800cd86:	ee37 7a25 	vadd.f32	s14, s14, s11
 800cd8a:	eba1 0108 	sub.w	r1, r1, r8
 800cd8e:	ee77 7a86 	vadd.f32	s15, s15, s12
 800cd92:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cd96:	f04f 0901 	mov.w	r9, #1
 800cd9a:	e79b      	b.n	800ccd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800cd9c:	449c      	add	ip, r3
 800cd9e:	1aff      	subs	r7, r7, r3
 800cda0:	f1b8 0f00 	cmp.w	r8, #0
 800cda4:	d009      	beq.n	800cdba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800cda6:	9019      	str	r0, [sp, #100]	@ 0x64
 800cda8:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800cdac:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800cdb0:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800cdb4:	911d      	str	r1, [sp, #116]	@ 0x74
 800cdb6:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800cdba:	1ad2      	subs	r2, r2, r3
 800cdbc:	e68b      	b.n	800cad6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800cdbe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800cdc0:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800cdc2:	2b00      	cmp	r3, #0
 800cdc4:	f000 80d1 	beq.w	800cf6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800cdc8:	ad19      	add	r5, sp, #100	@ 0x64
 800cdca:	ac39      	add	r4, sp, #228	@ 0xe4
 800cdcc:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800cdce:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800cdd2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800cdd6:	930c      	str	r3, [sp, #48]	@ 0x30
 800cdd8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800cdda:	6963      	ldr	r3, [r4, #20]
 800cddc:	440b      	add	r3, r1
 800cdde:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800cde2:	4408      	add	r0, r1
 800cde4:	b200      	sxth	r0, r0
 800cde6:	4283      	cmp	r3, r0
 800cde8:	900d      	str	r0, [sp, #52]	@ 0x34
 800cdea:	f280 80c1 	bge.w	800cf70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800cdee:	428b      	cmp	r3, r1
 800cdf0:	da08      	bge.n	800ce04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cdf2:	2a00      	cmp	r2, #0
 800cdf4:	dd06      	ble.n	800ce04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cdf6:	1acb      	subs	r3, r1, r3
 800cdf8:	429a      	cmp	r2, r3
 800cdfa:	f2c0 80bb 	blt.w	800cf74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800cdfe:	2b00      	cmp	r3, #0
 800ce00:	f300 80b9 	bgt.w	800cf76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ce04:	6967      	ldr	r7, [r4, #20]
 800ce06:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800ce0a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ce0c:	443b      	add	r3, r7
 800ce0e:	461f      	mov	r7, r3
 800ce10:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ce12:	1bdf      	subs	r7, r3, r7
 800ce14:	4297      	cmp	r7, r2
 800ce16:	bfa8      	it	ge
 800ce18:	4617      	movge	r7, r2
 800ce1a:	2f00      	cmp	r7, #0
 800ce1c:	f340 813c 	ble.w	800d098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ce20:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ce22:	6829      	ldr	r1, [r5, #0]
 800ce24:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ce28:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ce2c:	4411      	add	r1, r2
 800ce2e:	6820      	ldr	r0, [r4, #0]
 800ce30:	4299      	cmp	r1, r3
 800ce32:	dd1a      	ble.n	800ce6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ce34:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ce38:	4402      	add	r2, r0
 800ce3a:	440b      	add	r3, r1
 800ce3c:	b21b      	sxth	r3, r3
 800ce3e:	429a      	cmp	r2, r3
 800ce40:	dc13      	bgt.n	800ce6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ce42:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ce44:	a912      	add	r1, sp, #72	@ 0x48
 800ce46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ce48:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ce4a:	681b      	ldr	r3, [r3, #0]
 800ce4c:	9206      	str	r2, [sp, #24]
 800ce4e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ce50:	9500      	str	r5, [sp, #0]
 800ce52:	9205      	str	r2, [sp, #20]
 800ce54:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ce56:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ce5a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ce5c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ce60:	aa49      	add	r2, sp, #292	@ 0x124
 800ce62:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ce66:	4623      	mov	r3, r4
 800ce68:	47c8      	blx	r9
 800ce6a:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ce6e:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ce72:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ce76:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ce7a:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ce7e:	68a1      	ldr	r1, [r4, #8]
 800ce80:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ce84:	ed94 6a08 	vldr	s12, [r4, #32]
 800ce88:	edd4 6a07 	vldr	s13, [r4, #28]
 800ce8c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ce90:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ce94:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ce98:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ce9c:	edc4 6a07 	vstr	s13, [r4, #28]
 800cea0:	441a      	add	r2, r3
 800cea2:	6963      	ldr	r3, [r4, #20]
 800cea4:	3301      	adds	r3, #1
 800cea6:	6022      	str	r2, [r4, #0]
 800cea8:	6163      	str	r3, [r4, #20]
 800ceaa:	69a3      	ldr	r3, [r4, #24]
 800ceac:	3b01      	subs	r3, #1
 800ceae:	61a3      	str	r3, [r4, #24]
 800ceb0:	6923      	ldr	r3, [r4, #16]
 800ceb2:	440b      	add	r3, r1
 800ceb4:	68e1      	ldr	r1, [r4, #12]
 800ceb6:	428b      	cmp	r3, r1
 800ceb8:	6123      	str	r3, [r4, #16]
 800ceba:	db15      	blt.n	800cee8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800cebc:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800cec0:	3201      	adds	r2, #1
 800cec2:	1a5b      	subs	r3, r3, r1
 800cec4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cec8:	6022      	str	r2, [r4, #0]
 800ceca:	6123      	str	r3, [r4, #16]
 800cecc:	edc4 6a07 	vstr	s13, [r4, #28]
 800ced0:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800ced4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ced8:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800cedc:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800cee0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cee4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800cee8:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800ceec:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800cef0:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800cef4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cef8:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800cefc:	68a9      	ldr	r1, [r5, #8]
 800cefe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cf02:	ed95 6a08 	vldr	s12, [r5, #32]
 800cf06:	edd5 6a07 	vldr	s13, [r5, #28]
 800cf0a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800cf0e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cf12:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800cf16:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cf1a:	edc5 6a07 	vstr	s13, [r5, #28]
 800cf1e:	441a      	add	r2, r3
 800cf20:	696b      	ldr	r3, [r5, #20]
 800cf22:	3301      	adds	r3, #1
 800cf24:	602a      	str	r2, [r5, #0]
 800cf26:	616b      	str	r3, [r5, #20]
 800cf28:	69ab      	ldr	r3, [r5, #24]
 800cf2a:	3b01      	subs	r3, #1
 800cf2c:	61ab      	str	r3, [r5, #24]
 800cf2e:	692b      	ldr	r3, [r5, #16]
 800cf30:	440b      	add	r3, r1
 800cf32:	68e9      	ldr	r1, [r5, #12]
 800cf34:	428b      	cmp	r3, r1
 800cf36:	612b      	str	r3, [r5, #16]
 800cf38:	db15      	blt.n	800cf66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800cf3a:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800cf3e:	3201      	adds	r2, #1
 800cf40:	1a5b      	subs	r3, r3, r1
 800cf42:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cf46:	602a      	str	r2, [r5, #0]
 800cf48:	612b      	str	r3, [r5, #16]
 800cf4a:	edc5 6a07 	vstr	s13, [r5, #28]
 800cf4e:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800cf52:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cf56:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800cf5a:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800cf5e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cf62:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800cf66:	3f01      	subs	r7, #1
 800cf68:	e757      	b.n	800ce1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800cf6a:	ad39      	add	r5, sp, #228	@ 0xe4
 800cf6c:	ac19      	add	r4, sp, #100	@ 0x64
 800cf6e:	e72d      	b.n	800cdcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800cf70:	4613      	mov	r3, r2
 800cf72:	e744      	b.n	800cdfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800cf74:	4613      	mov	r3, r2
 800cf76:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800cf78:	469e      	mov	lr, r3
 800cf7a:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800cf7e:	461f      	mov	r7, r3
 800cf80:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800cf84:	f04f 0900 	mov.w	r9, #0
 800cf88:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800cf8c:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800cf90:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800cf94:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800cf98:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800cf9c:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800cf9e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800cfa2:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800cfa6:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800cfaa:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800cfae:	960e      	str	r6, [sp, #56]	@ 0x38
 800cfb0:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800cfb4:	2f00      	cmp	r7, #0
 800cfb6:	d146      	bne.n	800d046 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800cfb8:	449c      	add	ip, r3
 800cfba:	1ad7      	subs	r7, r2, r3
 800cfbc:	f1b9 0f00 	cmp.w	r9, #0
 800cfc0:	d009      	beq.n	800cfd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800cfc2:	9039      	str	r0, [sp, #228]	@ 0xe4
 800cfc4:	913d      	str	r1, [sp, #244]	@ 0xf4
 800cfc6:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800cfca:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800cfce:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800cfd2:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800cfd6:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800cfd8:	f04f 0800 	mov.w	r8, #0
 800cfdc:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800cfe0:	910e      	str	r1, [sp, #56]	@ 0x38
 800cfe2:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800cfe6:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800cfea:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800cfee:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800cff2:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800cff6:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800cffa:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800cffe:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800d002:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800d006:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800d00a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800d00e:	f1be 0f00 	cmp.w	lr, #0
 800d012:	d030      	beq.n	800d076 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800d014:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800d016:	4450      	add	r0, sl
 800d018:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800d01c:	4431      	add	r1, r6
 800d01e:	ee37 7a04 	vadd.f32	s14, s14, s8
 800d022:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800d026:	4549      	cmp	r1, r9
 800d028:	db08      	blt.n	800d03c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800d02a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800d02e:	3001      	adds	r0, #1
 800d030:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800d034:	eba1 0109 	sub.w	r1, r1, r9
 800d038:	ee37 7a06 	vadd.f32	s14, s14, s12
 800d03c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800d040:	f04f 0801 	mov.w	r8, #1
 800d044:	e7e3      	b.n	800d00e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800d046:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800d048:	4450      	add	r0, sl
 800d04a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800d04e:	4431      	add	r1, r6
 800d050:	ee77 7a84 	vadd.f32	s15, s15, s8
 800d054:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800d058:	4541      	cmp	r1, r8
 800d05a:	db08      	blt.n	800d06e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800d05c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800d060:	3001      	adds	r0, #1
 800d062:	ee37 7a25 	vadd.f32	s14, s14, s11
 800d066:	eba1 0108 	sub.w	r1, r1, r8
 800d06a:	ee77 7a86 	vadd.f32	s15, s15, s12
 800d06e:	3f01      	subs	r7, #1
 800d070:	f04f 0901 	mov.w	r9, #1
 800d074:	e79e      	b.n	800cfb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800d076:	449c      	add	ip, r3
 800d078:	1aff      	subs	r7, r7, r3
 800d07a:	f1b8 0f00 	cmp.w	r8, #0
 800d07e:	d009      	beq.n	800d094 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800d080:	9019      	str	r0, [sp, #100]	@ 0x64
 800d082:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800d086:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800d08a:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800d08e:	911d      	str	r1, [sp, #116]	@ 0x74
 800d090:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800d094:	1ad2      	subs	r2, r2, r3
 800d096:	e6b5      	b.n	800ce04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800d098:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d09a:	681b      	ldr	r3, [r3, #0]
 800d09c:	b923      	cbnz	r3, 800d0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d09e:	4b04      	ldr	r3, [pc, #16]	@ (800d0b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800d0a0:	6818      	ldr	r0, [r3, #0]
 800d0a2:	6803      	ldr	r3, [r0, #0]
 800d0a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d0a6:	4798      	blx	r3
 800d0a8:	b05b      	add	sp, #364	@ 0x16c
 800d0aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d0ae:	bf00      	nop
 800d0b0:	200150ac 	.word	0x200150ac

0800d0b4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800d0b4:	b570      	push	{r4, r5, r6, lr}
 800d0b6:	4604      	mov	r4, r0
 800d0b8:	2500      	movs	r5, #0
 800d0ba:	9805      	ldr	r0, [sp, #20]
 800d0bc:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800d0c0:	6061      	str	r1, [r4, #4]
 800d0c2:	8263      	strh	r3, [r4, #18]
 800d0c4:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800d0c8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d0cc:	8025      	strh	r5, [r4, #0]
 800d0ce:	7221      	strb	r1, [r4, #8]
 800d0d0:	7266      	strb	r6, [r4, #9]
 800d0d2:	60e0      	str	r0, [r4, #12]
 800d0d4:	8222      	strh	r2, [r4, #16]
 800d0d6:	82a3      	strh	r3, [r4, #20]
 800d0d8:	82e5      	strh	r5, [r4, #22]
 800d0da:	8325      	strh	r5, [r4, #24]
 800d0dc:	8365      	strh	r5, [r4, #26]
 800d0de:	83a5      	strh	r5, [r4, #28]
 800d0e0:	83e5      	strh	r5, [r4, #30]
 800d0e2:	8425      	strh	r5, [r4, #32]
 800d0e4:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800d0e8:	b32e      	cbz	r6, 800d136 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800d0ea:	6803      	ldr	r3, [r0, #0]
 800d0ec:	695b      	ldr	r3, [r3, #20]
 800d0ee:	4798      	blx	r3
 800d0f0:	4606      	mov	r6, r0
 800d0f2:	b300      	cbz	r0, 800d136 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800d0f4:	68e0      	ldr	r0, [r4, #12]
 800d0f6:	4631      	mov	r1, r6
 800d0f8:	6803      	ldr	r3, [r0, #0]
 800d0fa:	68db      	ldr	r3, [r3, #12]
 800d0fc:	4798      	blx	r3
 800d0fe:	4605      	mov	r5, r0
 800d100:	b1c8      	cbz	r0, 800d136 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800d102:	7b43      	ldrb	r3, [r0, #13]
 800d104:	7a82      	ldrb	r2, [r0, #10]
 800d106:	005b      	lsls	r3, r3, #1
 800d108:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d10c:	4313      	orrs	r3, r2
 800d10e:	8423      	strh	r3, [r4, #32]
 800d110:	7a63      	ldrb	r3, [r4, #9]
 800d112:	2b06      	cmp	r3, #6
 800d114:	d10f      	bne.n	800d136 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800d116:	68e0      	ldr	r0, [r4, #12]
 800d118:	462a      	mov	r2, r5
 800d11a:	4631      	mov	r1, r6
 800d11c:	6803      	ldr	r3, [r0, #0]
 800d11e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d120:	4798      	blx	r3
 800d122:	7b6b      	ldrb	r3, [r5, #13]
 800d124:	005b      	lsls	r3, r3, #1
 800d126:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800d12a:	7aab      	ldrb	r3, [r5, #10]
 800d12c:	4313      	orrs	r3, r2
 800d12e:	4418      	add	r0, r3
 800d130:	8c23      	ldrh	r3, [r4, #32]
 800d132:	4418      	add	r0, r3
 800d134:	8420      	strh	r0, [r4, #32]
 800d136:	4620      	mov	r0, r4
 800d138:	bd70      	pop	{r4, r5, r6, pc}

0800d13a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800d13a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d13e:	2400      	movs	r4, #0
 800d140:	b085      	sub	sp, #20
 800d142:	4681      	mov	r9, r0
 800d144:	4688      	mov	r8, r1
 800d146:	4692      	mov	sl, r2
 800d148:	469b      	mov	fp, r3
 800d14a:	4627      	mov	r7, r4
 800d14c:	4625      	mov	r5, r4
 800d14e:	4626      	mov	r6, r4
 800d150:	4554      	cmp	r4, sl
 800d152:	da2a      	bge.n	800d1aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d154:	2300      	movs	r3, #0
 800d156:	9303      	str	r3, [sp, #12]
 800d158:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800d15c:	429d      	cmp	r5, r3
 800d15e:	d004      	beq.n	800d16a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800d160:	f242 030b 	movw	r3, #8203	@ 0x200b
 800d164:	429d      	cmp	r5, r3
 800d166:	bf18      	it	ne
 800d168:	462f      	movne	r7, r5
 800d16a:	ab03      	add	r3, sp, #12
 800d16c:	4642      	mov	r2, r8
 800d16e:	4659      	mov	r1, fp
 800d170:	4648      	mov	r0, r9
 800d172:	f002 ff9f 	bl	80100b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d176:	4605      	mov	r5, r0
 800d178:	b1b8      	cbz	r0, 800d1aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d17a:	280a      	cmp	r0, #10
 800d17c:	d015      	beq.n	800d1aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d17e:	9a03      	ldr	r2, [sp, #12]
 800d180:	b18a      	cbz	r2, 800d1a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800d182:	7b50      	ldrb	r0, [r2, #13]
 800d184:	4639      	mov	r1, r7
 800d186:	7a93      	ldrb	r3, [r2, #10]
 800d188:	0040      	lsls	r0, r0, #1
 800d18a:	8895      	ldrh	r5, [r2, #4]
 800d18c:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800d190:	4303      	orrs	r3, r0
 800d192:	4640      	mov	r0, r8
 800d194:	9301      	str	r3, [sp, #4]
 800d196:	f8d8 3000 	ldr.w	r3, [r8]
 800d19a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d19c:	4798      	blx	r3
 800d19e:	9b01      	ldr	r3, [sp, #4]
 800d1a0:	4418      	add	r0, r3
 800d1a2:	4406      	add	r6, r0
 800d1a4:	b2b6      	uxth	r6, r6
 800d1a6:	3401      	adds	r4, #1
 800d1a8:	e7d2      	b.n	800d150 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800d1aa:	4630      	mov	r0, r6
 800d1ac:	b005      	add	sp, #20
 800d1ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d1b2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800d1b2:	2a02      	cmp	r2, #2
 800d1b4:	b530      	push	{r4, r5, lr}
 800d1b6:	d011      	beq.n	800d1dc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800d1b8:	2a03      	cmp	r2, #3
 800d1ba:	d01c      	beq.n	800d1f6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800d1bc:	2a01      	cmp	r2, #1
 800d1be:	d10c      	bne.n	800d1da <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d1c0:	888b      	ldrh	r3, [r1, #4]
 800d1c2:	8801      	ldrh	r1, [r0, #0]
 800d1c4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800d1c8:	1a5b      	subs	r3, r3, r1
 800d1ca:	8844      	ldrh	r4, [r0, #2]
 800d1cc:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d1d0:	1a9b      	subs	r3, r3, r2
 800d1d2:	8004      	strh	r4, [r0, #0]
 800d1d4:	8081      	strh	r1, [r0, #4]
 800d1d6:	8043      	strh	r3, [r0, #2]
 800d1d8:	80c2      	strh	r2, [r0, #6]
 800d1da:	bd30      	pop	{r4, r5, pc}
 800d1dc:	88cb      	ldrh	r3, [r1, #6]
 800d1de:	8842      	ldrh	r2, [r0, #2]
 800d1e0:	1a9b      	subs	r3, r3, r2
 800d1e2:	88c2      	ldrh	r2, [r0, #6]
 800d1e4:	1a9b      	subs	r3, r3, r2
 800d1e6:	888a      	ldrh	r2, [r1, #4]
 800d1e8:	8801      	ldrh	r1, [r0, #0]
 800d1ea:	8043      	strh	r3, [r0, #2]
 800d1ec:	1a52      	subs	r2, r2, r1
 800d1ee:	8881      	ldrh	r1, [r0, #4]
 800d1f0:	1a52      	subs	r2, r2, r1
 800d1f2:	8002      	strh	r2, [r0, #0]
 800d1f4:	e7f1      	b.n	800d1da <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d1f6:	88cb      	ldrh	r3, [r1, #6]
 800d1f8:	8841      	ldrh	r1, [r0, #2]
 800d1fa:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800d1fe:	1a5b      	subs	r3, r3, r1
 800d200:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d204:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d208:	1a9b      	subs	r3, r3, r2
 800d20a:	8045      	strh	r5, [r0, #2]
 800d20c:	8082      	strh	r2, [r0, #4]
 800d20e:	8003      	strh	r3, [r0, #0]
 800d210:	80c4      	strh	r4, [r0, #6]
 800d212:	e7e2      	b.n	800d1da <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800d214 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800d214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d218:	b09f      	sub	sp, #124	@ 0x7c
 800d21a:	920f      	str	r2, [sp, #60]	@ 0x3c
 800d21c:	9312      	str	r3, [sp, #72]	@ 0x48
 800d21e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800d220:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800d222:	8812      	ldrh	r2, [r2, #0]
 800d224:	889b      	ldrh	r3, [r3, #4]
 800d226:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800d228:	4413      	add	r3, r2
 800d22a:	900e      	str	r0, [sp, #56]	@ 0x38
 800d22c:	6828      	ldr	r0, [r5, #0]
 800d22e:	b21b      	sxth	r3, r3
 800d230:	9117      	str	r1, [sp, #92]	@ 0x5c
 800d232:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800d236:	9311      	str	r3, [sp, #68]	@ 0x44
 800d238:	6803      	ldr	r3, [r0, #0]
 800d23a:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800d23e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800d240:	4798      	blx	r3
 800d242:	682b      	ldr	r3, [r5, #0]
 800d244:	9013      	str	r0, [sp, #76]	@ 0x4c
 800d246:	7b1a      	ldrb	r2, [r3, #12]
 800d248:	7adb      	ldrb	r3, [r3, #11]
 800d24a:	9215      	str	r2, [sp, #84]	@ 0x54
 800d24c:	9316      	str	r3, [sp, #88]	@ 0x58
 800d24e:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800d252:	2c00      	cmp	r4, #0
 800d254:	d067      	beq.n	800d326 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800d256:	7c2b      	ldrb	r3, [r5, #16]
 800d258:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800d25a:	2b06      	cmp	r3, #6
 800d25c:	bf14      	ite	ne
 800d25e:	2301      	movne	r3, #1
 800d260:	2302      	moveq	r3, #2
 800d262:	4413      	add	r3, r2
 800d264:	f04f 0900 	mov.w	r9, #0
 800d268:	9310      	str	r3, [sp, #64]	@ 0x40
 800d26a:	464c      	mov	r4, r9
 800d26c:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800d270:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800d274:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800d276:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800d278:	4293      	cmp	r3, r2
 800d27a:	f280 808b 	bge.w	800d394 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800d27e:	2300      	movs	r3, #0
 800d280:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800d284:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800d288:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800d28c:	429c      	cmp	r4, r3
 800d28e:	d006      	beq.n	800d29e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800d290:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d292:	f242 020b 	movw	r2, #8203	@ 0x200b
 800d296:	4294      	cmp	r4, r2
 800d298:	bf18      	it	ne
 800d29a:	4623      	movne	r3, r4
 800d29c:	930c      	str	r3, [sp, #48]	@ 0x30
 800d29e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800d2a0:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800d2a2:	682a      	ldr	r2, [r5, #0]
 800d2a4:	428b      	cmp	r3, r1
 800d2a6:	db40      	blt.n	800d32a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800d2a8:	6813      	ldr	r3, [r2, #0]
 800d2aa:	4610      	mov	r0, r2
 800d2ac:	695b      	ldr	r3, [r3, #20]
 800d2ae:	4798      	blx	r3
 800d2b0:	4604      	mov	r4, r0
 800d2b2:	6828      	ldr	r0, [r5, #0]
 800d2b4:	aa1d      	add	r2, sp, #116	@ 0x74
 800d2b6:	4621      	mov	r1, r4
 800d2b8:	6803      	ldr	r3, [r0, #0]
 800d2ba:	689f      	ldr	r7, [r3, #8]
 800d2bc:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800d2c0:	47b8      	blx	r7
 800d2c2:	901c      	str	r0, [sp, #112]	@ 0x70
 800d2c4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800d2c8:	429c      	cmp	r4, r3
 800d2ca:	f000 80eb 	beq.w	800d4a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d2ce:	f242 030b 	movw	r3, #8203	@ 0x200b
 800d2d2:	429c      	cmp	r4, r3
 800d2d4:	f000 80e6 	beq.w	800d4a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d2d8:	2c00      	cmp	r4, #0
 800d2da:	f000 810d 	beq.w	800d4f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800d2de:	2c0a      	cmp	r4, #10
 800d2e0:	d05e      	beq.n	800d3a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d2e2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800d2e4:	b36a      	cbz	r2, 800d342 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800d2e6:	8894      	ldrh	r4, [r2, #4]
 800d2e8:	f1bb 0f00 	cmp.w	fp, #0
 800d2ec:	d03a      	beq.n	800d364 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800d2ee:	f892 900d 	ldrb.w	r9, [r2, #13]
 800d2f2:	f1bb 0f01 	cmp.w	fp, #1
 800d2f6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800d2fa:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800d2fe:	f892 900a 	ldrb.w	r9, [r2, #10]
 800d302:	ea49 0903 	orr.w	r9, r9, r3
 800d306:	d133      	bne.n	800d370 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800d308:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d30a:	eba6 0609 	sub.w	r6, r6, r9
 800d30e:	2b00      	cmp	r3, #0
 800d310:	d14d      	bne.n	800d3ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800d312:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800d314:	eb09 0306 	add.w	r3, r9, r6
 800d318:	4413      	add	r3, r2
 800d31a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800d31c:	f9b2 2000 	ldrsh.w	r2, [r2]
 800d320:	4293      	cmp	r3, r2
 800d322:	da4e      	bge.n	800d3c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800d324:	e036      	b.n	800d394 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800d326:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800d328:	e79c      	b.n	800d264 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800d32a:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800d32e:	4659      	mov	r1, fp
 800d330:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800d332:	9301      	str	r3, [sp, #4]
 800d334:	ab1d      	add	r3, sp, #116	@ 0x74
 800d336:	9300      	str	r3, [sp, #0]
 800d338:	ab1c      	add	r3, sp, #112	@ 0x70
 800d33a:	f002 ff04 	bl	8010146 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800d33e:	4604      	mov	r4, r0
 800d340:	e7c0      	b.n	800d2c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800d342:	6828      	ldr	r0, [r5, #0]
 800d344:	6803      	ldr	r3, [r0, #0]
 800d346:	691b      	ldr	r3, [r3, #16]
 800d348:	4798      	blx	r3
 800d34a:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800d34e:	4298      	cmp	r0, r3
 800d350:	f000 80a8 	beq.w	800d4a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d354:	f242 030b 	movw	r3, #8203	@ 0x200b
 800d358:	4298      	cmp	r0, r3
 800d35a:	f000 80a3 	beq.w	800d4a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d35e:	f1bb 0f00 	cmp.w	fp, #0
 800d362:	d100      	bne.n	800d366 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800d364:	444e      	add	r6, r9
 800d366:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800d368:	2a00      	cmp	r2, #0
 800d36a:	d1c0      	bne.n	800d2ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800d36c:	4691      	mov	r9, r2
 800d36e:	e099      	b.n	800d4a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d370:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d372:	2b00      	cmp	r3, #0
 800d374:	f000 80c2 	beq.w	800d4fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
 800d378:	f1bb 0f00 	cmp.w	fp, #0
 800d37c:	d117      	bne.n	800d3ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800d37e:	6828      	ldr	r0, [r5, #0]
 800d380:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800d382:	6803      	ldr	r3, [r0, #0]
 800d384:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d386:	4798      	blx	r3
 800d388:	4406      	add	r6, r0
 800d38a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800d38c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800d38e:	1af3      	subs	r3, r6, r3
 800d390:	4293      	cmp	r3, r2
 800d392:	dd16      	ble.n	800d3c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800d394:	2c00      	cmp	r4, #0
 800d396:	f000 80af 	beq.w	800d4f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800d39a:	2c0a      	cmp	r4, #10
 800d39c:	f040 809d 	bne.w	800d4da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800d3a0:	240a      	movs	r4, #10
 800d3a2:	fab4 f084 	clz	r0, r4
 800d3a6:	0940      	lsrs	r0, r0, #5
 800d3a8:	b01f      	add	sp, #124	@ 0x7c
 800d3aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d3ae:	6828      	ldr	r0, [r5, #0]
 800d3b0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800d3b2:	6803      	ldr	r3, [r0, #0]
 800d3b4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d3b6:	4798      	blx	r3
 800d3b8:	f1bb 0f01 	cmp.w	fp, #1
 800d3bc:	eba6 0600 	sub.w	r6, r6, r0
 800d3c0:	d0a7      	beq.n	800d312 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800d3c2:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800d3c4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800d3c6:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800d3ca:	f9b3 8000 	ldrsh.w	r8, [r3]
 800d3ce:	7b43      	ldrb	r3, [r0, #13]
 800d3d0:	4431      	add	r1, r6
 800d3d2:	015b      	lsls	r3, r3, #5
 800d3d4:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800d3d8:	7983      	ldrb	r3, [r0, #6]
 800d3da:	4313      	orrs	r3, r2
 800d3dc:	440b      	add	r3, r1
 800d3de:	4543      	cmp	r3, r8
 800d3e0:	db60      	blt.n	800d4a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d3e2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800d3e4:	4299      	cmp	r1, r3
 800d3e6:	da5d      	bge.n	800d4a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d3e8:	6828      	ldr	r0, [r5, #0]
 800d3ea:	45b0      	cmp	r8, r6
 800d3ec:	6803      	ldr	r3, [r0, #0]
 800d3ee:	bfcc      	ite	gt
 800d3f0:	eba8 0806 	subgt.w	r8, r8, r6
 800d3f4:	f04f 0800 	movle.w	r8, #0
 800d3f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d3fa:	bfc8      	it	gt
 800d3fc:	fa1f f888 	uxthgt.w	r8, r8
 800d400:	4798      	blx	r3
 800d402:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800d404:	7b53      	ldrb	r3, [r2, #13]
 800d406:	00d9      	lsls	r1, r3, #3
 800d408:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800d40c:	7a11      	ldrb	r1, [r2, #8]
 800d40e:	4339      	orrs	r1, r7
 800d410:	065f      	lsls	r7, r3, #25
 800d412:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800d414:	bf48      	it	mi
 800d416:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800d41a:	4407      	add	r7, r0
 800d41c:	bf48      	it	mi
 800d41e:	b209      	sxthmi	r1, r1
 800d420:	1a7f      	subs	r7, r7, r1
 800d422:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800d424:	b2bf      	uxth	r7, r7
 800d426:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800d42a:	fa0f fa87 	sxth.w	sl, r7
 800d42e:	4551      	cmp	r1, sl
 800d430:	dd3c      	ble.n	800d4ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800d432:	011b      	lsls	r3, r3, #4
 800d434:	79d0      	ldrb	r0, [r2, #7]
 800d436:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d43a:	4303      	orrs	r3, r0
 800d43c:	449a      	add	sl, r3
 800d43e:	4551      	cmp	r1, sl
 800d440:	dc30      	bgt.n	800d4a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d442:	1bcf      	subs	r7, r1, r7
 800d444:	468a      	mov	sl, r1
 800d446:	b23f      	sxth	r7, r7
 800d448:	9219      	str	r2, [sp, #100]	@ 0x64
 800d44a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800d44c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800d44e:	6828      	ldr	r0, [r5, #0]
 800d450:	2a00      	cmp	r2, #0
 800d452:	d12d      	bne.n	800d4b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 800d454:	9318      	str	r3, [sp, #96]	@ 0x60
 800d456:	b2bf      	uxth	r7, r7
 800d458:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800d45a:	6819      	ldr	r1, [r3, #0]
 800d45c:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800d45e:	6801      	ldr	r1, [r0, #0]
 800d460:	9314      	str	r3, [sp, #80]	@ 0x50
 800d462:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800d464:	4788      	blx	r1
 800d466:	79a9      	ldrb	r1, [r5, #6]
 800d468:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800d46a:	910b      	str	r1, [sp, #44]	@ 0x2c
 800d46c:	7ba9      	ldrb	r1, [r5, #14]
 800d46e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800d470:	910a      	str	r1, [sp, #40]	@ 0x28
 800d472:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800d476:	9109      	str	r1, [sp, #36]	@ 0x24
 800d478:	68a9      	ldr	r1, [r5, #8]
 800d47a:	9306      	str	r3, [sp, #24]
 800d47c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800d47e:	9205      	str	r2, [sp, #20]
 800d480:	9304      	str	r3, [sp, #16]
 800d482:	f8cd a004 	str.w	sl, [sp, #4]
 800d486:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800d48a:	44b0      	add	r8, r6
 800d48c:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800d48e:	fa0f f388 	sxth.w	r3, r8
 800d492:	9300      	str	r3, [sp, #0]
 800d494:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d496:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800d49a:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800d49c:	681a      	ldr	r2, [r3, #0]
 800d49e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800d4a0:	685b      	ldr	r3, [r3, #4]
 800d4a2:	47b8      	blx	r7
 800d4a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800d4a6:	3301      	adds	r3, #1
 800d4a8:	930d      	str	r3, [sp, #52]	@ 0x34
 800d4aa:	e6e3      	b.n	800d274 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800d4ac:	2700      	movs	r7, #0
 800d4ae:	e7cb      	b.n	800d448 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800d4b0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800d4b2:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800d4b6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800d4b8:	f8dc 1000 	ldr.w	r1, [ip]
 800d4bc:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800d4c0:	79aa      	ldrb	r2, [r5, #6]
 800d4c2:	9203      	str	r2, [sp, #12]
 800d4c4:	7baa      	ldrb	r2, [r5, #14]
 800d4c6:	9202      	str	r2, [sp, #8]
 800d4c8:	68aa      	ldr	r2, [r5, #8]
 800d4ca:	e9cd 0200 	strd	r0, r2, [sp]
 800d4ce:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800d4d0:	4660      	mov	r0, ip
 800d4d2:	688f      	ldr	r7, [r1, #8]
 800d4d4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800d4d6:	47b8      	blx	r7
 800d4d8:	e7e4      	b.n	800d4a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d4da:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800d4dc:	3501      	adds	r5, #1
 800d4de:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800d4e0:	429d      	cmp	r5, r3
 800d4e2:	f6bf af5e 	bge.w	800d3a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800d4e6:	4659      	mov	r1, fp
 800d4e8:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800d4ea:	f7f5 fdf3 	bl	80030d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d4ee:	4604      	mov	r4, r0
 800d4f0:	b110      	cbz	r0, 800d4f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800d4f2:	280a      	cmp	r0, #10
 800d4f4:	d1f2      	bne.n	800d4dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
 800d4f6:	e753      	b.n	800d3a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d4f8:	2400      	movs	r4, #0
 800d4fa:	e752      	b.n	800d3a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800d4fc:	f1bb 0f00 	cmp.w	fp, #0
 800d500:	f43f af43 	beq.w	800d38a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800d504:	e75d      	b.n	800d3c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800d506 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800d506:	b530      	push	{r4, r5, lr}
 800d508:	8ac4      	ldrh	r4, [r0, #22]
 800d50a:	8b45      	ldrh	r5, [r0, #26]
 800d50c:	8343      	strh	r3, [r0, #26]
 800d50e:	442c      	add	r4, r5
 800d510:	1ae4      	subs	r4, r4, r3
 800d512:	8b83      	ldrh	r3, [r0, #28]
 800d514:	82c4      	strh	r4, [r0, #22]
 800d516:	8b04      	ldrh	r4, [r0, #24]
 800d518:	4422      	add	r2, r4
 800d51a:	440c      	add	r4, r1
 800d51c:	1a59      	subs	r1, r3, r1
 800d51e:	83c2      	strh	r2, [r0, #30]
 800d520:	8304      	strh	r4, [r0, #24]
 800d522:	8381      	strh	r1, [r0, #28]
 800d524:	bd30      	pop	{r4, r5, pc}

0800d526 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800d526:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d52a:	4604      	mov	r4, r0
 800d52c:	8a47      	ldrh	r7, [r0, #18]
 800d52e:	68c0      	ldr	r0, [r0, #12]
 800d530:	b085      	sub	sp, #20
 800d532:	6803      	ldr	r3, [r0, #0]
 800d534:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d536:	4798      	blx	r3
 800d538:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800d53c:	7a63      	ldrb	r3, [r4, #9]
 800d53e:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800d542:	3b01      	subs	r3, #1
 800d544:	42b7      	cmp	r7, r6
 800d546:	bfac      	ite	ge
 800d548:	f04f 0900 	movge.w	r9, #0
 800d54c:	f04f 0901 	movlt.w	r9, #1
 800d550:	2b05      	cmp	r3, #5
 800d552:	d804      	bhi.n	800d55e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 800d554:	e8df f003 	tbb	[pc, r3]
 800d558:	470f0854 	.word	0x470f0854
 800d55c:	4c4c      	.short	0x4c4c
 800d55e:	2500      	movs	r5, #0
 800d560:	46a9      	mov	r9, r5
 800d562:	462e      	mov	r6, r5
 800d564:	462f      	mov	r7, r5
 800d566:	e00e      	b.n	800d586 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800d568:	42b7      	cmp	r7, r6
 800d56a:	f04f 0500 	mov.w	r5, #0
 800d56e:	bfb4      	ite	lt
 800d570:	2600      	movlt	r6, #0
 800d572:	2601      	movge	r6, #1
 800d574:	e7f6      	b.n	800d564 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800d576:	42b7      	cmp	r7, r6
 800d578:	464d      	mov	r5, r9
 800d57a:	f04f 0900 	mov.w	r9, #0
 800d57e:	bfb4      	ite	lt
 800d580:	2600      	movlt	r6, #0
 800d582:	2601      	movge	r6, #1
 800d584:	464f      	mov	r7, r9
 800d586:	f04f 0800 	mov.w	r8, #0
 800d58a:	f8a4 8016 	strh.w	r8, [r4, #22]
 800d58e:	f8a4 8018 	strh.w	r8, [r4, #24]
 800d592:	f8cd 8004 	str.w	r8, [sp, #4]
 800d596:	2300      	movs	r3, #0
 800d598:	9303      	str	r3, [sp, #12]
 800d59a:	8823      	ldrh	r3, [r4, #0]
 800d59c:	2b20      	cmp	r3, #32
 800d59e:	d033      	beq.n	800d608 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 800d5a0:	f242 010b 	movw	r1, #8203	@ 0x200b
 800d5a4:	1a5a      	subs	r2, r3, r1
 800d5a6:	f1d2 0a00 	rsbs	sl, r2, #0
 800d5aa:	eb4a 0a02 	adc.w	sl, sl, r2
 800d5ae:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800d5b2:	4293      	cmp	r3, r2
 800d5b4:	d008      	beq.n	800d5c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800d5b6:	428b      	cmp	r3, r1
 800d5b8:	9a01      	ldr	r2, [sp, #4]
 800d5ba:	bf0e      	itee	eq
 800d5bc:	f04f 0a01 	moveq.w	sl, #1
 800d5c0:	461a      	movne	r2, r3
 800d5c2:	f04f 0a00 	movne.w	sl, #0
 800d5c6:	9201      	str	r2, [sp, #4]
 800d5c8:	ab03      	add	r3, sp, #12
 800d5ca:	68e2      	ldr	r2, [r4, #12]
 800d5cc:	7a21      	ldrb	r1, [r4, #8]
 800d5ce:	6860      	ldr	r0, [r4, #4]
 800d5d0:	f002 fd70 	bl	80100b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d5d4:	8020      	strh	r0, [r4, #0]
 800d5d6:	b9d8      	cbnz	r0, 800d610 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 800d5d8:	8ba2      	ldrh	r2, [r4, #28]
 800d5da:	2300      	movs	r3, #0
 800d5dc:	4611      	mov	r1, r2
 800d5de:	4620      	mov	r0, r4
 800d5e0:	f7ff ff91 	bl	800d506 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d5e4:	e06e      	b.n	800d6c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800d5e6:	2500      	movs	r5, #0
 800d5e8:	2701      	movs	r7, #1
 800d5ea:	46a9      	mov	r9, r5
 800d5ec:	462e      	mov	r6, r5
 800d5ee:	e7ca      	b.n	800d586 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800d5f0:	42b7      	cmp	r7, r6
 800d5f2:	f04f 0500 	mov.w	r5, #0
 800d5f6:	bfb4      	ite	lt
 800d5f8:	2700      	movlt	r7, #0
 800d5fa:	2701      	movge	r7, #1
 800d5fc:	462e      	mov	r6, r5
 800d5fe:	e7c2      	b.n	800d586 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800d600:	2500      	movs	r5, #0
 800d602:	2601      	movs	r6, #1
 800d604:	46a9      	mov	r9, r5
 800d606:	e7ad      	b.n	800d564 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800d608:	9301      	str	r3, [sp, #4]
 800d60a:	f04f 0a01 	mov.w	sl, #1
 800d60e:	e7db      	b.n	800d5c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800d610:	8b63      	ldrh	r3, [r4, #26]
 800d612:	280a      	cmp	r0, #10
 800d614:	f103 0301 	add.w	r3, r3, #1
 800d618:	8363      	strh	r3, [r4, #26]
 800d61a:	d0dd      	beq.n	800d5d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 800d61c:	9a03      	ldr	r2, [sp, #12]
 800d61e:	bb62      	cbnz	r2, 800d67a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 800d620:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800d624:	4298      	cmp	r0, r3
 800d626:	d003      	beq.n	800d630 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800d628:	f242 030b 	movw	r3, #8203	@ 0x200b
 800d62c:	4298      	cmp	r0, r3
 800d62e:	d1b2      	bne.n	800d596 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d630:	8823      	ldrh	r3, [r4, #0]
 800d632:	8ba1      	ldrh	r1, [r4, #28]
 800d634:	2b20      	cmp	r3, #32
 800d636:	d003      	beq.n	800d640 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 800d638:	f242 000b 	movw	r0, #8203	@ 0x200b
 800d63c:	4283      	cmp	r3, r0
 800d63e:	d131      	bne.n	800d6a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 800d640:	f1ba 0f00 	cmp.w	sl, #0
 800d644:	bf0a      	itet	eq
 800d646:	4688      	moveq	r8, r1
 800d648:	4650      	movne	r0, sl
 800d64a:	2001      	moveq	r0, #1
 800d64c:	440a      	add	r2, r1
 800d64e:	8b23      	ldrh	r3, [r4, #24]
 800d650:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800d654:	b292      	uxth	r2, r2
 800d656:	83a2      	strh	r2, [r4, #28]
 800d658:	4413      	add	r3, r2
 800d65a:	f1b9 0f00 	cmp.w	r9, #0
 800d65e:	d102      	bne.n	800d666 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 800d660:	2d00      	cmp	r5, #0
 800d662:	d042      	beq.n	800d6ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 800d664:	b300      	cbz	r0, 800d6a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 800d666:	8c21      	ldrh	r1, [r4, #32]
 800d668:	4419      	add	r1, r3
 800d66a:	458c      	cmp	ip, r1
 800d66c:	da37      	bge.n	800d6de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800d66e:	8ae1      	ldrh	r1, [r4, #22]
 800d670:	2900      	cmp	r1, #0
 800d672:	d034      	beq.n	800d6de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800d674:	4563      	cmp	r3, ip
 800d676:	dd8e      	ble.n	800d596 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d678:	e01d      	b.n	800d6b6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 800d67a:	8893      	ldrh	r3, [r2, #4]
 800d67c:	9901      	ldr	r1, [sp, #4]
 800d67e:	8023      	strh	r3, [r4, #0]
 800d680:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800d684:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800d688:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800d68c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800d690:	ea4b 0b00 	orr.w	fp, fp, r0
 800d694:	68e0      	ldr	r0, [r4, #12]
 800d696:	6803      	ldr	r3, [r0, #0]
 800d698:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d69a:	4798      	blx	r3
 800d69c:	eb0b 0200 	add.w	r2, fp, r0
 800d6a0:	b292      	uxth	r2, r2
 800d6a2:	e7c5      	b.n	800d630 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800d6a4:	2000      	movs	r0, #0
 800d6a6:	e7d1      	b.n	800d64c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 800d6a8:	4563      	cmp	r3, ip
 800d6aa:	f77f af74 	ble.w	800d596 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d6ae:	8ae3      	ldrh	r3, [r4, #22]
 800d6b0:	2b00      	cmp	r3, #0
 800d6b2:	f43f af70 	beq.w	800d596 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d6b6:	2301      	movs	r3, #1
 800d6b8:	8c22      	ldrh	r2, [r4, #32]
 800d6ba:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800d6be:	8be3      	ldrh	r3, [r4, #30]
 800d6c0:	4413      	add	r3, r2
 800d6c2:	83e3      	strh	r3, [r4, #30]
 800d6c4:	68e0      	ldr	r0, [r4, #12]
 800d6c6:	6803      	ldr	r3, [r0, #0]
 800d6c8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d6ca:	4798      	blx	r3
 800d6cc:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800d6d0:	4418      	add	r0, r3
 800d6d2:	8a63      	ldrh	r3, [r4, #18]
 800d6d4:	1a18      	subs	r0, r3, r0
 800d6d6:	8260      	strh	r0, [r4, #18]
 800d6d8:	b005      	add	sp, #20
 800d6da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6de:	2300      	movs	r3, #0
 800d6e0:	4611      	mov	r1, r2
 800d6e2:	4620      	mov	r0, r4
 800d6e4:	f7ff ff0f 	bl	800d506 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d6e8:	e755      	b.n	800d596 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d6ea:	4563      	cmp	r3, ip
 800d6ec:	dd14      	ble.n	800d718 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 800d6ee:	b117      	cbz	r7, 800d6f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 800d6f0:	2301      	movs	r3, #1
 800d6f2:	460a      	mov	r2, r1
 800d6f4:	e772      	b.n	800d5dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 800d6f6:	2e00      	cmp	r6, #0
 800d6f8:	f43f af4d 	beq.w	800d596 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d6fc:	2800      	cmp	r0, #0
 800d6fe:	f47f af4a 	bne.w	800d596 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d702:	f1ba 0f00 	cmp.w	sl, #0
 800d706:	d002      	beq.n	800d70e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 800d708:	2301      	movs	r3, #1
 800d70a:	4642      	mov	r2, r8
 800d70c:	e767      	b.n	800d5de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800d70e:	8ae3      	ldrh	r3, [r4, #22]
 800d710:	2b00      	cmp	r3, #0
 800d712:	f43f af40 	beq.w	800d596 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d716:	e7d5      	b.n	800d6c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800d718:	2800      	cmp	r0, #0
 800d71a:	f47f af3c 	bne.w	800d596 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d71e:	f1ba 0f00 	cmp.w	sl, #0
 800d722:	f43f af38 	beq.w	800d596 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800d726:	2301      	movs	r3, #1
 800d728:	4642      	mov	r2, r8
 800d72a:	e7da      	b.n	800d6e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

0800d72c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800d72c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d72e:	4605      	mov	r5, r0
 800d730:	b08f      	sub	sp, #60	@ 0x3c
 800d732:	4617      	mov	r7, r2
 800d734:	461c      	mov	r4, r3
 800d736:	460e      	mov	r6, r1
 800d738:	b1d1      	cbz	r1, 800d770 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800d73a:	681b      	ldr	r3, [r3, #0]
 800d73c:	4620      	mov	r0, r4
 800d73e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d740:	4798      	blx	r3
 800d742:	4240      	negs	r0, r0
 800d744:	9603      	str	r6, [sp, #12]
 800d746:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800d74a:	b200      	sxth	r0, r0
 800d74c:	9700      	str	r7, [sp, #0]
 800d74e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800d752:	4629      	mov	r1, r5
 800d754:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800d758:	2401      	movs	r4, #1
 800d75a:	a805      	add	r0, sp, #20
 800d75c:	f7ff fcaa 	bl	800d0b4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800d760:	a805      	add	r0, sp, #20
 800d762:	f7ff fee0 	bl	800d526 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d766:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800d76a:	b163      	cbz	r3, 800d786 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800d76c:	3401      	adds	r4, #1
 800d76e:	e7f7      	b.n	800d760 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800d770:	2401      	movs	r4, #1
 800d772:	f002 fd6b 	bl	801024c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d776:	280a      	cmp	r0, #10
 800d778:	4628      	mov	r0, r5
 800d77a:	bf08      	it	eq
 800d77c:	3401      	addeq	r4, #1
 800d77e:	f002 fd65 	bl	801024c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d782:	2800      	cmp	r0, #0
 800d784:	d1f7      	bne.n	800d776 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800d786:	b2a0      	uxth	r0, r4
 800d788:	b00f      	add	sp, #60	@ 0x3c
 800d78a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d78c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800d78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d790:	b0e3      	sub	sp, #396	@ 0x18c
 800d792:	461c      	mov	r4, r3
 800d794:	4683      	mov	fp, r0
 800d796:	4688      	mov	r8, r1
 800d798:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800d79a:	2b00      	cmp	r3, #0
 800d79c:	f000 8112 	beq.w	800d9c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d7a0:	6823      	ldr	r3, [r4, #0]
 800d7a2:	2b00      	cmp	r3, #0
 800d7a4:	f000 810e 	beq.w	800d9c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d7a8:	7ba3      	ldrb	r3, [r4, #14]
 800d7aa:	2b00      	cmp	r3, #0
 800d7ac:	f000 810a 	beq.w	800d9c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d7b0:	ad0a      	add	r5, sp, #40	@ 0x28
 800d7b2:	6810      	ldr	r0, [r2, #0]
 800d7b4:	6851      	ldr	r1, [r2, #4]
 800d7b6:	462b      	mov	r3, r5
 800d7b8:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800d7bc:	c303      	stmia	r3!, {r0, r1}
 800d7be:	2100      	movs	r1, #0
 800d7c0:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800d7c4:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800d7c8:	4628      	mov	r0, r5
 800d7ca:	910c      	str	r1, [sp, #48]	@ 0x30
 800d7cc:	a90c      	add	r1, sp, #48	@ 0x30
 800d7ce:	79a2      	ldrb	r2, [r4, #6]
 800d7d0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d7d4:	f7ff fced 	bl	800d1b2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d7d8:	a90c      	add	r1, sp, #48	@ 0x30
 800d7da:	79a2      	ldrb	r2, [r4, #6]
 800d7dc:	4608      	mov	r0, r1
 800d7de:	f7ff fce8 	bl	800d1b2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d7e2:	a817      	add	r0, sp, #92	@ 0x5c
 800d7e4:	f002 f906 	bl	800f9f4 <_ZN8touchgfx12TextProviderC1Ev>
 800d7e8:	6820      	ldr	r0, [r4, #0]
 800d7ea:	6803      	ldr	r3, [r0, #0]
 800d7ec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d7ee:	4798      	blx	r3
 800d7f0:	4606      	mov	r6, r0
 800d7f2:	6820      	ldr	r0, [r4, #0]
 800d7f4:	6803      	ldr	r3, [r0, #0]
 800d7f6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d7f8:	4798      	blx	r3
 800d7fa:	4633      	mov	r3, r6
 800d7fc:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800d7fe:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800d800:	9000      	str	r0, [sp, #0]
 800d802:	a817      	add	r0, sp, #92	@ 0x5c
 800d804:	f002 f951 	bl	800faaa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d808:	6820      	ldr	r0, [r4, #0]
 800d80a:	f894 a004 	ldrb.w	sl, [r4, #4]
 800d80e:	6803      	ldr	r3, [r0, #0]
 800d810:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d812:	4798      	blx	r3
 800d814:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800d818:	6823      	ldr	r3, [r4, #0]
 800d81a:	4607      	mov	r7, r0
 800d81c:	4406      	add	r6, r0
 800d81e:	a830      	add	r0, sp, #192	@ 0xc0
 800d820:	f893 9009 	ldrb.w	r9, [r3, #9]
 800d824:	f002 f8e6 	bl	800f9f4 <_ZN8touchgfx12TextProviderC1Ev>
 800d828:	7c23      	ldrb	r3, [r4, #16]
 800d82a:	b17b      	cbz	r3, 800d84c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800d82c:	6820      	ldr	r0, [r4, #0]
 800d82e:	6803      	ldr	r3, [r0, #0]
 800d830:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d832:	4798      	blx	r3
 800d834:	9009      	str	r0, [sp, #36]	@ 0x24
 800d836:	6820      	ldr	r0, [r4, #0]
 800d838:	6802      	ldr	r2, [r0, #0]
 800d83a:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800d83c:	4790      	blx	r2
 800d83e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d840:	9000      	str	r0, [sp, #0]
 800d842:	a830      	add	r0, sp, #192	@ 0xc0
 800d844:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800d846:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800d848:	f002 f92f 	bl	800faaa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d84c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800d850:	a80e      	add	r0, sp, #56	@ 0x38
 800d852:	7be2      	ldrb	r2, [r4, #15]
 800d854:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800d858:	1a8a      	subs	r2, r1, r2
 800d85a:	7c21      	ldrb	r1, [r4, #16]
 800d85c:	9103      	str	r1, [sp, #12]
 800d85e:	b292      	uxth	r2, r2
 800d860:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800d864:	9102      	str	r1, [sp, #8]
 800d866:	6821      	ldr	r1, [r4, #0]
 800d868:	9101      	str	r1, [sp, #4]
 800d86a:	7961      	ldrb	r1, [r4, #5]
 800d86c:	9100      	str	r1, [sp, #0]
 800d86e:	a930      	add	r1, sp, #192	@ 0xc0
 800d870:	f7ff fc20 	bl	800d0b4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800d874:	2e00      	cmp	r6, #0
 800d876:	dc5b      	bgt.n	800d930 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800d878:	af17      	add	r7, sp, #92	@ 0x5c
 800d87a:	f04f 0900 	mov.w	r9, #0
 800d87e:	7c23      	ldrb	r3, [r4, #16]
 800d880:	2b00      	cmp	r3, #0
 800d882:	f000 80b1 	beq.w	800d9e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800d886:	a80e      	add	r0, sp, #56	@ 0x38
 800d888:	f7ff fe4d 	bl	800d526 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d88c:	f1ba 0f00 	cmp.w	sl, #0
 800d890:	f000 80a5 	beq.w	800d9de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800d894:	7c23      	ldrb	r3, [r4, #16]
 800d896:	2264      	movs	r2, #100	@ 0x64
 800d898:	4639      	mov	r1, r7
 800d89a:	a849      	add	r0, sp, #292	@ 0x124
 800d89c:	9309      	str	r3, [sp, #36]	@ 0x24
 800d89e:	f011 fc58 	bl	801f152 <memcpy>
 800d8a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d8a4:	2b00      	cmp	r3, #0
 800d8a6:	f000 80a7 	beq.w	800d9f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800d8aa:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 800d8ae:	7922      	ldrb	r2, [r4, #4]
 800d8b0:	2a01      	cmp	r2, #1
 800d8b2:	f040 808a 	bne.w	800d9ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800d8b6:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 800d8ba:	1ac0      	subs	r0, r0, r3
 800d8bc:	2302      	movs	r3, #2
 800d8be:	fb90 f0f3 	sdiv	r0, r0, r3
 800d8c2:	b200      	sxth	r0, r0
 800d8c4:	7c23      	ldrb	r3, [r4, #16]
 800d8c6:	2b00      	cmp	r3, #0
 800d8c8:	f000 808b 	beq.w	800d9e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800d8cc:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 800d8d0:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 800d8d4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800d8d8:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800d8dc:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 800d8e0:	2100      	movs	r1, #0
 800d8e2:	4410      	add	r0, r2
 800d8e4:	4642      	mov	r2, r8
 800d8e6:	b200      	sxth	r0, r0
 800d8e8:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800d8ec:	9000      	str	r0, [sp, #0]
 800d8ee:	4658      	mov	r0, fp
 800d8f0:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d8f4:	f7ff fc8e 	bl	800d214 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800d8f8:	2800      	cmp	r0, #0
 800d8fa:	d163      	bne.n	800d9c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d8fc:	b2b2      	uxth	r2, r6
 800d8fe:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800d902:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800d906:	4413      	add	r3, r2
 800d908:	1a8a      	subs	r2, r1, r2
 800d90a:	b21b      	sxth	r3, r3
 800d90c:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 800d910:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 800d914:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800d918:	2a00      	cmp	r2, #0
 800d91a:	d153      	bne.n	800d9c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d91c:	6822      	ldr	r2, [r4, #0]
 800d91e:	8869      	ldrh	r1, [r5, #2]
 800d920:	7a12      	ldrb	r2, [r2, #8]
 800d922:	1a9b      	subs	r3, r3, r2
 800d924:	88ea      	ldrh	r2, [r5, #6]
 800d926:	440a      	add	r2, r1
 800d928:	b212      	sxth	r2, r2
 800d92a:	4293      	cmp	r3, r2
 800d92c:	dda7      	ble.n	800d87e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800d92e:	e049      	b.n	800d9c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d930:	7c23      	ldrb	r3, [r4, #16]
 800d932:	444f      	add	r7, r9
 800d934:	b1c3      	cbz	r3, 800d968 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800d936:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 800d93a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800d93e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d942:	443b      	add	r3, r7
 800d944:	4293      	cmp	r3, r2
 800d946:	da97      	bge.n	800d878 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800d948:	a80e      	add	r0, sp, #56	@ 0x38
 800d94a:	f7ff fdec 	bl	800d526 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d94e:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 800d952:	3b01      	subs	r3, #1
 800d954:	b29b      	uxth	r3, r3
 800d956:	454b      	cmp	r3, r9
 800d958:	9309      	str	r3, [sp, #36]	@ 0x24
 800d95a:	d021      	beq.n	800d9a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800d95c:	7961      	ldrb	r1, [r4, #5]
 800d95e:	a817      	add	r0, sp, #92	@ 0x5c
 800d960:	f7f5 fbb8 	bl	80030d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d964:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d966:	e7f4      	b.n	800d952 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800d968:	fa1f f986 	uxth.w	r9, r6
 800d96c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800d970:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d974:	443b      	add	r3, r7
 800d976:	4293      	cmp	r3, r2
 800d978:	f6bf af7e 	bge.w	800d878 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800d97c:	a817      	add	r0, sp, #92	@ 0x5c
 800d97e:	f002 fc65 	bl	801024c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d982:	b1f8      	cbz	r0, 800d9c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d984:	280a      	cmp	r0, #10
 800d986:	d1f1      	bne.n	800d96c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800d988:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800d98c:	444b      	add	r3, r9
 800d98e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800d992:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800d996:	eba3 0309 	sub.w	r3, r3, r9
 800d99a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d99e:	e7e5      	b.n	800d96c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800d9a0:	b2b3      	uxth	r3, r6
 800d9a2:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 800d9a6:	441a      	add	r2, r3
 800d9a8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800d9ac:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 800d9b0:	1ad3      	subs	r3, r2, r3
 800d9b2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d9b6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800d9ba:	b11b      	cbz	r3, 800d9c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800d9bc:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 800d9c0:	2b00      	cmp	r3, #0
 800d9c2:	d0ba      	beq.n	800d93a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800d9c4:	b063      	add	sp, #396	@ 0x18c
 800d9c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9ca:	2a02      	cmp	r2, #2
 800d9cc:	d105      	bne.n	800d9da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800d9ce:	7be2      	ldrb	r2, [r4, #15]
 800d9d0:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800d9d4:	1a80      	subs	r0, r0, r2
 800d9d6:	1ac0      	subs	r0, r0, r3
 800d9d8:	e773      	b.n	800d8c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800d9da:	2000      	movs	r0, #0
 800d9dc:	e772      	b.n	800d8c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800d9de:	7be0      	ldrb	r0, [r4, #15]
 800d9e0:	e770      	b.n	800d8c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800d9e2:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800d9e6:	e773      	b.n	800d8d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800d9e8:	f1ba 0f00 	cmp.w	sl, #0
 800d9ec:	d0f7      	beq.n	800d9de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800d9ee:	2264      	movs	r2, #100	@ 0x64
 800d9f0:	4639      	mov	r1, r7
 800d9f2:	a849      	add	r0, sp, #292	@ 0x124
 800d9f4:	f011 fbad 	bl	801f152 <memcpy>
 800d9f8:	2300      	movs	r3, #0
 800d9fa:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800d9fe:	6821      	ldr	r1, [r4, #0]
 800da00:	a849      	add	r0, sp, #292	@ 0x124
 800da02:	f7ff fb9a 	bl	800d13a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800da06:	b203      	sxth	r3, r0
 800da08:	e751      	b.n	800d8ae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800da0a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800da0a:	2b03      	cmp	r3, #3
 800da0c:	d818      	bhi.n	800da40 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800da0e:	e8df f003 	tbb	[pc, r3]
 800da12:	0602      	.short	0x0602
 800da14:	130d      	.short	0x130d
 800da16:	f9b0 2000 	ldrsh.w	r2, [r0]
 800da1a:	1850      	adds	r0, r2, r1
 800da1c:	4770      	bx	lr
 800da1e:	8803      	ldrh	r3, [r0, #0]
 800da20:	8880      	ldrh	r0, [r0, #4]
 800da22:	4418      	add	r0, r3
 800da24:	b200      	sxth	r0, r0
 800da26:	1a80      	subs	r0, r0, r2
 800da28:	3801      	subs	r0, #1
 800da2a:	4770      	bx	lr
 800da2c:	8803      	ldrh	r3, [r0, #0]
 800da2e:	8880      	ldrh	r0, [r0, #4]
 800da30:	4418      	add	r0, r3
 800da32:	b200      	sxth	r0, r0
 800da34:	1a40      	subs	r0, r0, r1
 800da36:	e7f7      	b.n	800da28 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800da38:	f9b0 0000 	ldrsh.w	r0, [r0]
 800da3c:	4410      	add	r0, r2
 800da3e:	4770      	bx	lr
 800da40:	2000      	movs	r0, #0
 800da42:	4770      	bx	lr

0800da44 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800da44:	2b03      	cmp	r3, #3
 800da46:	d817      	bhi.n	800da78 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800da48:	e8df f003 	tbb	[pc, r3]
 800da4c:	10090602 	.word	0x10090602
 800da50:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800da54:	1850      	adds	r0, r2, r1
 800da56:	4770      	bx	lr
 800da58:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800da5c:	e7fa      	b.n	800da54 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800da5e:	8843      	ldrh	r3, [r0, #2]
 800da60:	88c0      	ldrh	r0, [r0, #6]
 800da62:	4418      	add	r0, r3
 800da64:	b200      	sxth	r0, r0
 800da66:	1a80      	subs	r0, r0, r2
 800da68:	3801      	subs	r0, #1
 800da6a:	4770      	bx	lr
 800da6c:	8843      	ldrh	r3, [r0, #2]
 800da6e:	88c0      	ldrh	r0, [r0, #6]
 800da70:	4418      	add	r0, r3
 800da72:	b200      	sxth	r0, r0
 800da74:	1a40      	subs	r0, r0, r1
 800da76:	e7f7      	b.n	800da68 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800da78:	2000      	movs	r0, #0
 800da7a:	4770      	bx	lr

0800da7c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800da7c:	4b01      	ldr	r3, [pc, #4]	@ (800da84 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800da7e:	2200      	movs	r2, #0
 800da80:	601a      	str	r2, [r3, #0]
 800da82:	4770      	bx	lr
 800da84:	200150b4 	.word	0x200150b4

0800da88 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800da88:	4603      	mov	r3, r0
 800da8a:	b1c8      	cbz	r0, 800dac0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800da8c:	0c02      	lsrs	r2, r0, #16
 800da8e:	0412      	lsls	r2, r2, #16
 800da90:	b9a2      	cbnz	r2, 800dabc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800da92:	0403      	lsls	r3, r0, #16
 800da94:	2010      	movs	r0, #16
 800da96:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800da9a:	bf04      	itt	eq
 800da9c:	021b      	lsleq	r3, r3, #8
 800da9e:	3008      	addeq	r0, #8
 800daa0:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800daa4:	bf04      	itt	eq
 800daa6:	011b      	lsleq	r3, r3, #4
 800daa8:	3004      	addeq	r0, #4
 800daaa:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800daae:	bf04      	itt	eq
 800dab0:	009b      	lsleq	r3, r3, #2
 800dab2:	3002      	addeq	r0, #2
 800dab4:	2b00      	cmp	r3, #0
 800dab6:	db04      	blt.n	800dac2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800dab8:	3001      	adds	r0, #1
 800daba:	4770      	bx	lr
 800dabc:	2000      	movs	r0, #0
 800dabe:	e7ea      	b.n	800da96 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800dac0:	2020      	movs	r0, #32
 800dac2:	4770      	bx	lr

0800dac4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800dac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dac8:	b087      	sub	sp, #28
 800daca:	460d      	mov	r5, r1
 800dacc:	4616      	mov	r6, r2
 800dace:	4698      	mov	r8, r3
 800dad0:	4601      	mov	r1, r0
 800dad2:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800dad6:	b120      	cbz	r0, 800dae2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800dad8:	b11a      	cbz	r2, 800dae2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800dada:	2d1f      	cmp	r5, #31
 800dadc:	d801      	bhi.n	800dae2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800dade:	2b1f      	cmp	r3, #31
 800dae0:	d904      	bls.n	800daec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800dae2:	2000      	movs	r0, #0
 800dae4:	6038      	str	r0, [r7, #0]
 800dae6:	b007      	add	sp, #28
 800dae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800daec:	b97d      	cbnz	r5, 800db0e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800daee:	b143      	cbz	r3, 800db02 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800daf0:	4602      	mov	r2, r0
 800daf2:	462b      	mov	r3, r5
 800daf4:	4641      	mov	r1, r8
 800daf6:	4630      	mov	r0, r6
 800daf8:	e9cd 4700 	strd	r4, r7, [sp]
 800dafc:	f7ff ffe2 	bl	800dac4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800db00:	e7f1      	b.n	800dae6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800db02:	f04f 33ff 	mov.w	r3, #4294967295
 800db06:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800db0a:	603b      	str	r3, [r7, #0]
 800db0c:	e7eb      	b.n	800dae6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800db0e:	fa32 fa05 	lsrs.w	sl, r2, r5
 800db12:	d106      	bne.n	800db22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800db14:	4346      	muls	r6, r0
 800db16:	fbb6 f0f4 	udiv	r0, r6, r4
 800db1a:	fb04 6610 	mls	r6, r4, r0, r6
 800db1e:	603e      	str	r6, [r7, #0]
 800db20:	e7e1      	b.n	800dae6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800db22:	2201      	movs	r2, #1
 800db24:	fa00 fb05 	lsl.w	fp, r0, r5
 800db28:	40aa      	lsls	r2, r5
 800db2a:	fbbb f9f4 	udiv	r9, fp, r4
 800db2e:	3a01      	subs	r2, #1
 800db30:	fb0a f309 	mul.w	r3, sl, r9
 800db34:	fb04 b919 	mls	r9, r4, r9, fp
 800db38:	4016      	ands	r6, r2
 800db3a:	9303      	str	r3, [sp, #12]
 800db3c:	4630      	mov	r0, r6
 800db3e:	f7ff ffa3 	bl	800da88 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800db42:	462b      	mov	r3, r5
 800db44:	460a      	mov	r2, r1
 800db46:	4601      	mov	r1, r0
 800db48:	4630      	mov	r0, r6
 800db4a:	e9cd 4700 	strd	r4, r7, [sp]
 800db4e:	f7ff ffb9 	bl	800dac4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800db52:	4606      	mov	r6, r0
 800db54:	4648      	mov	r0, r9
 800db56:	eb05 0108 	add.w	r1, r5, r8
 800db5a:	f7ff ff95 	bl	800da88 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800db5e:	ab05      	add	r3, sp, #20
 800db60:	464a      	mov	r2, r9
 800db62:	e9cd 4300 	strd	r4, r3, [sp]
 800db66:	4603      	mov	r3, r0
 800db68:	4650      	mov	r0, sl
 800db6a:	f7ff ffab 	bl	800dac4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800db6e:	6839      	ldr	r1, [r7, #0]
 800db70:	9a05      	ldr	r2, [sp, #20]
 800db72:	9b03      	ldr	r3, [sp, #12]
 800db74:	4411      	add	r1, r2
 800db76:	fbb1 f2f4 	udiv	r2, r1, r4
 800db7a:	18d3      	adds	r3, r2, r3
 800db7c:	fb04 1412 	mls	r4, r4, r2, r1
 800db80:	441e      	add	r6, r3
 800db82:	603c      	str	r4, [r7, #0]
 800db84:	4430      	add	r0, r6
 800db86:	e7ae      	b.n	800dae6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800db88 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800db88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800db8c:	b085      	sub	sp, #20
 800db8e:	f1b0 0900 	subs.w	r9, r0, #0
 800db92:	461d      	mov	r5, r3
 800db94:	4617      	mov	r7, r2
 800db96:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800db98:	bfbb      	ittet	lt
 800db9a:	f1c9 0900 	rsblt	r9, r9, #0
 800db9e:	f04f 36ff 	movlt.w	r6, #4294967295
 800dba2:	2601      	movge	r6, #1
 800dba4:	6823      	ldrlt	r3, [r4, #0]
 800dba6:	bfbc      	itt	lt
 800dba8:	425b      	neglt	r3, r3
 800dbaa:	6023      	strlt	r3, [r4, #0]
 800dbac:	2a00      	cmp	r2, #0
 800dbae:	da04      	bge.n	800dbba <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800dbb0:	6823      	ldr	r3, [r4, #0]
 800dbb2:	4257      	negs	r7, r2
 800dbb4:	4276      	negs	r6, r6
 800dbb6:	425b      	negs	r3, r3
 800dbb8:	6023      	str	r3, [r4, #0]
 800dbba:	2d00      	cmp	r5, #0
 800dbbc:	4638      	mov	r0, r7
 800dbbe:	bfba      	itte	lt
 800dbc0:	426d      	neglt	r5, r5
 800dbc2:	f04f 38ff 	movlt.w	r8, #4294967295
 800dbc6:	f04f 0801 	movge.w	r8, #1
 800dbca:	f7ff ff5d 	bl	800da88 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800dbce:	ab03      	add	r3, sp, #12
 800dbd0:	463a      	mov	r2, r7
 800dbd2:	e9cd 5300 	strd	r5, r3, [sp]
 800dbd6:	4603      	mov	r3, r0
 800dbd8:	4648      	mov	r0, r9
 800dbda:	f7ff ff73 	bl	800dac4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800dbde:	6823      	ldr	r3, [r4, #0]
 800dbe0:	9a03      	ldr	r2, [sp, #12]
 800dbe2:	4546      	cmp	r6, r8
 800dbe4:	441a      	add	r2, r3
 800dbe6:	fb92 f3f5 	sdiv	r3, r2, r5
 800dbea:	4418      	add	r0, r3
 800dbec:	fb05 2313 	mls	r3, r5, r3, r2
 800dbf0:	bf18      	it	ne
 800dbf2:	4240      	negne	r0, r0
 800dbf4:	1c72      	adds	r2, r6, #1
 800dbf6:	6023      	str	r3, [r4, #0]
 800dbf8:	d105      	bne.n	800dc06 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800dbfa:	2b00      	cmp	r3, #0
 800dbfc:	f1c3 0200 	rsb	r2, r3, #0
 800dc00:	db0b      	blt.n	800dc1a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800dc02:	6022      	str	r2, [r4, #0]
 800dc04:	e006      	b.n	800dc14 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800dc06:	2e01      	cmp	r6, #1
 800dc08:	d104      	bne.n	800dc14 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800dc0a:	2b00      	cmp	r3, #0
 800dc0c:	da02      	bge.n	800dc14 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800dc0e:	442b      	add	r3, r5
 800dc10:	3801      	subs	r0, #1
 800dc12:	6023      	str	r3, [r4, #0]
 800dc14:	b005      	add	sp, #20
 800dc16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dc1a:	3801      	subs	r0, #1
 800dc1c:	1b52      	subs	r2, r2, r5
 800dc1e:	e7f0      	b.n	800dc02 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800dc20 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800dc20:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800dc24:	4c1c      	ldr	r4, [pc, #112]	@ (800dc98 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800dc26:	4605      	mov	r5, r0
 800dc28:	6807      	ldr	r7, [r0, #0]
 800dc2a:	69a3      	ldr	r3, [r4, #24]
 800dc2c:	b92b      	cbnz	r3, 800dc3a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800dc2e:	6840      	ldr	r0, [r0, #4]
 800dc30:	e9c5 7000 	strd	r7, r0, [r5]
 800dc34:	b004      	add	sp, #16
 800dc36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc3a:	f04f 0802 	mov.w	r8, #2
 800dc3e:	68a2      	ldr	r2, [r4, #8]
 800dc40:	ae04      	add	r6, sp, #16
 800dc42:	6820      	ldr	r0, [r4, #0]
 800dc44:	fb93 f1f8 	sdiv	r1, r3, r8
 800dc48:	440a      	add	r2, r1
 800dc4a:	69e1      	ldr	r1, [r4, #28]
 800dc4c:	f846 2d04 	str.w	r2, [r6, #-4]!
 800dc50:	463a      	mov	r2, r7
 800dc52:	9600      	str	r6, [sp, #0]
 800dc54:	f7ff ff98 	bl	800db88 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dc58:	69a3      	ldr	r3, [r4, #24]
 800dc5a:	4607      	mov	r7, r0
 800dc5c:	686a      	ldr	r2, [r5, #4]
 800dc5e:	6a21      	ldr	r1, [r4, #32]
 800dc60:	9600      	str	r6, [sp, #0]
 800dc62:	6860      	ldr	r0, [r4, #4]
 800dc64:	f7ff ff90 	bl	800db88 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dc68:	69a3      	ldr	r3, [r4, #24]
 800dc6a:	6962      	ldr	r2, [r4, #20]
 800dc6c:	4407      	add	r7, r0
 800dc6e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800dc70:	9600      	str	r6, [sp, #0]
 800dc72:	68e0      	ldr	r0, [r4, #12]
 800dc74:	fb93 f8f8 	sdiv	r8, r3, r8
 800dc78:	4442      	add	r2, r8
 800dc7a:	9203      	str	r2, [sp, #12]
 800dc7c:	682a      	ldr	r2, [r5, #0]
 800dc7e:	f7ff ff83 	bl	800db88 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dc82:	4680      	mov	r8, r0
 800dc84:	9600      	str	r6, [sp, #0]
 800dc86:	69a3      	ldr	r3, [r4, #24]
 800dc88:	686a      	ldr	r2, [r5, #4]
 800dc8a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800dc8c:	6920      	ldr	r0, [r4, #16]
 800dc8e:	f7ff ff7b 	bl	800db88 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dc92:	4440      	add	r0, r8
 800dc94:	e7cc      	b.n	800dc30 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800dc96:	bf00      	nop
 800dc98:	200150b8 	.word	0x200150b8

0800dc9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800dc9c:	4b07      	ldr	r3, [pc, #28]	@ (800dcbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800dc9e:	781b      	ldrb	r3, [r3, #0]
 800dca0:	2b01      	cmp	r3, #1
 800dca2:	d109      	bne.n	800dcb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800dca4:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dca8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800dcac:	8003      	strh	r3, [r0, #0]
 800dcae:	4b04      	ldr	r3, [pc, #16]	@ (800dcc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800dcb0:	881b      	ldrh	r3, [r3, #0]
 800dcb2:	3b01      	subs	r3, #1
 800dcb4:	1a9b      	subs	r3, r3, r2
 800dcb6:	800b      	strh	r3, [r1, #0]
 800dcb8:	4770      	bx	lr
 800dcba:	bf00      	nop
 800dcbc:	200150a4 	.word	0x200150a4
 800dcc0:	200150a0 	.word	0x200150a0

0800dcc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800dcc4:	4b07      	ldr	r3, [pc, #28]	@ (800dce4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800dcc6:	b510      	push	{r4, lr}
 800dcc8:	781b      	ldrb	r3, [r3, #0]
 800dcca:	2b01      	cmp	r3, #1
 800dccc:	d108      	bne.n	800dce0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800dcce:	4b06      	ldr	r3, [pc, #24]	@ (800dce8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800dcd0:	880c      	ldrh	r4, [r1, #0]
 800dcd2:	881b      	ldrh	r3, [r3, #0]
 800dcd4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800dcd8:	3b01      	subs	r3, #1
 800dcda:	1b1b      	subs	r3, r3, r4
 800dcdc:	8003      	strh	r3, [r0, #0]
 800dcde:	800a      	strh	r2, [r1, #0]
 800dce0:	bd10      	pop	{r4, pc}
 800dce2:	bf00      	nop
 800dce4:	200150a4 	.word	0x200150a4
 800dce8:	200150a0 	.word	0x200150a0

0800dcec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800dcec:	4b0a      	ldr	r3, [pc, #40]	@ (800dd18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800dcee:	b510      	push	{r4, lr}
 800dcf0:	781b      	ldrb	r3, [r3, #0]
 800dcf2:	2b01      	cmp	r3, #1
 800dcf4:	d10e      	bne.n	800dd14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800dcf6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800dcfa:	8843      	ldrh	r3, [r0, #2]
 800dcfc:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dd00:	18ca      	adds	r2, r1, r3
 800dd02:	4b06      	ldr	r3, [pc, #24]	@ (800dd1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800dd04:	8044      	strh	r4, [r0, #2]
 800dd06:	881b      	ldrh	r3, [r3, #0]
 800dd08:	1a9b      	subs	r3, r3, r2
 800dd0a:	8003      	strh	r3, [r0, #0]
 800dd0c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dd10:	8081      	strh	r1, [r0, #4]
 800dd12:	80c3      	strh	r3, [r0, #6]
 800dd14:	bd10      	pop	{r4, pc}
 800dd16:	bf00      	nop
 800dd18:	200150a4 	.word	0x200150a4
 800dd1c:	200150a0 	.word	0x200150a0

0800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800dd20:	4b08      	ldr	r3, [pc, #32]	@ (800dd44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800dd22:	781b      	ldrb	r3, [r3, #0]
 800dd24:	2b01      	cmp	r3, #1
 800dd26:	d10c      	bne.n	800dd42 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800dd28:	8803      	ldrh	r3, [r0, #0]
 800dd2a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800dd2e:	8842      	ldrh	r2, [r0, #2]
 800dd30:	8002      	strh	r2, [r0, #0]
 800dd32:	185a      	adds	r2, r3, r1
 800dd34:	4b04      	ldr	r3, [pc, #16]	@ (800dd48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800dd36:	881b      	ldrh	r3, [r3, #0]
 800dd38:	1a9b      	subs	r3, r3, r2
 800dd3a:	8043      	strh	r3, [r0, #2]
 800dd3c:	88c3      	ldrh	r3, [r0, #6]
 800dd3e:	80c1      	strh	r1, [r0, #6]
 800dd40:	8083      	strh	r3, [r0, #4]
 800dd42:	4770      	bx	lr
 800dd44:	200150a4 	.word	0x200150a4
 800dd48:	200150a0 	.word	0x200150a0

0800dd4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800dd4c:	4b07      	ldr	r3, [pc, #28]	@ (800dd6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800dd4e:	b510      	push	{r4, lr}
 800dd50:	781b      	ldrb	r3, [r3, #0]
 800dd52:	2b01      	cmp	r3, #1
 800dd54:	d108      	bne.n	800dd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800dd56:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dd5a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dd5e:	8003      	strh	r3, [r0, #0]
 800dd60:	8893      	ldrh	r3, [r2, #4]
 800dd62:	3b01      	subs	r3, #1
 800dd64:	1b1b      	subs	r3, r3, r4
 800dd66:	800b      	strh	r3, [r1, #0]
 800dd68:	bd10      	pop	{r4, pc}
 800dd6a:	bf00      	nop
 800dd6c:	200150a4 	.word	0x200150a4

0800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800dd70:	4b0a      	ldr	r3, [pc, #40]	@ (800dd9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800dd72:	460a      	mov	r2, r1
 800dd74:	b510      	push	{r4, lr}
 800dd76:	781b      	ldrb	r3, [r3, #0]
 800dd78:	2b01      	cmp	r3, #1
 800dd7a:	d10d      	bne.n	800dd98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800dd7c:	8881      	ldrh	r1, [r0, #4]
 800dd7e:	8803      	ldrh	r3, [r0, #0]
 800dd80:	440b      	add	r3, r1
 800dd82:	4601      	mov	r1, r0
 800dd84:	3b01      	subs	r3, #1
 800dd86:	f821 3b02 	strh.w	r3, [r1], #2
 800dd8a:	f7ff ffdf 	bl	800dd4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800dd8e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dd92:	88c2      	ldrh	r2, [r0, #6]
 800dd94:	80c3      	strh	r3, [r0, #6]
 800dd96:	8082      	strh	r2, [r0, #4]
 800dd98:	bd10      	pop	{r4, pc}
 800dd9a:	bf00      	nop
 800dd9c:	200150a4 	.word	0x200150a4

0800dda0 <_ZN8touchgfx11Application13requestRedrawEv>:
 800dda0:	4b06      	ldr	r3, [pc, #24]	@ (800ddbc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800dda2:	2100      	movs	r1, #0
 800dda4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dda8:	4b05      	ldr	r3, [pc, #20]	@ (800ddc0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800ddaa:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800ddae:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ddb2:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800ddb6:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800ddba:	4770      	bx	lr
 800ddbc:	200150a0 	.word	0x200150a0
 800ddc0:	200150a2 	.word	0x200150a2

0800ddc4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800ddc4:	4b03      	ldr	r3, [pc, #12]	@ (800ddd4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800ddc6:	6818      	ldr	r0, [r3, #0]
 800ddc8:	b110      	cbz	r0, 800ddd0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800ddca:	6803      	ldr	r3, [r0, #0]
 800ddcc:	699b      	ldr	r3, [r3, #24]
 800ddce:	4718      	bx	r3
 800ddd0:	4770      	bx	lr
 800ddd2:	bf00      	nop
 800ddd4:	200150e8 	.word	0x200150e8

0800ddd8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800ddd8:	4770      	bx	lr
	...

0800dddc <_ZN8touchgfx11Application4drawEv>:
 800dddc:	4b09      	ldr	r3, [pc, #36]	@ (800de04 <_ZN8touchgfx11Application4drawEv+0x28>)
 800ddde:	b507      	push	{r0, r1, r2, lr}
 800dde0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dde4:	2100      	movs	r1, #0
 800dde6:	4b08      	ldr	r3, [pc, #32]	@ (800de08 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800dde8:	9100      	str	r1, [sp, #0]
 800ddea:	4669      	mov	r1, sp
 800ddec:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ddf0:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ddf4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ddf8:	6803      	ldr	r3, [r0, #0]
 800ddfa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ddfc:	4798      	blx	r3
 800ddfe:	b003      	add	sp, #12
 800de00:	f85d fb04 	ldr.w	pc, [sp], #4
 800de04:	200150a0 	.word	0x200150a0
 800de08:	200150a2 	.word	0x200150a2

0800de0c <_ZN8touchgfx11Application10invalidateEv>:
 800de0c:	4b09      	ldr	r3, [pc, #36]	@ (800de34 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800de0e:	b082      	sub	sp, #8
 800de10:	2100      	movs	r1, #0
 800de12:	f9b3 2000 	ldrsh.w	r2, [r3]
 800de16:	4b08      	ldr	r3, [pc, #32]	@ (800de38 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800de18:	f8ad 2004 	strh.w	r2, [sp, #4]
 800de1c:	aa02      	add	r2, sp, #8
 800de1e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800de22:	9100      	str	r1, [sp, #0]
 800de24:	f8ad 3006 	strh.w	r3, [sp, #6]
 800de28:	6803      	ldr	r3, [r0, #0]
 800de2a:	e912 0006 	ldmdb	r2, {r1, r2}
 800de2e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800de30:	b002      	add	sp, #8
 800de32:	4718      	bx	r3
 800de34:	200150a0 	.word	0x200150a0
 800de38:	200150a2 	.word	0x200150a2

0800de3c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800de3c:	4b03      	ldr	r3, [pc, #12]	@ (800de4c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800de3e:	6818      	ldr	r0, [r3, #0]
 800de40:	b110      	cbz	r0, 800de48 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800de42:	6803      	ldr	r3, [r0, #0]
 800de44:	69db      	ldr	r3, [r3, #28]
 800de46:	4718      	bx	r3
 800de48:	4770      	bx	lr
 800de4a:	bf00      	nop
 800de4c:	200150e8 	.word	0x200150e8

0800de50 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800de50:	4b03      	ldr	r3, [pc, #12]	@ (800de60 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800de52:	6818      	ldr	r0, [r3, #0]
 800de54:	b110      	cbz	r0, 800de5c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800de56:	6803      	ldr	r3, [r0, #0]
 800de58:	6a1b      	ldr	r3, [r3, #32]
 800de5a:	4718      	bx	r3
 800de5c:	4770      	bx	lr
 800de5e:	bf00      	nop
 800de60:	200150e8 	.word	0x200150e8

0800de64 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800de64:	2300      	movs	r3, #0
 800de66:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800de6a:	4770      	bx	lr

0800de6c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800de6c:	4b03      	ldr	r3, [pc, #12]	@ (800de7c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800de6e:	6818      	ldr	r0, [r3, #0]
 800de70:	b110      	cbz	r0, 800de78 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800de72:	6803      	ldr	r3, [r0, #0]
 800de74:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800de76:	4718      	bx	r3
 800de78:	4770      	bx	lr
 800de7a:	bf00      	nop
 800de7c:	200150e8 	.word	0x200150e8

0800de80 <_ZN8touchgfx11ApplicationD1Ev>:
 800de80:	4770      	bx	lr

0800de82 <_ZN8touchgfx11ApplicationD0Ev>:
 800de82:	b510      	push	{r4, lr}
 800de84:	4604      	mov	r4, r0
 800de86:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800de8a:	f010 fda2 	bl	801e9d2 <_ZdlPvj>
 800de8e:	4620      	mov	r0, r4
 800de90:	bd10      	pop	{r4, pc}

0800de92 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800de92:	b510      	push	{r4, lr}
 800de94:	f9b1 4000 	ldrsh.w	r4, [r1]
 800de98:	888a      	ldrh	r2, [r1, #4]
 800de9a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800de9e:	4422      	add	r2, r4
 800dea0:	b212      	sxth	r2, r2
 800dea2:	4293      	cmp	r3, r2
 800dea4:	da15      	bge.n	800ded2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800dea6:	8882      	ldrh	r2, [r0, #4]
 800dea8:	4413      	add	r3, r2
 800deaa:	b21b      	sxth	r3, r3
 800deac:	429c      	cmp	r4, r3
 800deae:	da10      	bge.n	800ded2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800deb0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800deb4:	88c9      	ldrh	r1, [r1, #6]
 800deb6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800deba:	4419      	add	r1, r3
 800debc:	b209      	sxth	r1, r1
 800debe:	428a      	cmp	r2, r1
 800dec0:	da07      	bge.n	800ded2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800dec2:	88c0      	ldrh	r0, [r0, #6]
 800dec4:	4410      	add	r0, r2
 800dec6:	b200      	sxth	r0, r0
 800dec8:	4283      	cmp	r3, r0
 800deca:	bfac      	ite	ge
 800decc:	2000      	movge	r0, #0
 800dece:	2001      	movlt	r0, #1
 800ded0:	bd10      	pop	{r4, pc}
 800ded2:	2000      	movs	r0, #0
 800ded4:	e7fc      	b.n	800ded0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800ded6 <_ZN8touchgfx4Rect10restrictToEss>:
 800ded6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800deda:	2b00      	cmp	r3, #0
 800dedc:	b510      	push	{r4, lr}
 800dede:	da04      	bge.n	800deea <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800dee0:	8884      	ldrh	r4, [r0, #4]
 800dee2:	4423      	add	r3, r4
 800dee4:	8083      	strh	r3, [r0, #4]
 800dee6:	2300      	movs	r3, #0
 800dee8:	8003      	strh	r3, [r0, #0]
 800deea:	f9b0 4000 	ldrsh.w	r4, [r0]
 800deee:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800def2:	1b09      	subs	r1, r1, r4
 800def4:	428b      	cmp	r3, r1
 800def6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800defa:	bfc8      	it	gt
 800defc:	8081      	strhgt	r1, [r0, #4]
 800defe:	2b00      	cmp	r3, #0
 800df00:	da04      	bge.n	800df0c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800df02:	88c1      	ldrh	r1, [r0, #6]
 800df04:	440b      	add	r3, r1
 800df06:	80c3      	strh	r3, [r0, #6]
 800df08:	2300      	movs	r3, #0
 800df0a:	8043      	strh	r3, [r0, #2]
 800df0c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800df10:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800df14:	1a52      	subs	r2, r2, r1
 800df16:	4293      	cmp	r3, r2
 800df18:	bfc8      	it	gt
 800df1a:	80c2      	strhgt	r2, [r0, #6]
 800df1c:	bd10      	pop	{r4, pc}
	...

0800df20 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800df20:	4b10      	ldr	r3, [pc, #64]	@ (800df64 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800df22:	b510      	push	{r4, lr}
 800df24:	460c      	mov	r4, r1
 800df26:	f9b3 2000 	ldrsh.w	r2, [r3]
 800df2a:	4b0f      	ldr	r3, [pc, #60]	@ (800df68 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800df2c:	4620      	mov	r0, r4
 800df2e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800df32:	f7ff ffd0 	bl	800ded6 <_ZN8touchgfx4Rect10restrictToEss>
 800df36:	4b0d      	ldr	r3, [pc, #52]	@ (800df6c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800df38:	6818      	ldr	r0, [r3, #0]
 800df3a:	b190      	cbz	r0, 800df62 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800df3c:	6803      	ldr	r3, [r0, #0]
 800df3e:	4621      	mov	r1, r4
 800df40:	689b      	ldr	r3, [r3, #8]
 800df42:	4798      	blx	r3
 800df44:	4b0a      	ldr	r3, [pc, #40]	@ (800df70 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800df46:	6818      	ldr	r0, [r3, #0]
 800df48:	b118      	cbz	r0, 800df52 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800df4a:	6803      	ldr	r3, [r0, #0]
 800df4c:	4621      	mov	r1, r4
 800df4e:	689b      	ldr	r3, [r3, #8]
 800df50:	4798      	blx	r3
 800df52:	4b08      	ldr	r3, [pc, #32]	@ (800df74 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800df54:	4621      	mov	r1, r4
 800df56:	6818      	ldr	r0, [r3, #0]
 800df58:	6803      	ldr	r3, [r0, #0]
 800df5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df5e:	69db      	ldr	r3, [r3, #28]
 800df60:	4718      	bx	r3
 800df62:	bd10      	pop	{r4, pc}
 800df64:	200150a2 	.word	0x200150a2
 800df68:	200150a0 	.word	0x200150a0
 800df6c:	200150e8 	.word	0x200150e8
 800df70:	200150e4 	.word	0x200150e4
 800df74:	200150ac 	.word	0x200150ac

0800df78 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800df78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800df7a:	4606      	mov	r6, r0
 800df7c:	4608      	mov	r0, r1
 800df7e:	460f      	mov	r7, r1
 800df80:	f7fc fce7 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800df84:	b9e8      	cbnz	r0, 800dfc2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800df86:	f9b7 5000 	ldrsh.w	r5, [r7]
 800df8a:	f9b6 4000 	ldrsh.w	r4, [r6]
 800df8e:	42a5      	cmp	r5, r4
 800df90:	db17      	blt.n	800dfc2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800df92:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800df96:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800df9a:	429a      	cmp	r2, r3
 800df9c:	db11      	blt.n	800dfc2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800df9e:	88b9      	ldrh	r1, [r7, #4]
 800dfa0:	440d      	add	r5, r1
 800dfa2:	88b1      	ldrh	r1, [r6, #4]
 800dfa4:	440c      	add	r4, r1
 800dfa6:	b22d      	sxth	r5, r5
 800dfa8:	b224      	sxth	r4, r4
 800dfaa:	42a5      	cmp	r5, r4
 800dfac:	dc09      	bgt.n	800dfc2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800dfae:	88f8      	ldrh	r0, [r7, #6]
 800dfb0:	4410      	add	r0, r2
 800dfb2:	88f2      	ldrh	r2, [r6, #6]
 800dfb4:	4413      	add	r3, r2
 800dfb6:	b200      	sxth	r0, r0
 800dfb8:	b21b      	sxth	r3, r3
 800dfba:	4298      	cmp	r0, r3
 800dfbc:	bfcc      	ite	gt
 800dfbe:	2000      	movgt	r0, #0
 800dfc0:	2001      	movle	r0, #1
 800dfc2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800dfc4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800dfc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dfc6:	4604      	mov	r4, r0
 800dfc8:	4608      	mov	r0, r1
 800dfca:	460d      	mov	r5, r1
 800dfcc:	f7fc fcc1 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dfd0:	b978      	cbnz	r0, 800dff2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800dfd2:	4620      	mov	r0, r4
 800dfd4:	f7fc fcbd 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dfd8:	f9b5 6000 	ldrsh.w	r6, [r5]
 800dfdc:	b150      	cbz	r0, 800dff4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800dfde:	8026      	strh	r6, [r4, #0]
 800dfe0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800dfe4:	8063      	strh	r3, [r4, #2]
 800dfe6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800dfea:	80a3      	strh	r3, [r4, #4]
 800dfec:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800dff0:	80e3      	strh	r3, [r4, #6]
 800dff2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dff4:	f9b4 1000 	ldrsh.w	r1, [r4]
 800dff8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800dffc:	42b1      	cmp	r1, r6
 800dffe:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800e002:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800e006:	460f      	mov	r7, r1
 800e008:	88ed      	ldrh	r5, [r5, #6]
 800e00a:	bfa8      	it	ge
 800e00c:	4637      	movge	r7, r6
 800e00e:	4293      	cmp	r3, r2
 800e010:	4618      	mov	r0, r3
 800e012:	4466      	add	r6, ip
 800e014:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800e018:	bfa8      	it	ge
 800e01a:	4610      	movge	r0, r2
 800e01c:	442a      	add	r2, r5
 800e01e:	88e5      	ldrh	r5, [r4, #6]
 800e020:	4461      	add	r1, ip
 800e022:	b236      	sxth	r6, r6
 800e024:	8027      	strh	r7, [r4, #0]
 800e026:	442b      	add	r3, r5
 800e028:	b209      	sxth	r1, r1
 800e02a:	b212      	sxth	r2, r2
 800e02c:	8060      	strh	r0, [r4, #2]
 800e02e:	b21b      	sxth	r3, r3
 800e030:	428e      	cmp	r6, r1
 800e032:	bfac      	ite	ge
 800e034:	ebc7 0106 	rsbge	r1, r7, r6
 800e038:	ebc7 0101 	rsblt	r1, r7, r1
 800e03c:	429a      	cmp	r2, r3
 800e03e:	bfac      	ite	ge
 800e040:	ebc0 0202 	rsbge	r2, r0, r2
 800e044:	ebc0 0203 	rsblt	r2, r0, r3
 800e048:	80a1      	strh	r1, [r4, #4]
 800e04a:	80e2      	strh	r2, [r4, #6]
 800e04c:	e7d1      	b.n	800dff2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800e050 <_ZN8touchgfx11Application11getInstanceEv>:
 800e050:	4b01      	ldr	r3, [pc, #4]	@ (800e058 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800e052:	6818      	ldr	r0, [r3, #0]
 800e054:	4770      	bx	lr
 800e056:	bf00      	nop
 800e058:	200150f8 	.word	0x200150f8

0800e05c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800e05c:	2300      	movs	r3, #0
 800e05e:	b510      	push	{r4, lr}
 800e060:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800e064:	4604      	mov	r4, r0
 800e066:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800e06a:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800e06e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800e072:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800e076:	429a      	cmp	r2, r3
 800e078:	d90e      	bls.n	800e098 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800e07a:	18e2      	adds	r2, r4, r3
 800e07c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800e080:	b122      	cbz	r2, 800e08c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800e082:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800e086:	6803      	ldr	r3, [r0, #0]
 800e088:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e08a:	4798      	blx	r3
 800e08c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800e090:	3301      	adds	r3, #1
 800e092:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800e096:	e7ea      	b.n	800e06e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800e098:	bd10      	pop	{r4, pc}

0800e09a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800e09a:	2300      	movs	r3, #0
 800e09c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800e0a0:	30a4      	adds	r0, #164	@ 0xa4
 800e0a2:	f820 3c24 	strh.w	r3, [r0, #-36]
 800e0a6:	f802 3b01 	strb.w	r3, [r2], #1
 800e0aa:	4282      	cmp	r2, r0
 800e0ac:	d1fb      	bne.n	800e0a6 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800e0ae:	4770      	bx	lr

0800e0b0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800e0b0:	b570      	push	{r4, r5, r6, lr}
 800e0b2:	4c0b      	ldr	r4, [pc, #44]	@ (800e0e0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800e0b4:	4605      	mov	r5, r0
 800e0b6:	460e      	mov	r6, r1
 800e0b8:	6820      	ldr	r0, [r4, #0]
 800e0ba:	b110      	cbz	r0, 800e0c2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800e0bc:	6803      	ldr	r3, [r0, #0]
 800e0be:	695b      	ldr	r3, [r3, #20]
 800e0c0:	4798      	blx	r3
 800e0c2:	1d28      	adds	r0, r5, #4
 800e0c4:	f7ff ffe9 	bl	800e09a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800e0c8:	6026      	str	r6, [r4, #0]
 800e0ca:	6833      	ldr	r3, [r6, #0]
 800e0cc:	4630      	mov	r0, r6
 800e0ce:	68db      	ldr	r3, [r3, #12]
 800e0d0:	4798      	blx	r3
 800e0d2:	682b      	ldr	r3, [r5, #0]
 800e0d4:	4628      	mov	r0, r5
 800e0d6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e0d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e0dc:	4718      	bx	r3
 800e0de:	bf00      	nop
 800e0e0:	200150e8 	.word	0x200150e8

0800e0e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800e0e4:	2300      	movs	r3, #0
 800e0e6:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800e0ea:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800e0ee:	461a      	mov	r2, r3
 800e0f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e0f2:	461c      	mov	r4, r3
 800e0f4:	461d      	mov	r5, r3
 800e0f6:	459c      	cmp	ip, r3
 800e0f8:	dd1a      	ble.n	800e130 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800e0fa:	18c6      	adds	r6, r0, r3
 800e0fc:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800e100:	b16e      	cbz	r6, 800e11e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800e102:	429a      	cmp	r2, r3
 800e104:	d008      	beq.n	800e118 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800e106:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800e10a:	fa1f fe82 	uxth.w	lr, r2
 800e10e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800e112:	1887      	adds	r7, r0, r2
 800e114:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800e118:	3201      	adds	r2, #1
 800e11a:	3301      	adds	r3, #1
 800e11c:	e7eb      	b.n	800e0f6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800e11e:	4299      	cmp	r1, r3
 800e120:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800e124:	bfa8      	it	ge
 800e126:	3501      	addge	r5, #1
 800e128:	429e      	cmp	r6, r3
 800e12a:	bfc8      	it	gt
 800e12c:	3401      	addgt	r4, #1
 800e12e:	e7f4      	b.n	800e11a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800e130:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800e134:	1b49      	subs	r1, r1, r5
 800e136:	1b1b      	subs	r3, r3, r4
 800e138:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800e13c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800e140:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800e144:	4293      	cmp	r3, r2
 800e146:	dd03      	ble.n	800e150 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800e148:	3b01      	subs	r3, #1
 800e14a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800e14e:	e7f7      	b.n	800e140 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800e150:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800e154 <_ZN8touchgfx11Application15handleTickEventEv>:
 800e154:	b570      	push	{r4, r5, r6, lr}
 800e156:	4d16      	ldr	r5, [pc, #88]	@ (800e1b0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800e158:	4604      	mov	r4, r0
 800e15a:	6828      	ldr	r0, [r5, #0]
 800e15c:	b140      	cbz	r0, 800e170 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800e15e:	7a03      	ldrb	r3, [r0, #8]
 800e160:	b933      	cbnz	r3, 800e170 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800e162:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800e166:	6803      	ldr	r3, [r0, #0]
 800e168:	689b      	ldr	r3, [r3, #8]
 800e16a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e16e:	4718      	bx	r3
 800e170:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800e174:	4e0f      	ldr	r6, [pc, #60]	@ (800e1b4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800e176:	b973      	cbnz	r3, 800e196 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800e178:	b168      	cbz	r0, 800e196 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800e17a:	7a03      	ldrb	r3, [r0, #8]
 800e17c:	b15b      	cbz	r3, 800e196 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800e17e:	6830      	ldr	r0, [r6, #0]
 800e180:	b110      	cbz	r0, 800e188 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800e182:	6803      	ldr	r3, [r0, #0]
 800e184:	691b      	ldr	r3, [r3, #16]
 800e186:	4798      	blx	r3
 800e188:	6828      	ldr	r0, [r5, #0]
 800e18a:	6803      	ldr	r3, [r0, #0]
 800e18c:	68db      	ldr	r3, [r3, #12]
 800e18e:	4798      	blx	r3
 800e190:	2301      	movs	r3, #1
 800e192:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800e196:	3404      	adds	r4, #4
 800e198:	4620      	mov	r0, r4
 800e19a:	f7ff ff5f 	bl	800e05c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800e19e:	4620      	mov	r0, r4
 800e1a0:	f7ff ffa0 	bl	800e0e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800e1a4:	6830      	ldr	r0, [r6, #0]
 800e1a6:	b110      	cbz	r0, 800e1ae <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800e1a8:	6803      	ldr	r3, [r0, #0]
 800e1aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e1ac:	e7dd      	b.n	800e16a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800e1ae:	bd70      	pop	{r4, r5, r6, pc}
 800e1b0:	200150ec 	.word	0x200150ec
 800e1b4:	200150e8 	.word	0x200150e8

0800e1b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800e1b8:	4603      	mov	r3, r0
 800e1ba:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800e1be:	2200      	movs	r2, #0
 800e1c0:	801a      	strh	r2, [r3, #0]
 800e1c2:	3308      	adds	r3, #8
 800e1c4:	f823 2c06 	strh.w	r2, [r3, #-6]
 800e1c8:	f823 2c04 	strh.w	r2, [r3, #-4]
 800e1cc:	f823 2c02 	strh.w	r2, [r3, #-2]
 800e1d0:	428b      	cmp	r3, r1
 800e1d2:	d1f5      	bne.n	800e1c0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800e1d4:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800e1d8:	4770      	bx	lr
	...

0800e1dc <_ZN8touchgfx11ApplicationC1Ev>:
 800e1dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e1de:	4b1d      	ldr	r3, [pc, #116]	@ (800e254 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800e1e0:	4606      	mov	r6, r0
 800e1e2:	4604      	mov	r4, r0
 800e1e4:	2500      	movs	r5, #0
 800e1e6:	f846 3b04 	str.w	r3, [r6], #4
 800e1ea:	22a8      	movs	r2, #168	@ 0xa8
 800e1ec:	2100      	movs	r1, #0
 800e1ee:	4630      	mov	r0, r6
 800e1f0:	f010 feba 	bl	801ef68 <memset>
 800e1f4:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800e1f8:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800e1fc:	4f16      	ldr	r7, [pc, #88]	@ (800e258 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800e1fe:	f7ff ffdb 	bl	800e1b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e202:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800e206:	f7ff ffd7 	bl	800e1b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e20a:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800e20e:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800e212:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800e216:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800e21a:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800e21e:	490f      	ldr	r1, [pc, #60]	@ (800e25c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800e220:	480f      	ldr	r0, [pc, #60]	@ (800e260 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800e222:	f010 facd 	bl	801e7c0 <CRC_Lock>
 800e226:	4b0f      	ldr	r3, [pc, #60]	@ (800e264 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800e228:	b158      	cbz	r0, 800e242 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800e22a:	801d      	strh	r5, [r3, #0]
 800e22c:	2300      	movs	r3, #0
 800e22e:	4a0e      	ldr	r2, [pc, #56]	@ (800e268 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800e230:	4630      	mov	r0, r6
 800e232:	6013      	str	r3, [r2, #0]
 800e234:	4a0d      	ldr	r2, [pc, #52]	@ (800e26c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800e236:	603b      	str	r3, [r7, #0]
 800e238:	6013      	str	r3, [r2, #0]
 800e23a:	f7ff ff2e 	bl	800e09a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800e23e:	4620      	mov	r0, r4
 800e240:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e242:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800e246:	2002      	movs	r0, #2
 800e248:	801a      	strh	r2, [r3, #0]
 800e24a:	6038      	str	r0, [r7, #0]
 800e24c:	f001 fa58 	bl	800f700 <_ZN8touchgfx6Screen4drawEv>
 800e250:	e7ec      	b.n	800e22c <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800e252:	bf00      	nop
 800e254:	08021624 	.word	0x08021624
 800e258:	200150e8 	.word	0x200150e8
 800e25c:	b5e8b5cd 	.word	0xb5e8b5cd
 800e260:	f407a5c2 	.word	0xf407a5c2
 800e264:	20000044 	.word	0x20000044
 800e268:	200150f8 	.word	0x200150f8
 800e26c:	200150ec 	.word	0x200150ec

0800e270 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800e270:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800e274:	3b01      	subs	r3, #1
 800e276:	b29b      	uxth	r3, r3
 800e278:	428b      	cmp	r3, r1
 800e27a:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800e27e:	b510      	push	{r4, lr}
 800e280:	d908      	bls.n	800e294 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800e282:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800e286:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800e28a:	681a      	ldr	r2, [r3, #0]
 800e28c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800e290:	685a      	ldr	r2, [r3, #4]
 800e292:	6062      	str	r2, [r4, #4]
 800e294:	bd10      	pop	{r4, pc}
	...

0800e298 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800e298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e29c:	b08f      	sub	sp, #60	@ 0x3c
 800e29e:	4b8f      	ldr	r3, [pc, #572]	@ (800e4dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800e2a0:	4683      	mov	fp, r0
 800e2a2:	ac0a      	add	r4, sp, #40	@ 0x28
 800e2a4:	e884 0006 	stmia.w	r4, {r1, r2}
 800e2a8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e2ac:	4620      	mov	r0, r4
 800e2ae:	4b8c      	ldr	r3, [pc, #560]	@ (800e4e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800e2b0:	f9b3 1000 	ldrsh.w	r1, [r3]
 800e2b4:	f7ff fe0f 	bl	800ded6 <_ZN8touchgfx4Rect10restrictToEss>
 800e2b8:	4620      	mov	r0, r4
 800e2ba:	f7fc fb4a 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e2be:	2800      	cmp	r0, #0
 800e2c0:	d16a      	bne.n	800e398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e2c2:	9403      	str	r4, [sp, #12]
 800e2c4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800e2c8:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800e2cc:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800e2d0:	9301      	str	r3, [sp, #4]
 800e2d2:	35a4      	adds	r5, #164	@ 0xa4
 800e2d4:	b15c      	cbz	r4, 800e2ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800e2d6:	4629      	mov	r1, r5
 800e2d8:	9803      	ldr	r0, [sp, #12]
 800e2da:	f7ff fe4d 	bl	800df78 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e2de:	3c01      	subs	r4, #1
 800e2e0:	b118      	cbz	r0, 800e2ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800e2e2:	b2a1      	uxth	r1, r4
 800e2e4:	9801      	ldr	r0, [sp, #4]
 800e2e6:	f7ff ffc3 	bl	800e270 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e2ea:	3d08      	subs	r5, #8
 800e2ec:	e7f2      	b.n	800e2d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800e2ee:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800e2f2:	f10a 33ff 	add.w	r3, sl, #4294967295
 800e2f6:	f8cd a010 	str.w	sl, [sp, #16]
 800e2fa:	9302      	str	r3, [sp, #8]
 800e2fc:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800e300:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800e304:	9306      	str	r3, [sp, #24]
 800e306:	445c      	add	r4, fp
 800e308:	2500      	movs	r5, #0
 800e30a:	4626      	mov	r6, r4
 800e30c:	f8cd a014 	str.w	sl, [sp, #20]
 800e310:	462f      	mov	r7, r5
 800e312:	9b05      	ldr	r3, [sp, #20]
 800e314:	2b00      	cmp	r3, #0
 800e316:	d073      	beq.n	800e400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e318:	9903      	ldr	r1, [sp, #12]
 800e31a:	4630      	mov	r0, r6
 800e31c:	f7ff fdb9 	bl	800de92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e320:	b350      	cbz	r0, 800e378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800e322:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800e326:	f9b6 c000 	ldrsh.w	ip, [r6]
 800e32a:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800e32e:	45e6      	cmp	lr, ip
 800e330:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800e334:	db33      	blt.n	800e39e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800e336:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800e33a:	88b3      	ldrh	r3, [r6, #4]
 800e33c:	4472      	add	r2, lr
 800e33e:	4463      	add	r3, ip
 800e340:	b212      	sxth	r2, r2
 800e342:	b21b      	sxth	r3, r3
 800e344:	429a      	cmp	r2, r3
 800e346:	dc2a      	bgt.n	800e39e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800e348:	fa1f f289 	uxth.w	r2, r9
 800e34c:	88f3      	ldrh	r3, [r6, #6]
 800e34e:	45c8      	cmp	r8, r9
 800e350:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800e354:	4413      	add	r3, r2
 800e356:	fa1f fc88 	uxth.w	ip, r8
 800e35a:	b29b      	uxth	r3, r3
 800e35c:	fa0f fe83 	sxth.w	lr, r3
 800e360:	db0f      	blt.n	800e382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800e362:	eba3 030c 	sub.w	r3, r3, ip
 800e366:	1ac9      	subs	r1, r1, r3
 800e368:	b209      	sxth	r1, r1
 800e36a:	2900      	cmp	r1, #0
 800e36c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800e370:	dd12      	ble.n	800e398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e372:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800e376:	4605      	mov	r5, r0
 800e378:	9b05      	ldr	r3, [sp, #20]
 800e37a:	3e08      	subs	r6, #8
 800e37c:	3b01      	subs	r3, #1
 800e37e:	9305      	str	r3, [sp, #20]
 800e380:	e7c7      	b.n	800e312 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800e382:	4461      	add	r1, ip
 800e384:	b209      	sxth	r1, r1
 800e386:	4571      	cmp	r1, lr
 800e388:	dc38      	bgt.n	800e3fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e38a:	eba2 020c 	sub.w	r2, r2, ip
 800e38e:	b212      	sxth	r2, r2
 800e390:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800e394:	2a00      	cmp	r2, #0
 800e396:	dcee      	bgt.n	800e376 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e398:	b00f      	add	sp, #60	@ 0x3c
 800e39a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e39e:	45c8      	cmp	r8, r9
 800e3a0:	db2c      	blt.n	800e3fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e3a2:	88f3      	ldrh	r3, [r6, #6]
 800e3a4:	4499      	add	r9, r3
 800e3a6:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800e3aa:	4498      	add	r8, r3
 800e3ac:	fa0f f989 	sxth.w	r9, r9
 800e3b0:	fa0f f888 	sxth.w	r8, r8
 800e3b4:	45c1      	cmp	r9, r8
 800e3b6:	db21      	blt.n	800e3fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e3b8:	fa1f f28c 	uxth.w	r2, ip
 800e3bc:	88b3      	ldrh	r3, [r6, #4]
 800e3be:	45e6      	cmp	lr, ip
 800e3c0:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800e3c4:	4413      	add	r3, r2
 800e3c6:	fa1f f88e 	uxth.w	r8, lr
 800e3ca:	b29b      	uxth	r3, r3
 800e3cc:	fa0f f983 	sxth.w	r9, r3
 800e3d0:	db0a      	blt.n	800e3e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800e3d2:	eba3 0308 	sub.w	r3, r3, r8
 800e3d6:	1ac9      	subs	r1, r1, r3
 800e3d8:	b209      	sxth	r1, r1
 800e3da:	2900      	cmp	r1, #0
 800e3dc:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800e3e0:	ddda      	ble.n	800e398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e3e2:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800e3e6:	e7c6      	b.n	800e376 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e3e8:	4441      	add	r1, r8
 800e3ea:	b209      	sxth	r1, r1
 800e3ec:	4549      	cmp	r1, r9
 800e3ee:	dc05      	bgt.n	800e3fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800e3f0:	eba2 0208 	sub.w	r2, r2, r8
 800e3f4:	b212      	sxth	r2, r2
 800e3f6:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800e3fa:	e7cb      	b.n	800e394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800e3fc:	4607      	mov	r7, r0
 800e3fe:	e7bb      	b.n	800e378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800e400:	2d00      	cmp	r5, #0
 800e402:	d181      	bne.n	800e308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800e404:	2f00      	cmp	r7, #0
 800e406:	f000 81dd 	beq.w	800e7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800e40a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800e40e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800e412:	b2b3      	uxth	r3, r6
 800e414:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800e418:	9305      	str	r3, [sp, #20]
 800e41a:	9a05      	ldr	r2, [sp, #20]
 800e41c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800e420:	4413      	add	r3, r2
 800e422:	b2ba      	uxth	r2, r7
 800e424:	4492      	add	sl, r2
 800e426:	b29b      	uxth	r3, r3
 800e428:	fa1f fa8a 	uxth.w	sl, sl
 800e42c:	fa0f f883 	sxth.w	r8, r3
 800e430:	fa0f f98a 	sxth.w	r9, sl
 800e434:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800e438:	9b04      	ldr	r3, [sp, #16]
 800e43a:	2b00      	cmp	r3, #0
 800e43c:	d052      	beq.n	800e4e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800e43e:	9903      	ldr	r1, [sp, #12]
 800e440:	4620      	mov	r0, r4
 800e442:	f7ff fd26 	bl	800de92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e446:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800e44a:	b1c0      	cbz	r0, 800e47e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e44c:	f9b4 e000 	ldrsh.w	lr, [r4]
 800e450:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800e454:	4576      	cmp	r6, lr
 800e456:	dc22      	bgt.n	800e49e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800e458:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800e45c:	44f4      	add	ip, lr
 800e45e:	fa0f fc8c 	sxth.w	ip, ip
 800e462:	45e0      	cmp	r8, ip
 800e464:	db1b      	blt.n	800e49e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800e466:	428f      	cmp	r7, r1
 800e468:	fa1f fc81 	uxth.w	ip, r1
 800e46c:	88e1      	ldrh	r1, [r4, #6]
 800e46e:	dc0d      	bgt.n	800e48c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800e470:	ebaa 0c0c 	sub.w	ip, sl, ip
 800e474:	f8a4 9002 	strh.w	r9, [r4, #2]
 800e478:	eba1 010c 	sub.w	r1, r1, ip
 800e47c:	80e1      	strh	r1, [r4, #6]
 800e47e:	4628      	mov	r0, r5
 800e480:	9904      	ldr	r1, [sp, #16]
 800e482:	3c08      	subs	r4, #8
 800e484:	4605      	mov	r5, r0
 800e486:	3901      	subs	r1, #1
 800e488:	9104      	str	r1, [sp, #16]
 800e48a:	e7d3      	b.n	800e434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800e48c:	4461      	add	r1, ip
 800e48e:	b209      	sxth	r1, r1
 800e490:	4549      	cmp	r1, r9
 800e492:	dcf5      	bgt.n	800e480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e494:	eba2 0c0c 	sub.w	ip, r2, ip
 800e498:	f8a4 c006 	strh.w	ip, [r4, #6]
 800e49c:	e7ef      	b.n	800e47e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e49e:	428f      	cmp	r7, r1
 800e4a0:	dcee      	bgt.n	800e480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e4a2:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800e4a6:	4461      	add	r1, ip
 800e4a8:	b209      	sxth	r1, r1
 800e4aa:	4589      	cmp	r9, r1
 800e4ac:	dbe8      	blt.n	800e480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e4ae:	4576      	cmp	r6, lr
 800e4b0:	fa1f fc8e 	uxth.w	ip, lr
 800e4b4:	88a1      	ldrh	r1, [r4, #4]
 800e4b6:	dc07      	bgt.n	800e4c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800e4b8:	eba3 0c0c 	sub.w	ip, r3, ip
 800e4bc:	f8a4 8000 	strh.w	r8, [r4]
 800e4c0:	eba1 010c 	sub.w	r1, r1, ip
 800e4c4:	80a1      	strh	r1, [r4, #4]
 800e4c6:	e7da      	b.n	800e47e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e4c8:	4461      	add	r1, ip
 800e4ca:	b209      	sxth	r1, r1
 800e4cc:	4588      	cmp	r8, r1
 800e4ce:	dbd7      	blt.n	800e480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800e4d0:	9905      	ldr	r1, [sp, #20]
 800e4d2:	eba1 0c0c 	sub.w	ip, r1, ip
 800e4d6:	f8a4 c004 	strh.w	ip, [r4, #4]
 800e4da:	e7d0      	b.n	800e47e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e4dc:	200150a2 	.word	0x200150a2
 800e4e0:	200150a0 	.word	0x200150a0
 800e4e4:	2d00      	cmp	r5, #0
 800e4e6:	f000 816d 	beq.w	800e7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800e4ea:	9b06      	ldr	r3, [sp, #24]
 800e4ec:	445b      	add	r3, fp
 800e4ee:	461c      	mov	r4, r3
 800e4f0:	9b02      	ldr	r3, [sp, #8]
 800e4f2:	3301      	adds	r3, #1
 800e4f4:	f000 8166 	beq.w	800e7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800e4f8:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800e4fc:	9803      	ldr	r0, [sp, #12]
 800e4fe:	4629      	mov	r1, r5
 800e500:	f7ff fd3a 	bl	800df78 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e504:	b120      	cbz	r0, 800e510 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800e506:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800e50a:	9801      	ldr	r0, [sp, #4]
 800e50c:	f7ff feb0 	bl	800e270 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e510:	9903      	ldr	r1, [sp, #12]
 800e512:	4628      	mov	r0, r5
 800e514:	f7ff fcbd 	bl	800de92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e518:	2800      	cmp	r0, #0
 800e51a:	f000 809c 	beq.w	800e656 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800e51e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800e522:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800e526:	fa1f f189 	uxth.w	r1, r9
 800e52a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800e52e:	9309      	str	r3, [sp, #36]	@ 0x24
 800e530:	eb01 0c03 	add.w	ip, r1, r3
 800e534:	b283      	uxth	r3, r0
 800e536:	4548      	cmp	r0, r9
 800e538:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800e53c:	fa1f fa8c 	uxth.w	sl, ip
 800e540:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800e544:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800e548:	eb03 050c 	add.w	r5, r3, ip
 800e54c:	b2ad      	uxth	r5, r5
 800e54e:	9505      	str	r5, [sp, #20]
 800e550:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800e554:	9504      	str	r5, [sp, #16]
 800e556:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800e55a:	f340 8099 	ble.w	800e690 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800e55e:	1a5b      	subs	r3, r3, r1
 800e560:	4596      	cmp	lr, r2
 800e562:	fa0f f08a 	sxth.w	r0, sl
 800e566:	b29b      	uxth	r3, r3
 800e568:	b21e      	sxth	r6, r3
 800e56a:	dd2e      	ble.n	800e5ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800e56c:	9f02      	ldr	r7, [sp, #8]
 800e56e:	fa1f fe8e 	uxth.w	lr, lr
 800e572:	b292      	uxth	r2, r2
 800e574:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800e578:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800e57c:	9f04      	ldr	r7, [sp, #16]
 800e57e:	ebae 0102 	sub.w	r1, lr, r2
 800e582:	44a6      	add	lr, r4
 800e584:	1a3f      	subs	r7, r7, r0
 800e586:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800e58a:	b289      	uxth	r1, r1
 800e58c:	4402      	add	r2, r0
 800e58e:	fa0f fe8e 	sxth.w	lr, lr
 800e592:	b20d      	sxth	r5, r1
 800e594:	b212      	sxth	r2, r2
 800e596:	436f      	muls	r7, r5
 800e598:	ebae 0202 	sub.w	r2, lr, r2
 800e59c:	4372      	muls	r2, r6
 800e59e:	4297      	cmp	r7, r2
 800e5a0:	db09      	blt.n	800e5b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800e5a2:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800e5a6:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800e5aa:	449c      	add	ip, r3
 800e5ac:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800e5b0:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800e5b4:	e686      	b.n	800e2c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e5b6:	4421      	add	r1, r4
 800e5b8:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800e5bc:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800e5c0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800e5c4:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800e5c8:	e67c      	b.n	800e2c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e5ca:	9f04      	ldr	r7, [sp, #16]
 800e5cc:	42b8      	cmp	r0, r7
 800e5ce:	da27      	bge.n	800e620 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800e5d0:	9902      	ldr	r1, [sp, #8]
 800e5d2:	1a3f      	subs	r7, r7, r0
 800e5d4:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800e5d8:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800e5dc:	eb05 010e 	add.w	r1, r5, lr
 800e5e0:	fa1f f881 	uxth.w	r8, r1
 800e5e4:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800e5e8:	4411      	add	r1, r2
 800e5ea:	fa0f f988 	sxth.w	r9, r8
 800e5ee:	eba2 020e 	sub.w	r2, r2, lr
 800e5f2:	eba1 0108 	sub.w	r1, r1, r8
 800e5f6:	4372      	muls	r2, r6
 800e5f8:	b289      	uxth	r1, r1
 800e5fa:	fa0f f881 	sxth.w	r8, r1
 800e5fe:	fb08 f707 	mul.w	r7, r8, r7
 800e602:	42ba      	cmp	r2, r7
 800e604:	dc06      	bgt.n	800e614 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800e606:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800e60a:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800e60e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800e612:	e7ca      	b.n	800e5aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800e614:	4429      	add	r1, r5
 800e616:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800e61a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800e61e:	e651      	b.n	800e2c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e620:	9805      	ldr	r0, [sp, #20]
 800e622:	2d06      	cmp	r5, #6
 800e624:	ebaa 0000 	sub.w	r0, sl, r0
 800e628:	b280      	uxth	r0, r0
 800e62a:	fa0f fe80 	sxth.w	lr, r0
 800e62e:	d817      	bhi.n	800e660 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800e630:	9b04      	ldr	r3, [sp, #16]
 800e632:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800e636:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800e63a:	1c6b      	adds	r3, r5, #1
 800e63c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800e640:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800e644:	9b01      	ldr	r3, [sp, #4]
 800e646:	9801      	ldr	r0, [sp, #4]
 800e648:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e64c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e650:	805a      	strh	r2, [r3, #2]
 800e652:	809e      	strh	r6, [r3, #4]
 800e654:	80d9      	strh	r1, [r3, #6]
 800e656:	9b02      	ldr	r3, [sp, #8]
 800e658:	3c08      	subs	r4, #8
 800e65a:	3b01      	subs	r3, #1
 800e65c:	9302      	str	r3, [sp, #8]
 800e65e:	e747      	b.n	800e4f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800e660:	9a02      	ldr	r2, [sp, #8]
 800e662:	45b6      	cmp	lr, r6
 800e664:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e668:	db0d      	blt.n	800e686 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800e66a:	449c      	add	ip, r3
 800e66c:	445a      	add	r2, fp
 800e66e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800e672:	fa1f fc8c 	uxth.w	ip, ip
 800e676:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800e67a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800e67e:	448c      	add	ip, r1
 800e680:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800e684:	e61e      	b.n	800e2c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e686:	445a      	add	r2, fp
 800e688:	4484      	add	ip, r0
 800e68a:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800e68e:	e78f      	b.n	800e5b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800e690:	fa1f f18e 	uxth.w	r1, lr
 800e694:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800e698:	b293      	uxth	r3, r2
 800e69a:	4596      	cmp	lr, r2
 800e69c:	eb01 0806 	add.w	r8, r1, r6
 800e6a0:	9306      	str	r3, [sp, #24]
 800e6a2:	fa1f f888 	uxth.w	r8, r8
 800e6a6:	9f06      	ldr	r7, [sp, #24]
 800e6a8:	fa0f f388 	sxth.w	r3, r8
 800e6ac:	9307      	str	r3, [sp, #28]
 800e6ae:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800e6b2:	443b      	add	r3, r7
 800e6b4:	b29b      	uxth	r3, r3
 800e6b6:	9308      	str	r3, [sp, #32]
 800e6b8:	da24      	bge.n	800e704 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800e6ba:	9905      	ldr	r1, [sp, #20]
 800e6bc:	eba3 0308 	sub.w	r3, r3, r8
 800e6c0:	eba2 020e 	sub.w	r2, r2, lr
 800e6c4:	eba9 0000 	sub.w	r0, r9, r0
 800e6c8:	ebaa 0401 	sub.w	r4, sl, r1
 800e6cc:	b29b      	uxth	r3, r3
 800e6ce:	b2a4      	uxth	r4, r4
 800e6d0:	b219      	sxth	r1, r3
 800e6d2:	b225      	sxth	r5, r4
 800e6d4:	4348      	muls	r0, r1
 800e6d6:	436a      	muls	r2, r5
 800e6d8:	4282      	cmp	r2, r0
 800e6da:	9a02      	ldr	r2, [sp, #8]
 800e6dc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e6e0:	445a      	add	r2, fp
 800e6e2:	dc06      	bgt.n	800e6f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800e6e4:	9b07      	ldr	r3, [sp, #28]
 800e6e6:	44a4      	add	ip, r4
 800e6e8:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800e6ec:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800e6f0:	e75e      	b.n	800e5b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800e6f2:	9904      	ldr	r1, [sp, #16]
 800e6f4:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800e6f8:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800e6fc:	4433      	add	r3, r6
 800e6fe:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800e702:	e5df      	b.n	800e2c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e704:	9f06      	ldr	r7, [sp, #24]
 800e706:	9b04      	ldr	r3, [sp, #16]
 800e708:	1bc9      	subs	r1, r1, r7
 800e70a:	fa0f f78a 	sxth.w	r7, sl
 800e70e:	b289      	uxth	r1, r1
 800e710:	429f      	cmp	r7, r3
 800e712:	fa0f fe81 	sxth.w	lr, r1
 800e716:	dd23      	ble.n	800e760 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 800e718:	9a05      	ldr	r2, [sp, #20]
 800e71a:	eba9 0000 	sub.w	r0, r9, r0
 800e71e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800e722:	ebaa 0202 	sub.w	r2, sl, r2
 800e726:	9d07      	ldr	r5, [sp, #28]
 800e728:	fb0e f000 	mul.w	r0, lr, r0
 800e72c:	b292      	uxth	r2, r2
 800e72e:	eba5 0a03 	sub.w	sl, r5, r3
 800e732:	9b02      	ldr	r3, [sp, #8]
 800e734:	b214      	sxth	r4, r2
 800e736:	00db      	lsls	r3, r3, #3
 800e738:	fb04 fa0a 	mul.w	sl, r4, sl
 800e73c:	445b      	add	r3, fp
 800e73e:	4550      	cmp	r0, sl
 800e740:	db03      	blt.n	800e74a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 800e742:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800e746:	4494      	add	ip, r2
 800e748:	e732      	b.n	800e5b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800e74a:	9a04      	ldr	r2, [sp, #16]
 800e74c:	4431      	add	r1, r6
 800e74e:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800e752:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800e756:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800e75a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800e75e:	e75c      	b.n	800e61a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800e760:	9b08      	ldr	r3, [sp, #32]
 800e762:	2d06      	cmp	r5, #6
 800e764:	eba3 0308 	sub.w	r3, r3, r8
 800e768:	b29b      	uxth	r3, r3
 800e76a:	b218      	sxth	r0, r3
 800e76c:	d813      	bhi.n	800e796 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 800e76e:	9b07      	ldr	r3, [sp, #28]
 800e770:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800e774:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800e778:	1c6b      	adds	r3, r5, #1
 800e77a:	9901      	ldr	r1, [sp, #4]
 800e77c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800e780:	9b01      	ldr	r3, [sp, #4]
 800e782:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800e786:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e78a:	805a      	strh	r2, [r3, #2]
 800e78c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e78e:	f8a3 e006 	strh.w	lr, [r3, #6]
 800e792:	809a      	strh	r2, [r3, #4]
 800e794:	e75f      	b.n	800e656 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800e796:	9c02      	ldr	r4, [sp, #8]
 800e798:	4570      	cmp	r0, lr
 800e79a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800e79e:	db0d      	blt.n	800e7bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 800e7a0:	4431      	add	r1, r6
 800e7a2:	9b06      	ldr	r3, [sp, #24]
 800e7a4:	445c      	add	r4, fp
 800e7a6:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800e7aa:	b289      	uxth	r1, r1
 800e7ac:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800e7b0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800e7b4:	4419      	add	r1, r3
 800e7b6:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800e7ba:	e583      	b.n	800e2c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e7bc:	445c      	add	r4, fp
 800e7be:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800e7c2:	e79b      	b.n	800e6fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800e7c4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800e7c8:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800e7cc:	1e65      	subs	r5, r4, #1
 800e7ce:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800e7d2:	b2ad      	uxth	r5, r5
 800e7d4:	42b5      	cmp	r5, r6
 800e7d6:	d044      	beq.n	800e862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800e7d8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800e7dc:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800e7e0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800e7e4:	4282      	cmp	r2, r0
 800e7e6:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800e7ea:	d11f      	bne.n	800e82c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800e7ec:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800e7f0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800e7f4:	459c      	cmp	ip, r3
 800e7f6:	d119      	bne.n	800e82c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800e7f8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800e7fc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800e800:	19d8      	adds	r0, r3, r7
 800e802:	b200      	sxth	r0, r0
 800e804:	4288      	cmp	r0, r1
 800e806:	d109      	bne.n	800e81c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800e808:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800e80c:	4413      	add	r3, r2
 800e80e:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800e812:	4629      	mov	r1, r5
 800e814:	9801      	ldr	r0, [sp, #4]
 800e816:	f7ff fd2b 	bl	800e270 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e81a:	e003      	b.n	800e824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800e81c:	4411      	add	r1, r2
 800e81e:	b209      	sxth	r1, r1
 800e820:	42b9      	cmp	r1, r7
 800e822:	d0f3      	beq.n	800e80c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 800e824:	3d01      	subs	r5, #1
 800e826:	3c08      	subs	r4, #8
 800e828:	b2ad      	uxth	r5, r5
 800e82a:	e7d3      	b.n	800e7d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800e82c:	42b9      	cmp	r1, r7
 800e82e:	d1f9      	bne.n	800e824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800e830:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800e834:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800e838:	4299      	cmp	r1, r3
 800e83a:	d1f3      	bne.n	800e824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800e83c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800e840:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800e844:	181f      	adds	r7, r3, r0
 800e846:	b23f      	sxth	r7, r7
 800e848:	42ba      	cmp	r2, r7
 800e84a:	d105      	bne.n	800e858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 800e84c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800e850:	440b      	add	r3, r1
 800e852:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800e856:	e7dc      	b.n	800e812 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 800e858:	440a      	add	r2, r1
 800e85a:	b212      	sxth	r2, r2
 800e85c:	4290      	cmp	r0, r2
 800e85e:	d1e1      	bne.n	800e824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800e860:	e7f6      	b.n	800e850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 800e862:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800e866:	2e07      	cmp	r6, #7
 800e868:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800e86c:	d812      	bhi.n	800e894 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 800e86e:	1c75      	adds	r5, r6, #1
 800e870:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800e874:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800e878:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800e87c:	9d01      	ldr	r5, [sp, #4]
 800e87e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800e882:	442c      	add	r4, r5
 800e884:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800e888:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800e88c:	8061      	strh	r1, [r4, #2]
 800e88e:	80a2      	strh	r2, [r4, #4]
 800e890:	80e3      	strh	r3, [r4, #6]
 800e892:	e581      	b.n	800e398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e894:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800e898:	3e01      	subs	r6, #1
 800e89a:	445c      	add	r4, fp
 800e89c:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800e8a0:	f04f 37ff 	mov.w	r7, #4294967295
 800e8a4:	2500      	movs	r5, #0
 800e8a6:	9305      	str	r3, [sp, #20]
 800e8a8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800e8ac:	1e72      	subs	r2, r6, #1
 800e8ae:	9302      	str	r3, [sp, #8]
 800e8b0:	4691      	mov	r9, r2
 800e8b2:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800e8b6:	9304      	str	r3, [sp, #16]
 800e8b8:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800e8bc:	f1b9 3fff 	cmp.w	r9, #4294967295
 800e8c0:	6818      	ldr	r0, [r3, #0]
 800e8c2:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e8c6:	9207      	str	r2, [sp, #28]
 800e8c8:	bf16      	itet	ne
 800e8ca:	9905      	ldrne	r1, [sp, #20]
 800e8cc:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800e8d0:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800e8d4:	9306      	str	r3, [sp, #24]
 800e8d6:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800e8da:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800e8de:	fb18 f801 	smulbb	r8, r8, r1
 800e8e2:	6859      	ldr	r1, [r3, #4]
 800e8e4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e8e8:	4671      	mov	r1, lr
 800e8ea:	a80c      	add	r0, sp, #48	@ 0x30
 800e8ec:	f7ff fb6a 	bl	800dfc4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e8f0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800e8f4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800e8f8:	f04f 0c08 	mov.w	ip, #8
 800e8fc:	9b04      	ldr	r3, [sp, #16]
 800e8fe:	9a02      	ldr	r2, [sp, #8]
 800e900:	fb10 f001 	smulbb	r0, r0, r1
 800e904:	fb02 8803 	mla	r8, r2, r3, r8
 800e908:	eba0 0108 	sub.w	r1, r0, r8
 800e90c:	fb90 f0fc 	sdiv	r0, r0, ip
 800e910:	4288      	cmp	r0, r1
 800e912:	dc20      	bgt.n	800e956 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 800e914:	4551      	cmp	r1, sl
 800e916:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e91a:	da03      	bge.n	800e924 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 800e91c:	b1d9      	cbz	r1, 800e956 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 800e91e:	468a      	mov	sl, r1
 800e920:	464f      	mov	r7, r9
 800e922:	4635      	mov	r5, r6
 800e924:	f109 39ff 	add.w	r9, r9, #4294967295
 800e928:	f119 0f02 	cmn.w	r9, #2
 800e92c:	d1c6      	bne.n	800e8bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 800e92e:	4616      	mov	r6, r2
 800e930:	3201      	adds	r2, #1
 800e932:	f1a4 0408 	sub.w	r4, r4, #8
 800e936:	d1b7      	bne.n	800e8a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 800e938:	9b01      	ldr	r3, [sp, #4]
 800e93a:	b2ac      	uxth	r4, r5
 800e93c:	00ed      	lsls	r5, r5, #3
 800e93e:	1958      	adds	r0, r3, r5
 800e940:	1c7b      	adds	r3, r7, #1
 800e942:	d10b      	bne.n	800e95c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 800e944:	4601      	mov	r1, r0
 800e946:	9803      	ldr	r0, [sp, #12]
 800e948:	f7ff fb3c 	bl	800dfc4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e94c:	4621      	mov	r1, r4
 800e94e:	9801      	ldr	r0, [sp, #4]
 800e950:	f7ff fc8e 	bl	800e270 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e954:	e4b6      	b.n	800e2c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e956:	464f      	mov	r7, r9
 800e958:	4635      	mov	r5, r6
 800e95a:	e7ed      	b.n	800e938 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 800e95c:	9b01      	ldr	r3, [sp, #4]
 800e95e:	00ff      	lsls	r7, r7, #3
 800e960:	445d      	add	r5, fp
 800e962:	19d9      	adds	r1, r3, r7
 800e964:	445f      	add	r7, fp
 800e966:	f7ff fb2d 	bl	800dfc4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e96a:	9b03      	ldr	r3, [sp, #12]
 800e96c:	cb03      	ldmia	r3!, {r0, r1}
 800e96e:	9b03      	ldr	r3, [sp, #12]
 800e970:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800e974:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800e978:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800e97c:	6869      	ldr	r1, [r5, #4]
 800e97e:	c303      	stmia	r3!, {r0, r1}
 800e980:	e7e4      	b.n	800e94c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 800e982:	bf00      	nop

0800e984 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800e984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e988:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800e98c:	b09b      	sub	sp, #108	@ 0x6c
 800e98e:	4604      	mov	r4, r0
 800e990:	4630      	mov	r0, r6
 800e992:	f7fb ffde 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e996:	4605      	mov	r5, r0
 800e998:	b948      	cbnz	r0, 800e9ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800e99a:	6823      	ldr	r3, [r4, #0]
 800e99c:	4620      	mov	r0, r4
 800e99e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e9a0:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e9a4:	4798      	blx	r3
 800e9a6:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800e9aa:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800e9ae:	4bc5      	ldr	r3, [pc, #788]	@ (800ecc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 800e9b0:	681b      	ldr	r3, [r3, #0]
 800e9b2:	2b00      	cmp	r3, #0
 800e9b4:	d03f      	beq.n	800ea36 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800e9b6:	4dc4      	ldr	r5, [pc, #784]	@ (800ecc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800e9b8:	4628      	mov	r0, r5
 800e9ba:	f7fb ffca 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e9be:	4606      	mov	r6, r0
 800e9c0:	2800      	cmp	r0, #0
 800e9c2:	d138      	bne.n	800ea36 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800e9c4:	4628      	mov	r0, r5
 800e9c6:	f7ff f991 	bl	800dcec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e9ca:	6823      	ldr	r3, [r4, #0]
 800e9cc:	6829      	ldr	r1, [r5, #0]
 800e9ce:	4620      	mov	r0, r4
 800e9d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e9d2:	686a      	ldr	r2, [r5, #4]
 800e9d4:	4798      	blx	r3
 800e9d6:	802e      	strh	r6, [r5, #0]
 800e9d8:	806e      	strh	r6, [r5, #2]
 800e9da:	80ae      	strh	r6, [r5, #4]
 800e9dc:	80ee      	strh	r6, [r5, #6]
 800e9de:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800e9e2:	4dba      	ldr	r5, [pc, #744]	@ (800eccc <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800e9e4:	4640      	mov	r0, r8
 800e9e6:	f7ff fbe7 	bl	800e1b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e9ea:	882e      	ldrh	r6, [r5, #0]
 800e9ec:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800e9f0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800e9f4:	4633      	mov	r3, r6
 800e9f6:	42bb      	cmp	r3, r7
 800e9f8:	d224      	bcs.n	800ea44 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800e9fa:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800e9fe:	2907      	cmp	r1, #7
 800ea00:	d816      	bhi.n	800ea30 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800ea02:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800ea06:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800ea0a:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800ea0e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800ea12:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800ea16:	1c4a      	adds	r2, r1, #1
 800ea18:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800ea1c:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800ea20:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800ea24:	f8a2 a002 	strh.w	sl, [r2, #2]
 800ea28:	f8a2 e004 	strh.w	lr, [r2, #4]
 800ea2c:	f8a2 c006 	strh.w	ip, [r2, #6]
 800ea30:	3301      	adds	r3, #1
 800ea32:	b29b      	uxth	r3, r3
 800ea34:	e7df      	b.n	800e9f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800ea36:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800ea3a:	2b00      	cmp	r3, #0
 800ea3c:	d1cf      	bne.n	800e9de <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800ea3e:	b01b      	add	sp, #108	@ 0x6c
 800ea40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea44:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800ea48:	42b3      	cmp	r3, r6
 800ea4a:	d90c      	bls.n	800ea66 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800ea4c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800ea50:	6822      	ldr	r2, [r4, #0]
 800ea52:	3601      	adds	r6, #1
 800ea54:	4620      	mov	r0, r4
 800ea56:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800ea58:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800ea5c:	b2b6      	uxth	r6, r6
 800ea5e:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800ea62:	47b8      	blx	r7
 800ea64:	e7ee      	b.n	800ea44 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800ea66:	4a9a      	ldr	r2, [pc, #616]	@ (800ecd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800ea68:	6813      	ldr	r3, [r2, #0]
 800ea6a:	4691      	mov	r9, r2
 800ea6c:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800ea70:	2b01      	cmp	r3, #1
 800ea72:	f040 80e0 	bne.w	800ec36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 800ea76:	8829      	ldrh	r1, [r5, #0]
 800ea78:	2600      	movs	r6, #0
 800ea7a:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800ea7e:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800ea82:	33ae      	adds	r3, #174	@ 0xae
 800ea84:	428f      	cmp	r7, r1
 800ea86:	f103 0308 	add.w	r3, r3, #8
 800ea8a:	dd0a      	ble.n	800eaa2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800ea8c:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800ea90:	3101      	adds	r1, #1
 800ea92:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800ea96:	4402      	add	r2, r0
 800ea98:	b212      	sxth	r2, r2
 800ea9a:	4296      	cmp	r6, r2
 800ea9c:	bfb8      	it	lt
 800ea9e:	4616      	movlt	r6, r2
 800eaa0:	e7f0      	b.n	800ea84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800eaa2:	4b8c      	ldr	r3, [pc, #560]	@ (800ecd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800eaa4:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 800ecd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 800eaa8:	881b      	ldrh	r3, [r3, #0]
 800eaaa:	2b0f      	cmp	r3, #15
 800eaac:	bf8c      	ite	hi
 800eaae:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800eab2:	f04f 0b01 	movls.w	fp, #1
 800eab6:	2300      	movs	r3, #0
 800eab8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800eabc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800eac0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800eac4:	4b82      	ldr	r3, [pc, #520]	@ (800ecd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800eac6:	4438      	add	r0, r7
 800eac8:	b207      	sxth	r7, r0
 800eaca:	6818      	ldr	r0, [r3, #0]
 800eacc:	42b7      	cmp	r7, r6
 800eace:	6803      	ldr	r3, [r0, #0]
 800ead0:	f280 8083 	bge.w	800ebda <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 800ead4:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800ead8:	4798      	blx	r3
 800eada:	eb07 030b 	add.w	r3, r7, fp
 800eade:	4298      	cmp	r0, r3
 800eae0:	da07      	bge.n	800eaf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800eae2:	42b0      	cmp	r0, r6
 800eae4:	da05      	bge.n	800eaf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800eae6:	4287      	cmp	r7, r0
 800eae8:	dd6c      	ble.n	800ebc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800eaea:	2f00      	cmp	r7, #0
 800eaec:	dd6a      	ble.n	800ebc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800eaee:	4630      	mov	r0, r6
 800eaf0:	e004      	b.n	800eafc <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 800eaf2:	4287      	cmp	r7, r0
 800eaf4:	dcfb      	bgt.n	800eaee <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 800eaf6:	42b0      	cmp	r0, r6
 800eaf8:	bfa8      	it	ge
 800eafa:	4630      	movge	r0, r6
 800eafc:	4b76      	ldr	r3, [pc, #472]	@ (800ecd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800eafe:	1bc0      	subs	r0, r0, r7
 800eb00:	2200      	movs	r2, #0
 800eb02:	f8ad 7016 	strh.w	r7, [sp, #22]
 800eb06:	f9b3 3000 	ldrsh.w	r3, [r3]
 800eb0a:	882f      	ldrh	r7, [r5, #0]
 800eb0c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800eb10:	f8ad 3018 	strh.w	r3, [sp, #24]
 800eb14:	f8ad 001a 	strh.w	r0, [sp, #26]
 800eb18:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800eb1c:	42bb      	cmp	r3, r7
 800eb1e:	d9cd      	bls.n	800eabc <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 800eb20:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800eb24:	ab07      	add	r3, sp, #28
 800eb26:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800eb2a:	6851      	ldr	r1, [r2, #4]
 800eb2c:	c303      	stmia	r3!, {r0, r1}
 800eb2e:	a905      	add	r1, sp, #20
 800eb30:	a807      	add	r0, sp, #28
 800eb32:	f7ff f9ae 	bl	800de92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800eb36:	2800      	cmp	r0, #0
 800eb38:	d04c      	beq.n	800ebd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 800eb3a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800eb3e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800eb42:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800eb46:	4686      	mov	lr, r0
 800eb48:	4290      	cmp	r0, r2
 800eb4a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800eb4e:	4450      	add	r0, sl
 800eb50:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800eb54:	bfb8      	it	lt
 800eb56:	4696      	movlt	lr, r2
 800eb58:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800eb5c:	4452      	add	r2, sl
 800eb5e:	b280      	uxth	r0, r0
 800eb60:	4299      	cmp	r1, r3
 800eb62:	468c      	mov	ip, r1
 800eb64:	b292      	uxth	r2, r2
 800eb66:	9302      	str	r3, [sp, #8]
 800eb68:	bfb8      	it	lt
 800eb6a:	469c      	movlt	ip, r3
 800eb6c:	b203      	sxth	r3, r0
 800eb6e:	fa0f fa82 	sxth.w	sl, r2
 800eb72:	f8ad e01c 	strh.w	lr, [sp, #28]
 800eb76:	f8ad c01e 	strh.w	ip, [sp, #30]
 800eb7a:	4553      	cmp	r3, sl
 800eb7c:	bfb8      	it	lt
 800eb7e:	4602      	movlt	r2, r0
 800eb80:	9b02      	ldr	r3, [sp, #8]
 800eb82:	eba2 020e 	sub.w	r2, r2, lr
 800eb86:	f8ad 2020 	strh.w	r2, [sp, #32]
 800eb8a:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800eb8e:	4411      	add	r1, r2
 800eb90:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800eb94:	4413      	add	r3, r2
 800eb96:	b289      	uxth	r1, r1
 800eb98:	b29b      	uxth	r3, r3
 800eb9a:	b208      	sxth	r0, r1
 800eb9c:	b21a      	sxth	r2, r3
 800eb9e:	4290      	cmp	r0, r2
 800eba0:	bfb8      	it	lt
 800eba2:	460b      	movlt	r3, r1
 800eba4:	eba3 030c 	sub.w	r3, r3, ip
 800eba8:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800ebac:	a807      	add	r0, sp, #28
 800ebae:	f7fb fed0 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ebb2:	b920      	cbnz	r0, 800ebbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 800ebb4:	6823      	ldr	r3, [r4, #0]
 800ebb6:	a907      	add	r1, sp, #28
 800ebb8:	4620      	mov	r0, r4
 800ebba:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ebbc:	4798      	blx	r3
 800ebbe:	3701      	adds	r7, #1
 800ebc0:	b2bf      	uxth	r7, r7
 800ebc2:	e7a9      	b.n	800eb18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 800ebc4:	f8d9 0000 	ldr.w	r0, [r9]
 800ebc8:	2101      	movs	r1, #1
 800ebca:	6803      	ldr	r3, [r0, #0]
 800ebcc:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800ebd0:	4798      	blx	r3
 800ebd2:	e773      	b.n	800eabc <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 800ebd4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800ebd8:	e7e8      	b.n	800ebac <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 800ebda:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ebdc:	4798      	blx	r3
 800ebde:	4b3f      	ldr	r3, [pc, #252]	@ (800ecdc <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800ebe0:	781b      	ldrb	r3, [r3, #0]
 800ebe2:	2b00      	cmp	r3, #0
 800ebe4:	f43f af2b 	beq.w	800ea3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800ebe8:	2300      	movs	r3, #0
 800ebea:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800ebee:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800ebf2:	882b      	ldrh	r3, [r5, #0]
 800ebf4:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800ebf8:	42ab      	cmp	r3, r5
 800ebfa:	f4bf af20 	bcs.w	800ea3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800ebfe:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800ec02:	2907      	cmp	r1, #7
 800ec04:	d814      	bhi.n	800ec30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 800ec06:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800ec0a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800ec0e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800ec12:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800ec16:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800ec1a:	1c4a      	adds	r2, r1, #1
 800ec1c:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800ec20:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800ec24:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800ec28:	f8a2 c002 	strh.w	ip, [r2, #2]
 800ec2c:	8097      	strh	r7, [r2, #4]
 800ec2e:	80d6      	strh	r6, [r2, #6]
 800ec30:	3301      	adds	r3, #1
 800ec32:	b29b      	uxth	r3, r3
 800ec34:	e7e0      	b.n	800ebf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 800ec36:	2b02      	cmp	r3, #2
 800ec38:	f040 8133 	bne.w	800eea2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 800ec3c:	4b28      	ldr	r3, [pc, #160]	@ (800ece0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800ec3e:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800ec42:	781b      	ldrb	r3, [r3, #0]
 800ec44:	2b01      	cmp	r3, #1
 800ec46:	f000 8098 	beq.w	800ed7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800ec4a:	882a      	ldrh	r2, [r5, #0]
 800ec4c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800ec50:	3201      	adds	r2, #1
 800ec52:	b292      	uxth	r2, r2
 800ec54:	2900      	cmp	r1, #0
 800ec56:	d0c2      	beq.n	800ebde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800ec58:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800ec5c:	4694      	mov	ip, r2
 800ec5e:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800ec62:	f04f 0900 	mov.w	r9, #0
 800ec66:	441e      	add	r6, r3
 800ec68:	b236      	sxth	r6, r6
 800ec6a:	fa1f f38c 	uxth.w	r3, ip
 800ec6e:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800ec72:	4299      	cmp	r1, r3
 800ec74:	f240 80be 	bls.w	800edf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 800ec78:	4427      	add	r7, r4
 800ec7a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800ec7e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800ec82:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800ec86:	4283      	cmp	r3, r0
 800ec88:	f340 80a0 	ble.w	800edcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 800ec8c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800ec90:	46e1      	mov	r9, ip
 800ec92:	4406      	add	r6, r0
 800ec94:	b236      	sxth	r6, r6
 800ec96:	429e      	cmp	r6, r3
 800ec98:	bfa8      	it	ge
 800ec9a:	461e      	movge	r6, r3
 800ec9c:	f10c 0c01 	add.w	ip, ip, #1
 800eca0:	e7e3      	b.n	800ec6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 800eca2:	d10a      	bne.n	800ecba <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 800eca4:	4562      	cmp	r2, ip
 800eca6:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800ecaa:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800ecae:	bfb8      	it	lt
 800ecb0:	4662      	movlt	r2, ip
 800ecb2:	4288      	cmp	r0, r1
 800ecb4:	bfb8      	it	lt
 800ecb6:	461f      	movlt	r7, r3
 800ecb8:	e086      	b.n	800edc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 800ecba:	428a      	cmp	r2, r1
 800ecbc:	bfb8      	it	lt
 800ecbe:	460a      	movlt	r2, r1
 800ecc0:	e082      	b.n	800edc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 800ecc2:	bf00      	nop
 800ecc4:	200150e4 	.word	0x200150e4
 800ecc8:	200150f0 	.word	0x200150f0
 800eccc:	20000044 	.word	0x20000044
 800ecd0:	200150ac 	.word	0x200150ac
 800ecd4:	200150a2 	.word	0x200150a2
 800ecd8:	200150a0 	.word	0x200150a0
 800ecdc:	200150aa 	.word	0x200150aa
 800ece0:	200150a4 	.word	0x200150a4
 800ece4:	19a1      	adds	r1, r4, r6
 800ece6:	ab07      	add	r3, sp, #28
 800ece8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800ecec:	6849      	ldr	r1, [r1, #4]
 800ecee:	c303      	stmia	r3!, {r0, r1}
 800ecf0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800ecf4:	a807      	add	r0, sp, #28
 800ecf6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ecfa:	2b13      	cmp	r3, #19
 800ecfc:	440b      	add	r3, r1
 800ecfe:	bfd8      	it	le
 800ed00:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800ed04:	1a9b      	subs	r3, r3, r2
 800ed06:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ed0a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ed0e:	f7ff f807 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ed12:	a807      	add	r0, sp, #28
 800ed14:	f7fb fe1d 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ed18:	bb78      	cbnz	r0, 800ed7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800ed1a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800ed1e:	4426      	add	r6, r4
 800ed20:	f8d9 0000 	ldr.w	r0, [r9]
 800ed24:	f1bc 0f14 	cmp.w	ip, #20
 800ed28:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800ed2c:	f8d0 e000 	ldr.w	lr, [r0]
 800ed30:	bfa8      	it	ge
 800ed32:	f04f 0c14 	movge.w	ip, #20
 800ed36:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800ed3a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ed3e:	fa1f fc8c 	uxth.w	ip, ip
 800ed42:	f8cd c000 	str.w	ip, [sp]
 800ed46:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800ed4a:	47d8      	blx	fp
 800ed4c:	4683      	mov	fp, r0
 800ed4e:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800ed52:	a807      	add	r0, sp, #28
 800ed54:	f7fe ffca 	bl	800dcec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ed58:	6823      	ldr	r3, [r4, #0]
 800ed5a:	4620      	mov	r0, r4
 800ed5c:	a907      	add	r1, sp, #28
 800ed5e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ed60:	4798      	blx	r3
 800ed62:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800ed66:	eba0 000b 	sub.w	r0, r0, fp
 800ed6a:	b200      	sxth	r0, r0
 800ed6c:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800ed70:	b918      	cbnz	r0, 800ed7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800ed72:	b2b9      	uxth	r1, r7
 800ed74:	4650      	mov	r0, sl
 800ed76:	f7ff fa7b 	bl	800e270 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ed7a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800ed7e:	f1bb 0f00 	cmp.w	fp, #0
 800ed82:	f43f af2c 	beq.w	800ebde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800ed86:	882b      	ldrh	r3, [r5, #0]
 800ed88:	2700      	movs	r7, #0
 800ed8a:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800ed8e:	3301      	adds	r3, #1
 800ed90:	b29b      	uxth	r3, r3
 800ed92:	b299      	uxth	r1, r3
 800ed94:	00fe      	lsls	r6, r7, #3
 800ed96:	458b      	cmp	fp, r1
 800ed98:	d9a4      	bls.n	800ece4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 800ed9a:	4426      	add	r6, r4
 800ed9c:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800eda0:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800eda4:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800eda8:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800edac:	4408      	add	r0, r1
 800edae:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800edb2:	4461      	add	r1, ip
 800edb4:	b200      	sxth	r0, r0
 800edb6:	b209      	sxth	r1, r1
 800edb8:	4288      	cmp	r0, r1
 800edba:	f6bf af72 	bge.w	800eca2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 800edbe:	4584      	cmp	ip, r0
 800edc0:	4662      	mov	r2, ip
 800edc2:	461f      	mov	r7, r3
 800edc4:	bfb8      	it	lt
 800edc6:	4602      	movlt	r2, r0
 800edc8:	3301      	adds	r3, #1
 800edca:	e7e2      	b.n	800ed92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 800edcc:	d10e      	bne.n	800edec <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 800edce:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800edd2:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800edd6:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800edda:	4473      	add	r3, lr
 800eddc:	b21b      	sxth	r3, r3
 800edde:	429e      	cmp	r6, r3
 800ede0:	bfa8      	it	ge
 800ede2:	461e      	movge	r6, r3
 800ede4:	4287      	cmp	r7, r0
 800ede6:	bfb8      	it	lt
 800ede8:	46e1      	movlt	r9, ip
 800edea:	e757      	b.n	800ec9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 800edec:	4286      	cmp	r6, r0
 800edee:	bfa8      	it	ge
 800edf0:	4606      	movge	r6, r0
 800edf2:	e753      	b.n	800ec9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 800edf4:	eb0a 0007 	add.w	r0, sl, r7
 800edf8:	4427      	add	r7, r4
 800edfa:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800edfe:	f1bb 0f13 	cmp.w	fp, #19
 800ee02:	bfdc      	itt	le
 800ee04:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800ee08:	445e      	addle	r6, fp
 800ee0a:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800ee0e:	bfd8      	it	le
 800ee10:	b236      	sxthle	r6, r6
 800ee12:	f7fb fd9e 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ee16:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800ee1a:	2800      	cmp	r0, #0
 800ee1c:	f47f af1a 	bne.w	800ec54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 800ee20:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800ee24:	fa1f fb8b 	uxth.w	fp, fp
 800ee28:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800ee2c:	1ab6      	subs	r6, r6, r2
 800ee2e:	4829      	ldr	r0, [pc, #164]	@ (800eed4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 800ee30:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800ee34:	2e14      	cmp	r6, #20
 800ee36:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800ee3a:	6800      	ldr	r0, [r0, #0]
 800ee3c:	bfa8      	it	ge
 800ee3e:	2614      	movge	r6, #20
 800ee40:	f8ad 101c 	strh.w	r1, [sp, #28]
 800ee44:	f8ad 201e 	strh.w	r2, [sp, #30]
 800ee48:	b289      	uxth	r1, r1
 800ee4a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ee4e:	b2b6      	uxth	r6, r6
 800ee50:	f8d0 c000 	ldr.w	ip, [r0]
 800ee54:	b292      	uxth	r2, r2
 800ee56:	455e      	cmp	r6, fp
 800ee58:	bf94      	ite	ls
 800ee5a:	9600      	strls	r6, [sp, #0]
 800ee5c:	f8cd b000 	strhi.w	fp, [sp]
 800ee60:	b29b      	uxth	r3, r3
 800ee62:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800ee66:	47b0      	blx	r6
 800ee68:	6823      	ldr	r3, [r4, #0]
 800ee6a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800ee6e:	a907      	add	r1, sp, #28
 800ee70:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ee72:	4620      	mov	r0, r4
 800ee74:	4798      	blx	r3
 800ee76:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800ee7a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800ee7e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800ee82:	1a5b      	subs	r3, r3, r1
 800ee84:	440a      	add	r2, r1
 800ee86:	b21b      	sxth	r3, r3
 800ee88:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800ee8c:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800ee90:	2b00      	cmp	r3, #0
 800ee92:	f47f aeda 	bne.w	800ec4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 800ee96:	fa1f f189 	uxth.w	r1, r9
 800ee9a:	4650      	mov	r0, sl
 800ee9c:	f7ff f9e8 	bl	800e270 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800eea0:	e6d3      	b.n	800ec4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 800eea2:	882e      	ldrh	r6, [r5, #0]
 800eea4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800eea8:	42b3      	cmp	r3, r6
 800eeaa:	f67f ae98 	bls.w	800ebde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800eeae:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800eeb2:	ab07      	add	r3, sp, #28
 800eeb4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800eeb8:	6851      	ldr	r1, [r2, #4]
 800eeba:	c303      	stmia	r3!, {r0, r1}
 800eebc:	a807      	add	r0, sp, #28
 800eebe:	f7fb fd48 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 800eec2:	b920      	cbnz	r0, 800eece <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 800eec4:	6823      	ldr	r3, [r4, #0]
 800eec6:	a907      	add	r1, sp, #28
 800eec8:	4620      	mov	r0, r4
 800eeca:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800eecc:	4798      	blx	r3
 800eece:	3601      	adds	r6, #1
 800eed0:	b2b6      	uxth	r6, r6
 800eed2:	e7e7      	b.n	800eea4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 800eed4:	200150ac 	.word	0x200150ac

0800eed8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800eed8:	4b03      	ldr	r3, [pc, #12]	@ (800eee8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800eeda:	2200      	movs	r2, #0
 800eedc:	801a      	strh	r2, [r3, #0]
 800eede:	805a      	strh	r2, [r3, #2]
 800eee0:	809a      	strh	r2, [r3, #4]
 800eee2:	80da      	strh	r2, [r3, #6]
 800eee4:	4770      	bx	lr
 800eee6:	bf00      	nop
 800eee8:	200150f0 	.word	0x200150f0

0800eeec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800eeec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eef0:	b09d      	sub	sp, #116	@ 0x74
 800eef2:	4606      	mov	r6, r0
 800eef4:	4614      	mov	r4, r2
 800eef6:	468a      	mov	sl, r1
 800eef8:	a803      	add	r0, sp, #12
 800eefa:	461d      	mov	r5, r3
 800eefc:	f000 fd7a 	bl	800f9f4 <_ZN8touchgfx12TextProviderC1Ev>
 800ef00:	6833      	ldr	r3, [r6, #0]
 800ef02:	4630      	mov	r0, r6
 800ef04:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800ef08:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ef0a:	4798      	blx	r3
 800ef0c:	6833      	ldr	r3, [r6, #0]
 800ef0e:	4607      	mov	r7, r0
 800ef10:	4630      	mov	r0, r6
 800ef12:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ef14:	4798      	blx	r3
 800ef16:	462a      	mov	r2, r5
 800ef18:	2500      	movs	r5, #0
 800ef1a:	4621      	mov	r1, r4
 800ef1c:	9000      	str	r0, [sp, #0]
 800ef1e:	463b      	mov	r3, r7
 800ef20:	462c      	mov	r4, r5
 800ef22:	46a9      	mov	r9, r5
 800ef24:	46a8      	mov	r8, r5
 800ef26:	a803      	add	r0, sp, #12
 800ef28:	f000 fdbf 	bl	800faaa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ef2c:	2300      	movs	r3, #0
 800ef2e:	9302      	str	r3, [sp, #8]
 800ef30:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800ef34:	429c      	cmp	r4, r3
 800ef36:	d002      	beq.n	800ef3e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800ef38:	455c      	cmp	r4, fp
 800ef3a:	bf18      	it	ne
 800ef3c:	4625      	movne	r5, r4
 800ef3e:	ab02      	add	r3, sp, #8
 800ef40:	4632      	mov	r2, r6
 800ef42:	4651      	mov	r1, sl
 800ef44:	a803      	add	r0, sp, #12
 800ef46:	f001 f8b5 	bl	80100b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ef4a:	4604      	mov	r4, r0
 800ef4c:	b108      	cbz	r0, 800ef52 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800ef4e:	280a      	cmp	r0, #10
 800ef50:	d10a      	bne.n	800ef68 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800ef52:	45c1      	cmp	r9, r8
 800ef54:	bf38      	it	cc
 800ef56:	46c1      	movcc	r9, r8
 800ef58:	f04f 0800 	mov.w	r8, #0
 800ef5c:	2c00      	cmp	r4, #0
 800ef5e:	d1e5      	bne.n	800ef2c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ef60:	4648      	mov	r0, r9
 800ef62:	b01d      	add	sp, #116	@ 0x74
 800ef64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef68:	9a02      	ldr	r2, [sp, #8]
 800ef6a:	2a00      	cmp	r2, #0
 800ef6c:	d0de      	beq.n	800ef2c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ef6e:	7b57      	ldrb	r7, [r2, #13]
 800ef70:	4629      	mov	r1, r5
 800ef72:	6833      	ldr	r3, [r6, #0]
 800ef74:	007f      	lsls	r7, r7, #1
 800ef76:	8894      	ldrh	r4, [r2, #4]
 800ef78:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ef7a:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 800ef7e:	7a97      	ldrb	r7, [r2, #10]
 800ef80:	4307      	orrs	r7, r0
 800ef82:	4630      	mov	r0, r6
 800ef84:	4798      	blx	r3
 800ef86:	4438      	add	r0, r7
 800ef88:	4480      	add	r8, r0
 800ef8a:	fa1f f888 	uxth.w	r8, r8
 800ef8e:	e7e5      	b.n	800ef5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800ef90 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ef90:	b508      	push	{r3, lr}
 800ef92:	6803      	ldr	r3, [r0, #0]
 800ef94:	68db      	ldr	r3, [r3, #12]
 800ef96:	4798      	blx	r3
 800ef98:	b128      	cbz	r0, 800efa6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ef9a:	7b43      	ldrb	r3, [r0, #13]
 800ef9c:	7a80      	ldrb	r0, [r0, #10]
 800ef9e:	005b      	lsls	r3, r3, #1
 800efa0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800efa4:	4318      	orrs	r0, r3
 800efa6:	bd08      	pop	{r3, pc}

0800efa8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800efa8:	b40e      	push	{r1, r2, r3}
 800efaa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800efac:	b09e      	sub	sp, #120	@ 0x78
 800efae:	4605      	mov	r5, r0
 800efb0:	ab23      	add	r3, sp, #140	@ 0x8c
 800efb2:	a805      	add	r0, sp, #20
 800efb4:	f853 4b04 	ldr.w	r4, [r3], #4
 800efb8:	9303      	str	r3, [sp, #12]
 800efba:	f000 fd1b 	bl	800f9f4 <_ZN8touchgfx12TextProviderC1Ev>
 800efbe:	682b      	ldr	r3, [r5, #0]
 800efc0:	4628      	mov	r0, r5
 800efc2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800efc4:	4798      	blx	r3
 800efc6:	682b      	ldr	r3, [r5, #0]
 800efc8:	4606      	mov	r6, r0
 800efca:	4628      	mov	r0, r5
 800efcc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800efce:	4798      	blx	r3
 800efd0:	4633      	mov	r3, r6
 800efd2:	4621      	mov	r1, r4
 800efd4:	ae1e      	add	r6, sp, #120	@ 0x78
 800efd6:	2400      	movs	r4, #0
 800efd8:	9000      	str	r0, [sp, #0]
 800efda:	9a03      	ldr	r2, [sp, #12]
 800efdc:	a805      	add	r0, sp, #20
 800efde:	f000 fd64 	bl	800faaa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800efe2:	f846 4d68 	str.w	r4, [r6, #-104]!
 800efe6:	462a      	mov	r2, r5
 800efe8:	4633      	mov	r3, r6
 800efea:	4621      	mov	r1, r4
 800efec:	a805      	add	r0, sp, #20
 800efee:	f001 f861 	bl	80100b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800eff2:	b300      	cbz	r0, 800f036 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 800eff4:	280a      	cmp	r0, #10
 800eff6:	d01a      	beq.n	800f02e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 800eff8:	9f04      	ldr	r7, [sp, #16]
 800effa:	b1c7      	cbz	r7, 800f02e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 800effc:	7b78      	ldrb	r0, [r7, #13]
 800effe:	7a3b      	ldrb	r3, [r7, #8]
 800f000:	00c1      	lsls	r1, r0, #3
 800f002:	88ea      	ldrh	r2, [r5, #6]
 800f004:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800f008:	4319      	orrs	r1, r3
 800f00a:	0643      	lsls	r3, r0, #25
 800f00c:	ea4f 1000 	mov.w	r0, r0, lsl #4
 800f010:	bf48      	it	mi
 800f012:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 800f016:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800f01a:	bf48      	it	mi
 800f01c:	b219      	sxthmi	r1, r3
 800f01e:	79fb      	ldrb	r3, [r7, #7]
 800f020:	4303      	orrs	r3, r0
 800f022:	4413      	add	r3, r2
 800f024:	1a5b      	subs	r3, r3, r1
 800f026:	b21b      	sxth	r3, r3
 800f028:	429c      	cmp	r4, r3
 800f02a:	bfb8      	it	lt
 800f02c:	461c      	movlt	r4, r3
 800f02e:	4633      	mov	r3, r6
 800f030:	462a      	mov	r2, r5
 800f032:	2100      	movs	r1, #0
 800f034:	e7da      	b.n	800efec <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800f036:	b2a0      	uxth	r0, r4
 800f038:	b01e      	add	sp, #120	@ 0x78
 800f03a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f03e:	b003      	add	sp, #12
 800f040:	4770      	bx	lr

0800f042 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800f042:	7a43      	ldrb	r3, [r0, #9]
 800f044:	8880      	ldrh	r0, [r0, #4]
 800f046:	4418      	add	r0, r3
 800f048:	b280      	uxth	r0, r0
 800f04a:	4770      	bx	lr

0800f04c <_ZNK8touchgfx4Font13getFontHeightEv>:
 800f04c:	6803      	ldr	r3, [r0, #0]
 800f04e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f050:	4718      	bx	r3

0800f052 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800f052:	b40e      	push	{r1, r2, r3}
 800f054:	b570      	push	{r4, r5, r6, lr}
 800f056:	b09d      	sub	sp, #116	@ 0x74
 800f058:	4604      	mov	r4, r0
 800f05a:	ab21      	add	r3, sp, #132	@ 0x84
 800f05c:	a803      	add	r0, sp, #12
 800f05e:	f853 5b04 	ldr.w	r5, [r3], #4
 800f062:	9302      	str	r3, [sp, #8]
 800f064:	f000 fcc6 	bl	800f9f4 <_ZN8touchgfx12TextProviderC1Ev>
 800f068:	6823      	ldr	r3, [r4, #0]
 800f06a:	4620      	mov	r0, r4
 800f06c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f06e:	4798      	blx	r3
 800f070:	6823      	ldr	r3, [r4, #0]
 800f072:	4606      	mov	r6, r0
 800f074:	4620      	mov	r0, r4
 800f076:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f078:	2401      	movs	r4, #1
 800f07a:	4798      	blx	r3
 800f07c:	4633      	mov	r3, r6
 800f07e:	9000      	str	r0, [sp, #0]
 800f080:	4629      	mov	r1, r5
 800f082:	9a02      	ldr	r2, [sp, #8]
 800f084:	a803      	add	r0, sp, #12
 800f086:	f000 fd10 	bl	800faaa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f08a:	a803      	add	r0, sp, #12
 800f08c:	f001 f8de 	bl	801024c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f090:	b2a3      	uxth	r3, r4
 800f092:	b138      	cbz	r0, 800f0a4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 800f094:	280a      	cmp	r0, #10
 800f096:	a803      	add	r0, sp, #12
 800f098:	bf04      	itt	eq
 800f09a:	3301      	addeq	r3, #1
 800f09c:	b21c      	sxtheq	r4, r3
 800f09e:	f001 f8d5 	bl	801024c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f0a2:	e7f5      	b.n	800f090 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800f0a4:	4618      	mov	r0, r3
 800f0a6:	b01d      	add	sp, #116	@ 0x74
 800f0a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f0ac:	b003      	add	sp, #12
 800f0ae:	4770      	bx	lr

0800f0b0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800f0b0:	b40e      	push	{r1, r2, r3}
 800f0b2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f0b4:	b09e      	sub	sp, #120	@ 0x78
 800f0b6:	4604      	mov	r4, r0
 800f0b8:	ab23      	add	r3, sp, #140	@ 0x8c
 800f0ba:	a805      	add	r0, sp, #20
 800f0bc:	f853 5b04 	ldr.w	r5, [r3], #4
 800f0c0:	9303      	str	r3, [sp, #12]
 800f0c2:	f000 fc97 	bl	800f9f4 <_ZN8touchgfx12TextProviderC1Ev>
 800f0c6:	6823      	ldr	r3, [r4, #0]
 800f0c8:	4620      	mov	r0, r4
 800f0ca:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f0cc:	4798      	blx	r3
 800f0ce:	6823      	ldr	r3, [r4, #0]
 800f0d0:	4606      	mov	r6, r0
 800f0d2:	4620      	mov	r0, r4
 800f0d4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f0d6:	4798      	blx	r3
 800f0d8:	4633      	mov	r3, r6
 800f0da:	4629      	mov	r1, r5
 800f0dc:	9000      	str	r0, [sp, #0]
 800f0de:	9a03      	ldr	r2, [sp, #12]
 800f0e0:	a805      	add	r0, sp, #20
 800f0e2:	f000 fce2 	bl	800faaa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f0e6:	ad1e      	add	r5, sp, #120	@ 0x78
 800f0e8:	2100      	movs	r1, #0
 800f0ea:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 800f0ee:	4622      	mov	r2, r4
 800f0f0:	a805      	add	r0, sp, #20
 800f0f2:	f845 1d68 	str.w	r1, [r5, #-104]!
 800f0f6:	462b      	mov	r3, r5
 800f0f8:	f000 ffdc 	bl	80100b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f0fc:	b1d8      	cbz	r0, 800f136 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800f0fe:	280a      	cmp	r0, #10
 800f100:	d012      	beq.n	800f128 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800f102:	9804      	ldr	r0, [sp, #16]
 800f104:	b180      	cbz	r0, 800f128 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800f106:	7b47      	ldrb	r7, [r0, #13]
 800f108:	88e2      	ldrh	r2, [r4, #6]
 800f10a:	00fb      	lsls	r3, r7, #3
 800f10c:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f110:	7a03      	ldrb	r3, [r0, #8]
 800f112:	430b      	orrs	r3, r1
 800f114:	0679      	lsls	r1, r7, #25
 800f116:	bf44      	itt	mi
 800f118:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f11c:	b21b      	sxthmi	r3, r3
 800f11e:	1ad3      	subs	r3, r2, r3
 800f120:	b21b      	sxth	r3, r3
 800f122:	429e      	cmp	r6, r3
 800f124:	bfa8      	it	ge
 800f126:	461e      	movge	r6, r3
 800f128:	462b      	mov	r3, r5
 800f12a:	4622      	mov	r2, r4
 800f12c:	2100      	movs	r1, #0
 800f12e:	a805      	add	r0, sp, #20
 800f130:	f000 ffc0 	bl	80100b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f134:	e7e2      	b.n	800f0fc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800f136:	4630      	mov	r0, r6
 800f138:	b01e      	add	sp, #120	@ 0x78
 800f13a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f13e:	b003      	add	sp, #12
 800f140:	4770      	bx	lr

0800f142 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800f142:	b513      	push	{r0, r1, r4, lr}
 800f144:	6803      	ldr	r3, [r0, #0]
 800f146:	2400      	movs	r4, #0
 800f148:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f14c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f150:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f154:	4669      	mov	r1, sp
 800f156:	691b      	ldr	r3, [r3, #16]
 800f158:	9400      	str	r4, [sp, #0]
 800f15a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f15e:	4798      	blx	r3
 800f160:	b002      	add	sp, #8
 800f162:	bd10      	pop	{r4, pc}

0800f164 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800f164:	b538      	push	{r3, r4, r5, lr}
 800f166:	680b      	ldr	r3, [r1, #0]
 800f168:	460c      	mov	r4, r1
 800f16a:	4605      	mov	r5, r0
 800f16c:	68db      	ldr	r3, [r3, #12]
 800f16e:	4798      	blx	r3
 800f170:	6823      	ldr	r3, [r4, #0]
 800f172:	4620      	mov	r0, r4
 800f174:	4629      	mov	r1, r5
 800f176:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f178:	4798      	blx	r3
 800f17a:	4628      	mov	r0, r5
 800f17c:	bd38      	pop	{r3, r4, r5, pc}

0800f17e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800f17e:	b410      	push	{r4}
 800f180:	880a      	ldrh	r2, [r1, #0]
 800f182:	8884      	ldrh	r4, [r0, #4]
 800f184:	4422      	add	r2, r4
 800f186:	800a      	strh	r2, [r1, #0]
 800f188:	884a      	ldrh	r2, [r1, #2]
 800f18a:	88c4      	ldrh	r4, [r0, #6]
 800f18c:	4422      	add	r2, r4
 800f18e:	804a      	strh	r2, [r1, #2]
 800f190:	6940      	ldr	r0, [r0, #20]
 800f192:	b120      	cbz	r0, 800f19e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800f194:	6803      	ldr	r3, [r0, #0]
 800f196:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f19a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f19c:	4718      	bx	r3
 800f19e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f1a2:	4770      	bx	lr

0800f1a4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800f1a4:	b570      	push	{r4, r5, r6, lr}
 800f1a6:	8882      	ldrh	r2, [r0, #4]
 800f1a8:	460c      	mov	r4, r1
 800f1aa:	880b      	ldrh	r3, [r1, #0]
 800f1ac:	4605      	mov	r5, r0
 800f1ae:	4413      	add	r3, r2
 800f1b0:	800b      	strh	r3, [r1, #0]
 800f1b2:	884b      	ldrh	r3, [r1, #2]
 800f1b4:	88c2      	ldrh	r2, [r0, #6]
 800f1b6:	4413      	add	r3, r2
 800f1b8:	804b      	strh	r3, [r1, #2]
 800f1ba:	1d01      	adds	r1, r0, #4
 800f1bc:	4620      	mov	r0, r4
 800f1be:	f7fb fb85 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 800f1c2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f1c6:	2b00      	cmp	r3, #0
 800f1c8:	dd0b      	ble.n	800f1e2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f1ca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f1ce:	2b00      	cmp	r3, #0
 800f1d0:	dd07      	ble.n	800f1e2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f1d2:	6968      	ldr	r0, [r5, #20]
 800f1d4:	b128      	cbz	r0, 800f1e2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f1d6:	6803      	ldr	r3, [r0, #0]
 800f1d8:	4621      	mov	r1, r4
 800f1da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f1dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f1e0:	4718      	bx	r3
 800f1e2:	bd70      	pop	{r4, r5, r6, pc}

0800f1e4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800f1e4:	b570      	push	{r4, r5, r6, lr}
 800f1e6:	8882      	ldrh	r2, [r0, #4]
 800f1e8:	460c      	mov	r4, r1
 800f1ea:	880b      	ldrh	r3, [r1, #0]
 800f1ec:	4605      	mov	r5, r0
 800f1ee:	4413      	add	r3, r2
 800f1f0:	800b      	strh	r3, [r1, #0]
 800f1f2:	884b      	ldrh	r3, [r1, #2]
 800f1f4:	88c2      	ldrh	r2, [r0, #6]
 800f1f6:	4413      	add	r3, r2
 800f1f8:	804b      	strh	r3, [r1, #2]
 800f1fa:	1d01      	adds	r1, r0, #4
 800f1fc:	4620      	mov	r0, r4
 800f1fe:	f7fb fb65 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 800f202:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f206:	2b00      	cmp	r3, #0
 800f208:	dd19      	ble.n	800f23e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800f20a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f20e:	2b00      	cmp	r3, #0
 800f210:	dd15      	ble.n	800f23e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800f212:	6968      	ldr	r0, [r5, #20]
 800f214:	b128      	cbz	r0, 800f222 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800f216:	6803      	ldr	r3, [r0, #0]
 800f218:	4621      	mov	r1, r4
 800f21a:	691b      	ldr	r3, [r3, #16]
 800f21c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f220:	4718      	bx	r3
 800f222:	4b07      	ldr	r3, [pc, #28]	@ (800f240 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800f224:	681b      	ldr	r3, [r3, #0]
 800f226:	3304      	adds	r3, #4
 800f228:	429d      	cmp	r5, r3
 800f22a:	d108      	bne.n	800f23e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800f22c:	f7fe ff10 	bl	800e050 <_ZN8touchgfx11Application11getInstanceEv>
 800f230:	6803      	ldr	r3, [r0, #0]
 800f232:	6821      	ldr	r1, [r4, #0]
 800f234:	6862      	ldr	r2, [r4, #4]
 800f236:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f238:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f23c:	4718      	bx	r3
 800f23e:	bd70      	pop	{r4, r5, r6, pc}
 800f240:	200150e8 	.word	0x200150e8

0800f244 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800f244:	b570      	push	{r4, r5, r6, lr}
 800f246:	4604      	mov	r4, r0
 800f248:	4616      	mov	r6, r2
 800f24a:	460d      	mov	r5, r1
 800f24c:	b901      	cbnz	r1, 800f250 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800f24e:	b192      	cbz	r2, 800f276 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800f250:	6823      	ldr	r3, [r4, #0]
 800f252:	4620      	mov	r0, r4
 800f254:	699b      	ldr	r3, [r3, #24]
 800f256:	4798      	blx	r3
 800f258:	88e2      	ldrh	r2, [r4, #6]
 800f25a:	88a1      	ldrh	r1, [r4, #4]
 800f25c:	4620      	mov	r0, r4
 800f25e:	4432      	add	r2, r6
 800f260:	4429      	add	r1, r5
 800f262:	b212      	sxth	r2, r2
 800f264:	b209      	sxth	r1, r1
 800f266:	f7f3 f812 	bl	800228e <_ZN8touchgfx8Drawable5setXYEss>
 800f26a:	6823      	ldr	r3, [r4, #0]
 800f26c:	4620      	mov	r0, r4
 800f26e:	699b      	ldr	r3, [r3, #24]
 800f270:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f274:	4718      	bx	r3
 800f276:	bd70      	pop	{r4, r5, r6, pc}

0800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800f278:	b510      	push	{r4, lr}
 800f27a:	2300      	movs	r3, #0
 800f27c:	4604      	mov	r4, r0
 800f27e:	4608      	mov	r0, r1
 800f280:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800f284:	8023      	strh	r3, [r4, #0]
 800f286:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f28a:	8063      	strh	r3, [r4, #2]
 800f28c:	6803      	ldr	r3, [r0, #0]
 800f28e:	80a1      	strh	r1, [r4, #4]
 800f290:	4621      	mov	r1, r4
 800f292:	80e2      	strh	r2, [r4, #6]
 800f294:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f296:	4798      	blx	r3
 800f298:	4620      	mov	r0, r4
 800f29a:	bd10      	pop	{r4, pc}

0800f29c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800f29c:	b530      	push	{r4, r5, lr}
 800f29e:	8083      	strh	r3, [r0, #4]
 800f2a0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800f2a4:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800f2a8:	80c3      	strh	r3, [r0, #6]
 800f2aa:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800f2ae:	6141      	str	r1, [r0, #20]
 800f2b0:	7203      	strb	r3, [r0, #8]
 800f2b2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f2b6:	8302      	strh	r2, [r0, #24]
 800f2b8:	7243      	strb	r3, [r0, #9]
 800f2ba:	7a83      	ldrb	r3, [r0, #10]
 800f2bc:	f365 0306 	bfi	r3, r5, #0, #7
 800f2c0:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800f2c4:	f365 13c7 	bfi	r3, r5, #7, #1
 800f2c8:	7283      	strb	r3, [r0, #10]
 800f2ca:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800f2ce:	72c3      	strb	r3, [r0, #11]
 800f2d0:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 800f2d4:	7303      	strb	r3, [r0, #12]
 800f2d6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 800f2da:	81c3      	strh	r3, [r0, #14]
 800f2dc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800f2e0:	8203      	strh	r3, [r0, #16]
 800f2e2:	4b01      	ldr	r3, [pc, #4]	@ (800f2e8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800f2e4:	6003      	str	r3, [r0, #0]
 800f2e6:	bd30      	pop	{r4, r5, pc}
 800f2e8:	08021678 	.word	0x08021678

0800f2ec <_ZNK8touchgfx9ConstFont4findEt>:
 800f2ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f2ee:	6944      	ldr	r4, [r0, #20]
 800f2f0:	b3bc      	cbz	r4, 800f362 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f2f2:	88a3      	ldrh	r3, [r4, #4]
 800f2f4:	8b02      	ldrh	r2, [r0, #24]
 800f2f6:	1acb      	subs	r3, r1, r3
 800f2f8:	f102 32ff 	add.w	r2, r2, #4294967295
 800f2fc:	d431      	bmi.n	800f362 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f2fe:	4293      	cmp	r3, r2
 800f300:	dd0c      	ble.n	800f31c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800f302:	230e      	movs	r3, #14
 800f304:	fb03 4302 	mla	r3, r3, r2, r4
 800f308:	889b      	ldrh	r3, [r3, #4]
 800f30a:	1a5b      	subs	r3, r3, r1
 800f30c:	1ad3      	subs	r3, r2, r3
 800f30e:	429a      	cmp	r2, r3
 800f310:	db27      	blt.n	800f362 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f312:	2b00      	cmp	r3, #0
 800f314:	bfbc      	itt	lt
 800f316:	2302      	movlt	r3, #2
 800f318:	fb92 f3f3 	sdivlt	r3, r2, r3
 800f31c:	2500      	movs	r5, #0
 800f31e:	260e      	movs	r6, #14
 800f320:	4295      	cmp	r5, r2
 800f322:	dc1e      	bgt.n	800f362 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f324:	fb06 4003 	mla	r0, r6, r3, r4
 800f328:	8887      	ldrh	r7, [r0, #4]
 800f32a:	42b9      	cmp	r1, r7
 800f32c:	d01a      	beq.n	800f364 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800f32e:	d20d      	bcs.n	800f34c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800f330:	1e5a      	subs	r2, r3, #1
 800f332:	4295      	cmp	r5, r2
 800f334:	dc15      	bgt.n	800f362 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f336:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800f33a:	1a5b      	subs	r3, r3, r1
 800f33c:	1ad3      	subs	r3, r2, r3
 800f33e:	429a      	cmp	r2, r3
 800f340:	db0f      	blt.n	800f362 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f342:	429d      	cmp	r5, r3
 800f344:	ddec      	ble.n	800f320 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f346:	1953      	adds	r3, r2, r5
 800f348:	105b      	asrs	r3, r3, #1
 800f34a:	e7e9      	b.n	800f320 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f34c:	1c5d      	adds	r5, r3, #1
 800f34e:	42aa      	cmp	r2, r5
 800f350:	db07      	blt.n	800f362 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f352:	8a43      	ldrh	r3, [r0, #18]
 800f354:	1acb      	subs	r3, r1, r3
 800f356:	442b      	add	r3, r5
 800f358:	429d      	cmp	r5, r3
 800f35a:	dc02      	bgt.n	800f362 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f35c:	429a      	cmp	r2, r3
 800f35e:	dadf      	bge.n	800f320 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f360:	e7f1      	b.n	800f346 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800f362:	2000      	movs	r0, #0
 800f364:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f366 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800f366:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f368:	4604      	mov	r4, r0
 800f36a:	4617      	mov	r7, r2
 800f36c:	461e      	mov	r6, r3
 800f36e:	b911      	cbnz	r1, 800f376 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800f370:	2500      	movs	r5, #0
 800f372:	4628      	mov	r0, r5
 800f374:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f376:	290a      	cmp	r1, #10
 800f378:	d0fa      	beq.n	800f370 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f37a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800f37e:	4291      	cmp	r1, r2
 800f380:	d0f6      	beq.n	800f370 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f382:	f242 020b 	movw	r2, #8203	@ 0x200b
 800f386:	4291      	cmp	r1, r2
 800f388:	d0f2      	beq.n	800f370 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f38a:	f7ff ffaf 	bl	800f2ec <_ZNK8touchgfx9ConstFont4findEt>
 800f38e:	4605      	mov	r5, r0
 800f390:	b950      	cbnz	r0, 800f3a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800f392:	6823      	ldr	r3, [r4, #0]
 800f394:	4620      	mov	r0, r4
 800f396:	691b      	ldr	r3, [r3, #16]
 800f398:	4798      	blx	r3
 800f39a:	4601      	mov	r1, r0
 800f39c:	4620      	mov	r0, r4
 800f39e:	f7ff ffa5 	bl	800f2ec <_ZNK8touchgfx9ConstFont4findEt>
 800f3a2:	4605      	mov	r5, r0
 800f3a4:	2800      	cmp	r0, #0
 800f3a6:	d0e3      	beq.n	800f370 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f3a8:	6823      	ldr	r3, [r4, #0]
 800f3aa:	4629      	mov	r1, r5
 800f3ac:	4620      	mov	r0, r4
 800f3ae:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f3b0:	4798      	blx	r3
 800f3b2:	6038      	str	r0, [r7, #0]
 800f3b4:	6823      	ldr	r3, [r4, #0]
 800f3b6:	4620      	mov	r0, r4
 800f3b8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f3ba:	4798      	blx	r3
 800f3bc:	7030      	strb	r0, [r6, #0]
 800f3be:	e7d8      	b.n	800f372 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800f3c0 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800f3c0:	2000      	movs	r0, #0
 800f3c2:	4770      	bx	lr

0800f3c4 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800f3c4:	2001      	movs	r0, #1
 800f3c6:	4770      	bx	lr

0800f3c8 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800f3c8:	2002      	movs	r0, #2
 800f3ca:	4770      	bx	lr

0800f3cc <_ZN8touchgfx6ScreenD1Ev>:
 800f3cc:	4770      	bx	lr

0800f3ce <_ZN8touchgfx12GestureEventD1Ev>:
 800f3ce:	4770      	bx	lr

0800f3d0 <_ZN8touchgfx9DragEventD1Ev>:
 800f3d0:	4770      	bx	lr

0800f3d2 <_ZN8touchgfx10ClickEventD1Ev>:
 800f3d2:	4770      	bx	lr

0800f3d4 <_ZN8touchgfx10ClickEventD0Ev>:
 800f3d4:	b510      	push	{r4, lr}
 800f3d6:	4604      	mov	r4, r0
 800f3d8:	210c      	movs	r1, #12
 800f3da:	f00f fafa 	bl	801e9d2 <_ZdlPvj>
 800f3de:	4620      	mov	r0, r4
 800f3e0:	bd10      	pop	{r4, pc}

0800f3e2 <_ZN8touchgfx9DragEventD0Ev>:
 800f3e2:	b510      	push	{r4, lr}
 800f3e4:	4604      	mov	r4, r0
 800f3e6:	2110      	movs	r1, #16
 800f3e8:	f00f faf3 	bl	801e9d2 <_ZdlPvj>
 800f3ec:	4620      	mov	r0, r4
 800f3ee:	bd10      	pop	{r4, pc}

0800f3f0 <_ZN8touchgfx12GestureEventD0Ev>:
 800f3f0:	b510      	push	{r4, lr}
 800f3f2:	4604      	mov	r4, r0
 800f3f4:	210c      	movs	r1, #12
 800f3f6:	f00f faec 	bl	801e9d2 <_ZdlPvj>
 800f3fa:	4620      	mov	r0, r4
 800f3fc:	bd10      	pop	{r4, pc}

0800f3fe <_ZN8touchgfx6ScreenD0Ev>:
 800f3fe:	b510      	push	{r4, lr}
 800f400:	4604      	mov	r4, r0
 800f402:	213c      	movs	r1, #60	@ 0x3c
 800f404:	f00f fae5 	bl	801e9d2 <_ZdlPvj>
 800f408:	4620      	mov	r0, r4
 800f40a:	bd10      	pop	{r4, pc}

0800f40c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800f40c:	b530      	push	{r4, r5, lr}
 800f40e:	460d      	mov	r5, r1
 800f410:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800f412:	b087      	sub	sp, #28
 800f414:	4604      	mov	r4, r0
 800f416:	b301      	cbz	r1, 800f45a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800f418:	a801      	add	r0, sp, #4
 800f41a:	f7ff ff2d 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f41e:	892a      	ldrh	r2, [r5, #8]
 800f420:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f424:	7928      	ldrb	r0, [r5, #4]
 800f426:	1ad2      	subs	r2, r2, r3
 800f428:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800f42a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f42e:	441a      	add	r2, r3
 800f430:	896b      	ldrh	r3, [r5, #10]
 800f432:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800f436:	f88d 0010 	strb.w	r0, [sp, #16]
 800f43a:	1b5b      	subs	r3, r3, r5
 800f43c:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 800f43e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800f440:	442b      	add	r3, r5
 800f442:	4d07      	ldr	r5, [pc, #28]	@ (800f460 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800f444:	f8ad 1012 	strh.w	r1, [sp, #18]
 800f448:	a903      	add	r1, sp, #12
 800f44a:	9503      	str	r5, [sp, #12]
 800f44c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f450:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f454:	6803      	ldr	r3, [r0, #0]
 800f456:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f458:	4798      	blx	r3
 800f45a:	b007      	add	sp, #28
 800f45c:	bd30      	pop	{r4, r5, pc}
 800f45e:	bf00      	nop
 800f460:	08021708 	.word	0x08021708

0800f464 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800f464:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f468:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800f46a:	b08a      	sub	sp, #40	@ 0x28
 800f46c:	4604      	mov	r4, r0
 800f46e:	460d      	mov	r5, r1
 800f470:	b113      	cbz	r3, 800f478 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800f472:	790b      	ldrb	r3, [r1, #4]
 800f474:	2b00      	cmp	r3, #0
 800f476:	d044      	beq.n	800f502 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f478:	f104 0804 	add.w	r8, r4, #4
 800f47c:	a803      	add	r0, sp, #12
 800f47e:	4641      	mov	r1, r8
 800f480:	f7ff fefa 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f484:	792b      	ldrb	r3, [r5, #4]
 800f486:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800f48a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800f48e:	b983      	cbnz	r3, 800f4b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800f490:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 800f494:	892a      	ldrh	r2, [r5, #8]
 800f496:	88e9      	ldrh	r1, [r5, #6]
 800f498:	4640      	mov	r0, r8
 800f49a:	1b92      	subs	r2, r2, r6
 800f49c:	9301      	str	r3, [sp, #4]
 800f49e:	1bc9      	subs	r1, r1, r7
 800f4a0:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 800f4a4:	b212      	sxth	r2, r2
 800f4a6:	9300      	str	r3, [sp, #0]
 800f4a8:	b209      	sxth	r1, r1
 800f4aa:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 800f4ae:	f7fb f92b 	bl	800a708 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800f4b2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800f4b4:	b329      	cbz	r1, 800f502 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f4b6:	a805      	add	r0, sp, #20
 800f4b8:	f7ff fede 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f4bc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800f4c0:	792b      	ldrb	r3, [r5, #4]
 800f4c2:	a907      	add	r1, sp, #28
 800f4c4:	1abf      	subs	r7, r7, r2
 800f4c6:	88ea      	ldrh	r2, [r5, #6]
 800f4c8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800f4ca:	4417      	add	r7, r2
 800f4cc:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 800f4ce:	f88d 3020 	strb.w	r3, [sp, #32]
 800f4d2:	4417      	add	r7, r2
 800f4d4:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800f4d8:	1ab6      	subs	r6, r6, r2
 800f4da:	892a      	ldrh	r2, [r5, #8]
 800f4dc:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800f4e0:	4416      	add	r6, r2
 800f4e2:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800f4e4:	4416      	add	r6, r2
 800f4e6:	4a08      	ldr	r2, [pc, #32]	@ (800f508 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800f4e8:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800f4ec:	2600      	movs	r6, #0
 800f4ee:	9207      	str	r2, [sp, #28]
 800f4f0:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 800f4f4:	6803      	ldr	r3, [r0, #0]
 800f4f6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f4f8:	4798      	blx	r3
 800f4fa:	792b      	ldrb	r3, [r5, #4]
 800f4fc:	b10b      	cbz	r3, 800f502 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f4fe:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800f502:	b00a      	add	sp, #40	@ 0x28
 800f504:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f508:	080216e0 	.word	0x080216e0

0800f50c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800f50c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f510:	460c      	mov	r4, r1
 800f512:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800f514:	b088      	sub	sp, #32
 800f516:	4605      	mov	r5, r0
 800f518:	2900      	cmp	r1, #0
 800f51a:	d06d      	beq.n	800f5f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800f51c:	4668      	mov	r0, sp
 800f51e:	f7ff feab 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f522:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 800f524:	88e3      	ldrh	r3, [r4, #6]
 800f526:	f9bd 8000 	ldrsh.w	r8, [sp]
 800f52a:	440b      	add	r3, r1
 800f52c:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800f530:	b21b      	sxth	r3, r3
 800f532:	4543      	cmp	r3, r8
 800f534:	db31      	blt.n	800f59a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f536:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800f53a:	44c4      	add	ip, r8
 800f53c:	fa0f fc8c 	sxth.w	ip, ip
 800f540:	4563      	cmp	r3, ip
 800f542:	da2a      	bge.n	800f59a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f544:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 800f546:	8926      	ldrh	r6, [r4, #8]
 800f548:	4416      	add	r6, r2
 800f54a:	b236      	sxth	r6, r6
 800f54c:	42be      	cmp	r6, r7
 800f54e:	db24      	blt.n	800f59a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f550:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800f554:	4438      	add	r0, r7
 800f556:	b200      	sxth	r0, r0
 800f558:	4286      	cmp	r6, r0
 800f55a:	da1e      	bge.n	800f59a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f55c:	8963      	ldrh	r3, [r4, #10]
 800f55e:	4419      	add	r1, r3
 800f560:	b209      	sxth	r1, r1
 800f562:	4541      	cmp	r1, r8
 800f564:	db08      	blt.n	800f578 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f566:	4561      	cmp	r1, ip
 800f568:	da06      	bge.n	800f578 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f56a:	89a3      	ldrh	r3, [r4, #12]
 800f56c:	441a      	add	r2, r3
 800f56e:	b212      	sxth	r2, r2
 800f570:	42ba      	cmp	r2, r7
 800f572:	db01      	blt.n	800f578 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f574:	4282      	cmp	r2, r0
 800f576:	db10      	blt.n	800f59a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f578:	4b21      	ldr	r3, [pc, #132]	@ (800f600 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800f57a:	a904      	add	r1, sp, #16
 800f57c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800f57e:	9304      	str	r3, [sp, #16]
 800f580:	2302      	movs	r3, #2
 800f582:	f88d 3014 	strb.w	r3, [sp, #20]
 800f586:	2300      	movs	r3, #0
 800f588:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f58c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f590:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f594:	6803      	ldr	r3, [r0, #0]
 800f596:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f598:	4798      	blx	r3
 800f59a:	1d29      	adds	r1, r5, #4
 800f59c:	a802      	add	r0, sp, #8
 800f59e:	f7ff fe6b 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f5a2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f5a6:	88e0      	ldrh	r0, [r4, #6]
 800f5a8:	eba3 0808 	sub.w	r8, r3, r8
 800f5ac:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f5b0:	7921      	ldrb	r1, [r4, #4]
 800f5b2:	fa1f f888 	uxth.w	r8, r8
 800f5b6:	1bdf      	subs	r7, r3, r7
 800f5b8:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 800f5bc:	b2bb      	uxth	r3, r7
 800f5be:	4440      	add	r0, r8
 800f5c0:	8922      	ldrh	r2, [r4, #8]
 800f5c2:	8967      	ldrh	r7, [r4, #10]
 800f5c4:	4460      	add	r0, ip
 800f5c6:	89a4      	ldrh	r4, [r4, #12]
 800f5c8:	441a      	add	r2, r3
 800f5ca:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 800f5cc:	44b8      	add	r8, r7
 800f5ce:	4423      	add	r3, r4
 800f5d0:	f8ad 0016 	strh.w	r0, [sp, #22]
 800f5d4:	4432      	add	r2, r6
 800f5d6:	44e0      	add	r8, ip
 800f5d8:	4433      	add	r3, r6
 800f5da:	4c0a      	ldr	r4, [pc, #40]	@ (800f604 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800f5dc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800f5de:	f88d 1014 	strb.w	r1, [sp, #20]
 800f5e2:	a904      	add	r1, sp, #16
 800f5e4:	9404      	str	r4, [sp, #16]
 800f5e6:	f8ad 2018 	strh.w	r2, [sp, #24]
 800f5ea:	f8ad 801a 	strh.w	r8, [sp, #26]
 800f5ee:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f5f2:	6803      	ldr	r3, [r0, #0]
 800f5f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f5f6:	4798      	blx	r3
 800f5f8:	b008      	add	sp, #32
 800f5fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f5fe:	bf00      	nop
 800f600:	080216e0 	.word	0x080216e0
 800f604:	080216f4 	.word	0x080216f4

0800f608 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800f608:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f60a:	4604      	mov	r4, r0
 800f60c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800f610:	3201      	adds	r2, #1
 800f612:	d112      	bne.n	800f63a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800f614:	2500      	movs	r5, #0
 800f616:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f61a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f61e:	6803      	ldr	r3, [r0, #0]
 800f620:	9500      	str	r5, [sp, #0]
 800f622:	466d      	mov	r5, sp
 800f624:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f628:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f62c:	4629      	mov	r1, r5
 800f62e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f630:	4798      	blx	r3
 800f632:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f636:	e884 0003 	stmia.w	r4, {r0, r1}
 800f63a:	4620      	mov	r0, r4
 800f63c:	b003      	add	sp, #12
 800f63e:	bd30      	pop	{r4, r5, pc}

0800f640 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800f640:	b513      	push	{r0, r1, r4, lr}
 800f642:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800f646:	4604      	mov	r4, r0
 800f648:	3301      	adds	r3, #1
 800f64a:	d109      	bne.n	800f660 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800f64c:	4601      	mov	r1, r0
 800f64e:	4668      	mov	r0, sp
 800f650:	f7ff fe12 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f654:	f8bd 3000 	ldrh.w	r3, [sp]
 800f658:	8423      	strh	r3, [r4, #32]
 800f65a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f65e:	8463      	strh	r3, [r4, #34]	@ 0x22
 800f660:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800f664:	b002      	add	sp, #8
 800f666:	bd10      	pop	{r4, pc}

0800f668 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800f668:	b513      	push	{r0, r1, r4, lr}
 800f66a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 800f66e:	4604      	mov	r4, r0
 800f670:	3301      	adds	r3, #1
 800f672:	d109      	bne.n	800f688 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800f674:	4601      	mov	r1, r0
 800f676:	4668      	mov	r0, sp
 800f678:	f7ff fdfe 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f67c:	f8bd 3000 	ldrh.w	r3, [sp]
 800f680:	8423      	strh	r3, [r4, #32]
 800f682:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f686:	8463      	strh	r3, [r4, #34]	@ 0x22
 800f688:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 800f68c:	b002      	add	sp, #8
 800f68e:	bd10      	pop	{r4, pc}

0800f690 <_ZN8touchgfx6ScreenC1Ev>:
 800f690:	b570      	push	{r4, r5, r6, lr}
 800f692:	4b17      	ldr	r3, [pc, #92]	@ (800f6f0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800f694:	4605      	mov	r5, r0
 800f696:	4a17      	ldr	r2, [pc, #92]	@ (800f6f4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800f698:	2101      	movs	r1, #1
 800f69a:	f845 3b04 	str.w	r3, [r5], #4
 800f69e:	2300      	movs	r3, #0
 800f6a0:	6042      	str	r2, [r0, #4]
 800f6a2:	4604      	mov	r4, r0
 800f6a4:	8103      	strh	r3, [r0, #8]
 800f6a6:	8143      	strh	r3, [r0, #10]
 800f6a8:	8183      	strh	r3, [r0, #12]
 800f6aa:	81c3      	strh	r3, [r0, #14]
 800f6ac:	8203      	strh	r3, [r0, #16]
 800f6ae:	8243      	strh	r3, [r0, #18]
 800f6b0:	8283      	strh	r3, [r0, #20]
 800f6b2:	82c3      	strh	r3, [r0, #22]
 800f6b4:	6203      	str	r3, [r0, #32]
 800f6b6:	8483      	strh	r3, [r0, #36]	@ 0x24
 800f6b8:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800f6ba:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 800f6be:	6343      	str	r3, [r0, #52]	@ 0x34
 800f6c0:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800f6c4:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 800f6c8:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800f6cc:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 800f6d0:	4b09      	ldr	r3, [pc, #36]	@ (800f6f8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800f6d2:	4628      	mov	r0, r5
 800f6d4:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f6d8:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800f6da:	4a08      	ldr	r2, [pc, #32]	@ (800f6fc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800f6dc:	f9b2 1000 	ldrsh.w	r1, [r2]
 800f6e0:	4798      	blx	r3
 800f6e2:	6863      	ldr	r3, [r4, #4]
 800f6e4:	4628      	mov	r0, r5
 800f6e6:	4631      	mov	r1, r6
 800f6e8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f6ea:	4798      	blx	r3
 800f6ec:	4620      	mov	r0, r4
 800f6ee:	bd70      	pop	{r4, r5, r6, pc}
 800f6f0:	0802171c 	.word	0x0802171c
 800f6f4:	08021234 	.word	0x08021234
 800f6f8:	200150a2 	.word	0x200150a2
 800f6fc:	200150a0 	.word	0x200150a0

0800f700 <_ZN8touchgfx6Screen4drawEv>:
 800f700:	4b09      	ldr	r3, [pc, #36]	@ (800f728 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800f702:	b507      	push	{r0, r1, r2, lr}
 800f704:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f708:	2100      	movs	r1, #0
 800f70a:	4b08      	ldr	r3, [pc, #32]	@ (800f72c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800f70c:	9100      	str	r1, [sp, #0]
 800f70e:	4669      	mov	r1, sp
 800f710:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f714:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f718:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f71c:	6803      	ldr	r3, [r0, #0]
 800f71e:	689b      	ldr	r3, [r3, #8]
 800f720:	4798      	blx	r3
 800f722:	b003      	add	sp, #12
 800f724:	f85d fb04 	ldr.w	pc, [sp], #4
 800f728:	200150a0 	.word	0x200150a0
 800f72c:	200150a2 	.word	0x200150a2

0800f730 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800f730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f734:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800f738:	b089      	sub	sp, #36	@ 0x24
 800f73a:	4680      	mov	r8, r0
 800f73c:	460c      	mov	r4, r1
 800f73e:	2b00      	cmp	r3, #0
 800f740:	4615      	mov	r5, r2
 800f742:	dd0e      	ble.n	800f762 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f744:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f748:	2b00      	cmp	r3, #0
 800f74a:	dd0a      	ble.n	800f762 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f74c:	4628      	mov	r0, r5
 800f74e:	f7ff ff5b 	bl	800f608 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f752:	4621      	mov	r1, r4
 800f754:	f7fe fb9d 	bl	800de92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f758:	69eb      	ldr	r3, [r5, #28]
 800f75a:	b928      	cbnz	r0, 800f768 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800f75c:	461d      	mov	r5, r3
 800f75e:	2b00      	cmp	r3, #0
 800f760:	d1f4      	bne.n	800f74c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800f762:	b009      	add	sp, #36	@ 0x24
 800f764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f768:	ae04      	add	r6, sp, #16
 800f76a:	2b00      	cmp	r3, #0
 800f76c:	f000 80b5 	beq.w	800f8da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f770:	682b      	ldr	r3, [r5, #0]
 800f772:	4629      	mov	r1, r5
 800f774:	a802      	add	r0, sp, #8
 800f776:	68db      	ldr	r3, [r3, #12]
 800f778:	4798      	blx	r3
 800f77a:	4628      	mov	r0, r5
 800f77c:	f7ff ff60 	bl	800f640 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f780:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800f784:	4407      	add	r7, r0
 800f786:	4628      	mov	r0, r5
 800f788:	f7ff ff6e 	bl	800f668 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f78c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f790:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f794:	b23f      	sxth	r7, r7
 800f796:	4418      	add	r0, r3
 800f798:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f79c:	4621      	mov	r1, r4
 800f79e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f7a2:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f7a6:	4630      	mov	r0, r6
 800f7a8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f7ac:	f8ad 7010 	strh.w	r7, [sp, #16]
 800f7b0:	f7fb f88c 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 800f7b4:	4628      	mov	r0, r5
 800f7b6:	f7ff ff27 	bl	800f608 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f7ba:	ab06      	add	r3, sp, #24
 800f7bc:	4602      	mov	r2, r0
 800f7be:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f7c2:	e883 0003 	stmia.w	r3, {r0, r1}
 800f7c6:	4611      	mov	r1, r2
 800f7c8:	4618      	mov	r0, r3
 800f7ca:	f7fb f87f 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 800f7ce:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f7d2:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f7d6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800f7da:	4299      	cmp	r1, r3
 800f7dc:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800f7e0:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800f7e4:	d10b      	bne.n	800f7fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f7e6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f7ea:	4552      	cmp	r2, sl
 800f7ec:	d107      	bne.n	800f7fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f7ee:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f7f2:	455a      	cmp	r2, fp
 800f7f4:	d103      	bne.n	800f7fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f7f6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f7fa:	454a      	cmp	r2, r9
 800f7fc:	d06d      	beq.n	800f8da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f7fe:	f1bb 0f00 	cmp.w	fp, #0
 800f802:	dd65      	ble.n	800f8d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f804:	f1b9 0f00 	cmp.w	r9, #0
 800f808:	dd62      	ble.n	800f8d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f80a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f80e:	fa1f f08a 	uxth.w	r0, sl
 800f812:	4552      	cmp	r2, sl
 800f814:	9000      	str	r0, [sp, #0]
 800f816:	da12      	bge.n	800f83e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800f818:	9301      	str	r3, [sp, #4]
 800f81a:	9b00      	ldr	r3, [sp, #0]
 800f81c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f820:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f824:	1a9a      	subs	r2, r3, r2
 800f826:	f8ad 1010 	strh.w	r1, [sp, #16]
 800f82a:	4631      	mov	r1, r6
 800f82c:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f830:	4640      	mov	r0, r8
 800f832:	f8ad 2016 	strh.w	r2, [sp, #22]
 800f836:	69ea      	ldr	r2, [r5, #28]
 800f838:	f7ff ff7a 	bl	800f730 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f83c:	9b01      	ldr	r3, [sp, #4]
 800f83e:	f9b4 2000 	ldrsh.w	r2, [r4]
 800f842:	b29f      	uxth	r7, r3
 800f844:	429a      	cmp	r2, r3
 800f846:	da0d      	bge.n	800f864 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800f848:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f84c:	1aba      	subs	r2, r7, r2
 800f84e:	f8ad a012 	strh.w	sl, [sp, #18]
 800f852:	4631      	mov	r1, r6
 800f854:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f858:	4640      	mov	r0, r8
 800f85a:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f85e:	69ea      	ldr	r2, [r5, #28]
 800f860:	f7ff ff66 	bl	800f730 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f864:	8822      	ldrh	r2, [r4, #0]
 800f866:	445f      	add	r7, fp
 800f868:	88a3      	ldrh	r3, [r4, #4]
 800f86a:	b2bf      	uxth	r7, r7
 800f86c:	4413      	add	r3, r2
 800f86e:	b23a      	sxth	r2, r7
 800f870:	b29b      	uxth	r3, r3
 800f872:	b219      	sxth	r1, r3
 800f874:	4291      	cmp	r1, r2
 800f876:	dd0d      	ble.n	800f894 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800f878:	1bdb      	subs	r3, r3, r7
 800f87a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f87e:	f8ad a012 	strh.w	sl, [sp, #18]
 800f882:	4631      	mov	r1, r6
 800f884:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f888:	4640      	mov	r0, r8
 800f88a:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f88e:	69ea      	ldr	r2, [r5, #28]
 800f890:	f7ff ff4e 	bl	800f730 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f894:	88e2      	ldrh	r2, [r4, #6]
 800f896:	8863      	ldrh	r3, [r4, #2]
 800f898:	4413      	add	r3, r2
 800f89a:	9a00      	ldr	r2, [sp, #0]
 800f89c:	444a      	add	r2, r9
 800f89e:	b29b      	uxth	r3, r3
 800f8a0:	fa1f f982 	uxth.w	r9, r2
 800f8a4:	b219      	sxth	r1, r3
 800f8a6:	fa0f f289 	sxth.w	r2, r9
 800f8aa:	428a      	cmp	r2, r1
 800f8ac:	da15      	bge.n	800f8da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f8ae:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f8b2:	eba3 0309 	sub.w	r3, r3, r9
 800f8b6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f8ba:	f8ad 1014 	strh.w	r1, [sp, #20]
 800f8be:	4631      	mov	r1, r6
 800f8c0:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f8c4:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f8c8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f8cc:	69ea      	ldr	r2, [r5, #28]
 800f8ce:	e001      	b.n	800f8d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800f8d0:	69ea      	ldr	r2, [r5, #28]
 800f8d2:	4621      	mov	r1, r4
 800f8d4:	4640      	mov	r0, r8
 800f8d6:	f7ff ff2b 	bl	800f730 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f8da:	4628      	mov	r0, r5
 800f8dc:	f7ff fe94 	bl	800f608 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f8e0:	6861      	ldr	r1, [r4, #4]
 800f8e2:	4602      	mov	r2, r0
 800f8e4:	4633      	mov	r3, r6
 800f8e6:	6820      	ldr	r0, [r4, #0]
 800f8e8:	c303      	stmia	r3!, {r0, r1}
 800f8ea:	4611      	mov	r1, r2
 800f8ec:	4630      	mov	r0, r6
 800f8ee:	f7fa ffed 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 800f8f2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f8f6:	2b00      	cmp	r3, #0
 800f8f8:	f77f af33 	ble.w	800f762 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f8fc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f900:	2b00      	cmp	r3, #0
 800f902:	f77f af2e 	ble.w	800f762 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f906:	4628      	mov	r0, r5
 800f908:	f7ff fe9a 	bl	800f640 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f90c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800f910:	1a18      	subs	r0, r3, r0
 800f912:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f916:	4628      	mov	r0, r5
 800f918:	f7ff fea6 	bl	800f668 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f91c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f920:	4631      	mov	r1, r6
 800f922:	1a18      	subs	r0, r3, r0
 800f924:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f928:	4628      	mov	r0, r5
 800f92a:	682b      	ldr	r3, [r5, #0]
 800f92c:	689b      	ldr	r3, [r3, #8]
 800f92e:	4798      	blx	r3
 800f930:	e717      	b.n	800f762 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800f932 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800f932:	b570      	push	{r4, r5, r6, lr}
 800f934:	1d06      	adds	r6, r0, #4
 800f936:	b086      	sub	sp, #24
 800f938:	460c      	mov	r4, r1
 800f93a:	2300      	movs	r3, #0
 800f93c:	4631      	mov	r1, r6
 800f93e:	4605      	mov	r5, r0
 800f940:	a802      	add	r0, sp, #8
 800f942:	9301      	str	r3, [sp, #4]
 800f944:	f7ff fc98 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f948:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f94c:	8822      	ldrh	r2, [r4, #0]
 800f94e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800f952:	1ad2      	subs	r2, r2, r3
 800f954:	8863      	ldrh	r3, [r4, #2]
 800f956:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f95a:	1a5b      	subs	r3, r3, r1
 800f95c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800f960:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f964:	aa01      	add	r2, sp, #4
 800f966:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f96a:	4630      	mov	r0, r6
 800f96c:	f8ad 1016 	strh.w	r1, [sp, #22]
 800f970:	a904      	add	r1, sp, #16
 800f972:	f8ad 3012 	strh.w	r3, [sp, #18]
 800f976:	f7fb f881 	bl	800aa7c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800f97a:	9a01      	ldr	r2, [sp, #4]
 800f97c:	b11a      	cbz	r2, 800f986 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800f97e:	4621      	mov	r1, r4
 800f980:	4628      	mov	r0, r5
 800f982:	f7ff fed5 	bl	800f730 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f986:	b006      	add	sp, #24
 800f988:	bd70      	pop	{r4, r5, r6, pc}

0800f98a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800f98a:	4602      	mov	r2, r0
 800f98c:	b530      	push	{r4, r5, lr}
 800f98e:	4604      	mov	r4, r0
 800f990:	b085      	sub	sp, #20
 800f992:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f996:	460d      	mov	r5, r1
 800f998:	466b      	mov	r3, sp
 800f99a:	6851      	ldr	r1, [r2, #4]
 800f99c:	c303      	stmia	r3!, {r0, r1}
 800f99e:	4629      	mov	r1, r5
 800f9a0:	4668      	mov	r0, sp
 800f9a2:	f7fa ff93 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 800f9a6:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800f9aa:	b12b      	cbz	r3, 800f9b8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800f9ac:	4669      	mov	r1, sp
 800f9ae:	4620      	mov	r0, r4
 800f9b0:	f7ff ffbf 	bl	800f932 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f9b4:	b005      	add	sp, #20
 800f9b6:	bd30      	pop	{r4, r5, pc}
 800f9b8:	3404      	adds	r4, #4
 800f9ba:	a802      	add	r0, sp, #8
 800f9bc:	4621      	mov	r1, r4
 800f9be:	f7ff fc5b 	bl	800f278 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f9c2:	f8bd 3000 	ldrh.w	r3, [sp]
 800f9c6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f9ca:	4669      	mov	r1, sp
 800f9cc:	4620      	mov	r0, r4
 800f9ce:	1a9b      	subs	r3, r3, r2
 800f9d0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800f9d4:	f8ad 3000 	strh.w	r3, [sp]
 800f9d8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f9dc:	1a9b      	subs	r3, r3, r2
 800f9de:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f9e2:	f7fb f812 	bl	800aa0a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f9e6:	e7e5      	b.n	800f9b4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800f9e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f9e8:	460b      	mov	r3, r1
 800f9ea:	680a      	ldr	r2, [r1, #0]
 800f9ec:	1d01      	adds	r1, r0, #4
 800f9ee:	6992      	ldr	r2, [r2, #24]
 800f9f0:	4618      	mov	r0, r3
 800f9f2:	4710      	bx	r2

0800f9f4 <_ZN8touchgfx12TextProviderC1Ev>:
 800f9f4:	b538      	push	{r3, r4, r5, lr}
 800f9f6:	2500      	movs	r5, #0
 800f9f8:	2302      	movs	r3, #2
 800f9fa:	4604      	mov	r4, r0
 800f9fc:	220e      	movs	r2, #14
 800f9fe:	7403      	strb	r3, [r0, #16]
 800fa00:	4629      	mov	r1, r5
 800fa02:	6145      	str	r5, [r0, #20]
 800fa04:	7605      	strb	r5, [r0, #24]
 800fa06:	83c5      	strh	r5, [r0, #30]
 800fa08:	8405      	strh	r5, [r0, #32]
 800fa0a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800fa0c:	8705      	strh	r5, [r0, #56]	@ 0x38
 800fa0e:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 800fa10:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 800fa14:	e9c0 5500 	strd	r5, r5, [r0]
 800fa18:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 800fa1c:	304c      	adds	r0, #76	@ 0x4c
 800fa1e:	f00f faa3 	bl	801ef68 <memset>
 800fa22:	2301      	movs	r3, #1
 800fa24:	4620      	mov	r0, r4
 800fa26:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 800fa2a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800fa2e:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 800fa32:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 800fa36:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 800fa3a:	f7f3 fb8d 	bl	8003158 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800fa3e:	4620      	mov	r0, r4
 800fa40:	bd38      	pop	{r3, r4, r5, pc}

0800fa42 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 800fa42:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800fa44:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800fa48:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 800fa4a:	fab0 f080 	clz	r0, r0
 800fa4e:	0940      	lsrs	r0, r0, #5
 800fa50:	4770      	bx	lr

0800fa52 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800fa52:	b530      	push	{r4, r5, lr}
 800fa54:	2500      	movs	r5, #0
 800fa56:	2401      	movs	r4, #1
 800fa58:	6843      	ldr	r3, [r0, #4]
 800fa5a:	b913      	cbnz	r3, 800fa62 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800fa5c:	6803      	ldr	r3, [r0, #0]
 800fa5e:	b313      	cbz	r3, 800faa6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800fa60:	6043      	str	r3, [r0, #4]
 800fa62:	7e03      	ldrb	r3, [r0, #24]
 800fa64:	b143      	cbz	r3, 800fa78 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800fa66:	6943      	ldr	r3, [r0, #20]
 800fa68:	b12b      	cbz	r3, 800fa76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800fa6a:	881a      	ldrh	r2, [r3, #0]
 800fa6c:	b11a      	cbz	r2, 800fa76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800fa6e:	1c9a      	adds	r2, r3, #2
 800fa70:	6142      	str	r2, [r0, #20]
 800fa72:	8818      	ldrh	r0, [r3, #0]
 800fa74:	bd30      	pop	{r4, r5, pc}
 800fa76:	7605      	strb	r5, [r0, #24]
 800fa78:	6843      	ldr	r3, [r0, #4]
 800fa7a:	8819      	ldrh	r1, [r3, #0]
 800fa7c:	b199      	cbz	r1, 800faa6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800fa7e:	1c9a      	adds	r2, r3, #2
 800fa80:	2902      	cmp	r1, #2
 800fa82:	6042      	str	r2, [r0, #4]
 800fa84:	d1f5      	bne.n	800fa72 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800fa86:	7c03      	ldrb	r3, [r0, #16]
 800fa88:	2b01      	cmp	r3, #1
 800fa8a:	d8e5      	bhi.n	800fa58 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800fa8c:	1c5a      	adds	r2, r3, #1
 800fa8e:	3302      	adds	r3, #2
 800fa90:	7402      	strb	r2, [r0, #16]
 800fa92:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800fa96:	6143      	str	r3, [r0, #20]
 800fa98:	2b00      	cmp	r3, #0
 800fa9a:	d0dd      	beq.n	800fa58 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800fa9c:	881b      	ldrh	r3, [r3, #0]
 800fa9e:	2b00      	cmp	r3, #0
 800faa0:	d0da      	beq.n	800fa58 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800faa2:	7604      	strb	r4, [r0, #24]
 800faa4:	e7d8      	b.n	800fa58 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800faa6:	2000      	movs	r0, #0
 800faa8:	e7e4      	b.n	800fa74 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800faaa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800faaa:	6001      	str	r1, [r0, #0]
 800faac:	2100      	movs	r1, #0
 800faae:	b430      	push	{r4, r5}
 800fab0:	6041      	str	r1, [r0, #4]
 800fab2:	6815      	ldr	r5, [r2, #0]
 800fab4:	6085      	str	r5, [r0, #8]
 800fab6:	6852      	ldr	r2, [r2, #4]
 800fab8:	6443      	str	r3, [r0, #68]	@ 0x44
 800faba:	9b02      	ldr	r3, [sp, #8]
 800fabc:	60c2      	str	r2, [r0, #12]
 800fabe:	7401      	strb	r1, [r0, #16]
 800fac0:	6141      	str	r1, [r0, #20]
 800fac2:	7601      	strb	r1, [r0, #24]
 800fac4:	8701      	strh	r1, [r0, #56]	@ 0x38
 800fac6:	8401      	strh	r1, [r0, #32]
 800fac8:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 800facc:	6483      	str	r3, [r0, #72]	@ 0x48
 800face:	bc30      	pop	{r4, r5}
 800fad0:	f7f3 bb42 	b.w	8003158 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800fad4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 800fad4:	b408      	push	{r3}
 800fad6:	b510      	push	{r4, lr}
 800fad8:	b085      	sub	sp, #20
 800fada:	ac07      	add	r4, sp, #28
 800fadc:	f854 3b04 	ldr.w	r3, [r4], #4
 800fae0:	9300      	str	r3, [sp, #0]
 800fae2:	4613      	mov	r3, r2
 800fae4:	4622      	mov	r2, r4
 800fae6:	9403      	str	r4, [sp, #12]
 800fae8:	f7ff ffdf 	bl	800faaa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800faec:	b005      	add	sp, #20
 800faee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800faf2:	b001      	add	sp, #4
 800faf4:	4770      	bx	lr

0800faf6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800faf6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800faf8:	4605      	mov	r5, r0
 800fafa:	4608      	mov	r0, r1
 800fafc:	b1f1      	cbz	r1, 800fb3c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 800fafe:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 800fb02:	460b      	mov	r3, r1
 800fb04:	f101 0708 	add.w	r7, r1, #8
 800fb08:	4622      	mov	r2, r4
 800fb0a:	6818      	ldr	r0, [r3, #0]
 800fb0c:	3308      	adds	r3, #8
 800fb0e:	f853 1c04 	ldr.w	r1, [r3, #-4]
 800fb12:	4626      	mov	r6, r4
 800fb14:	42bb      	cmp	r3, r7
 800fb16:	c603      	stmia	r6!, {r0, r1}
 800fb18:	4634      	mov	r4, r6
 800fb1a:	d1f6      	bne.n	800fb0a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800fb1c:	6818      	ldr	r0, [r3, #0]
 800fb1e:	6030      	str	r0, [r6, #0]
 800fb20:	4610      	mov	r0, r2
 800fb22:	889b      	ldrh	r3, [r3, #4]
 800fb24:	80b3      	strh	r3, [r6, #4]
 800fb26:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 800fb2a:	015b      	lsls	r3, r3, #5
 800fb2c:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800fb30:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 800fb34:	430b      	orrs	r3, r1
 800fb36:	425b      	negs	r3, r3
 800fb38:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 800fb3c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fb3e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800fb3e:	b538      	push	{r3, r4, r5, lr}
 800fb40:	460c      	mov	r4, r1
 800fb42:	6811      	ldr	r1, [r2, #0]
 800fb44:	4610      	mov	r0, r2
 800fb46:	68cd      	ldr	r5, [r1, #12]
 800fb48:	4619      	mov	r1, r3
 800fb4a:	47a8      	blx	r5
 800fb4c:	2800      	cmp	r0, #0
 800fb4e:	bf08      	it	eq
 800fb50:	4620      	moveq	r0, r4
 800fb52:	bd38      	pop	{r3, r4, r5, pc}

0800fb54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800fb54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fb56:	4604      	mov	r4, r0
 800fb58:	4615      	mov	r5, r2
 800fb5a:	4608      	mov	r0, r1
 800fb5c:	b93a      	cbnz	r2, 800fb6e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800fb5e:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800fb62:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 800fb66:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 800fb6a:	4628      	mov	r0, r5
 800fb6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fb6e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800fb72:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 800fb76:	8893      	ldrh	r3, [r2, #4]
 800fb78:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800fb7c:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800fb80:	79ee      	ldrb	r6, [r5, #7]
 800fb82:	4316      	orrs	r6, r2
 800fb84:	19da      	adds	r2, r3, r7
 800fb86:	b291      	uxth	r1, r2
 800fb88:	b2b7      	uxth	r7, r6
 800fb8a:	291d      	cmp	r1, #29
 800fb8c:	d87b      	bhi.n	800fc86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 800fb8e:	2201      	movs	r2, #1
 800fb90:	10f6      	asrs	r6, r6, #3
 800fb92:	408a      	lsls	r2, r1
 800fb94:	4974      	ldr	r1, [pc, #464]	@ (800fd68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 800fb96:	420a      	tst	r2, r1
 800fb98:	d12e      	bne.n	800fbf8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800fb9a:	f412 7f60 	tst.w	r2, #896	@ 0x380
 800fb9e:	d072      	beq.n	800fc86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 800fba0:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 800fba4:	462b      	mov	r3, r5
 800fba6:	f105 0e08 	add.w	lr, r5, #8
 800fbaa:	4615      	mov	r5, r2
 800fbac:	6818      	ldr	r0, [r3, #0]
 800fbae:	3308      	adds	r3, #8
 800fbb0:	f853 1c04 	ldr.w	r1, [r3, #-4]
 800fbb4:	4694      	mov	ip, r2
 800fbb6:	4573      	cmp	r3, lr
 800fbb8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800fbbc:	4662      	mov	r2, ip
 800fbbe:	d1f5      	bne.n	800fbac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 800fbc0:	6818      	ldr	r0, [r3, #0]
 800fbc2:	f8cc 0000 	str.w	r0, [ip]
 800fbc6:	889b      	ldrh	r3, [r3, #4]
 800fbc8:	f8ac 3004 	strh.w	r3, [ip, #4]
 800fbcc:	b2b3      	uxth	r3, r6
 800fbce:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 800fbd2:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 800fbd6:	1aca      	subs	r2, r1, r3
 800fbd8:	1bcf      	subs	r7, r1, r7
 800fbda:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 800fbde:	b292      	uxth	r2, r2
 800fbe0:	1afb      	subs	r3, r7, r3
 800fbe2:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800fbe6:	10d2      	asrs	r2, r2, #3
 800fbe8:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 800fbec:	4302      	orrs	r2, r0
 800fbee:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 800fbf2:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800fbf6:	e7b8      	b.n	800fb6a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800fbf8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800fbfa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fbfe:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 800fc00:	f640 6333 	movw	r3, #3635	@ 0xe33
 800fc04:	4299      	cmp	r1, r3
 800fc06:	d110      	bne.n	800fc2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 800fc08:	6803      	ldr	r3, [r0, #0]
 800fc0a:	68db      	ldr	r3, [r3, #12]
 800fc0c:	4798      	blx	r3
 800fc0e:	7b41      	ldrb	r1, [r0, #13]
 800fc10:	00cb      	lsls	r3, r1, #3
 800fc12:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fc16:	7a03      	ldrb	r3, [r0, #8]
 800fc18:	0648      	lsls	r0, r1, #25
 800fc1a:	ea43 0302 	orr.w	r3, r3, r2
 800fc1e:	bf44      	itt	mi
 800fc20:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fc24:	b21b      	sxthmi	r3, r3
 800fc26:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800fc2a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 800fc2e:	462a      	mov	r2, r5
 800fc30:	f105 0c08 	add.w	ip, r5, #8
 800fc34:	443b      	add	r3, r7
 800fc36:	4433      	add	r3, r6
 800fc38:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 800fc3c:	b29b      	uxth	r3, r3
 800fc3e:	4635      	mov	r5, r6
 800fc40:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800fc44:	6810      	ldr	r0, [r2, #0]
 800fc46:	3208      	adds	r2, #8
 800fc48:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800fc4c:	4637      	mov	r7, r6
 800fc4e:	4562      	cmp	r2, ip
 800fc50:	c703      	stmia	r7!, {r0, r1}
 800fc52:	463e      	mov	r6, r7
 800fc54:	d1f6      	bne.n	800fc44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 800fc56:	6810      	ldr	r0, [r2, #0]
 800fc58:	6038      	str	r0, [r7, #0]
 800fc5a:	8892      	ldrh	r2, [r2, #4]
 800fc5c:	80ba      	strh	r2, [r7, #4]
 800fc5e:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800fc62:	10db      	asrs	r3, r3, #3
 800fc64:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800fc68:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800fc6c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800fc70:	4313      	orrs	r3, r2
 800fc72:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 800fc76:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800fc7a:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800fc7e:	1a9b      	subs	r3, r3, r2
 800fc80:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 800fc84:	e771      	b.n	800fb6a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800fc86:	f023 0204 	bic.w	r2, r3, #4
 800fc8a:	f640 611b 	movw	r1, #3611	@ 0xe1b
 800fc8e:	428a      	cmp	r2, r1
 800fc90:	d003      	beq.n	800fc9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 800fc92:	f640 621d 	movw	r2, #3613	@ 0xe1d
 800fc96:	4293      	cmp	r3, r2
 800fc98:	d120      	bne.n	800fcdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 800fc9a:	3b01      	subs	r3, #1
 800fc9c:	4602      	mov	r2, r0
 800fc9e:	4629      	mov	r1, r5
 800fca0:	4620      	mov	r0, r4
 800fca2:	b29b      	uxth	r3, r3
 800fca4:	f7ff ff4b 	bl	800fb3e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800fca8:	7b41      	ldrb	r1, [r0, #13]
 800fcaa:	00cb      	lsls	r3, r1, #3
 800fcac:	0649      	lsls	r1, r1, #25
 800fcae:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fcb2:	7a03      	ldrb	r3, [r0, #8]
 800fcb4:	ea43 0302 	orr.w	r3, r3, r2
 800fcb8:	bf44      	itt	mi
 800fcba:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fcbe:	b21b      	sxthmi	r3, r3
 800fcc0:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800fcc4:	7b6b      	ldrb	r3, [r5, #13]
 800fcc6:	7aaa      	ldrb	r2, [r5, #10]
 800fcc8:	005b      	lsls	r3, r3, #1
 800fcca:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800fcce:	4313      	orrs	r3, r2
 800fcd0:	115a      	asrs	r2, r3, #5
 800fcd2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800fcd6:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800fcda:	e035      	b.n	800fd48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 800fcdc:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800fce0:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 800fce4:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 800fce8:	7a2a      	ldrb	r2, [r5, #8]
 800fcea:	ea42 0201 	orr.w	r2, r2, r1
 800fcee:	f640 6109 	movw	r1, #3593	@ 0xe09
 800fcf2:	bf1c      	itt	ne
 800fcf4:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 800fcf8:	b212      	sxthne	r2, r2
 800fcfa:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800fcfe:	f023 0210 	bic.w	r2, r3, #16
 800fd02:	428a      	cmp	r2, r1
 800fd04:	d003      	beq.n	800fd0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 800fd06:	f640 6213 	movw	r2, #3603	@ 0xe13
 800fd0a:	4293      	cmp	r3, r2
 800fd0c:	d129      	bne.n	800fd62 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 800fd0e:	7b6e      	ldrb	r6, [r5, #13]
 800fd10:	4629      	mov	r1, r5
 800fd12:	0076      	lsls	r6, r6, #1
 800fd14:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800fd18:	7aae      	ldrb	r6, [r5, #10]
 800fd1a:	4316      	orrs	r6, r2
 800fd1c:	f640 6213 	movw	r2, #3603	@ 0xe13
 800fd20:	4293      	cmp	r3, r2
 800fd22:	4602      	mov	r2, r0
 800fd24:	4620      	mov	r0, r4
 800fd26:	bf16      	itet	ne
 800fd28:	f103 33ff 	addne.w	r3, r3, #4294967295
 800fd2c:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 800fd30:	b29b      	uxthne	r3, r3
 800fd32:	f7ff ff04 	bl	800fb3e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800fd36:	7b43      	ldrb	r3, [r0, #13]
 800fd38:	7a82      	ldrb	r2, [r0, #10]
 800fd3a:	005b      	lsls	r3, r3, #1
 800fd3c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800fd40:	4313      	orrs	r3, r2
 800fd42:	1af6      	subs	r6, r6, r3
 800fd44:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 800fd48:	7b69      	ldrb	r1, [r5, #13]
 800fd4a:	00cb      	lsls	r3, r1, #3
 800fd4c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fd50:	7a2b      	ldrb	r3, [r5, #8]
 800fd52:	4313      	orrs	r3, r2
 800fd54:	064a      	lsls	r2, r1, #25
 800fd56:	bf44      	itt	mi
 800fd58:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fd5c:	b21b      	sxthmi	r3, r3
 800fd5e:	1bdb      	subs	r3, r3, r7
 800fd60:	e747      	b.n	800fbf2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 800fd62:	2300      	movs	r3, #0
 800fd64:	e7b7      	b.n	800fcd6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 800fd66:	bf00      	nop
 800fd68:	3fc00079 	.word	0x3fc00079

0800fd6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800fd6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd70:	4604      	mov	r4, r0
 800fd72:	b942      	cbnz	r2, 800fd86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800fd74:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fd78:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 800fd7c:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 800fd80:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800fd84:	e047      	b.n	800fe16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800fd86:	7b51      	ldrb	r1, [r2, #13]
 800fd88:	8893      	ldrh	r3, [r2, #4]
 800fd8a:	010d      	lsls	r5, r1, #4
 800fd8c:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 800fd90:	79d5      	ldrb	r5, [r2, #7]
 800fd92:	4305      	orrs	r5, r0
 800fd94:	2d04      	cmp	r5, #4
 800fd96:	bfcc      	ite	gt
 800fd98:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800fd9c:	f04f 0e01 	movle.w	lr, #1
 800fda0:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 800fda4:	f200 80ab 	bhi.w	800fefe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800fda8:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 800fdac:	4283      	cmp	r3, r0
 800fdae:	d216      	bcs.n	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fdb0:	f240 605b 	movw	r0, #1627	@ 0x65b
 800fdb4:	4283      	cmp	r3, r0
 800fdb6:	d859      	bhi.n	800fe6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800fdb8:	f240 6057 	movw	r0, #1623	@ 0x657
 800fdbc:	4283      	cmp	r3, r0
 800fdbe:	d20e      	bcs.n	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fdc0:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800fdc4:	d24a      	bcs.n	800fe5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800fdc6:	f240 604e 	movw	r0, #1614	@ 0x64e
 800fdca:	4283      	cmp	r3, r0
 800fdcc:	d207      	bcs.n	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fdce:	f240 601a 	movw	r0, #1562	@ 0x61a
 800fdd2:	4283      	cmp	r3, r0
 800fdd4:	d02a      	beq.n	800fe2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fdd6:	d821      	bhi.n	800fe1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800fdd8:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 800fddc:	d35b      	bcc.n	800fe96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800fdde:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 800fde2:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800fde6:	f040 80d0 	bne.w	800ff8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800fdea:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 800fdee:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800fdf2:	f040 80ca 	bne.w	800ff8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800fdf6:	00cb      	lsls	r3, r1, #3
 800fdf8:	0649      	lsls	r1, r1, #25
 800fdfa:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800fdfe:	7a13      	ldrb	r3, [r2, #8]
 800fe00:	ea43 0300 	orr.w	r3, r3, r0
 800fe04:	bf44      	itt	mi
 800fe06:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fe0a:	b21b      	sxthmi	r3, r3
 800fe0c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800fe10:	1b5d      	subs	r5, r3, r5
 800fe12:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800fe16:	4610      	mov	r0, r2
 800fe18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fe1c:	f240 604b 	movw	r0, #1611	@ 0x64b
 800fe20:	4283      	cmp	r3, r0
 800fe22:	d338      	bcc.n	800fe96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800fe24:	f240 604c 	movw	r0, #1612	@ 0x64c
 800fe28:	4283      	cmp	r3, r0
 800fe2a:	d9d8      	bls.n	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fe2c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 800fe30:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 800fe34:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800fe38:	f040 80f3 	bne.w	8010022 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 800fe3c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800fe40:	f040 80ef 	bne.w	8010022 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 800fe44:	00cb      	lsls	r3, r1, #3
 800fe46:	064e      	lsls	r6, r1, #25
 800fe48:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800fe4c:	7a13      	ldrb	r3, [r2, #8]
 800fe4e:	ea43 0300 	orr.w	r3, r3, r0
 800fe52:	bf44      	itt	mi
 800fe54:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800fe58:	b21b      	sxthmi	r3, r3
 800fe5a:	e7d9      	b.n	800fe10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800fe5c:	f240 6054 	movw	r0, #1620	@ 0x654
 800fe60:	4283      	cmp	r3, r0
 800fe62:	d8e3      	bhi.n	800fe2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fe64:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800fe68:	d9e0      	bls.n	800fe2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fe6a:	e7b8      	b.n	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fe6c:	f240 6074 	movw	r0, #1652	@ 0x674
 800fe70:	4283      	cmp	r3, r0
 800fe72:	d0b4      	beq.n	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fe74:	d82d      	bhi.n	800fed2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800fe76:	f240 605e 	movw	r0, #1630	@ 0x65e
 800fe7a:	4283      	cmp	r3, r0
 800fe7c:	d804      	bhi.n	800fe88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800fe7e:	f240 605d 	movw	r0, #1629	@ 0x65d
 800fe82:	4283      	cmp	r3, r0
 800fe84:	d3d2      	bcc.n	800fe2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fe86:	e7aa      	b.n	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fe88:	f240 605f 	movw	r0, #1631	@ 0x65f
 800fe8c:	4283      	cmp	r3, r0
 800fe8e:	d0cd      	beq.n	800fe2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fe90:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 800fe94:	d0a3      	beq.n	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fe96:	00cb      	lsls	r3, r1, #3
 800fe98:	0649      	lsls	r1, r1, #25
 800fe9a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800fe9e:	7a13      	ldrb	r3, [r2, #8]
 800fea0:	ea43 0300 	orr.w	r3, r3, r0
 800fea4:	bf44      	itt	mi
 800fea6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800feaa:	b21b      	sxthmi	r3, r3
 800feac:	1b5d      	subs	r5, r3, r5
 800feae:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800feb2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800feb6:	7b53      	ldrb	r3, [r2, #13]
 800feb8:	015b      	lsls	r3, r3, #5
 800feba:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800febe:	7993      	ldrb	r3, [r2, #6]
 800fec0:	430b      	orrs	r3, r1
 800fec2:	2105      	movs	r1, #5
 800fec4:	005b      	lsls	r3, r3, #1
 800fec6:	fb93 f3f1 	sdiv	r3, r3, r1
 800feca:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800fece:	440b      	add	r3, r1
 800fed0:	e756      	b.n	800fd80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800fed2:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 800fed6:	4283      	cmp	r3, r0
 800fed8:	d809      	bhi.n	800feee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800feda:	f240 60df 	movw	r0, #1759	@ 0x6df
 800fede:	4283      	cmp	r3, r0
 800fee0:	f4bf af7d 	bcs.w	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fee4:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 800fee8:	2b05      	cmp	r3, #5
 800feea:	d8d4      	bhi.n	800fe96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800feec:	e777      	b.n	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800feee:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 800fef2:	4283      	cmp	r3, r0
 800fef4:	d09a      	beq.n	800fe2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fef6:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 800fefa:	4283      	cmp	r3, r0
 800fefc:	e7ca      	b.n	800fe94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fefe:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 800ff02:	d22b      	bcs.n	800ff5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800ff04:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 800ff08:	4283      	cmp	r3, r0
 800ff0a:	d28f      	bcs.n	800fe2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ff0c:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 800ff10:	4283      	cmp	r3, r0
 800ff12:	d816      	bhi.n	800ff42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800ff14:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 800ff18:	4283      	cmp	r3, r0
 800ff1a:	f4bf af60 	bcs.w	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ff1e:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 800ff22:	4283      	cmp	r3, r0
 800ff24:	d80a      	bhi.n	800ff3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800ff26:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 800ff2a:	4283      	cmp	r3, r0
 800ff2c:	f4bf af57 	bcs.w	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ff30:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 800ff34:	4283      	cmp	r3, r0
 800ff36:	f43f af79 	beq.w	800fe2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ff3a:	e7ac      	b.n	800fe96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800ff3c:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 800ff40:	e7f8      	b.n	800ff34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800ff42:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 800ff46:	4283      	cmp	r3, r0
 800ff48:	d802      	bhi.n	800ff50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800ff4a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 800ff4e:	e798      	b.n	800fe82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800ff50:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 800ff54:	4283      	cmp	r3, r0
 800ff56:	f47f af42 	bne.w	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ff5a:	e767      	b.n	800fe2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ff5c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 800ff60:	4283      	cmp	r3, r0
 800ff62:	f43f af63 	beq.w	800fe2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ff66:	d802      	bhi.n	800ff6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800ff68:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 800ff6c:	e7f2      	b.n	800ff54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800ff6e:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 800ff72:	4283      	cmp	r3, r0
 800ff74:	d805      	bhi.n	800ff82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800ff76:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 800ff7a:	4283      	cmp	r3, r0
 800ff7c:	f4ff af2f 	bcc.w	800fdde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ff80:	e754      	b.n	800fe2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ff82:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 800ff86:	4283      	cmp	r3, r0
 800ff88:	e7af      	b.n	800feea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800ff8a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800ff8e:	4617      	mov	r7, r2
 800ff90:	f102 0808 	add.w	r8, r2, #8
 800ff94:	4666      	mov	r6, ip
 800ff96:	6838      	ldr	r0, [r7, #0]
 800ff98:	3708      	adds	r7, #8
 800ff9a:	f857 1c04 	ldr.w	r1, [r7, #-4]
 800ff9e:	46e6      	mov	lr, ip
 800ffa0:	4547      	cmp	r7, r8
 800ffa2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800ffa6:	46f4      	mov	ip, lr
 800ffa8:	d1f5      	bne.n	800ff96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800ffaa:	6838      	ldr	r0, [r7, #0]
 800ffac:	f8ce 0000 	str.w	r0, [lr]
 800ffb0:	88b9      	ldrh	r1, [r7, #4]
 800ffb2:	f8ae 1004 	strh.w	r1, [lr, #4]
 800ffb6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800ffba:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800ffbe:	d009      	beq.n	800ffd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 800ffc0:	7b51      	ldrb	r1, [r2, #13]
 800ffc2:	7992      	ldrb	r2, [r2, #6]
 800ffc4:	0149      	lsls	r1, r1, #5
 800ffc6:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800ffca:	4311      	orrs	r1, r2
 800ffcc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ffd0:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800ffd4:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800ffd8:	b2ad      	uxth	r5, r5
 800ffda:	d00d      	beq.n	800fff8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 800ffdc:	442b      	add	r3, r5
 800ffde:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800ffe2:	b29b      	uxth	r3, r3
 800ffe4:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800ffe8:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800ffec:	10db      	asrs	r3, r3, #3
 800ffee:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800fff2:	4313      	orrs	r3, r2
 800fff4:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800fff8:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800fffc:	00cb      	lsls	r3, r1, #3
 800fffe:	064f      	lsls	r7, r1, #25
 8010000:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010004:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8010008:	ea43 0302 	orr.w	r3, r3, r2
 801000c:	bf44      	itt	mi
 801000e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010012:	b21b      	sxthmi	r3, r3
 8010014:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8010018:	1b5b      	subs	r3, r3, r5
 801001a:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 801001e:	4632      	mov	r2, r6
 8010020:	e6f9      	b.n	800fe16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8010022:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8010026:	4617      	mov	r7, r2
 8010028:	f102 0908 	add.w	r9, r2, #8
 801002c:	4666      	mov	r6, ip
 801002e:	6838      	ldr	r0, [r7, #0]
 8010030:	3708      	adds	r7, #8
 8010032:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8010036:	46e0      	mov	r8, ip
 8010038:	454f      	cmp	r7, r9
 801003a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801003e:	46c4      	mov	ip, r8
 8010040:	d1f5      	bne.n	801002e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 8010042:	6838      	ldr	r0, [r7, #0]
 8010044:	f8c8 0000 	str.w	r0, [r8]
 8010048:	88b9      	ldrh	r1, [r7, #4]
 801004a:	f8a8 1004 	strh.w	r1, [r8, #4]
 801004e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8010052:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8010056:	d009      	beq.n	801006c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8010058:	7b51      	ldrb	r1, [r2, #13]
 801005a:	7992      	ldrb	r2, [r2, #6]
 801005c:	0149      	lsls	r1, r1, #5
 801005e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8010062:	4311      	orrs	r1, r2
 8010064:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8010068:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 801006c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8010070:	d00e      	beq.n	8010090 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8010072:	eba3 030e 	sub.w	r3, r3, lr
 8010076:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801007a:	b29b      	uxth	r3, r3
 801007c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8010080:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8010084:	10db      	asrs	r3, r3, #3
 8010086:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801008a:	4313      	orrs	r3, r2
 801008c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8010090:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8010094:	00cb      	lsls	r3, r1, #3
 8010096:	0648      	lsls	r0, r1, #25
 8010098:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801009c:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80100a0:	ea43 0302 	orr.w	r3, r3, r2
 80100a4:	bf44      	itt	mi
 80100a6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80100aa:	b21b      	sxthmi	r3, r3
 80100ac:	1b5d      	subs	r5, r3, r5
 80100ae:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80100b2:	e7b4      	b.n	801001e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

080100b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80100b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80100b8:	461e      	mov	r6, r3
 80100ba:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80100bc:	4604      	mov	r4, r0
 80100be:	4617      	mov	r7, r2
 80100c0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80100c4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80100c8:	f7f3 f804 	bl	80030d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80100cc:	4605      	mov	r5, r0
 80100ce:	b918      	cbnz	r0, 80100d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80100d0:	6030      	str	r0, [r6, #0]
 80100d2:	4628      	mov	r0, r5
 80100d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80100d8:	683b      	ldr	r3, [r7, #0]
 80100da:	4601      	mov	r1, r0
 80100dc:	4638      	mov	r0, r7
 80100de:	68db      	ldr	r3, [r3, #12]
 80100e0:	4798      	blx	r3
 80100e2:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80100e6:	4602      	mov	r2, r0
 80100e8:	6030      	str	r0, [r6, #0]
 80100ea:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80100ee:	d213      	bcs.n	8010118 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80100f0:	4643      	mov	r3, r8
 80100f2:	4639      	mov	r1, r7
 80100f4:	4620      	mov	r0, r4
 80100f6:	f7ff fe39 	bl	800fd6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80100fa:	6030      	str	r0, [r6, #0]
 80100fc:	6833      	ldr	r3, [r6, #0]
 80100fe:	b143      	cbz	r3, 8010112 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8010100:	7b5a      	ldrb	r2, [r3, #13]
 8010102:	7a9b      	ldrb	r3, [r3, #10]
 8010104:	0052      	lsls	r2, r2, #1
 8010106:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801010a:	4313      	orrs	r3, r2
 801010c:	bf0c      	ite	eq
 801010e:	2301      	moveq	r3, #1
 8010110:	2300      	movne	r3, #0
 8010112:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8010116:	e7dc      	b.n	80100d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8010118:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801011c:	b29b      	uxth	r3, r3
 801011e:	2b7f      	cmp	r3, #127	@ 0x7f
 8010120:	d804      	bhi.n	801012c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8010122:	4639      	mov	r1, r7
 8010124:	4620      	mov	r0, r4
 8010126:	f7ff fd15 	bl	800fb54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801012a:	e7e6      	b.n	80100fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801012c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8010130:	2b00      	cmp	r3, #0
 8010132:	d0e3      	beq.n	80100fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8010134:	f640 1302 	movw	r3, #2306	@ 0x902
 8010138:	429d      	cmp	r5, r3
 801013a:	d1df      	bne.n	80100fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801013c:	4601      	mov	r1, r0
 801013e:	4620      	mov	r0, r4
 8010140:	f7ff fcd9 	bl	800faf6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8010144:	e7d9      	b.n	80100fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08010146 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8010146:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801014a:	461e      	mov	r6, r3
 801014c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801014e:	4604      	mov	r4, r0
 8010150:	4617      	mov	r7, r2
 8010152:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010156:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801015a:	f7f2 ffbb 	bl	80030d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801015e:	4605      	mov	r5, r0
 8010160:	b918      	cbnz	r0, 801016a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8010162:	6030      	str	r0, [r6, #0]
 8010164:	4628      	mov	r0, r5
 8010166:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801016a:	683b      	ldr	r3, [r7, #0]
 801016c:	4601      	mov	r1, r0
 801016e:	4638      	mov	r0, r7
 8010170:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8010174:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8010178:	47c8      	blx	r9
 801017a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801017e:	4602      	mov	r2, r0
 8010180:	6030      	str	r0, [r6, #0]
 8010182:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8010186:	d213      	bcs.n	80101b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8010188:	4643      	mov	r3, r8
 801018a:	4639      	mov	r1, r7
 801018c:	4620      	mov	r0, r4
 801018e:	f7ff fded 	bl	800fd6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8010192:	6030      	str	r0, [r6, #0]
 8010194:	6833      	ldr	r3, [r6, #0]
 8010196:	b143      	cbz	r3, 80101aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8010198:	7b5a      	ldrb	r2, [r3, #13]
 801019a:	7a9b      	ldrb	r3, [r3, #10]
 801019c:	0052      	lsls	r2, r2, #1
 801019e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80101a2:	4313      	orrs	r3, r2
 80101a4:	bf0c      	ite	eq
 80101a6:	2301      	moveq	r3, #1
 80101a8:	2300      	movne	r3, #0
 80101aa:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80101ae:	e7d9      	b.n	8010164 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80101b0:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80101b4:	b29b      	uxth	r3, r3
 80101b6:	2b7f      	cmp	r3, #127	@ 0x7f
 80101b8:	d804      	bhi.n	80101c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80101ba:	4639      	mov	r1, r7
 80101bc:	4620      	mov	r0, r4
 80101be:	f7ff fcc9 	bl	800fb54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80101c2:	e7e6      	b.n	8010192 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80101c4:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80101c8:	2b00      	cmp	r3, #0
 80101ca:	d0e3      	beq.n	8010194 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80101cc:	f640 1302 	movw	r3, #2306	@ 0x902
 80101d0:	429d      	cmp	r5, r3
 80101d2:	d1df      	bne.n	8010194 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80101d4:	4601      	mov	r1, r0
 80101d6:	4620      	mov	r0, r4
 80101d8:	f7ff fc8d 	bl	800faf6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80101dc:	e7d9      	b.n	8010192 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080101de <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80101de:	b510      	push	{r4, lr}
 80101e0:	4604      	mov	r4, r0
 80101e2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 80101e6:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80101e8:	b1e1      	cbz	r1, 8010224 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80101ea:	2b0a      	cmp	r3, #10
 80101ec:	d02d      	beq.n	801024a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 80101ee:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 80101f0:	3901      	subs	r1, #1
 80101f2:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80101f6:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 80101f8:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 80101fc:	1c51      	adds	r1, r2, #1
 80101fe:	b289      	uxth	r1, r1
 8010200:	2901      	cmp	r1, #1
 8010202:	bf8a      	itet	hi
 8010204:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8010208:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 801020a:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 801020c:	1c5a      	adds	r2, r3, #1
 801020e:	8722      	strh	r2, [r4, #56]	@ 0x38
 8010210:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8010212:	4413      	add	r3, r2
 8010214:	b29b      	uxth	r3, r3
 8010216:	2b09      	cmp	r3, #9
 8010218:	bf88      	it	hi
 801021a:	3b0a      	subhi	r3, #10
 801021c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010220:	8458      	strh	r0, [r3, #34]	@ 0x22
 8010222:	e7de      	b.n	80101e2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8010224:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8010226:	2b0a      	cmp	r3, #10
 8010228:	d00f      	beq.n	801024a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 801022a:	4620      	mov	r0, r4
 801022c:	f7ff fc11 	bl	800fa52 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8010230:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8010232:	1c5a      	adds	r2, r3, #1
 8010234:	8722      	strh	r2, [r4, #56]	@ 0x38
 8010236:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8010238:	4413      	add	r3, r2
 801023a:	b29b      	uxth	r3, r3
 801023c:	2b09      	cmp	r3, #9
 801023e:	bf88      	it	hi
 8010240:	3b0a      	subhi	r3, #10
 8010242:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010246:	8458      	strh	r0, [r3, #34]	@ 0x22
 8010248:	e7ec      	b.n	8010224 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 801024a:	bd10      	pop	{r4, pc}

0801024c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801024c:	b538      	push	{r3, r4, r5, lr}
 801024e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8010250:	4604      	mov	r4, r0
 8010252:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8010256:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8010258:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801025a:	3a01      	subs	r2, #1
 801025c:	8702      	strh	r2, [r0, #56]	@ 0x38
 801025e:	1c5a      	adds	r2, r3, #1
 8010260:	b292      	uxth	r2, r2
 8010262:	2a09      	cmp	r2, #9
 8010264:	bf8a      	itet	hi
 8010266:	3b09      	subhi	r3, #9
 8010268:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 801026a:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801026c:	f7ff ffb7 	bl	80101de <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8010270:	8c23      	ldrh	r3, [r4, #32]
 8010272:	2b01      	cmp	r3, #1
 8010274:	bf9c      	itt	ls
 8010276:	3301      	addls	r3, #1
 8010278:	8423      	strhls	r3, [r4, #32]
 801027a:	8be3      	ldrh	r3, [r4, #30]
 801027c:	b90b      	cbnz	r3, 8010282 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801027e:	2302      	movs	r3, #2
 8010280:	83e3      	strh	r3, [r4, #30]
 8010282:	8be3      	ldrh	r3, [r4, #30]
 8010284:	4628      	mov	r0, r5
 8010286:	3b01      	subs	r3, #1
 8010288:	b29b      	uxth	r3, r3
 801028a:	83e3      	strh	r3, [r4, #30]
 801028c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010290:	8365      	strh	r5, [r4, #26]
 8010292:	bd38      	pop	{r3, r4, r5, pc}

08010294 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8010294:	428a      	cmp	r2, r1
 8010296:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801029a:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 801029c:	d932      	bls.n	8010304 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 801029e:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80102a0:	1a54      	subs	r4, r2, r1
 80102a2:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80102a6:	19ee      	adds	r6, r5, r7
 80102a8:	fa1f fe84 	uxth.w	lr, r4
 80102ac:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80102b0:	3e01      	subs	r6, #1
 80102b2:	b2b4      	uxth	r4, r6
 80102b4:	eba4 090e 	sub.w	r9, r4, lr
 80102b8:	fa1f f989 	uxth.w	r9, r9
 80102bc:	2c09      	cmp	r4, #9
 80102be:	4626      	mov	r6, r4
 80102c0:	bf88      	it	hi
 80102c2:	f1a4 060a 	subhi.w	r6, r4, #10
 80102c6:	f1bc 0f00 	cmp.w	ip, #0
 80102ca:	f104 34ff 	add.w	r4, r4, #4294967295
 80102ce:	bf08      	it	eq
 80102d0:	f04f 0c02 	moveq.w	ip, #2
 80102d4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80102d8:	b2a4      	uxth	r4, r4
 80102da:	f10c 3cff 	add.w	ip, ip, #4294967295
 80102de:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 80102e2:	454c      	cmp	r4, r9
 80102e4:	fa1f fc8c 	uxth.w	ip, ip
 80102e8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80102ec:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 80102f0:	d1e4      	bne.n	80102bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80102f2:	eba5 050e 	sub.w	r5, r5, lr
 80102f6:	eb0e 0408 	add.w	r4, lr, r8
 80102fa:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 80102fe:	8705      	strh	r5, [r0, #56]	@ 0x38
 8010300:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8010304:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8010306:	250a      	movs	r5, #10
 8010308:	1a64      	subs	r4, r4, r1
 801030a:	4439      	add	r1, r7
 801030c:	b289      	uxth	r1, r1
 801030e:	8704      	strh	r4, [r0, #56]	@ 0x38
 8010310:	2909      	cmp	r1, #9
 8010312:	bf88      	it	hi
 8010314:	390a      	subhi	r1, #10
 8010316:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8010318:	b18a      	cbz	r2, 801033e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 801031a:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801031c:	3a01      	subs	r2, #1
 801031e:	3101      	adds	r1, #1
 8010320:	b292      	uxth	r2, r2
 8010322:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8010326:	8701      	strh	r1, [r0, #56]	@ 0x38
 8010328:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801032a:	b901      	cbnz	r1, 801032e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 801032c:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801032e:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8010330:	3901      	subs	r1, #1
 8010332:	b289      	uxth	r1, r1
 8010334:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8010336:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801033a:	844c      	strh	r4, [r1, #34]	@ 0x22
 801033c:	e7ec      	b.n	8010318 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 801033e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010342:	f7ff bf4c 	b.w	80101de <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08010346 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8010346:	b570      	push	{r4, r5, r6, lr}
 8010348:	2500      	movs	r5, #0
 801034a:	4295      	cmp	r5, r2
 801034c:	d011      	beq.n	8010372 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801034e:	8bc4      	ldrh	r4, [r0, #30]
 8010350:	f831 6b02 	ldrh.w	r6, [r1], #2
 8010354:	4414      	add	r4, r2
 8010356:	3c01      	subs	r4, #1
 8010358:	1b64      	subs	r4, r4, r5
 801035a:	b2a4      	uxth	r4, r4
 801035c:	2c01      	cmp	r4, #1
 801035e:	bf88      	it	hi
 8010360:	3c02      	subhi	r4, #2
 8010362:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8010366:	8b64      	ldrh	r4, [r4, #26]
 8010368:	42b4      	cmp	r4, r6
 801036a:	d117      	bne.n	801039c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801036c:	3501      	adds	r5, #1
 801036e:	b2ad      	uxth	r5, r5
 8010370:	e7eb      	b.n	801034a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8010372:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8010376:	2400      	movs	r4, #0
 8010378:	4413      	add	r3, r2
 801037a:	b2a2      	uxth	r2, r4
 801037c:	429a      	cmp	r2, r3
 801037e:	da0f      	bge.n	80103a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8010380:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8010382:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8010386:	3401      	adds	r4, #1
 8010388:	4432      	add	r2, r6
 801038a:	b292      	uxth	r2, r2
 801038c:	2a09      	cmp	r2, #9
 801038e:	bf88      	it	hi
 8010390:	3a0a      	subhi	r2, #10
 8010392:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8010396:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8010398:	42aa      	cmp	r2, r5
 801039a:	d0ee      	beq.n	801037a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801039c:	2000      	movs	r0, #0
 801039e:	bd70      	pop	{r4, r5, r6, pc}
 80103a0:	2001      	movs	r0, #1
 80103a2:	e7fc      	b.n	801039e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080103a4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80103a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103a8:	4605      	mov	r5, r0
 80103aa:	4616      	mov	r6, r2
 80103ac:	1c8c      	adds	r4, r1, #2
 80103ae:	8809      	ldrh	r1, [r1, #0]
 80103b0:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80103b4:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80103b8:	42b3      	cmp	r3, r6
 80103ba:	d124      	bne.n	8010406 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80103bc:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80103c0:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80103c4:	f001 070f 	and.w	r7, r1, #15
 80103c8:	4652      	mov	r2, sl
 80103ca:	f8cd 8000 	str.w	r8, [sp]
 80103ce:	464b      	mov	r3, r9
 80103d0:	4621      	mov	r1, r4
 80103d2:	4628      	mov	r0, r5
 80103d4:	f7ff ffb7 	bl	8010346 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80103d8:	4683      	mov	fp, r0
 80103da:	b168      	cbz	r0, 80103f8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80103dc:	eb0a 0109 	add.w	r1, sl, r9
 80103e0:	463a      	mov	r2, r7
 80103e2:	4628      	mov	r0, r5
 80103e4:	4441      	add	r1, r8
 80103e6:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80103ea:	4649      	mov	r1, r9
 80103ec:	f7ff ff52 	bl	8010294 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80103f0:	4658      	mov	r0, fp
 80103f2:	b003      	add	sp, #12
 80103f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80103f8:	eb07 010a 	add.w	r1, r7, sl
 80103fc:	4449      	add	r1, r9
 80103fe:	4441      	add	r1, r8
 8010400:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8010404:	e7d2      	b.n	80103ac <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8010406:	f04f 0b00 	mov.w	fp, #0
 801040a:	e7f1      	b.n	80103f0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801040c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801040c:	b570      	push	{r4, r5, r6, lr}
 801040e:	8810      	ldrh	r0, [r2, #0]
 8010410:	4298      	cmp	r0, r3
 8010412:	d817      	bhi.n	8010444 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010414:	1e48      	subs	r0, r1, #1
 8010416:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801041a:	4298      	cmp	r0, r3
 801041c:	d312      	bcc.n	8010444 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801041e:	2400      	movs	r4, #0
 8010420:	428c      	cmp	r4, r1
 8010422:	d20f      	bcs.n	8010444 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010424:	1860      	adds	r0, r4, r1
 8010426:	1040      	asrs	r0, r0, #1
 8010428:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801042c:	0085      	lsls	r5, r0, #2
 801042e:	42b3      	cmp	r3, r6
 8010430:	d902      	bls.n	8010438 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8010432:	3001      	adds	r0, #1
 8010434:	b284      	uxth	r4, r0
 8010436:	e7f3      	b.n	8010420 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8010438:	d201      	bcs.n	801043e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801043a:	b281      	uxth	r1, r0
 801043c:	e7f0      	b.n	8010420 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801043e:	442a      	add	r2, r5
 8010440:	8850      	ldrh	r0, [r2, #2]
 8010442:	bd70      	pop	{r4, r5, r6, pc}
 8010444:	2000      	movs	r0, #0
 8010446:	e7fc      	b.n	8010442 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08010448 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8010448:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801044c:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 801044e:	4604      	mov	r4, r0
 8010450:	260b      	movs	r6, #11
 8010452:	886f      	ldrh	r7, [r5, #2]
 8010454:	087f      	lsrs	r7, r7, #1
 8010456:	3e01      	subs	r6, #1
 8010458:	d013      	beq.n	8010482 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801045a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801045c:	462a      	mov	r2, r5
 801045e:	4639      	mov	r1, r7
 8010460:	4620      	mov	r0, r4
 8010462:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010466:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801046a:	4643      	mov	r3, r8
 801046c:	f7ff ffce 	bl	801040c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8010470:	b138      	cbz	r0, 8010482 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8010472:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8010476:	4642      	mov	r2, r8
 8010478:	4620      	mov	r0, r4
 801047a:	f7ff ff93 	bl	80103a4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801047e:	2800      	cmp	r0, #0
 8010480:	d1e9      	bne.n	8010456 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8010482:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08010488 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8010488:	b570      	push	{r4, r5, r6, lr}
 801048a:	694a      	ldr	r2, [r1, #20]
 801048c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 801048e:	684b      	ldr	r3, [r1, #4]
 8010490:	1b54      	subs	r4, r2, r5
 8010492:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8010494:	f000 8106 	beq.w	80106a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8010498:	1b9b      	subs	r3, r3, r6
 801049a:	d003      	beq.n	80104a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801049c:	4363      	muls	r3, r4
 801049e:	2210      	movs	r2, #16
 80104a0:	fb93 f3f2 	sdiv	r3, r3, r2
 80104a4:	680c      	ldr	r4, [r1, #0]
 80104a6:	698a      	ldr	r2, [r1, #24]
 80104a8:	1b65      	subs	r5, r4, r5
 80104aa:	f000 80fd 	beq.w	80106a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80104ae:	1b92      	subs	r2, r2, r6
 80104b0:	d003      	beq.n	80104ba <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80104b2:	436a      	muls	r2, r5
 80104b4:	2410      	movs	r4, #16
 80104b6:	fb92 f2f4 	sdiv	r2, r2, r4
 80104ba:	1a9b      	subs	r3, r3, r2
 80104bc:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 80106e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80104c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80104c4:	460a      	mov	r2, r1
 80104c6:	ee07 3a90 	vmov	s15, r3
 80104ca:	f100 040c 	add.w	r4, r0, #12
 80104ce:	4603      	mov	r3, r0
 80104d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80104d4:	ee67 7a84 	vmul.f32	s15, s15, s8
 80104d8:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80104dc:	eeb1 6a43 	vneg.f32	s12, s6
 80104e0:	edd2 7a02 	vldr	s15, [r2, #8]
 80104e4:	3214      	adds	r2, #20
 80104e6:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80104ea:	ece3 6a01 	vstmia	r3!, {s13}
 80104ee:	429c      	cmp	r4, r3
 80104f0:	ed52 7a02 	vldr	s15, [r2, #-8]
 80104f4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80104f8:	edc3 7a02 	vstr	s15, [r3, #8]
 80104fc:	ed52 7a01 	vldr	s15, [r2, #-4]
 8010500:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010504:	edc3 7a05 	vstr	s15, [r3, #20]
 8010508:	d1ea      	bne.n	80104e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801050a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801050c:	698b      	ldr	r3, [r1, #24]
 801050e:	edd0 4a02 	vldr	s9, [r0, #8]
 8010512:	1a9b      	subs	r3, r3, r2
 8010514:	edd0 3a00 	vldr	s7, [r0]
 8010518:	edd0 6a01 	vldr	s13, [r0, #4]
 801051c:	ee07 3a90 	vmov	s15, r3
 8010520:	684b      	ldr	r3, [r1, #4]
 8010522:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8010526:	ed90 5a05 	vldr	s10, [r0, #20]
 801052a:	1a9b      	subs	r3, r3, r2
 801052c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010530:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8010534:	ed90 2a03 	vldr	s4, [r0, #12]
 8010538:	ee07 3a10 	vmov	s14, r3
 801053c:	edd0 5a04 	vldr	s11, [r0, #16]
 8010540:	ee67 7a84 	vmul.f32	s15, s15, s8
 8010544:	ed90 1a07 	vldr	s2, [r0, #28]
 8010548:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801054c:	edd0 2a06 	vldr	s5, [r0, #24]
 8010550:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8010554:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8010558:	ee27 7a04 	vmul.f32	s14, s14, s8
 801055c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8010560:	eee6 7a87 	vfma.f32	s15, s13, s14
 8010564:	ee67 7a83 	vmul.f32	s15, s15, s6
 8010568:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 801056c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801056e:	694a      	ldr	r2, [r1, #20]
 8010570:	1b13      	subs	r3, r2, r4
 8010572:	ee07 3a10 	vmov	s14, r3
 8010576:	680b      	ldr	r3, [r1, #0]
 8010578:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801057c:	1b1b      	subs	r3, r3, r4
 801057e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010582:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8010586:	ee07 3a10 	vmov	s14, r3
 801058a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801058e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010592:	eee6 4a87 	vfma.f32	s9, s13, s14
 8010596:	ee64 4a86 	vmul.f32	s9, s9, s12
 801059a:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 801059e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80105a0:	698b      	ldr	r3, [r1, #24]
 80105a2:	1a9b      	subs	r3, r3, r2
 80105a4:	ee06 3a90 	vmov	s13, r3
 80105a8:	684b      	ldr	r3, [r1, #4]
 80105aa:	1a9b      	subs	r3, r3, r2
 80105ac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80105b0:	ee07 3a10 	vmov	s14, r3
 80105b4:	ee66 6a84 	vmul.f32	s13, s13, s8
 80105b8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80105bc:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80105c0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80105c4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80105c8:	ee66 6a83 	vmul.f32	s13, s13, s6
 80105cc:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 80105d0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80105d2:	694a      	ldr	r2, [r1, #20]
 80105d4:	1b13      	subs	r3, r2, r4
 80105d6:	ee07 3a10 	vmov	s14, r3
 80105da:	680b      	ldr	r3, [r1, #0]
 80105dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80105e0:	1b1b      	subs	r3, r3, r4
 80105e2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80105e6:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80105ea:	ee07 3a10 	vmov	s14, r3
 80105ee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80105f2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80105f6:	eea5 5a87 	vfma.f32	s10, s11, s14
 80105fa:	edd0 5a08 	vldr	s11, [r0, #32]
 80105fe:	ee31 1a65 	vsub.f32	s2, s2, s11
 8010602:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8010606:	ee25 5a06 	vmul.f32	s10, s10, s12
 801060a:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801060e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8010610:	698b      	ldr	r3, [r1, #24]
 8010612:	1a9b      	subs	r3, r3, r2
 8010614:	ee07 3a10 	vmov	s14, r3
 8010618:	684b      	ldr	r3, [r1, #4]
 801061a:	1a9b      	subs	r3, r3, r2
 801061c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010620:	ee01 3a90 	vmov	s3, r3
 8010624:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010628:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801062c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8010630:	ee61 1a84 	vmul.f32	s3, s3, s8
 8010634:	eea1 7a21 	vfma.f32	s14, s2, s3
 8010638:	ee27 7a03 	vmul.f32	s14, s14, s6
 801063c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8010640:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8010642:	694a      	ldr	r2, [r1, #20]
 8010644:	1b13      	subs	r3, r2, r4
 8010646:	ee03 3a10 	vmov	s6, r3
 801064a:	680b      	ldr	r3, [r1, #0]
 801064c:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8010650:	1b1b      	subs	r3, r3, r4
 8010652:	ee23 3a04 	vmul.f32	s6, s6, s8
 8010656:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801065a:	ee03 3a10 	vmov	s6, r3
 801065e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8010662:	ee23 4a04 	vmul.f32	s8, s6, s8
 8010666:	eee1 5a04 	vfma.f32	s11, s2, s8
 801066a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801066e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8010672:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8010676:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801067a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801067e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010682:	dd13      	ble.n	80106ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8010684:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8010688:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801068c:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801068e:	eee3 7a87 	vfma.f32	s15, s7, s14
 8010692:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8010696:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801069a:	dd15      	ble.n	80106c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801069c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80106a0:	6403      	str	r3, [r0, #64]	@ 0x40
 80106a2:	bd70      	pop	{r4, r5, r6, pc}
 80106a4:	4623      	mov	r3, r4
 80106a6:	e6fd      	b.n	80104a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80106a8:	462a      	mov	r2, r5
 80106aa:	e706      	b.n	80104ba <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80106ac:	d502      	bpl.n	80106b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80106ae:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80106b2:	e7e9      	b.n	8010688 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80106b4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80106b8:	eea3 2a85 	vfma.f32	s4, s7, s10
 80106bc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80106c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106c4:	dade      	bge.n	8010684 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80106c6:	e7f2      	b.n	80106ae <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80106c8:	d502      	bpl.n	80106d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80106ca:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80106ce:	e7e7      	b.n	80106a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80106d0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80106d4:	eee3 4a86 	vfma.f32	s9, s7, s12
 80106d8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80106dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106e0:	dadc      	bge.n	801069c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80106e2:	e7f2      	b.n	80106ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80106e4:	3d800000 	.word	0x3d800000

080106e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80106e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80106ec:	2714      	movs	r7, #20
 80106ee:	435f      	muls	r7, r3
 80106f0:	eb02 0c07 	add.w	ip, r2, r7
 80106f4:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80106f8:	f115 0e0f 	adds.w	lr, r5, #15
 80106fc:	f100 80a2 	bmi.w	8010844 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8010700:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8010704:	9c08      	ldr	r4, [sp, #32]
 8010706:	2614      	movs	r6, #20
 8010708:	f8c0 e014 	str.w	lr, [r0, #20]
 801070c:	4366      	muls	r6, r4
 801070e:	eb02 0806 	add.w	r8, r2, r6
 8010712:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8010716:	f115 040f 	adds.w	r4, r5, #15
 801071a:	f100 809f 	bmi.w	801085c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801071e:	1124      	asrs	r4, r4, #4
 8010720:	eba4 040e 	sub.w	r4, r4, lr
 8010724:	6184      	str	r4, [r0, #24]
 8010726:	2c00      	cmp	r4, #0
 8010728:	f000 808a 	beq.w	8010840 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801072c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8010730:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8010734:	5995      	ldr	r5, [r2, r6]
 8010736:	eba4 0809 	sub.w	r8, r4, r9
 801073a:	59d4      	ldr	r4, [r2, r7]
 801073c:	eba5 0a04 	sub.w	sl, r5, r4
 8010740:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8010744:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8010748:	fb0e fe05 	mul.w	lr, lr, r5
 801074c:	fb0a ee19 	mls	lr, sl, r9, lr
 8010750:	fb08 e404 	mla	r4, r8, r4, lr
 8010754:	3c01      	subs	r4, #1
 8010756:	19a4      	adds	r4, r4, r6
 8010758:	f100 808c 	bmi.w	8010874 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801075c:	fb94 fef6 	sdiv	lr, r4, r6
 8010760:	fb06 441e 	mls	r4, r6, lr, r4
 8010764:	f8c0 e000 	str.w	lr, [r0]
 8010768:	6104      	str	r4, [r0, #16]
 801076a:	2d00      	cmp	r5, #0
 801076c:	f2c0 8095 	blt.w	801089a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8010770:	fb95 f4f6 	sdiv	r4, r5, r6
 8010774:	fb06 5514 	mls	r5, r6, r4, r5
 8010778:	6044      	str	r4, [r0, #4]
 801077a:	6085      	str	r5, [r0, #8]
 801077c:	60c6      	str	r6, [r0, #12]
 801077e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8010782:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8010786:	6945      	ldr	r5, [r0, #20]
 8010788:	59d2      	ldr	r2, [r2, r7]
 801078a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801078e:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 80108bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8010792:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8010796:	ee07 4a10 	vmov	s14, r4
 801079a:	6804      	ldr	r4, [r0, #0]
 801079c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80107a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80107a4:	ee07 2a90 	vmov	s15, r2
 80107a8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80107ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80107b0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80107b4:	edd3 6a00 	vldr	s13, [r3]
 80107b8:	eee6 6a07 	vfma.f32	s13, s12, s14
 80107bc:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 80107c0:	eee6 6a27 	vfma.f32	s13, s12, s15
 80107c4:	edc0 6a07 	vstr	s13, [r0, #28]
 80107c8:	edd0 6a01 	vldr	s13, [r0, #4]
 80107cc:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 80107d0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80107d4:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80107d8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80107dc:	ed80 6a08 	vstr	s12, [r0, #32]
 80107e0:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 80107e2:	6242      	str	r2, [r0, #36]	@ 0x24
 80107e4:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 80107e8:	ed93 6a03 	vldr	s12, [r3, #12]
 80107ec:	eea5 6a87 	vfma.f32	s12, s11, s14
 80107f0:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80107f4:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80107f8:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 80107fc:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8010800:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8010804:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8010808:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 801080c:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801080e:	6302      	str	r2, [r0, #48]	@ 0x30
 8010810:	ed93 6a06 	vldr	s12, [r3, #24]
 8010814:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8010818:	eea5 6a87 	vfma.f32	s12, s11, s14
 801081c:	eeb0 7a46 	vmov.f32	s14, s12
 8010820:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8010824:	eea6 7a27 	vfma.f32	s14, s12, s15
 8010828:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801082c:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8010830:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8010834:	eee6 7a87 	vfma.f32	s15, s13, s14
 8010838:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801083c:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801083e:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8010840:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010844:	2410      	movs	r4, #16
 8010846:	f1c5 0501 	rsb	r5, r5, #1
 801084a:	fb9e fef4 	sdiv	lr, lr, r4
 801084e:	f015 050f 	ands.w	r5, r5, #15
 8010852:	bf18      	it	ne
 8010854:	2501      	movne	r5, #1
 8010856:	ebae 0e05 	sub.w	lr, lr, r5
 801085a:	e753      	b.n	8010704 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801085c:	f04f 0910 	mov.w	r9, #16
 8010860:	f1c5 0501 	rsb	r5, r5, #1
 8010864:	fb94 f4f9 	sdiv	r4, r4, r9
 8010868:	f015 050f 	ands.w	r5, r5, #15
 801086c:	bf18      	it	ne
 801086e:	2501      	movne	r5, #1
 8010870:	1b64      	subs	r4, r4, r5
 8010872:	e755      	b.n	8010720 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8010874:	4264      	negs	r4, r4
 8010876:	fb94 fef6 	sdiv	lr, r4, r6
 801087a:	f1ce 0800 	rsb	r8, lr, #0
 801087e:	fb06 441e 	mls	r4, r6, lr, r4
 8010882:	f8c0 8000 	str.w	r8, [r0]
 8010886:	6104      	str	r4, [r0, #16]
 8010888:	2c00      	cmp	r4, #0
 801088a:	f43f af6e 	beq.w	801076a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801088e:	ea6f 0e0e 	mvn.w	lr, lr
 8010892:	1b34      	subs	r4, r6, r4
 8010894:	f8c0 e000 	str.w	lr, [r0]
 8010898:	e766      	b.n	8010768 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801089a:	426d      	negs	r5, r5
 801089c:	fb95 f4f6 	sdiv	r4, r5, r6
 80108a0:	f1c4 0e00 	rsb	lr, r4, #0
 80108a4:	fb06 5514 	mls	r5, r6, r4, r5
 80108a8:	f8c0 e004 	str.w	lr, [r0, #4]
 80108ac:	6085      	str	r5, [r0, #8]
 80108ae:	2d00      	cmp	r5, #0
 80108b0:	f43f af64 	beq.w	801077c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80108b4:	43e4      	mvns	r4, r4
 80108b6:	1b75      	subs	r5, r6, r5
 80108b8:	6044      	str	r4, [r0, #4]
 80108ba:	e75e      	b.n	801077a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80108bc:	3d800000 	.word	0x3d800000

080108c0 <_ZN8touchgfx7Unicode6strlenEPKt>:
 80108c0:	4602      	mov	r2, r0
 80108c2:	b148      	cbz	r0, 80108d8 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80108c4:	2300      	movs	r3, #0
 80108c6:	b298      	uxth	r0, r3
 80108c8:	3301      	adds	r3, #1
 80108ca:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80108ce:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80108d2:	2900      	cmp	r1, #0
 80108d4:	d1f7      	bne.n	80108c6 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80108d6:	4770      	bx	lr
 80108d8:	4770      	bx	lr

080108da <_ZN8touchgfx7Unicode7strncpyEPtPKtt>:
 80108da:	b530      	push	{r4, r5, lr}
 80108dc:	4604      	mov	r4, r0
 80108de:	b161      	cbz	r1, 80108fa <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0x20>
 80108e0:	b150      	cbz	r0, 80108f8 <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0x1e>
 80108e2:	2300      	movs	r3, #0
 80108e4:	b298      	uxth	r0, r3
 80108e6:	4290      	cmp	r0, r2
 80108e8:	d206      	bcs.n	80108f8 <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0x1e>
 80108ea:	f831 5013 	ldrh.w	r5, [r1, r3, lsl #1]
 80108ee:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80108f2:	3301      	adds	r3, #1
 80108f4:	2d00      	cmp	r5, #0
 80108f6:	d1f5      	bne.n	80108e4 <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0xa>
 80108f8:	bd30      	pop	{r4, r5, pc}
 80108fa:	4608      	mov	r0, r1
 80108fc:	e7fc      	b.n	80108f8 <_ZN8touchgfx7Unicode7strncpyEPtPKtt+0x1e>

080108fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80108fe:	b530      	push	{r4, r5, lr}
 8010900:	4604      	mov	r4, r0
 8010902:	b159      	cbz	r1, 801091c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8010904:	b148      	cbz	r0, 801091a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8010906:	2300      	movs	r3, #0
 8010908:	b298      	uxth	r0, r3
 801090a:	4282      	cmp	r2, r0
 801090c:	d905      	bls.n	801091a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801090e:	5ccd      	ldrb	r5, [r1, r3]
 8010910:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8010914:	3301      	adds	r3, #1
 8010916:	2d00      	cmp	r5, #0
 8010918:	d1f6      	bne.n	8010908 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801091a:	bd30      	pop	{r4, r5, pc}
 801091c:	4608      	mov	r0, r1
 801091e:	e7fc      	b.n	801091a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08010920 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8010920:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010922:	b08b      	sub	sp, #44	@ 0x2c
 8010924:	468c      	mov	ip, r1
 8010926:	4604      	mov	r4, r0
 8010928:	2100      	movs	r1, #0
 801092a:	261f      	movs	r6, #31
 801092c:	af01      	add	r7, sp, #4
 801092e:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8010932:	1e71      	subs	r1, r6, #1
 8010934:	fb94 fef3 	sdiv	lr, r4, r3
 8010938:	fb03 441e 	mls	r4, r3, lr, r4
 801093c:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8010940:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8010944:	b2ec      	uxtb	r4, r5
 8010946:	2d09      	cmp	r5, #9
 8010948:	bfd4      	ite	le
 801094a:	3430      	addle	r4, #48	@ 0x30
 801094c:	3457      	addgt	r4, #87	@ 0x57
 801094e:	b2e4      	uxtb	r4, r4
 8010950:	55bc      	strb	r4, [r7, r6]
 8010952:	4674      	mov	r4, lr
 8010954:	b974      	cbnz	r4, 8010974 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8010956:	2800      	cmp	r0, #0
 8010958:	da05      	bge.n	8010966 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801095a:	ab0a      	add	r3, sp, #40	@ 0x28
 801095c:	4419      	add	r1, r3
 801095e:	232d      	movs	r3, #45	@ 0x2d
 8010960:	f801 3c24 	strb.w	r3, [r1, #-36]
 8010964:	1eb1      	subs	r1, r6, #2
 8010966:	3101      	adds	r1, #1
 8010968:	4660      	mov	r0, ip
 801096a:	4439      	add	r1, r7
 801096c:	f7ff ffc7 	bl	80108fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8010970:	b00b      	add	sp, #44	@ 0x2c
 8010972:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010974:	460e      	mov	r6, r1
 8010976:	e7dc      	b.n	8010932 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08010978 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8010978:	b5f0      	push	{r4, r5, r6, r7, lr}
 801097a:	468c      	mov	ip, r1
 801097c:	b08b      	sub	sp, #44	@ 0x2c
 801097e:	2100      	movs	r1, #0
 8010980:	ae01      	add	r6, sp, #4
 8010982:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8010986:	211f      	movs	r1, #31
 8010988:	fbb0 f7f3 	udiv	r7, r0, r3
 801098c:	fb03 0517 	mls	r5, r3, r7, r0
 8010990:	4638      	mov	r0, r7
 8010992:	b2ec      	uxtb	r4, r5
 8010994:	2d09      	cmp	r5, #9
 8010996:	bfd4      	ite	le
 8010998:	3430      	addle	r4, #48	@ 0x30
 801099a:	3457      	addgt	r4, #87	@ 0x57
 801099c:	b2e4      	uxtb	r4, r4
 801099e:	558c      	strb	r4, [r1, r6]
 80109a0:	1e4c      	subs	r4, r1, #1
 80109a2:	b92f      	cbnz	r7, 80109b0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80109a4:	4431      	add	r1, r6
 80109a6:	4660      	mov	r0, ip
 80109a8:	f7ff ffa9 	bl	80108fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80109ac:	b00b      	add	sp, #44	@ 0x2c
 80109ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80109b0:	4621      	mov	r1, r4
 80109b2:	e7e9      	b.n	8010988 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080109b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80109b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109b8:	b085      	sub	sp, #20
 80109ba:	4691      	mov	r9, r2
 80109bc:	6802      	ldr	r2, [r0, #0]
 80109be:	4688      	mov	r8, r1
 80109c0:	461c      	mov	r4, r3
 80109c2:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 80109c6:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 80109ca:	4683      	mov	fp, r0
 80109cc:	4610      	mov	r0, r2
 80109ce:	9103      	str	r1, [sp, #12]
 80109d0:	9302      	str	r3, [sp, #8]
 80109d2:	9201      	str	r2, [sp, #4]
 80109d4:	f7ff ff74 	bl	80108c0 <_ZN8touchgfx7Unicode6strlenEPKt>
 80109d8:	f1b8 0f00 	cmp.w	r8, #0
 80109dc:	bf0c      	ite	eq
 80109de:	4684      	moveq	ip, r0
 80109e0:	f100 0c01 	addne.w	ip, r0, #1
 80109e4:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 80109e8:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 80109ec:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80109ee:	fa1f fc8c 	uxth.w	ip, ip
 80109f2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80109f4:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 80109f8:	9903      	ldr	r1, [sp, #12]
 80109fa:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80109fe:	d041      	beq.n	8010a84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8010a00:	d834      	bhi.n	8010a6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8010a02:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8010a06:	d059      	beq.n	8010abc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8010a08:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8010a0c:	d03a      	beq.n	8010a84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8010a0e:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8010a12:	d034      	beq.n	8010a7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8010a14:	2400      	movs	r4, #0
 8010a16:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8010a1a:	3a01      	subs	r2, #1
 8010a1c:	b169      	cbz	r1, 8010a3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8010a1e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8010a20:	458c      	cmp	ip, r1
 8010a22:	da09      	bge.n	8010a38 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8010a24:	eba1 010c 	sub.w	r1, r1, ip
 8010a28:	b289      	uxth	r1, r1
 8010a2a:	b933      	cbnz	r3, 8010a3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8010a2c:	2e00      	cmp	r6, #0
 8010a2e:	d051      	beq.n	8010ad4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8010a30:	2800      	cmp	r0, #0
 8010a32:	d04f      	beq.n	8010ad4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8010a34:	440c      	add	r4, r1
 8010a36:	b2a4      	uxth	r4, r4
 8010a38:	2100      	movs	r1, #0
 8010a3a:	682b      	ldr	r3, [r5, #0]
 8010a3c:	4293      	cmp	r3, r2
 8010a3e:	da07      	bge.n	8010a50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8010a40:	f1b8 0f00 	cmp.w	r8, #0
 8010a44:	d004      	beq.n	8010a50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8010a46:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8010a4a:	682b      	ldr	r3, [r5, #0]
 8010a4c:	3301      	adds	r3, #1
 8010a4e:	602b      	str	r3, [r5, #0]
 8010a50:	2730      	movs	r7, #48	@ 0x30
 8010a52:	2c00      	cmp	r4, #0
 8010a54:	d04e      	beq.n	8010af4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8010a56:	682e      	ldr	r6, [r5, #0]
 8010a58:	3c01      	subs	r4, #1
 8010a5a:	42b2      	cmp	r2, r6
 8010a5c:	b2a4      	uxth	r4, r4
 8010a5e:	dd49      	ble.n	8010af4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8010a60:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8010a64:	682b      	ldr	r3, [r5, #0]
 8010a66:	3301      	adds	r3, #1
 8010a68:	602b      	str	r3, [r5, #0]
 8010a6a:	e7f2      	b.n	8010a52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8010a6c:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8010a70:	d01d      	beq.n	8010aae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8010a72:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8010a76:	d002      	beq.n	8010a7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8010a78:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8010a7c:	e7c9      	b.n	8010a12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8010a7e:	4684      	mov	ip, r0
 8010a80:	f04f 0800 	mov.w	r8, #0
 8010a84:	2c00      	cmp	r4, #0
 8010a86:	d0c6      	beq.n	8010a16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010a88:	b947      	cbnz	r7, 8010a9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8010a8a:	2801      	cmp	r0, #1
 8010a8c:	d106      	bne.n	8010a9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8010a8e:	8814      	ldrh	r4, [r2, #0]
 8010a90:	2c30      	cmp	r4, #48	@ 0x30
 8010a92:	bf02      	ittt	eq
 8010a94:	3202      	addeq	r2, #2
 8010a96:	4638      	moveq	r0, r7
 8010a98:	f8cb 2000 	streq.w	r2, [fp]
 8010a9c:	45bc      	cmp	ip, r7
 8010a9e:	da14      	bge.n	8010aca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8010aa0:	b2bf      	uxth	r7, r7
 8010aa2:	eba7 040c 	sub.w	r4, r7, ip
 8010aa6:	46bc      	mov	ip, r7
 8010aa8:	b2a4      	uxth	r4, r4
 8010aaa:	2600      	movs	r6, #0
 8010aac:	e7b3      	b.n	8010a16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010aae:	4684      	mov	ip, r0
 8010ab0:	b16c      	cbz	r4, 8010ace <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8010ab2:	42b8      	cmp	r0, r7
 8010ab4:	dd00      	ble.n	8010ab8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8010ab6:	b2b8      	uxth	r0, r7
 8010ab8:	2400      	movs	r4, #0
 8010aba:	e003      	b.n	8010ac4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8010abc:	f04f 0c01 	mov.w	ip, #1
 8010ac0:	2400      	movs	r4, #0
 8010ac2:	4660      	mov	r0, ip
 8010ac4:	4626      	mov	r6, r4
 8010ac6:	46a0      	mov	r8, r4
 8010ac8:	e7a5      	b.n	8010a16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010aca:	2400      	movs	r4, #0
 8010acc:	e7ed      	b.n	8010aaa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8010ace:	4626      	mov	r6, r4
 8010ad0:	46a0      	mov	r8, r4
 8010ad2:	e7a0      	b.n	8010a16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010ad4:	2900      	cmp	r1, #0
 8010ad6:	d0b0      	beq.n	8010a3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8010ad8:	2720      	movs	r7, #32
 8010ada:	682e      	ldr	r6, [r5, #0]
 8010adc:	2900      	cmp	r1, #0
 8010ade:	d0ac      	beq.n	8010a3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8010ae0:	3901      	subs	r1, #1
 8010ae2:	4296      	cmp	r6, r2
 8010ae4:	b289      	uxth	r1, r1
 8010ae6:	daa7      	bge.n	8010a38 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8010ae8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8010aec:	682b      	ldr	r3, [r5, #0]
 8010aee:	3301      	adds	r3, #1
 8010af0:	602b      	str	r3, [r5, #0]
 8010af2:	e7f2      	b.n	8010ada <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8010af4:	b188      	cbz	r0, 8010b1a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8010af6:	682b      	ldr	r3, [r5, #0]
 8010af8:	3801      	subs	r0, #1
 8010afa:	429a      	cmp	r2, r3
 8010afc:	b280      	uxth	r0, r0
 8010afe:	dd0c      	ble.n	8010b1a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8010b00:	f8db 3000 	ldr.w	r3, [fp]
 8010b04:	1c9c      	adds	r4, r3, #2
 8010b06:	f8cb 4000 	str.w	r4, [fp]
 8010b0a:	881c      	ldrh	r4, [r3, #0]
 8010b0c:	682b      	ldr	r3, [r5, #0]
 8010b0e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8010b12:	682b      	ldr	r3, [r5, #0]
 8010b14:	3301      	adds	r3, #1
 8010b16:	602b      	str	r3, [r5, #0]
 8010b18:	e7ec      	b.n	8010af4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8010b1a:	2620      	movs	r6, #32
 8010b1c:	b151      	cbz	r1, 8010b34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8010b1e:	6828      	ldr	r0, [r5, #0]
 8010b20:	3901      	subs	r1, #1
 8010b22:	4282      	cmp	r2, r0
 8010b24:	b289      	uxth	r1, r1
 8010b26:	dd05      	ble.n	8010b34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8010b28:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8010b2c:	682b      	ldr	r3, [r5, #0]
 8010b2e:	3301      	adds	r3, #1
 8010b30:	602b      	str	r3, [r5, #0]
 8010b32:	e7f3      	b.n	8010b1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8010b34:	b005      	add	sp, #20
 8010b36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010b3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8010b3a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b3e:	2400      	movs	r4, #0
 8010b40:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8010b44:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8010b48:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8010b4c:	8014      	strh	r4, [r2, #0]
 8010b4e:	701c      	strb	r4, [r3, #0]
 8010b50:	f888 4000 	strb.w	r4, [r8]
 8010b54:	f88c 4000 	strb.w	r4, [ip]
 8010b58:	f88e 4000 	strb.w	r4, [lr]
 8010b5c:	703c      	strb	r4, [r7, #0]
 8010b5e:	6804      	ldr	r4, [r0, #0]
 8010b60:	b1a4      	cbz	r4, 8010b8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8010b62:	8824      	ldrh	r4, [r4, #0]
 8010b64:	f04f 0901 	mov.w	r9, #1
 8010b68:	b314      	cbz	r4, 8010bb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8010b6a:	2c2b      	cmp	r4, #43	@ 0x2b
 8010b6c:	d001      	beq.n	8010b72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8010b6e:	2c20      	cmp	r4, #32
 8010b70:	d110      	bne.n	8010b94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8010b72:	8014      	strh	r4, [r2, #0]
 8010b74:	6804      	ldr	r4, [r0, #0]
 8010b76:	b10c      	cbz	r4, 8010b7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8010b78:	3402      	adds	r4, #2
 8010b7a:	6004      	str	r4, [r0, #0]
 8010b7c:	680c      	ldr	r4, [r1, #0]
 8010b7e:	b10c      	cbz	r4, 8010b84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8010b80:	3401      	adds	r4, #1
 8010b82:	600c      	str	r4, [r1, #0]
 8010b84:	6804      	ldr	r4, [r0, #0]
 8010b86:	b17c      	cbz	r4, 8010ba8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8010b88:	8824      	ldrh	r4, [r4, #0]
 8010b8a:	e7ed      	b.n	8010b68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8010b8c:	680c      	ldr	r4, [r1, #0]
 8010b8e:	b17c      	cbz	r4, 8010bb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8010b90:	7824      	ldrb	r4, [r4, #0]
 8010b92:	e7e7      	b.n	8010b64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8010b94:	2c2d      	cmp	r4, #45	@ 0x2d
 8010b96:	d102      	bne.n	8010b9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8010b98:	f883 9000 	strb.w	r9, [r3]
 8010b9c:	e7ea      	b.n	8010b74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8010b9e:	2c23      	cmp	r4, #35	@ 0x23
 8010ba0:	d107      	bne.n	8010bb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8010ba2:	f888 9000 	strb.w	r9, [r8]
 8010ba6:	e7e5      	b.n	8010b74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8010ba8:	680c      	ldr	r4, [r1, #0]
 8010baa:	b10c      	cbz	r4, 8010bb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8010bac:	7824      	ldrb	r4, [r4, #0]
 8010bae:	e7db      	b.n	8010b68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8010bb0:	2400      	movs	r4, #0
 8010bb2:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8010bb6:	2b09      	cmp	r3, #9
 8010bb8:	d901      	bls.n	8010bbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8010bba:	2c2a      	cmp	r4, #42	@ 0x2a
 8010bbc:	d122      	bne.n	8010c04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8010bbe:	2301      	movs	r3, #1
 8010bc0:	2c30      	cmp	r4, #48	@ 0x30
 8010bc2:	f88e 3000 	strb.w	r3, [lr]
 8010bc6:	d10d      	bne.n	8010be4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8010bc8:	f88c 3000 	strb.w	r3, [ip]
 8010bcc:	6803      	ldr	r3, [r0, #0]
 8010bce:	b10b      	cbz	r3, 8010bd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8010bd0:	3302      	adds	r3, #2
 8010bd2:	6003      	str	r3, [r0, #0]
 8010bd4:	680b      	ldr	r3, [r1, #0]
 8010bd6:	b10b      	cbz	r3, 8010bdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8010bd8:	3301      	adds	r3, #1
 8010bda:	600b      	str	r3, [r1, #0]
 8010bdc:	6803      	ldr	r3, [r0, #0]
 8010bde:	2b00      	cmp	r3, #0
 8010be0:	d02f      	beq.n	8010c42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8010be2:	881c      	ldrh	r4, [r3, #0]
 8010be4:	2c2a      	cmp	r4, #42	@ 0x2a
 8010be6:	d135      	bne.n	8010c54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8010be8:	f04f 33ff 	mov.w	r3, #4294967295
 8010bec:	6033      	str	r3, [r6, #0]
 8010bee:	6803      	ldr	r3, [r0, #0]
 8010bf0:	b10b      	cbz	r3, 8010bf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8010bf2:	3302      	adds	r3, #2
 8010bf4:	6003      	str	r3, [r0, #0]
 8010bf6:	680b      	ldr	r3, [r1, #0]
 8010bf8:	b10b      	cbz	r3, 8010bfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8010bfa:	3301      	adds	r3, #1
 8010bfc:	600b      	str	r3, [r1, #0]
 8010bfe:	6803      	ldr	r3, [r0, #0]
 8010c00:	b31b      	cbz	r3, 8010c4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8010c02:	881c      	ldrh	r4, [r3, #0]
 8010c04:	2c2e      	cmp	r4, #46	@ 0x2e
 8010c06:	d11a      	bne.n	8010c3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010c08:	2301      	movs	r3, #1
 8010c0a:	703b      	strb	r3, [r7, #0]
 8010c0c:	6803      	ldr	r3, [r0, #0]
 8010c0e:	b10b      	cbz	r3, 8010c14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8010c10:	3302      	adds	r3, #2
 8010c12:	6003      	str	r3, [r0, #0]
 8010c14:	680b      	ldr	r3, [r1, #0]
 8010c16:	b10b      	cbz	r3, 8010c1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8010c18:	3301      	adds	r3, #1
 8010c1a:	600b      	str	r3, [r1, #0]
 8010c1c:	6803      	ldr	r3, [r0, #0]
 8010c1e:	2b00      	cmp	r3, #0
 8010c20:	d036      	beq.n	8010c90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8010c22:	881b      	ldrh	r3, [r3, #0]
 8010c24:	2b2a      	cmp	r3, #42	@ 0x2a
 8010c26:	d137      	bne.n	8010c98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8010c28:	f04f 33ff 	mov.w	r3, #4294967295
 8010c2c:	602b      	str	r3, [r5, #0]
 8010c2e:	6803      	ldr	r3, [r0, #0]
 8010c30:	b10b      	cbz	r3, 8010c36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8010c32:	3302      	adds	r3, #2
 8010c34:	6003      	str	r3, [r0, #0]
 8010c36:	680b      	ldr	r3, [r1, #0]
 8010c38:	b10b      	cbz	r3, 8010c3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010c3a:	3301      	adds	r3, #1
 8010c3c:	600b      	str	r3, [r1, #0]
 8010c3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010c42:	680c      	ldr	r4, [r1, #0]
 8010c44:	b134      	cbz	r4, 8010c54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8010c46:	7824      	ldrb	r4, [r4, #0]
 8010c48:	e7cc      	b.n	8010be4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8010c4a:	680b      	ldr	r3, [r1, #0]
 8010c4c:	2b00      	cmp	r3, #0
 8010c4e:	d0f6      	beq.n	8010c3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010c50:	781c      	ldrb	r4, [r3, #0]
 8010c52:	e7d7      	b.n	8010c04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8010c54:	2300      	movs	r3, #0
 8010c56:	220a      	movs	r2, #10
 8010c58:	6033      	str	r3, [r6, #0]
 8010c5a:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8010c5e:	fa1f f38c 	uxth.w	r3, ip
 8010c62:	2b09      	cmp	r3, #9
 8010c64:	d8ce      	bhi.n	8010c04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8010c66:	6833      	ldr	r3, [r6, #0]
 8010c68:	fb02 c303 	mla	r3, r2, r3, ip
 8010c6c:	6033      	str	r3, [r6, #0]
 8010c6e:	6803      	ldr	r3, [r0, #0]
 8010c70:	b10b      	cbz	r3, 8010c76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8010c72:	3302      	adds	r3, #2
 8010c74:	6003      	str	r3, [r0, #0]
 8010c76:	680b      	ldr	r3, [r1, #0]
 8010c78:	b10b      	cbz	r3, 8010c7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8010c7a:	3301      	adds	r3, #1
 8010c7c:	600b      	str	r3, [r1, #0]
 8010c7e:	6803      	ldr	r3, [r0, #0]
 8010c80:	b10b      	cbz	r3, 8010c86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8010c82:	881c      	ldrh	r4, [r3, #0]
 8010c84:	e7e9      	b.n	8010c5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010c86:	680c      	ldr	r4, [r1, #0]
 8010c88:	2c00      	cmp	r4, #0
 8010c8a:	d0e6      	beq.n	8010c5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010c8c:	7824      	ldrb	r4, [r4, #0]
 8010c8e:	e7e4      	b.n	8010c5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010c90:	680b      	ldr	r3, [r1, #0]
 8010c92:	b10b      	cbz	r3, 8010c98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8010c94:	781b      	ldrb	r3, [r3, #0]
 8010c96:	e7c5      	b.n	8010c24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8010c98:	2200      	movs	r2, #0
 8010c9a:	240a      	movs	r4, #10
 8010c9c:	602a      	str	r2, [r5, #0]
 8010c9e:	3b30      	subs	r3, #48	@ 0x30
 8010ca0:	682a      	ldr	r2, [r5, #0]
 8010ca2:	b29e      	uxth	r6, r3
 8010ca4:	2e09      	cmp	r6, #9
 8010ca6:	d813      	bhi.n	8010cd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8010ca8:	fb04 3302 	mla	r3, r4, r2, r3
 8010cac:	602b      	str	r3, [r5, #0]
 8010cae:	6803      	ldr	r3, [r0, #0]
 8010cb0:	b10b      	cbz	r3, 8010cb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8010cb2:	3302      	adds	r3, #2
 8010cb4:	6003      	str	r3, [r0, #0]
 8010cb6:	680b      	ldr	r3, [r1, #0]
 8010cb8:	b10b      	cbz	r3, 8010cbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8010cba:	3301      	adds	r3, #1
 8010cbc:	600b      	str	r3, [r1, #0]
 8010cbe:	6803      	ldr	r3, [r0, #0]
 8010cc0:	b10b      	cbz	r3, 8010cc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8010cc2:	881b      	ldrh	r3, [r3, #0]
 8010cc4:	e7eb      	b.n	8010c9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010cc6:	680b      	ldr	r3, [r1, #0]
 8010cc8:	2b00      	cmp	r3, #0
 8010cca:	d0e8      	beq.n	8010c9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010ccc:	781b      	ldrb	r3, [r3, #0]
 8010cce:	e7e6      	b.n	8010c9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010cd0:	2a06      	cmp	r2, #6
 8010cd2:	bfa8      	it	ge
 8010cd4:	2206      	movge	r2, #6
 8010cd6:	602a      	str	r2, [r5, #0]
 8010cd8:	e7b1      	b.n	8010c3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08010cda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8010cda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cde:	b0a3      	sub	sp, #140	@ 0x8c
 8010ce0:	2600      	movs	r6, #0
 8010ce2:	4607      	mov	r7, r0
 8010ce4:	4688      	mov	r8, r1
 8010ce6:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 8010cea:	4631      	mov	r1, r6
 8010cec:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8010cee:	4648      	mov	r0, r9
 8010cf0:	960d      	str	r6, [sp, #52]	@ 0x34
 8010cf2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8010cf6:	2242      	movs	r2, #66	@ 0x42
 8010cf8:	f00e f936 	bl	801ef68 <memset>
 8010cfc:	b15f      	cbz	r7, 8010d16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8010cfe:	f108 3aff 	add.w	sl, r8, #4294967295
 8010d02:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010d04:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010d06:	b152      	cbz	r2, 8010d1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8010d08:	8812      	ldrh	r2, [r2, #0]
 8010d0a:	b10a      	cbz	r2, 8010d10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8010d0c:	459a      	cmp	sl, r3
 8010d0e:	dc2e      	bgt.n	8010d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8010d10:	2200      	movs	r2, #0
 8010d12:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8010d16:	4638      	mov	r0, r7
 8010d18:	b023      	add	sp, #140	@ 0x8c
 8010d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d1e:	9a08      	ldr	r2, [sp, #32]
 8010d20:	2a00      	cmp	r2, #0
 8010d22:	d0f5      	beq.n	8010d10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8010d24:	7812      	ldrb	r2, [r2, #0]
 8010d26:	e7f0      	b.n	8010d0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8010d28:	2d00      	cmp	r5, #0
 8010d2a:	d0ea      	beq.n	8010d02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010d2c:	782a      	ldrb	r2, [r5, #0]
 8010d2e:	b142      	cbz	r2, 8010d42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8010d30:	2a25      	cmp	r2, #37	@ 0x25
 8010d32:	d001      	beq.n	8010d38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8010d34:	459a      	cmp	sl, r3
 8010d36:	dc08      	bgt.n	8010d4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8010d38:	f1bb 0f00 	cmp.w	fp, #0
 8010d3c:	d121      	bne.n	8010d82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8010d3e:	2d00      	cmp	r5, #0
 8010d40:	d0df      	beq.n	8010d02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010d42:	782a      	ldrb	r2, [r5, #0]
 8010d44:	f04f 0b00 	mov.w	fp, #0
 8010d48:	e01d      	b.n	8010d86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8010d4a:	f1bb 0f00 	cmp.w	fp, #0
 8010d4e:	d077      	beq.n	8010e40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 8010d50:	f8bb 2000 	ldrh.w	r2, [fp]
 8010d54:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8010d58:	f1bb 0f00 	cmp.w	fp, #0
 8010d5c:	d002      	beq.n	8010d64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8010d5e:	f10b 0202 	add.w	r2, fp, #2
 8010d62:	9209      	str	r2, [sp, #36]	@ 0x24
 8010d64:	b10d      	cbz	r5, 8010d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8010d66:	3501      	adds	r5, #1
 8010d68:	9508      	str	r5, [sp, #32]
 8010d6a:	3301      	adds	r3, #1
 8010d6c:	930d      	str	r3, [sp, #52]	@ 0x34
 8010d6e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010d70:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8010d74:	f1bb 0f00 	cmp.w	fp, #0
 8010d78:	d0d6      	beq.n	8010d28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8010d7a:	f8bb 2000 	ldrh.w	r2, [fp]
 8010d7e:	2a00      	cmp	r2, #0
 8010d80:	d1d6      	bne.n	8010d30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8010d82:	f8bb 2000 	ldrh.w	r2, [fp]
 8010d86:	2a00      	cmp	r2, #0
 8010d88:	d0bb      	beq.n	8010d02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010d8a:	459a      	cmp	sl, r3
 8010d8c:	ddb9      	ble.n	8010d02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010d8e:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8010d92:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8010d96:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8010d9a:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8010d9e:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8010da2:	960e      	str	r6, [sp, #56]	@ 0x38
 8010da4:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8010da8:	960f      	str	r6, [sp, #60]	@ 0x3c
 8010daa:	f1bb 0f00 	cmp.w	fp, #0
 8010dae:	d002      	beq.n	8010db6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8010db0:	f10b 0302 	add.w	r3, fp, #2
 8010db4:	9309      	str	r3, [sp, #36]	@ 0x24
 8010db6:	b10d      	cbz	r5, 8010dbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8010db8:	1c6b      	adds	r3, r5, #1
 8010dba:	9308      	str	r3, [sp, #32]
 8010dbc:	ab0f      	add	r3, sp, #60	@ 0x3c
 8010dbe:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8010dc2:	a908      	add	r1, sp, #32
 8010dc4:	a809      	add	r0, sp, #36	@ 0x24
 8010dc6:	9305      	str	r3, [sp, #20]
 8010dc8:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8010dcc:	9304      	str	r3, [sp, #16]
 8010dce:	ab0e      	add	r3, sp, #56	@ 0x38
 8010dd0:	9303      	str	r3, [sp, #12]
 8010dd2:	ab0c      	add	r3, sp, #48	@ 0x30
 8010dd4:	9302      	str	r3, [sp, #8]
 8010dd6:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8010dda:	9301      	str	r3, [sp, #4]
 8010ddc:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8010de0:	9300      	str	r3, [sp, #0]
 8010de2:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8010de6:	f7ff fea8 	bl	8010b3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8010dea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010dec:	2b00      	cmp	r3, #0
 8010dee:	bfbf      	itttt	lt
 8010df0:	6823      	ldrlt	r3, [r4, #0]
 8010df2:	3404      	addlt	r4, #4
 8010df4:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8010df8:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8010dfa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8010dfc:	2b00      	cmp	r3, #0
 8010dfe:	bfbe      	ittt	lt
 8010e00:	6823      	ldrlt	r3, [r4, #0]
 8010e02:	3404      	addlt	r4, #4
 8010e04:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8010e08:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8010e0c:	bfb8      	it	lt
 8010e0e:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8010e10:	b1d9      	cbz	r1, 8010e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 8010e12:	880b      	ldrh	r3, [r1, #0]
 8010e14:	2b69      	cmp	r3, #105	@ 0x69
 8010e16:	d01f      	beq.n	8010e58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010e18:	d82f      	bhi.n	8010e7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 8010e1a:	2b58      	cmp	r3, #88	@ 0x58
 8010e1c:	d01c      	beq.n	8010e58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010e1e:	d818      	bhi.n	8010e52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 8010e20:	2b25      	cmp	r3, #37	@ 0x25
 8010e22:	d034      	beq.n	8010e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 8010e24:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010e26:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8010e2a:	f1bb 0f00 	cmp.w	fp, #0
 8010e2e:	f000 80b7 	beq.w	8010fa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 8010e32:	f8bb 5000 	ldrh.w	r5, [fp]
 8010e36:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8010e3a:	3301      	adds	r3, #1
 8010e3c:	930d      	str	r3, [sp, #52]	@ 0x34
 8010e3e:	e029      	b.n	8010e94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8010e40:	b10d      	cbz	r5, 8010e46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 8010e42:	782a      	ldrb	r2, [r5, #0]
 8010e44:	e786      	b.n	8010d54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8010e46:	462a      	mov	r2, r5
 8010e48:	e784      	b.n	8010d54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8010e4a:	2a00      	cmp	r2, #0
 8010e4c:	d0ea      	beq.n	8010e24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8010e4e:	7813      	ldrb	r3, [r2, #0]
 8010e50:	e7e0      	b.n	8010e14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 8010e52:	3b63      	subs	r3, #99	@ 0x63
 8010e54:	2b01      	cmp	r3, #1
 8010e56:	d8e5      	bhi.n	8010e24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8010e58:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8010e5c:	b329      	cbz	r1, 8010eaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 8010e5e:	880b      	ldrh	r3, [r1, #0]
 8010e60:	2b69      	cmp	r3, #105	@ 0x69
 8010e62:	d063      	beq.n	8010f2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8010e64:	d825      	bhi.n	8010eb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 8010e66:	2b63      	cmp	r3, #99	@ 0x63
 8010e68:	d038      	beq.n	8010edc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 8010e6a:	2b64      	cmp	r3, #100	@ 0x64
 8010e6c:	d05e      	beq.n	8010f2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8010e6e:	2b58      	cmp	r3, #88	@ 0x58
 8010e70:	d07a      	beq.n	8010f68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 8010e72:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8010e76:	4625      	mov	r5, r4
 8010e78:	e036      	b.n	8010ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010e7a:	2b73      	cmp	r3, #115	@ 0x73
 8010e7c:	d0ec      	beq.n	8010e58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010e7e:	d802      	bhi.n	8010e86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 8010e80:	2b6f      	cmp	r3, #111	@ 0x6f
 8010e82:	d1cf      	bne.n	8010e24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8010e84:	e7e8      	b.n	8010e58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010e86:	2b75      	cmp	r3, #117	@ 0x75
 8010e88:	d0e6      	beq.n	8010e58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010e8a:	2b78      	cmp	r3, #120	@ 0x78
 8010e8c:	e7f9      	b.n	8010e82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 8010e8e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010e90:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8010e94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010e96:	b10b      	cbz	r3, 8010e9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 8010e98:	3302      	adds	r3, #2
 8010e9a:	9309      	str	r3, [sp, #36]	@ 0x24
 8010e9c:	9b08      	ldr	r3, [sp, #32]
 8010e9e:	2b00      	cmp	r3, #0
 8010ea0:	f43f af2f 	beq.w	8010d02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010ea4:	3301      	adds	r3, #1
 8010ea6:	9308      	str	r3, [sp, #32]
 8010ea8:	e72b      	b.n	8010d02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010eaa:	2a00      	cmp	r2, #0
 8010eac:	d0e1      	beq.n	8010e72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8010eae:	7813      	ldrb	r3, [r2, #0]
 8010eb0:	e7d6      	b.n	8010e60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 8010eb2:	2b73      	cmp	r3, #115	@ 0x73
 8010eb4:	d036      	beq.n	8010f24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 8010eb6:	d807      	bhi.n	8010ec8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 8010eb8:	2b6f      	cmp	r3, #111	@ 0x6f
 8010eba:	d1da      	bne.n	8010e72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8010ebc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010ebe:	1d25      	adds	r5, r4, #4
 8010ec0:	2308      	movs	r3, #8
 8010ec2:	eba8 0202 	sub.w	r2, r8, r2
 8010ec6:	e049      	b.n	8010f5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8010ec8:	2b75      	cmp	r3, #117	@ 0x75
 8010eca:	d042      	beq.n	8010f52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 8010ecc:	2b78      	cmp	r3, #120	@ 0x78
 8010ece:	d1d0      	bne.n	8010e72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8010ed0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010ed2:	1d25      	adds	r5, r4, #4
 8010ed4:	2310      	movs	r3, #16
 8010ed6:	eba8 0202 	sub.w	r2, r8, r2
 8010eda:	e03f      	b.n	8010f5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8010edc:	6823      	ldr	r3, [r4, #0]
 8010ede:	1d25      	adds	r5, r4, #4
 8010ee0:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 8010ee4:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8010ee8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010eea:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8010eee:	2b00      	cmp	r3, #0
 8010ef0:	d051      	beq.n	8010f96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 8010ef2:	881a      	ldrh	r2, [r3, #0]
 8010ef4:	a80d      	add	r0, sp, #52	@ 0x34
 8010ef6:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8010efa:	462c      	mov	r4, r5
 8010efc:	9005      	str	r0, [sp, #20]
 8010efe:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8010f02:	9004      	str	r0, [sp, #16]
 8010f04:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8010f06:	9003      	str	r0, [sp, #12]
 8010f08:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8010f0c:	9002      	str	r0, [sp, #8]
 8010f0e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8010f10:	9001      	str	r0, [sp, #4]
 8010f12:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8010f16:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8010f1a:	9000      	str	r0, [sp, #0]
 8010f1c:	a810      	add	r0, sp, #64	@ 0x40
 8010f1e:	f7ff fd49 	bl	80109b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8010f22:	e7b7      	b.n	8010e94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8010f24:	1d25      	adds	r5, r4, #4
 8010f26:	6823      	ldr	r3, [r4, #0]
 8010f28:	9310      	str	r3, [sp, #64]	@ 0x40
 8010f2a:	e7dd      	b.n	8010ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010f2c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010f2e:	230a      	movs	r3, #10
 8010f30:	4649      	mov	r1, r9
 8010f32:	6820      	ldr	r0, [r4, #0]
 8010f34:	eba8 0202 	sub.w	r2, r8, r2
 8010f38:	1d25      	adds	r5, r4, #4
 8010f3a:	b292      	uxth	r2, r2
 8010f3c:	f7ff fcf0 	bl	8010920 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8010f40:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8010f44:	2b2d      	cmp	r3, #45	@ 0x2d
 8010f46:	d1cf      	bne.n	8010ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010f48:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010f4c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010f4e:	3302      	adds	r3, #2
 8010f50:	e7ea      	b.n	8010f28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 8010f52:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010f54:	1d25      	adds	r5, r4, #4
 8010f56:	230a      	movs	r3, #10
 8010f58:	eba8 0202 	sub.w	r2, r8, r2
 8010f5c:	b292      	uxth	r2, r2
 8010f5e:	4649      	mov	r1, r9
 8010f60:	6820      	ldr	r0, [r4, #0]
 8010f62:	f7ff fd09 	bl	8010978 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8010f66:	e7bf      	b.n	8010ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010f68:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010f6a:	2310      	movs	r3, #16
 8010f6c:	4649      	mov	r1, r9
 8010f6e:	6820      	ldr	r0, [r4, #0]
 8010f70:	eba8 0202 	sub.w	r2, r8, r2
 8010f74:	1d25      	adds	r5, r4, #4
 8010f76:	b292      	uxth	r2, r2
 8010f78:	f7ff fcfe 	bl	8010978 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8010f7c:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 8010f80:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8010f84:	2b00      	cmp	r3, #0
 8010f86:	d0af      	beq.n	8010ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010f88:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8010f8c:	2919      	cmp	r1, #25
 8010f8e:	d8f7      	bhi.n	8010f80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8010f90:	3b20      	subs	r3, #32
 8010f92:	8013      	strh	r3, [r2, #0]
 8010f94:	e7f4      	b.n	8010f80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8010f96:	9a08      	ldr	r2, [sp, #32]
 8010f98:	2a00      	cmp	r2, #0
 8010f9a:	d0ab      	beq.n	8010ef4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8010f9c:	7812      	ldrb	r2, [r2, #0]
 8010f9e:	e7a9      	b.n	8010ef4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8010fa0:	2d00      	cmp	r5, #0
 8010fa2:	f43f af48 	beq.w	8010e36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 8010fa6:	782d      	ldrb	r5, [r5, #0]
 8010fa8:	e745      	b.n	8010e36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

08010faa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8010faa:	b507      	push	{r0, r1, r2, lr}
 8010fac:	9300      	str	r3, [sp, #0]
 8010fae:	4613      	mov	r3, r2
 8010fb0:	2200      	movs	r2, #0
 8010fb2:	f7ff fe92 	bl	8010cda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8010fb6:	b003      	add	sp, #12
 8010fb8:	f85d fb04 	ldr.w	pc, [sp], #4

08010fbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8010fbc:	b40c      	push	{r2, r3}
 8010fbe:	b507      	push	{r0, r1, r2, lr}
 8010fc0:	ab04      	add	r3, sp, #16
 8010fc2:	f853 2b04 	ldr.w	r2, [r3], #4
 8010fc6:	9301      	str	r3, [sp, #4]
 8010fc8:	f7ff ffef 	bl	8010faa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8010fcc:	b003      	add	sp, #12
 8010fce:	f85d eb04 	ldr.w	lr, [sp], #4
 8010fd2:	b002      	add	sp, #8
 8010fd4:	4770      	bx	lr
	...

08010fd8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8010fd8:	4b01      	ldr	r3, [pc, #4]	@ (8010fe0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8010fda:	6018      	str	r0, [r3, #0]
 8010fdc:	4770      	bx	lr
 8010fde:	bf00      	nop
 8010fe0:	2001510c 	.word	0x2001510c

08010fe4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8010fe4:	4b06      	ldr	r3, [pc, #24]	@ (8011000 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8010fe6:	881a      	ldrh	r2, [r3, #0]
 8010fe8:	4282      	cmp	r2, r0
 8010fea:	d807      	bhi.n	8010ffc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8010fec:	4b05      	ldr	r3, [pc, #20]	@ (8011004 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8010fee:	881b      	ldrh	r3, [r3, #0]
 8010ff0:	4413      	add	r3, r2
 8010ff2:	4298      	cmp	r0, r3
 8010ff4:	bfac      	ite	ge
 8010ff6:	2000      	movge	r0, #0
 8010ff8:	2001      	movlt	r0, #1
 8010ffa:	4770      	bx	lr
 8010ffc:	2000      	movs	r0, #0
 8010ffe:	4770      	bx	lr
 8011000:	2001512c 	.word	0x2001512c
 8011004:	20015130 	.word	0x20015130

08011008 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8011008:	b508      	push	{r3, lr}
 801100a:	4601      	mov	r1, r0
 801100c:	f7ff ffea 	bl	8010fe4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8011010:	b118      	cbz	r0, 801101a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8011012:	4b02      	ldr	r3, [pc, #8]	@ (801101c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8011014:	681b      	ldr	r3, [r3, #0]
 8011016:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801101a:	bd08      	pop	{r3, pc}
 801101c:	20015110 	.word	0x20015110

08011020 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8011020:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011022:	4c24      	ldr	r4, [pc, #144]	@ (80110b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8011024:	6823      	ldr	r3, [r4, #0]
 8011026:	2b00      	cmp	r3, #0
 8011028:	d042      	beq.n	80110b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801102a:	4a23      	ldr	r2, [pc, #140]	@ (80110b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801102c:	4d23      	ldr	r5, [pc, #140]	@ (80110bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801102e:	8811      	ldrh	r1, [r2, #0]
 8011030:	f8b5 c000 	ldrh.w	ip, [r5]
 8011034:	4822      	ldr	r0, [pc, #136]	@ (80110c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8011036:	4461      	add	r1, ip
 8011038:	1c4a      	adds	r2, r1, #1
 801103a:	008f      	lsls	r7, r1, #2
 801103c:	f022 0201 	bic.w	r2, r2, #1
 8011040:	19de      	adds	r6, r3, r7
 8011042:	0412      	lsls	r2, r2, #16
 8011044:	6006      	str	r6, [r0, #0]
 8011046:	4e1f      	ldr	r6, [pc, #124]	@ (80110c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8011048:	0c12      	lsrs	r2, r2, #16
 801104a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801104e:	19da      	adds	r2, r3, r7
 8011050:	6032      	str	r2, [r6, #0]
 8011052:	220e      	movs	r2, #14
 8011054:	fb02 f20c 	mul.w	r2, r2, ip
 8011058:	3203      	adds	r2, #3
 801105a:	f022 0203 	bic.w	r2, r2, #3
 801105e:	443a      	add	r2, r7
 8011060:	4f19      	ldr	r7, [pc, #100]	@ (80110c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8011062:	4413      	add	r3, r2
 8011064:	603b      	str	r3, [r7, #0]
 8011066:	2300      	movs	r3, #0
 8011068:	4f18      	ldr	r7, [pc, #96]	@ (80110cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801106a:	469c      	mov	ip, r3
 801106c:	803b      	strh	r3, [r7, #0]
 801106e:	4f18      	ldr	r7, [pc, #96]	@ (80110d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8011070:	683f      	ldr	r7, [r7, #0]
 8011072:	1aba      	subs	r2, r7, r2
 8011074:	4f17      	ldr	r7, [pc, #92]	@ (80110d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8011076:	603a      	str	r2, [r7, #0]
 8011078:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 801107c:	4a16      	ldr	r2, [pc, #88]	@ (80110d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801107e:	8013      	strh	r3, [r2, #0]
 8011080:	428b      	cmp	r3, r1
 8011082:	d10d      	bne.n	80110a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8011084:	882d      	ldrh	r5, [r5, #0]
 8011086:	2300      	movs	r3, #0
 8011088:	6830      	ldr	r0, [r6, #0]
 801108a:	240e      	movs	r4, #14
 801108c:	429d      	cmp	r5, r3
 801108e:	d90f      	bls.n	80110b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8011090:	fb04 0203 	mla	r2, r4, r3, r0
 8011094:	3301      	adds	r3, #1
 8011096:	7b11      	ldrb	r1, [r2, #12]
 8011098:	f36f 1145 	bfc	r1, #5, #1
 801109c:	7311      	strb	r1, [r2, #12]
 801109e:	e7f5      	b.n	801108c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80110a0:	6822      	ldr	r2, [r4, #0]
 80110a2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80110a6:	6802      	ldr	r2, [r0, #0]
 80110a8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80110ac:	3301      	adds	r3, #1
 80110ae:	e7e7      	b.n	8011080 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80110b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80110b2:	bf00      	nop
 80110b4:	20015110 	.word	0x20015110
 80110b8:	2001512c 	.word	0x2001512c
 80110bc:	20015130 	.word	0x20015130
 80110c0:	20015124 	.word	0x20015124
 80110c4:	20015114 	.word	0x20015114
 80110c8:	2001511c 	.word	0x2001511c
 80110cc:	2001512e 	.word	0x2001512e
 80110d0:	20015118 	.word	0x20015118
 80110d4:	20015128 	.word	0x20015128
 80110d8:	20015120 	.word	0x20015120

080110dc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80110dc:	4b06      	ldr	r3, [pc, #24]	@ (80110f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80110de:	681b      	ldr	r3, [r3, #0]
 80110e0:	b943      	cbnz	r3, 80110f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80110e2:	b139      	cbz	r1, 80110f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80110e4:	4b05      	ldr	r3, [pc, #20]	@ (80110fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80110e6:	801a      	strh	r2, [r3, #0]
 80110e8:	4b05      	ldr	r3, [pc, #20]	@ (8011100 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80110ea:	6019      	str	r1, [r3, #0]
 80110ec:	4b05      	ldr	r3, [pc, #20]	@ (8011104 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80110ee:	6018      	str	r0, [r3, #0]
 80110f0:	f7ff bf96 	b.w	8011020 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80110f4:	4770      	bx	lr
 80110f6:	bf00      	nop
 80110f8:	2001511c 	.word	0x2001511c
 80110fc:	20015130 	.word	0x20015130
 8011100:	20015118 	.word	0x20015118
 8011104:	20015110 	.word	0x20015110

08011108 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8011108:	b470      	push	{r4, r5, r6}
 801110a:	4c07      	ldr	r4, [pc, #28]	@ (8011128 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801110c:	4605      	mov	r5, r0
 801110e:	4610      	mov	r0, r2
 8011110:	9a03      	ldr	r2, [sp, #12]
 8011112:	6826      	ldr	r6, [r4, #0]
 8011114:	b936      	cbnz	r6, 8011124 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8011116:	6025      	str	r5, [r4, #0]
 8011118:	4c04      	ldr	r4, [pc, #16]	@ (801112c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801111a:	8021      	strh	r1, [r4, #0]
 801111c:	4619      	mov	r1, r3
 801111e:	bc70      	pop	{r4, r5, r6}
 8011120:	f7ff bfdc 	b.w	80110dc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8011124:	bc70      	pop	{r4, r5, r6}
 8011126:	4770      	bx	lr
 8011128:	20015134 	.word	0x20015134
 801112c:	2001512c 	.word	0x2001512c

08011130 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8011130:	4a12      	ldr	r2, [pc, #72]	@ (801117c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8011132:	8803      	ldrh	r3, [r0, #0]
 8011134:	8812      	ldrh	r2, [r2, #0]
 8011136:	4293      	cmp	r3, r2
 8011138:	d207      	bcs.n	801114a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801113a:	4a11      	ldr	r2, [pc, #68]	@ (8011180 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801113c:	2114      	movs	r1, #20
 801113e:	6812      	ldr	r2, [r2, #0]
 8011140:	fb01 2303 	mla	r3, r1, r3, r2
 8011144:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8011148:	4770      	bx	lr
 801114a:	490e      	ldr	r1, [pc, #56]	@ (8011184 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801114c:	8809      	ldrh	r1, [r1, #0]
 801114e:	4411      	add	r1, r2
 8011150:	428b      	cmp	r3, r1
 8011152:	da04      	bge.n	801115e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8011154:	1a9b      	subs	r3, r3, r2
 8011156:	4a0c      	ldr	r2, [pc, #48]	@ (8011188 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8011158:	210e      	movs	r1, #14
 801115a:	6812      	ldr	r2, [r2, #0]
 801115c:	e7f0      	b.n	8011140 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801115e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8011162:	4293      	cmp	r3, r2
 8011164:	d108      	bne.n	8011178 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8011166:	4b09      	ldr	r3, [pc, #36]	@ (801118c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8011168:	781b      	ldrb	r3, [r3, #0]
 801116a:	b91b      	cbnz	r3, 8011174 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801116c:	4b08      	ldr	r3, [pc, #32]	@ (8011190 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801116e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8011172:	4770      	bx	lr
 8011174:	4b07      	ldr	r3, [pc, #28]	@ (8011194 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8011176:	e7fa      	b.n	801116e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8011178:	2000      	movs	r0, #0
 801117a:	4770      	bx	lr
 801117c:	2001512c 	.word	0x2001512c
 8011180:	20015134 	.word	0x20015134
 8011184:	20015130 	.word	0x20015130
 8011188:	20015114 	.word	0x20015114
 801118c:	200150a4 	.word	0x200150a4
 8011190:	200150a6 	.word	0x200150a6
 8011194:	200150a8 	.word	0x200150a8

08011198 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8011198:	4a12      	ldr	r2, [pc, #72]	@ (80111e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801119a:	8803      	ldrh	r3, [r0, #0]
 801119c:	8812      	ldrh	r2, [r2, #0]
 801119e:	4293      	cmp	r3, r2
 80111a0:	d207      	bcs.n	80111b2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80111a2:	4a11      	ldr	r2, [pc, #68]	@ (80111e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80111a4:	2114      	movs	r1, #20
 80111a6:	6812      	ldr	r2, [r2, #0]
 80111a8:	fb01 2303 	mla	r3, r1, r3, r2
 80111ac:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80111b0:	4770      	bx	lr
 80111b2:	490e      	ldr	r1, [pc, #56]	@ (80111ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80111b4:	8809      	ldrh	r1, [r1, #0]
 80111b6:	4411      	add	r1, r2
 80111b8:	428b      	cmp	r3, r1
 80111ba:	da04      	bge.n	80111c6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80111bc:	1a9b      	subs	r3, r3, r2
 80111be:	4a0c      	ldr	r2, [pc, #48]	@ (80111f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80111c0:	210e      	movs	r1, #14
 80111c2:	6812      	ldr	r2, [r2, #0]
 80111c4:	e7f0      	b.n	80111a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80111c6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80111ca:	4293      	cmp	r3, r2
 80111cc:	d108      	bne.n	80111e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80111ce:	4b09      	ldr	r3, [pc, #36]	@ (80111f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80111d0:	781b      	ldrb	r3, [r3, #0]
 80111d2:	b91b      	cbnz	r3, 80111dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80111d4:	4b08      	ldr	r3, [pc, #32]	@ (80111f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80111d6:	f9b3 0000 	ldrsh.w	r0, [r3]
 80111da:	4770      	bx	lr
 80111dc:	4b07      	ldr	r3, [pc, #28]	@ (80111fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80111de:	e7fa      	b.n	80111d6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80111e0:	2000      	movs	r0, #0
 80111e2:	4770      	bx	lr
 80111e4:	2001512c 	.word	0x2001512c
 80111e8:	20015134 	.word	0x20015134
 80111ec:	20015130 	.word	0x20015130
 80111f0:	20015114 	.word	0x20015114
 80111f4:	200150a4 	.word	0x200150a4
 80111f8:	200150a8 	.word	0x200150a8
 80111fc:	200150a6 	.word	0x200150a6

08011200 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8011200:	4a1f      	ldr	r2, [pc, #124]	@ (8011280 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8011202:	b510      	push	{r4, lr}
 8011204:	880b      	ldrh	r3, [r1, #0]
 8011206:	8812      	ldrh	r2, [r2, #0]
 8011208:	4293      	cmp	r3, r2
 801120a:	d213      	bcs.n	8011234 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801120c:	4a1d      	ldr	r2, [pc, #116]	@ (8011284 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801120e:	2114      	movs	r1, #20
 8011210:	6812      	ldr	r2, [r2, #0]
 8011212:	fb01 2303 	mla	r3, r1, r3, r2
 8011216:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801121a:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801121e:	8a1a      	ldrh	r2, [r3, #16]
 8011220:	8a5b      	ldrh	r3, [r3, #18]
 8011222:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8011226:	8004      	strh	r4, [r0, #0]
 8011228:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801122c:	8041      	strh	r1, [r0, #2]
 801122e:	8082      	strh	r2, [r0, #4]
 8011230:	80c3      	strh	r3, [r0, #6]
 8011232:	e00e      	b.n	8011252 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8011234:	4914      	ldr	r1, [pc, #80]	@ (8011288 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8011236:	8809      	ldrh	r1, [r1, #0]
 8011238:	4411      	add	r1, r2
 801123a:	428b      	cmp	r3, r1
 801123c:	da0a      	bge.n	8011254 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801123e:	1a9b      	subs	r3, r3, r2
 8011240:	4a12      	ldr	r2, [pc, #72]	@ (801128c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8011242:	210e      	movs	r1, #14
 8011244:	6812      	ldr	r2, [r2, #0]
 8011246:	fb01 2303 	mla	r3, r1, r3, r2
 801124a:	681a      	ldr	r2, [r3, #0]
 801124c:	6002      	str	r2, [r0, #0]
 801124e:	685a      	ldr	r2, [r3, #4]
 8011250:	6042      	str	r2, [r0, #4]
 8011252:	bd10      	pop	{r4, pc}
 8011254:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8011258:	4293      	cmp	r3, r2
 801125a:	d10b      	bne.n	8011274 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801125c:	4b0c      	ldr	r3, [pc, #48]	@ (8011290 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801125e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011262:	4b0c      	ldr	r3, [pc, #48]	@ (8011294 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8011264:	8081      	strh	r1, [r0, #4]
 8011266:	f9b3 2000 	ldrsh.w	r2, [r3]
 801126a:	2300      	movs	r3, #0
 801126c:	80c2      	strh	r2, [r0, #6]
 801126e:	8003      	strh	r3, [r0, #0]
 8011270:	8043      	strh	r3, [r0, #2]
 8011272:	e7ee      	b.n	8011252 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8011274:	2300      	movs	r3, #0
 8011276:	8003      	strh	r3, [r0, #0]
 8011278:	8043      	strh	r3, [r0, #2]
 801127a:	8083      	strh	r3, [r0, #4]
 801127c:	e7d8      	b.n	8011230 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801127e:	bf00      	nop
 8011280:	2001512c 	.word	0x2001512c
 8011284:	20015134 	.word	0x20015134
 8011288:	20015130 	.word	0x20015130
 801128c:	20015114 	.word	0x20015114
 8011290:	200150a0 	.word	0x200150a0
 8011294:	200150a2 	.word	0x200150a2

08011298 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8011298:	4a17      	ldr	r2, [pc, #92]	@ (80112f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801129a:	8803      	ldrh	r3, [r0, #0]
 801129c:	8812      	ldrh	r2, [r2, #0]
 801129e:	4293      	cmp	r3, r2
 80112a0:	d213      	bcs.n	80112ca <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80112a2:	4a16      	ldr	r2, [pc, #88]	@ (80112fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80112a4:	2114      	movs	r1, #20
 80112a6:	6812      	ldr	r2, [r2, #0]
 80112a8:	fb01 2303 	mla	r3, r1, r3, r2
 80112ac:	8a1a      	ldrh	r2, [r3, #16]
 80112ae:	8919      	ldrh	r1, [r3, #8]
 80112b0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80112b4:	428a      	cmp	r2, r1
 80112b6:	db1d      	blt.n	80112f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80112b8:	8a58      	ldrh	r0, [r3, #18]
 80112ba:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80112be:	895b      	ldrh	r3, [r3, #10]
 80112c0:	4298      	cmp	r0, r3
 80112c2:	bfac      	ite	ge
 80112c4:	2000      	movge	r0, #0
 80112c6:	2001      	movlt	r0, #1
 80112c8:	4770      	bx	lr
 80112ca:	490d      	ldr	r1, [pc, #52]	@ (8011300 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80112cc:	8809      	ldrh	r1, [r1, #0]
 80112ce:	4411      	add	r1, r2
 80112d0:	428b      	cmp	r3, r1
 80112d2:	da0d      	bge.n	80112f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80112d4:	1a9b      	subs	r3, r3, r2
 80112d6:	4a0b      	ldr	r2, [pc, #44]	@ (8011304 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80112d8:	210e      	movs	r1, #14
 80112da:	6812      	ldr	r2, [r2, #0]
 80112dc:	fb01 2303 	mla	r3, r1, r3, r2
 80112e0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80112e4:	891a      	ldrh	r2, [r3, #8]
 80112e6:	4291      	cmp	r1, r2
 80112e8:	db04      	blt.n	80112f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80112ea:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80112ee:	e7e6      	b.n	80112be <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80112f0:	2000      	movs	r0, #0
 80112f2:	4770      	bx	lr
 80112f4:	2001      	movs	r0, #1
 80112f6:	4770      	bx	lr
 80112f8:	2001512c 	.word	0x2001512c
 80112fc:	20015134 	.word	0x20015134
 8011300:	20015130 	.word	0x20015130
 8011304:	20015114 	.word	0x20015114

08011308 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8011308:	4a12      	ldr	r2, [pc, #72]	@ (8011354 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801130a:	8803      	ldrh	r3, [r0, #0]
 801130c:	8811      	ldrh	r1, [r2, #0]
 801130e:	428b      	cmp	r3, r1
 8011310:	d20b      	bcs.n	801132a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8011312:	4a11      	ldr	r2, [pc, #68]	@ (8011358 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8011314:	6812      	ldr	r2, [r2, #0]
 8011316:	b112      	cbz	r2, 801131e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8011318:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801131c:	b9c0      	cbnz	r0, 8011350 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801131e:	4a0f      	ldr	r2, [pc, #60]	@ (801135c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8011320:	6811      	ldr	r1, [r2, #0]
 8011322:	2214      	movs	r2, #20
 8011324:	4353      	muls	r3, r2
 8011326:	58c8      	ldr	r0, [r1, r3]
 8011328:	4770      	bx	lr
 801132a:	4a0d      	ldr	r2, [pc, #52]	@ (8011360 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801132c:	8812      	ldrh	r2, [r2, #0]
 801132e:	440a      	add	r2, r1
 8011330:	4293      	cmp	r3, r2
 8011332:	da04      	bge.n	801133e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8011334:	4a08      	ldr	r2, [pc, #32]	@ (8011358 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8011336:	6812      	ldr	r2, [r2, #0]
 8011338:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801133c:	4770      	bx	lr
 801133e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8011342:	4293      	cmp	r3, r2
 8011344:	d103      	bne.n	801134e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8011346:	4b07      	ldr	r3, [pc, #28]	@ (8011364 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8011348:	681b      	ldr	r3, [r3, #0]
 801134a:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 801134c:	4770      	bx	lr
 801134e:	2000      	movs	r0, #0
 8011350:	4770      	bx	lr
 8011352:	bf00      	nop
 8011354:	2001512c 	.word	0x2001512c
 8011358:	20015110 	.word	0x20015110
 801135c:	20015134 	.word	0x20015134
 8011360:	20015130 	.word	0x20015130
 8011364:	200150ac 	.word	0x200150ac

08011368 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8011368:	4b24      	ldr	r3, [pc, #144]	@ (80113fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801136a:	8802      	ldrh	r2, [r0, #0]
 801136c:	8818      	ldrh	r0, [r3, #0]
 801136e:	4282      	cmp	r2, r0
 8011370:	d221      	bcs.n	80113b6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8011372:	4b23      	ldr	r3, [pc, #140]	@ (8011400 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8011374:	6819      	ldr	r1, [r3, #0]
 8011376:	2314      	movs	r3, #20
 8011378:	fb03 1302 	mla	r3, r3, r2, r1
 801137c:	6858      	ldr	r0, [r3, #4]
 801137e:	2800      	cmp	r0, #0
 8011380:	d03a      	beq.n	80113f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8011382:	4920      	ldr	r1, [pc, #128]	@ (8011404 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8011384:	6809      	ldr	r1, [r1, #0]
 8011386:	2900      	cmp	r1, #0
 8011388:	d036      	beq.n	80113f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801138a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801138e:	2900      	cmp	r1, #0
 8011390:	d032      	beq.n	80113f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8011392:	891a      	ldrh	r2, [r3, #8]
 8011394:	8958      	ldrh	r0, [r3, #10]
 8011396:	4350      	muls	r0, r2
 8011398:	7c5a      	ldrb	r2, [r3, #17]
 801139a:	7cdb      	ldrb	r3, [r3, #19]
 801139c:	0952      	lsrs	r2, r2, #5
 801139e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80113a2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80113a6:	2b0b      	cmp	r3, #11
 80113a8:	bf18      	it	ne
 80113aa:	0040      	lslne	r0, r0, #1
 80113ac:	3003      	adds	r0, #3
 80113ae:	f020 0003 	bic.w	r0, r0, #3
 80113b2:	4408      	add	r0, r1
 80113b4:	4770      	bx	lr
 80113b6:	4b14      	ldr	r3, [pc, #80]	@ (8011408 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80113b8:	881b      	ldrh	r3, [r3, #0]
 80113ba:	4403      	add	r3, r0
 80113bc:	429a      	cmp	r2, r3
 80113be:	da1a      	bge.n	80113f6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80113c0:	4b12      	ldr	r3, [pc, #72]	@ (801140c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80113c2:	1a10      	subs	r0, r2, r0
 80113c4:	210e      	movs	r1, #14
 80113c6:	681b      	ldr	r3, [r3, #0]
 80113c8:	fb01 3000 	mla	r0, r1, r0, r3
 80113cc:	7b03      	ldrb	r3, [r0, #12]
 80113ce:	f003 031f 	and.w	r3, r3, #31
 80113d2:	2b0b      	cmp	r3, #11
 80113d4:	d10b      	bne.n	80113ee <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80113d6:	8903      	ldrh	r3, [r0, #8]
 80113d8:	8940      	ldrh	r0, [r0, #10]
 80113da:	4358      	muls	r0, r3
 80113dc:	4b09      	ldr	r3, [pc, #36]	@ (8011404 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80113de:	3003      	adds	r0, #3
 80113e0:	6819      	ldr	r1, [r3, #0]
 80113e2:	f020 0303 	bic.w	r3, r0, #3
 80113e6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80113ea:	4418      	add	r0, r3
 80113ec:	4770      	bx	lr
 80113ee:	2b0d      	cmp	r3, #13
 80113f0:	d101      	bne.n	80113f6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80113f2:	300d      	adds	r0, #13
 80113f4:	4770      	bx	lr
 80113f6:	2000      	movs	r0, #0
 80113f8:	4770      	bx	lr
 80113fa:	bf00      	nop
 80113fc:	2001512c 	.word	0x2001512c
 8011400:	20015134 	.word	0x20015134
 8011404:	20015110 	.word	0x20015110
 8011408:	20015130 	.word	0x20015130
 801140c:	20015114 	.word	0x20015114

08011410 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8011410:	4a17      	ldr	r2, [pc, #92]	@ (8011470 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8011412:	b510      	push	{r4, lr}
 8011414:	8803      	ldrh	r3, [r0, #0]
 8011416:	8812      	ldrh	r2, [r2, #0]
 8011418:	4293      	cmp	r3, r2
 801141a:	d20c      	bcs.n	8011436 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801141c:	4a15      	ldr	r2, [pc, #84]	@ (8011474 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801141e:	2114      	movs	r1, #20
 8011420:	6812      	ldr	r2, [r2, #0]
 8011422:	fb01 2303 	mla	r3, r1, r3, r2
 8011426:	7c58      	ldrb	r0, [r3, #17]
 8011428:	0942      	lsrs	r2, r0, #5
 801142a:	7cd8      	ldrb	r0, [r3, #19]
 801142c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8011430:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8011434:	bd10      	pop	{r4, pc}
 8011436:	4910      	ldr	r1, [pc, #64]	@ (8011478 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8011438:	8809      	ldrh	r1, [r1, #0]
 801143a:	4411      	add	r1, r2
 801143c:	428b      	cmp	r3, r1
 801143e:	da09      	bge.n	8011454 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8011440:	1a9b      	subs	r3, r3, r2
 8011442:	4a0e      	ldr	r2, [pc, #56]	@ (801147c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8011444:	210e      	movs	r1, #14
 8011446:	6812      	ldr	r2, [r2, #0]
 8011448:	fb01 2303 	mla	r3, r1, r3, r2
 801144c:	7b18      	ldrb	r0, [r3, #12]
 801144e:	f000 001f 	and.w	r0, r0, #31
 8011452:	e7ef      	b.n	8011434 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8011454:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8011458:	4293      	cmp	r3, r2
 801145a:	d106      	bne.n	801146a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801145c:	f7f1 f80c 	bl	8002478 <_ZN8touchgfx3HAL3lcdEv>
 8011460:	6803      	ldr	r3, [r0, #0]
 8011462:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011466:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011468:	4718      	bx	r3
 801146a:	2000      	movs	r0, #0
 801146c:	e7e2      	b.n	8011434 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801146e:	bf00      	nop
 8011470:	2001512c 	.word	0x2001512c
 8011474:	20015134 	.word	0x20015134
 8011478:	20015130 	.word	0x20015130
 801147c:	20015114 	.word	0x20015114

08011480 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8011480:	2010      	movs	r0, #16
 8011482:	4770      	bx	lr

08011484 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8011484:	2000      	movs	r0, #0
 8011486:	4770      	bx	lr

08011488 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8011488:	4b02      	ldr	r3, [pc, #8]	@ (8011494 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801148a:	8818      	ldrh	r0, [r3, #0]
 801148c:	0040      	lsls	r0, r0, #1
 801148e:	b280      	uxth	r0, r0
 8011490:	4770      	bx	lr
 8011492:	bf00      	nop
 8011494:	200150a6 	.word	0x200150a6

08011498 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8011498:	2bff      	cmp	r3, #255	@ 0xff
 801149a:	d050      	beq.n	801153e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801149c:	2a0b      	cmp	r2, #11
 801149e:	d04a      	beq.n	8011536 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80114a0:	d80e      	bhi.n	80114c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80114a2:	2a03      	cmp	r2, #3
 80114a4:	d03f      	beq.n	8011526 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80114a6:	d804      	bhi.n	80114b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80114a8:	2a01      	cmp	r2, #1
 80114aa:	d03e      	beq.n	801152a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80114ac:	d93f      	bls.n	801152e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80114ae:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 80114b0:	4770      	bx	lr
 80114b2:	2a09      	cmp	r2, #9
 80114b4:	d03f      	beq.n	8011536 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80114b6:	d83c      	bhi.n	8011532 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80114b8:	2a08      	cmp	r2, #8
 80114ba:	d03a      	beq.n	8011532 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80114bc:	2000      	movs	r0, #0
 80114be:	4770      	bx	lr
 80114c0:	2a2f      	cmp	r2, #47	@ 0x2f
 80114c2:	d024      	beq.n	801150e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80114c4:	d80d      	bhi.n	80114e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80114c6:	2a2d      	cmp	r2, #45	@ 0x2d
 80114c8:	d014      	beq.n	80114f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80114ca:	d826      	bhi.n	801151a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80114cc:	2a2c      	cmp	r2, #44	@ 0x2c
 80114ce:	d1f5      	bne.n	80114bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80114d0:	684b      	ldr	r3, [r1, #4]
 80114d2:	781b      	ldrb	r3, [r3, #0]
 80114d4:	2b01      	cmp	r3, #1
 80114d6:	d018      	beq.n	801150a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80114d8:	d323      	bcc.n	8011522 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80114da:	2b02      	cmp	r3, #2
 80114dc:	d1ee      	bne.n	80114bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80114de:	68c0      	ldr	r0, [r0, #12]
 80114e0:	4770      	bx	lr
 80114e2:	2a31      	cmp	r2, #49	@ 0x31
 80114e4:	d004      	beq.n	80114f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80114e6:	d328      	bcc.n	801153a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80114e8:	2a32      	cmp	r2, #50	@ 0x32
 80114ea:	d026      	beq.n	801153a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80114ec:	2a33      	cmp	r2, #51	@ 0x33
 80114ee:	d1e5      	bne.n	80114bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80114f0:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 80114f2:	4770      	bx	lr
 80114f4:	684b      	ldr	r3, [r1, #4]
 80114f6:	781b      	ldrb	r3, [r3, #0]
 80114f8:	2b01      	cmp	r3, #1
 80114fa:	d004      	beq.n	8011506 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80114fc:	d30b      	bcc.n	8011516 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80114fe:	2b02      	cmp	r3, #2
 8011500:	d1dc      	bne.n	80114bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011502:	6940      	ldr	r0, [r0, #20]
 8011504:	4770      	bx	lr
 8011506:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8011508:	4770      	bx	lr
 801150a:	69c0      	ldr	r0, [r0, #28]
 801150c:	4770      	bx	lr
 801150e:	684b      	ldr	r3, [r1, #4]
 8011510:	781b      	ldrb	r3, [r3, #0]
 8011512:	2b00      	cmp	r3, #0
 8011514:	d1d2      	bne.n	80114bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011516:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8011518:	4770      	bx	lr
 801151a:	684b      	ldr	r3, [r1, #4]
 801151c:	781b      	ldrb	r3, [r3, #0]
 801151e:	2b00      	cmp	r3, #0
 8011520:	d1cc      	bne.n	80114bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011522:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8011524:	4770      	bx	lr
 8011526:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8011528:	4770      	bx	lr
 801152a:	6d40      	ldr	r0, [r0, #84]	@ 0x54
 801152c:	4770      	bx	lr
 801152e:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 8011530:	4770      	bx	lr
 8011532:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
 8011534:	4770      	bx	lr
 8011536:	6e40      	ldr	r0, [r0, #100]	@ 0x64
 8011538:	4770      	bx	lr
 801153a:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
 801153c:	4770      	bx	lr
 801153e:	2a0b      	cmp	r2, #11
 8011540:	d049      	beq.n	80115d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8011542:	d80e      	bhi.n	8011562 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8011544:	2a03      	cmp	r2, #3
 8011546:	d040      	beq.n	80115ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8011548:	d804      	bhi.n	8011554 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801154a:	2a01      	cmp	r2, #1
 801154c:	d03f      	beq.n	80115ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801154e:	d940      	bls.n	80115d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8011550:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 8011552:	4770      	bx	lr
 8011554:	2a09      	cmp	r2, #9
 8011556:	d03e      	beq.n	80115d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8011558:	d801      	bhi.n	801155e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801155a:	2a08      	cmp	r2, #8
 801155c:	d1ae      	bne.n	80114bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801155e:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8011560:	4770      	bx	lr
 8011562:	2a2f      	cmp	r2, #47	@ 0x2f
 8011564:	d024      	beq.n	80115b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8011566:	d80d      	bhi.n	8011584 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8011568:	2a2d      	cmp	r2, #45	@ 0x2d
 801156a:	d014      	beq.n	8011596 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801156c:	d826      	bhi.n	80115bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801156e:	2a2c      	cmp	r2, #44	@ 0x2c
 8011570:	d1a4      	bne.n	80114bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011572:	684b      	ldr	r3, [r1, #4]
 8011574:	781b      	ldrb	r3, [r3, #0]
 8011576:	2b01      	cmp	r3, #1
 8011578:	d018      	beq.n	80115ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801157a:	d324      	bcc.n	80115c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801157c:	2b02      	cmp	r3, #2
 801157e:	d19d      	bne.n	80114bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011580:	6900      	ldr	r0, [r0, #16]
 8011582:	4770      	bx	lr
 8011584:	2a31      	cmp	r2, #49	@ 0x31
 8011586:	d004      	beq.n	8011592 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8011588:	d327      	bcc.n	80115da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801158a:	2a32      	cmp	r2, #50	@ 0x32
 801158c:	d025      	beq.n	80115da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801158e:	2a33      	cmp	r2, #51	@ 0x33
 8011590:	d194      	bne.n	80114bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011592:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 8011594:	4770      	bx	lr
 8011596:	684b      	ldr	r3, [r1, #4]
 8011598:	781b      	ldrb	r3, [r3, #0]
 801159a:	2b01      	cmp	r3, #1
 801159c:	d004      	beq.n	80115a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801159e:	d30b      	bcc.n	80115b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80115a0:	2b02      	cmp	r3, #2
 80115a2:	d18b      	bne.n	80114bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80115a4:	6980      	ldr	r0, [r0, #24]
 80115a6:	4770      	bx	lr
 80115a8:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80115aa:	4770      	bx	lr
 80115ac:	6a00      	ldr	r0, [r0, #32]
 80115ae:	4770      	bx	lr
 80115b0:	684b      	ldr	r3, [r1, #4]
 80115b2:	781b      	ldrb	r3, [r3, #0]
 80115b4:	2b00      	cmp	r3, #0
 80115b6:	d181      	bne.n	80114bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80115b8:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 80115ba:	4770      	bx	lr
 80115bc:	684b      	ldr	r3, [r1, #4]
 80115be:	781b      	ldrb	r3, [r3, #0]
 80115c0:	2b00      	cmp	r3, #0
 80115c2:	f47f af7b 	bne.w	80114bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80115c6:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 80115c8:	4770      	bx	lr
 80115ca:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 80115cc:	4770      	bx	lr
 80115ce:	6d80      	ldr	r0, [r0, #88]	@ 0x58
 80115d0:	4770      	bx	lr
 80115d2:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 80115d4:	4770      	bx	lr
 80115d6:	6e80      	ldr	r0, [r0, #104]	@ 0x68
 80115d8:	4770      	bx	lr
 80115da:	6f00      	ldr	r0, [r0, #112]	@ 0x70
 80115dc:	4770      	bx	lr

080115de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80115de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115e2:	b087      	sub	sp, #28
 80115e4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80115e6:	9205      	str	r2, [sp, #20]
 80115e8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80115ec:	9101      	str	r1, [sp, #4]
 80115ee:	9202      	str	r2, [sp, #8]
 80115f0:	6841      	ldr	r1, [r0, #4]
 80115f2:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80115f6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80115fa:	fb01 2404 	mla	r4, r1, r4, r2
 80115fe:	6802      	ldr	r2, [r0, #0]
 8011600:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011604:	f8de 2000 	ldr.w	r2, [lr]
 8011608:	9203      	str	r2, [sp, #12]
 801160a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801160e:	3204      	adds	r2, #4
 8011610:	9204      	str	r2, [sp, #16]
 8011612:	9a02      	ldr	r2, [sp, #8]
 8011614:	43d6      	mvns	r6, r2
 8011616:	b2f6      	uxtb	r6, r6
 8011618:	9a01      	ldr	r2, [sp, #4]
 801161a:	2a00      	cmp	r2, #0
 801161c:	dc03      	bgt.n	8011626 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801161e:	9a05      	ldr	r2, [sp, #20]
 8011620:	2a00      	cmp	r2, #0
 8011622:	f340 8129 	ble.w	8011878 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8011626:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011628:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801162c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011630:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011632:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8011636:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801163a:	2b00      	cmp	r3, #0
 801163c:	dd0e      	ble.n	801165c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801163e:	1408      	asrs	r0, r1, #16
 8011640:	d405      	bmi.n	801164e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011642:	4560      	cmp	r0, ip
 8011644:	da03      	bge.n	801164e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011646:	1410      	asrs	r0, r2, #16
 8011648:	d401      	bmi.n	801164e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801164a:	42b8      	cmp	r0, r7
 801164c:	db07      	blt.n	801165e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801164e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011650:	3b01      	subs	r3, #1
 8011652:	3402      	adds	r4, #2
 8011654:	4401      	add	r1, r0
 8011656:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8011658:	4402      	add	r2, r0
 801165a:	e7ee      	b.n	801163a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801165c:	d071      	beq.n	8011742 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801165e:	1e58      	subs	r0, r3, #1
 8011660:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8011662:	fb05 1500 	mla	r5, r5, r0, r1
 8011666:	142d      	asrs	r5, r5, #16
 8011668:	d45f      	bmi.n	801172a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801166a:	4565      	cmp	r5, ip
 801166c:	da5d      	bge.n	801172a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801166e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8011670:	fb05 2000 	mla	r0, r5, r0, r2
 8011674:	1400      	asrs	r0, r0, #16
 8011676:	d458      	bmi.n	801172a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011678:	42b8      	cmp	r0, r7
 801167a:	da56      	bge.n	801172a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801167c:	4699      	mov	r9, r3
 801167e:	46a2      	mov	sl, r4
 8011680:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8011684:	f1b9 0f00 	cmp.w	r9, #0
 8011688:	dd57      	ble.n	801173a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801168a:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801168e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011692:	9803      	ldr	r0, [sp, #12]
 8011694:	140d      	asrs	r5, r1, #16
 8011696:	f109 39ff 	add.w	r9, r9, #4294967295
 801169a:	fb07 000c 	mla	r0, r7, ip, r0
 801169e:	5d40      	ldrb	r0, [r0, r5]
 80116a0:	9d04      	ldr	r5, [sp, #16]
 80116a2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80116a6:	f8ba 5000 	ldrh.w	r5, [sl]
 80116aa:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80116ae:	122f      	asrs	r7, r5, #8
 80116b0:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80116b4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80116b8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80116bc:	00ed      	lsls	r5, r5, #3
 80116be:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 80116c2:	fb17 f706 	smulbb	r7, r7, r6
 80116c6:	b2ed      	uxtb	r5, r5
 80116c8:	fb18 f806 	smulbb	r8, r8, r6
 80116cc:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80116d0:	10c7      	asrs	r7, r0, #3
 80116d2:	fb15 f506 	smulbb	r5, r5, r6
 80116d6:	00c0      	lsls	r0, r0, #3
 80116d8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80116dc:	fa1f fc8c 	uxth.w	ip, ip
 80116e0:	b2c0      	uxtb	r0, r0
 80116e2:	fb07 870b 	mla	r7, r7, fp, r8
 80116e6:	fb00 500b 	mla	r0, r0, fp, r5
 80116ea:	f10c 0501 	add.w	r5, ip, #1
 80116ee:	b2bf      	uxth	r7, r7
 80116f0:	b280      	uxth	r0, r0
 80116f2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80116f6:	f107 0801 	add.w	r8, r7, #1
 80116fa:	1c45      	adds	r5, r0, #1
 80116fc:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8011700:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011704:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011708:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801170a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801170e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011712:	4401      	add	r1, r0
 8011714:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8011718:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801171a:	ea45 0c0c 	orr.w	ip, r5, ip
 801171e:	4402      	add	r2, r0
 8011720:	ea4c 0c08 	orr.w	ip, ip, r8
 8011724:	f82a cb02 	strh.w	ip, [sl], #2
 8011728:	e7ac      	b.n	8011684 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801172a:	f04f 0800 	mov.w	r8, #0
 801172e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8011732:	eb03 0008 	add.w	r0, r3, r8
 8011736:	2800      	cmp	r0, #0
 8011738:	dc41      	bgt.n	80117be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801173a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801173e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011742:	9b01      	ldr	r3, [sp, #4]
 8011744:	2b00      	cmp	r3, #0
 8011746:	f340 8097 	ble.w	8011878 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801174a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801174e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011750:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011754:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011758:	eef0 6a62 	vmov.f32	s13, s5
 801175c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011760:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011764:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011768:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801176c:	eef0 6a43 	vmov.f32	s13, s6
 8011770:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011774:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8011778:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801177c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011780:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011784:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011788:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801178c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011790:	ee12 2a90 	vmov	r2, s5
 8011794:	eef0 2a47 	vmov.f32	s5, s14
 8011798:	fb92 f3f3 	sdiv	r3, r2, r3
 801179c:	ee13 2a10 	vmov	r2, s6
 80117a0:	9313      	str	r3, [sp, #76]	@ 0x4c
 80117a2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80117a4:	eeb0 3a67 	vmov.f32	s6, s15
 80117a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80117ac:	9314      	str	r3, [sp, #80]	@ 0x50
 80117ae:	9b01      	ldr	r3, [sp, #4]
 80117b0:	9a05      	ldr	r2, [sp, #20]
 80117b2:	3b01      	subs	r3, #1
 80117b4:	9301      	str	r3, [sp, #4]
 80117b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80117b8:	bf08      	it	eq
 80117ba:	4613      	moveq	r3, r2
 80117bc:	e72c      	b.n	8011618 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80117be:	140f      	asrs	r7, r1, #16
 80117c0:	d453      	bmi.n	801186a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80117c2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80117c6:	42bd      	cmp	r5, r7
 80117c8:	dd4f      	ble.n	801186a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80117ca:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80117ce:	d44c      	bmi.n	801186a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80117d0:	f8de 000c 	ldr.w	r0, [lr, #12]
 80117d4:	4560      	cmp	r0, ip
 80117d6:	dd48      	ble.n	801186a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80117d8:	9803      	ldr	r0, [sp, #12]
 80117da:	b22d      	sxth	r5, r5
 80117dc:	fb0c 0505 	mla	r5, ip, r5, r0
 80117e0:	5de8      	ldrb	r0, [r5, r7]
 80117e2:	9d04      	ldr	r5, [sp, #16]
 80117e4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80117e8:	f06f 0501 	mvn.w	r5, #1
 80117ec:	fb05 fb08 	mul.w	fp, r5, r8
 80117f0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80117f4:	f834 500b 	ldrh.w	r5, [r4, fp]
 80117f8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80117fc:	122f      	asrs	r7, r5, #8
 80117fe:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011802:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011806:	00ed      	lsls	r5, r5, #3
 8011808:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801180c:	fb17 f706 	smulbb	r7, r7, r6
 8011810:	b2ed      	uxtb	r5, r5
 8011812:	fb19 f906 	smulbb	r9, r9, r6
 8011816:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801181a:	10c7      	asrs	r7, r0, #3
 801181c:	fb15 f506 	smulbb	r5, r5, r6
 8011820:	00c0      	lsls	r0, r0, #3
 8011822:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8011826:	fa1f fc8c 	uxth.w	ip, ip
 801182a:	b2c0      	uxtb	r0, r0
 801182c:	fb07 970a 	mla	r7, r7, sl, r9
 8011830:	fb00 500a 	mla	r0, r0, sl, r5
 8011834:	f10c 0501 	add.w	r5, ip, #1
 8011838:	b2bf      	uxth	r7, r7
 801183a:	b280      	uxth	r0, r0
 801183c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011840:	f107 0901 	add.w	r9, r7, #1
 8011844:	1c45      	adds	r5, r0, #1
 8011846:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801184a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801184e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011852:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011856:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801185a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801185e:	ea45 0c0c 	orr.w	ip, r5, ip
 8011862:	ea4c 0c09 	orr.w	ip, ip, r9
 8011866:	f824 c00b 	strh.w	ip, [r4, fp]
 801186a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801186c:	f108 38ff 	add.w	r8, r8, #4294967295
 8011870:	4401      	add	r1, r0
 8011872:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8011874:	4402      	add	r2, r0
 8011876:	e75c      	b.n	8011732 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8011878:	b007      	add	sp, #28
 801187a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801187e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801187e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011882:	b085      	sub	sp, #20
 8011884:	4693      	mov	fp, r2
 8011886:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801188a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801188c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801188e:	6870      	ldr	r0, [r6, #4]
 8011890:	9100      	str	r1, [sp, #0]
 8011892:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8011896:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801189a:	fb00 2404 	mla	r4, r0, r4, r2
 801189e:	6832      	ldr	r2, [r6, #0]
 80118a0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80118a4:	682a      	ldr	r2, [r5, #0]
 80118a6:	9201      	str	r2, [sp, #4]
 80118a8:	686a      	ldr	r2, [r5, #4]
 80118aa:	3204      	adds	r2, #4
 80118ac:	9202      	str	r2, [sp, #8]
 80118ae:	9a00      	ldr	r2, [sp, #0]
 80118b0:	2a00      	cmp	r2, #0
 80118b2:	dc03      	bgt.n	80118bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80118b4:	f1bb 0f00 	cmp.w	fp, #0
 80118b8:	f340 80a0 	ble.w	80119fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80118bc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80118be:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80118c2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80118c6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80118c8:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80118cc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80118d0:	2b00      	cmp	r3, #0
 80118d2:	dd0c      	ble.n	80118ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80118d4:	1406      	asrs	r6, r0, #16
 80118d6:	d405      	bmi.n	80118e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80118d8:	454e      	cmp	r6, r9
 80118da:	da03      	bge.n	80118e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80118dc:	1416      	asrs	r6, r2, #16
 80118de:	d401      	bmi.n	80118e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80118e0:	4546      	cmp	r6, r8
 80118e2:	db05      	blt.n	80118f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80118e4:	4470      	add	r0, lr
 80118e6:	4462      	add	r2, ip
 80118e8:	3b01      	subs	r3, #1
 80118ea:	3402      	adds	r4, #2
 80118ec:	e7f0      	b.n	80118d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80118ee:	d00f      	beq.n	8011910 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80118f0:	1e5e      	subs	r6, r3, #1
 80118f2:	fb0e 0706 	mla	r7, lr, r6, r0
 80118f6:	143f      	asrs	r7, r7, #16
 80118f8:	d541      	bpl.n	801197e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80118fa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80118fe:	4698      	mov	r8, r3
 8011900:	9603      	str	r6, [sp, #12]
 8011902:	f1b8 0f00 	cmp.w	r8, #0
 8011906:	dc59      	bgt.n	80119bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011908:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801190c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011910:	9b00      	ldr	r3, [sp, #0]
 8011912:	2b00      	cmp	r3, #0
 8011914:	dd72      	ble.n	80119fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8011916:	ee30 0a04 	vadd.f32	s0, s0, s8
 801191a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801191c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011920:	eeb0 6a62 	vmov.f32	s12, s5
 8011924:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011928:	ee31 1a05 	vadd.f32	s2, s2, s10
 801192c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011930:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8011934:	eeb0 6a43 	vmov.f32	s12, s6
 8011938:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801193c:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8011940:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011944:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011948:	ee77 2a62 	vsub.f32	s5, s14, s5
 801194c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011950:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011954:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011958:	ee12 2a90 	vmov	r2, s5
 801195c:	eef0 2a47 	vmov.f32	s5, s14
 8011960:	fb92 fef3 	sdiv	lr, r2, r3
 8011964:	ee13 2a10 	vmov	r2, s6
 8011968:	eeb0 3a67 	vmov.f32	s6, s15
 801196c:	fb92 fcf3 	sdiv	ip, r2, r3
 8011970:	9b00      	ldr	r3, [sp, #0]
 8011972:	3b01      	subs	r3, #1
 8011974:	9300      	str	r3, [sp, #0]
 8011976:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011978:	bf08      	it	eq
 801197a:	465b      	moveq	r3, fp
 801197c:	e797      	b.n	80118ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801197e:	454f      	cmp	r7, r9
 8011980:	dabb      	bge.n	80118fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011982:	fb0c 2606 	mla	r6, ip, r6, r2
 8011986:	1436      	asrs	r6, r6, #16
 8011988:	d4b7      	bmi.n	80118fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801198a:	4546      	cmp	r6, r8
 801198c:	dab5      	bge.n	80118fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801198e:	461e      	mov	r6, r3
 8011990:	46a0      	mov	r8, r4
 8011992:	2e00      	cmp	r6, #0
 8011994:	ddb8      	ble.n	8011908 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8011996:	1417      	asrs	r7, r2, #16
 8011998:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801199c:	9901      	ldr	r1, [sp, #4]
 801199e:	ea4f 4920 	mov.w	r9, r0, asr #16
 80119a2:	4462      	add	r2, ip
 80119a4:	4470      	add	r0, lr
 80119a6:	fb0a 1707 	mla	r7, sl, r7, r1
 80119aa:	9902      	ldr	r1, [sp, #8]
 80119ac:	3e01      	subs	r6, #1
 80119ae:	f817 7009 	ldrb.w	r7, [r7, r9]
 80119b2:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80119b6:	f828 7b02 	strh.w	r7, [r8], #2
 80119ba:	e7ea      	b.n	8011992 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80119bc:	ea5f 4920 	movs.w	r9, r0, asr #16
 80119c0:	d417      	bmi.n	80119f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80119c2:	68ae      	ldr	r6, [r5, #8]
 80119c4:	454e      	cmp	r6, r9
 80119c6:	dd14      	ble.n	80119f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80119c8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80119cc:	d411      	bmi.n	80119f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80119ce:	68ef      	ldr	r7, [r5, #12]
 80119d0:	4557      	cmp	r7, sl
 80119d2:	dd0e      	ble.n	80119f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80119d4:	9f01      	ldr	r7, [sp, #4]
 80119d6:	b236      	sxth	r6, r6
 80119d8:	f06f 0101 	mvn.w	r1, #1
 80119dc:	fb0a 7606 	mla	r6, sl, r6, r7
 80119e0:	9f02      	ldr	r7, [sp, #8]
 80119e2:	f816 6009 	ldrb.w	r6, [r6, r9]
 80119e6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80119ea:	fb01 f608 	mul.w	r6, r1, r8
 80119ee:	9903      	ldr	r1, [sp, #12]
 80119f0:	538f      	strh	r7, [r1, r6]
 80119f2:	4470      	add	r0, lr
 80119f4:	4462      	add	r2, ip
 80119f6:	f108 38ff 	add.w	r8, r8, #4294967295
 80119fa:	e782      	b.n	8011902 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80119fc:	b005      	add	sp, #20
 80119fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011a02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011a02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a06:	b087      	sub	sp, #28
 8011a08:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8011a0a:	9205      	str	r2, [sp, #20]
 8011a0c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8011a10:	9102      	str	r1, [sp, #8]
 8011a12:	9203      	str	r2, [sp, #12]
 8011a14:	6861      	ldr	r1, [r4, #4]
 8011a16:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8011a1a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8011a1e:	fb01 2000 	mla	r0, r1, r0, r2
 8011a22:	6822      	ldr	r2, [r4, #0]
 8011a24:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8011a28:	9200      	str	r2, [sp, #0]
 8011a2a:	f8dc 2000 	ldr.w	r2, [ip]
 8011a2e:	9204      	str	r2, [sp, #16]
 8011a30:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8011a34:	3204      	adds	r2, #4
 8011a36:	9201      	str	r2, [sp, #4]
 8011a38:	9a03      	ldr	r2, [sp, #12]
 8011a3a:	43d5      	mvns	r5, r2
 8011a3c:	b2ed      	uxtb	r5, r5
 8011a3e:	9a02      	ldr	r2, [sp, #8]
 8011a40:	2a00      	cmp	r2, #0
 8011a42:	dc03      	bgt.n	8011a4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8011a44:	9a05      	ldr	r2, [sp, #20]
 8011a46:	2a00      	cmp	r2, #0
 8011a48:	f340 812c 	ble.w	8011ca4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8011a4c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011a4e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8011a52:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011a56:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011a58:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8011a5c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011a60:	2b00      	cmp	r3, #0
 8011a62:	dd10      	ble.n	8011a86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011a64:	140c      	asrs	r4, r1, #16
 8011a66:	d405      	bmi.n	8011a74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011a68:	4574      	cmp	r4, lr
 8011a6a:	da03      	bge.n	8011a74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011a6c:	1414      	asrs	r4, r2, #16
 8011a6e:	d401      	bmi.n	8011a74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011a70:	42bc      	cmp	r4, r7
 8011a72:	db09      	blt.n	8011a88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8011a74:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8011a76:	3b01      	subs	r3, #1
 8011a78:	9800      	ldr	r0, [sp, #0]
 8011a7a:	4421      	add	r1, r4
 8011a7c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8011a7e:	3002      	adds	r0, #2
 8011a80:	4422      	add	r2, r4
 8011a82:	9000      	str	r0, [sp, #0]
 8011a84:	e7ec      	b.n	8011a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8011a86:	d071      	beq.n	8011b6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8011a88:	1e5c      	subs	r4, r3, #1
 8011a8a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8011a8c:	fb06 1604 	mla	r6, r6, r4, r1
 8011a90:	1436      	asrs	r6, r6, #16
 8011a92:	d45d      	bmi.n	8011b50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011a94:	4576      	cmp	r6, lr
 8011a96:	da5b      	bge.n	8011b50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011a98:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8011a9a:	fb06 2404 	mla	r4, r6, r4, r2
 8011a9e:	1424      	asrs	r4, r4, #16
 8011aa0:	d456      	bmi.n	8011b50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011aa2:	42bc      	cmp	r4, r7
 8011aa4:	da54      	bge.n	8011b50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011aa6:	4698      	mov	r8, r3
 8011aa8:	f8dd 9000 	ldr.w	r9, [sp]
 8011aac:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8011ab0:	f1b8 0f00 	cmp.w	r8, #0
 8011ab4:	dd54      	ble.n	8011b60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8011ab6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8011aba:	1414      	asrs	r4, r2, #16
 8011abc:	9804      	ldr	r0, [sp, #16]
 8011abe:	140e      	asrs	r6, r1, #16
 8011ac0:	f108 38ff 	add.w	r8, r8, #4294967295
 8011ac4:	fb07 0404 	mla	r4, r7, r4, r0
 8011ac8:	9801      	ldr	r0, [sp, #4]
 8011aca:	f814 e006 	ldrb.w	lr, [r4, r6]
 8011ace:	f8b9 4000 	ldrh.w	r4, [r9]
 8011ad2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011ad6:	1227      	asrs	r7, r4, #8
 8011ad8:	eb00 0b0e 	add.w	fp, r0, lr
 8011adc:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8011ae0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011ae4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011ae6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8011aea:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011aee:	4401      	add	r1, r0
 8011af0:	fb16 f60a 	smulbb	r6, r6, sl
 8011af4:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8011af6:	fb1b fb0a 	smulbb	fp, fp, sl
 8011afa:	fb07 6705 	mla	r7, r7, r5, r6
 8011afe:	10e6      	asrs	r6, r4, #3
 8011b00:	00e4      	lsls	r4, r4, #3
 8011b02:	4402      	add	r2, r0
 8011b04:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011b08:	b2bf      	uxth	r7, r7
 8011b0a:	b2e4      	uxtb	r4, r4
 8011b0c:	fb06 b605 	mla	r6, r6, r5, fp
 8011b10:	fb14 f405 	smulbb	r4, r4, r5
 8011b14:	b2b6      	uxth	r6, r6
 8011b16:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8011b1a:	1c7c      	adds	r4, r7, #1
 8011b1c:	f106 0b01 	add.w	fp, r6, #1
 8011b20:	fa1f fe8e 	uxth.w	lr, lr
 8011b24:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8011b28:	f10e 0401 	add.w	r4, lr, #1
 8011b2c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8011b30:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8011b34:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8011b38:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8011b3c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8011b40:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8011b44:	4327      	orrs	r7, r4
 8011b46:	ea47 070b 	orr.w	r7, r7, fp
 8011b4a:	f829 7b02 	strh.w	r7, [r9], #2
 8011b4e:	e7af      	b.n	8011ab0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8011b50:	f04f 0e00 	mov.w	lr, #0
 8011b54:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8011b58:	eb03 040e 	add.w	r4, r3, lr
 8011b5c:	2c00      	cmp	r4, #0
 8011b5e:	dc43      	bgt.n	8011be8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8011b60:	9a00      	ldr	r2, [sp, #0]
 8011b62:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011b66:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8011b6a:	9300      	str	r3, [sp, #0]
 8011b6c:	9b02      	ldr	r3, [sp, #8]
 8011b6e:	2b00      	cmp	r3, #0
 8011b70:	f340 8098 	ble.w	8011ca4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8011b74:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011b78:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011b7a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011b7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011b82:	eef0 6a62 	vmov.f32	s13, s5
 8011b86:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011b8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011b8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011b92:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8011b96:	eef0 6a43 	vmov.f32	s13, s6
 8011b9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011b9e:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8011ba2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011ba6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011baa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011bae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011bb2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011bb6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011bba:	ee12 2a90 	vmov	r2, s5
 8011bbe:	eef0 2a47 	vmov.f32	s5, s14
 8011bc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8011bc6:	ee13 2a10 	vmov	r2, s6
 8011bca:	9313      	str	r3, [sp, #76]	@ 0x4c
 8011bcc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011bce:	eeb0 3a67 	vmov.f32	s6, s15
 8011bd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8011bd6:	9314      	str	r3, [sp, #80]	@ 0x50
 8011bd8:	9b02      	ldr	r3, [sp, #8]
 8011bda:	9a05      	ldr	r2, [sp, #20]
 8011bdc:	3b01      	subs	r3, #1
 8011bde:	9302      	str	r3, [sp, #8]
 8011be0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011be2:	bf08      	it	eq
 8011be4:	4613      	moveq	r3, r2
 8011be6:	e72a      	b.n	8011a3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011be8:	140f      	asrs	r7, r1, #16
 8011bea:	d454      	bmi.n	8011c96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011bec:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8011bf0:	42be      	cmp	r6, r7
 8011bf2:	dd50      	ble.n	8011c96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011bf4:	ea5f 4822 	movs.w	r8, r2, asr #16
 8011bf8:	d44d      	bmi.n	8011c96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011bfa:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8011bfe:	4544      	cmp	r4, r8
 8011c00:	dd49      	ble.n	8011c96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011c02:	9c04      	ldr	r4, [sp, #16]
 8011c04:	b236      	sxth	r6, r6
 8011c06:	f06f 0001 	mvn.w	r0, #1
 8011c0a:	fb08 4606 	mla	r6, r8, r6, r4
 8011c0e:	9c01      	ldr	r4, [sp, #4]
 8011c10:	fb00 fa0e 	mul.w	sl, r0, lr
 8011c14:	9800      	ldr	r0, [sp, #0]
 8011c16:	f816 8007 	ldrb.w	r8, [r6, r7]
 8011c1a:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8011c1e:	eb04 0b08 	add.w	fp, r4, r8
 8011c22:	f830 400a 	ldrh.w	r4, [r0, sl]
 8011c26:	9801      	ldr	r0, [sp, #4]
 8011c28:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8011c2c:	1227      	asrs	r7, r4, #8
 8011c2e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011c32:	fb16 f609 	smulbb	r6, r6, r9
 8011c36:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011c3a:	f810 8008 	ldrb.w	r8, [r0, r8]
 8011c3e:	fb1b fb09 	smulbb	fp, fp, r9
 8011c42:	fb07 6705 	mla	r7, r7, r5, r6
 8011c46:	10e6      	asrs	r6, r4, #3
 8011c48:	00e4      	lsls	r4, r4, #3
 8011c4a:	9800      	ldr	r0, [sp, #0]
 8011c4c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011c50:	b2bf      	uxth	r7, r7
 8011c52:	b2e4      	uxtb	r4, r4
 8011c54:	fb06 b605 	mla	r6, r6, r5, fp
 8011c58:	fb14 f405 	smulbb	r4, r4, r5
 8011c5c:	b2b6      	uxth	r6, r6
 8011c5e:	fb08 4809 	mla	r8, r8, r9, r4
 8011c62:	1c7c      	adds	r4, r7, #1
 8011c64:	f106 0b01 	add.w	fp, r6, #1
 8011c68:	fa1f f888 	uxth.w	r8, r8
 8011c6c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8011c70:	f108 0401 	add.w	r4, r8, #1
 8011c74:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8011c78:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8011c7c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8011c80:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8011c84:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8011c88:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8011c8c:	4327      	orrs	r7, r4
 8011c8e:	ea47 070b 	orr.w	r7, r7, fp
 8011c92:	f820 700a 	strh.w	r7, [r0, sl]
 8011c96:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011c98:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011c9c:	4401      	add	r1, r0
 8011c9e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8011ca0:	4402      	add	r2, r0
 8011ca2:	e759      	b.n	8011b58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8011ca4:	b007      	add	sp, #28
 8011ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08011cac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cb0:	b085      	sub	sp, #20
 8011cb2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011cb6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8011cb8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8011cba:	9203      	str	r2, [sp, #12]
 8011cbc:	6870      	ldr	r0, [r6, #4]
 8011cbe:	686f      	ldr	r7, [r5, #4]
 8011cc0:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8011cc4:	3704      	adds	r7, #4
 8011cc6:	9101      	str	r1, [sp, #4]
 8011cc8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8011ccc:	fb00 2404 	mla	r4, r0, r4, r2
 8011cd0:	6832      	ldr	r2, [r6, #0]
 8011cd2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011cd6:	682a      	ldr	r2, [r5, #0]
 8011cd8:	9202      	str	r2, [sp, #8]
 8011cda:	9a01      	ldr	r2, [sp, #4]
 8011cdc:	2a00      	cmp	r2, #0
 8011cde:	dc03      	bgt.n	8011ce8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011ce0:	9a03      	ldr	r2, [sp, #12]
 8011ce2:	2a00      	cmp	r2, #0
 8011ce4:	f340 80cc 	ble.w	8011e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8011ce8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8011cea:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011cee:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011cf2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011cf4:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011cf8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011cfc:	2b00      	cmp	r3, #0
 8011cfe:	dd0d      	ble.n	8011d1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011d00:	1406      	asrs	r6, r0, #16
 8011d02:	d405      	bmi.n	8011d10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011d04:	454e      	cmp	r6, r9
 8011d06:	da03      	bge.n	8011d10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011d08:	1416      	asrs	r6, r2, #16
 8011d0a:	d401      	bmi.n	8011d10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011d0c:	4546      	cmp	r6, r8
 8011d0e:	db06      	blt.n	8011d1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011d10:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8011d12:	4460      	add	r0, ip
 8011d14:	3b01      	subs	r3, #1
 8011d16:	3402      	adds	r4, #2
 8011d18:	4432      	add	r2, r6
 8011d1a:	e7ef      	b.n	8011cfc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8011d1c:	d00f      	beq.n	8011d3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011d1e:	1e5e      	subs	r6, r3, #1
 8011d20:	fb0c 0e06 	mla	lr, ip, r6, r0
 8011d24:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8011d28:	d543      	bpl.n	8011db2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8011d2a:	4698      	mov	r8, r3
 8011d2c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8011d30:	f1b8 0f00 	cmp.w	r8, #0
 8011d34:	dc71      	bgt.n	8011e1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8011d36:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011d3a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011d3e:	9b01      	ldr	r3, [sp, #4]
 8011d40:	2b00      	cmp	r3, #0
 8011d42:	f340 809d 	ble.w	8011e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8011d46:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011d4a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011d4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011d50:	eeb0 6a62 	vmov.f32	s12, s5
 8011d54:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011d58:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011d5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d60:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8011d64:	eeb0 6a43 	vmov.f32	s12, s6
 8011d68:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d6c:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8011d70:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011d74:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011d78:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011d7c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011d80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011d84:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011d88:	ee12 2a90 	vmov	r2, s5
 8011d8c:	eef0 2a47 	vmov.f32	s5, s14
 8011d90:	fb92 fcf3 	sdiv	ip, r2, r3
 8011d94:	ee13 2a10 	vmov	r2, s6
 8011d98:	eeb0 3a67 	vmov.f32	s6, s15
 8011d9c:	fb92 f3f3 	sdiv	r3, r2, r3
 8011da0:	9312      	str	r3, [sp, #72]	@ 0x48
 8011da2:	9b01      	ldr	r3, [sp, #4]
 8011da4:	9a03      	ldr	r2, [sp, #12]
 8011da6:	3b01      	subs	r3, #1
 8011da8:	9301      	str	r3, [sp, #4]
 8011daa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011dac:	bf08      	it	eq
 8011dae:	4613      	moveq	r3, r2
 8011db0:	e793      	b.n	8011cda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8011db2:	45ce      	cmp	lr, r9
 8011db4:	dab9      	bge.n	8011d2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011db6:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8011db8:	fb01 2606 	mla	r6, r1, r6, r2
 8011dbc:	1436      	asrs	r6, r6, #16
 8011dbe:	d4b4      	bmi.n	8011d2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011dc0:	4546      	cmp	r6, r8
 8011dc2:	dab2      	bge.n	8011d2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011dc4:	4698      	mov	r8, r3
 8011dc6:	46a2      	mov	sl, r4
 8011dc8:	f1b8 0f00 	cmp.w	r8, #0
 8011dcc:	ddb3      	ble.n	8011d36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8011dce:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011dd2:	1416      	asrs	r6, r2, #16
 8011dd4:	9902      	ldr	r1, [sp, #8]
 8011dd6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8011dda:	f108 38ff 	add.w	r8, r8, #4294967295
 8011dde:	4460      	add	r0, ip
 8011de0:	fb09 1606 	mla	r6, r9, r6, r1
 8011de4:	4928      	ldr	r1, [pc, #160]	@ (8011e88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8011de6:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8011dea:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011dee:	eb07 0b0e 	add.w	fp, r7, lr
 8011df2:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8011df6:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8011dfa:	00f6      	lsls	r6, r6, #3
 8011dfc:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8011e00:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8011e02:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8011e06:	440a      	add	r2, r1
 8011e08:	ea49 0606 	orr.w	r6, r9, r6
 8011e0c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8011e10:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8011e14:	f82a 6b02 	strh.w	r6, [sl], #2
 8011e18:	e7d6      	b.n	8011dc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011e1a:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011e1e:	d429      	bmi.n	8011e74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011e20:	68ae      	ldr	r6, [r5, #8]
 8011e22:	454e      	cmp	r6, r9
 8011e24:	dd26      	ble.n	8011e74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011e26:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8011e2a:	d423      	bmi.n	8011e74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011e2c:	68e9      	ldr	r1, [r5, #12]
 8011e2e:	4559      	cmp	r1, fp
 8011e30:	dd20      	ble.n	8011e74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011e32:	fa0f fe86 	sxth.w	lr, r6
 8011e36:	9902      	ldr	r1, [sp, #8]
 8011e38:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8011e3c:	f06f 0101 	mvn.w	r1, #1
 8011e40:	f81e e009 	ldrb.w	lr, [lr, r9]
 8011e44:	fb01 f908 	mul.w	r9, r1, r8
 8011e48:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8011e4c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011e50:	eb07 060e 	add.w	r6, r7, lr
 8011e54:	f896 b002 	ldrb.w	fp, [r6, #2]
 8011e58:	7876      	ldrb	r6, [r6, #1]
 8011e5a:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8011e5e:	00f6      	lsls	r6, r6, #3
 8011e60:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8011e64:	ea4b 0606 	orr.w	r6, fp, r6
 8011e68:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8011e6c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8011e70:	f82a 6009 	strh.w	r6, [sl, r9]
 8011e74:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8011e76:	4460      	add	r0, ip
 8011e78:	f108 38ff 	add.w	r8, r8, #4294967295
 8011e7c:	440a      	add	r2, r1
 8011e7e:	e757      	b.n	8011d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011e80:	b005      	add	sp, #20
 8011e82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e86:	bf00      	nop
 8011e88:	fffff800 	.word	0xfffff800

08011e8c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e90:	b087      	sub	sp, #28
 8011e92:	468b      	mov	fp, r1
 8011e94:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011e98:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8011e9a:	9204      	str	r2, [sp, #16]
 8011e9c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8011ea0:	6841      	ldr	r1, [r0, #4]
 8011ea2:	9205      	str	r2, [sp, #20]
 8011ea4:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8011ea8:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8011eac:	fb01 2404 	mla	r4, r1, r4, r2
 8011eb0:	6802      	ldr	r2, [r0, #0]
 8011eb2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011eb6:	f8dc 2000 	ldr.w	r2, [ip]
 8011eba:	9201      	str	r2, [sp, #4]
 8011ebc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8011ec0:	3204      	adds	r2, #4
 8011ec2:	9202      	str	r2, [sp, #8]
 8011ec4:	f1bb 0f00 	cmp.w	fp, #0
 8011ec8:	dc03      	bgt.n	8011ed2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8011eca:	9a04      	ldr	r2, [sp, #16]
 8011ecc:	2a00      	cmp	r2, #0
 8011ece:	f340 8138 	ble.w	8012142 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8011ed2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011ed4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8011ed8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011edc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011ede:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8011ee2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011ee6:	2b00      	cmp	r3, #0
 8011ee8:	dd0e      	ble.n	8011f08 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011eea:	1402      	asrs	r2, r0, #16
 8011eec:	d405      	bmi.n	8011efa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011eee:	42ba      	cmp	r2, r7
 8011ef0:	da03      	bge.n	8011efa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011ef2:	140a      	asrs	r2, r1, #16
 8011ef4:	d401      	bmi.n	8011efa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011ef6:	42b2      	cmp	r2, r6
 8011ef8:	db07      	blt.n	8011f0a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011efa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011efc:	3b01      	subs	r3, #1
 8011efe:	3402      	adds	r4, #2
 8011f00:	4410      	add	r0, r2
 8011f02:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011f04:	4411      	add	r1, r2
 8011f06:	e7ee      	b.n	8011ee6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8011f08:	d019      	beq.n	8011f3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8011f0a:	1e5a      	subs	r2, r3, #1
 8011f0c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8011f0e:	fb05 0502 	mla	r5, r5, r2, r0
 8011f12:	142d      	asrs	r5, r5, #16
 8011f14:	d409      	bmi.n	8011f2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011f16:	42bd      	cmp	r5, r7
 8011f18:	da07      	bge.n	8011f2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011f1a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8011f1c:	fb05 1202 	mla	r2, r5, r2, r1
 8011f20:	1412      	asrs	r2, r2, #16
 8011f22:	d402      	bmi.n	8011f2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011f24:	42b2      	cmp	r2, r6
 8011f26:	f2c0 80ac 	blt.w	8012082 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8011f2a:	f04f 0e00 	mov.w	lr, #0
 8011f2e:	eb03 020e 	add.w	r2, r3, lr
 8011f32:	2a00      	cmp	r2, #0
 8011f34:	dc3e      	bgt.n	8011fb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011f36:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011f3a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011f3e:	f1bb 0f00 	cmp.w	fp, #0
 8011f42:	f340 80fe 	ble.w	8012142 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8011f46:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011f4a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011f4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011f50:	f1bb 0b01 	subs.w	fp, fp, #1
 8011f54:	eeb0 6a62 	vmov.f32	s12, s5
 8011f58:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011f5c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011f60:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011f64:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8011f68:	eeb0 6a43 	vmov.f32	s12, s6
 8011f6c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011f70:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8011f74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011f78:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011f7c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011f80:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011f84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011f88:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011f8c:	ee12 2a90 	vmov	r2, s5
 8011f90:	eef0 2a47 	vmov.f32	s5, s14
 8011f94:	fb92 f3f3 	sdiv	r3, r2, r3
 8011f98:	ee13 2a10 	vmov	r2, s6
 8011f9c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8011f9e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011fa0:	eeb0 3a67 	vmov.f32	s6, s15
 8011fa4:	fb92 f3f3 	sdiv	r3, r2, r3
 8011fa8:	9a04      	ldr	r2, [sp, #16]
 8011faa:	9314      	str	r3, [sp, #80]	@ 0x50
 8011fac:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011fae:	bf08      	it	eq
 8011fb0:	4613      	moveq	r3, r2
 8011fb2:	e787      	b.n	8011ec4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011fb4:	1406      	asrs	r6, r0, #16
 8011fb6:	d45d      	bmi.n	8012074 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011fb8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8011fbc:	42b5      	cmp	r5, r6
 8011fbe:	dd59      	ble.n	8012074 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011fc0:	140f      	asrs	r7, r1, #16
 8011fc2:	d457      	bmi.n	8012074 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011fc4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8011fc8:	42ba      	cmp	r2, r7
 8011fca:	dd53      	ble.n	8012074 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011fcc:	9a01      	ldr	r2, [sp, #4]
 8011fce:	b22d      	sxth	r5, r5
 8011fd0:	fb07 2505 	mla	r5, r7, r5, r2
 8011fd4:	5daa      	ldrb	r2, [r5, r6]
 8011fd6:	9d02      	ldr	r5, [sp, #8]
 8011fd8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011fdc:	0e2e      	lsrs	r6, r5, #24
 8011fde:	d049      	beq.n	8012074 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011fe0:	f06f 0201 	mvn.w	r2, #1
 8011fe4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011fe8:	fb02 f20e 	mul.w	r2, r2, lr
 8011fec:	f834 8002 	ldrh.w	r8, [r4, r2]
 8011ff0:	9203      	str	r2, [sp, #12]
 8011ff2:	9a05      	ldr	r2, [sp, #20]
 8011ff4:	ea4f 2728 	mov.w	r7, r8, asr #8
 8011ff8:	4356      	muls	r6, r2
 8011ffa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011ffe:	1c72      	adds	r2, r6, #1
 8012000:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8012004:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012008:	b2ed      	uxtb	r5, r5
 801200a:	1212      	asrs	r2, r2, #8
 801200c:	fa1f f982 	uxth.w	r9, r2
 8012010:	43d2      	mvns	r2, r2
 8012012:	fb16 f609 	smulbb	r6, r6, r9
 8012016:	b2d2      	uxtb	r2, r2
 8012018:	fb15 f509 	smulbb	r5, r5, r9
 801201c:	fb07 6702 	mla	r7, r7, r2, r6
 8012020:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8012024:	fb1a fa09 	smulbb	sl, sl, r9
 8012028:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801202c:	b2bf      	uxth	r7, r7
 801202e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012032:	fa5f f888 	uxtb.w	r8, r8
 8012036:	fb06 a602 	mla	r6, r6, r2, sl
 801203a:	fb08 5502 	mla	r5, r8, r2, r5
 801203e:	1c7a      	adds	r2, r7, #1
 8012040:	b2b6      	uxth	r6, r6
 8012042:	b2ad      	uxth	r5, r5
 8012044:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012048:	9a03      	ldr	r2, [sp, #12]
 801204a:	f105 0a01 	add.w	sl, r5, #1
 801204e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8012052:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012056:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801205a:	ea4a 0707 	orr.w	r7, sl, r7
 801205e:	f106 0a01 	add.w	sl, r6, #1
 8012062:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012066:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801206a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801206e:	ea47 070a 	orr.w	r7, r7, sl
 8012072:	52a7      	strh	r7, [r4, r2]
 8012074:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012076:	f10e 3eff 	add.w	lr, lr, #4294967295
 801207a:	4410      	add	r0, r2
 801207c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801207e:	4411      	add	r1, r2
 8012080:	e755      	b.n	8011f2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012082:	f04f 0800 	mov.w	r8, #0
 8012086:	eba3 0208 	sub.w	r2, r3, r8
 801208a:	2a00      	cmp	r2, #0
 801208c:	f77f af53 	ble.w	8011f36 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8012090:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8012094:	140a      	asrs	r2, r1, #16
 8012096:	9f01      	ldr	r7, [sp, #4]
 8012098:	1405      	asrs	r5, r0, #16
 801209a:	fb06 7202 	mla	r2, r6, r2, r7
 801209e:	5d52      	ldrb	r2, [r2, r5]
 80120a0:	9d02      	ldr	r5, [sp, #8]
 80120a2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80120a6:	0e2e      	lsrs	r6, r5, #24
 80120a8:	d044      	beq.n	8012134 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80120aa:	9a05      	ldr	r2, [sp, #20]
 80120ac:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80120b0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80120b4:	4356      	muls	r6, r2
 80120b6:	ea4f 272e 	mov.w	r7, lr, asr #8
 80120ba:	1c72      	adds	r2, r6, #1
 80120bc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80120c0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80120c4:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80120c8:	b2ed      	uxtb	r5, r5
 80120ca:	1212      	asrs	r2, r2, #8
 80120cc:	fa1f f982 	uxth.w	r9, r2
 80120d0:	43d2      	mvns	r2, r2
 80120d2:	fb16 f609 	smulbb	r6, r6, r9
 80120d6:	b2d2      	uxtb	r2, r2
 80120d8:	fb15 f509 	smulbb	r5, r5, r9
 80120dc:	fb07 6702 	mla	r7, r7, r2, r6
 80120e0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80120e4:	fb1a fa09 	smulbb	sl, sl, r9
 80120e8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80120ec:	b2bf      	uxth	r7, r7
 80120ee:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80120f2:	fa5f fe8e 	uxtb.w	lr, lr
 80120f6:	fb06 a602 	mla	r6, r6, r2, sl
 80120fa:	fb0e 5502 	mla	r5, lr, r2, r5
 80120fe:	1c7a      	adds	r2, r7, #1
 8012100:	b2b6      	uxth	r6, r6
 8012102:	b2ad      	uxth	r5, r5
 8012104:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012108:	f105 0a01 	add.w	sl, r5, #1
 801210c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8012110:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012114:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012118:	ea4a 0707 	orr.w	r7, sl, r7
 801211c:	f106 0a01 	add.w	sl, r6, #1
 8012120:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012124:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012128:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801212c:	ea47 070a 	orr.w	r7, r7, sl
 8012130:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8012134:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012136:	f108 0801 	add.w	r8, r8, #1
 801213a:	4410      	add	r0, r2
 801213c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801213e:	4411      	add	r1, r2
 8012140:	e7a1      	b.n	8012086 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8012142:	b007      	add	sp, #28
 8012144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012148 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801214c:	b085      	sub	sp, #20
 801214e:	468b      	mov	fp, r1
 8012150:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012154:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012156:	9203      	str	r2, [sp, #12]
 8012158:	6841      	ldr	r1, [r0, #4]
 801215a:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801215e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8012162:	fb01 2404 	mla	r4, r1, r4, r2
 8012166:	6802      	ldr	r2, [r0, #0]
 8012168:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801216c:	f8de 2000 	ldr.w	r2, [lr]
 8012170:	9200      	str	r2, [sp, #0]
 8012172:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012176:	3204      	adds	r2, #4
 8012178:	9201      	str	r2, [sp, #4]
 801217a:	f1bb 0f00 	cmp.w	fp, #0
 801217e:	dc03      	bgt.n	8012188 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8012180:	9a03      	ldr	r2, [sp, #12]
 8012182:	2a00      	cmp	r2, #0
 8012184:	f340 8153 	ble.w	801242e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8012188:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801218a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801218e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012192:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012194:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8012198:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801219c:	2b00      	cmp	r3, #0
 801219e:	dd0e      	ble.n	80121be <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80121a0:	1408      	asrs	r0, r1, #16
 80121a2:	d405      	bmi.n	80121b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80121a4:	42b8      	cmp	r0, r7
 80121a6:	da03      	bge.n	80121b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80121a8:	1410      	asrs	r0, r2, #16
 80121aa:	d401      	bmi.n	80121b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80121ac:	42b0      	cmp	r0, r6
 80121ae:	db07      	blt.n	80121c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80121b0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80121b2:	3b01      	subs	r3, #1
 80121b4:	3402      	adds	r4, #2
 80121b6:	4401      	add	r1, r0
 80121b8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80121ba:	4402      	add	r2, r0
 80121bc:	e7ee      	b.n	801219c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80121be:	d017      	beq.n	80121f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80121c0:	1e58      	subs	r0, r3, #1
 80121c2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80121c4:	fb05 1500 	mla	r5, r5, r0, r1
 80121c8:	142d      	asrs	r5, r5, #16
 80121ca:	d409      	bmi.n	80121e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80121cc:	42bd      	cmp	r5, r7
 80121ce:	da07      	bge.n	80121e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80121d0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80121d2:	fb05 2000 	mla	r0, r5, r0, r2
 80121d6:	1400      	asrs	r0, r0, #16
 80121d8:	d402      	bmi.n	80121e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80121da:	42b0      	cmp	r0, r6
 80121dc:	f2c0 80bc 	blt.w	8012358 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80121e0:	2600      	movs	r6, #0
 80121e2:	1998      	adds	r0, r3, r6
 80121e4:	2800      	cmp	r0, #0
 80121e6:	dc3e      	bgt.n	8012266 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80121e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80121ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80121f0:	f1bb 0f00 	cmp.w	fp, #0
 80121f4:	f340 811b 	ble.w	801242e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80121f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80121fc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80121fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012202:	f1bb 0b01 	subs.w	fp, fp, #1
 8012206:	eeb0 6a62 	vmov.f32	s12, s5
 801220a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801220e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012212:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012216:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801221a:	eeb0 6a43 	vmov.f32	s12, s6
 801221e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012222:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8012226:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801222a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801222e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012232:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012236:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801223a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801223e:	ee12 2a90 	vmov	r2, s5
 8012242:	eef0 2a47 	vmov.f32	s5, s14
 8012246:	fb92 f3f3 	sdiv	r3, r2, r3
 801224a:	ee13 2a10 	vmov	r2, s6
 801224e:	9311      	str	r3, [sp, #68]	@ 0x44
 8012250:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012252:	eeb0 3a67 	vmov.f32	s6, s15
 8012256:	fb92 f3f3 	sdiv	r3, r2, r3
 801225a:	9a03      	ldr	r2, [sp, #12]
 801225c:	9312      	str	r3, [sp, #72]	@ 0x48
 801225e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012260:	bf08      	it	eq
 8012262:	4613      	moveq	r3, r2
 8012264:	e789      	b.n	801217a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8012266:	140f      	asrs	r7, r1, #16
 8012268:	d426      	bmi.n	80122b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801226a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801226e:	42bd      	cmp	r5, r7
 8012270:	dd22      	ble.n	80122b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012272:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012276:	d41f      	bmi.n	80122b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012278:	f8de 000c 	ldr.w	r0, [lr, #12]
 801227c:	4560      	cmp	r0, ip
 801227e:	dd1b      	ble.n	80122b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012280:	9800      	ldr	r0, [sp, #0]
 8012282:	b22d      	sxth	r5, r5
 8012284:	fb0c 0505 	mla	r5, ip, r5, r0
 8012288:	5de8      	ldrb	r0, [r5, r7]
 801228a:	9d01      	ldr	r5, [sp, #4]
 801228c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8012290:	0e07      	lsrs	r7, r0, #24
 8012292:	2fff      	cmp	r7, #255	@ 0xff
 8012294:	d116      	bne.n	80122c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012296:	f06f 0501 	mvn.w	r5, #1
 801229a:	fb05 f706 	mul.w	r7, r5, r6
 801229e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80122a2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80122a6:	0945      	lsrs	r5, r0, #5
 80122a8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80122ac:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80122b0:	ea4c 0505 	orr.w	r5, ip, r5
 80122b4:	4305      	orrs	r5, r0
 80122b6:	53e5      	strh	r5, [r4, r7]
 80122b8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80122ba:	3e01      	subs	r6, #1
 80122bc:	4401      	add	r1, r0
 80122be:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80122c0:	4402      	add	r2, r0
 80122c2:	e78e      	b.n	80121e2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80122c4:	b2fd      	uxtb	r5, r7
 80122c6:	2f00      	cmp	r7, #0
 80122c8:	d0f6      	beq.n	80122b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80122ca:	f06f 0701 	mvn.w	r7, #1
 80122ce:	fa1f f985 	uxth.w	r9, r5
 80122d2:	43ed      	mvns	r5, r5
 80122d4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80122d8:	4377      	muls	r7, r6
 80122da:	fb1a fa09 	smulbb	sl, sl, r9
 80122de:	b2ed      	uxtb	r5, r5
 80122e0:	f834 8007 	ldrh.w	r8, [r4, r7]
 80122e4:	9702      	str	r7, [sp, #8]
 80122e6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80122ea:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80122ee:	fb17 f709 	smulbb	r7, r7, r9
 80122f2:	b2c0      	uxtb	r0, r0
 80122f4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80122f8:	fb10 f009 	smulbb	r0, r0, r9
 80122fc:	fb0c 7c05 	mla	ip, ip, r5, r7
 8012300:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8012304:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012308:	fa1f fc8c 	uxth.w	ip, ip
 801230c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012310:	fa5f f888 	uxtb.w	r8, r8
 8012314:	fb07 a705 	mla	r7, r7, r5, sl
 8012318:	fb08 0005 	mla	r0, r8, r5, r0
 801231c:	f10c 0501 	add.w	r5, ip, #1
 8012320:	b2bf      	uxth	r7, r7
 8012322:	b280      	uxth	r0, r0
 8012324:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012328:	f100 0a01 	add.w	sl, r0, #1
 801232c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012330:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8012334:	9802      	ldr	r0, [sp, #8]
 8012336:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801233a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801233e:	f107 0a01 	add.w	sl, r7, #1
 8012342:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012346:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801234a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801234e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012352:	f824 c000 	strh.w	ip, [r4, r0]
 8012356:	e7af      	b.n	80122b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012358:	f04f 0800 	mov.w	r8, #0
 801235c:	eba3 0008 	sub.w	r0, r3, r8
 8012360:	2800      	cmp	r0, #0
 8012362:	f77f af41 	ble.w	80121e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012366:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801236a:	1410      	asrs	r0, r2, #16
 801236c:	9f00      	ldr	r7, [sp, #0]
 801236e:	140d      	asrs	r5, r1, #16
 8012370:	fb06 7000 	mla	r0, r6, r0, r7
 8012374:	5d40      	ldrb	r0, [r0, r5]
 8012376:	9d01      	ldr	r5, [sp, #4]
 8012378:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801237c:	0e2e      	lsrs	r6, r5, #24
 801237e:	2eff      	cmp	r6, #255	@ 0xff
 8012380:	d112      	bne.n	80123a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8012382:	482c      	ldr	r0, [pc, #176]	@ (8012434 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8012384:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8012388:	0968      	lsrs	r0, r5, #5
 801238a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801238e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8012392:	4330      	orrs	r0, r6
 8012394:	4328      	orrs	r0, r5
 8012396:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801239a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801239c:	f108 0801 	add.w	r8, r8, #1
 80123a0:	4401      	add	r1, r0
 80123a2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80123a4:	4402      	add	r2, r0
 80123a6:	e7d9      	b.n	801235c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80123a8:	b2f0      	uxtb	r0, r6
 80123aa:	2e00      	cmp	r6, #0
 80123ac:	d0f5      	beq.n	801239a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80123ae:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80123b2:	fa1f f980 	uxth.w	r9, r0
 80123b6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80123ba:	43c0      	mvns	r0, r0
 80123bc:	ea4f 272c 	mov.w	r7, ip, asr #8
 80123c0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80123c4:	fb16 f609 	smulbb	r6, r6, r9
 80123c8:	b2c0      	uxtb	r0, r0
 80123ca:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80123ce:	b2ed      	uxtb	r5, r5
 80123d0:	fb1a fa09 	smulbb	sl, sl, r9
 80123d4:	fb07 6700 	mla	r7, r7, r0, r6
 80123d8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80123dc:	fb15 f509 	smulbb	r5, r5, r9
 80123e0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80123e4:	b2bf      	uxth	r7, r7
 80123e6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80123ea:	fa5f fc8c 	uxtb.w	ip, ip
 80123ee:	fb06 a600 	mla	r6, r6, r0, sl
 80123f2:	fb0c 5500 	mla	r5, ip, r0, r5
 80123f6:	1c78      	adds	r0, r7, #1
 80123f8:	b2b6      	uxth	r6, r6
 80123fa:	b2ad      	uxth	r5, r5
 80123fc:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8012400:	f105 0a01 	add.w	sl, r5, #1
 8012404:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8012408:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801240c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012410:	ea4a 0707 	orr.w	r7, sl, r7
 8012414:	f106 0a01 	add.w	sl, r6, #1
 8012418:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801241c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012420:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012424:	ea47 070a 	orr.w	r7, r7, sl
 8012428:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801242c:	e7b5      	b.n	801239a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801242e:	b005      	add	sp, #20
 8012430:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012434:	fffff800 	.word	0xfffff800

08012438 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801243c:	b087      	sub	sp, #28
 801243e:	468b      	mov	fp, r1
 8012440:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012444:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8012446:	9204      	str	r2, [sp, #16]
 8012448:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801244c:	6861      	ldr	r1, [r4, #4]
 801244e:	9205      	str	r2, [sp, #20]
 8012450:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8012454:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8012458:	fb01 2000 	mla	r0, r1, r0, r2
 801245c:	6822      	ldr	r2, [r4, #0]
 801245e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8012462:	f8de 2000 	ldr.w	r2, [lr]
 8012466:	9201      	str	r2, [sp, #4]
 8012468:	f8de 2004 	ldr.w	r2, [lr, #4]
 801246c:	9202      	str	r2, [sp, #8]
 801246e:	f1bb 0f00 	cmp.w	fp, #0
 8012472:	dc03      	bgt.n	801247c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8012474:	9a04      	ldr	r2, [sp, #16]
 8012476:	2a00      	cmp	r2, #0
 8012478:	f340 8142 	ble.w	8012700 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801247c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801247e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012482:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012486:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012488:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801248c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012490:	2b00      	cmp	r3, #0
 8012492:	dd0e      	ble.n	80124b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8012494:	140c      	asrs	r4, r1, #16
 8012496:	d405      	bmi.n	80124a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012498:	42bc      	cmp	r4, r7
 801249a:	da03      	bge.n	80124a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801249c:	1414      	asrs	r4, r2, #16
 801249e:	d401      	bmi.n	80124a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80124a0:	42b4      	cmp	r4, r6
 80124a2:	db07      	blt.n	80124b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80124a4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80124a6:	3b01      	subs	r3, #1
 80124a8:	3002      	adds	r0, #2
 80124aa:	4421      	add	r1, r4
 80124ac:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80124ae:	4422      	add	r2, r4
 80124b0:	e7ee      	b.n	8012490 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80124b2:	d019      	beq.n	80124e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80124b4:	1e5c      	subs	r4, r3, #1
 80124b6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80124b8:	fb05 1504 	mla	r5, r5, r4, r1
 80124bc:	142d      	asrs	r5, r5, #16
 80124be:	d409      	bmi.n	80124d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80124c0:	42bd      	cmp	r5, r7
 80124c2:	da07      	bge.n	80124d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80124c4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80124c6:	fb05 2404 	mla	r4, r5, r4, r2
 80124ca:	1424      	asrs	r4, r4, #16
 80124cc:	d402      	bmi.n	80124d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80124ce:	42b4      	cmp	r4, r6
 80124d0:	f2c0 80b1 	blt.w	8012636 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80124d4:	f04f 0800 	mov.w	r8, #0
 80124d8:	eb03 0408 	add.w	r4, r3, r8
 80124dc:	2c00      	cmp	r4, #0
 80124de:	dc3e      	bgt.n	801255e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80124e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80124e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80124e8:	f1bb 0f00 	cmp.w	fp, #0
 80124ec:	f340 8108 	ble.w	8012700 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80124f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80124f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80124f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80124fa:	f1bb 0b01 	subs.w	fp, fp, #1
 80124fe:	eeb0 6a62 	vmov.f32	s12, s5
 8012502:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012506:	ee31 1a05 	vadd.f32	s2, s2, s10
 801250a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801250e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8012512:	eeb0 6a43 	vmov.f32	s12, s6
 8012516:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801251a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801251e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012522:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012526:	ee77 2a62 	vsub.f32	s5, s14, s5
 801252a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801252e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012532:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012536:	ee12 2a90 	vmov	r2, s5
 801253a:	eef0 2a47 	vmov.f32	s5, s14
 801253e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012542:	ee13 2a10 	vmov	r2, s6
 8012546:	9313      	str	r3, [sp, #76]	@ 0x4c
 8012548:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801254a:	eeb0 3a67 	vmov.f32	s6, s15
 801254e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012552:	9a04      	ldr	r2, [sp, #16]
 8012554:	9314      	str	r3, [sp, #80]	@ 0x50
 8012556:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012558:	bf08      	it	eq
 801255a:	4613      	moveq	r3, r2
 801255c:	e787      	b.n	801246e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801255e:	140e      	asrs	r6, r1, #16
 8012560:	d462      	bmi.n	8012628 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012562:	f8de 5008 	ldr.w	r5, [lr, #8]
 8012566:	42b5      	cmp	r5, r6
 8012568:	dd5e      	ble.n	8012628 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801256a:	1417      	asrs	r7, r2, #16
 801256c:	d45c      	bmi.n	8012628 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801256e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8012572:	42bc      	cmp	r4, r7
 8012574:	dd58      	ble.n	8012628 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012576:	b22d      	sxth	r5, r5
 8012578:	9c02      	ldr	r4, [sp, #8]
 801257a:	fb07 6505 	mla	r5, r7, r5, r6
 801257e:	5d66      	ldrb	r6, [r4, r5]
 8012580:	2e00      	cmp	r6, #0
 8012582:	d051      	beq.n	8012628 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012584:	9c01      	ldr	r4, [sp, #4]
 8012586:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801258a:	f06f 0401 	mvn.w	r4, #1
 801258e:	fb04 f408 	mul.w	r4, r4, r8
 8012592:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8012596:	5b05      	ldrh	r5, [r0, r4]
 8012598:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801259c:	9403      	str	r4, [sp, #12]
 801259e:	9c05      	ldr	r4, [sp, #20]
 80125a0:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80125a4:	4366      	muls	r6, r4
 80125a6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80125aa:	1c74      	adds	r4, r6, #1
 80125ac:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80125b0:	122e      	asrs	r6, r5, #8
 80125b2:	1224      	asrs	r4, r4, #8
 80125b4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80125b8:	00ed      	lsls	r5, r5, #3
 80125ba:	b2a7      	uxth	r7, r4
 80125bc:	43e4      	mvns	r4, r4
 80125be:	b2ed      	uxtb	r5, r5
 80125c0:	b2e4      	uxtb	r4, r4
 80125c2:	fb16 f604 	smulbb	r6, r6, r4
 80125c6:	fb15 f504 	smulbb	r5, r5, r4
 80125ca:	fb0c 6c07 	mla	ip, ip, r7, r6
 80125ce:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80125d2:	fb1a fa04 	smulbb	sl, sl, r4
 80125d6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80125da:	fa1f fc8c 	uxth.w	ip, ip
 80125de:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80125e2:	fa5f f989 	uxtb.w	r9, r9
 80125e6:	fb06 a607 	mla	r6, r6, r7, sl
 80125ea:	f10c 0401 	add.w	r4, ip, #1
 80125ee:	fb09 5507 	mla	r5, r9, r7, r5
 80125f2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80125f6:	9c03      	ldr	r4, [sp, #12]
 80125f8:	b2ad      	uxth	r5, r5
 80125fa:	b2b6      	uxth	r6, r6
 80125fc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012600:	f105 0a01 	add.w	sl, r5, #1
 8012604:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012608:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801260c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012610:	f106 0a01 	add.w	sl, r6, #1
 8012614:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012618:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801261c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012620:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012624:	f820 c004 	strh.w	ip, [r0, r4]
 8012628:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801262a:	f108 38ff 	add.w	r8, r8, #4294967295
 801262e:	4421      	add	r1, r4
 8012630:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8012632:	4422      	add	r2, r4
 8012634:	e750      	b.n	80124d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012636:	f04f 0900 	mov.w	r9, #0
 801263a:	eba3 0409 	sub.w	r4, r3, r9
 801263e:	2c00      	cmp	r4, #0
 8012640:	f77f af4e 	ble.w	80124e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8012644:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8012648:	140d      	asrs	r5, r1, #16
 801264a:	1414      	asrs	r4, r2, #16
 801264c:	fb06 5404 	mla	r4, r6, r4, r5
 8012650:	9d02      	ldr	r5, [sp, #8]
 8012652:	5d2e      	ldrb	r6, [r5, r4]
 8012654:	2e00      	cmp	r6, #0
 8012656:	d04c      	beq.n	80126f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8012658:	9d01      	ldr	r5, [sp, #4]
 801265a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801265e:	9c05      	ldr	r4, [sp, #20]
 8012660:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8012664:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8012668:	4366      	muls	r6, r4
 801266a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801266e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012672:	1c74      	adds	r4, r6, #1
 8012674:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8012678:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801267c:	122e      	asrs	r6, r5, #8
 801267e:	1224      	asrs	r4, r4, #8
 8012680:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8012684:	00ed      	lsls	r5, r5, #3
 8012686:	b2a7      	uxth	r7, r4
 8012688:	43e4      	mvns	r4, r4
 801268a:	b2ed      	uxtb	r5, r5
 801268c:	b2e4      	uxtb	r4, r4
 801268e:	fb16 f604 	smulbb	r6, r6, r4
 8012692:	fb15 f504 	smulbb	r5, r5, r4
 8012696:	fb0c 6c07 	mla	ip, ip, r7, r6
 801269a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801269e:	fb1a fa04 	smulbb	sl, sl, r4
 80126a2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80126a6:	fa1f fc8c 	uxth.w	ip, ip
 80126aa:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80126ae:	fa5f f888 	uxtb.w	r8, r8
 80126b2:	fb06 a607 	mla	r6, r6, r7, sl
 80126b6:	f10c 0401 	add.w	r4, ip, #1
 80126ba:	fb08 5507 	mla	r5, r8, r7, r5
 80126be:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80126c2:	b2ad      	uxth	r5, r5
 80126c4:	b2b6      	uxth	r6, r6
 80126c6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80126ca:	f105 0a01 	add.w	sl, r5, #1
 80126ce:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80126d2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80126d6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80126da:	f106 0a01 	add.w	sl, r6, #1
 80126de:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80126e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80126e6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80126ea:	ea4c 0c0a 	orr.w	ip, ip, sl
 80126ee:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80126f2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80126f4:	f109 0901 	add.w	r9, r9, #1
 80126f8:	4421      	add	r1, r4
 80126fa:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80126fc:	4422      	add	r2, r4
 80126fe:	e79c      	b.n	801263a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8012700:	b007      	add	sp, #28
 8012702:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012706 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012706:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801270a:	b085      	sub	sp, #20
 801270c:	468b      	mov	fp, r1
 801270e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012712:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8012714:	9203      	str	r2, [sp, #12]
 8012716:	6861      	ldr	r1, [r4, #4]
 8012718:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801271c:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8012720:	fb01 2000 	mla	r0, r1, r0, r2
 8012724:	6822      	ldr	r2, [r4, #0]
 8012726:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801272a:	f8d8 2000 	ldr.w	r2, [r8]
 801272e:	9200      	str	r2, [sp, #0]
 8012730:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8012734:	9201      	str	r2, [sp, #4]
 8012736:	f1bb 0f00 	cmp.w	fp, #0
 801273a:	dc03      	bgt.n	8012744 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801273c:	9a03      	ldr	r2, [sp, #12]
 801273e:	2a00      	cmp	r2, #0
 8012740:	f340 8146 	ble.w	80129d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8012744:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012746:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801274a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801274e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012750:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8012754:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012758:	2b00      	cmp	r3, #0
 801275a:	dd0e      	ble.n	801277a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801275c:	140c      	asrs	r4, r1, #16
 801275e:	d405      	bmi.n	801276c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012760:	42bc      	cmp	r4, r7
 8012762:	da03      	bge.n	801276c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012764:	1414      	asrs	r4, r2, #16
 8012766:	d401      	bmi.n	801276c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012768:	42b4      	cmp	r4, r6
 801276a:	db07      	blt.n	801277c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801276c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801276e:	3b01      	subs	r3, #1
 8012770:	3002      	adds	r0, #2
 8012772:	4421      	add	r1, r4
 8012774:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8012776:	4422      	add	r2, r4
 8012778:	e7ee      	b.n	8012758 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801277a:	d017      	beq.n	80127ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801277c:	1e5c      	subs	r4, r3, #1
 801277e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8012780:	fb05 1504 	mla	r5, r5, r4, r1
 8012784:	142d      	asrs	r5, r5, #16
 8012786:	d409      	bmi.n	801279c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012788:	42bd      	cmp	r5, r7
 801278a:	da07      	bge.n	801279c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801278c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801278e:	fb05 2404 	mla	r4, r5, r4, r2
 8012792:	1424      	asrs	r4, r4, #16
 8012794:	d402      	bmi.n	801279c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012796:	42b4      	cmp	r4, r6
 8012798:	f2c0 80b3 	blt.w	8012902 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801279c:	2600      	movs	r6, #0
 801279e:	199c      	adds	r4, r3, r6
 80127a0:	2c00      	cmp	r4, #0
 80127a2:	dc3e      	bgt.n	8012822 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80127a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80127a8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80127ac:	f1bb 0f00 	cmp.w	fp, #0
 80127b0:	f340 810e 	ble.w	80129d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80127b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80127b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80127ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80127be:	f1bb 0b01 	subs.w	fp, fp, #1
 80127c2:	eeb0 6a62 	vmov.f32	s12, s5
 80127c6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80127ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80127ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80127d2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80127d6:	eeb0 6a43 	vmov.f32	s12, s6
 80127da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80127de:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80127e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80127e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80127ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 80127ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80127f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80127f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80127fa:	ee12 2a90 	vmov	r2, s5
 80127fe:	eef0 2a47 	vmov.f32	s5, s14
 8012802:	fb92 f3f3 	sdiv	r3, r2, r3
 8012806:	ee13 2a10 	vmov	r2, s6
 801280a:	9311      	str	r3, [sp, #68]	@ 0x44
 801280c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801280e:	eeb0 3a67 	vmov.f32	s6, s15
 8012812:	fb92 f3f3 	sdiv	r3, r2, r3
 8012816:	9a03      	ldr	r2, [sp, #12]
 8012818:	9312      	str	r3, [sp, #72]	@ 0x48
 801281a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801281c:	bf08      	it	eq
 801281e:	4613      	moveq	r3, r2
 8012820:	e789      	b.n	8012736 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012822:	140f      	asrs	r7, r1, #16
 8012824:	d418      	bmi.n	8012858 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012826:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801282a:	42bd      	cmp	r5, r7
 801282c:	dd14      	ble.n	8012858 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801282e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012832:	d411      	bmi.n	8012858 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012834:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8012838:	4564      	cmp	r4, ip
 801283a:	dd0d      	ble.n	8012858 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801283c:	b22d      	sxth	r5, r5
 801283e:	9c01      	ldr	r4, [sp, #4]
 8012840:	fb0c 7505 	mla	r5, ip, r5, r7
 8012844:	5d64      	ldrb	r4, [r4, r5]
 8012846:	2cff      	cmp	r4, #255	@ 0xff
 8012848:	d10c      	bne.n	8012864 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801284a:	9c00      	ldr	r4, [sp, #0]
 801284c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8012850:	f06f 0401 	mvn.w	r4, #1
 8012854:	4374      	muls	r4, r6
 8012856:	5305      	strh	r5, [r0, r4]
 8012858:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801285a:	3e01      	subs	r6, #1
 801285c:	4421      	add	r1, r4
 801285e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8012860:	4422      	add	r2, r4
 8012862:	e79c      	b.n	801279e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012864:	2c00      	cmp	r4, #0
 8012866:	d0f7      	beq.n	8012858 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012868:	9f00      	ldr	r7, [sp, #0]
 801286a:	fa1f fc84 	uxth.w	ip, r4
 801286e:	43e4      	mvns	r4, r4
 8012870:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8012874:	f06f 0501 	mvn.w	r5, #1
 8012878:	b2e4      	uxtb	r4, r4
 801287a:	4375      	muls	r5, r6
 801287c:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8012880:	9502      	str	r5, [sp, #8]
 8012882:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8012886:	5b45      	ldrh	r5, [r0, r5]
 8012888:	122f      	asrs	r7, r5, #8
 801288a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801288e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012892:	00ed      	lsls	r5, r5, #3
 8012894:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8012898:	fb17 f704 	smulbb	r7, r7, r4
 801289c:	b2ed      	uxtb	r5, r5
 801289e:	fb1a fa04 	smulbb	sl, sl, r4
 80128a2:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80128a6:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80128aa:	fb15 f504 	smulbb	r5, r5, r4
 80128ae:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80128b2:	fa1f fe8e 	uxth.w	lr, lr
 80128b6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80128ba:	fa5f f989 	uxtb.w	r9, r9
 80128be:	fb07 a70c 	mla	r7, r7, ip, sl
 80128c2:	f10e 0401 	add.w	r4, lr, #1
 80128c6:	fb09 550c 	mla	r5, r9, ip, r5
 80128ca:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80128ce:	9c02      	ldr	r4, [sp, #8]
 80128d0:	b2ad      	uxth	r5, r5
 80128d2:	b2bf      	uxth	r7, r7
 80128d4:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80128d8:	f105 0a01 	add.w	sl, r5, #1
 80128dc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80128e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80128e4:	ea4a 0e0e 	orr.w	lr, sl, lr
 80128e8:	f107 0a01 	add.w	sl, r7, #1
 80128ec:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80128f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80128f4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80128f8:	ea4e 0e0a 	orr.w	lr, lr, sl
 80128fc:	f820 e004 	strh.w	lr, [r0, r4]
 8012900:	e7aa      	b.n	8012858 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012902:	f04f 0900 	mov.w	r9, #0
 8012906:	eba3 0409 	sub.w	r4, r3, r9
 801290a:	2c00      	cmp	r4, #0
 801290c:	f77f af4a 	ble.w	80127a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012910:	1414      	asrs	r4, r2, #16
 8012912:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8012916:	140d      	asrs	r5, r1, #16
 8012918:	fb06 5504 	mla	r5, r6, r4, r5
 801291c:	9c01      	ldr	r4, [sp, #4]
 801291e:	5d64      	ldrb	r4, [r4, r5]
 8012920:	2cff      	cmp	r4, #255	@ 0xff
 8012922:	d10b      	bne.n	801293c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8012924:	9c00      	ldr	r4, [sp, #0]
 8012926:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801292a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801292e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8012930:	f109 0901 	add.w	r9, r9, #1
 8012934:	4421      	add	r1, r4
 8012936:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8012938:	4422      	add	r2, r4
 801293a:	e7e4      	b.n	8012906 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801293c:	2c00      	cmp	r4, #0
 801293e:	d0f6      	beq.n	801292e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8012940:	9e00      	ldr	r6, [sp, #0]
 8012942:	b2a7      	uxth	r7, r4
 8012944:	43e4      	mvns	r4, r4
 8012946:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801294a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801294e:	b2e4      	uxtb	r4, r4
 8012950:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012954:	122e      	asrs	r6, r5, #8
 8012956:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801295a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801295e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8012962:	00ed      	lsls	r5, r5, #3
 8012964:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8012968:	fb16 f604 	smulbb	r6, r6, r4
 801296c:	b2ed      	uxtb	r5, r5
 801296e:	fb1a fa04 	smulbb	sl, sl, r4
 8012972:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012976:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801297a:	fb15 f504 	smulbb	r5, r5, r4
 801297e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012982:	fa1f fc8c 	uxth.w	ip, ip
 8012986:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801298a:	fa5f fe8e 	uxtb.w	lr, lr
 801298e:	fb06 a607 	mla	r6, r6, r7, sl
 8012992:	f10c 0401 	add.w	r4, ip, #1
 8012996:	fb0e 5507 	mla	r5, lr, r7, r5
 801299a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801299e:	b2ad      	uxth	r5, r5
 80129a0:	b2b6      	uxth	r6, r6
 80129a2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80129a6:	f105 0a01 	add.w	sl, r5, #1
 80129aa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80129ae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80129b2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80129b6:	f106 0a01 	add.w	sl, r6, #1
 80129ba:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80129be:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80129c2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80129c6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80129ca:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80129ce:	e7ae      	b.n	801292e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80129d0:	b005      	add	sp, #20
 80129d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080129d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80129d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80129da:	b085      	sub	sp, #20
 80129dc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80129de:	9203      	str	r2, [sp, #12]
 80129e0:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 80129e4:	9100      	str	r1, [sp, #0]
 80129e6:	9201      	str	r2, [sp, #4]
 80129e8:	6841      	ldr	r1, [r0, #4]
 80129ea:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80129ee:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80129f2:	fb01 2404 	mla	r4, r1, r4, r2
 80129f6:	6802      	ldr	r2, [r0, #0]
 80129f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80129fc:	f8de 2000 	ldr.w	r2, [lr]
 8012a00:	9202      	str	r2, [sp, #8]
 8012a02:	9a01      	ldr	r2, [sp, #4]
 8012a04:	43d6      	mvns	r6, r2
 8012a06:	b2f6      	uxtb	r6, r6
 8012a08:	9a00      	ldr	r2, [sp, #0]
 8012a0a:	2a00      	cmp	r2, #0
 8012a0c:	dc03      	bgt.n	8012a16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8012a0e:	9a03      	ldr	r2, [sp, #12]
 8012a10:	2a00      	cmp	r2, #0
 8012a12:	f340 8124 	ble.w	8012c5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8012a16:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012a18:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8012a1c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012a20:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012a22:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8012a26:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012a2a:	2b00      	cmp	r3, #0
 8012a2c:	dd0e      	ble.n	8012a4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012a2e:	1408      	asrs	r0, r1, #16
 8012a30:	d405      	bmi.n	8012a3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012a32:	4560      	cmp	r0, ip
 8012a34:	da03      	bge.n	8012a3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012a36:	1410      	asrs	r0, r2, #16
 8012a38:	d401      	bmi.n	8012a3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012a3a:	42b8      	cmp	r0, r7
 8012a3c:	db07      	blt.n	8012a4e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8012a3e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012a40:	3b01      	subs	r3, #1
 8012a42:	3402      	adds	r4, #2
 8012a44:	4401      	add	r1, r0
 8012a46:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012a48:	4402      	add	r2, r0
 8012a4a:	e7ee      	b.n	8012a2a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8012a4c:	d06e      	beq.n	8012b2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8012a4e:	1e58      	subs	r0, r3, #1
 8012a50:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8012a52:	fb05 1500 	mla	r5, r5, r0, r1
 8012a56:	142d      	asrs	r5, r5, #16
 8012a58:	d45c      	bmi.n	8012b14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012a5a:	4565      	cmp	r5, ip
 8012a5c:	da5a      	bge.n	8012b14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012a5e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8012a60:	fb05 2000 	mla	r0, r5, r0, r2
 8012a64:	1400      	asrs	r0, r0, #16
 8012a66:	d455      	bmi.n	8012b14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012a68:	42b8      	cmp	r0, r7
 8012a6a:	da53      	bge.n	8012b14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012a6c:	4699      	mov	r9, r3
 8012a6e:	46a2      	mov	sl, r4
 8012a70:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8012a74:	f1b9 0f00 	cmp.w	r9, #0
 8012a78:	dd54      	ble.n	8012b24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012a7a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012a7e:	140d      	asrs	r5, r1, #16
 8012a80:	1410      	asrs	r0, r2, #16
 8012a82:	f109 39ff 	add.w	r9, r9, #4294967295
 8012a86:	fb07 5000 	mla	r0, r7, r0, r5
 8012a8a:	9d02      	ldr	r5, [sp, #8]
 8012a8c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8012a90:	f8ba 5000 	ldrh.w	r5, [sl]
 8012a94:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012a98:	122f      	asrs	r7, r5, #8
 8012a9a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8012a9e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012aa2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012aa6:	00ed      	lsls	r5, r5, #3
 8012aa8:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8012aac:	fb17 f706 	smulbb	r7, r7, r6
 8012ab0:	b2ed      	uxtb	r5, r5
 8012ab2:	fb18 f806 	smulbb	r8, r8, r6
 8012ab6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8012aba:	10c7      	asrs	r7, r0, #3
 8012abc:	fb15 f506 	smulbb	r5, r5, r6
 8012ac0:	00c0      	lsls	r0, r0, #3
 8012ac2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012ac6:	fa1f fc8c 	uxth.w	ip, ip
 8012aca:	b2c0      	uxtb	r0, r0
 8012acc:	fb07 870b 	mla	r7, r7, fp, r8
 8012ad0:	fb00 500b 	mla	r0, r0, fp, r5
 8012ad4:	f10c 0501 	add.w	r5, ip, #1
 8012ad8:	b2bf      	uxth	r7, r7
 8012ada:	b280      	uxth	r0, r0
 8012adc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012ae0:	f107 0801 	add.w	r8, r7, #1
 8012ae4:	1c45      	adds	r5, r0, #1
 8012ae6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8012aea:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012aee:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012af2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012af4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012af8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012afc:	4401      	add	r1, r0
 8012afe:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8012b02:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012b04:	ea45 0c0c 	orr.w	ip, r5, ip
 8012b08:	4402      	add	r2, r0
 8012b0a:	ea4c 0c08 	orr.w	ip, ip, r8
 8012b0e:	f82a cb02 	strh.w	ip, [sl], #2
 8012b12:	e7af      	b.n	8012a74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012b14:	f04f 0800 	mov.w	r8, #0
 8012b18:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8012b1c:	eb03 0008 	add.w	r0, r3, r8
 8012b20:	2800      	cmp	r0, #0
 8012b22:	dc41      	bgt.n	8012ba8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8012b24:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012b28:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012b2c:	9b00      	ldr	r3, [sp, #0]
 8012b2e:	2b00      	cmp	r3, #0
 8012b30:	f340 8095 	ble.w	8012c5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8012b34:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012b38:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012b3a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012b3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012b42:	eef0 6a62 	vmov.f32	s13, s5
 8012b46:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012b4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012b4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012b52:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8012b56:	eef0 6a43 	vmov.f32	s13, s6
 8012b5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012b5e:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8012b62:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012b66:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012b6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012b6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012b72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012b76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012b7a:	ee12 2a90 	vmov	r2, s5
 8012b7e:	eef0 2a47 	vmov.f32	s5, s14
 8012b82:	fb92 f3f3 	sdiv	r3, r2, r3
 8012b86:	ee13 2a10 	vmov	r2, s6
 8012b8a:	9311      	str	r3, [sp, #68]	@ 0x44
 8012b8c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012b8e:	eeb0 3a67 	vmov.f32	s6, s15
 8012b92:	fb92 f3f3 	sdiv	r3, r2, r3
 8012b96:	9312      	str	r3, [sp, #72]	@ 0x48
 8012b98:	9b00      	ldr	r3, [sp, #0]
 8012b9a:	9a03      	ldr	r2, [sp, #12]
 8012b9c:	3b01      	subs	r3, #1
 8012b9e:	9300      	str	r3, [sp, #0]
 8012ba0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012ba2:	bf08      	it	eq
 8012ba4:	4613      	moveq	r3, r2
 8012ba6:	e72f      	b.n	8012a08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8012ba8:	140f      	asrs	r7, r1, #16
 8012baa:	d451      	bmi.n	8012c50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012bac:	f8de 5008 	ldr.w	r5, [lr, #8]
 8012bb0:	42bd      	cmp	r5, r7
 8012bb2:	dd4d      	ble.n	8012c50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012bb4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012bb8:	d44a      	bmi.n	8012c50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012bba:	f8de 000c 	ldr.w	r0, [lr, #12]
 8012bbe:	4560      	cmp	r0, ip
 8012bc0:	dd46      	ble.n	8012c50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012bc2:	b22d      	sxth	r5, r5
 8012bc4:	9802      	ldr	r0, [sp, #8]
 8012bc6:	fb0c 7505 	mla	r5, ip, r5, r7
 8012bca:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8012bce:	f06f 0501 	mvn.w	r5, #1
 8012bd2:	fb05 fb08 	mul.w	fp, r5, r8
 8012bd6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012bda:	f834 500b 	ldrh.w	r5, [r4, fp]
 8012bde:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012be2:	122f      	asrs	r7, r5, #8
 8012be4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8012be8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012bec:	00ed      	lsls	r5, r5, #3
 8012bee:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8012bf2:	fb17 f706 	smulbb	r7, r7, r6
 8012bf6:	b2ed      	uxtb	r5, r5
 8012bf8:	fb19 f906 	smulbb	r9, r9, r6
 8012bfc:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8012c00:	10c7      	asrs	r7, r0, #3
 8012c02:	fb15 f506 	smulbb	r5, r5, r6
 8012c06:	00c0      	lsls	r0, r0, #3
 8012c08:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012c0c:	fa1f fc8c 	uxth.w	ip, ip
 8012c10:	b2c0      	uxtb	r0, r0
 8012c12:	fb07 970a 	mla	r7, r7, sl, r9
 8012c16:	fb00 500a 	mla	r0, r0, sl, r5
 8012c1a:	f10c 0501 	add.w	r5, ip, #1
 8012c1e:	b2bf      	uxth	r7, r7
 8012c20:	b280      	uxth	r0, r0
 8012c22:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012c26:	f107 0901 	add.w	r9, r7, #1
 8012c2a:	1c45      	adds	r5, r0, #1
 8012c2c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8012c30:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012c34:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012c38:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012c3c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012c40:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8012c44:	ea45 0c0c 	orr.w	ip, r5, ip
 8012c48:	ea4c 0c09 	orr.w	ip, ip, r9
 8012c4c:	f824 c00b 	strh.w	ip, [r4, fp]
 8012c50:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012c52:	f108 38ff 	add.w	r8, r8, #4294967295
 8012c56:	4401      	add	r1, r0
 8012c58:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012c5a:	4402      	add	r2, r0
 8012c5c:	e75e      	b.n	8012b1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8012c5e:	b005      	add	sp, #20
 8012c60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012c64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012c64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c68:	b085      	sub	sp, #20
 8012c6a:	4693      	mov	fp, r2
 8012c6c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012c70:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8012c72:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8012c74:	6870      	ldr	r0, [r6, #4]
 8012c76:	9101      	str	r1, [sp, #4]
 8012c78:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8012c7c:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8012c80:	fb00 2404 	mla	r4, r0, r4, r2
 8012c84:	6832      	ldr	r2, [r6, #0]
 8012c86:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012c8a:	682a      	ldr	r2, [r5, #0]
 8012c8c:	9202      	str	r2, [sp, #8]
 8012c8e:	9a01      	ldr	r2, [sp, #4]
 8012c90:	2a00      	cmp	r2, #0
 8012c92:	dc03      	bgt.n	8012c9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8012c94:	f1bb 0f00 	cmp.w	fp, #0
 8012c98:	f340 809a 	ble.w	8012dd0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8012c9c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012c9e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012ca2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8012ca6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012ca8:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8012cac:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012cb0:	2b00      	cmp	r3, #0
 8012cb2:	dd0c      	ble.n	8012cce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8012cb4:	1406      	asrs	r6, r0, #16
 8012cb6:	d405      	bmi.n	8012cc4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012cb8:	454e      	cmp	r6, r9
 8012cba:	da03      	bge.n	8012cc4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012cbc:	1416      	asrs	r6, r2, #16
 8012cbe:	d401      	bmi.n	8012cc4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012cc0:	4546      	cmp	r6, r8
 8012cc2:	db05      	blt.n	8012cd0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012cc4:	4470      	add	r0, lr
 8012cc6:	4462      	add	r2, ip
 8012cc8:	3b01      	subs	r3, #1
 8012cca:	3402      	adds	r4, #2
 8012ccc:	e7f0      	b.n	8012cb0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8012cce:	d00f      	beq.n	8012cf0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8012cd0:	1e5e      	subs	r6, r3, #1
 8012cd2:	fb0e 0706 	mla	r7, lr, r6, r0
 8012cd6:	143f      	asrs	r7, r7, #16
 8012cd8:	d541      	bpl.n	8012d5e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8012cda:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8012cde:	4698      	mov	r8, r3
 8012ce0:	9603      	str	r6, [sp, #12]
 8012ce2:	f1b8 0f00 	cmp.w	r8, #0
 8012ce6:	dc56      	bgt.n	8012d96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8012ce8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012cec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012cf0:	9b01      	ldr	r3, [sp, #4]
 8012cf2:	2b00      	cmp	r3, #0
 8012cf4:	dd6c      	ble.n	8012dd0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8012cf6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012cfa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012cfc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012d00:	eeb0 6a62 	vmov.f32	s12, s5
 8012d04:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012d08:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012d0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012d10:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8012d14:	eeb0 6a43 	vmov.f32	s12, s6
 8012d18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012d1c:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8012d20:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012d24:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012d28:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012d2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012d30:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012d34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012d38:	ee12 2a90 	vmov	r2, s5
 8012d3c:	eef0 2a47 	vmov.f32	s5, s14
 8012d40:	fb92 fef3 	sdiv	lr, r2, r3
 8012d44:	ee13 2a10 	vmov	r2, s6
 8012d48:	eeb0 3a67 	vmov.f32	s6, s15
 8012d4c:	fb92 fcf3 	sdiv	ip, r2, r3
 8012d50:	9b01      	ldr	r3, [sp, #4]
 8012d52:	3b01      	subs	r3, #1
 8012d54:	9301      	str	r3, [sp, #4]
 8012d56:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012d58:	bf08      	it	eq
 8012d5a:	465b      	moveq	r3, fp
 8012d5c:	e797      	b.n	8012c8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8012d5e:	454f      	cmp	r7, r9
 8012d60:	dabb      	bge.n	8012cda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012d62:	fb0c 2606 	mla	r6, ip, r6, r2
 8012d66:	1436      	asrs	r6, r6, #16
 8012d68:	d4b7      	bmi.n	8012cda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012d6a:	4546      	cmp	r6, r8
 8012d6c:	dab5      	bge.n	8012cda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012d6e:	461e      	mov	r6, r3
 8012d70:	46a0      	mov	r8, r4
 8012d72:	2e00      	cmp	r6, #0
 8012d74:	ddb8      	ble.n	8012ce8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012d76:	1417      	asrs	r7, r2, #16
 8012d78:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8012d7c:	ea4f 4920 	mov.w	r9, r0, asr #16
 8012d80:	9902      	ldr	r1, [sp, #8]
 8012d82:	4470      	add	r0, lr
 8012d84:	4462      	add	r2, ip
 8012d86:	fb0a 9707 	mla	r7, sl, r7, r9
 8012d8a:	3e01      	subs	r6, #1
 8012d8c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8012d90:	f828 7b02 	strh.w	r7, [r8], #2
 8012d94:	e7ed      	b.n	8012d72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8012d96:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012d9a:	d414      	bmi.n	8012dc6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012d9c:	68ae      	ldr	r6, [r5, #8]
 8012d9e:	454e      	cmp	r6, r9
 8012da0:	dd11      	ble.n	8012dc6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012da2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8012da6:	d40e      	bmi.n	8012dc6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012da8:	68ef      	ldr	r7, [r5, #12]
 8012daa:	4557      	cmp	r7, sl
 8012dac:	dd0b      	ble.n	8012dc6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012dae:	b236      	sxth	r6, r6
 8012db0:	f06f 0101 	mvn.w	r1, #1
 8012db4:	9f02      	ldr	r7, [sp, #8]
 8012db6:	fb0a 9606 	mla	r6, sl, r6, r9
 8012dba:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8012dbe:	fb01 f608 	mul.w	r6, r1, r8
 8012dc2:	9903      	ldr	r1, [sp, #12]
 8012dc4:	538f      	strh	r7, [r1, r6]
 8012dc6:	4470      	add	r0, lr
 8012dc8:	4462      	add	r2, ip
 8012dca:	f108 38ff 	add.w	r8, r8, #4294967295
 8012dce:	e788      	b.n	8012ce2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012dd0:	b005      	add	sp, #20
 8012dd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012dd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012dd6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012dda:	b087      	sub	sp, #28
 8012ddc:	468b      	mov	fp, r1
 8012dde:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012de2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8012de4:	9203      	str	r2, [sp, #12]
 8012de6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012dea:	6841      	ldr	r1, [r0, #4]
 8012dec:	9204      	str	r2, [sp, #16]
 8012dee:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8012df2:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8012df6:	fb01 2505 	mla	r5, r1, r5, r2
 8012dfa:	6802      	ldr	r2, [r0, #0]
 8012dfc:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8012e00:	f8d9 2000 	ldr.w	r2, [r9]
 8012e04:	9201      	str	r2, [sp, #4]
 8012e06:	f1bb 0f00 	cmp.w	fp, #0
 8012e0a:	dc03      	bgt.n	8012e14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012e0c:	9a03      	ldr	r2, [sp, #12]
 8012e0e:	2a00      	cmp	r2, #0
 8012e10:	f340 8158 	ble.w	80130c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8012e14:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012e16:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8012e1a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8012e1e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012e20:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8012e24:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012e28:	2b00      	cmp	r3, #0
 8012e2a:	dd0e      	ble.n	8012e4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012e2c:	1402      	asrs	r2, r0, #16
 8012e2e:	d405      	bmi.n	8012e3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012e30:	42ba      	cmp	r2, r7
 8012e32:	da03      	bge.n	8012e3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012e34:	140a      	asrs	r2, r1, #16
 8012e36:	d401      	bmi.n	8012e3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012e38:	42b2      	cmp	r2, r6
 8012e3a:	db07      	blt.n	8012e4c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012e3c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012e3e:	3b01      	subs	r3, #1
 8012e40:	3502      	adds	r5, #2
 8012e42:	4410      	add	r0, r2
 8012e44:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012e46:	4411      	add	r1, r2
 8012e48:	e7ee      	b.n	8012e28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012e4a:	d017      	beq.n	8012e7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012e4c:	1e5a      	subs	r2, r3, #1
 8012e4e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8012e50:	fb04 0402 	mla	r4, r4, r2, r0
 8012e54:	1424      	asrs	r4, r4, #16
 8012e56:	d409      	bmi.n	8012e6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012e58:	42bc      	cmp	r4, r7
 8012e5a:	da07      	bge.n	8012e6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012e5c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8012e5e:	fb04 1202 	mla	r2, r4, r2, r1
 8012e62:	1412      	asrs	r2, r2, #16
 8012e64:	d402      	bmi.n	8012e6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012e66:	42b2      	cmp	r2, r6
 8012e68:	f2c0 80bf 	blt.w	8012fea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012e6c:	2700      	movs	r7, #0
 8012e6e:	19da      	adds	r2, r3, r7
 8012e70:	2a00      	cmp	r2, #0
 8012e72:	dc3e      	bgt.n	8012ef2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012e74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012e78:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8012e7c:	f1bb 0f00 	cmp.w	fp, #0
 8012e80:	f340 8120 	ble.w	80130c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8012e84:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012e88:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012e8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012e8e:	f1bb 0b01 	subs.w	fp, fp, #1
 8012e92:	eeb0 6a62 	vmov.f32	s12, s5
 8012e96:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012e9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012e9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ea2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8012ea6:	eeb0 6a43 	vmov.f32	s12, s6
 8012eaa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012eae:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8012eb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012eb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012eba:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012ebe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012ec2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012ec6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012eca:	ee12 2a90 	vmov	r2, s5
 8012ece:	eef0 2a47 	vmov.f32	s5, s14
 8012ed2:	fb92 f3f3 	sdiv	r3, r2, r3
 8012ed6:	ee13 2a10 	vmov	r2, s6
 8012eda:	9313      	str	r3, [sp, #76]	@ 0x4c
 8012edc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012ede:	eeb0 3a67 	vmov.f32	s6, s15
 8012ee2:	fb92 f3f3 	sdiv	r3, r2, r3
 8012ee6:	9a03      	ldr	r2, [sp, #12]
 8012ee8:	9314      	str	r3, [sp, #80]	@ 0x50
 8012eea:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012eec:	bf08      	it	eq
 8012eee:	4613      	moveq	r3, r2
 8012ef0:	e789      	b.n	8012e06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012ef2:	1406      	asrs	r6, r0, #16
 8012ef4:	d42d      	bmi.n	8012f52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012ef6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8012efa:	42b4      	cmp	r4, r6
 8012efc:	dd29      	ble.n	8012f52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012efe:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8012f02:	d426      	bmi.n	8012f52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012f04:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8012f08:	4562      	cmp	r2, ip
 8012f0a:	dd22      	ble.n	8012f52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012f0c:	b224      	sxth	r4, r4
 8012f0e:	9a01      	ldr	r2, [sp, #4]
 8012f10:	fb0c 6404 	mla	r4, ip, r4, r6
 8012f14:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8012f18:	0e22      	lsrs	r2, r4, #24
 8012f1a:	d01a      	beq.n	8012f52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012f1c:	9e04      	ldr	r6, [sp, #16]
 8012f1e:	4372      	muls	r2, r6
 8012f20:	1c56      	adds	r6, r2, #1
 8012f22:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8012f26:	0a26      	lsrs	r6, r4, #8
 8012f28:	1212      	asrs	r2, r2, #8
 8012f2a:	9605      	str	r6, [sp, #20]
 8012f2c:	2aff      	cmp	r2, #255	@ 0xff
 8012f2e:	d116      	bne.n	8012f5e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8012f30:	f06f 0201 	mvn.w	r2, #1
 8012f34:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8012f38:	fb02 fc07 	mul.w	ip, r2, r7
 8012f3c:	0962      	lsrs	r2, r4, #5
 8012f3e:	f026 0607 	bic.w	r6, r6, #7
 8012f42:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012f46:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8012f4a:	4316      	orrs	r6, r2
 8012f4c:	4326      	orrs	r6, r4
 8012f4e:	f825 600c 	strh.w	r6, [r5, ip]
 8012f52:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012f54:	3f01      	subs	r7, #1
 8012f56:	4410      	add	r0, r2
 8012f58:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012f5a:	4411      	add	r1, r2
 8012f5c:	e787      	b.n	8012e6e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012f5e:	f06f 0601 	mvn.w	r6, #1
 8012f62:	fa1f fa82 	uxth.w	sl, r2
 8012f66:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8012f6a:	43d2      	mvns	r2, r2
 8012f6c:	437e      	muls	r6, r7
 8012f6e:	b2e4      	uxtb	r4, r4
 8012f70:	fb1c fc0a 	smulbb	ip, ip, sl
 8012f74:	b2d2      	uxtb	r2, r2
 8012f76:	f835 8006 	ldrh.w	r8, [r5, r6]
 8012f7a:	fb14 f40a 	smulbb	r4, r4, sl
 8012f7e:	9602      	str	r6, [sp, #8]
 8012f80:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8012f84:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8012f88:	fb16 f60a 	smulbb	r6, r6, sl
 8012f8c:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8012f90:	fb0e ce02 	mla	lr, lr, r2, ip
 8012f94:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8012f98:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012f9c:	fa1f fe8e 	uxth.w	lr, lr
 8012fa0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8012fa4:	fa5f f888 	uxtb.w	r8, r8
 8012fa8:	fb0c 6c02 	mla	ip, ip, r2, r6
 8012fac:	fb08 4402 	mla	r4, r8, r2, r4
 8012fb0:	f10e 0201 	add.w	r2, lr, #1
 8012fb4:	fa1f fc8c 	uxth.w	ip, ip
 8012fb8:	b2a4      	uxth	r4, r4
 8012fba:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8012fbe:	9a02      	ldr	r2, [sp, #8]
 8012fc0:	1c66      	adds	r6, r4, #1
 8012fc2:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8012fc6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8012fca:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012fce:	ea46 0e0e 	orr.w	lr, r6, lr
 8012fd2:	f10c 0601 	add.w	r6, ip, #1
 8012fd6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8012fda:	0976      	lsrs	r6, r6, #5
 8012fdc:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8012fe0:	ea4e 0e06 	orr.w	lr, lr, r6
 8012fe4:	f825 e002 	strh.w	lr, [r5, r2]
 8012fe8:	e7b3      	b.n	8012f52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012fea:	f04f 0800 	mov.w	r8, #0
 8012fee:	eba3 0208 	sub.w	r2, r3, r8
 8012ff2:	2a00      	cmp	r2, #0
 8012ff4:	f77f af3e 	ble.w	8012e74 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012ff8:	1404      	asrs	r4, r0, #16
 8012ffa:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8012ffe:	140a      	asrs	r2, r1, #16
 8013000:	fb06 4202 	mla	r2, r6, r2, r4
 8013004:	9c01      	ldr	r4, [sp, #4]
 8013006:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801300a:	0e22      	lsrs	r2, r4, #24
 801300c:	d015      	beq.n	801303a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801300e:	9e04      	ldr	r6, [sp, #16]
 8013010:	4372      	muls	r2, r6
 8013012:	1c56      	adds	r6, r2, #1
 8013014:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8013018:	0a26      	lsrs	r6, r4, #8
 801301a:	1212      	asrs	r2, r2, #8
 801301c:	2aff      	cmp	r2, #255	@ 0xff
 801301e:	d113      	bne.n	8013048 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8013020:	0962      	lsrs	r2, r4, #5
 8013022:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8013026:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801302a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801302e:	f026 0607 	bic.w	r6, r6, #7
 8013032:	4316      	orrs	r6, r2
 8013034:	4326      	orrs	r6, r4
 8013036:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801303a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801303c:	f108 0801 	add.w	r8, r8, #1
 8013040:	4410      	add	r0, r2
 8013042:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013044:	4411      	add	r1, r2
 8013046:	e7d2      	b.n	8012fee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8013048:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801304c:	fa1f fa82 	uxth.w	sl, r2
 8013050:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8013054:	43d2      	mvns	r2, r2
 8013056:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801305a:	fb17 f70a 	smulbb	r7, r7, sl
 801305e:	b2d2      	uxtb	r2, r2
 8013060:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013064:	b2e4      	uxtb	r4, r4
 8013066:	b2f6      	uxtb	r6, r6
 8013068:	fb0c 7c02 	mla	ip, ip, r2, r7
 801306c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8013070:	fb14 f40a 	smulbb	r4, r4, sl
 8013074:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013078:	fa1f fc8c 	uxth.w	ip, ip
 801307c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013080:	fb16 f60a 	smulbb	r6, r6, sl
 8013084:	fa5f fe8e 	uxtb.w	lr, lr
 8013088:	fb0e 4402 	mla	r4, lr, r2, r4
 801308c:	fb07 6702 	mla	r7, r7, r2, r6
 8013090:	f10c 0201 	add.w	r2, ip, #1
 8013094:	b2a4      	uxth	r4, r4
 8013096:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801309a:	1c66      	adds	r6, r4, #1
 801309c:	b2bf      	uxth	r7, r7
 801309e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80130a2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80130a6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80130aa:	ea46 0c0c 	orr.w	ip, r6, ip
 80130ae:	1c7e      	adds	r6, r7, #1
 80130b0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80130b4:	0976      	lsrs	r6, r6, #5
 80130b6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80130ba:	ea4c 0c06 	orr.w	ip, ip, r6
 80130be:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80130c2:	e7ba      	b.n	801303a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80130c4:	b007      	add	sp, #28
 80130c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080130cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80130cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130d0:	b085      	sub	sp, #20
 80130d2:	468b      	mov	fp, r1
 80130d4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80130d8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80130da:	9203      	str	r2, [sp, #12]
 80130dc:	6841      	ldr	r1, [r0, #4]
 80130de:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80130e2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80130e6:	fb01 2404 	mla	r4, r1, r4, r2
 80130ea:	6802      	ldr	r2, [r0, #0]
 80130ec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80130f0:	f8d8 2000 	ldr.w	r2, [r8]
 80130f4:	9201      	str	r2, [sp, #4]
 80130f6:	f1bb 0f00 	cmp.w	fp, #0
 80130fa:	dc03      	bgt.n	8013104 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80130fc:	9a03      	ldr	r2, [sp, #12]
 80130fe:	2a00      	cmp	r2, #0
 8013100:	f340 814f 	ble.w	80133a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8013104:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013106:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801310a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801310e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013110:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8013114:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013118:	2b00      	cmp	r3, #0
 801311a:	dd0e      	ble.n	801313a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801311c:	1408      	asrs	r0, r1, #16
 801311e:	d405      	bmi.n	801312c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013120:	42b8      	cmp	r0, r7
 8013122:	da03      	bge.n	801312c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013124:	1410      	asrs	r0, r2, #16
 8013126:	d401      	bmi.n	801312c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013128:	42b0      	cmp	r0, r6
 801312a:	db07      	blt.n	801313c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801312c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801312e:	3b01      	subs	r3, #1
 8013130:	3402      	adds	r4, #2
 8013132:	4401      	add	r1, r0
 8013134:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013136:	4402      	add	r2, r0
 8013138:	e7ee      	b.n	8013118 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801313a:	d017      	beq.n	801316c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801313c:	1e58      	subs	r0, r3, #1
 801313e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013140:	fb05 1500 	mla	r5, r5, r0, r1
 8013144:	142d      	asrs	r5, r5, #16
 8013146:	d409      	bmi.n	801315c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8013148:	42bd      	cmp	r5, r7
 801314a:	da07      	bge.n	801315c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801314c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801314e:	fb05 2000 	mla	r0, r5, r0, r2
 8013152:	1400      	asrs	r0, r0, #16
 8013154:	d402      	bmi.n	801315c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8013156:	42b0      	cmp	r0, r6
 8013158:	f2c0 80ba 	blt.w	80132d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801315c:	2600      	movs	r6, #0
 801315e:	1998      	adds	r0, r3, r6
 8013160:	2800      	cmp	r0, #0
 8013162:	dc3e      	bgt.n	80131e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8013164:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013168:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801316c:	f1bb 0f00 	cmp.w	fp, #0
 8013170:	f340 8117 	ble.w	80133a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8013174:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013178:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801317a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801317e:	f1bb 0b01 	subs.w	fp, fp, #1
 8013182:	eeb0 6a62 	vmov.f32	s12, s5
 8013186:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801318a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801318e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013192:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013196:	eeb0 6a43 	vmov.f32	s12, s6
 801319a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801319e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80131a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80131a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80131aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80131ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80131b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80131b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80131ba:	ee12 2a90 	vmov	r2, s5
 80131be:	eef0 2a47 	vmov.f32	s5, s14
 80131c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80131c6:	ee13 2a10 	vmov	r2, s6
 80131ca:	9311      	str	r3, [sp, #68]	@ 0x44
 80131cc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80131ce:	eeb0 3a67 	vmov.f32	s6, s15
 80131d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80131d6:	9a03      	ldr	r2, [sp, #12]
 80131d8:	9312      	str	r3, [sp, #72]	@ 0x48
 80131da:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80131dc:	bf08      	it	eq
 80131de:	4613      	moveq	r3, r2
 80131e0:	e789      	b.n	80130f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80131e2:	140f      	asrs	r7, r1, #16
 80131e4:	d424      	bmi.n	8013230 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80131e6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80131ea:	42bd      	cmp	r5, r7
 80131ec:	dd20      	ble.n	8013230 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80131ee:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80131f2:	d41d      	bmi.n	8013230 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80131f4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80131f8:	4560      	cmp	r0, ip
 80131fa:	dd19      	ble.n	8013230 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80131fc:	b22d      	sxth	r5, r5
 80131fe:	9801      	ldr	r0, [sp, #4]
 8013200:	fb0c 7505 	mla	r5, ip, r5, r7
 8013204:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8013208:	0e07      	lsrs	r7, r0, #24
 801320a:	2fff      	cmp	r7, #255	@ 0xff
 801320c:	d116      	bne.n	801323c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801320e:	f06f 0501 	mvn.w	r5, #1
 8013212:	fb05 f706 	mul.w	r7, r5, r6
 8013216:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801321a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801321e:	0945      	lsrs	r5, r0, #5
 8013220:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013224:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013228:	ea4c 0505 	orr.w	r5, ip, r5
 801322c:	4305      	orrs	r5, r0
 801322e:	53e5      	strh	r5, [r4, r7]
 8013230:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013232:	3e01      	subs	r6, #1
 8013234:	4401      	add	r1, r0
 8013236:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013238:	4402      	add	r2, r0
 801323a:	e790      	b.n	801315e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801323c:	b2fd      	uxtb	r5, r7
 801323e:	2f00      	cmp	r7, #0
 8013240:	d0f6      	beq.n	8013230 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013242:	f06f 0701 	mvn.w	r7, #1
 8013246:	fa1f f985 	uxth.w	r9, r5
 801324a:	43ed      	mvns	r5, r5
 801324c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8013250:	4377      	muls	r7, r6
 8013252:	fb1a fa09 	smulbb	sl, sl, r9
 8013256:	b2ed      	uxtb	r5, r5
 8013258:	f834 e007 	ldrh.w	lr, [r4, r7]
 801325c:	9702      	str	r7, [sp, #8]
 801325e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8013262:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013266:	fb17 f709 	smulbb	r7, r7, r9
 801326a:	b2c0      	uxtb	r0, r0
 801326c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013270:	fb10 f009 	smulbb	r0, r0, r9
 8013274:	fb0c 7c05 	mla	ip, ip, r5, r7
 8013278:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801327c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013280:	fa1f fc8c 	uxth.w	ip, ip
 8013284:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013288:	fa5f fe8e 	uxtb.w	lr, lr
 801328c:	fb07 a705 	mla	r7, r7, r5, sl
 8013290:	fb0e 0005 	mla	r0, lr, r5, r0
 8013294:	f10c 0501 	add.w	r5, ip, #1
 8013298:	b2bf      	uxth	r7, r7
 801329a:	b280      	uxth	r0, r0
 801329c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80132a0:	f100 0a01 	add.w	sl, r0, #1
 80132a4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80132a8:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80132ac:	9802      	ldr	r0, [sp, #8]
 80132ae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80132b2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80132b6:	f107 0a01 	add.w	sl, r7, #1
 80132ba:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80132be:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80132c2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80132c6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80132ca:	f824 c000 	strh.w	ip, [r4, r0]
 80132ce:	e7af      	b.n	8013230 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80132d0:	f04f 0e00 	mov.w	lr, #0
 80132d4:	eba3 000e 	sub.w	r0, r3, lr
 80132d8:	2800      	cmp	r0, #0
 80132da:	f77f af43 	ble.w	8013164 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80132de:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80132e2:	140d      	asrs	r5, r1, #16
 80132e4:	1410      	asrs	r0, r2, #16
 80132e6:	fb06 5000 	mla	r0, r6, r0, r5
 80132ea:	9d01      	ldr	r5, [sp, #4]
 80132ec:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80132f0:	0e2e      	lsrs	r6, r5, #24
 80132f2:	2eff      	cmp	r6, #255	@ 0xff
 80132f4:	d112      	bne.n	801331c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80132f6:	482c      	ldr	r0, [pc, #176]	@ (80133a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80132f8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80132fc:	0968      	lsrs	r0, r5, #5
 80132fe:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013302:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013306:	4330      	orrs	r0, r6
 8013308:	4328      	orrs	r0, r5
 801330a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801330e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013310:	f10e 0e01 	add.w	lr, lr, #1
 8013314:	4401      	add	r1, r0
 8013316:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013318:	4402      	add	r2, r0
 801331a:	e7db      	b.n	80132d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801331c:	b2f0      	uxtb	r0, r6
 801331e:	2e00      	cmp	r6, #0
 8013320:	d0f5      	beq.n	801330e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8013322:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8013326:	fa1f f980 	uxth.w	r9, r0
 801332a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801332e:	43c0      	mvns	r0, r0
 8013330:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013334:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013338:	fb16 f609 	smulbb	r6, r6, r9
 801333c:	b2c0      	uxtb	r0, r0
 801333e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013342:	b2ed      	uxtb	r5, r5
 8013344:	fb1a fa09 	smulbb	sl, sl, r9
 8013348:	fb07 6700 	mla	r7, r7, r0, r6
 801334c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013350:	fb15 f509 	smulbb	r5, r5, r9
 8013354:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013358:	b2bf      	uxth	r7, r7
 801335a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801335e:	fa5f fc8c 	uxtb.w	ip, ip
 8013362:	fb06 a600 	mla	r6, r6, r0, sl
 8013366:	fb0c 5500 	mla	r5, ip, r0, r5
 801336a:	1c78      	adds	r0, r7, #1
 801336c:	b2b6      	uxth	r6, r6
 801336e:	b2ad      	uxth	r5, r5
 8013370:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8013374:	f105 0a01 	add.w	sl, r5, #1
 8013378:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801337c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013380:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013384:	ea4a 0707 	orr.w	r7, sl, r7
 8013388:	f106 0a01 	add.w	sl, r6, #1
 801338c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013390:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013394:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013398:	ea47 070a 	orr.w	r7, r7, sl
 801339c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80133a0:	e7b5      	b.n	801330e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80133a2:	b005      	add	sp, #20
 80133a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133a8:	fffff800 	.word	0xfffff800

080133ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80133ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133b0:	b087      	sub	sp, #28
 80133b2:	468b      	mov	fp, r1
 80133b4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80133b8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80133ba:	9203      	str	r2, [sp, #12]
 80133bc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80133c0:	6841      	ldr	r1, [r0, #4]
 80133c2:	9204      	str	r2, [sp, #16]
 80133c4:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 80133c8:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80133cc:	fb01 2404 	mla	r4, r1, r4, r2
 80133d0:	6802      	ldr	r2, [r0, #0]
 80133d2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80133d6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80133da:	3201      	adds	r2, #1
 80133dc:	f022 0201 	bic.w	r2, r2, #1
 80133e0:	9200      	str	r2, [sp, #0]
 80133e2:	f8d9 2000 	ldr.w	r2, [r9]
 80133e6:	9201      	str	r2, [sp, #4]
 80133e8:	f1bb 0f00 	cmp.w	fp, #0
 80133ec:	dc03      	bgt.n	80133f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80133ee:	9a03      	ldr	r2, [sp, #12]
 80133f0:	2a00      	cmp	r2, #0
 80133f2:	f340 816a 	ble.w	80136ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80133f6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80133f8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80133fc:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013400:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013402:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8013406:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801340a:	2b00      	cmp	r3, #0
 801340c:	dd0e      	ble.n	801342c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801340e:	1402      	asrs	r2, r0, #16
 8013410:	d405      	bmi.n	801341e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013412:	42ba      	cmp	r2, r7
 8013414:	da03      	bge.n	801341e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013416:	140a      	asrs	r2, r1, #16
 8013418:	d401      	bmi.n	801341e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801341a:	42b2      	cmp	r2, r6
 801341c:	db07      	blt.n	801342e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801341e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013420:	3b01      	subs	r3, #1
 8013422:	3402      	adds	r4, #2
 8013424:	4410      	add	r0, r2
 8013426:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013428:	4411      	add	r1, r2
 801342a:	e7ee      	b.n	801340a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801342c:	d017      	beq.n	801345e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801342e:	1e5a      	subs	r2, r3, #1
 8013430:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013432:	fb05 0502 	mla	r5, r5, r2, r0
 8013436:	142d      	asrs	r5, r5, #16
 8013438:	d409      	bmi.n	801344e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801343a:	42bd      	cmp	r5, r7
 801343c:	da07      	bge.n	801344e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801343e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013440:	fb05 1202 	mla	r2, r5, r2, r1
 8013444:	1412      	asrs	r2, r2, #16
 8013446:	d402      	bmi.n	801344e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013448:	42b2      	cmp	r2, r6
 801344a:	f2c0 80c8 	blt.w	80135de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801344e:	2700      	movs	r7, #0
 8013450:	19da      	adds	r2, r3, r7
 8013452:	2a00      	cmp	r2, #0
 8013454:	dc3e      	bgt.n	80134d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013456:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801345a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801345e:	f1bb 0f00 	cmp.w	fp, #0
 8013462:	f340 8132 	ble.w	80136ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8013466:	ee30 0a04 	vadd.f32	s0, s0, s8
 801346a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801346c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013470:	f1bb 0b01 	subs.w	fp, fp, #1
 8013474:	eeb0 6a62 	vmov.f32	s12, s5
 8013478:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801347c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013480:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013484:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013488:	eeb0 6a43 	vmov.f32	s12, s6
 801348c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013490:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013494:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013498:	ee61 7a27 	vmul.f32	s15, s2, s15
 801349c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80134a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80134a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80134a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80134ac:	ee12 2a90 	vmov	r2, s5
 80134b0:	eef0 2a47 	vmov.f32	s5, s14
 80134b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80134b8:	ee13 2a10 	vmov	r2, s6
 80134bc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80134be:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80134c0:	eeb0 3a67 	vmov.f32	s6, s15
 80134c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80134c8:	9a03      	ldr	r2, [sp, #12]
 80134ca:	9314      	str	r3, [sp, #80]	@ 0x50
 80134cc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80134ce:	bf08      	it	eq
 80134d0:	4613      	moveq	r3, r2
 80134d2:	e789      	b.n	80133e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80134d4:	1405      	asrs	r5, r0, #16
 80134d6:	d436      	bmi.n	8013546 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80134d8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80134dc:	42aa      	cmp	r2, r5
 80134de:	dd32      	ble.n	8013546 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80134e0:	140e      	asrs	r6, r1, #16
 80134e2:	d430      	bmi.n	8013546 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80134e4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80134e8:	42b2      	cmp	r2, r6
 80134ea:	dd2c      	ble.n	8013546 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80134ec:	9a00      	ldr	r2, [sp, #0]
 80134ee:	fb06 5502 	mla	r5, r6, r2, r5
 80134f2:	9e01      	ldr	r6, [sp, #4]
 80134f4:	086a      	lsrs	r2, r5, #1
 80134f6:	5cb2      	ldrb	r2, [r6, r2]
 80134f8:	07ee      	lsls	r6, r5, #31
 80134fa:	bf54      	ite	pl
 80134fc:	f002 020f 	andpl.w	r2, r2, #15
 8013500:	1112      	asrmi	r2, r2, #4
 8013502:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013506:	b2d2      	uxtb	r2, r2
 8013508:	b1ea      	cbz	r2, 8013546 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801350a:	9d04      	ldr	r5, [sp, #16]
 801350c:	436a      	muls	r2, r5
 801350e:	1c55      	adds	r5, r2, #1
 8013510:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8013514:	4d6e      	ldr	r5, [pc, #440]	@ (80136d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8013516:	1212      	asrs	r2, r2, #8
 8013518:	682d      	ldr	r5, [r5, #0]
 801351a:	2aff      	cmp	r2, #255	@ 0xff
 801351c:	ea4f 2615 	mov.w	r6, r5, lsr #8
 8013520:	9605      	str	r6, [sp, #20]
 8013522:	d116      	bne.n	8013552 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8013524:	f06f 0201 	mvn.w	r2, #1
 8013528:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801352c:	fb02 fc07 	mul.w	ip, r2, r7
 8013530:	096a      	lsrs	r2, r5, #5
 8013532:	f026 0607 	bic.w	r6, r6, #7
 8013536:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801353a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801353e:	4316      	orrs	r6, r2
 8013540:	432e      	orrs	r6, r5
 8013542:	f824 600c 	strh.w	r6, [r4, ip]
 8013546:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013548:	3f01      	subs	r7, #1
 801354a:	4410      	add	r0, r2
 801354c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801354e:	4411      	add	r1, r2
 8013550:	e77e      	b.n	8013450 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8013552:	f06f 0601 	mvn.w	r6, #1
 8013556:	fa1f fa82 	uxth.w	sl, r2
 801355a:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801355e:	43d2      	mvns	r2, r2
 8013560:	437e      	muls	r6, r7
 8013562:	b2ed      	uxtb	r5, r5
 8013564:	fb1c fc0a 	smulbb	ip, ip, sl
 8013568:	b2d2      	uxtb	r2, r2
 801356a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801356e:	fb15 f50a 	smulbb	r5, r5, sl
 8013572:	9602      	str	r6, [sp, #8]
 8013574:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8013578:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801357c:	fb16 f60a 	smulbb	r6, r6, sl
 8013580:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8013584:	fb0e ce02 	mla	lr, lr, r2, ip
 8013588:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801358c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013590:	fa1f fe8e 	uxth.w	lr, lr
 8013594:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8013598:	fa5f f888 	uxtb.w	r8, r8
 801359c:	fb0c 6c02 	mla	ip, ip, r2, r6
 80135a0:	fb08 5502 	mla	r5, r8, r2, r5
 80135a4:	f10e 0201 	add.w	r2, lr, #1
 80135a8:	fa1f fc8c 	uxth.w	ip, ip
 80135ac:	b2ad      	uxth	r5, r5
 80135ae:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80135b2:	9a02      	ldr	r2, [sp, #8]
 80135b4:	1c6e      	adds	r6, r5, #1
 80135b6:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80135ba:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 80135be:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80135c2:	ea46 0e0e 	orr.w	lr, r6, lr
 80135c6:	f10c 0601 	add.w	r6, ip, #1
 80135ca:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80135ce:	0976      	lsrs	r6, r6, #5
 80135d0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80135d4:	ea4e 0e06 	orr.w	lr, lr, r6
 80135d8:	f824 e002 	strh.w	lr, [r4, r2]
 80135dc:	e7b3      	b.n	8013546 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80135de:	f04f 0800 	mov.w	r8, #0
 80135e2:	eba3 0208 	sub.w	r2, r3, r8
 80135e6:	2a00      	cmp	r2, #0
 80135e8:	f77f af35 	ble.w	8013456 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80135ec:	1402      	asrs	r2, r0, #16
 80135ee:	9e00      	ldr	r6, [sp, #0]
 80135f0:	140d      	asrs	r5, r1, #16
 80135f2:	fb06 2505 	mla	r5, r6, r5, r2
 80135f6:	9e01      	ldr	r6, [sp, #4]
 80135f8:	086a      	lsrs	r2, r5, #1
 80135fa:	07ed      	lsls	r5, r5, #31
 80135fc:	5cb2      	ldrb	r2, [r6, r2]
 80135fe:	bf54      	ite	pl
 8013600:	f002 020f 	andpl.w	r2, r2, #15
 8013604:	1112      	asrmi	r2, r2, #4
 8013606:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801360a:	b2d2      	uxtb	r2, r2
 801360c:	b1c2      	cbz	r2, 8013640 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801360e:	9d04      	ldr	r5, [sp, #16]
 8013610:	436a      	muls	r2, r5
 8013612:	1c55      	adds	r5, r2, #1
 8013614:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8013618:	4d2d      	ldr	r5, [pc, #180]	@ (80136d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801361a:	1212      	asrs	r2, r2, #8
 801361c:	682e      	ldr	r6, [r5, #0]
 801361e:	2aff      	cmp	r2, #255	@ 0xff
 8013620:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8013624:	d113      	bne.n	801364e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013626:	0972      	lsrs	r2, r6, #5
 8013628:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801362c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8013630:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8013634:	f025 0507 	bic.w	r5, r5, #7
 8013638:	4315      	orrs	r5, r2
 801363a:	4335      	orrs	r5, r6
 801363c:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8013640:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013642:	f108 0801 	add.w	r8, r8, #1
 8013646:	4410      	add	r0, r2
 8013648:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801364a:	4411      	add	r1, r2
 801364c:	e7c9      	b.n	80135e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801364e:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013652:	fa1f fa82 	uxth.w	sl, r2
 8013656:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801365a:	43d2      	mvns	r2, r2
 801365c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013660:	fb17 f70a 	smulbb	r7, r7, sl
 8013664:	b2d2      	uxtb	r2, r2
 8013666:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801366a:	b2f6      	uxtb	r6, r6
 801366c:	b2ed      	uxtb	r5, r5
 801366e:	fb0c 7c02 	mla	ip, ip, r2, r7
 8013672:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8013676:	fb16 f60a 	smulbb	r6, r6, sl
 801367a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801367e:	fa1f fc8c 	uxth.w	ip, ip
 8013682:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013686:	fb15 f50a 	smulbb	r5, r5, sl
 801368a:	fa5f fe8e 	uxtb.w	lr, lr
 801368e:	fb0e 6602 	mla	r6, lr, r2, r6
 8013692:	fb07 5702 	mla	r7, r7, r2, r5
 8013696:	f10c 0201 	add.w	r2, ip, #1
 801369a:	b2b6      	uxth	r6, r6
 801369c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80136a0:	1c75      	adds	r5, r6, #1
 80136a2:	b2bf      	uxth	r7, r7
 80136a4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80136a8:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80136ac:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80136b0:	ea45 0c0c 	orr.w	ip, r5, ip
 80136b4:	1c7d      	adds	r5, r7, #1
 80136b6:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 80136ba:	096d      	lsrs	r5, r5, #5
 80136bc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80136c0:	ea4c 0c05 	orr.w	ip, ip, r5
 80136c4:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 80136c8:	e7ba      	b.n	8013640 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80136ca:	b007      	add	sp, #28
 80136cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80136d0:	200150b4 	.word	0x200150b4

080136d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80136d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136d8:	b087      	sub	sp, #28
 80136da:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80136de:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 80139e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80136e2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80136e4:	9101      	str	r1, [sp, #4]
 80136e6:	9205      	str	r2, [sp, #20]
 80136e8:	6841      	ldr	r1, [r0, #4]
 80136ea:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 80136ee:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80136f2:	fb01 2404 	mla	r4, r1, r4, r2
 80136f6:	6802      	ldr	r2, [r0, #0]
 80136f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80136fc:	f8db 2008 	ldr.w	r2, [fp, #8]
 8013700:	3201      	adds	r2, #1
 8013702:	f022 0201 	bic.w	r2, r2, #1
 8013706:	9202      	str	r2, [sp, #8]
 8013708:	f8db 2000 	ldr.w	r2, [fp]
 801370c:	9203      	str	r2, [sp, #12]
 801370e:	9a01      	ldr	r2, [sp, #4]
 8013710:	2a00      	cmp	r2, #0
 8013712:	dc03      	bgt.n	801371c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013714:	9a05      	ldr	r2, [sp, #20]
 8013716:	2a00      	cmp	r2, #0
 8013718:	f340 8162 	ble.w	80139e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801371c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801371e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8013722:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013726:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013728:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801372c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013730:	2b00      	cmp	r3, #0
 8013732:	dd0e      	ble.n	8013752 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013734:	1402      	asrs	r2, r0, #16
 8013736:	d405      	bmi.n	8013744 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013738:	42ba      	cmp	r2, r7
 801373a:	da03      	bge.n	8013744 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801373c:	140a      	asrs	r2, r1, #16
 801373e:	d401      	bmi.n	8013744 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013740:	42b2      	cmp	r2, r6
 8013742:	db07      	blt.n	8013754 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013744:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013746:	3b01      	subs	r3, #1
 8013748:	3402      	adds	r4, #2
 801374a:	4410      	add	r0, r2
 801374c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801374e:	4411      	add	r1, r2
 8013750:	e7ee      	b.n	8013730 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013752:	d017      	beq.n	8013784 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013754:	1e5a      	subs	r2, r3, #1
 8013756:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013758:	fb05 0502 	mla	r5, r5, r2, r0
 801375c:	142d      	asrs	r5, r5, #16
 801375e:	d409      	bmi.n	8013774 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013760:	42bd      	cmp	r5, r7
 8013762:	da07      	bge.n	8013774 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013764:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013766:	fb05 1202 	mla	r2, r5, r2, r1
 801376a:	1412      	asrs	r2, r2, #16
 801376c:	d402      	bmi.n	8013774 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801376e:	42b2      	cmp	r2, r6
 8013770:	f2c0 80c3 	blt.w	80138fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8013774:	2500      	movs	r5, #0
 8013776:	195a      	adds	r2, r3, r5
 8013778:	2a00      	cmp	r2, #0
 801377a:	dc3f      	bgt.n	80137fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801377c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013780:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013784:	9b01      	ldr	r3, [sp, #4]
 8013786:	2b00      	cmp	r3, #0
 8013788:	f340 812a 	ble.w	80139e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801378c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013790:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013792:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013796:	eeb0 6a62 	vmov.f32	s12, s5
 801379a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801379e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80137a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80137a6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80137aa:	eeb0 6a43 	vmov.f32	s12, s6
 80137ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80137b2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80137b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80137ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80137be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80137c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80137c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80137ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80137ce:	ee12 2a90 	vmov	r2, s5
 80137d2:	eef0 2a47 	vmov.f32	s5, s14
 80137d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80137da:	ee13 2a10 	vmov	r2, s6
 80137de:	9313      	str	r3, [sp, #76]	@ 0x4c
 80137e0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80137e2:	eeb0 3a67 	vmov.f32	s6, s15
 80137e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80137ea:	9314      	str	r3, [sp, #80]	@ 0x50
 80137ec:	9b01      	ldr	r3, [sp, #4]
 80137ee:	9a05      	ldr	r2, [sp, #20]
 80137f0:	3b01      	subs	r3, #1
 80137f2:	9301      	str	r3, [sp, #4]
 80137f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80137f6:	bf08      	it	eq
 80137f8:	4613      	moveq	r3, r2
 80137fa:	e788      	b.n	801370e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80137fc:	1406      	asrs	r6, r0, #16
 80137fe:	d42c      	bmi.n	801385a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013800:	f8db 2008 	ldr.w	r2, [fp, #8]
 8013804:	42b2      	cmp	r2, r6
 8013806:	dd28      	ble.n	801385a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013808:	140f      	asrs	r7, r1, #16
 801380a:	d426      	bmi.n	801385a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801380c:	f8db 200c 	ldr.w	r2, [fp, #12]
 8013810:	42ba      	cmp	r2, r7
 8013812:	dd22      	ble.n	801385a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013814:	9a02      	ldr	r2, [sp, #8]
 8013816:	fb07 6602 	mla	r6, r7, r2, r6
 801381a:	9f03      	ldr	r7, [sp, #12]
 801381c:	0872      	lsrs	r2, r6, #1
 801381e:	07f6      	lsls	r6, r6, #31
 8013820:	5cba      	ldrb	r2, [r7, r2]
 8013822:	bf54      	ite	pl
 8013824:	f002 020f 	andpl.w	r2, r2, #15
 8013828:	1112      	asrmi	r2, r2, #4
 801382a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801382e:	b2d2      	uxtb	r2, r2
 8013830:	2aff      	cmp	r2, #255	@ 0xff
 8013832:	d118      	bne.n	8013866 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8013834:	f06f 0601 	mvn.w	r6, #1
 8013838:	f8d8 2000 	ldr.w	r2, [r8]
 801383c:	fb06 f705 	mul.w	r7, r6, r5
 8013840:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8013844:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8013848:	0956      	lsrs	r6, r2, #5
 801384a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801384e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013852:	ea4c 0606 	orr.w	r6, ip, r6
 8013856:	4316      	orrs	r6, r2
 8013858:	53e6      	strh	r6, [r4, r7]
 801385a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801385c:	3d01      	subs	r5, #1
 801385e:	4410      	add	r0, r2
 8013860:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013862:	4411      	add	r1, r2
 8013864:	e787      	b.n	8013776 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013866:	2a00      	cmp	r2, #0
 8013868:	d0f7      	beq.n	801385a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801386a:	f06f 0601 	mvn.w	r6, #1
 801386e:	f8d8 c000 	ldr.w	ip, [r8]
 8013872:	fa1f f982 	uxth.w	r9, r2
 8013876:	43d2      	mvns	r2, r2
 8013878:	436e      	muls	r6, r5
 801387a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801387e:	b2d2      	uxtb	r2, r2
 8013880:	f834 e006 	ldrh.w	lr, [r4, r6]
 8013884:	fb1a fa09 	smulbb	sl, sl, r9
 8013888:	9604      	str	r6, [sp, #16]
 801388a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801388e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013892:	fb16 f609 	smulbb	r6, r6, r9
 8013896:	fa5f fc8c 	uxtb.w	ip, ip
 801389a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801389e:	fb1c fc09 	smulbb	ip, ip, r9
 80138a2:	fb07 6702 	mla	r7, r7, r2, r6
 80138a6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80138aa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80138ae:	b2bf      	uxth	r7, r7
 80138b0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80138b4:	fa5f fe8e 	uxtb.w	lr, lr
 80138b8:	fb06 a602 	mla	r6, r6, r2, sl
 80138bc:	fb0e cc02 	mla	ip, lr, r2, ip
 80138c0:	1c7a      	adds	r2, r7, #1
 80138c2:	b2b6      	uxth	r6, r6
 80138c4:	fa1f fc8c 	uxth.w	ip, ip
 80138c8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80138cc:	9a04      	ldr	r2, [sp, #16]
 80138ce:	f10c 0a01 	add.w	sl, ip, #1
 80138d2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80138d6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80138da:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80138de:	ea4a 0707 	orr.w	r7, sl, r7
 80138e2:	f106 0a01 	add.w	sl, r6, #1
 80138e6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80138ea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80138ee:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80138f2:	ea47 070a 	orr.w	r7, r7, sl
 80138f6:	52a7      	strh	r7, [r4, r2]
 80138f8:	e7af      	b.n	801385a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80138fa:	f04f 0e00 	mov.w	lr, #0
 80138fe:	eba3 020e 	sub.w	r2, r3, lr
 8013902:	2a00      	cmp	r2, #0
 8013904:	f77f af3a 	ble.w	801377c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013908:	1402      	asrs	r2, r0, #16
 801390a:	9e02      	ldr	r6, [sp, #8]
 801390c:	140d      	asrs	r5, r1, #16
 801390e:	fb06 2505 	mla	r5, r6, r5, r2
 8013912:	9e03      	ldr	r6, [sp, #12]
 8013914:	086a      	lsrs	r2, r5, #1
 8013916:	07ed      	lsls	r5, r5, #31
 8013918:	5cb2      	ldrb	r2, [r6, r2]
 801391a:	bf54      	ite	pl
 801391c:	f002 020f 	andpl.w	r2, r2, #15
 8013920:	1112      	asrmi	r2, r2, #4
 8013922:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013926:	b2d2      	uxtb	r2, r2
 8013928:	2aff      	cmp	r2, #255	@ 0xff
 801392a:	d115      	bne.n	8013958 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801392c:	f8d8 5000 	ldr.w	r5, [r8]
 8013930:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8013934:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8013938:	096a      	lsrs	r2, r5, #5
 801393a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801393e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8013942:	4332      	orrs	r2, r6
 8013944:	432a      	orrs	r2, r5
 8013946:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801394a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801394c:	f10e 0e01 	add.w	lr, lr, #1
 8013950:	4410      	add	r0, r2
 8013952:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013954:	4411      	add	r1, r2
 8013956:	e7d2      	b.n	80138fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8013958:	2a00      	cmp	r2, #0
 801395a:	d0f6      	beq.n	801394a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801395c:	f8d8 7000 	ldr.w	r7, [r8]
 8013960:	fa1f f982 	uxth.w	r9, r2
 8013964:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8013968:	43d2      	mvns	r2, r2
 801396a:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801396e:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8013972:	ea4f 262c 	mov.w	r6, ip, asr #8
 8013976:	fb15 f509 	smulbb	r5, r5, r9
 801397a:	b2d2      	uxtb	r2, r2
 801397c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013980:	b2ff      	uxtb	r7, r7
 8013982:	fb1a fa09 	smulbb	sl, sl, r9
 8013986:	fb06 5602 	mla	r6, r6, r2, r5
 801398a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801398e:	fb17 f709 	smulbb	r7, r7, r9
 8013992:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013996:	b2b6      	uxth	r6, r6
 8013998:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801399c:	fa5f fc8c 	uxtb.w	ip, ip
 80139a0:	fb05 a502 	mla	r5, r5, r2, sl
 80139a4:	fb0c 7702 	mla	r7, ip, r2, r7
 80139a8:	1c72      	adds	r2, r6, #1
 80139aa:	b2ad      	uxth	r5, r5
 80139ac:	b2bf      	uxth	r7, r7
 80139ae:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80139b2:	f107 0a01 	add.w	sl, r7, #1
 80139b6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80139ba:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80139be:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80139c2:	ea4a 0606 	orr.w	r6, sl, r6
 80139c6:	f105 0a01 	add.w	sl, r5, #1
 80139ca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80139ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80139d2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80139d6:	ea46 060a 	orr.w	r6, r6, sl
 80139da:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80139de:	e7b4      	b.n	801394a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80139e0:	b007      	add	sp, #28
 80139e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80139e6:	bf00      	nop
 80139e8:	200150b4 	.word	0x200150b4

080139ec <_ZN8touchgfx8LCD16bppD1Ev>:
 80139ec:	4770      	bx	lr

080139ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 80139ee:	4770      	bx	lr

080139f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 80139f0:	4770      	bx	lr

080139f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 80139f2:	4770      	bx	lr

080139f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80139f4:	4770      	bx	lr

080139f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80139f6:	4770      	bx	lr

080139f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80139f8:	4770      	bx	lr

080139fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80139fa:	4770      	bx	lr

080139fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80139fc:	4770      	bx	lr

080139fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80139fe:	4770      	bx	lr

08013a00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8013a00:	4770      	bx	lr

08013a02 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013a02:	4770      	bx	lr

08013a04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013a04:	4770      	bx	lr

08013a06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8013a06:	4770      	bx	lr

08013a08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8013a08:	4770      	bx	lr

08013a0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013a0a:	4770      	bx	lr

08013a0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8013a0c:	4770      	bx	lr

08013a0e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8013a0e:	4770      	bx	lr

08013a10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8013a10:	4770      	bx	lr

08013a12 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013a12:	4770      	bx	lr

08013a14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8013a14:	4770      	bx	lr

08013a16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013a16:	4770      	bx	lr

08013a18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8013a18:	4770      	bx	lr

08013a1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013a1a:	4770      	bx	lr

08013a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013a1c:	4770      	bx	lr

08013a1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8013a1e:	4770      	bx	lr

08013a20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8013a20:	4770      	bx	lr

08013a22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8013a22:	4770      	bx	lr

08013a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013a24:	4770      	bx	lr

08013a26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8013a26:	4770      	bx	lr

08013a28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8013a28:	4770      	bx	lr

08013a2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8013a2a:	4770      	bx	lr

08013a2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8013a2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013a30:	b088      	sub	sp, #32
 8013a32:	4606      	mov	r6, r0
 8013a34:	4688      	mov	r8, r1
 8013a36:	4691      	mov	r9, r2
 8013a38:	ac08      	add	r4, sp, #32
 8013a3a:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8013a3e:	4620      	mov	r0, r4
 8013a40:	f7fd fc62 	bl	8011308 <_ZNK8touchgfx6Bitmap7getDataEv>
 8013a44:	6833      	ldr	r3, [r6, #0]
 8013a46:	4605      	mov	r5, r0
 8013a48:	4620      	mov	r0, r4
 8013a4a:	699f      	ldr	r7, [r3, #24]
 8013a4c:	f7fd fb70 	bl	8011130 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a50:	4682      	mov	sl, r0
 8013a52:	4620      	mov	r0, r4
 8013a54:	f7fd fba0 	bl	8011198 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a58:	9500      	str	r5, [sp, #0]
 8013a5a:	464b      	mov	r3, r9
 8013a5c:	4642      	mov	r2, r8
 8013a5e:	4631      	mov	r1, r6
 8013a60:	e9cd a001 	strd	sl, r0, [sp, #4]
 8013a64:	a806      	add	r0, sp, #24
 8013a66:	47b8      	blx	r7
 8013a68:	4628      	mov	r0, r5
 8013a6a:	b008      	add	sp, #32
 8013a6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08013a70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8013a70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8013a74:	2300      	movs	r3, #0
 8013a76:	9300      	str	r3, [sp, #0]
 8013a78:	4b3d      	ldr	r3, [pc, #244]	@ (8013b70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8013a7a:	781b      	ldrb	r3, [r3, #0]
 8013a7c:	2b00      	cmp	r3, #0
 8013a7e:	d137      	bne.n	8013af0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8013a80:	4a3c      	ldr	r2, [pc, #240]	@ (8013b74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8013a82:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013a86:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013a8a:	2b00      	cmp	r3, #0
 8013a8c:	d132      	bne.n	8013af4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8013a8e:	4b3a      	ldr	r3, [pc, #232]	@ (8013b78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8013a90:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013a94:	ac02      	add	r4, sp, #8
 8013a96:	6808      	ldr	r0, [r1, #0]
 8013a98:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013a9c:	ab02      	add	r3, sp, #8
 8013a9e:	6849      	ldr	r1, [r1, #4]
 8013aa0:	4d36      	ldr	r5, [pc, #216]	@ (8013b7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8013aa2:	c303      	stmia	r3!, {r0, r1}
 8013aa4:	4669      	mov	r1, sp
 8013aa6:	4620      	mov	r0, r4
 8013aa8:	f7fa f962 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013aac:	4668      	mov	r0, sp
 8013aae:	f7fa f937 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013ab2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8013ab6:	f8bd 2000 	ldrh.w	r2, [sp]
 8013aba:	462f      	mov	r7, r5
 8013abc:	6828      	ldr	r0, [r5, #0]
 8013abe:	4413      	add	r3, r2
 8013ac0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8013ac4:	f8ad 3008 	strh.w	r3, [sp, #8]
 8013ac8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013acc:	4413      	add	r3, r2
 8013ace:	f8ad 300a 	strh.w	r3, [sp, #10]
 8013ad2:	6803      	ldr	r3, [r0, #0]
 8013ad4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013ad6:	4798      	blx	r3
 8013ad8:	f010 0f01 	tst.w	r0, #1
 8013adc:	d00c      	beq.n	8013af8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8013ade:	6828      	ldr	r0, [r5, #0]
 8013ae0:	6803      	ldr	r3, [r0, #0]
 8013ae2:	e894 0006 	ldmia.w	r4, {r1, r2}
 8013ae6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8013ae8:	4798      	blx	r3
 8013aea:	b004      	add	sp, #16
 8013aec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013af0:	4a21      	ldr	r2, [pc, #132]	@ (8013b78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8013af2:	e7c6      	b.n	8013a82 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8013af4:	4b1f      	ldr	r3, [pc, #124]	@ (8013b74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8013af6:	e7cb      	b.n	8013a90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8013af8:	6838      	ldr	r0, [r7, #0]
 8013afa:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8013afe:	6803      	ldr	r3, [r0, #0]
 8013b00:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8013b04:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8013b08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013b0a:	4798      	blx	r3
 8013b0c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8013b10:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013b14:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8013b18:	fb16 3602 	smlabb	r6, r6, r2, r3
 8013b1c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013b20:	6838      	ldr	r0, [r7, #0]
 8013b22:	6803      	ldr	r3, [r0, #0]
 8013b24:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013b26:	4798      	blx	r3
 8013b28:	4a12      	ldr	r2, [pc, #72]	@ (8013b74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8013b2a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8013b2e:	8813      	ldrh	r3, [r2, #0]
 8013b30:	4691      	mov	r9, r2
 8013b32:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8013b36:	435d      	muls	r5, r3
 8013b38:	fb03 1404 	mla	r4, r3, r4, r1
 8013b3c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013b40:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013b44:	6838      	ldr	r0, [r7, #0]
 8013b46:	42ac      	cmp	r4, r5
 8013b48:	6803      	ldr	r3, [r0, #0]
 8013b4a:	d20e      	bcs.n	8013b6a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8013b4c:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 8013b50:	4632      	mov	r2, r6
 8013b52:	4643      	mov	r3, r8
 8013b54:	4621      	mov	r1, r4
 8013b56:	47d0      	blx	sl
 8013b58:	f8b9 3000 	ldrh.w	r3, [r9]
 8013b5c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013b60:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8013b64:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013b68:	e7ec      	b.n	8013b44 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8013b6a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013b6c:	4798      	blx	r3
 8013b6e:	e7bc      	b.n	8013aea <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8013b70:	200150a4 	.word	0x200150a4
 8013b74:	200150a6 	.word	0x200150a6
 8013b78:	200150a8 	.word	0x200150a8
 8013b7c:	200150ac 	.word	0x200150ac

08013b80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8013b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b84:	b08b      	sub	sp, #44	@ 0x2c
 8013b86:	460f      	mov	r7, r1
 8013b88:	4616      	mov	r6, r2
 8013b8a:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8013b8e:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8013b92:	f1bb 0f00 	cmp.w	fp, #0
 8013b96:	d04a      	beq.n	8013c2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8013b98:	6810      	ldr	r0, [r2, #0]
 8013b9a:	ad06      	add	r5, sp, #24
 8013b9c:	6851      	ldr	r1, [r2, #4]
 8013b9e:	c503      	stmia	r5!, {r0, r1}
 8013ba0:	6818      	ldr	r0, [r3, #0]
 8013ba2:	ad08      	add	r5, sp, #32
 8013ba4:	6859      	ldr	r1, [r3, #4]
 8013ba6:	c503      	stmia	r5!, {r0, r1}
 8013ba8:	a806      	add	r0, sp, #24
 8013baa:	f7fa f8b9 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013bae:	4631      	mov	r1, r6
 8013bb0:	a808      	add	r0, sp, #32
 8013bb2:	f7fa f8dd 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013bb6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013bba:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8013bbe:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8013bc2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8013bc6:	fb16 2103 	smlabb	r1, r6, r3, r2
 8013bca:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8013bce:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8013bd2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8013bd6:	4f5f      	ldr	r7, [pc, #380]	@ (8013d54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8013bd8:	440a      	add	r2, r1
 8013bda:	6838      	ldr	r0, [r7, #0]
 8013bdc:	46b9      	mov	r9, r7
 8013bde:	f8ad 2020 	strh.w	r2, [sp, #32]
 8013be2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8013be6:	4413      	add	r3, r2
 8013be8:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8013bec:	6803      	ldr	r3, [r0, #0]
 8013bee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013bf0:	4798      	blx	r3
 8013bf2:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8013bf6:	d11d      	bne.n	8013c34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8013bf8:	b9fc      	cbnz	r4, 8013c3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8013bfa:	f010 0f01 	tst.w	r0, #1
 8013bfe:	d01c      	beq.n	8013c3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8013c00:	f8d9 0000 	ldr.w	r0, [r9]
 8013c04:	2700      	movs	r7, #0
 8013c06:	b2ad      	uxth	r5, r5
 8013c08:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8013c0c:	6801      	ldr	r1, [r0, #0]
 8013c0e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8013c12:	f8cd b00c 	str.w	fp, [sp, #12]
 8013c16:	9501      	str	r5, [sp, #4]
 8013c18:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8013c1c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8013c20:	9402      	str	r4, [sp, #8]
 8013c22:	fa1f f488 	uxth.w	r4, r8
 8013c26:	9400      	str	r4, [sp, #0]
 8013c28:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 8013c2a:	4631      	mov	r1, r6
 8013c2c:	47a0      	blx	r4
 8013c2e:	b00b      	add	sp, #44	@ 0x2c
 8013c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c34:	f010 0f04 	tst.w	r0, #4
 8013c38:	e7e1      	b.n	8013bfe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8013c3a:	f8d9 0000 	ldr.w	r0, [r9]
 8013c3e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8013c42:	6803      	ldr	r3, [r0, #0]
 8013c44:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013c46:	4798      	blx	r3
 8013c48:	4b43      	ldr	r3, [pc, #268]	@ (8013d58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8013c4a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8013c4e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8013c52:	881a      	ldrh	r2, [r3, #0]
 8013c54:	469a      	mov	sl, r3
 8013c56:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8013c5a:	fb05 f502 	mul.w	r5, r5, r2
 8013c5e:	fb02 1404 	mla	r4, r2, r4, r1
 8013c62:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013c66:	d059      	beq.n	8013d1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8013c68:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8013c6c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013c70:	fa1f f28b 	uxth.w	r2, fp
 8013c74:	469e      	mov	lr, r3
 8013c76:	fa1f f989 	uxth.w	r9, r9
 8013c7a:	42ac      	cmp	r4, r5
 8013c7c:	d264      	bcs.n	8013d48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8013c7e:	eb04 0a07 	add.w	sl, r4, r7
 8013c82:	4554      	cmp	r4, sl
 8013c84:	d23d      	bcs.n	8013d02 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8013c86:	8821      	ldrh	r1, [r4, #0]
 8013c88:	f836 3b02 	ldrh.w	r3, [r6], #2
 8013c8c:	1208      	asrs	r0, r1, #8
 8013c8e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013c92:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8013c96:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8013c9a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013c9e:	00c9      	lsls	r1, r1, #3
 8013ca0:	fb10 f009 	smulbb	r0, r0, r9
 8013ca4:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8013ca8:	b2c9      	uxtb	r1, r1
 8013caa:	fb0c 0c02 	mla	ip, ip, r2, r0
 8013cae:	10d8      	asrs	r0, r3, #3
 8013cb0:	fb1b fb09 	smulbb	fp, fp, r9
 8013cb4:	00db      	lsls	r3, r3, #3
 8013cb6:	fa1f fc8c 	uxth.w	ip, ip
 8013cba:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8013cbe:	fb11 f109 	smulbb	r1, r1, r9
 8013cc2:	b2db      	uxtb	r3, r3
 8013cc4:	fb00 b002 	mla	r0, r0, r2, fp
 8013cc8:	f10c 0b01 	add.w	fp, ip, #1
 8013ccc:	fb03 1302 	mla	r3, r3, r2, r1
 8013cd0:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8013cd4:	b29b      	uxth	r3, r3
 8013cd6:	b280      	uxth	r0, r0
 8013cd8:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8013cdc:	f103 0c01 	add.w	ip, r3, #1
 8013ce0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013ce4:	1c43      	adds	r3, r0, #1
 8013ce6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8013cea:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013cee:	0940      	lsrs	r0, r0, #5
 8013cf0:	ea4c 0c0b 	orr.w	ip, ip, fp
 8013cf4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013cf8:	ea4c 0c00 	orr.w	ip, ip, r0
 8013cfc:	f824 cb02 	strh.w	ip, [r4], #2
 8013d00:	e7bf      	b.n	8013c82 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8013d02:	f8be 3000 	ldrh.w	r3, [lr]
 8013d06:	eba3 0308 	sub.w	r3, r3, r8
 8013d0a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013d0e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013d12:	eba3 0308 	sub.w	r3, r3, r8
 8013d16:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013d1a:	e7ae      	b.n	8013c7a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8013d1c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013d20:	f8d9 0000 	ldr.w	r0, [r9]
 8013d24:	42ac      	cmp	r4, r5
 8013d26:	6803      	ldr	r3, [r0, #0]
 8013d28:	d20e      	bcs.n	8013d48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8013d2a:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 8013d2e:	4632      	mov	r2, r6
 8013d30:	463b      	mov	r3, r7
 8013d32:	4621      	mov	r1, r4
 8013d34:	47c0      	blx	r8
 8013d36:	f8ba 3000 	ldrh.w	r3, [sl]
 8013d3a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013d3e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013d42:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013d46:	e7eb      	b.n	8013d20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8013d48:	4b02      	ldr	r3, [pc, #8]	@ (8013d54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8013d4a:	6818      	ldr	r0, [r3, #0]
 8013d4c:	6803      	ldr	r3, [r0, #0]
 8013d4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013d50:	4798      	blx	r3
 8013d52:	e76c      	b.n	8013c2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8013d54:	200150ac 	.word	0x200150ac
 8013d58:	200150a6 	.word	0x200150a6

08013d5c <_ZN8touchgfx8LCD16bppD0Ev>:
 8013d5c:	b510      	push	{r4, lr}
 8013d5e:	4604      	mov	r4, r0
 8013d60:	2188      	movs	r1, #136	@ 0x88
 8013d62:	f00a fe36 	bl	801e9d2 <_ZdlPvj>
 8013d66:	4620      	mov	r0, r4
 8013d68:	bd10      	pop	{r4, pc}

08013d6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8013d6a:	b510      	push	{r4, lr}
 8013d6c:	4604      	mov	r4, r0
 8013d6e:	2104      	movs	r1, #4
 8013d70:	f00a fe2f 	bl	801e9d2 <_ZdlPvj>
 8013d74:	4620      	mov	r0, r4
 8013d76:	bd10      	pop	{r4, pc}

08013d78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8013d78:	b510      	push	{r4, lr}
 8013d7a:	4604      	mov	r4, r0
 8013d7c:	2104      	movs	r1, #4
 8013d7e:	f00a fe28 	bl	801e9d2 <_ZdlPvj>
 8013d82:	4620      	mov	r0, r4
 8013d84:	bd10      	pop	{r4, pc}

08013d86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8013d86:	b510      	push	{r4, lr}
 8013d88:	4604      	mov	r4, r0
 8013d8a:	f640 0144 	movw	r1, #2116	@ 0x844
 8013d8e:	f00a fe20 	bl	801e9d2 <_ZdlPvj>
 8013d92:	4620      	mov	r0, r4
 8013d94:	bd10      	pop	{r4, pc}

08013d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013d96:	b510      	push	{r4, lr}
 8013d98:	4604      	mov	r4, r0
 8013d9a:	2104      	movs	r1, #4
 8013d9c:	f00a fe19 	bl	801e9d2 <_ZdlPvj>
 8013da0:	4620      	mov	r0, r4
 8013da2:	bd10      	pop	{r4, pc}

08013da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8013da4:	b510      	push	{r4, lr}
 8013da6:	4604      	mov	r4, r0
 8013da8:	2104      	movs	r1, #4
 8013daa:	f00a fe12 	bl	801e9d2 <_ZdlPvj>
 8013dae:	4620      	mov	r0, r4
 8013db0:	bd10      	pop	{r4, pc}

08013db2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013db2:	b510      	push	{r4, lr}
 8013db4:	4604      	mov	r4, r0
 8013db6:	2104      	movs	r1, #4
 8013db8:	f00a fe0b 	bl	801e9d2 <_ZdlPvj>
 8013dbc:	4620      	mov	r0, r4
 8013dbe:	bd10      	pop	{r4, pc}

08013dc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013dc0:	b510      	push	{r4, lr}
 8013dc2:	4604      	mov	r4, r0
 8013dc4:	2104      	movs	r1, #4
 8013dc6:	f00a fe04 	bl	801e9d2 <_ZdlPvj>
 8013dca:	4620      	mov	r0, r4
 8013dcc:	bd10      	pop	{r4, pc}

08013dce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013dce:	b510      	push	{r4, lr}
 8013dd0:	4604      	mov	r4, r0
 8013dd2:	2104      	movs	r1, #4
 8013dd4:	f00a fdfd 	bl	801e9d2 <_ZdlPvj>
 8013dd8:	4620      	mov	r0, r4
 8013dda:	bd10      	pop	{r4, pc}

08013ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8013ddc:	b510      	push	{r4, lr}
 8013dde:	4604      	mov	r4, r0
 8013de0:	2104      	movs	r1, #4
 8013de2:	f00a fdf6 	bl	801e9d2 <_ZdlPvj>
 8013de6:	4620      	mov	r0, r4
 8013de8:	bd10      	pop	{r4, pc}

08013dea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013dea:	b510      	push	{r4, lr}
 8013dec:	4604      	mov	r4, r0
 8013dee:	2104      	movs	r1, #4
 8013df0:	f00a fdef 	bl	801e9d2 <_ZdlPvj>
 8013df4:	4620      	mov	r0, r4
 8013df6:	bd10      	pop	{r4, pc}

08013df8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8013df8:	b510      	push	{r4, lr}
 8013dfa:	4604      	mov	r4, r0
 8013dfc:	2104      	movs	r1, #4
 8013dfe:	f00a fde8 	bl	801e9d2 <_ZdlPvj>
 8013e02:	4620      	mov	r0, r4
 8013e04:	bd10      	pop	{r4, pc}

08013e06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013e06:	b510      	push	{r4, lr}
 8013e08:	4604      	mov	r4, r0
 8013e0a:	2104      	movs	r1, #4
 8013e0c:	f00a fde1 	bl	801e9d2 <_ZdlPvj>
 8013e10:	4620      	mov	r0, r4
 8013e12:	bd10      	pop	{r4, pc}

08013e14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013e14:	b510      	push	{r4, lr}
 8013e16:	4604      	mov	r4, r0
 8013e18:	2104      	movs	r1, #4
 8013e1a:	f00a fdda 	bl	801e9d2 <_ZdlPvj>
 8013e1e:	4620      	mov	r0, r4
 8013e20:	bd10      	pop	{r4, pc}

08013e22 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013e22:	b510      	push	{r4, lr}
 8013e24:	4604      	mov	r4, r0
 8013e26:	2104      	movs	r1, #4
 8013e28:	f00a fdd3 	bl	801e9d2 <_ZdlPvj>
 8013e2c:	4620      	mov	r0, r4
 8013e2e:	bd10      	pop	{r4, pc}

08013e30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013e30:	b510      	push	{r4, lr}
 8013e32:	4604      	mov	r4, r0
 8013e34:	2104      	movs	r1, #4
 8013e36:	f00a fdcc 	bl	801e9d2 <_ZdlPvj>
 8013e3a:	4620      	mov	r0, r4
 8013e3c:	bd10      	pop	{r4, pc}

08013e3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013e3e:	b510      	push	{r4, lr}
 8013e40:	4604      	mov	r4, r0
 8013e42:	2104      	movs	r1, #4
 8013e44:	f00a fdc5 	bl	801e9d2 <_ZdlPvj>
 8013e48:	4620      	mov	r0, r4
 8013e4a:	bd10      	pop	{r4, pc}

08013e4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8013e4c:	b510      	push	{r4, lr}
 8013e4e:	4604      	mov	r4, r0
 8013e50:	2104      	movs	r1, #4
 8013e52:	f00a fdbe 	bl	801e9d2 <_ZdlPvj>
 8013e56:	4620      	mov	r0, r4
 8013e58:	bd10      	pop	{r4, pc}

08013e5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013e5a:	b510      	push	{r4, lr}
 8013e5c:	4604      	mov	r4, r0
 8013e5e:	2104      	movs	r1, #4
 8013e60:	f00a fdb7 	bl	801e9d2 <_ZdlPvj>
 8013e64:	4620      	mov	r0, r4
 8013e66:	bd10      	pop	{r4, pc}

08013e68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013e68:	b510      	push	{r4, lr}
 8013e6a:	4604      	mov	r4, r0
 8013e6c:	2104      	movs	r1, #4
 8013e6e:	f00a fdb0 	bl	801e9d2 <_ZdlPvj>
 8013e72:	4620      	mov	r0, r4
 8013e74:	bd10      	pop	{r4, pc}

08013e76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013e76:	b510      	push	{r4, lr}
 8013e78:	4604      	mov	r4, r0
 8013e7a:	2104      	movs	r1, #4
 8013e7c:	f00a fda9 	bl	801e9d2 <_ZdlPvj>
 8013e80:	4620      	mov	r0, r4
 8013e82:	bd10      	pop	{r4, pc}

08013e84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013e84:	b510      	push	{r4, lr}
 8013e86:	4604      	mov	r4, r0
 8013e88:	2104      	movs	r1, #4
 8013e8a:	f00a fda2 	bl	801e9d2 <_ZdlPvj>
 8013e8e:	4620      	mov	r0, r4
 8013e90:	bd10      	pop	{r4, pc}

08013e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013e92:	b510      	push	{r4, lr}
 8013e94:	4604      	mov	r4, r0
 8013e96:	2104      	movs	r1, #4
 8013e98:	f00a fd9b 	bl	801e9d2 <_ZdlPvj>
 8013e9c:	4620      	mov	r0, r4
 8013e9e:	bd10      	pop	{r4, pc}

08013ea0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013ea0:	b510      	push	{r4, lr}
 8013ea2:	4604      	mov	r4, r0
 8013ea4:	2104      	movs	r1, #4
 8013ea6:	f00a fd94 	bl	801e9d2 <_ZdlPvj>
 8013eaa:	4620      	mov	r0, r4
 8013eac:	bd10      	pop	{r4, pc}

08013eae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013eae:	b510      	push	{r4, lr}
 8013eb0:	4604      	mov	r4, r0
 8013eb2:	2104      	movs	r1, #4
 8013eb4:	f00a fd8d 	bl	801e9d2 <_ZdlPvj>
 8013eb8:	4620      	mov	r0, r4
 8013eba:	bd10      	pop	{r4, pc}

08013ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013ebc:	b510      	push	{r4, lr}
 8013ebe:	4604      	mov	r4, r0
 8013ec0:	2104      	movs	r1, #4
 8013ec2:	f00a fd86 	bl	801e9d2 <_ZdlPvj>
 8013ec6:	4620      	mov	r0, r4
 8013ec8:	bd10      	pop	{r4, pc}

08013eca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013eca:	b510      	push	{r4, lr}
 8013ecc:	4604      	mov	r4, r0
 8013ece:	2104      	movs	r1, #4
 8013ed0:	f00a fd7f 	bl	801e9d2 <_ZdlPvj>
 8013ed4:	4620      	mov	r0, r4
 8013ed6:	bd10      	pop	{r4, pc}

08013ed8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013ed8:	b510      	push	{r4, lr}
 8013eda:	4604      	mov	r4, r0
 8013edc:	2104      	movs	r1, #4
 8013ede:	f00a fd78 	bl	801e9d2 <_ZdlPvj>
 8013ee2:	4620      	mov	r0, r4
 8013ee4:	bd10      	pop	{r4, pc}

08013ee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8013ee6:	b510      	push	{r4, lr}
 8013ee8:	4604      	mov	r4, r0
 8013eea:	2104      	movs	r1, #4
 8013eec:	f00a fd71 	bl	801e9d2 <_ZdlPvj>
 8013ef0:	4620      	mov	r0, r4
 8013ef2:	bd10      	pop	{r4, pc}

08013ef4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8013ef4:	b510      	push	{r4, lr}
 8013ef6:	4604      	mov	r4, r0
 8013ef8:	2104      	movs	r1, #4
 8013efa:	f00a fd6a 	bl	801e9d2 <_ZdlPvj>
 8013efe:	4620      	mov	r0, r4
 8013f00:	bd10      	pop	{r4, pc}

08013f02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8013f02:	b510      	push	{r4, lr}
 8013f04:	4604      	mov	r4, r0
 8013f06:	2104      	movs	r1, #4
 8013f08:	f00a fd63 	bl	801e9d2 <_ZdlPvj>
 8013f0c:	4620      	mov	r0, r4
 8013f0e:	bd10      	pop	{r4, pc}

08013f10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8013f10:	b510      	push	{r4, lr}
 8013f12:	4604      	mov	r4, r0
 8013f14:	2104      	movs	r1, #4
 8013f16:	f00a fd5c 	bl	801e9d2 <_ZdlPvj>
 8013f1a:	4620      	mov	r0, r4
 8013f1c:	bd10      	pop	{r4, pc}
	...

08013f20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8013f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f24:	b08f      	sub	sp, #60	@ 0x3c
 8013f26:	461c      	mov	r4, r3
 8013f28:	9205      	str	r2, [sp, #20]
 8013f2a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013f2e:	9100      	str	r1, [sp, #0]
 8013f30:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8013f32:	9201      	str	r2, [sp, #4]
 8013f34:	2a00      	cmp	r2, #0
 8013f36:	f000 8116 	beq.w	8014166 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 8013f3a:	6820      	ldr	r0, [r4, #0]
 8013f3c:	aa0a      	add	r2, sp, #40	@ 0x28
 8013f3e:	6861      	ldr	r1, [r4, #4]
 8013f40:	c203      	stmia	r2!, {r0, r1}
 8013f42:	6818      	ldr	r0, [r3, #0]
 8013f44:	aa0c      	add	r2, sp, #48	@ 0x30
 8013f46:	6859      	ldr	r1, [r3, #4]
 8013f48:	c203      	stmia	r2!, {r0, r1}
 8013f4a:	a80a      	add	r0, sp, #40	@ 0x28
 8013f4c:	f7f9 fee8 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013f50:	4621      	mov	r1, r4
 8013f52:	a80c      	add	r0, sp, #48	@ 0x30
 8013f54:	f7f9 ff0c 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013f58:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8013f5c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8013f60:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8013f64:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8013f68:	bfdb      	ittet	le
 8013f6a:	b2b3      	uxthle	r3, r6
 8013f6c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8013f70:	2301      	movgt	r3, #1
 8013f72:	fb92 f3f3 	sdivle	r3, r2, r3
 8013f76:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8013f7a:	441d      	add	r5, r3
 8013f7c:	fb92 f1f3 	sdiv	r1, r2, r3
 8013f80:	fa1f fc81 	uxth.w	ip, r1
 8013f84:	3d01      	subs	r5, #1
 8013f86:	fb0c 2413 	mls	r4, ip, r3, r2
 8013f8a:	4661      	mov	r1, ip
 8013f8c:	fb14 f406 	smulbb	r4, r4, r6
 8013f90:	4404      	add	r4, r0
 8013f92:	fb95 f5f3 	sdiv	r5, r5, r3
 8013f96:	b2a4      	uxth	r4, r4
 8013f98:	b131      	cbz	r1, 8013fa8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 8013f9a:	9b05      	ldr	r3, [sp, #20]
 8013f9c:	9900      	ldr	r1, [sp, #0]
 8013f9e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8013fa2:	ba1b      	rev	r3, r3
 8013fa4:	4419      	add	r1, r3
 8013fa6:	9100      	str	r1, [sp, #0]
 8013fa8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8013fac:	b2ad      	uxth	r5, r5
 8013fae:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8013fb2:	4418      	add	r0, r3
 8013fb4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8013fb8:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8013fbc:	00ad      	lsls	r5, r5, #2
 8013fbe:	441a      	add	r2, r3
 8013fc0:	4b6a      	ldr	r3, [pc, #424]	@ (801416c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8013fc2:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8013fc6:	6818      	ldr	r0, [r3, #0]
 8013fc8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8013fcc:	6803      	ldr	r3, [r0, #0]
 8013fce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013fd0:	4798      	blx	r3
 8013fd2:	4967      	ldr	r1, [pc, #412]	@ (8014170 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8013fd4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8013fd8:	2c00      	cmp	r4, #0
 8013fda:	880b      	ldrh	r3, [r1, #0]
 8013fdc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8013fe0:	bf0c      	ite	eq
 8013fe2:	46c6      	moveq	lr, r8
 8013fe4:	f04f 0e00 	movne.w	lr, #0
 8013fe8:	9109      	str	r1, [sp, #36]	@ 0x24
 8013fea:	fb03 c202 	mla	r2, r3, r2, ip
 8013fee:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8013ff2:	4373      	muls	r3, r6
 8013ff4:	fa1f fe8e 	uxth.w	lr, lr
 8013ff8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013ffc:	9103      	str	r1, [sp, #12]
 8013ffe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014002:	9306      	str	r3, [sp, #24]
 8014004:	1d2b      	adds	r3, r5, #4
 8014006:	9307      	str	r3, [sp, #28]
 8014008:	9b01      	ldr	r3, [sp, #4]
 801400a:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801400e:	2300      	movs	r3, #0
 8014010:	b292      	uxth	r2, r2
 8014012:	9302      	str	r3, [sp, #8]
 8014014:	9204      	str	r2, [sp, #16]
 8014016:	9a06      	ldr	r2, [sp, #24]
 8014018:	4282      	cmp	r2, r0
 801401a:	f240 809f 	bls.w	801415c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 801401e:	b963      	cbnz	r3, 801403a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8014020:	9b00      	ldr	r3, [sp, #0]
 8014022:	781a      	ldrb	r2, [r3, #0]
 8014024:	0993      	lsrs	r3, r2, #6
 8014026:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801402a:	9202      	str	r2, [sp, #8]
 801402c:	1e5a      	subs	r2, r3, #1
 801402e:	2a02      	cmp	r2, #2
 8014030:	d815      	bhi.n	801405e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8014032:	9a00      	ldr	r2, [sp, #0]
 8014034:	b29b      	uxth	r3, r3
 8014036:	3201      	adds	r2, #1
 8014038:	9200      	str	r2, [sp, #0]
 801403a:	b1b4      	cbz	r4, 801406a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 801403c:	429c      	cmp	r4, r3
 801403e:	bf91      	iteee	ls
 8014040:	1b1c      	subls	r4, r3, r4
 8014042:	1ae4      	subhi	r4, r4, r3
 8014044:	4671      	movhi	r1, lr
 8014046:	f04f 0a00 	movhi.w	sl, #0
 801404a:	bf9b      	ittet	ls
 801404c:	fa1f fa84 	uxthls.w	sl, r4
 8014050:	2400      	movls	r4, #0
 8014052:	b2a4      	uxthhi	r4, r4
 8014054:	fa1f f188 	uxthls.w	r1, r8
 8014058:	4653      	mov	r3, sl
 801405a:	468e      	mov	lr, r1
 801405c:	e7db      	b.n	8014016 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 801405e:	9a00      	ldr	r2, [sp, #0]
 8014060:	9b00      	ldr	r3, [sp, #0]
 8014062:	3202      	adds	r2, #2
 8014064:	785b      	ldrb	r3, [r3, #1]
 8014066:	9200      	str	r2, [sp, #0]
 8014068:	e7e7      	b.n	801403a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 801406a:	2202      	movs	r2, #2
 801406c:	9907      	ldr	r1, [sp, #28]
 801406e:	4573      	cmp	r3, lr
 8014070:	4615      	mov	r5, r2
 8014072:	9a02      	ldr	r2, [sp, #8]
 8014074:	bf24      	itt	cs
 8014076:	eba3 0a0e 	subcs.w	sl, r3, lr
 801407a:	46f1      	movcs	r9, lr
 801407c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8014080:	9905      	ldr	r1, [sp, #20]
 8014082:	bf34      	ite	cc
 8014084:	4699      	movcc	r9, r3
 8014086:	fa1f fa8a 	uxthcs.w	sl, sl
 801408a:	f831 c002 	ldrh.w	ip, [r1, r2]
 801408e:	bf38      	it	cc
 8014090:	ebae 0103 	subcc.w	r1, lr, r3
 8014094:	9a01      	ldr	r2, [sp, #4]
 8014096:	bf2e      	itee	cs
 8014098:	4621      	movcs	r1, r4
 801409a:	b289      	uxthcc	r1, r1
 801409c:	46a2      	movcc	sl, r4
 801409e:	2aff      	cmp	r2, #255	@ 0xff
 80140a0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80140a4:	d105      	bne.n	80140b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 80140a6:	4481      	add	r9, r0
 80140a8:	4581      	cmp	r9, r0
 80140aa:	d045      	beq.n	8014138 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 80140ac:	f820 cb02 	strh.w	ip, [r0], #2
 80140b0:	e7fa      	b.n	80140a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 80140b2:	ea4f 222c 	mov.w	r2, ip, asr #8
 80140b6:	9d03      	ldr	r5, [sp, #12]
 80140b8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80140bc:	4481      	add	r9, r0
 80140be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80140c2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80140c6:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80140ca:	fa5f fc8c 	uxtb.w	ip, ip
 80140ce:	436a      	muls	r2, r5
 80140d0:	fb0b fb05 	mul.w	fp, fp, r5
 80140d4:	fb0c fc05 	mul.w	ip, ip, r5
 80140d8:	9208      	str	r2, [sp, #32]
 80140da:	4581      	cmp	r9, r0
 80140dc:	d02c      	beq.n	8014138 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 80140de:	8802      	ldrh	r2, [r0, #0]
 80140e0:	9d04      	ldr	r5, [sp, #16]
 80140e2:	1216      	asrs	r6, r2, #8
 80140e4:	9f04      	ldr	r7, [sp, #16]
 80140e6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80140ea:	fb16 f605 	smulbb	r6, r6, r5
 80140ee:	9d08      	ldr	r5, [sp, #32]
 80140f0:	442e      	add	r6, r5
 80140f2:	10d5      	asrs	r5, r2, #3
 80140f4:	00d2      	lsls	r2, r2, #3
 80140f6:	b2b6      	uxth	r6, r6
 80140f8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80140fc:	b2d2      	uxtb	r2, r2
 80140fe:	fb15 f507 	smulbb	r5, r5, r7
 8014102:	fb12 f207 	smulbb	r2, r2, r7
 8014106:	1c77      	adds	r7, r6, #1
 8014108:	445d      	add	r5, fp
 801410a:	4462      	add	r2, ip
 801410c:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8014110:	b2ad      	uxth	r5, r5
 8014112:	b292      	uxth	r2, r2
 8014114:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8014118:	1c57      	adds	r7, r2, #1
 801411a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801411e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014122:	4316      	orrs	r6, r2
 8014124:	1c6a      	adds	r2, r5, #1
 8014126:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801412a:	096d      	lsrs	r5, r5, #5
 801412c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014130:	432e      	orrs	r6, r5
 8014132:	f820 6b02 	strh.w	r6, [r0], #2
 8014136:	e7d0      	b.n	80140da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 8014138:	4573      	cmp	r3, lr
 801413a:	d38d      	bcc.n	8014058 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 801413c:	fa1f f188 	uxth.w	r1, r8
 8014140:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8014144:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014146:	1a64      	subs	r4, r4, r1
 8014148:	881b      	ldrh	r3, [r3, #0]
 801414a:	b2a4      	uxth	r4, r4
 801414c:	eba3 0308 	sub.w	r3, r3, r8
 8014150:	2c00      	cmp	r4, #0
 8014152:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014156:	bf18      	it	ne
 8014158:	2100      	movne	r1, #0
 801415a:	e77d      	b.n	8014058 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 801415c:	4b03      	ldr	r3, [pc, #12]	@ (801416c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801415e:	6818      	ldr	r0, [r3, #0]
 8014160:	6803      	ldr	r3, [r0, #0]
 8014162:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014164:	4798      	blx	r3
 8014166:	b00f      	add	sp, #60	@ 0x3c
 8014168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801416c:	200150ac 	.word	0x200150ac
 8014170:	200150a6 	.word	0x200150a6

08014174 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8014174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014178:	b09f      	sub	sp, #124	@ 0x7c
 801417a:	461d      	mov	r5, r3
 801417c:	4604      	mov	r4, r0
 801417e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8014180:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8014184:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8014188:	9209      	str	r2, [sp, #36]	@ 0x24
 801418a:	2a00      	cmp	r2, #0
 801418c:	f000 81ed 	beq.w	801456a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 8014190:	6828      	ldr	r0, [r5, #0]
 8014192:	aa1a      	add	r2, sp, #104	@ 0x68
 8014194:	6869      	ldr	r1, [r5, #4]
 8014196:	c203      	stmia	r2!, {r0, r1}
 8014198:	6818      	ldr	r0, [r3, #0]
 801419a:	aa1c      	add	r2, sp, #112	@ 0x70
 801419c:	6859      	ldr	r1, [r3, #4]
 801419e:	c203      	stmia	r2!, {r0, r1}
 80141a0:	a81a      	add	r0, sp, #104	@ 0x68
 80141a2:	f7f9 fdbd 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80141a6:	4629      	mov	r1, r5
 80141a8:	a81c      	add	r0, sp, #112	@ 0x70
 80141aa:	f7f9 fde1 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80141ae:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80141b2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 80141b6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80141ba:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 80141be:	bfdb      	ittet	le
 80141c0:	b29a      	uxthle	r2, r3
 80141c2:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80141c6:	2201      	movgt	r2, #1
 80141c8:	fb91 f2f2 	sdivle	r2, r1, r2
 80141cc:	9202      	str	r2, [sp, #8]
 80141ce:	9802      	ldr	r0, [sp, #8]
 80141d0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80141d4:	9902      	ldr	r1, [sp, #8]
 80141d6:	fb92 f0f0 	sdiv	r0, r2, r0
 80141da:	b280      	uxth	r0, r0
 80141dc:	4488      	add	r8, r1
 80141de:	9010      	str	r0, [sp, #64]	@ 0x40
 80141e0:	f108 38ff 	add.w	r8, r8, #4294967295
 80141e4:	9802      	ldr	r0, [sp, #8]
 80141e6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80141e8:	fb05 2510 	mls	r5, r5, r0, r2
 80141ec:	fb98 f8f1 	sdiv	r8, r8, r1
 80141f0:	fb15 f503 	smulbb	r5, r5, r3
 80141f4:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 80141f8:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80141fc:	f108 0801 	add.w	r8, r8, #1
 8014200:	440d      	add	r5, r1
 8014202:	4419      	add	r1, r3
 8014204:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8014208:	fa1f f888 	uxth.w	r8, r8
 801420c:	441a      	add	r2, r3
 801420e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8014212:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8014216:	b2ad      	uxth	r5, r5
 8014218:	9304      	str	r3, [sp, #16]
 801421a:	4b94      	ldr	r3, [pc, #592]	@ (801446c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801421c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8014220:	6818      	ldr	r0, [r3, #0]
 8014222:	6803      	ldr	r3, [r0, #0]
 8014224:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014226:	4798      	blx	r3
 8014228:	4b91      	ldr	r3, [pc, #580]	@ (8014470 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801422a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801422e:	2d00      	cmp	r5, #0
 8014230:	881a      	ldrh	r2, [r3, #0]
 8014232:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8014236:	fb02 f606 	mul.w	r6, r2, r6
 801423a:	fb02 7101 	mla	r1, r2, r1, r7
 801423e:	9318      	str	r3, [sp, #96]	@ 0x60
 8014240:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014244:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8014248:	f04f 0100 	mov.w	r1, #0
 801424c:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8014250:	930f      	str	r3, [sp, #60]	@ 0x3c
 8014252:	4b88      	ldr	r3, [pc, #544]	@ (8014474 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 8014254:	920a      	str	r2, [sp, #40]	@ 0x28
 8014256:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014258:	eba3 0304 	sub.w	r3, r3, r4
 801425c:	910d      	str	r1, [sp, #52]	@ 0x34
 801425e:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8014262:	9319      	str	r3, [sp, #100]	@ 0x64
 8014264:	f108 0204 	add.w	r2, r8, #4
 8014268:	9211      	str	r2, [sp, #68]	@ 0x44
 801426a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801426c:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8014270:	9215      	str	r2, [sp, #84]	@ 0x54
 8014272:	9a04      	ldr	r2, [sp, #16]
 8014274:	bf18      	it	ne
 8014276:	2200      	movne	r2, #0
 8014278:	b292      	uxth	r2, r2
 801427a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801427c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801427e:	fa11 f383 	uxtah	r3, r1, r3
 8014282:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8014284:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8014288:	3304      	adds	r3, #4
 801428a:	9306      	str	r3, [sp, #24]
 801428c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801428e:	4283      	cmp	r3, r0
 8014290:	f240 8166 	bls.w	8014560 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 8014294:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8014298:	f04f 0a01 	mov.w	sl, #1
 801429c:	9902      	ldr	r1, [sp, #8]
 801429e:	9e06      	ldr	r6, [sp, #24]
 80142a0:	46d3      	mov	fp, sl
 80142a2:	4657      	mov	r7, sl
 80142a4:	7836      	ldrb	r6, [r6, #0]
 80142a6:	fbb5 f3f3 	udiv	r3, r5, r3
 80142aa:	1acb      	subs	r3, r1, r3
 80142ac:	9612      	str	r6, [sp, #72]	@ 0x48
 80142ae:	3601      	adds	r6, #1
 80142b0:	b29b      	uxth	r3, r3
 80142b2:	9605      	str	r6, [sp, #20]
 80142b4:	9316      	str	r3, [sp, #88]	@ 0x58
 80142b6:	9b06      	ldr	r3, [sp, #24]
 80142b8:	7859      	ldrb	r1, [r3, #1]
 80142ba:	789b      	ldrb	r3, [r3, #2]
 80142bc:	021b      	lsls	r3, r3, #8
 80142be:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80142c2:	9906      	ldr	r1, [sp, #24]
 80142c4:	78c9      	ldrb	r1, [r1, #3]
 80142c6:	430b      	orrs	r3, r1
 80142c8:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80142ca:	4419      	add	r1, r3
 80142cc:	1c4e      	adds	r6, r1, #1
 80142ce:	7849      	ldrb	r1, [r1, #1]
 80142d0:	9603      	str	r6, [sp, #12]
 80142d2:	0209      	lsls	r1, r1, #8
 80142d4:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80142d6:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 80142da:	5cf3      	ldrb	r3, [r6, r3]
 80142dc:	4319      	orrs	r1, r3
 80142de:	b28b      	uxth	r3, r1
 80142e0:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80142e4:	930c      	str	r3, [sp, #48]	@ 0x30
 80142e6:	2300      	movs	r3, #0
 80142e8:	9307      	str	r3, [sp, #28]
 80142ea:	469c      	mov	ip, r3
 80142ec:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80142f0:	930e      	str	r3, [sp, #56]	@ 0x38
 80142f2:	2d00      	cmp	r5, #0
 80142f4:	d07e      	beq.n	80143f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 80142f6:	42af      	cmp	r7, r5
 80142f8:	d26e      	bcs.n	80143d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 80142fa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80142fc:	1bed      	subs	r5, r5, r7
 80142fe:	9201      	str	r2, [sp, #4]
 8014300:	4283      	cmp	r3, r0
 8014302:	b2ad      	uxth	r5, r5
 8014304:	d802      	bhi.n	801430c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 8014306:	e073      	b.n	80143f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8014308:	2b00      	cmp	r3, #0
 801430a:	d15f      	bne.n	80143cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 801430c:	9b03      	ldr	r3, [sp, #12]
 801430e:	f1cb 0207 	rsb	r2, fp, #7
 8014312:	785b      	ldrb	r3, [r3, #1]
 8014314:	4093      	lsls	r3, r2
 8014316:	005b      	lsls	r3, r3, #1
 8014318:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801431c:	9b03      	ldr	r3, [sp, #12]
 801431e:	781b      	ldrb	r3, [r3, #0]
 8014320:	fa43 f30b 	asr.w	r3, r3, fp
 8014324:	b2db      	uxtb	r3, r3
 8014326:	4313      	orrs	r3, r2
 8014328:	f10b 0201 	add.w	r2, fp, #1
 801432c:	fa5f fb82 	uxtb.w	fp, r2
 8014330:	9a03      	ldr	r2, [sp, #12]
 8014332:	b29f      	uxth	r7, r3
 8014334:	f1bb 0f08 	cmp.w	fp, #8
 8014338:	bf13      	iteet	ne
 801433a:	3201      	addne	r2, #1
 801433c:	3202      	addeq	r2, #2
 801433e:	f04f 0b00 	moveq.w	fp, #0
 8014342:	9203      	strne	r2, [sp, #12]
 8014344:	bf08      	it	eq
 8014346:	9203      	streq	r2, [sp, #12]
 8014348:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801434a:	42ba      	cmp	r2, r7
 801434c:	d309      	bcc.n	8014362 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 801434e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8014352:	2301      	movs	r3, #1
 8014354:	9a05      	ldr	r2, [sp, #20]
 8014356:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801435a:	d30e      	bcc.n	801437a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801435c:	469a      	mov	sl, r3
 801435e:	2600      	movs	r6, #0
 8014360:	e035      	b.n	80143ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 8014362:	9b05      	ldr	r3, [sp, #20]
 8014364:	429f      	cmp	r7, r3
 8014366:	d318      	bcc.n	801439a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 8014368:	eb04 030a 	add.w	r3, r4, sl
 801436c:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8014370:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8014374:	f10a 0301 	add.w	r3, sl, #1
 8014378:	b29b      	uxth	r3, r3
 801437a:	9a05      	ldr	r2, [sp, #20]
 801437c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8014380:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8014384:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8014386:	7116      	strb	r6, [r2, #4]
 8014388:	f10a 0601 	add.w	r6, sl, #1
 801438c:	80d1      	strh	r1, [r2, #6]
 801438e:	7156      	strb	r6, [r2, #5]
 8014390:	9a05      	ldr	r2, [sp, #20]
 8014392:	3201      	adds	r2, #1
 8014394:	b292      	uxth	r2, r2
 8014396:	9205      	str	r2, [sp, #20]
 8014398:	e7e0      	b.n	801435c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 801439a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801439e:	463a      	mov	r2, r7
 80143a0:	795b      	ldrb	r3, [r3, #5]
 80143a2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80143a6:	4426      	add	r6, r4
 80143a8:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80143aa:	eb01 0c06 	add.w	ip, r1, r6
 80143ae:	f1bc 0f00 	cmp.w	ip, #0
 80143b2:	dd07      	ble.n	80143c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 80143b4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80143b8:	f892 c004 	ldrb.w	ip, [r2, #4]
 80143bc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80143c0:	88d2      	ldrh	r2, [r2, #6]
 80143c2:	e7f1      	b.n	80143a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 80143c4:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80143c8:	b29b      	uxth	r3, r3
 80143ca:	e7c3      	b.n	8014354 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 80143cc:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80143ce:	970c      	str	r7, [sp, #48]	@ 0x30
 80143d0:	46b4      	mov	ip, r6
 80143d2:	9a01      	ldr	r2, [sp, #4]
 80143d4:	461f      	mov	r7, r3
 80143d6:	e78c      	b.n	80142f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 80143d8:	1b7b      	subs	r3, r7, r5
 80143da:	eb0c 0605 	add.w	r6, ip, r5
 80143de:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80143e2:	b29b      	uxth	r3, r3
 80143e4:	b2b6      	uxth	r6, r6
 80143e6:	9201      	str	r2, [sp, #4]
 80143e8:	2500      	movs	r5, #0
 80143ea:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80143ec:	4282      	cmp	r2, r0
 80143ee:	d88b      	bhi.n	8014308 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 80143f0:	9a01      	ldr	r2, [sp, #4]
 80143f2:	e74b      	b.n	801428c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 80143f4:	4297      	cmp	r7, r2
 80143f6:	d332      	bcc.n	801445e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 80143f8:	1abb      	subs	r3, r7, r2
 80143fa:	9208      	str	r2, [sp, #32]
 80143fc:	9501      	str	r5, [sp, #4]
 80143fe:	b29b      	uxth	r3, r3
 8014400:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8014402:	29ff      	cmp	r1, #255	@ 0xff
 8014404:	9908      	ldr	r1, [sp, #32]
 8014406:	eb0c 0601 	add.w	r6, ip, r1
 801440a:	d135      	bne.n	8014478 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801440c:	f1a0 0e02 	sub.w	lr, r0, #2
 8014410:	b2b6      	uxth	r6, r6
 8014412:	45b4      	cmp	ip, r6
 8014414:	f040 808c 	bne.w	8014530 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 8014418:	9908      	ldr	r1, [sp, #32]
 801441a:	4297      	cmp	r7, r2
 801441c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014420:	d3e2      	bcc.n	80143e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 8014422:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8014424:	9904      	ldr	r1, [sp, #16]
 8014426:	8812      	ldrh	r2, [r2, #0]
 8014428:	1a52      	subs	r2, r2, r1
 801442a:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801442c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014430:	9a07      	ldr	r2, [sp, #28]
 8014432:	3201      	adds	r2, #1
 8014434:	428a      	cmp	r2, r1
 8014436:	9207      	str	r2, [sp, #28]
 8014438:	f040 8087 	bne.w	801454a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 801443c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8014440:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8014444:	9b04      	ldr	r3, [sp, #16]
 8014446:	1bed      	subs	r5, r5, r7
 8014448:	b2ad      	uxth	r5, r5
 801444a:	2d00      	cmp	r5, #0
 801444c:	bf08      	it	eq
 801444e:	461a      	moveq	r2, r3
 8014450:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014452:	bf18      	it	ne
 8014454:	2200      	movne	r2, #0
 8014456:	3301      	adds	r3, #1
 8014458:	b292      	uxth	r2, r2
 801445a:	930d      	str	r3, [sp, #52]	@ 0x34
 801445c:	e70d      	b.n	801427a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 801445e:	1bd1      	subs	r1, r2, r7
 8014460:	9708      	str	r7, [sp, #32]
 8014462:	b28b      	uxth	r3, r1
 8014464:	9301      	str	r3, [sp, #4]
 8014466:	462b      	mov	r3, r5
 8014468:	e7ca      	b.n	8014400 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 801446a:	bf00      	nop
 801446c:	200150ac 	.word	0x200150ac
 8014470:	200150a6 	.word	0x200150a6
 8014474:	fffff7fb 	.word	0xfffff7fb
 8014478:	b2b6      	uxth	r6, r6
 801447a:	900b      	str	r0, [sp, #44]	@ 0x2c
 801447c:	45b4      	cmp	ip, r6
 801447e:	d0cb      	beq.n	8014418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 8014480:	f10c 0101 	add.w	r1, ip, #1
 8014484:	44a4      	add	ip, r4
 8014486:	9117      	str	r1, [sp, #92]	@ 0x5c
 8014488:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801448c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801448e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8014492:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8014494:	ea4f 2825 	mov.w	r8, r5, asr #8
 8014498:	f8b1 c000 	ldrh.w	ip, [r1]
 801449c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801449e:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80144a2:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 80144a6:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80144aa:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80144ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80144b2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80144b6:	fb1e fe01 	smulbb	lr, lr, r1
 80144ba:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80144bc:	fa5f fc8c 	uxtb.w	ip, ip
 80144c0:	fb08 e801 	mla	r8, r8, r1, lr
 80144c4:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 80144c8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80144ca:	00ed      	lsls	r5, r5, #3
 80144cc:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80144d0:	fa1f f888 	uxth.w	r8, r8
 80144d4:	fb19 f901 	smulbb	r9, r9, r1
 80144d8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80144da:	b2ed      	uxtb	r5, r5
 80144dc:	fb0e 9e01 	mla	lr, lr, r1, r9
 80144e0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80144e2:	fb1c fc01 	smulbb	ip, ip, r1
 80144e6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80144e8:	fa1f fe8e 	uxth.w	lr, lr
 80144ec:	fb05 c501 	mla	r5, r5, r1, ip
 80144f0:	f108 0c01 	add.w	ip, r8, #1
 80144f4:	f10e 0901 	add.w	r9, lr, #1
 80144f8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80144fa:	b2ad      	uxth	r5, r5
 80144fc:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8014500:	f105 0c01 	add.w	ip, r5, #1
 8014504:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8014508:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801450c:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8014510:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014514:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014518:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801451c:	ea4c 0808 	orr.w	r8, ip, r8
 8014520:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8014524:	ea48 0809 	orr.w	r8, r8, r9
 8014528:	f821 8b02 	strh.w	r8, [r1], #2
 801452c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801452e:	e7a5      	b.n	801447c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 8014530:	f10c 0801 	add.w	r8, ip, #1
 8014534:	44a4      	add	ip, r4
 8014536:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014538:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801453c:	fa1f fc88 	uxth.w	ip, r8
 8014540:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8014544:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8014548:	e763      	b.n	8014412 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 801454a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801454e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8014552:	1aad      	subs	r5, r5, r2
 8014554:	b2ad      	uxth	r5, r5
 8014556:	2d00      	cmp	r5, #0
 8014558:	bf18      	it	ne
 801455a:	2200      	movne	r2, #0
 801455c:	9201      	str	r2, [sp, #4]
 801455e:	e744      	b.n	80143ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 8014560:	4b03      	ldr	r3, [pc, #12]	@ (8014570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 8014562:	6818      	ldr	r0, [r3, #0]
 8014564:	6803      	ldr	r3, [r0, #0]
 8014566:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014568:	4798      	blx	r3
 801456a:	b01f      	add	sp, #124	@ 0x7c
 801456c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014570:	200150ac 	.word	0x200150ac

08014574 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8014574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014578:	b08f      	sub	sp, #60	@ 0x3c
 801457a:	461c      	mov	r4, r3
 801457c:	460f      	mov	r7, r1
 801457e:	9203      	str	r2, [sp, #12]
 8014580:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014584:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8014586:	9202      	str	r2, [sp, #8]
 8014588:	2a00      	cmp	r2, #0
 801458a:	f000 8128 	beq.w	80147de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801458e:	6820      	ldr	r0, [r4, #0]
 8014590:	aa0a      	add	r2, sp, #40	@ 0x28
 8014592:	6861      	ldr	r1, [r4, #4]
 8014594:	c203      	stmia	r2!, {r0, r1}
 8014596:	6818      	ldr	r0, [r3, #0]
 8014598:	aa0c      	add	r2, sp, #48	@ 0x30
 801459a:	6859      	ldr	r1, [r3, #4]
 801459c:	c203      	stmia	r2!, {r0, r1}
 801459e:	a80a      	add	r0, sp, #40	@ 0x28
 80145a0:	f7f9 fbbe 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80145a4:	4621      	mov	r1, r4
 80145a6:	a80c      	add	r0, sp, #48	@ 0x30
 80145a8:	f7f9 fbe2 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80145ac:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80145b0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80145b4:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80145b8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80145bc:	bfdb      	ittet	le
 80145be:	b2b3      	uxthle	r3, r6
 80145c0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80145c4:	2301      	movgt	r3, #1
 80145c6:	fb92 f3f3 	sdivle	r3, r2, r3
 80145ca:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80145ce:	441d      	add	r5, r3
 80145d0:	fb92 f1f3 	sdiv	r1, r2, r3
 80145d4:	fa1f fc81 	uxth.w	ip, r1
 80145d8:	3d01      	subs	r5, #1
 80145da:	fb0c 2413 	mls	r4, ip, r3, r2
 80145de:	4661      	mov	r1, ip
 80145e0:	fb14 f406 	smulbb	r4, r4, r6
 80145e4:	4404      	add	r4, r0
 80145e6:	fb95 f5f3 	sdiv	r5, r5, r3
 80145ea:	b2a4      	uxth	r4, r4
 80145ec:	b121      	cbz	r1, 80145f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 80145ee:	9b03      	ldr	r3, [sp, #12]
 80145f0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80145f4:	ba1b      	rev	r3, r3
 80145f6:	441f      	add	r7, r3
 80145f8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80145fc:	b2ad      	uxth	r5, r5
 80145fe:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8014602:	4418      	add	r0, r3
 8014604:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8014608:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801460c:	00ad      	lsls	r5, r5, #2
 801460e:	441a      	add	r2, r3
 8014610:	4b74      	ldr	r3, [pc, #464]	@ (80147e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8014612:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8014616:	6818      	ldr	r0, [r3, #0]
 8014618:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801461c:	6803      	ldr	r3, [r0, #0]
 801461e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014620:	4798      	blx	r3
 8014622:	4a71      	ldr	r2, [pc, #452]	@ (80147e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8014624:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8014628:	2c00      	cmp	r4, #0
 801462a:	8813      	ldrh	r3, [r2, #0]
 801462c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8014630:	bf0c      	ite	eq
 8014632:	46c8      	moveq	r8, r9
 8014634:	f04f 0800 	movne.w	r8, #0
 8014638:	9209      	str	r2, [sp, #36]	@ 0x24
 801463a:	fb03 c101 	mla	r1, r3, r1, ip
 801463e:	4373      	muls	r3, r6
 8014640:	fa1f f888 	uxth.w	r8, r8
 8014644:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014648:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801464c:	9304      	str	r3, [sp, #16]
 801464e:	1d2b      	adds	r3, r5, #4
 8014650:	9305      	str	r3, [sp, #20]
 8014652:	2300      	movs	r3, #0
 8014654:	9301      	str	r3, [sp, #4]
 8014656:	9a04      	ldr	r2, [sp, #16]
 8014658:	4282      	cmp	r2, r0
 801465a:	f240 80bb 	bls.w	80147d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801465e:	b95b      	cbnz	r3, 8014678 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 8014660:	783a      	ldrb	r2, [r7, #0]
 8014662:	0993      	lsrs	r3, r2, #6
 8014664:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8014668:	9201      	str	r2, [sp, #4]
 801466a:	1e5a      	subs	r2, r3, #1
 801466c:	2a02      	cmp	r2, #2
 801466e:	bf8d      	iteet	hi
 8014670:	787b      	ldrbhi	r3, [r7, #1]
 8014672:	3701      	addls	r7, #1
 8014674:	b29b      	uxthls	r3, r3
 8014676:	3702      	addhi	r7, #2
 8014678:	b184      	cbz	r4, 801469c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 801467a:	429c      	cmp	r4, r3
 801467c:	bf91      	iteee	ls
 801467e:	1b1c      	subls	r4, r3, r4
 8014680:	1ae4      	subhi	r4, r4, r3
 8014682:	46c4      	movhi	ip, r8
 8014684:	f04f 0a00 	movhi.w	sl, #0
 8014688:	bf9b      	ittet	ls
 801468a:	fa1f fa84 	uxthls.w	sl, r4
 801468e:	2400      	movls	r4, #0
 8014690:	b2a4      	uxthhi	r4, r4
 8014692:	fa1f fc89 	uxthls.w	ip, r9
 8014696:	4653      	mov	r3, sl
 8014698:	46e0      	mov	r8, ip
 801469a:	e7dc      	b.n	8014656 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 801469c:	2204      	movs	r2, #4
 801469e:	9905      	ldr	r1, [sp, #20]
 80146a0:	4543      	cmp	r3, r8
 80146a2:	4615      	mov	r5, r2
 80146a4:	9a01      	ldr	r2, [sp, #4]
 80146a6:	bf24      	itt	cs
 80146a8:	eba3 0a08 	subcs.w	sl, r3, r8
 80146ac:	46c6      	movcs	lr, r8
 80146ae:	fb15 1202 	smlabb	r2, r5, r2, r1
 80146b2:	9903      	ldr	r1, [sp, #12]
 80146b4:	bf3c      	itt	cc
 80146b6:	eba8 0c03 	subcc.w	ip, r8, r3
 80146ba:	469e      	movcc	lr, r3
 80146bc:	588a      	ldr	r2, [r1, r2]
 80146be:	bf26      	itte	cs
 80146c0:	fa1f fa8a 	uxthcs.w	sl, sl
 80146c4:	46a4      	movcs	ip, r4
 80146c6:	fa1f fc8c 	uxthcc.w	ip, ip
 80146ca:	ea4f 6112 	mov.w	r1, r2, lsr #24
 80146ce:	bf38      	it	cc
 80146d0:	46a2      	movcc	sl, r4
 80146d2:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80146d6:	2900      	cmp	r1, #0
 80146d8:	d066      	beq.n	80147a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 80146da:	29ff      	cmp	r1, #255	@ 0xff
 80146dc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80146e0:	d114      	bne.n	801470c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80146e2:	9d02      	ldr	r5, [sp, #8]
 80146e4:	2dff      	cmp	r5, #255	@ 0xff
 80146e6:	d111      	bne.n	801470c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80146e8:	0951      	lsrs	r1, r2, #5
 80146ea:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80146ee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80146f2:	4486      	add	lr, r0
 80146f4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80146f8:	f026 0607 	bic.w	r6, r6, #7
 80146fc:	430e      	orrs	r6, r1
 80146fe:	4316      	orrs	r6, r2
 8014700:	b2b6      	uxth	r6, r6
 8014702:	4586      	cmp	lr, r0
 8014704:	d051      	beq.n	80147aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8014706:	f820 6b02 	strh.w	r6, [r0], #2
 801470a:	e7fa      	b.n	8014702 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801470c:	9d02      	ldr	r5, [sp, #8]
 801470e:	b2f6      	uxtb	r6, r6
 8014710:	4486      	add	lr, r0
 8014712:	4369      	muls	r1, r5
 8014714:	1c4d      	adds	r5, r1, #1
 8014716:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801471a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801471e:	b2d2      	uxtb	r2, r2
 8014720:	122d      	asrs	r5, r5, #8
 8014722:	ea6f 0b05 	mvn.w	fp, r5
 8014726:	b2ad      	uxth	r5, r5
 8014728:	fb11 f105 	smulbb	r1, r1, r5
 801472c:	fa5f fb8b 	uxtb.w	fp, fp
 8014730:	fb16 f605 	smulbb	r6, r6, r5
 8014734:	fb12 f205 	smulbb	r2, r2, r5
 8014738:	b289      	uxth	r1, r1
 801473a:	b2b6      	uxth	r6, r6
 801473c:	b292      	uxth	r2, r2
 801473e:	9106      	str	r1, [sp, #24]
 8014740:	9607      	str	r6, [sp, #28]
 8014742:	9208      	str	r2, [sp, #32]
 8014744:	4586      	cmp	lr, r0
 8014746:	d030      	beq.n	80147aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8014748:	8802      	ldrh	r2, [r0, #0]
 801474a:	9906      	ldr	r1, [sp, #24]
 801474c:	1216      	asrs	r6, r2, #8
 801474e:	10d5      	asrs	r5, r2, #3
 8014750:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014754:	00d2      	lsls	r2, r2, #3
 8014756:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801475a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801475e:	b2d2      	uxtb	r2, r2
 8014760:	fb06 160b 	mla	r6, r6, fp, r1
 8014764:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014768:	9907      	ldr	r1, [sp, #28]
 801476a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801476e:	b2b6      	uxth	r6, r6
 8014770:	fb05 150b 	mla	r5, r5, fp, r1
 8014774:	9908      	ldr	r1, [sp, #32]
 8014776:	fb02 120b 	mla	r2, r2, fp, r1
 801477a:	1c71      	adds	r1, r6, #1
 801477c:	b2ad      	uxth	r5, r5
 801477e:	b292      	uxth	r2, r2
 8014780:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8014784:	1c51      	adds	r1, r2, #1
 8014786:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801478a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801478e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014792:	4316      	orrs	r6, r2
 8014794:	1c6a      	adds	r2, r5, #1
 8014796:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801479a:	096d      	lsrs	r5, r5, #5
 801479c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80147a0:	432e      	orrs	r6, r5
 80147a2:	f820 6b02 	strh.w	r6, [r0], #2
 80147a6:	e7cd      	b.n	8014744 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 80147a8:	4470      	add	r0, lr
 80147aa:	4543      	cmp	r3, r8
 80147ac:	f4ff af73 	bcc.w	8014696 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80147b0:	fa1f fc89 	uxth.w	ip, r9
 80147b4:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 80147b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80147ba:	eba4 040c 	sub.w	r4, r4, ip
 80147be:	881b      	ldrh	r3, [r3, #0]
 80147c0:	b2a4      	uxth	r4, r4
 80147c2:	eba3 0309 	sub.w	r3, r3, r9
 80147c6:	2c00      	cmp	r4, #0
 80147c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80147cc:	bf18      	it	ne
 80147ce:	f04f 0c00 	movne.w	ip, #0
 80147d2:	e760      	b.n	8014696 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80147d4:	4b03      	ldr	r3, [pc, #12]	@ (80147e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80147d6:	6818      	ldr	r0, [r3, #0]
 80147d8:	6803      	ldr	r3, [r0, #0]
 80147da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80147dc:	4798      	blx	r3
 80147de:	b00f      	add	sp, #60	@ 0x3c
 80147e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147e4:	200150ac 	.word	0x200150ac
 80147e8:	200150a6 	.word	0x200150a6

080147ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80147ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80147f0:	b093      	sub	sp, #76	@ 0x4c
 80147f2:	461c      	mov	r4, r3
 80147f4:	9205      	str	r2, [sp, #20]
 80147f6:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 80147fa:	9101      	str	r1, [sp, #4]
 80147fc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80147fe:	9202      	str	r2, [sp, #8]
 8014800:	2a00      	cmp	r2, #0
 8014802:	f000 812e 	beq.w	8014a62 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 8014806:	6820      	ldr	r0, [r4, #0]
 8014808:	aa0e      	add	r2, sp, #56	@ 0x38
 801480a:	6861      	ldr	r1, [r4, #4]
 801480c:	c203      	stmia	r2!, {r0, r1}
 801480e:	6818      	ldr	r0, [r3, #0]
 8014810:	aa10      	add	r2, sp, #64	@ 0x40
 8014812:	6859      	ldr	r1, [r3, #4]
 8014814:	c203      	stmia	r2!, {r0, r1}
 8014816:	a80e      	add	r0, sp, #56	@ 0x38
 8014818:	f7f9 fa82 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801481c:	4621      	mov	r1, r4
 801481e:	a810      	add	r0, sp, #64	@ 0x40
 8014820:	f7f9 faa6 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014824:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8014828:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801482c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8014830:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8014834:	bfdb      	ittet	le
 8014836:	b2b3      	uxthle	r3, r6
 8014838:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801483c:	2301      	movgt	r3, #1
 801483e:	fb92 f3f3 	sdivle	r3, r2, r3
 8014842:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8014846:	441d      	add	r5, r3
 8014848:	fb92 f1f3 	sdiv	r1, r2, r3
 801484c:	fa1f fc81 	uxth.w	ip, r1
 8014850:	3d01      	subs	r5, #1
 8014852:	fb0c 2413 	mls	r4, ip, r3, r2
 8014856:	4661      	mov	r1, ip
 8014858:	fb14 f406 	smulbb	r4, r4, r6
 801485c:	4404      	add	r4, r0
 801485e:	fb95 f5f3 	sdiv	r5, r5, r3
 8014862:	b2a4      	uxth	r4, r4
 8014864:	b131      	cbz	r1, 8014874 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 8014866:	9b05      	ldr	r3, [sp, #20]
 8014868:	9901      	ldr	r1, [sp, #4]
 801486a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801486e:	ba1b      	rev	r3, r3
 8014870:	4419      	add	r1, r3
 8014872:	9101      	str	r1, [sp, #4]
 8014874:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8014878:	b2ad      	uxth	r5, r5
 801487a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801487e:	4418      	add	r0, r3
 8014880:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8014884:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8014888:	00ad      	lsls	r5, r5, #2
 801488a:	441a      	add	r2, r3
 801488c:	4b76      	ldr	r3, [pc, #472]	@ (8014a68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801488e:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8014892:	6818      	ldr	r0, [r3, #0]
 8014894:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8014898:	6803      	ldr	r3, [r0, #0]
 801489a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801489c:	4798      	blx	r3
 801489e:	4973      	ldr	r1, [pc, #460]	@ (8014a6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 80148a0:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 80148a4:	2c00      	cmp	r4, #0
 80148a6:	880b      	ldrh	r3, [r1, #0]
 80148a8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80148ac:	910d      	str	r1, [sp, #52]	@ 0x34
 80148ae:	fb03 c202 	mla	r2, r3, r2, ip
 80148b2:	bf08      	it	eq
 80148b4:	46dc      	moveq	ip, fp
 80148b6:	fb03 f306 	mul.w	r3, r3, r6
 80148ba:	bf18      	it	ne
 80148bc:	f04f 0c00 	movne.w	ip, #0
 80148c0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80148c4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80148c8:	fa1f fc8c 	uxth.w	ip, ip
 80148cc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80148d0:	9106      	str	r1, [sp, #24]
 80148d2:	9308      	str	r3, [sp, #32]
 80148d4:	1d2b      	adds	r3, r5, #4
 80148d6:	9309      	str	r3, [sp, #36]	@ 0x24
 80148d8:	9b02      	ldr	r3, [sp, #8]
 80148da:	43da      	mvns	r2, r3
 80148dc:	2300      	movs	r3, #0
 80148de:	b2d2      	uxtb	r2, r2
 80148e0:	9303      	str	r3, [sp, #12]
 80148e2:	9207      	str	r2, [sp, #28]
 80148e4:	9a08      	ldr	r2, [sp, #32]
 80148e6:	4282      	cmp	r2, r0
 80148e8:	f240 80b6 	bls.w	8014a58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 80148ec:	b963      	cbnz	r3, 8014908 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 80148ee:	9b01      	ldr	r3, [sp, #4]
 80148f0:	781a      	ldrb	r2, [r3, #0]
 80148f2:	0993      	lsrs	r3, r2, #6
 80148f4:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80148f8:	9203      	str	r2, [sp, #12]
 80148fa:	1e5a      	subs	r2, r3, #1
 80148fc:	2a02      	cmp	r2, #2
 80148fe:	d815      	bhi.n	801492c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 8014900:	9a01      	ldr	r2, [sp, #4]
 8014902:	b29b      	uxth	r3, r3
 8014904:	3201      	adds	r2, #1
 8014906:	9201      	str	r2, [sp, #4]
 8014908:	b1b4      	cbz	r4, 8014938 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 801490a:	429c      	cmp	r4, r3
 801490c:	bf91      	iteee	ls
 801490e:	1b1c      	subls	r4, r3, r4
 8014910:	1ae4      	subhi	r4, r4, r3
 8014912:	4666      	movhi	r6, ip
 8014914:	f04f 0800 	movhi.w	r8, #0
 8014918:	bf9b      	ittet	ls
 801491a:	fa1f f884 	uxthls.w	r8, r4
 801491e:	2400      	movls	r4, #0
 8014920:	b2a4      	uxthhi	r4, r4
 8014922:	fa1f f68b 	uxthls.w	r6, fp
 8014926:	4643      	mov	r3, r8
 8014928:	46b4      	mov	ip, r6
 801492a:	e7db      	b.n	80148e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 801492c:	9a01      	ldr	r2, [sp, #4]
 801492e:	9b01      	ldr	r3, [sp, #4]
 8014930:	3202      	adds	r2, #2
 8014932:	785b      	ldrb	r3, [r3, #1]
 8014934:	9201      	str	r2, [sp, #4]
 8014936:	e7e7      	b.n	8014908 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 8014938:	2203      	movs	r2, #3
 801493a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801493c:	4563      	cmp	r3, ip
 801493e:	4615      	mov	r5, r2
 8014940:	9a03      	ldr	r2, [sp, #12]
 8014942:	bf2c      	ite	cs
 8014944:	eba3 080c 	subcs.w	r8, r3, ip
 8014948:	ebac 0603 	subcc.w	r6, ip, r3
 801494c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8014950:	9905      	ldr	r1, [sp, #20]
 8014952:	bf24      	itt	cs
 8014954:	fa1f f888 	uxthcs.w	r8, r8
 8014958:	46e1      	movcs	r9, ip
 801495a:	eb01 0502 	add.w	r5, r1, r2
 801495e:	9902      	ldr	r1, [sp, #8]
 8014960:	bf2f      	iteee	cs
 8014962:	4626      	movcs	r6, r4
 8014964:	b2b6      	uxthcc	r6, r6
 8014966:	4699      	movcc	r9, r3
 8014968:	46a0      	movcc	r8, r4
 801496a:	29ff      	cmp	r1, #255	@ 0xff
 801496c:	d04a      	beq.n	8014a04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801496e:	9f06      	ldr	r7, [sp, #24]
 8014970:	46ca      	mov	sl, r9
 8014972:	78a9      	ldrb	r1, [r5, #2]
 8014974:	9004      	str	r0, [sp, #16]
 8014976:	4379      	muls	r1, r7
 8014978:	910a      	str	r1, [sp, #40]	@ 0x28
 801497a:	7869      	ldrb	r1, [r5, #1]
 801497c:	4379      	muls	r1, r7
 801497e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8014980:	9905      	ldr	r1, [sp, #20]
 8014982:	5c8a      	ldrb	r2, [r1, r2]
 8014984:	437a      	muls	r2, r7
 8014986:	920c      	str	r2, [sp, #48]	@ 0x30
 8014988:	f1ba 0f00 	cmp.w	sl, #0
 801498c:	d03d      	beq.n	8014a0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801498e:	9a04      	ldr	r2, [sp, #16]
 8014990:	f10a 3aff 	add.w	sl, sl, #4294967295
 8014994:	9f07      	ldr	r7, [sp, #28]
 8014996:	8812      	ldrh	r2, [r2, #0]
 8014998:	fa1f fa8a 	uxth.w	sl, sl
 801499c:	46be      	mov	lr, r7
 801499e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80149a0:	1215      	asrs	r5, r2, #8
 80149a2:	10d1      	asrs	r1, r2, #3
 80149a4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80149a8:	00d2      	lsls	r2, r2, #3
 80149aa:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80149ae:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80149b2:	b2d2      	uxtb	r2, r2
 80149b4:	fb05 750e 	mla	r5, r5, lr, r7
 80149b8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80149bc:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80149be:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80149c2:	b2ad      	uxth	r5, r5
 80149c4:	fb01 710e 	mla	r1, r1, lr, r7
 80149c8:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80149ca:	fb02 720e 	mla	r2, r2, lr, r7
 80149ce:	f105 0e01 	add.w	lr, r5, #1
 80149d2:	b289      	uxth	r1, r1
 80149d4:	b292      	uxth	r2, r2
 80149d6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80149da:	f102 0e01 	add.w	lr, r2, #1
 80149de:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80149e2:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80149e6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80149ea:	4315      	orrs	r5, r2
 80149ec:	1c4a      	adds	r2, r1, #1
 80149ee:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80149f2:	9a04      	ldr	r2, [sp, #16]
 80149f4:	0949      	lsrs	r1, r1, #5
 80149f6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80149fa:	430d      	orrs	r5, r1
 80149fc:	f822 5b02 	strh.w	r5, [r2], #2
 8014a00:	9204      	str	r2, [sp, #16]
 8014a02:	e7c1      	b.n	8014988 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 8014a04:	4649      	mov	r1, r9
 8014a06:	4686      	mov	lr, r0
 8014a08:	b999      	cbnz	r1, 8014a32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 8014a0a:	4563      	cmp	r3, ip
 8014a0c:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8014a10:	d389      	bcc.n	8014926 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8014a12:	fa1f f68b 	uxth.w	r6, fp
 8014a16:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8014a1a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014a1c:	1ba4      	subs	r4, r4, r6
 8014a1e:	881b      	ldrh	r3, [r3, #0]
 8014a20:	b2a4      	uxth	r4, r4
 8014a22:	eba3 030b 	sub.w	r3, r3, fp
 8014a26:	2c00      	cmp	r4, #0
 8014a28:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014a2c:	bf18      	it	ne
 8014a2e:	2600      	movne	r6, #0
 8014a30:	e779      	b.n	8014926 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8014a32:	78aa      	ldrb	r2, [r5, #2]
 8014a34:	3901      	subs	r1, #1
 8014a36:	4f0e      	ldr	r7, [pc, #56]	@ (8014a70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 8014a38:	b289      	uxth	r1, r1
 8014a3a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8014a3e:	786a      	ldrb	r2, [r5, #1]
 8014a40:	00d2      	lsls	r2, r2, #3
 8014a42:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014a46:	ea4a 0202 	orr.w	r2, sl, r2
 8014a4a:	f895 a000 	ldrb.w	sl, [r5]
 8014a4e:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8014a52:	f82e 2b02 	strh.w	r2, [lr], #2
 8014a56:	e7d7      	b.n	8014a08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 8014a58:	4b03      	ldr	r3, [pc, #12]	@ (8014a68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8014a5a:	6818      	ldr	r0, [r3, #0]
 8014a5c:	6803      	ldr	r3, [r0, #0]
 8014a5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014a60:	4798      	blx	r3
 8014a62:	b013      	add	sp, #76	@ 0x4c
 8014a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014a68:	200150ac 	.word	0x200150ac
 8014a6c:	200150a6 	.word	0x200150a6
 8014a70:	fffff800 	.word	0xfffff800

08014a74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8014a74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a78:	b09d      	sub	sp, #116	@ 0x74
 8014a7a:	461c      	mov	r4, r3
 8014a7c:	4683      	mov	fp, r0
 8014a7e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8014a80:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8014a84:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8014a88:	920e      	str	r2, [sp, #56]	@ 0x38
 8014a8a:	2a00      	cmp	r2, #0
 8014a8c:	f000 81e4 	beq.w	8014e58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 8014a90:	6820      	ldr	r0, [r4, #0]
 8014a92:	aa18      	add	r2, sp, #96	@ 0x60
 8014a94:	6861      	ldr	r1, [r4, #4]
 8014a96:	c203      	stmia	r2!, {r0, r1}
 8014a98:	6818      	ldr	r0, [r3, #0]
 8014a9a:	aa1a      	add	r2, sp, #104	@ 0x68
 8014a9c:	6859      	ldr	r1, [r3, #4]
 8014a9e:	c203      	stmia	r2!, {r0, r1}
 8014aa0:	a818      	add	r0, sp, #96	@ 0x60
 8014aa2:	f7f9 f93d 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014aa6:	4621      	mov	r1, r4
 8014aa8:	a81a      	add	r0, sp, #104	@ 0x68
 8014aaa:	f7f9 f961 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014aae:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8014ab2:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8014ab6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8014aba:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8014abe:	bfdb      	ittet	le
 8014ac0:	b29a      	uxthle	r2, r3
 8014ac2:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8014ac6:	2201      	movgt	r2, #1
 8014ac8:	fb91 f2f2 	sdivle	r2, r1, r2
 8014acc:	9202      	str	r2, [sp, #8]
 8014ace:	9802      	ldr	r0, [sp, #8]
 8014ad0:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8014ad4:	9902      	ldr	r1, [sp, #8]
 8014ad6:	fb92 f0f0 	sdiv	r0, r2, r0
 8014ada:	b280      	uxth	r0, r0
 8014adc:	440c      	add	r4, r1
 8014ade:	900f      	str	r0, [sp, #60]	@ 0x3c
 8014ae0:	3c01      	subs	r4, #1
 8014ae2:	9802      	ldr	r0, [sp, #8]
 8014ae4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8014ae6:	fb05 2510 	mls	r5, r5, r0, r2
 8014aea:	fb94 f4f1 	sdiv	r4, r4, r1
 8014aee:	fb15 f503 	smulbb	r5, r5, r3
 8014af2:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8014af6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8014afa:	3401      	adds	r4, #1
 8014afc:	440d      	add	r5, r1
 8014afe:	4419      	add	r1, r3
 8014b00:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8014b04:	b2a4      	uxth	r4, r4
 8014b06:	441a      	add	r2, r3
 8014b08:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8014b0c:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8014b10:	00a4      	lsls	r4, r4, #2
 8014b12:	9306      	str	r3, [sp, #24]
 8014b14:	b2ad      	uxth	r5, r5
 8014b16:	4bb3      	ldr	r3, [pc, #716]	@ (8014de4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8014b18:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8014b1c:	6818      	ldr	r0, [r3, #0]
 8014b1e:	6803      	ldr	r3, [r0, #0]
 8014b20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014b22:	4798      	blx	r3
 8014b24:	4bb0      	ldr	r3, [pc, #704]	@ (8014de8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 8014b26:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8014b2a:	2d00      	cmp	r5, #0
 8014b2c:	881a      	ldrh	r2, [r3, #0]
 8014b2e:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8014b32:	fb02 f606 	mul.w	r6, r2, r6
 8014b36:	fb02 7101 	mla	r1, r2, r1, r7
 8014b3a:	9316      	str	r3, [sp, #88]	@ 0x58
 8014b3c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8014b40:	4baa      	ldr	r3, [pc, #680]	@ (8014dec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 8014b42:	bf18      	it	ne
 8014b44:	2100      	movne	r1, #0
 8014b46:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8014b4a:	eba3 030b 	sub.w	r3, r3, fp
 8014b4e:	920a      	str	r2, [sp, #40]	@ 0x28
 8014b50:	f104 0204 	add.w	r2, r4, #4
 8014b54:	9317      	str	r3, [sp, #92]	@ 0x5c
 8014b56:	9213      	str	r2, [sp, #76]	@ 0x4c
 8014b58:	9a06      	ldr	r2, [sp, #24]
 8014b5a:	bf08      	it	eq
 8014b5c:	4611      	moveq	r1, r2
 8014b5e:	2200      	movs	r2, #0
 8014b60:	b289      	uxth	r1, r1
 8014b62:	920d      	str	r2, [sp, #52]	@ 0x34
 8014b64:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014b66:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014b68:	fa12 f383 	uxtah	r3, r2, r3
 8014b6c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014b6e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8014b72:	3304      	adds	r3, #4
 8014b74:	9308      	str	r3, [sp, #32]
 8014b76:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014b78:	4543      	cmp	r3, r8
 8014b7a:	f240 8168 	bls.w	8014e4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 8014b7e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8014b82:	f04f 0e01 	mov.w	lr, #1
 8014b86:	9a02      	ldr	r2, [sp, #8]
 8014b88:	9808      	ldr	r0, [sp, #32]
 8014b8a:	fbb5 f3f3 	udiv	r3, r5, r3
 8014b8e:	1ad3      	subs	r3, r2, r3
 8014b90:	7800      	ldrb	r0, [r0, #0]
 8014b92:	b29b      	uxth	r3, r3
 8014b94:	9010      	str	r0, [sp, #64]	@ 0x40
 8014b96:	3001      	adds	r0, #1
 8014b98:	9314      	str	r3, [sp, #80]	@ 0x50
 8014b9a:	9b08      	ldr	r3, [sp, #32]
 8014b9c:	9007      	str	r0, [sp, #28]
 8014b9e:	785a      	ldrb	r2, [r3, #1]
 8014ba0:	789b      	ldrb	r3, [r3, #2]
 8014ba2:	021b      	lsls	r3, r3, #8
 8014ba4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8014ba8:	9a08      	ldr	r2, [sp, #32]
 8014baa:	78d2      	ldrb	r2, [r2, #3]
 8014bac:	4313      	orrs	r3, r2
 8014bae:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014bb0:	441a      	add	r2, r3
 8014bb2:	1c50      	adds	r0, r2, #1
 8014bb4:	7852      	ldrb	r2, [r2, #1]
 8014bb6:	9005      	str	r0, [sp, #20]
 8014bb8:	0212      	lsls	r2, r2, #8
 8014bba:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014bbc:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8014bc0:	5cc3      	ldrb	r3, [r0, r3]
 8014bc2:	431a      	orrs	r2, r3
 8014bc4:	b293      	uxth	r3, r2
 8014bc6:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8014bca:	930b      	str	r3, [sp, #44]	@ 0x2c
 8014bcc:	2300      	movs	r3, #0
 8014bce:	9309      	str	r3, [sp, #36]	@ 0x24
 8014bd0:	2301      	movs	r3, #1
 8014bd2:	9301      	str	r3, [sp, #4]
 8014bd4:	9304      	str	r3, [sp, #16]
 8014bd6:	2300      	movs	r3, #0
 8014bd8:	9303      	str	r3, [sp, #12]
 8014bda:	2d00      	cmp	r5, #0
 8014bdc:	d07d      	beq.n	8014cda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 8014bde:	45ae      	cmp	lr, r5
 8014be0:	d26c      	bcs.n	8014cbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 8014be2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014be4:	eba5 050e 	sub.w	r5, r5, lr
 8014be8:	460c      	mov	r4, r1
 8014bea:	4543      	cmp	r3, r8
 8014bec:	b2ad      	uxth	r5, r5
 8014bee:	d802      	bhi.n	8014bf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 8014bf0:	e071      	b.n	8014cd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 8014bf2:	2b00      	cmp	r3, #0
 8014bf4:	d15d      	bne.n	8014cb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 8014bf6:	9b05      	ldr	r3, [sp, #20]
 8014bf8:	9a04      	ldr	r2, [sp, #16]
 8014bfa:	785b      	ldrb	r3, [r3, #1]
 8014bfc:	f1c2 0207 	rsb	r2, r2, #7
 8014c00:	9904      	ldr	r1, [sp, #16]
 8014c02:	4093      	lsls	r3, r2
 8014c04:	005b      	lsls	r3, r3, #1
 8014c06:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8014c0a:	9b05      	ldr	r3, [sp, #20]
 8014c0c:	781b      	ldrb	r3, [r3, #0]
 8014c0e:	410b      	asrs	r3, r1
 8014c10:	3101      	adds	r1, #1
 8014c12:	b2c9      	uxtb	r1, r1
 8014c14:	b2db      	uxtb	r3, r3
 8014c16:	2908      	cmp	r1, #8
 8014c18:	9104      	str	r1, [sp, #16]
 8014c1a:	9905      	ldr	r1, [sp, #20]
 8014c1c:	ea43 0302 	orr.w	r3, r3, r2
 8014c20:	bf0c      	ite	eq
 8014c22:	3102      	addeq	r1, #2
 8014c24:	3101      	addne	r1, #1
 8014c26:	b29a      	uxth	r2, r3
 8014c28:	bf05      	ittet	eq
 8014c2a:	9105      	streq	r1, [sp, #20]
 8014c2c:	2100      	moveq	r1, #0
 8014c2e:	9105      	strne	r1, [sp, #20]
 8014c30:	9104      	streq	r1, [sp, #16]
 8014c32:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8014c34:	4291      	cmp	r1, r2
 8014c36:	d30a      	bcc.n	8014c4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 8014c38:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8014c3c:	2301      	movs	r3, #1
 8014c3e:	9907      	ldr	r1, [sp, #28]
 8014c40:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8014c44:	d30f      	bcc.n	8014c66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8014c46:	2100      	movs	r1, #0
 8014c48:	9301      	str	r3, [sp, #4]
 8014c4a:	9103      	str	r1, [sp, #12]
 8014c4c:	e032      	b.n	8014cb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8014c4e:	9b07      	ldr	r3, [sp, #28]
 8014c50:	429a      	cmp	r2, r3
 8014c52:	d318      	bcc.n	8014c86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 8014c54:	9b01      	ldr	r3, [sp, #4]
 8014c56:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8014c5a:	445b      	add	r3, fp
 8014c5c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8014c60:	9b01      	ldr	r3, [sp, #4]
 8014c62:	3301      	adds	r3, #1
 8014c64:	b29b      	uxth	r3, r3
 8014c66:	9907      	ldr	r1, [sp, #28]
 8014c68:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8014c6c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8014c70:	7108      	strb	r0, [r1, #4]
 8014c72:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8014c74:	80c8      	strh	r0, [r1, #6]
 8014c76:	9801      	ldr	r0, [sp, #4]
 8014c78:	3001      	adds	r0, #1
 8014c7a:	7148      	strb	r0, [r1, #5]
 8014c7c:	9907      	ldr	r1, [sp, #28]
 8014c7e:	3101      	adds	r1, #1
 8014c80:	b289      	uxth	r1, r1
 8014c82:	9107      	str	r1, [sp, #28]
 8014c84:	e7df      	b.n	8014c46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8014c86:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8014c8a:	4611      	mov	r1, r2
 8014c8c:	795b      	ldrb	r3, [r3, #5]
 8014c8e:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8014c92:	4458      	add	r0, fp
 8014c94:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8014c96:	4406      	add	r6, r0
 8014c98:	2e00      	cmp	r6, #0
 8014c9a:	dd06      	ble.n	8014caa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8014c9c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8014ca0:	790e      	ldrb	r6, [r1, #4]
 8014ca2:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8014ca6:	88c9      	ldrh	r1, [r1, #6]
 8014ca8:	e7f4      	b.n	8014c94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 8014caa:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8014cae:	b29b      	uxth	r3, r3
 8014cb0:	e7c5      	b.n	8014c3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8014cb2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8014cb4:	4621      	mov	r1, r4
 8014cb6:	920b      	str	r2, [sp, #44]	@ 0x2c
 8014cb8:	469e      	mov	lr, r3
 8014cba:	e78e      	b.n	8014bda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 8014cbc:	9a03      	ldr	r2, [sp, #12]
 8014cbe:	ebae 0305 	sub.w	r3, lr, r5
 8014cc2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8014cc6:	442a      	add	r2, r5
 8014cc8:	b29b      	uxth	r3, r3
 8014cca:	b292      	uxth	r2, r2
 8014ccc:	9203      	str	r2, [sp, #12]
 8014cce:	2500      	movs	r5, #0
 8014cd0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8014cd2:	4542      	cmp	r2, r8
 8014cd4:	d88d      	bhi.n	8014bf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 8014cd6:	4621      	mov	r1, r4
 8014cd8:	e74d      	b.n	8014b76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 8014cda:	458e      	cmp	lr, r1
 8014cdc:	f04f 0900 	mov.w	r9, #0
 8014ce0:	bf2b      	itete	cs
 8014ce2:	ebae 0301 	subcs.w	r3, lr, r1
 8014ce6:	eba1 040e 	subcc.w	r4, r1, lr
 8014cea:	462c      	movcs	r4, r5
 8014cec:	462b      	movcc	r3, r5
 8014cee:	bf27      	ittee	cs
 8014cf0:	b29b      	uxthcs	r3, r3
 8014cf2:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8014cf4:	b2a4      	uxthcc	r4, r4
 8014cf6:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8014cfa:	9a03      	ldr	r2, [sp, #12]
 8014cfc:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8014cfe:	444a      	add	r2, r9
 8014d00:	4548      	cmp	r0, r9
 8014d02:	b292      	uxth	r2, r2
 8014d04:	d074      	beq.n	8014df0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 8014d06:	2004      	movs	r0, #4
 8014d08:	445a      	add	r2, fp
 8014d0a:	4605      	mov	r5, r0
 8014d0c:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8014d10:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014d12:	fb15 0202 	smlabb	r2, r5, r2, r0
 8014d16:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014d18:	5880      	ldr	r0, [r0, r2]
 8014d1a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8014d1e:	d014      	beq.n	8014d4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8014d20:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8014d24:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8014d28:	d112      	bne.n	8014d50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8014d2a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8014d2c:	2aff      	cmp	r2, #255	@ 0xff
 8014d2e:	d10f      	bne.n	8014d50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8014d30:	0942      	lsrs	r2, r0, #5
 8014d32:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8014d36:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014d3a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014d3e:	f025 0507 	bic.w	r5, r5, #7
 8014d42:	4315      	orrs	r5, r2
 8014d44:	4305      	orrs	r5, r0
 8014d46:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8014d4a:	f109 0901 	add.w	r9, r9, #1
 8014d4e:	e7d4      	b.n	8014cfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8014d50:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8014d54:	b2ed      	uxtb	r5, r5
 8014d56:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014d5a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014d5e:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8014d62:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014d66:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8014d6a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014d6e:	9215      	str	r2, [sp, #84]	@ 0x54
 8014d70:	fa5f fc8c 	uxtb.w	ip, ip
 8014d74:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8014d76:	b2c0      	uxtb	r0, r0
 8014d78:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8014d7c:	fb02 fa0a 	mul.w	sl, r2, sl
 8014d80:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8014d84:	f10a 0201 	add.w	r2, sl, #1
 8014d88:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8014d8c:	1212      	asrs	r2, r2, #8
 8014d8e:	fa1f fa82 	uxth.w	sl, r2
 8014d92:	43d2      	mvns	r2, r2
 8014d94:	fb16 f60a 	smulbb	r6, r6, sl
 8014d98:	b2d2      	uxtb	r2, r2
 8014d9a:	fb10 f00a 	smulbb	r0, r0, sl
 8014d9e:	fb07 6702 	mla	r7, r7, r2, r6
 8014da2:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8014da4:	fb0c 0002 	mla	r0, ip, r2, r0
 8014da8:	fb15 f50a 	smulbb	r5, r5, sl
 8014dac:	b2bf      	uxth	r7, r7
 8014dae:	b280      	uxth	r0, r0
 8014db0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8014db4:	fb06 5602 	mla	r6, r6, r2, r5
 8014db8:	1c7a      	adds	r2, r7, #1
 8014dba:	1c45      	adds	r5, r0, #1
 8014dbc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014dc0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014dc4:	b2b6      	uxth	r6, r6
 8014dc6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014dca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014dce:	432f      	orrs	r7, r5
 8014dd0:	1c75      	adds	r5, r6, #1
 8014dd2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8014dd6:	096d      	lsrs	r5, r5, #5
 8014dd8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014ddc:	432f      	orrs	r7, r5
 8014dde:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8014de2:	e7b2      	b.n	8014d4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8014de4:	200150ac 	.word	0x200150ac
 8014de8:	200150a6 	.word	0x200150a6
 8014dec:	fffff7fb 	.word	0xfffff7fb
 8014df0:	9203      	str	r2, [sp, #12]
 8014df2:	458e      	cmp	lr, r1
 8014df4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8014df6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8014dfa:	f4ff af68 	bcc.w	8014cce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8014dfe:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8014e00:	9906      	ldr	r1, [sp, #24]
 8014e02:	8812      	ldrh	r2, [r2, #0]
 8014e04:	1a52      	subs	r2, r2, r1
 8014e06:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8014e08:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8014e0c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014e0e:	3201      	adds	r2, #1
 8014e10:	428a      	cmp	r2, r1
 8014e12:	9209      	str	r2, [sp, #36]	@ 0x24
 8014e14:	d111      	bne.n	8014e3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 8014e16:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8014e1a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8014e1e:	9b06      	ldr	r3, [sp, #24]
 8014e20:	eba5 0509 	sub.w	r5, r5, r9
 8014e24:	b2ad      	uxth	r5, r5
 8014e26:	2d00      	cmp	r5, #0
 8014e28:	bf08      	it	eq
 8014e2a:	4619      	moveq	r1, r3
 8014e2c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014e2e:	bf18      	it	ne
 8014e30:	2100      	movne	r1, #0
 8014e32:	3301      	adds	r3, #1
 8014e34:	b289      	uxth	r1, r1
 8014e36:	930d      	str	r3, [sp, #52]	@ 0x34
 8014e38:	e694      	b.n	8014b64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 8014e3a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8014e3e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8014e42:	1b2d      	subs	r5, r5, r4
 8014e44:	b2ad      	uxth	r5, r5
 8014e46:	2d00      	cmp	r5, #0
 8014e48:	bf18      	it	ne
 8014e4a:	2400      	movne	r4, #0
 8014e4c:	e740      	b.n	8014cd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8014e4e:	4b04      	ldr	r3, [pc, #16]	@ (8014e60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8014e50:	6818      	ldr	r0, [r3, #0]
 8014e52:	6803      	ldr	r3, [r0, #0]
 8014e54:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014e56:	4798      	blx	r3
 8014e58:	b01d      	add	sp, #116	@ 0x74
 8014e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e5e:	bf00      	nop
 8014e60:	200150ac 	.word	0x200150ac

08014e64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8014e64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e68:	b09f      	sub	sp, #124	@ 0x7c
 8014e6a:	461d      	mov	r5, r3
 8014e6c:	4604      	mov	r4, r0
 8014e6e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8014e70:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8014e74:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8014e78:	920a      	str	r2, [sp, #40]	@ 0x28
 8014e7a:	2a00      	cmp	r2, #0
 8014e7c:	f000 81fe 	beq.w	801527c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8014e80:	6828      	ldr	r0, [r5, #0]
 8014e82:	aa1a      	add	r2, sp, #104	@ 0x68
 8014e84:	6869      	ldr	r1, [r5, #4]
 8014e86:	c203      	stmia	r2!, {r0, r1}
 8014e88:	6818      	ldr	r0, [r3, #0]
 8014e8a:	aa1c      	add	r2, sp, #112	@ 0x70
 8014e8c:	6859      	ldr	r1, [r3, #4]
 8014e8e:	c203      	stmia	r2!, {r0, r1}
 8014e90:	a81a      	add	r0, sp, #104	@ 0x68
 8014e92:	f7f8 ff45 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014e96:	4629      	mov	r1, r5
 8014e98:	a81c      	add	r0, sp, #112	@ 0x70
 8014e9a:	f7f8 ff69 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014e9e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8014ea2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8014ea6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8014eaa:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8014eae:	bfdb      	ittet	le
 8014eb0:	b29a      	uxthle	r2, r3
 8014eb2:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8014eb6:	2201      	movgt	r2, #1
 8014eb8:	fb91 f2f2 	sdivle	r2, r1, r2
 8014ebc:	9201      	str	r2, [sp, #4]
 8014ebe:	9801      	ldr	r0, [sp, #4]
 8014ec0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8014ec4:	9901      	ldr	r1, [sp, #4]
 8014ec6:	fb92 f0f0 	sdiv	r0, r2, r0
 8014eca:	b280      	uxth	r0, r0
 8014ecc:	440e      	add	r6, r1
 8014ece:	9010      	str	r0, [sp, #64]	@ 0x40
 8014ed0:	3e01      	subs	r6, #1
 8014ed2:	9801      	ldr	r0, [sp, #4]
 8014ed4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8014ed6:	fb05 2510 	mls	r5, r5, r0, r2
 8014eda:	fb96 f6f1 	sdiv	r6, r6, r1
 8014ede:	fb15 f503 	smulbb	r5, r5, r3
 8014ee2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8014ee6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8014eea:	3601      	adds	r6, #1
 8014eec:	440d      	add	r5, r1
 8014eee:	4419      	add	r1, r3
 8014ef0:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8014ef4:	b2b6      	uxth	r6, r6
 8014ef6:	441a      	add	r2, r3
 8014ef8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8014efc:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8014f00:	b2ad      	uxth	r5, r5
 8014f02:	9304      	str	r3, [sp, #16]
 8014f04:	4b96      	ldr	r3, [pc, #600]	@ (8015160 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8014f06:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8014f0a:	6818      	ldr	r0, [r3, #0]
 8014f0c:	6803      	ldr	r3, [r0, #0]
 8014f0e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014f10:	4798      	blx	r3
 8014f12:	4b94      	ldr	r3, [pc, #592]	@ (8015164 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 8014f14:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8014f18:	2d00      	cmp	r5, #0
 8014f1a:	881a      	ldrh	r2, [r3, #0]
 8014f1c:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8014f20:	fb02 f707 	mul.w	r7, r2, r7
 8014f24:	fb02 c101 	mla	r1, r2, r1, ip
 8014f28:	9318      	str	r3, [sp, #96]	@ 0x60
 8014f2a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8014f2e:	4b8e      	ldr	r3, [pc, #568]	@ (8015168 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 8014f30:	bf18      	it	ne
 8014f32:	2100      	movne	r1, #0
 8014f34:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8014f38:	eba3 0304 	sub.w	r3, r3, r4
 8014f3c:	920b      	str	r2, [sp, #44]	@ 0x2c
 8014f3e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014f40:	9319      	str	r3, [sp, #100]	@ 0x64
 8014f42:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8014f46:	f106 0204 	add.w	r2, r6, #4
 8014f4a:	9206      	str	r2, [sp, #24]
 8014f4c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8014f4e:	ea6f 0202 	mvn.w	r2, r2
 8014f52:	b2d2      	uxtb	r2, r2
 8014f54:	9215      	str	r2, [sp, #84]	@ 0x54
 8014f56:	9a04      	ldr	r2, [sp, #16]
 8014f58:	bf08      	it	eq
 8014f5a:	4611      	moveq	r1, r2
 8014f5c:	2200      	movs	r2, #0
 8014f5e:	b289      	uxth	r1, r1
 8014f60:	920d      	str	r2, [sp, #52]	@ 0x34
 8014f62:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014f64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014f66:	fa12 f383 	uxtah	r3, r2, r3
 8014f6a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014f6c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8014f70:	3304      	adds	r3, #4
 8014f72:	9307      	str	r3, [sp, #28]
 8014f74:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014f76:	455b      	cmp	r3, fp
 8014f78:	f240 817b 	bls.w	8015272 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 8014f7c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8014f80:	f04f 0801 	mov.w	r8, #1
 8014f84:	9a01      	ldr	r2, [sp, #4]
 8014f86:	9807      	ldr	r0, [sp, #28]
 8014f88:	46c4      	mov	ip, r8
 8014f8a:	f8cd 8008 	str.w	r8, [sp, #8]
 8014f8e:	7800      	ldrb	r0, [r0, #0]
 8014f90:	fbb5 f3f3 	udiv	r3, r5, r3
 8014f94:	1ad3      	subs	r3, r2, r3
 8014f96:	9011      	str	r0, [sp, #68]	@ 0x44
 8014f98:	3001      	adds	r0, #1
 8014f9a:	b29b      	uxth	r3, r3
 8014f9c:	9005      	str	r0, [sp, #20]
 8014f9e:	9316      	str	r3, [sp, #88]	@ 0x58
 8014fa0:	9b07      	ldr	r3, [sp, #28]
 8014fa2:	785a      	ldrb	r2, [r3, #1]
 8014fa4:	789b      	ldrb	r3, [r3, #2]
 8014fa6:	021b      	lsls	r3, r3, #8
 8014fa8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8014fac:	9a07      	ldr	r2, [sp, #28]
 8014fae:	78d2      	ldrb	r2, [r2, #3]
 8014fb0:	4313      	orrs	r3, r2
 8014fb2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014fb4:	441a      	add	r2, r3
 8014fb6:	1c50      	adds	r0, r2, #1
 8014fb8:	7852      	ldrb	r2, [r2, #1]
 8014fba:	9003      	str	r0, [sp, #12]
 8014fbc:	0212      	lsls	r2, r2, #8
 8014fbe:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014fc0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8014fc4:	5cc3      	ldrb	r3, [r0, r3]
 8014fc6:	431a      	orrs	r2, r3
 8014fc8:	b293      	uxth	r3, r2
 8014fca:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8014fce:	930c      	str	r3, [sp, #48]	@ 0x30
 8014fd0:	2300      	movs	r3, #0
 8014fd2:	9308      	str	r3, [sp, #32]
 8014fd4:	461a      	mov	r2, r3
 8014fd6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8014fda:	930e      	str	r3, [sp, #56]	@ 0x38
 8014fdc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8014fe0:	930f      	str	r3, [sp, #60]	@ 0x3c
 8014fe2:	2d00      	cmp	r5, #0
 8014fe4:	d07d      	beq.n	80150e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 8014fe6:	45ac      	cmp	ip, r5
 8014fe8:	d26d      	bcs.n	80150c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 8014fea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014fec:	eba5 050c 	sub.w	r5, r5, ip
 8014ff0:	4608      	mov	r0, r1
 8014ff2:	455b      	cmp	r3, fp
 8014ff4:	b2ad      	uxth	r5, r5
 8014ff6:	d802      	bhi.n	8014ffe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 8014ff8:	e071      	b.n	80150de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 8014ffa:	2b00      	cmp	r3, #0
 8014ffc:	d15d      	bne.n	80150ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8014ffe:	9b03      	ldr	r3, [sp, #12]
 8015000:	9a02      	ldr	r2, [sp, #8]
 8015002:	785b      	ldrb	r3, [r3, #1]
 8015004:	f1c2 0207 	rsb	r2, r2, #7
 8015008:	9902      	ldr	r1, [sp, #8]
 801500a:	4093      	lsls	r3, r2
 801500c:	005b      	lsls	r3, r3, #1
 801500e:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8015012:	9b03      	ldr	r3, [sp, #12]
 8015014:	781b      	ldrb	r3, [r3, #0]
 8015016:	410b      	asrs	r3, r1
 8015018:	3101      	adds	r1, #1
 801501a:	b2c9      	uxtb	r1, r1
 801501c:	b2db      	uxtb	r3, r3
 801501e:	2908      	cmp	r1, #8
 8015020:	9102      	str	r1, [sp, #8]
 8015022:	9903      	ldr	r1, [sp, #12]
 8015024:	ea43 0302 	orr.w	r3, r3, r2
 8015028:	bf0c      	ite	eq
 801502a:	3102      	addeq	r1, #2
 801502c:	3101      	addne	r1, #1
 801502e:	b29a      	uxth	r2, r3
 8015030:	bf05      	ittet	eq
 8015032:	9103      	streq	r1, [sp, #12]
 8015034:	2100      	moveq	r1, #0
 8015036:	9103      	strne	r1, [sp, #12]
 8015038:	9102      	streq	r1, [sp, #8]
 801503a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801503c:	4291      	cmp	r1, r2
 801503e:	d30a      	bcc.n	8015056 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8015040:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8015044:	2301      	movs	r3, #1
 8015046:	9905      	ldr	r1, [sp, #20]
 8015048:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801504c:	d30f      	bcc.n	801506e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 801504e:	2100      	movs	r1, #0
 8015050:	4698      	mov	r8, r3
 8015052:	9100      	str	r1, [sp, #0]
 8015054:	e032      	b.n	80150bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 8015056:	9b05      	ldr	r3, [sp, #20]
 8015058:	429a      	cmp	r2, r3
 801505a:	d318      	bcc.n	801508e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 801505c:	eb04 0308 	add.w	r3, r4, r8
 8015060:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8015064:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8015068:	f108 0301 	add.w	r3, r8, #1
 801506c:	b29b      	uxth	r3, r3
 801506e:	9905      	ldr	r1, [sp, #20]
 8015070:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8015074:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8015078:	710e      	strb	r6, [r1, #4]
 801507a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801507c:	80ce      	strh	r6, [r1, #6]
 801507e:	f108 0601 	add.w	r6, r8, #1
 8015082:	714e      	strb	r6, [r1, #5]
 8015084:	9905      	ldr	r1, [sp, #20]
 8015086:	3101      	adds	r1, #1
 8015088:	b289      	uxth	r1, r1
 801508a:	9105      	str	r1, [sp, #20]
 801508c:	e7df      	b.n	801504e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801508e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8015092:	4611      	mov	r1, r2
 8015094:	795b      	ldrb	r3, [r3, #5]
 8015096:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801509a:	4426      	add	r6, r4
 801509c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801509e:	4437      	add	r7, r6
 80150a0:	2f00      	cmp	r7, #0
 80150a2:	dd06      	ble.n	80150b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 80150a4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80150a8:	790f      	ldrb	r7, [r1, #4]
 80150aa:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80150ae:	88c9      	ldrh	r1, [r1, #6]
 80150b0:	e7f4      	b.n	801509c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 80150b2:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80150b6:	b29b      	uxth	r3, r3
 80150b8:	e7c5      	b.n	8015046 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 80150ba:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80150bc:	920c      	str	r2, [sp, #48]	@ 0x30
 80150be:	4601      	mov	r1, r0
 80150c0:	9a00      	ldr	r2, [sp, #0]
 80150c2:	469c      	mov	ip, r3
 80150c4:	e78d      	b.n	8014fe2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 80150c6:	ebac 0305 	sub.w	r3, ip, r5
 80150ca:	1957      	adds	r7, r2, r5
 80150cc:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80150d0:	b2ba      	uxth	r2, r7
 80150d2:	b29b      	uxth	r3, r3
 80150d4:	9200      	str	r2, [sp, #0]
 80150d6:	2500      	movs	r5, #0
 80150d8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80150da:	455a      	cmp	r2, fp
 80150dc:	d88d      	bhi.n	8014ffa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80150de:	4601      	mov	r1, r0
 80150e0:	e748      	b.n	8014f74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 80150e2:	458c      	cmp	ip, r1
 80150e4:	bf27      	ittee	cs
 80150e6:	ebac 0301 	subcs.w	r3, ip, r1
 80150ea:	4628      	movcs	r0, r5
 80150ec:	eba1 000c 	subcc.w	r0, r1, ip
 80150f0:	462b      	movcc	r3, r5
 80150f2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80150f4:	bf27      	ittee	cs
 80150f6:	b29b      	uxthcs	r3, r3
 80150f8:	9109      	strcs	r1, [sp, #36]	@ 0x24
 80150fa:	b280      	uxthcc	r0, r0
 80150fc:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8015100:	2dff      	cmp	r5, #255	@ 0xff
 8015102:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8015104:	eb02 0705 	add.w	r7, r2, r5
 8015108:	b2bd      	uxth	r5, r7
 801510a:	9500      	str	r5, [sp, #0]
 801510c:	d12e      	bne.n	801516c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 801510e:	465e      	mov	r6, fp
 8015110:	9d00      	ldr	r5, [sp, #0]
 8015112:	42aa      	cmp	r2, r5
 8015114:	f040 8083 	bne.w	801521e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 8015118:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801511a:	458c      	cmp	ip, r1
 801511c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8015120:	d3d9      	bcc.n	80150d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8015122:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8015124:	9904      	ldr	r1, [sp, #16]
 8015126:	8812      	ldrh	r2, [r2, #0]
 8015128:	1a52      	subs	r2, r2, r1
 801512a:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801512c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8015130:	9a08      	ldr	r2, [sp, #32]
 8015132:	3201      	adds	r2, #1
 8015134:	428a      	cmp	r2, r1
 8015136:	9208      	str	r2, [sp, #32]
 8015138:	f040 8091 	bne.w	801525e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 801513c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8015140:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8015144:	9b04      	ldr	r3, [sp, #16]
 8015146:	eba5 050c 	sub.w	r5, r5, ip
 801514a:	b2ad      	uxth	r5, r5
 801514c:	2d00      	cmp	r5, #0
 801514e:	bf08      	it	eq
 8015150:	4619      	moveq	r1, r3
 8015152:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015154:	bf18      	it	ne
 8015156:	2100      	movne	r1, #0
 8015158:	3301      	adds	r3, #1
 801515a:	b289      	uxth	r1, r1
 801515c:	930d      	str	r3, [sp, #52]	@ 0x34
 801515e:	e700      	b.n	8014f62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 8015160:	200150ac 	.word	0x200150ac
 8015164:	200150a6 	.word	0x200150a6
 8015168:	fffff7fb 	.word	0xfffff7fb
 801516c:	46d9      	mov	r9, fp
 801516e:	9d00      	ldr	r5, [sp, #0]
 8015170:	42aa      	cmp	r2, r5
 8015172:	d0d1      	beq.n	8015118 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 8015174:	1c55      	adds	r5, r2, #1
 8015176:	4422      	add	r2, r4
 8015178:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801517c:	9a06      	ldr	r2, [sp, #24]
 801517e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015182:	9517      	str	r5, [sp, #92]	@ 0x5c
 8015184:	4472      	add	r2, lr
 8015186:	9212      	str	r2, [sp, #72]	@ 0x48
 8015188:	f8b9 2000 	ldrh.w	r2, [r9]
 801518c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801518e:	1216      	asrs	r6, r2, #8
 8015190:	f897 a002 	ldrb.w	sl, [r7, #2]
 8015194:	10d5      	asrs	r5, r2, #3
 8015196:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8015198:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801519c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80151a0:	00d2      	lsls	r2, r2, #3
 80151a2:	fb1a fa07 	smulbb	sl, sl, r7
 80151a6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80151aa:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80151ac:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80151b0:	b2d2      	uxtb	r2, r2
 80151b2:	fb06 a607 	mla	r6, r6, r7, sl
 80151b6:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80151b8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80151bc:	f897 a001 	ldrb.w	sl, [r7, #1]
 80151c0:	b2b6      	uxth	r6, r6
 80151c2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80151c4:	fb1a fa07 	smulbb	sl, sl, r7
 80151c8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80151ca:	fb05 a507 	mla	r5, r5, r7, sl
 80151ce:	9f06      	ldr	r7, [sp, #24]
 80151d0:	f106 0a01 	add.w	sl, r6, #1
 80151d4:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80151d8:	b2ad      	uxth	r5, r5
 80151da:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80151dc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80151e0:	f105 0a01 	add.w	sl, r5, #1
 80151e4:	fb1e fe07 	smulbb	lr, lr, r7
 80151e8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80151ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80151ee:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80151f2:	fb02 e207 	mla	r2, r2, r7, lr
 80151f6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80151fa:	b292      	uxth	r2, r2
 80151fc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015200:	f102 0e01 	add.w	lr, r2, #1
 8015204:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8015208:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801520c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8015210:	ea4e 0606 	orr.w	r6, lr, r6
 8015214:	ea46 060a 	orr.w	r6, r6, sl
 8015218:	f829 6b02 	strh.w	r6, [r9], #2
 801521c:	e7a7      	b.n	801516e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 801521e:	f102 0e01 	add.w	lr, r2, #1
 8015222:	4422      	add	r2, r4
 8015224:	9f06      	ldr	r7, [sp, #24]
 8015226:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801522a:	9a06      	ldr	r2, [sp, #24]
 801522c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015230:	eb02 0a05 	add.w	sl, r2, r5
 8015234:	4a13      	ldr	r2, [pc, #76]	@ (8015284 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 8015236:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801523a:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801523e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8015242:	00d2      	lsls	r2, r2, #3
 8015244:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015248:	ea49 0202 	orr.w	r2, r9, r2
 801524c:	f817 9005 	ldrb.w	r9, [r7, r5]
 8015250:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8015254:	f826 2b02 	strh.w	r2, [r6], #2
 8015258:	fa1f f28e 	uxth.w	r2, lr
 801525c:	e758      	b.n	8015110 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 801525e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8015262:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8015266:	1a2d      	subs	r5, r5, r0
 8015268:	b2ad      	uxth	r5, r5
 801526a:	2d00      	cmp	r5, #0
 801526c:	bf18      	it	ne
 801526e:	2000      	movne	r0, #0
 8015270:	e732      	b.n	80150d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 8015272:	4b05      	ldr	r3, [pc, #20]	@ (8015288 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 8015274:	6818      	ldr	r0, [r3, #0]
 8015276:	6803      	ldr	r3, [r0, #0]
 8015278:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801527a:	4798      	blx	r3
 801527c:	b01f      	add	sp, #124	@ 0x7c
 801527e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015282:	bf00      	nop
 8015284:	fffff800 	.word	0xfffff800
 8015288:	200150ac 	.word	0x200150ac

0801528c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801528c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015290:	b091      	sub	sp, #68	@ 0x44
 8015292:	469b      	mov	fp, r3
 8015294:	4616      	mov	r6, r2
 8015296:	f9b3 2000 	ldrsh.w	r2, [r3]
 801529a:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801529e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80152a2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 80152a6:	4604      	mov	r4, r0
 80152a8:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 80152ac:	4640      	mov	r0, r8
 80152ae:	460d      	mov	r5, r1
 80152b0:	4659      	mov	r1, fp
 80152b2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80152b6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80152ba:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 80152be:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 80152c2:	f7f5 fb03 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 80152c6:	4631      	mov	r1, r6
 80152c8:	4640      	mov	r0, r8
 80152ca:	f7f5 faff 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 80152ce:	4b74      	ldr	r3, [pc, #464]	@ (80154a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80152d0:	8818      	ldrh	r0, [r3, #0]
 80152d2:	4b74      	ldr	r3, [pc, #464]	@ (80154a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80152d4:	b202      	sxth	r2, r0
 80152d6:	8819      	ldrh	r1, [r3, #0]
 80152d8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80152dc:	b20e      	sxth	r6, r1
 80152de:	2b00      	cmp	r3, #0
 80152e0:	da07      	bge.n	80152f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80152e2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 80152e6:	4463      	add	r3, ip
 80152e8:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80152ec:	2300      	movs	r3, #0
 80152ee:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80152f2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80152f6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80152fa:	1ad2      	subs	r2, r2, r3
 80152fc:	4594      	cmp	ip, r2
 80152fe:	bfc4      	itt	gt
 8015300:	1ac2      	subgt	r2, r0, r3
 8015302:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8015306:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801530a:	2a00      	cmp	r2, #0
 801530c:	da07      	bge.n	801531e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801530e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 8015312:	4462      	add	r2, ip
 8015314:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8015318:	2200      	movs	r2, #0
 801531a:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801531e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 8015322:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8015326:	eba6 060a 	sub.w	r6, r6, sl
 801532a:	42b2      	cmp	r2, r6
 801532c:	bfc4      	itt	gt
 801532e:	eba1 020a 	subgt.w	r2, r1, sl
 8015332:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8015336:	4a5c      	ldr	r2, [pc, #368]	@ (80154a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8015338:	7812      	ldrb	r2, [r2, #0]
 801533a:	b9a2      	cbnz	r2, 8015366 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801533c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8015340:	4286      	cmp	r6, r0
 8015342:	4640      	mov	r0, r8
 8015344:	9303      	str	r3, [sp, #12]
 8015346:	bf14      	ite	ne
 8015348:	2600      	movne	r6, #0
 801534a:	2601      	moveq	r6, #1
 801534c:	f7f5 fb01 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015350:	9b03      	ldr	r3, [sp, #12]
 8015352:	b160      	cbz	r0, 801536e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8015354:	2300      	movs	r3, #0
 8015356:	8023      	strh	r3, [r4, #0]
 8015358:	8063      	strh	r3, [r4, #2]
 801535a:	80a3      	strh	r3, [r4, #4]
 801535c:	4620      	mov	r0, r4
 801535e:	80e3      	strh	r3, [r4, #6]
 8015360:	b011      	add	sp, #68	@ 0x44
 8015362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015366:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801536a:	428e      	cmp	r6, r1
 801536c:	e7e9      	b.n	8015342 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801536e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8015372:	a90e      	add	r1, sp, #56	@ 0x38
 8015374:	900e      	str	r0, [sp, #56]	@ 0x38
 8015376:	a80c      	add	r0, sp, #48	@ 0x30
 8015378:	9205      	str	r2, [sp, #20]
 801537a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801537e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8015382:	9206      	str	r2, [sp, #24]
 8015384:	f8bb 2000 	ldrh.w	r2, [fp]
 8015388:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801538c:	1a9b      	subs	r3, r3, r2
 801538e:	b21b      	sxth	r3, r3
 8015390:	9303      	str	r3, [sp, #12]
 8015392:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8015396:	f8df b118 	ldr.w	fp, [pc, #280]	@ 80154b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801539a:	ebaa 0a03 	sub.w	sl, sl, r3
 801539e:	fa0f f38a 	sxth.w	r3, sl
 80153a2:	9304      	str	r3, [sp, #16]
 80153a4:	9b03      	ldr	r3, [sp, #12]
 80153a6:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 80153aa:	9b04      	ldr	r3, [sp, #16]
 80153ac:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80153b0:	9b05      	ldr	r3, [sp, #20]
 80153b2:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80153b6:	9b06      	ldr	r3, [sp, #24]
 80153b8:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80153bc:	f7f8 fcd8 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80153c0:	4640      	mov	r0, r8
 80153c2:	f7f8 fcad 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80153c6:	a80e      	add	r0, sp, #56	@ 0x38
 80153c8:	f7f8 fcaa 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80153cc:	4b37      	ldr	r3, [pc, #220]	@ (80154ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80153ce:	4628      	mov	r0, r5
 80153d0:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 80153d4:	881b      	ldrh	r3, [r3, #0]
 80153d6:	9307      	str	r3, [sp, #28]
 80153d8:	682b      	ldr	r3, [r5, #0]
 80153da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80153dc:	4798      	blx	r3
 80153de:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 80153e2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 80153e6:	4681      	mov	r9, r0
 80153e8:	f8db 0000 	ldr.w	r0, [fp]
 80153ec:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80153f0:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 80153f2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80153f6:	6803      	ldr	r3, [r0, #0]
 80153f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80153fa:	4798      	blx	r3
 80153fc:	4607      	mov	r7, r0
 80153fe:	f8db 0000 	ldr.w	r0, [fp]
 8015402:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8015406:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801540a:	6803      	ldr	r3, [r0, #0]
 801540c:	9109      	str	r1, [sp, #36]	@ 0x24
 801540e:	9208      	str	r2, [sp, #32]
 8015410:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015412:	4798      	blx	r3
 8015414:	f010 0f01 	tst.w	r0, #1
 8015418:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801541c:	d012      	beq.n	8015444 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801541e:	f8db 0000 	ldr.w	r0, [fp]
 8015422:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8015426:	6803      	ldr	r3, [r0, #0]
 8015428:	9200      	str	r2, [sp, #0]
 801542a:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801542c:	462b      	mov	r3, r5
 801542e:	e898 0006 	ldmia.w	r8, {r1, r2}
 8015432:	47b0      	blx	r6
 8015434:	9b03      	ldr	r3, [sp, #12]
 8015436:	8023      	strh	r3, [r4, #0]
 8015438:	9b04      	ldr	r3, [sp, #16]
 801543a:	8063      	strh	r3, [r4, #2]
 801543c:	9b05      	ldr	r3, [sp, #20]
 801543e:	80a3      	strh	r3, [r4, #4]
 8015440:	9b06      	ldr	r3, [sp, #24]
 8015442:	e78b      	b.n	801535c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8015444:	fb09 f202 	mul.w	r2, r9, r2
 8015448:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801544c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8015450:	440f      	add	r7, r1
 8015452:	b166      	cbz	r6, 801546e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8015454:	9a07      	ldr	r2, [sp, #28]
 8015456:	4592      	cmp	sl, r2
 8015458:	d109      	bne.n	801546e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801545a:	f8db 0000 	ldr.w	r0, [fp]
 801545e:	fb09 f303 	mul.w	r3, r9, r3
 8015462:	4629      	mov	r1, r5
 8015464:	6802      	ldr	r2, [r0, #0]
 8015466:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 8015468:	463a      	mov	r2, r7
 801546a:	47b0      	blx	r6
 801546c:	e7e2      	b.n	8015434 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801546e:	fb0a f303 	mul.w	r3, sl, r3
 8015472:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8015476:	f8df b038 	ldr.w	fp, [pc, #56]	@ 80154b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801547a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801547e:	4545      	cmp	r5, r8
 8015480:	d2d8      	bcs.n	8015434 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8015482:	f8db 0000 	ldr.w	r0, [fp]
 8015486:	4629      	mov	r1, r5
 8015488:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801548c:	4435      	add	r5, r6
 801548e:	6802      	ldr	r2, [r0, #0]
 8015490:	005b      	lsls	r3, r3, #1
 8015492:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 8015496:	463a      	mov	r2, r7
 8015498:	47d0      	blx	sl
 801549a:	444f      	add	r7, r9
 801549c:	e7ef      	b.n	801547e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801549e:	bf00      	nop
 80154a0:	200150a0 	.word	0x200150a0
 80154a4:	200150a2 	.word	0x200150a2
 80154a8:	200150a4 	.word	0x200150a4
 80154ac:	200150a6 	.word	0x200150a6
 80154b0:	200150ac 	.word	0x200150ac

080154b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80154b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80154b6:	4606      	mov	r6, r0
 80154b8:	b087      	sub	sp, #28
 80154ba:	460c      	mov	r4, r1
 80154bc:	4617      	mov	r7, r2
 80154be:	461d      	mov	r5, r3
 80154c0:	b333      	cbz	r3, 8015510 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80154c2:	4608      	mov	r0, r1
 80154c4:	f7f5 fa45 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 80154c8:	bb10      	cbnz	r0, 8015510 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80154ca:	6820      	ldr	r0, [r4, #0]
 80154cc:	ab04      	add	r3, sp, #16
 80154ce:	6861      	ldr	r1, [r4, #4]
 80154d0:	4c1b      	ldr	r4, [pc, #108]	@ (8015540 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80154d2:	c303      	stmia	r3!, {r0, r1}
 80154d4:	a804      	add	r0, sp, #16
 80154d6:	f7f8 fc23 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80154da:	6820      	ldr	r0, [r4, #0]
 80154dc:	6803      	ldr	r3, [r0, #0]
 80154de:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80154e0:	4798      	blx	r3
 80154e2:	2dff      	cmp	r5, #255	@ 0xff
 80154e4:	d016      	beq.n	8015514 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80154e6:	f010 0f08 	tst.w	r0, #8
 80154ea:	6820      	ldr	r0, [r4, #0]
 80154ec:	d015      	beq.n	801551a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80154ee:	2400      	movs	r4, #0
 80154f0:	6801      	ldr	r1, [r0, #0]
 80154f2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80154f6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80154fa:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80154fe:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8015502:	9401      	str	r4, [sp, #4]
 8015504:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8015508:	9400      	str	r4, [sp, #0]
 801550a:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 801550c:	4639      	mov	r1, r7
 801550e:	47a0      	blx	r4
 8015510:	b007      	add	sp, #28
 8015512:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015514:	f010 0f02 	tst.w	r0, #2
 8015518:	e7e7      	b.n	80154ea <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801551a:	6803      	ldr	r3, [r0, #0]
 801551c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801551e:	4798      	blx	r3
 8015520:	4b08      	ldr	r3, [pc, #32]	@ (8015544 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8015522:	4601      	mov	r1, r0
 8015524:	4630      	mov	r0, r6
 8015526:	881a      	ldrh	r2, [r3, #0]
 8015528:	6833      	ldr	r3, [r6, #0]
 801552a:	e9cd 7500 	strd	r7, r5, [sp]
 801552e:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8015530:	ab04      	add	r3, sp, #16
 8015532:	47a8      	blx	r5
 8015534:	6820      	ldr	r0, [r4, #0]
 8015536:	6803      	ldr	r3, [r0, #0]
 8015538:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801553a:	4798      	blx	r3
 801553c:	e7e8      	b.n	8015510 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801553e:	bf00      	nop
 8015540:	200150ac 	.word	0x200150ac
 8015544:	200150a6 	.word	0x200150a6

08015548 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8015548:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801554c:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8015550:	4688      	mov	r8, r1
 8015552:	4614      	mov	r4, r2
 8015554:	461d      	mov	r5, r3
 8015556:	9e08      	ldr	r6, [sp, #32]
 8015558:	2f00      	cmp	r7, #0
 801555a:	f000 80ab 	beq.w	80156b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801555e:	4618      	mov	r0, r3
 8015560:	f7f5 f9f7 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015564:	2800      	cmp	r0, #0
 8015566:	f040 80a5 	bne.w	80156b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801556a:	f9b5 1000 	ldrsh.w	r1, [r5]
 801556e:	2fff      	cmp	r7, #255	@ 0xff
 8015570:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015574:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8015578:	fb04 1303 	mla	r3, r4, r3, r1
 801557c:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8015580:	eba4 0200 	sub.w	r2, r4, r0
 8015584:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8015588:	fb04 f505 	mul.w	r5, r4, r5
 801558c:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8015590:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8015594:	d04a      	beq.n	801562c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8015596:	b2bc      	uxth	r4, r7
 8015598:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801559c:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80155a0:	fa5f f788 	uxtb.w	r7, r8
 80155a4:	b2f3      	uxtb	r3, r6
 80155a6:	0040      	lsls	r0, r0, #1
 80155a8:	fb0e fe04 	mul.w	lr, lr, r4
 80155ac:	4367      	muls	r7, r4
 80155ae:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80155b2:	4363      	muls	r3, r4
 80155b4:	fa1f fc8c 	uxth.w	ip, ip
 80155b8:	42a9      	cmp	r1, r5
 80155ba:	d27b      	bcs.n	80156b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80155bc:	eb01 0900 	add.w	r9, r1, r0
 80155c0:	4549      	cmp	r1, r9
 80155c2:	d231      	bcs.n	8015628 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 80155c4:	880a      	ldrh	r2, [r1, #0]
 80155c6:	1214      	asrs	r4, r2, #8
 80155c8:	10d6      	asrs	r6, r2, #3
 80155ca:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80155ce:	00d2      	lsls	r2, r2, #3
 80155d0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80155d4:	b2d2      	uxtb	r2, r2
 80155d6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80155da:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80155de:	fb14 f40c 	smulbb	r4, r4, ip
 80155e2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80155e6:	fb12 f20c 	smulbb	r2, r2, ip
 80155ea:	fb16 f60c 	smulbb	r6, r6, ip
 80155ee:	4474      	add	r4, lr
 80155f0:	441a      	add	r2, r3
 80155f2:	b2a4      	uxth	r4, r4
 80155f4:	443e      	add	r6, r7
 80155f6:	b292      	uxth	r2, r2
 80155f8:	f104 0a01 	add.w	sl, r4, #1
 80155fc:	b2b6      	uxth	r6, r6
 80155fe:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8015602:	f102 0a01 	add.w	sl, r2, #1
 8015606:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801560a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801560e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015612:	4322      	orrs	r2, r4
 8015614:	1c74      	adds	r4, r6, #1
 8015616:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801561a:	0976      	lsrs	r6, r6, #5
 801561c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015620:	4332      	orrs	r2, r6
 8015622:	f821 2b02 	strh.w	r2, [r1], #2
 8015626:	e7cb      	b.n	80155c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8015628:	4441      	add	r1, r8
 801562a:	e7c5      	b.n	80155b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 801562c:	0973      	lsrs	r3, r6, #5
 801562e:	4f22      	ldr	r7, [pc, #136]	@ (80156b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 8015630:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8015634:	ea08 0707 	and.w	r7, r8, r7
 8015638:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801563c:	433b      	orrs	r3, r7
 801563e:	07e7      	lsls	r7, r4, #31
 8015640:	ea43 0306 	orr.w	r3, r3, r6
 8015644:	b29b      	uxth	r3, r3
 8015646:	d50b      	bpl.n	8015660 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 8015648:	0040      	lsls	r0, r0, #1
 801564a:	0052      	lsls	r2, r2, #1
 801564c:	42a9      	cmp	r1, r5
 801564e:	d231      	bcs.n	80156b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8015650:	180c      	adds	r4, r1, r0
 8015652:	42a1      	cmp	r1, r4
 8015654:	d202      	bcs.n	801565c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8015656:	f821 3b02 	strh.w	r3, [r1], #2
 801565a:	e7fa      	b.n	8015652 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 801565c:	4411      	add	r1, r2
 801565e:	e7f5      	b.n	801564c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 8015660:	078e      	lsls	r6, r1, #30
 8015662:	d008      	beq.n	8015676 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 8015664:	0066      	lsls	r6, r4, #1
 8015666:	460a      	mov	r2, r1
 8015668:	42aa      	cmp	r2, r5
 801566a:	d202      	bcs.n	8015672 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801566c:	8013      	strh	r3, [r2, #0]
 801566e:	4432      	add	r2, r6
 8015670:	e7fa      	b.n	8015668 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 8015672:	3102      	adds	r1, #2
 8015674:	3801      	subs	r0, #1
 8015676:	07c2      	lsls	r2, r0, #31
 8015678:	d50b      	bpl.n	8015692 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 801567a:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801567e:	0066      	lsls	r6, r4, #1
 8015680:	3a01      	subs	r2, #1
 8015682:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8015686:	42aa      	cmp	r2, r5
 8015688:	d202      	bcs.n	8015690 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801568a:	8013      	strh	r3, [r2, #0]
 801568c:	4432      	add	r2, r6
 801568e:	e7fa      	b.n	8015686 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 8015690:	3801      	subs	r0, #1
 8015692:	b178      	cbz	r0, 80156b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8015694:	1040      	asrs	r0, r0, #1
 8015696:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801569a:	0080      	lsls	r0, r0, #2
 801569c:	0064      	lsls	r4, r4, #1
 801569e:	42a9      	cmp	r1, r5
 80156a0:	d208      	bcs.n	80156b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80156a2:	180e      	adds	r6, r1, r0
 80156a4:	460a      	mov	r2, r1
 80156a6:	42b2      	cmp	r2, r6
 80156a8:	d202      	bcs.n	80156b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80156aa:	f842 3b04 	str.w	r3, [r2], #4
 80156ae:	e7fa      	b.n	80156a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 80156b0:	4421      	add	r1, r4
 80156b2:	e7f4      	b.n	801569e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 80156b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80156b8:	00fff800 	.word	0x00fff800

080156bc <_ZN8touchgfx8LCD16bppC1Ev>:
 80156bc:	2200      	movs	r2, #0
 80156be:	4912      	ldr	r1, [pc, #72]	@ (8015708 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 80156c0:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80156c4:	6001      	str	r1, [r0, #0]
 80156c6:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80156ca:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80156ce:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80156d2:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 80156d6:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 80156da:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 80156de:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 80156e2:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 80156e6:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 80156ea:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 80156ee:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 80156f2:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 80156f6:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 80156fa:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 80156fe:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8015702:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 8015706:	4770      	bx	lr
 8015708:	080219d4 	.word	0x080219d4

0801570c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801570c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015710:	b08d      	sub	sp, #52	@ 0x34
 8015712:	460d      	mov	r5, r1
 8015714:	4604      	mov	r4, r0
 8015716:	4699      	mov	r9, r3
 8015718:	6808      	ldr	r0, [r1, #0]
 801571a:	ab08      	add	r3, sp, #32
 801571c:	6849      	ldr	r1, [r1, #4]
 801571e:	c303      	stmia	r3!, {r0, r1}
 8015720:	6810      	ldr	r0, [r2, #0]
 8015722:	ab0a      	add	r3, sp, #40	@ 0x28
 8015724:	6851      	ldr	r1, [r2, #4]
 8015726:	c303      	stmia	r3!, {r0, r1}
 8015728:	a808      	add	r0, sp, #32
 801572a:	f7f8 faf9 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801572e:	4629      	mov	r1, r5
 8015730:	a80a      	add	r0, sp, #40	@ 0x28
 8015732:	4d67      	ldr	r5, [pc, #412]	@ (80158d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8015734:	f7f8 fb1c 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015738:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801573c:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8015740:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8015744:	6828      	ldr	r0, [r5, #0]
 8015746:	fb11 2103 	smlabb	r1, r1, r3, r2
 801574a:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801574e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8015752:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8015756:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801575a:	440a      	add	r2, r1
 801575c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8015760:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8015764:	4413      	add	r3, r2
 8015766:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801576a:	6803      	ldr	r3, [r0, #0]
 801576c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801576e:	4798      	blx	r3
 8015770:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8015774:	d119      	bne.n	80157aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8015776:	f010 0f20 	tst.w	r0, #32
 801577a:	6828      	ldr	r0, [r5, #0]
 801577c:	d018      	beq.n	80157b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801577e:	2500      	movs	r5, #0
 8015780:	6801      	ldr	r1, [r0, #0]
 8015782:	b2b6      	uxth	r6, r6
 8015784:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8015788:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801578c:	9601      	str	r6, [sp, #4]
 801578e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8015792:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8015796:	9502      	str	r5, [sp, #8]
 8015798:	fa1f f588 	uxth.w	r5, r8
 801579c:	9500      	str	r5, [sp, #0]
 801579e:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 80157a0:	4621      	mov	r1, r4
 80157a2:	47a8      	blx	r5
 80157a4:	b00d      	add	sp, #52	@ 0x34
 80157a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157aa:	f010 0f40 	tst.w	r0, #64	@ 0x40
 80157ae:	e7e4      	b.n	801577a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80157b0:	6803      	ldr	r3, [r0, #0]
 80157b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80157b4:	4798      	blx	r3
 80157b6:	4947      	ldr	r1, [pc, #284]	@ (80158d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80157b8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80157bc:	880b      	ldrh	r3, [r1, #0]
 80157be:	468a      	mov	sl, r1
 80157c0:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 80157c4:	fb03 5202 	mla	r2, r3, r2, r5
 80157c8:	4373      	muls	r3, r6
 80157ca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80157ce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80157d2:	9307      	str	r3, [sp, #28]
 80157d4:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80157d8:	9306      	str	r3, [sp, #24]
 80157da:	9b07      	ldr	r3, [sp, #28]
 80157dc:	4298      	cmp	r0, r3
 80157de:	d270      	bcs.n	80158c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80157e0:	9b06      	ldr	r3, [sp, #24]
 80157e2:	4621      	mov	r1, r4
 80157e4:	eb00 0b03 	add.w	fp, r0, r3
 80157e8:	4558      	cmp	r0, fp
 80157ea:	d25d      	bcs.n	80158a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80157ec:	f851 4b04 	ldr.w	r4, [r1], #4
 80157f0:	0e23      	lsrs	r3, r4, #24
 80157f2:	d014      	beq.n	801581e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80157f4:	2bff      	cmp	r3, #255	@ 0xff
 80157f6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80157fa:	d112      	bne.n	8015822 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80157fc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8015800:	d10f      	bne.n	8015822 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8015802:	0963      	lsrs	r3, r4, #5
 8015804:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8015808:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801580c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8015810:	f02c 0c07 	bic.w	ip, ip, #7
 8015814:	ea43 0c0c 	orr.w	ip, r3, ip
 8015818:	ea4c 0404 	orr.w	r4, ip, r4
 801581c:	8004      	strh	r4, [r0, #0]
 801581e:	3002      	adds	r0, #2
 8015820:	e7e2      	b.n	80157e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8015822:	fb09 f303 	mul.w	r3, r9, r3
 8015826:	8807      	ldrh	r7, [r0, #0]
 8015828:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801582c:	fa5f fc8c 	uxtb.w	ip, ip
 8015830:	1c5a      	adds	r2, r3, #1
 8015832:	123e      	asrs	r6, r7, #8
 8015834:	10fd      	asrs	r5, r7, #3
 8015836:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801583a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801583e:	00ff      	lsls	r7, r7, #3
 8015840:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015844:	1212      	asrs	r2, r2, #8
 8015846:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801584a:	b293      	uxth	r3, r2
 801584c:	43d2      	mvns	r2, r2
 801584e:	b2ff      	uxtb	r7, r7
 8015850:	fb1e fe03 	smulbb	lr, lr, r3
 8015854:	b2d2      	uxtb	r2, r2
 8015856:	fb1c fc03 	smulbb	ip, ip, r3
 801585a:	b2e4      	uxtb	r4, r4
 801585c:	fb06 e602 	mla	r6, r6, r2, lr
 8015860:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8015864:	fb14 f403 	smulbb	r4, r4, r3
 8015868:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801586c:	b2b6      	uxth	r6, r6
 801586e:	fb05 c502 	mla	r5, r5, r2, ip
 8015872:	fb07 4702 	mla	r7, r7, r2, r4
 8015876:	f106 0e01 	add.w	lr, r6, #1
 801587a:	b2ad      	uxth	r5, r5
 801587c:	b2bf      	uxth	r7, r7
 801587e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8015882:	f105 0c01 	add.w	ip, r5, #1
 8015886:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801588a:	1c7e      	adds	r6, r7, #1
 801588c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8015890:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8015894:	096d      	lsrs	r5, r5, #5
 8015896:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801589a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801589e:	ea46 060e 	orr.w	r6, r6, lr
 80158a2:	432e      	orrs	r6, r5
 80158a4:	8006      	strh	r6, [r0, #0]
 80158a6:	e7ba      	b.n	801581e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80158a8:	f8ba 3000 	ldrh.w	r3, [sl]
 80158ac:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 80158b0:	eba3 0308 	sub.w	r3, r3, r8
 80158b4:	eba4 0408 	sub.w	r4, r4, r8
 80158b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80158bc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80158c0:	e78b      	b.n	80157da <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80158c2:	4b03      	ldr	r3, [pc, #12]	@ (80158d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80158c4:	6818      	ldr	r0, [r3, #0]
 80158c6:	6803      	ldr	r3, [r0, #0]
 80158c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80158ca:	4798      	blx	r3
 80158cc:	e76a      	b.n	80157a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80158ce:	bf00      	nop
 80158d0:	200150ac 	.word	0x200150ac
 80158d4:	200150a6 	.word	0x200150a6

080158d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80158d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80158dc:	b085      	sub	sp, #20
 80158de:	6810      	ldr	r0, [r2, #0]
 80158e0:	460c      	mov	r4, r1
 80158e2:	6851      	ldr	r1, [r2, #4]
 80158e4:	466d      	mov	r5, sp
 80158e6:	4616      	mov	r6, r2
 80158e8:	c503      	stmia	r5!, {r0, r1}
 80158ea:	6818      	ldr	r0, [r3, #0]
 80158ec:	6859      	ldr	r1, [r3, #4]
 80158ee:	c503      	stmia	r5!, {r0, r1}
 80158f0:	4668      	mov	r0, sp
 80158f2:	4d2e      	ldr	r5, [pc, #184]	@ (80159ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80158f4:	f7f8 fa14 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80158f8:	4631      	mov	r1, r6
 80158fa:	a802      	add	r0, sp, #8
 80158fc:	4e2c      	ldr	r6, [pc, #176]	@ (80159b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80158fe:	f7f8 fa37 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015902:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8015906:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801590a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801590e:	6828      	ldr	r0, [r5, #0]
 8015910:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015914:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8015918:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801591c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8015920:	f8bd 1000 	ldrh.w	r1, [sp]
 8015924:	440a      	add	r2, r1
 8015926:	f8ad 2008 	strh.w	r2, [sp, #8]
 801592a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801592e:	4413      	add	r3, r2
 8015930:	f8ad 300a 	strh.w	r3, [sp, #10]
 8015934:	6803      	ldr	r3, [r0, #0]
 8015936:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015938:	4798      	blx	r3
 801593a:	8833      	ldrh	r3, [r6, #0]
 801593c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8015940:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8015944:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8015948:	f8df e068 	ldr.w	lr, [pc, #104]	@ 80159b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801594c:	fb03 1202 	mla	r2, r3, r2, r1
 8015950:	fb08 f303 	mul.w	r3, r8, r3
 8015954:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015958:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801595c:	4298      	cmp	r0, r3
 801595e:	d21d      	bcs.n	801599c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8015960:	eb00 080c 	add.w	r8, r0, ip
 8015964:	4540      	cmp	r0, r8
 8015966:	d20f      	bcs.n	8015988 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8015968:	f854 1b04 	ldr.w	r1, [r4], #4
 801596c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8015970:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8015974:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8015978:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801597c:	ea42 0209 	orr.w	r2, r2, r9
 8015980:	430a      	orrs	r2, r1
 8015982:	f820 2b02 	strh.w	r2, [r0], #2
 8015986:	e7ed      	b.n	8015964 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8015988:	8832      	ldrh	r2, [r6, #0]
 801598a:	1bd2      	subs	r2, r2, r7
 801598c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015990:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8015994:	1bd2      	subs	r2, r2, r7
 8015996:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801599a:	e7df      	b.n	801595c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801599c:	6828      	ldr	r0, [r5, #0]
 801599e:	6803      	ldr	r3, [r0, #0]
 80159a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80159a2:	4798      	blx	r3
 80159a4:	b005      	add	sp, #20
 80159a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80159aa:	bf00      	nop
 80159ac:	200150ac 	.word	0x200150ac
 80159b0:	200150a6 	.word	0x200150a6
 80159b4:	fffff800 	.word	0xfffff800

080159b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80159b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80159bc:	b08e      	sub	sp, #56	@ 0x38
 80159be:	460e      	mov	r6, r1
 80159c0:	4604      	mov	r4, r0
 80159c2:	461d      	mov	r5, r3
 80159c4:	6808      	ldr	r0, [r1, #0]
 80159c6:	ab0a      	add	r3, sp, #40	@ 0x28
 80159c8:	6849      	ldr	r1, [r1, #4]
 80159ca:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 8015ba0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80159ce:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 8015ba4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80159d2:	c303      	stmia	r3!, {r0, r1}
 80159d4:	6810      	ldr	r0, [r2, #0]
 80159d6:	ab0c      	add	r3, sp, #48	@ 0x30
 80159d8:	6851      	ldr	r1, [r2, #4]
 80159da:	c303      	stmia	r3!, {r0, r1}
 80159dc:	a80a      	add	r0, sp, #40	@ 0x28
 80159de:	f7f8 f99f 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80159e2:	4631      	mov	r1, r6
 80159e4:	a80c      	add	r0, sp, #48	@ 0x30
 80159e6:	f7f8 f9c3 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80159ea:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80159ee:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80159f2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80159f6:	f8d8 0000 	ldr.w	r0, [r8]
 80159fa:	fb11 2103 	smlabb	r1, r1, r3, r2
 80159fe:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8015a02:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8015a06:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8015a0a:	440c      	add	r4, r1
 8015a0c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8015a10:	440a      	add	r2, r1
 8015a12:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8015a16:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8015a1a:	4413      	add	r3, r2
 8015a1c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015a20:	6803      	ldr	r3, [r0, #0]
 8015a22:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015a24:	4798      	blx	r3
 8015a26:	2dff      	cmp	r5, #255	@ 0xff
 8015a28:	d124      	bne.n	8015a74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8015a2a:	f010 0f01 	tst.w	r0, #1
 8015a2e:	f8d8 0000 	ldr.w	r0, [r8]
 8015a32:	d022      	beq.n	8015a7a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8015a34:	2100      	movs	r1, #0
 8015a36:	f04f 0e01 	mov.w	lr, #1
 8015a3a:	f8d0 c000 	ldr.w	ip, [r0]
 8015a3e:	b2b6      	uxth	r6, r6
 8015a40:	f8cd e018 	str.w	lr, [sp, #24]
 8015a44:	b2bf      	uxth	r7, r7
 8015a46:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8015a4a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8015a4e:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8015a52:	f8b9 e000 	ldrh.w	lr, [r9]
 8015a56:	9503      	str	r5, [sp, #12]
 8015a58:	9601      	str	r6, [sp, #4]
 8015a5a:	9700      	str	r7, [sp, #0]
 8015a5c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8015a60:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8015a64:	9102      	str	r1, [sp, #8]
 8015a66:	4621      	mov	r1, r4
 8015a68:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 8015a6c:	47a8      	blx	r5
 8015a6e:	b00e      	add	sp, #56	@ 0x38
 8015a70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015a74:	f010 0f04 	tst.w	r0, #4
 8015a78:	e7d9      	b.n	8015a2e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8015a7a:	6803      	ldr	r3, [r0, #0]
 8015a7c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015a7e:	4798      	blx	r3
 8015a80:	f8b9 3000 	ldrh.w	r3, [r9]
 8015a84:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015a88:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8015a8c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8015a90:	435e      	muls	r6, r3
 8015a92:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8015a96:	2dff      	cmp	r5, #255	@ 0xff
 8015a98:	fb03 1202 	mla	r2, r3, r2, r1
 8015a9c:	ebac 0c07 	sub.w	ip, ip, r7
 8015aa0:	eba3 0707 	sub.w	r7, r3, r7
 8015aa4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015aa8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8015aac:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015ab0:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8015ab4:	d049      	beq.n	8015b4a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8015ab6:	43eb      	mvns	r3, r5
 8015ab8:	fa1f f985 	uxth.w	r9, r5
 8015abc:	b2db      	uxtb	r3, r3
 8015abe:	42b0      	cmp	r0, r6
 8015ac0:	d266      	bcs.n	8015b90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8015ac2:	eb00 0a0e 	add.w	sl, r0, lr
 8015ac6:	4550      	cmp	r0, sl
 8015ac8:	4621      	mov	r1, r4
 8015aca:	f104 0403 	add.w	r4, r4, #3
 8015ace:	d25b      	bcs.n	8015b88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8015ad0:	8802      	ldrh	r2, [r0, #0]
 8015ad2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8015ad6:	ea4f 2822 	mov.w	r8, r2, asr #8
 8015ada:	fb11 f109 	smulbb	r1, r1, r9
 8015ade:	10d5      	asrs	r5, r2, #3
 8015ae0:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8015ae4:	00d2      	lsls	r2, r2, #3
 8015ae6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015aea:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8015aee:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8015af2:	fb08 1803 	mla	r8, r8, r3, r1
 8015af6:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8015afa:	b2d2      	uxtb	r2, r2
 8015afc:	fb11 f109 	smulbb	r1, r1, r9
 8015b00:	fa1f f888 	uxth.w	r8, r8
 8015b04:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8015b08:	fb05 1503 	mla	r5, r5, r3, r1
 8015b0c:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8015b10:	fb11 f109 	smulbb	r1, r1, r9
 8015b14:	b2ad      	uxth	r5, r5
 8015b16:	fb02 1203 	mla	r2, r2, r3, r1
 8015b1a:	f108 0101 	add.w	r1, r8, #1
 8015b1e:	b292      	uxth	r2, r2
 8015b20:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8015b24:	1c51      	adds	r1, r2, #1
 8015b26:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8015b2a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015b2e:	1c69      	adds	r1, r5, #1
 8015b30:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8015b34:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015b38:	096d      	lsrs	r5, r5, #5
 8015b3a:	ea42 0208 	orr.w	r2, r2, r8
 8015b3e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015b42:	432a      	orrs	r2, r5
 8015b44:	f820 2b02 	strh.w	r2, [r0], #2
 8015b48:	e7bd      	b.n	8015ac6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8015b4a:	4a14      	ldr	r2, [pc, #80]	@ (8015b9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8015b4c:	42b0      	cmp	r0, r6
 8015b4e:	d21f      	bcs.n	8015b90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8015b50:	eb00 050e 	add.w	r5, r0, lr
 8015b54:	42a8      	cmp	r0, r5
 8015b56:	4621      	mov	r1, r4
 8015b58:	f104 0403 	add.w	r4, r4, #3
 8015b5c:	d210      	bcs.n	8015b80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8015b5e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8015b62:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8015b66:	00db      	lsls	r3, r3, #3
 8015b68:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8015b6c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8015b70:	430b      	orrs	r3, r1
 8015b72:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8015b76:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8015b7a:	f820 3b02 	strh.w	r3, [r0], #2
 8015b7e:	e7e9      	b.n	8015b54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8015b80:	4438      	add	r0, r7
 8015b82:	eb01 040c 	add.w	r4, r1, ip
 8015b86:	e7e1      	b.n	8015b4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8015b88:	4438      	add	r0, r7
 8015b8a:	eb01 040c 	add.w	r4, r1, ip
 8015b8e:	e796      	b.n	8015abe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8015b90:	4b03      	ldr	r3, [pc, #12]	@ (8015ba0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8015b92:	6818      	ldr	r0, [r3, #0]
 8015b94:	6803      	ldr	r3, [r0, #0]
 8015b96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015b98:	4798      	blx	r3
 8015b9a:	e768      	b.n	8015a6e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8015b9c:	fffff800 	.word	0xfffff800
 8015ba0:	200150ac 	.word	0x200150ac
 8015ba4:	200150a6 	.word	0x200150a6

08015ba8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8015ba8:	b4f0      	push	{r4, r5, r6, r7}
 8015baa:	4616      	mov	r6, r2
 8015bac:	461c      	mov	r4, r3
 8015bae:	460d      	mov	r5, r1
 8015bb0:	9a04      	ldr	r2, [sp, #16]
 8015bb2:	2e01      	cmp	r6, #1
 8015bb4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015bb8:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8015bbc:	d012      	beq.n	8015be4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8015bbe:	d303      	bcc.n	8015bc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8015bc0:	2e02      	cmp	r6, #2
 8015bc2:	d00a      	beq.n	8015bda <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8015bc4:	bcf0      	pop	{r4, r5, r6, r7}
 8015bc6:	4770      	bx	lr
 8015bc8:	6805      	ldr	r5, [r0, #0]
 8015bca:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8015bce:	68ed      	ldr	r5, [r5, #12]
 8015bd0:	4613      	mov	r3, r2
 8015bd2:	4622      	mov	r2, r4
 8015bd4:	46ac      	mov	ip, r5
 8015bd6:	bcf0      	pop	{r4, r5, r6, r7}
 8015bd8:	4760      	bx	ip
 8015bda:	4621      	mov	r1, r4
 8015bdc:	4628      	mov	r0, r5
 8015bde:	bcf0      	pop	{r4, r5, r6, r7}
 8015be0:	f7ff bd94 	b.w	801570c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8015be4:	4621      	mov	r1, r4
 8015be6:	4628      	mov	r0, r5
 8015be8:	bcf0      	pop	{r4, r5, r6, r7}
 8015bea:	f7ff bee5 	b.w	80159b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08015bf0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8015bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015bf4:	b093      	sub	sp, #76	@ 0x4c
 8015bf6:	4681      	mov	r9, r0
 8015bf8:	4688      	mov	r8, r1
 8015bfa:	6810      	ldr	r0, [r2, #0]
 8015bfc:	6851      	ldr	r1, [r2, #4]
 8015bfe:	ac0e      	add	r4, sp, #56	@ 0x38
 8015c00:	4616      	mov	r6, r2
 8015c02:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8015c06:	4f6b      	ldr	r7, [pc, #428]	@ (8015db4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8015c08:	c403      	stmia	r4!, {r0, r1}
 8015c0a:	6818      	ldr	r0, [r3, #0]
 8015c0c:	ac10      	add	r4, sp, #64	@ 0x40
 8015c0e:	6859      	ldr	r1, [r3, #4]
 8015c10:	c403      	stmia	r4!, {r0, r1}
 8015c12:	a80e      	add	r0, sp, #56	@ 0x38
 8015c14:	f7f8 f884 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015c18:	4631      	mov	r1, r6
 8015c1a:	a810      	add	r0, sp, #64	@ 0x40
 8015c1c:	4e66      	ldr	r6, [pc, #408]	@ (8015db8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8015c1e:	f7f8 f8a7 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015c22:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8015c26:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8015c2a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8015c2e:	6830      	ldr	r0, [r6, #0]
 8015c30:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015c34:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8015c38:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8015c3c:	4489      	add	r9, r1
 8015c3e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8015c42:	440a      	add	r2, r1
 8015c44:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8015c48:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8015c4c:	4413      	add	r3, r2
 8015c4e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8015c52:	6803      	ldr	r3, [r0, #0]
 8015c54:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015c56:	4798      	blx	r3
 8015c58:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8015c5c:	6830      	ldr	r0, [r6, #0]
 8015c5e:	d01d      	beq.n	8015c9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8015c60:	2200      	movs	r2, #0
 8015c62:	6801      	ldr	r1, [r0, #0]
 8015c64:	b2a4      	uxth	r4, r4
 8015c66:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8015c6a:	b2ad      	uxth	r5, r5
 8015c6c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8015c70:	220b      	movs	r2, #11
 8015c72:	9207      	str	r2, [sp, #28]
 8015c74:	883a      	ldrh	r2, [r7, #0]
 8015c76:	9502      	str	r5, [sp, #8]
 8015c78:	9206      	str	r2, [sp, #24]
 8015c7a:	2201      	movs	r2, #1
 8015c7c:	9401      	str	r4, [sp, #4]
 8015c7e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8015c82:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8015c86:	9203      	str	r2, [sp, #12]
 8015c88:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8015c8c:	9200      	str	r2, [sp, #0]
 8015c8e:	4642      	mov	r2, r8
 8015c90:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 8015c92:	4649      	mov	r1, r9
 8015c94:	47a0      	blx	r4
 8015c96:	b013      	add	sp, #76	@ 0x4c
 8015c98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c9c:	6803      	ldr	r3, [r0, #0]
 8015c9e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015ca0:	4798      	blx	r3
 8015ca2:	883b      	ldrh	r3, [r7, #0]
 8015ca4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8015ca8:	f04f 0e04 	mov.w	lr, #4
 8015cac:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8015cb0:	435d      	muls	r5, r3
 8015cb2:	fb03 1202 	mla	r2, r3, r2, r1
 8015cb6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015cba:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8015cbe:	920c      	str	r2, [sp, #48]	@ 0x30
 8015cc0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8015cc4:	1b12      	subs	r2, r2, r4
 8015cc6:	920d      	str	r2, [sp, #52]	@ 0x34
 8015cc8:	0062      	lsls	r2, r4, #1
 8015cca:	1b1c      	subs	r4, r3, r4
 8015ccc:	920a      	str	r2, [sp, #40]	@ 0x28
 8015cce:	0063      	lsls	r3, r4, #1
 8015cd0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8015cd2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015cd4:	4298      	cmp	r0, r3
 8015cd6:	d266      	bcs.n	8015da6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8015cd8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015cda:	eb00 0b03 	add.w	fp, r0, r3
 8015cde:	4558      	cmp	r0, fp
 8015ce0:	d25c      	bcs.n	8015d9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8015ce2:	f819 3b01 	ldrb.w	r3, [r9], #1
 8015ce6:	fb1e e303 	smlabb	r3, lr, r3, lr
 8015cea:	f858 2003 	ldr.w	r2, [r8, r3]
 8015cee:	0e11      	lsrs	r1, r2, #24
 8015cf0:	d012      	beq.n	8015d18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8015cf2:	29ff      	cmp	r1, #255	@ 0xff
 8015cf4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8015cf8:	d110      	bne.n	8015d1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8015cfa:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8015cfe:	d10d      	bne.n	8015d1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8015d00:	0953      	lsrs	r3, r2, #5
 8015d02:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8015d06:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015d0a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8015d0e:	f027 0707 	bic.w	r7, r7, #7
 8015d12:	431f      	orrs	r7, r3
 8015d14:	433a      	orrs	r2, r7
 8015d16:	8002      	strh	r2, [r0, #0]
 8015d18:	3002      	adds	r0, #2
 8015d1a:	e7e0      	b.n	8015cde <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8015d1c:	fb0a f101 	mul.w	r1, sl, r1
 8015d20:	8806      	ldrh	r6, [r0, #0]
 8015d22:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8015d26:	b2d2      	uxtb	r2, r2
 8015d28:	1c4b      	adds	r3, r1, #1
 8015d2a:	1235      	asrs	r5, r6, #8
 8015d2c:	10f4      	asrs	r4, r6, #3
 8015d2e:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8015d32:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8015d36:	00f6      	lsls	r6, r6, #3
 8015d38:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8015d3c:	121b      	asrs	r3, r3, #8
 8015d3e:	b2f6      	uxtb	r6, r6
 8015d40:	b299      	uxth	r1, r3
 8015d42:	43db      	mvns	r3, r3
 8015d44:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8015d48:	fb1c fc01 	smulbb	ip, ip, r1
 8015d4c:	b2db      	uxtb	r3, r3
 8015d4e:	fb12 f201 	smulbb	r2, r2, r1
 8015d52:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8015d56:	fb05 c503 	mla	r5, r5, r3, ip
 8015d5a:	b2ff      	uxtb	r7, r7
 8015d5c:	fb06 2203 	mla	r2, r6, r3, r2
 8015d60:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8015d64:	fb17 f701 	smulbb	r7, r7, r1
 8015d68:	b2ad      	uxth	r5, r5
 8015d6a:	b292      	uxth	r2, r2
 8015d6c:	fb04 7403 	mla	r4, r4, r3, r7
 8015d70:	f105 0c01 	add.w	ip, r5, #1
 8015d74:	1c57      	adds	r7, r2, #1
 8015d76:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8015d7a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8015d7e:	b2a4      	uxth	r4, r4
 8015d80:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8015d84:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015d88:	433d      	orrs	r5, r7
 8015d8a:	1c67      	adds	r7, r4, #1
 8015d8c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8015d90:	0964      	lsrs	r4, r4, #5
 8015d92:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8015d96:	4325      	orrs	r5, r4
 8015d98:	8005      	strh	r5, [r0, #0]
 8015d9a:	e7bd      	b.n	8015d18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8015d9c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015d9e:	4418      	add	r0, r3
 8015da0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015da2:	4499      	add	r9, r3
 8015da4:	e795      	b.n	8015cd2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8015da6:	4b04      	ldr	r3, [pc, #16]	@ (8015db8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8015da8:	6818      	ldr	r0, [r3, #0]
 8015daa:	6803      	ldr	r3, [r0, #0]
 8015dac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015dae:	4798      	blx	r3
 8015db0:	e771      	b.n	8015c96 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8015db2:	bf00      	nop
 8015db4:	200150a6 	.word	0x200150a6
 8015db8:	200150ac 	.word	0x200150ac

08015dbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8015dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015dc0:	b087      	sub	sp, #28
 8015dc2:	4680      	mov	r8, r0
 8015dc4:	460d      	mov	r5, r1
 8015dc6:	4614      	mov	r4, r2
 8015dc8:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8015dcc:	2e00      	cmp	r6, #0
 8015dce:	f000 80b9 	beq.w	8015f44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8015dd2:	6810      	ldr	r0, [r2, #0]
 8015dd4:	af02      	add	r7, sp, #8
 8015dd6:	6851      	ldr	r1, [r2, #4]
 8015dd8:	c703      	stmia	r7!, {r0, r1}
 8015dda:	6818      	ldr	r0, [r3, #0]
 8015ddc:	af04      	add	r7, sp, #16
 8015dde:	6859      	ldr	r1, [r3, #4]
 8015de0:	c703      	stmia	r7!, {r0, r1}
 8015de2:	a802      	add	r0, sp, #8
 8015de4:	f7f7 ff9c 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015de8:	4621      	mov	r1, r4
 8015dea:	a804      	add	r0, sp, #16
 8015dec:	f7f7 ffc0 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015df0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015df4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015df8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8015dfc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8015e00:	fb14 2103 	smlabb	r1, r4, r3, r2
 8015e04:	eb08 0401 	add.w	r4, r8, r1
 8015e08:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015e0c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8015e10:	440a      	add	r2, r1
 8015e12:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8015e16:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015e1a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015e1e:	4413      	add	r3, r2
 8015e20:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015e24:	4b49      	ldr	r3, [pc, #292]	@ (8015f4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8015e26:	6818      	ldr	r0, [r3, #0]
 8015e28:	6803      	ldr	r3, [r0, #0]
 8015e2a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015e2c:	4798      	blx	r3
 8015e2e:	4b48      	ldr	r3, [pc, #288]	@ (8015f50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8015e30:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8015e34:	2eff      	cmp	r6, #255	@ 0xff
 8015e36:	881a      	ldrh	r2, [r3, #0]
 8015e38:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8015e3c:	fb02 c101 	mla	r1, r2, r1, ip
 8015e40:	fb02 f207 	mul.w	r2, r2, r7
 8015e44:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015e48:	f105 0104 	add.w	r1, r5, #4
 8015e4c:	461d      	mov	r5, r3
 8015e4e:	d05a      	beq.n	8015f06 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8015e50:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8015e54:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8015e58:	b2b6      	uxth	r6, r6
 8015e5a:	9301      	str	r3, [sp, #4]
 8015e5c:	fa1f fe8e 	uxth.w	lr, lr
 8015e60:	4282      	cmp	r2, r0
 8015e62:	d96a      	bls.n	8015f3a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8015e64:	eb00 0b0a 	add.w	fp, r0, sl
 8015e68:	4583      	cmp	fp, r0
 8015e6a:	d940      	bls.n	8015eee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8015e6c:	8805      	ldrh	r5, [r0, #0]
 8015e6e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8015e72:	122f      	asrs	r7, r5, #8
 8015e74:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8015e78:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015e7c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015e80:	00ed      	lsls	r5, r5, #3
 8015e82:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015e86:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8015e8a:	fb17 f70e 	smulbb	r7, r7, lr
 8015e8e:	b2ed      	uxtb	r5, r5
 8015e90:	fb19 f90e 	smulbb	r9, r9, lr
 8015e94:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015e98:	fb15 f50e 	smulbb	r5, r5, lr
 8015e9c:	fb0c 7c06 	mla	ip, ip, r6, r7
 8015ea0:	10df      	asrs	r7, r3, #3
 8015ea2:	00db      	lsls	r3, r3, #3
 8015ea4:	fa1f fc8c 	uxth.w	ip, ip
 8015ea8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015eac:	b2db      	uxtb	r3, r3
 8015eae:	fb07 9706 	mla	r7, r7, r6, r9
 8015eb2:	f10c 0901 	add.w	r9, ip, #1
 8015eb6:	fb03 5306 	mla	r3, r3, r6, r5
 8015eba:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8015ebe:	b29b      	uxth	r3, r3
 8015ec0:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8015ec4:	b2bf      	uxth	r7, r7
 8015ec6:	f103 0c01 	add.w	ip, r3, #1
 8015eca:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015ece:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015ed2:	ea4c 0c09 	orr.w	ip, ip, r9
 8015ed6:	f107 0901 	add.w	r9, r7, #1
 8015eda:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8015ede:	097f      	lsrs	r7, r7, #5
 8015ee0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8015ee4:	ea4c 0c07 	orr.w	ip, ip, r7
 8015ee8:	f820 cb02 	strh.w	ip, [r0], #2
 8015eec:	e7bc      	b.n	8015e68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8015eee:	9b01      	ldr	r3, [sp, #4]
 8015ef0:	881b      	ldrh	r3, [r3, #0]
 8015ef2:	eba3 0308 	sub.w	r3, r3, r8
 8015ef6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015efa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8015efe:	eba3 0308 	sub.w	r3, r3, r8
 8015f02:	441c      	add	r4, r3
 8015f04:	e7ac      	b.n	8015e60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8015f06:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8015f0a:	4282      	cmp	r2, r0
 8015f0c:	d915      	bls.n	8015f3a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8015f0e:	eb00 060a 	add.w	r6, r0, sl
 8015f12:	4286      	cmp	r6, r0
 8015f14:	d906      	bls.n	8015f24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8015f16:	f814 3b01 	ldrb.w	r3, [r4], #1
 8015f1a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8015f1e:	f820 3b02 	strh.w	r3, [r0], #2
 8015f22:	e7f6      	b.n	8015f12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8015f24:	882b      	ldrh	r3, [r5, #0]
 8015f26:	eba3 0308 	sub.w	r3, r3, r8
 8015f2a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015f2e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8015f32:	eba3 0308 	sub.w	r3, r3, r8
 8015f36:	441c      	add	r4, r3
 8015f38:	e7e7      	b.n	8015f0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8015f3a:	4b04      	ldr	r3, [pc, #16]	@ (8015f4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8015f3c:	6818      	ldr	r0, [r3, #0]
 8015f3e:	6803      	ldr	r3, [r0, #0]
 8015f40:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015f42:	4798      	blx	r3
 8015f44:	b007      	add	sp, #28
 8015f46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f4a:	bf00      	nop
 8015f4c:	200150ac 	.word	0x200150ac
 8015f50:	200150a6 	.word	0x200150a6

08015f54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8015f54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f58:	b091      	sub	sp, #68	@ 0x44
 8015f5a:	4680      	mov	r8, r0
 8015f5c:	460f      	mov	r7, r1
 8015f5e:	4614      	mov	r4, r2
 8015f60:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8015f64:	2d00      	cmp	r5, #0
 8015f66:	d051      	beq.n	801600c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8015f68:	6810      	ldr	r0, [r2, #0]
 8015f6a:	ae0c      	add	r6, sp, #48	@ 0x30
 8015f6c:	6851      	ldr	r1, [r2, #4]
 8015f6e:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8016170 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8015f72:	c603      	stmia	r6!, {r0, r1}
 8015f74:	6818      	ldr	r0, [r3, #0]
 8015f76:	ae0e      	add	r6, sp, #56	@ 0x38
 8015f78:	6859      	ldr	r1, [r3, #4]
 8015f7a:	c603      	stmia	r6!, {r0, r1}
 8015f7c:	a80c      	add	r0, sp, #48	@ 0x30
 8015f7e:	f7f7 fecf 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015f82:	4621      	mov	r1, r4
 8015f84:	a80e      	add	r0, sp, #56	@ 0x38
 8015f86:	f7f7 fef3 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015f8a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8015f8e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8015f92:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8015f96:	f8d9 0000 	ldr.w	r0, [r9]
 8015f9a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015f9e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8015fa2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8015fa6:	eb08 0401 	add.w	r4, r8, r1
 8015faa:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8015fae:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8016174 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8015fb2:	440a      	add	r2, r1
 8015fb4:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8015fb8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8015fbc:	4413      	add	r3, r2
 8015fbe:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8015fc2:	6803      	ldr	r3, [r0, #0]
 8015fc4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015fc6:	4798      	blx	r3
 8015fc8:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8015fcc:	f8d9 0000 	ldr.w	r0, [r9]
 8015fd0:	d01f      	beq.n	8016012 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8015fd2:	2200      	movs	r2, #0
 8015fd4:	6801      	ldr	r1, [r0, #0]
 8015fd6:	b2b6      	uxth	r6, r6
 8015fd8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8015fdc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8015fe0:	220b      	movs	r2, #11
 8015fe2:	9207      	str	r2, [sp, #28]
 8015fe4:	f8b8 2000 	ldrh.w	r2, [r8]
 8015fe8:	9601      	str	r6, [sp, #4]
 8015fea:	9206      	str	r2, [sp, #24]
 8015fec:	2201      	movs	r2, #1
 8015fee:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8015ff2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8015ff6:	9203      	str	r2, [sp, #12]
 8015ff8:	fa1f f28a 	uxth.w	r2, sl
 8015ffc:	9202      	str	r2, [sp, #8]
 8015ffe:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8016002:	9200      	str	r2, [sp, #0]
 8016004:	463a      	mov	r2, r7
 8016006:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 8016008:	4621      	mov	r1, r4
 801600a:	47a8      	blx	r5
 801600c:	b011      	add	sp, #68	@ 0x44
 801600e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016012:	6803      	ldr	r3, [r0, #0]
 8016014:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8016018:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801601a:	4798      	blx	r3
 801601c:	f8b8 2000 	ldrh.w	r2, [r8]
 8016020:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8016024:	2dff      	cmp	r5, #255	@ 0xff
 8016026:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801602a:	fb0a fa02 	mul.w	sl, sl, r2
 801602e:	fb02 1303 	mla	r3, r2, r3, r1
 8016032:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016036:	d062      	beq.n	80160fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8016038:	ea6f 0c05 	mvn.w	ip, r5
 801603c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8016040:	b2ad      	uxth	r5, r5
 8016042:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8016046:	fa5f fc8c 	uxtb.w	ip, ip
 801604a:	930a      	str	r3, [sp, #40]	@ 0x28
 801604c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801604e:	4298      	cmp	r0, r3
 8016050:	f080 8085 	bcs.w	801615e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8016054:	eb00 0b09 	add.w	fp, r0, r9
 8016058:	4558      	cmp	r0, fp
 801605a:	d246      	bcs.n	80160ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801605c:	f814 eb01 	ldrb.w	lr, [r4], #1
 8016060:	2303      	movs	r3, #3
 8016062:	2204      	movs	r2, #4
 8016064:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8016068:	8803      	ldrh	r3, [r0, #0]
 801606a:	eb07 0a0e 	add.w	sl, r7, lr
 801606e:	1219      	asrs	r1, r3, #8
 8016070:	10da      	asrs	r2, r3, #3
 8016072:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8016076:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801607a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801607e:	00db      	lsls	r3, r3, #3
 8016080:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8016084:	fb18 f805 	smulbb	r8, r8, r5
 8016088:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801608c:	fb1e fe05 	smulbb	lr, lr, r5
 8016090:	b2db      	uxtb	r3, r3
 8016092:	fb01 810c 	mla	r1, r1, ip, r8
 8016096:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801609a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801609e:	fb18 f805 	smulbb	r8, r8, r5
 80160a2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80160a6:	b289      	uxth	r1, r1
 80160a8:	fb02 820c 	mla	r2, r2, ip, r8
 80160ac:	fb03 e30c 	mla	r3, r3, ip, lr
 80160b0:	f101 0801 	add.w	r8, r1, #1
 80160b4:	b292      	uxth	r2, r2
 80160b6:	b29b      	uxth	r3, r3
 80160b8:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80160bc:	f102 0801 	add.w	r8, r2, #1
 80160c0:	f103 0e01 	add.w	lr, r3, #1
 80160c4:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80160c8:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80160cc:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80160d0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80160d4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80160d8:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80160dc:	ea4e 0101 	orr.w	r1, lr, r1
 80160e0:	ea41 0108 	orr.w	r1, r1, r8
 80160e4:	f820 1b02 	strh.w	r1, [r0], #2
 80160e8:	e7b6      	b.n	8016058 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80160ea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80160ec:	881b      	ldrh	r3, [r3, #0]
 80160ee:	1b9b      	subs	r3, r3, r6
 80160f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80160f4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80160f8:	1b9b      	subs	r3, r3, r6
 80160fa:	441c      	add	r4, r3
 80160fc:	e7a6      	b.n	801604c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80160fe:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8016102:	2203      	movs	r2, #3
 8016104:	2504      	movs	r5, #4
 8016106:	4919      	ldr	r1, [pc, #100]	@ (801616c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8016108:	4550      	cmp	r0, sl
 801610a:	d228      	bcs.n	801615e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801610c:	eb00 0c09 	add.w	ip, r0, r9
 8016110:	4560      	cmp	r0, ip
 8016112:	4623      	mov	r3, r4
 8016114:	d219      	bcs.n	801614a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8016116:	f893 e000 	ldrb.w	lr, [r3]
 801611a:	3401      	adds	r4, #1
 801611c:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8016120:	eb07 0b0e 	add.w	fp, r7, lr
 8016124:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8016128:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801612c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016130:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8016134:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8016138:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801613c:	ea43 030b 	orr.w	r3, r3, fp
 8016140:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8016144:	f820 3b02 	strh.w	r3, [r0], #2
 8016148:	e7e2      	b.n	8016110 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801614a:	f8b8 3000 	ldrh.w	r3, [r8]
 801614e:	1b9b      	subs	r3, r3, r6
 8016150:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016154:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8016158:	1b9b      	subs	r3, r3, r6
 801615a:	441c      	add	r4, r3
 801615c:	e7d4      	b.n	8016108 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801615e:	4b04      	ldr	r3, [pc, #16]	@ (8016170 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8016160:	6818      	ldr	r0, [r3, #0]
 8016162:	6803      	ldr	r3, [r0, #0]
 8016164:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016166:	4798      	blx	r3
 8016168:	e750      	b.n	801600c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801616a:	bf00      	nop
 801616c:	fffff800 	.word	0xfffff800
 8016170:	200150ac 	.word	0x200150ac
 8016174:	200150a6 	.word	0x200150a6

08016178 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8016178:	b4f0      	push	{r4, r5, r6, r7}
 801617a:	460c      	mov	r4, r1
 801617c:	4611      	mov	r1, r2
 801617e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8016182:	461a      	mov	r2, r3
 8016184:	780f      	ldrb	r7, [r1, #0]
 8016186:	9b04      	ldr	r3, [sp, #16]
 8016188:	2f01      	cmp	r7, #1
 801618a:	784e      	ldrb	r6, [r1, #1]
 801618c:	d038      	beq.n	8016200 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801618e:	d31f      	bcc.n	80161d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8016190:	2f02      	cmp	r7, #2
 8016192:	d14d      	bne.n	8016230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8016194:	2e03      	cmp	r6, #3
 8016196:	d84b      	bhi.n	8016230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8016198:	e8df f006 	tbb	[pc, r6]
 801619c:	17140702 	.word	0x17140702
 80161a0:	9504      	str	r5, [sp, #16]
 80161a2:	4620      	mov	r0, r4
 80161a4:	bcf0      	pop	{r4, r5, r6, r7}
 80161a6:	f7ff be09 	b.w	8015dbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80161aa:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80161ac:	2800      	cmp	r0, #0
 80161ae:	d03f      	beq.n	8016230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80161b0:	6806      	ldr	r6, [r0, #0]
 80161b2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80161b6:	68b5      	ldr	r5, [r6, #8]
 80161b8:	4613      	mov	r3, r2
 80161ba:	46ac      	mov	ip, r5
 80161bc:	460a      	mov	r2, r1
 80161be:	4621      	mov	r1, r4
 80161c0:	bcf0      	pop	{r4, r5, r6, r7}
 80161c2:	4760      	bx	ip
 80161c4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80161c8:	e7f0      	b.n	80161ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80161ca:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80161ce:	e7ed      	b.n	80161ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80161d0:	2e03      	cmp	r6, #3
 80161d2:	d82d      	bhi.n	8016230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80161d4:	e8df f006 	tbb	[pc, r6]
 80161d8:	110e0702 	.word	0x110e0702
 80161dc:	9504      	str	r5, [sp, #16]
 80161de:	4620      	mov	r0, r4
 80161e0:	bcf0      	pop	{r4, r5, r6, r7}
 80161e2:	f7ff bd05 	b.w	8015bf0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80161e6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80161e8:	b310      	cbz	r0, 8016230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80161ea:	6806      	ldr	r6, [r0, #0]
 80161ec:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80161f0:	68f5      	ldr	r5, [r6, #12]
 80161f2:	e7e1      	b.n	80161b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80161f4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80161f8:	e7f6      	b.n	80161e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80161fa:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80161fe:	e7f3      	b.n	80161e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8016200:	2e03      	cmp	r6, #3
 8016202:	d815      	bhi.n	8016230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8016204:	e8df f006 	tbb	[pc, r6]
 8016208:	110e0702 	.word	0x110e0702
 801620c:	9504      	str	r5, [sp, #16]
 801620e:	4620      	mov	r0, r4
 8016210:	bcf0      	pop	{r4, r5, r6, r7}
 8016212:	f7ff be9f 	b.w	8015f54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8016216:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8016218:	b150      	cbz	r0, 8016230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801621a:	6806      	ldr	r6, [r0, #0]
 801621c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8016220:	6935      	ldr	r5, [r6, #16]
 8016222:	e7c9      	b.n	80161b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8016224:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8016228:	e7f6      	b.n	8016218 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801622a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801622e:	e7f3      	b.n	8016218 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8016230:	bcf0      	pop	{r4, r5, r6, r7}
 8016232:	4770      	bx	lr

08016234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8016234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016238:	b087      	sub	sp, #28
 801623a:	4604      	mov	r4, r0
 801623c:	460e      	mov	r6, r1
 801623e:	6810      	ldr	r0, [r2, #0]
 8016240:	6851      	ldr	r1, [r2, #4]
 8016242:	ad02      	add	r5, sp, #8
 8016244:	4617      	mov	r7, r2
 8016246:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801624a:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 801647c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801624e:	c503      	stmia	r5!, {r0, r1}
 8016250:	6818      	ldr	r0, [r3, #0]
 8016252:	ad04      	add	r5, sp, #16
 8016254:	6859      	ldr	r1, [r3, #4]
 8016256:	c503      	stmia	r5!, {r0, r1}
 8016258:	a802      	add	r0, sp, #8
 801625a:	f7f7 fd61 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801625e:	4639      	mov	r1, r7
 8016260:	a804      	add	r0, sp, #16
 8016262:	f7f7 fd85 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016266:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801626a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801626e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8016272:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8016276:	fb11 2103 	smlabb	r1, r1, r3, r2
 801627a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801627e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8016282:	440e      	add	r6, r1
 8016284:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016288:	440a      	add	r2, r1
 801628a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801628e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016292:	4413      	add	r3, r2
 8016294:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016298:	4b77      	ldr	r3, [pc, #476]	@ (8016478 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801629a:	6818      	ldr	r0, [r3, #0]
 801629c:	6803      	ldr	r3, [r0, #0]
 801629e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80162a0:	4798      	blx	r3
 80162a2:	f8b9 b000 	ldrh.w	fp, [r9]
 80162a6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80162aa:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80162ae:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80162b2:	fb05 f50b 	mul.w	r5, r5, fp
 80162b6:	fb0b 2303 	mla	r3, fp, r3, r2
 80162ba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80162be:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80162c2:	9300      	str	r3, [sp, #0]
 80162c4:	d069      	beq.n	801639a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80162c6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80162ca:	4558      	cmp	r0, fp
 80162cc:	f080 80cc 	bcs.w	8016468 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80162d0:	9b00      	ldr	r3, [sp, #0]
 80162d2:	4631      	mov	r1, r6
 80162d4:	18c3      	adds	r3, r0, r3
 80162d6:	9301      	str	r3, [sp, #4]
 80162d8:	9b01      	ldr	r3, [sp, #4]
 80162da:	4298      	cmp	r0, r3
 80162dc:	d24f      	bcs.n	801637e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80162de:	f811 2b01 	ldrb.w	r2, [r1], #1
 80162e2:	2a00      	cmp	r2, #0
 80162e4:	d048      	beq.n	8016378 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80162e6:	fb0a f202 	mul.w	r2, sl, r2
 80162ea:	1c53      	adds	r3, r2, #1
 80162ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80162f0:	121b      	asrs	r3, r3, #8
 80162f2:	d041      	beq.n	8016378 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80162f4:	8802      	ldrh	r2, [r0, #0]
 80162f6:	b29e      	uxth	r6, r3
 80162f8:	f8b4 c000 	ldrh.w	ip, [r4]
 80162fc:	43db      	mvns	r3, r3
 80162fe:	1215      	asrs	r5, r2, #8
 8016300:	b2db      	uxtb	r3, r3
 8016302:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016306:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801630a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801630e:	fb15 f503 	smulbb	r5, r5, r3
 8016312:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016316:	00d2      	lsls	r2, r2, #3
 8016318:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801631c:	fb07 5706 	mla	r7, r7, r6, r5
 8016320:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016324:	b2d2      	uxtb	r2, r2
 8016326:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801632a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801632e:	fb1e fe03 	smulbb	lr, lr, r3
 8016332:	b2bf      	uxth	r7, r7
 8016334:	fb12 f203 	smulbb	r2, r2, r3
 8016338:	fa5f fc8c 	uxtb.w	ip, ip
 801633c:	fb05 e506 	mla	r5, r5, r6, lr
 8016340:	f107 0e01 	add.w	lr, r7, #1
 8016344:	fb0c 2c06 	mla	ip, ip, r6, r2
 8016348:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801634c:	fa1f fc8c 	uxth.w	ip, ip
 8016350:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8016354:	b2ad      	uxth	r5, r5
 8016356:	f10c 0701 	add.w	r7, ip, #1
 801635a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801635e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016362:	ea47 070e 	orr.w	r7, r7, lr
 8016366:	f105 0e01 	add.w	lr, r5, #1
 801636a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801636e:	096d      	lsrs	r5, r5, #5
 8016370:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016374:	432f      	orrs	r7, r5
 8016376:	8007      	strh	r7, [r0, #0]
 8016378:	3002      	adds	r0, #2
 801637a:	3402      	adds	r4, #2
 801637c:	e7ac      	b.n	80162d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801637e:	f8b9 3000 	ldrh.w	r3, [r9]
 8016382:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8016386:	eba3 0308 	sub.w	r3, r3, r8
 801638a:	eba6 0608 	sub.w	r6, r6, r8
 801638e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016392:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8016396:	440e      	add	r6, r1
 8016398:	e797      	b.n	80162ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801639a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801639e:	42a8      	cmp	r0, r5
 80163a0:	d262      	bcs.n	8016468 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80163a2:	9b00      	ldr	r3, [sp, #0]
 80163a4:	4631      	mov	r1, r6
 80163a6:	eb00 0b03 	add.w	fp, r0, r3
 80163aa:	4558      	cmp	r0, fp
 80163ac:	d24e      	bcs.n	801644c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80163ae:	f811 3b01 	ldrb.w	r3, [r1], #1
 80163b2:	b12b      	cbz	r3, 80163c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80163b4:	2bff      	cmp	r3, #255	@ 0xff
 80163b6:	f8b4 e000 	ldrh.w	lr, [r4]
 80163ba:	d104      	bne.n	80163c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80163bc:	f8a0 e000 	strh.w	lr, [r0]
 80163c0:	3002      	adds	r0, #2
 80163c2:	3402      	adds	r4, #2
 80163c4:	e7f1      	b.n	80163aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80163c6:	8802      	ldrh	r2, [r0, #0]
 80163c8:	b29f      	uxth	r7, r3
 80163ca:	43db      	mvns	r3, r3
 80163cc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80163d0:	1216      	asrs	r6, r2, #8
 80163d2:	b2db      	uxtb	r3, r3
 80163d4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80163d8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80163dc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80163e0:	00d2      	lsls	r2, r2, #3
 80163e2:	fb16 f603 	smulbb	r6, r6, r3
 80163e6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80163ea:	b2d2      	uxtb	r2, r2
 80163ec:	fb0c 6c07 	mla	ip, ip, r7, r6
 80163f0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80163f4:	fb1a fa03 	smulbb	sl, sl, r3
 80163f8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80163fc:	fa1f fc8c 	uxth.w	ip, ip
 8016400:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016404:	fb12 f303 	smulbb	r3, r2, r3
 8016408:	fa5f fe8e 	uxtb.w	lr, lr
 801640c:	fb06 a607 	mla	r6, r6, r7, sl
 8016410:	f10c 0201 	add.w	r2, ip, #1
 8016414:	fb0e 3307 	mla	r3, lr, r7, r3
 8016418:	b2b6      	uxth	r6, r6
 801641a:	b29b      	uxth	r3, r3
 801641c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016420:	f106 0a01 	add.w	sl, r6, #1
 8016424:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8016428:	f103 0c01 	add.w	ip, r3, #1
 801642c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8016430:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8016434:	0976      	lsrs	r6, r6, #5
 8016436:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801643a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801643e:	ea4c 0c02 	orr.w	ip, ip, r2
 8016442:	ea4c 0c06 	orr.w	ip, ip, r6
 8016446:	f8a0 c000 	strh.w	ip, [r0]
 801644a:	e7b9      	b.n	80163c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801644c:	f8b9 3000 	ldrh.w	r3, [r9]
 8016450:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8016454:	eba3 0308 	sub.w	r3, r3, r8
 8016458:	eba6 0608 	sub.w	r6, r6, r8
 801645c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016460:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8016464:	440e      	add	r6, r1
 8016466:	e79a      	b.n	801639e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8016468:	4b03      	ldr	r3, [pc, #12]	@ (8016478 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801646a:	6818      	ldr	r0, [r3, #0]
 801646c:	6803      	ldr	r3, [r0, #0]
 801646e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016470:	4798      	blx	r3
 8016472:	b007      	add	sp, #28
 8016474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016478:	200150ac 	.word	0x200150ac
 801647c:	200150a6 	.word	0x200150a6

08016480 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8016480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016484:	b089      	sub	sp, #36	@ 0x24
 8016486:	4682      	mov	sl, r0
 8016488:	460f      	mov	r7, r1
 801648a:	4691      	mov	r9, r2
 801648c:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8016490:	4698      	mov	r8, r3
 8016492:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8016494:	2e00      	cmp	r6, #0
 8016496:	d03d      	beq.n	8016514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8016498:	4608      	mov	r0, r1
 801649a:	f7fa fe49 	bl	8011130 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801649e:	4605      	mov	r5, r0
 80164a0:	4638      	mov	r0, r7
 80164a2:	f7fa fe79 	bl	8011198 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80164a6:	f8ad 000e 	strh.w	r0, [sp, #14]
 80164aa:	4638      	mov	r0, r7
 80164ac:	f8ad 9008 	strh.w	r9, [sp, #8]
 80164b0:	f8ad 500c 	strh.w	r5, [sp, #12]
 80164b4:	f8ad 800a 	strh.w	r8, [sp, #10]
 80164b8:	f7fa ff26 	bl	8011308 <_ZNK8touchgfx6Bitmap7getDataEv>
 80164bc:	4605      	mov	r5, r0
 80164be:	4638      	mov	r0, r7
 80164c0:	f7fa ff52 	bl	8011368 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80164c4:	4681      	mov	r9, r0
 80164c6:	4638      	mov	r0, r7
 80164c8:	f7fa ffa2 	bl	8011410 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80164cc:	280b      	cmp	r0, #11
 80164ce:	d821      	bhi.n	8016514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80164d0:	e8df f000 	tbb	[pc, r0]
 80164d4:	2006aebe 	.word	0x2006aebe
 80164d8:	20202020 	.word	0x20202020
 80164dc:	b5202020 	.word	0xb5202020
 80164e0:	4bb0      	ldr	r3, [pc, #704]	@ (80167a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80164e2:	6818      	ldr	r0, [r3, #0]
 80164e4:	6803      	ldr	r3, [r0, #0]
 80164e6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80164e8:	4798      	blx	r3
 80164ea:	2eff      	cmp	r6, #255	@ 0xff
 80164ec:	d101      	bne.n	80164f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80164ee:	0683      	lsls	r3, r0, #26
 80164f0:	d506      	bpl.n	8016500 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 80164f2:	4633      	mov	r3, r6
 80164f4:	4622      	mov	r2, r4
 80164f6:	a902      	add	r1, sp, #8
 80164f8:	4628      	mov	r0, r5
 80164fa:	f7ff f907 	bl	801570c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80164fe:	e009      	b.n	8016514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8016500:	4638      	mov	r0, r7
 8016502:	f7fa fec9 	bl	8011298 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016506:	b940      	cbnz	r0, 801651a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8016508:	4623      	mov	r3, r4
 801650a:	aa02      	add	r2, sp, #8
 801650c:	4629      	mov	r1, r5
 801650e:	4650      	mov	r0, sl
 8016510:	f7ff f9e2 	bl	80158d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8016514:	b009      	add	sp, #36	@ 0x24
 8016516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801651a:	f10d 0818 	add.w	r8, sp, #24
 801651e:	4639      	mov	r1, r7
 8016520:	af04      	add	r7, sp, #16
 8016522:	4640      	mov	r0, r8
 8016524:	f7fa fe6c 	bl	8011200 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8016528:	e898 0003 	ldmia.w	r8, {r0, r1}
 801652c:	e887 0003 	stmia.w	r7, {r0, r1}
 8016530:	4638      	mov	r0, r7
 8016532:	4621      	mov	r1, r4
 8016534:	f7f4 f9ca 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 8016538:	4638      	mov	r0, r7
 801653a:	f7f4 fa0a 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 801653e:	2800      	cmp	r0, #0
 8016540:	d1d7      	bne.n	80164f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8016542:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016546:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801654a:	4293      	cmp	r3, r2
 801654c:	dd12      	ble.n	8016574 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801654e:	1a9b      	subs	r3, r3, r2
 8016550:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016554:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016558:	f8ad 0018 	strh.w	r0, [sp, #24]
 801655c:	4628      	mov	r0, r5
 801655e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8016562:	4642      	mov	r2, r8
 8016564:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016568:	a902      	add	r1, sp, #8
 801656a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801656e:	4633      	mov	r3, r6
 8016570:	f7ff f8cc 	bl	801570c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8016574:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8016578:	f9b4 2000 	ldrsh.w	r2, [r4]
 801657c:	4293      	cmp	r3, r2
 801657e:	dd12      	ble.n	80165a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8016580:	1a9b      	subs	r3, r3, r2
 8016582:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8016586:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801658a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801658e:	4642      	mov	r2, r8
 8016590:	f8ad 001a 	strh.w	r0, [sp, #26]
 8016594:	4628      	mov	r0, r5
 8016596:	f8ad 301c 	strh.w	r3, [sp, #28]
 801659a:	23ff      	movs	r3, #255	@ 0xff
 801659c:	f8ad 101e 	strh.w	r1, [sp, #30]
 80165a0:	a902      	add	r1, sp, #8
 80165a2:	f7ff f8b3 	bl	801570c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80165a6:	463b      	mov	r3, r7
 80165a8:	aa02      	add	r2, sp, #8
 80165aa:	4629      	mov	r1, r5
 80165ac:	4650      	mov	r0, sl
 80165ae:	f7ff f993 	bl	80158d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80165b2:	88a2      	ldrh	r2, [r4, #4]
 80165b4:	8823      	ldrh	r3, [r4, #0]
 80165b6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80165ba:	4413      	add	r3, r2
 80165bc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80165c0:	440a      	add	r2, r1
 80165c2:	b29b      	uxth	r3, r3
 80165c4:	b292      	uxth	r2, r2
 80165c6:	b218      	sxth	r0, r3
 80165c8:	b211      	sxth	r1, r2
 80165ca:	4288      	cmp	r0, r1
 80165cc:	dd12      	ble.n	80165f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80165ce:	1a9b      	subs	r3, r3, r2
 80165d0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80165d4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80165d8:	4642      	mov	r2, r8
 80165da:	f8ad 1018 	strh.w	r1, [sp, #24]
 80165de:	a902      	add	r1, sp, #8
 80165e0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80165e4:	23ff      	movs	r3, #255	@ 0xff
 80165e6:	f8ad 001e 	strh.w	r0, [sp, #30]
 80165ea:	4628      	mov	r0, r5
 80165ec:	f8ad 601a 	strh.w	r6, [sp, #26]
 80165f0:	f7ff f88c 	bl	801570c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80165f4:	88e2      	ldrh	r2, [r4, #6]
 80165f6:	8863      	ldrh	r3, [r4, #2]
 80165f8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80165fc:	4413      	add	r3, r2
 80165fe:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8016602:	440a      	add	r2, r1
 8016604:	b29b      	uxth	r3, r3
 8016606:	b292      	uxth	r2, r2
 8016608:	b218      	sxth	r0, r3
 801660a:	b211      	sxth	r1, r2
 801660c:	4288      	cmp	r0, r1
 801660e:	dd81      	ble.n	8016514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8016610:	1a9b      	subs	r3, r3, r2
 8016612:	f9b4 6000 	ldrsh.w	r6, [r4]
 8016616:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801661a:	4642      	mov	r2, r8
 801661c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8016620:	23ff      	movs	r3, #255	@ 0xff
 8016622:	f8ad 6018 	strh.w	r6, [sp, #24]
 8016626:	f8ad 101a 	strh.w	r1, [sp, #26]
 801662a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801662e:	e762      	b.n	80164f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8016630:	4633      	mov	r3, r6
 8016632:	4622      	mov	r2, r4
 8016634:	a902      	add	r1, sp, #8
 8016636:	4628      	mov	r0, r5
 8016638:	f7ff f9be 	bl	80159b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801663c:	e76a      	b.n	8016514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801663e:	e9cd 4600 	strd	r4, r6, [sp]
 8016642:	ab02      	add	r3, sp, #8
 8016644:	464a      	mov	r2, r9
 8016646:	4629      	mov	r1, r5
 8016648:	4650      	mov	r0, sl
 801664a:	f7ff fd95 	bl	8016178 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801664e:	e761      	b.n	8016514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8016650:	4638      	mov	r0, r7
 8016652:	f7fa fe21 	bl	8011298 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016656:	b950      	cbnz	r0, 801666e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8016658:	f8da 3000 	ldr.w	r3, [sl]
 801665c:	aa02      	add	r2, sp, #8
 801665e:	4629      	mov	r1, r5
 8016660:	e9cd 6000 	strd	r6, r0, [sp]
 8016664:	4650      	mov	r0, sl
 8016666:	68de      	ldr	r6, [r3, #12]
 8016668:	4623      	mov	r3, r4
 801666a:	47b0      	blx	r6
 801666c:	e752      	b.n	8016514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801666e:	f10d 0818 	add.w	r8, sp, #24
 8016672:	4639      	mov	r1, r7
 8016674:	af04      	add	r7, sp, #16
 8016676:	4640      	mov	r0, r8
 8016678:	f7fa fdc2 	bl	8011200 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801667c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016680:	e887 0003 	stmia.w	r7, {r0, r1}
 8016684:	4638      	mov	r0, r7
 8016686:	4621      	mov	r1, r4
 8016688:	f7f4 f920 	bl	800a8cc <_ZN8touchgfx4RectaNERKS0_>
 801668c:	4638      	mov	r0, r7
 801668e:	f7f4 f960 	bl	800a952 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016692:	b138      	cbz	r0, 80166a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8016694:	4623      	mov	r3, r4
 8016696:	9600      	str	r6, [sp, #0]
 8016698:	aa02      	add	r2, sp, #8
 801669a:	4649      	mov	r1, r9
 801669c:	4628      	mov	r0, r5
 801669e:	f7ff fdc9 	bl	8016234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80166a2:	e737      	b.n	8016514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80166a4:	f8da 3000 	ldr.w	r3, [sl]
 80166a8:	aa02      	add	r2, sp, #8
 80166aa:	4629      	mov	r1, r5
 80166ac:	e9cd 6000 	strd	r6, r0, [sp]
 80166b0:	4650      	mov	r0, sl
 80166b2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80166b6:	463b      	mov	r3, r7
 80166b8:	47d8      	blx	fp
 80166ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80166be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80166c2:	4293      	cmp	r3, r2
 80166c4:	dd13      	ble.n	80166ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 80166c6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80166ca:	1a9b      	subs	r3, r3, r2
 80166cc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80166d0:	f8ad 0018 	strh.w	r0, [sp, #24]
 80166d4:	4628      	mov	r0, r5
 80166d6:	f8ad 201a 	strh.w	r2, [sp, #26]
 80166da:	aa02      	add	r2, sp, #8
 80166dc:	f8ad 101c 	strh.w	r1, [sp, #28]
 80166e0:	4649      	mov	r1, r9
 80166e2:	f8ad 301e 	strh.w	r3, [sp, #30]
 80166e6:	4643      	mov	r3, r8
 80166e8:	9600      	str	r6, [sp, #0]
 80166ea:	f7ff fda3 	bl	8016234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80166ee:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80166f2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80166f6:	4293      	cmp	r3, r2
 80166f8:	dd13      	ble.n	8016722 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 80166fa:	1a9b      	subs	r3, r3, r2
 80166fc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8016700:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8016704:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016708:	aa02      	add	r2, sp, #8
 801670a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801670e:	4628      	mov	r0, r5
 8016710:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016714:	4643      	mov	r3, r8
 8016716:	f8ad 101e 	strh.w	r1, [sp, #30]
 801671a:	4649      	mov	r1, r9
 801671c:	9600      	str	r6, [sp, #0]
 801671e:	f7ff fd89 	bl	8016234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8016722:	88a2      	ldrh	r2, [r4, #4]
 8016724:	8823      	ldrh	r3, [r4, #0]
 8016726:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801672a:	4413      	add	r3, r2
 801672c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016730:	440a      	add	r2, r1
 8016732:	b29b      	uxth	r3, r3
 8016734:	b292      	uxth	r2, r2
 8016736:	b218      	sxth	r0, r3
 8016738:	b211      	sxth	r1, r2
 801673a:	4288      	cmp	r0, r1
 801673c:	dd13      	ble.n	8016766 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801673e:	1a9b      	subs	r3, r3, r2
 8016740:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8016744:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8016748:	aa02      	add	r2, sp, #8
 801674a:	f8ad 1018 	strh.w	r1, [sp, #24]
 801674e:	4649      	mov	r1, r9
 8016750:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016754:	4643      	mov	r3, r8
 8016756:	f8ad 001e 	strh.w	r0, [sp, #30]
 801675a:	4628      	mov	r0, r5
 801675c:	9600      	str	r6, [sp, #0]
 801675e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8016762:	f7ff fd67 	bl	8016234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8016766:	88e2      	ldrh	r2, [r4, #6]
 8016768:	8863      	ldrh	r3, [r4, #2]
 801676a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801676e:	4413      	add	r3, r2
 8016770:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8016774:	440a      	add	r2, r1
 8016776:	b29b      	uxth	r3, r3
 8016778:	b292      	uxth	r2, r2
 801677a:	b218      	sxth	r0, r3
 801677c:	b211      	sxth	r1, r2
 801677e:	4288      	cmp	r0, r1
 8016780:	f77f aec8 	ble.w	8016514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8016784:	f9b4 7000 	ldrsh.w	r7, [r4]
 8016788:	1a9b      	subs	r3, r3, r2
 801678a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801678e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8016792:	4643      	mov	r3, r8
 8016794:	f8ad 7018 	strh.w	r7, [sp, #24]
 8016798:	f8ad 101a 	strh.w	r1, [sp, #26]
 801679c:	f8ad 001c 	strh.w	r0, [sp, #28]
 80167a0:	9600      	str	r6, [sp, #0]
 80167a2:	e779      	b.n	8016698 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 80167a4:	200150ac 	.word	0x200150ac

080167a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80167a8:	b180      	cbz	r0, 80167cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80167aa:	2903      	cmp	r1, #3
 80167ac:	d81c      	bhi.n	80167e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80167ae:	e8df f001 	tbb	[pc, r1]
 80167b2:	1d02      	.short	0x1d02
 80167b4:	1f08      	.short	0x1f08
 80167b6:	4b10      	ldr	r3, [pc, #64]	@ (80167f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80167b8:	8818      	ldrh	r0, [r3, #0]
 80167ba:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80167be:	4240      	negs	r0, r0
 80167c0:	4770      	bx	lr
 80167c2:	4b0d      	ldr	r3, [pc, #52]	@ (80167f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80167c4:	8818      	ldrh	r0, [r3, #0]
 80167c6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80167ca:	4770      	bx	lr
 80167cc:	2903      	cmp	r1, #3
 80167ce:	d80b      	bhi.n	80167e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80167d0:	a301      	add	r3, pc, #4	@ (adr r3, 80167d8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80167d2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80167d6:	bf00      	nop
 80167d8:	080167ed 	.word	0x080167ed
 80167dc:	080167c3 	.word	0x080167c3
 80167e0:	080167f1 	.word	0x080167f1
 80167e4:	080167b7 	.word	0x080167b7
 80167e8:	2000      	movs	r0, #0
 80167ea:	4770      	bx	lr
 80167ec:	2001      	movs	r0, #1
 80167ee:	4770      	bx	lr
 80167f0:	f04f 30ff 	mov.w	r0, #4294967295
 80167f4:	4770      	bx	lr
 80167f6:	bf00      	nop
 80167f8:	200150a6 	.word	0x200150a6

080167fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80167fc:	b180      	cbz	r0, 8016820 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80167fe:	2903      	cmp	r1, #3
 8016800:	d81c      	bhi.n	801683c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8016802:	e8df f001 	tbb	[pc, r1]
 8016806:	021d      	.short	0x021d
 8016808:	071f      	.short	0x071f
 801680a:	4b10      	ldr	r3, [pc, #64]	@ (801684c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801680c:	8818      	ldrh	r0, [r3, #0]
 801680e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8016812:	4770      	bx	lr
 8016814:	4b0d      	ldr	r3, [pc, #52]	@ (801684c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8016816:	8818      	ldrh	r0, [r3, #0]
 8016818:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801681c:	4240      	negs	r0, r0
 801681e:	4770      	bx	lr
 8016820:	2903      	cmp	r1, #3
 8016822:	d80b      	bhi.n	801683c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8016824:	a301      	add	r3, pc, #4	@ (adr r3, 801682c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8016826:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801682a:	bf00      	nop
 801682c:	0801680b 	.word	0x0801680b
 8016830:	08016845 	.word	0x08016845
 8016834:	08016815 	.word	0x08016815
 8016838:	08016841 	.word	0x08016841
 801683c:	2000      	movs	r0, #0
 801683e:	4770      	bx	lr
 8016840:	2001      	movs	r0, #1
 8016842:	4770      	bx	lr
 8016844:	f04f 30ff 	mov.w	r0, #4294967295
 8016848:	4770      	bx	lr
 801684a:	bf00      	nop
 801684c:	200150a6 	.word	0x200150a6

08016850 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8016850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016854:	b099      	sub	sp, #100	@ 0x64
 8016856:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016858:	a914      	add	r1, sp, #80	@ 0x50
 801685a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801685e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8016862:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8016866:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801686a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801686e:	e881 000c 	stmia.w	r1, {r2, r3}
 8016872:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8016876:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801687a:	9309      	str	r3, [sp, #36]	@ 0x24
 801687c:	f891 900d 	ldrb.w	r9, [r1, #13]
 8016880:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8016884:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8016888:	9310      	str	r3, [sp, #64]	@ 0x40
 801688a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801688e:	930c      	str	r3, [sp, #48]	@ 0x30
 8016890:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 8016894:	798f      	ldrb	r7, [r1, #6]
 8016896:	431f      	orrs	r7, r3
 8016898:	f000 8195 	beq.w	8016bc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801689c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80168a0:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 80168a4:	f891 9007 	ldrb.w	r9, [r1, #7]
 80168a8:	ea59 0903 	orrs.w	r9, r9, r3
 80168ac:	f000 818b 	beq.w	8016bc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80168b0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80168b4:	b29b      	uxth	r3, r3
 80168b6:	2d00      	cmp	r5, #0
 80168b8:	f000 812e 	beq.w	8016b18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80168bc:	1aed      	subs	r5, r5, r3
 80168be:	b2ad      	uxth	r5, r5
 80168c0:	042b      	lsls	r3, r5, #16
 80168c2:	d502      	bpl.n	80168ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80168c4:	1b64      	subs	r4, r4, r5
 80168c6:	2500      	movs	r5, #0
 80168c8:	b224      	sxth	r4, r4
 80168ca:	f9b2 1000 	ldrsh.w	r1, [r2]
 80168ce:	a814      	add	r0, sp, #80	@ 0x50
 80168d0:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 80168d4:	428c      	cmp	r4, r1
 80168d6:	b28b      	uxth	r3, r1
 80168d8:	bfbf      	itttt	lt
 80168da:	18ed      	addlt	r5, r5, r3
 80168dc:	1b2c      	sublt	r4, r5, r4
 80168de:	b2a5      	uxthlt	r5, r4
 80168e0:	460c      	movlt	r4, r1
 80168e2:	8891      	ldrh	r1, [r2, #4]
 80168e4:	440b      	add	r3, r1
 80168e6:	4621      	mov	r1, r4
 80168e8:	b21b      	sxth	r3, r3
 80168ea:	930f      	str	r3, [sp, #60]	@ 0x3c
 80168ec:	88d3      	ldrh	r3, [r2, #6]
 80168ee:	8852      	ldrh	r2, [r2, #2]
 80168f0:	4413      	add	r3, r2
 80168f2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80168f4:	b21b      	sxth	r3, r3
 80168f6:	930d      	str	r3, [sp, #52]	@ 0x34
 80168f8:	4bbd      	ldr	r3, [pc, #756]	@ (8016bf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80168fa:	f893 b000 	ldrb.w	fp, [r3]
 80168fe:	f10b 3cff 	add.w	ip, fp, #4294967295
 8016902:	f1dc 0300 	rsbs	r3, ip, #0
 8016906:	eb43 030c 	adc.w	r3, r3, ip
 801690a:	930e      	str	r3, [sp, #56]	@ 0x38
 801690c:	4653      	mov	r3, sl
 801690e:	f7f7 f87c 	bl	800da0a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8016912:	4621      	mov	r1, r4
 8016914:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8016918:	4653      	mov	r3, sl
 801691a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801691c:	a814      	add	r0, sp, #80	@ 0x50
 801691e:	f7f7 f891 	bl	800da44 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8016922:	a918      	add	r1, sp, #96	@ 0x60
 8016924:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8016928:	a817      	add	r0, sp, #92	@ 0x5c
 801692a:	f7f7 f9b7 	bl	800dc9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801692e:	f1ba 0f00 	cmp.w	sl, #0
 8016932:	f040 80f4 	bne.w	8016b1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8016936:	f1bb 0f01 	cmp.w	fp, #1
 801693a:	f040 80f8 	bne.w	8016b2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801693e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016940:	2b00      	cmp	r3, #0
 8016942:	f040 8145 	bne.w	8016bd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8016946:	b2ba      	uxth	r2, r7
 8016948:	b905      	cbnz	r5, 801694c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801694a:	b16e      	cbz	r6, 8016968 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801694c:	fb06 5302 	mla	r3, r6, r2, r5
 8016950:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8016952:	4631      	mov	r1, r6
 8016954:	fb08 f303 	mul.w	r3, r8, r3
 8016958:	f003 0607 	and.w	r6, r3, #7
 801695c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8016960:	9328      	str	r3, [sp, #160]	@ 0xa0
 8016962:	eba9 0301 	sub.w	r3, r9, r1
 8016966:	930a      	str	r3, [sp, #40]	@ 0x28
 8016968:	4651      	mov	r1, sl
 801696a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801696c:	f7ff ff1c 	bl	80167a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8016970:	4681      	mov	r9, r0
 8016972:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8016974:	f7ff ff42 	bl	80167fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8016978:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801697a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801697c:	4683      	mov	fp, r0
 801697e:	eba3 0a01 	sub.w	sl, r3, r1
 8016982:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016984:	459a      	cmp	sl, r3
 8016986:	bfa8      	it	ge
 8016988:	469a      	movge	sl, r3
 801698a:	f1ba 0f00 	cmp.w	sl, #0
 801698e:	f340 811a 	ble.w	8016bc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8016992:	1b64      	subs	r4, r4, r5
 8016994:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8016996:	1b1c      	subs	r4, r3, r4
 8016998:	42bc      	cmp	r4, r7
 801699a:	bfd4      	ite	le
 801699c:	ebc5 0504 	rsble	r5, r5, r4
 80169a0:	ebc5 0507 	rsbgt	r5, r5, r7
 80169a4:	2d00      	cmp	r5, #0
 80169a6:	f340 810e 	ble.w	8016bc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80169aa:	1b52      	subs	r2, r2, r5
 80169ac:	fb08 f302 	mul.w	r3, r8, r2
 80169b0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80169b2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80169b4:	2b00      	cmp	r3, #0
 80169b6:	f040 8116 	bne.w	8016be6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80169ba:	4b8e      	ldr	r3, [pc, #568]	@ (8016bf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80169bc:	6818      	ldr	r0, [r3, #0]
 80169be:	6803      	ldr	r3, [r0, #0]
 80169c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80169c2:	4798      	blx	r3
 80169c4:	2301      	movs	r3, #1
 80169c6:	4a8c      	ldr	r2, [pc, #560]	@ (8016bf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80169c8:	fa03 f308 	lsl.w	r3, r3, r8
 80169cc:	8811      	ldrh	r1, [r2, #0]
 80169ce:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 80169d2:	3b01      	subs	r3, #1
 80169d4:	b2db      	uxtb	r3, r3
 80169d6:	930e      	str	r3, [sp, #56]	@ 0x38
 80169d8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 80169dc:	fb01 2303 	mla	r3, r1, r3, r2
 80169e0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80169e4:	930a      	str	r3, [sp, #40]	@ 0x28
 80169e6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80169e8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80169ec:	9313      	str	r3, [sp, #76]	@ 0x4c
 80169ee:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80169f0:	0a19      	lsrs	r1, r3, #8
 80169f2:	b2cb      	uxtb	r3, r1
 80169f4:	9312      	str	r3, [sp, #72]	@ 0x48
 80169f6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80169f8:	b2db      	uxtb	r3, r3
 80169fa:	9311      	str	r3, [sp, #68]	@ 0x44
 80169fc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80169fe:	095a      	lsrs	r2, r3, #5
 8016a00:	4b7e      	ldr	r3, [pc, #504]	@ (8016bfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 8016a02:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016a06:	400b      	ands	r3, r1
 8016a08:	4313      	orrs	r3, r2
 8016a0a:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8016a0c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016a10:	4313      	orrs	r3, r2
 8016a12:	b29b      	uxth	r3, r3
 8016a14:	9310      	str	r3, [sp, #64]	@ 0x40
 8016a16:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8016a18:	781a      	ldrb	r2, [r3, #0]
 8016a1a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8016a1e:	fb05 b919 	mls	r9, r5, r9, fp
 8016a22:	4132      	asrs	r2, r6
 8016a24:	fb03 fb05 	mul.w	fp, r3, r5
 8016a28:	930d      	str	r3, [sp, #52]	@ 0x34
 8016a2a:	b2d2      	uxtb	r2, r2
 8016a2c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8016a30:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8016a34:	f0c0 80f5 	bcc.w	8016c22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8016a38:	46ae      	mov	lr, r5
 8016a3a:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 8016a3e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8016a42:	f0c0 80dd 	bcc.w	8016c00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8016a46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016a48:	4013      	ands	r3, r2
 8016a4a:	d055      	beq.n	8016af8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8016a4c:	20ff      	movs	r0, #255	@ 0xff
 8016a4e:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016a50:	fb90 f1f1 	sdiv	r1, r0, r1
 8016a54:	434b      	muls	r3, r1
 8016a56:	2bfe      	cmp	r3, #254	@ 0xfe
 8016a58:	dd03      	ble.n	8016a62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8016a5a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016a5c:	4281      	cmp	r1, r0
 8016a5e:	f000 80c4 	beq.w	8016bea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 8016a62:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016a64:	f8bc 4000 	ldrh.w	r4, [ip]
 8016a68:	fb11 f303 	smulbb	r3, r1, r3
 8016a6c:	1220      	asrs	r0, r4, #8
 8016a6e:	b29b      	uxth	r3, r3
 8016a70:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8016a74:	1c59      	adds	r1, r3, #1
 8016a76:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8016a7a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8016a7e:	10e1      	asrs	r1, r4, #3
 8016a80:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016a84:	00e4      	lsls	r4, r4, #3
 8016a86:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016a8a:	b29f      	uxth	r7, r3
 8016a8c:	43db      	mvns	r3, r3
 8016a8e:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8016a92:	b2db      	uxtb	r3, r3
 8016a94:	b2e4      	uxtb	r4, r4
 8016a96:	9309      	str	r3, [sp, #36]	@ 0x24
 8016a98:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8016a9a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8016a9e:	fb13 f907 	smulbb	r9, r3, r7
 8016aa2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016aa4:	fb00 9003 	mla	r0, r0, r3, r9
 8016aa8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8016aaa:	fb13 f907 	smulbb	r9, r3, r7
 8016aae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016ab0:	b280      	uxth	r0, r0
 8016ab2:	fb01 9103 	mla	r1, r1, r3, r9
 8016ab6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8016ab8:	fb13 f707 	smulbb	r7, r3, r7
 8016abc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016abe:	b289      	uxth	r1, r1
 8016ac0:	fb04 7403 	mla	r4, r4, r3, r7
 8016ac4:	1c43      	adds	r3, r0, #1
 8016ac6:	b2a4      	uxth	r4, r4
 8016ac8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016acc:	f104 0901 	add.w	r9, r4, #1
 8016ad0:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8016ad4:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8016ad8:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8016adc:	ea49 0000 	orr.w	r0, r9, r0
 8016ae0:	f101 0901 	add.w	r9, r1, #1
 8016ae4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8016ae8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016aec:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016af0:	ea40 0009 	orr.w	r0, r0, r9
 8016af4:	f8ac 0000 	strh.w	r0, [ip]
 8016af8:	4446      	add	r6, r8
 8016afa:	b2b6      	uxth	r6, r6
 8016afc:	2e07      	cmp	r6, #7
 8016afe:	bf89      	itett	hi
 8016b00:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 8016b02:	fa42 f208 	asrls.w	r2, r2, r8
 8016b06:	2600      	movhi	r6, #0
 8016b08:	785a      	ldrbhi	r2, [r3, #1]
 8016b0a:	bf8a      	itet	hi
 8016b0c:	3301      	addhi	r3, #1
 8016b0e:	b2d2      	uxtbls	r2, r2
 8016b10:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 8016b12:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016b14:	449c      	add	ip, r3
 8016b16:	e792      	b.n	8016a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8016b18:	441c      	add	r4, r3
 8016b1a:	b224      	sxth	r4, r4
 8016b1c:	e6d5      	b.n	80168ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8016b1e:	f1ba 0f01 	cmp.w	sl, #1
 8016b22:	f47f af0c 	bne.w	801693e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016b26:	f1bb 0f01 	cmp.w	fp, #1
 8016b2a:	f47f af08 	bne.w	801693e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016b2e:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 8016bf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 8016b32:	f8db 0000 	ldr.w	r0, [fp]
 8016b36:	6803      	ldr	r3, [r0, #0]
 8016b38:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016b3a:	4798      	blx	r3
 8016b3c:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8016b40:	465a      	mov	r2, fp
 8016b42:	d006      	beq.n	8016b52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8016b44:	f1b8 0f04 	cmp.w	r8, #4
 8016b48:	d140      	bne.n	8016bcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8016b4a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016b4c:	3300      	adds	r3, #0
 8016b4e:	bf18      	it	ne
 8016b50:	2301      	movne	r3, #1
 8016b52:	0580      	lsls	r0, r0, #22
 8016b54:	d56e      	bpl.n	8016c34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8016b56:	f1b8 0f08 	cmp.w	r8, #8
 8016b5a:	d16b      	bne.n	8016c34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8016b5c:	2b00      	cmp	r3, #0
 8016b5e:	bf0c      	ite	eq
 8016b60:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 8016b64:	f44f 7180 	movne.w	r1, #256	@ 0x100
 8016b68:	2d00      	cmp	r5, #0
 8016b6a:	f47f aee8 	bne.w	801693e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016b6e:	2e00      	cmp	r6, #0
 8016b70:	f47f aee5 	bne.w	801693e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016b74:	19e3      	adds	r3, r4, r7
 8016b76:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8016b78:	4283      	cmp	r3, r0
 8016b7a:	f73f aee0 	bgt.w	801693e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016b7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016b80:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8016b82:	444b      	add	r3, r9
 8016b84:	4283      	cmp	r3, r0
 8016b86:	f73f aeda 	bgt.w	801693e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016b8a:	b2bf      	uxth	r7, r7
 8016b8c:	f1b8 0f08 	cmp.w	r8, #8
 8016b90:	6810      	ldr	r0, [r2, #0]
 8016b92:	f04f 0500 	mov.w	r5, #0
 8016b96:	bf18      	it	ne
 8016b98:	3701      	addne	r7, #1
 8016b9a:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 8016b9e:	6804      	ldr	r4, [r0, #0]
 8016ba0:	bf18      	it	ne
 8016ba2:	f027 0701 	bicne.w	r7, r7, #1
 8016ba6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8016baa:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8016bae:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016bb0:	bf18      	it	ne
 8016bb2:	b2bf      	uxthne	r7, r7
 8016bb4:	9104      	str	r1, [sp, #16]
 8016bb6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8016bb8:	e9cd 7900 	strd	r7, r9, [sp]
 8016bbc:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8016bc0:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8016bc2:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 8016bc4:	47a0      	blx	r4
 8016bc6:	b019      	add	sp, #100	@ 0x64
 8016bc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016bcc:	2300      	movs	r3, #0
 8016bce:	e7c0      	b.n	8016b52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8016bd0:	2208      	movs	r2, #8
 8016bd2:	fb92 f3f8 	sdiv	r3, r2, r8
 8016bd6:	1e5a      	subs	r2, r3, #1
 8016bd8:	443a      	add	r2, r7
 8016bda:	fb92 f2f3 	sdiv	r2, r2, r3
 8016bde:	fb12 f203 	smulbb	r2, r2, r3
 8016be2:	b292      	uxth	r2, r2
 8016be4:	e6b0      	b.n	8016948 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8016be6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8016be8:	e6ec      	b.n	80169c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8016bea:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8016bec:	e782      	b.n	8016af4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8016bee:	bf00      	nop
 8016bf0:	200150a4 	.word	0x200150a4
 8016bf4:	200150ac 	.word	0x200150ac
 8016bf8:	200150a6 	.word	0x200150a6
 8016bfc:	00fff800 	.word	0x00fff800
 8016c00:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8016c02:	b153      	cbz	r3, 8016c1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8016c04:	441e      	add	r6, r3
 8016c06:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8016c08:	b2b6      	uxth	r6, r6
 8016c0a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8016c0e:	f006 0607 	and.w	r6, r6, #7
 8016c12:	781a      	ldrb	r2, [r3, #0]
 8016c14:	9328      	str	r3, [sp, #160]	@ 0xa0
 8016c16:	4132      	asrs	r2, r6
 8016c18:	b2d2      	uxtb	r2, r2
 8016c1a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016c1c:	445b      	add	r3, fp
 8016c1e:	930a      	str	r3, [sp, #40]	@ 0x28
 8016c20:	e706      	b.n	8016a30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8016c22:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016c24:	2b00      	cmp	r3, #0
 8016c26:	d1ce      	bne.n	8016bc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8016c28:	4b05      	ldr	r3, [pc, #20]	@ (8016c40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8016c2a:	6818      	ldr	r0, [r3, #0]
 8016c2c:	6803      	ldr	r3, [r0, #0]
 8016c2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016c30:	4798      	blx	r3
 8016c32:	e7c8      	b.n	8016bc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8016c34:	2b00      	cmp	r3, #0
 8016c36:	f43f ae82 	beq.w	801693e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8016c3a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8016c3e:	e793      	b.n	8016b68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8016c40:	200150ac 	.word	0x200150ac

08016c44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8016c44:	b538      	push	{r3, r4, r5, lr}
 8016c46:	4c15      	ldr	r4, [pc, #84]	@ (8016c9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8016c48:	4605      	mov	r5, r0
 8016c4a:	7823      	ldrb	r3, [r4, #0]
 8016c4c:	f3bf 8f5b 	dmb	ish
 8016c50:	07da      	lsls	r2, r3, #31
 8016c52:	d40b      	bmi.n	8016c6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8016c54:	4620      	mov	r0, r4
 8016c56:	f007 febe 	bl	801e9d6 <__cxa_guard_acquire>
 8016c5a:	b138      	cbz	r0, 8016c6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8016c5c:	4620      	mov	r0, r4
 8016c5e:	f007 fec6 	bl	801e9ee <__cxa_guard_release>
 8016c62:	4a0f      	ldr	r2, [pc, #60]	@ (8016ca0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8016c64:	490f      	ldr	r1, [pc, #60]	@ (8016ca4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8016c66:	4810      	ldr	r0, [pc, #64]	@ (8016ca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8016c68:	f007 feae 	bl	801e9c8 <__aeabi_atexit>
 8016c6c:	4c0f      	ldr	r4, [pc, #60]	@ (8016cac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8016c6e:	7823      	ldrb	r3, [r4, #0]
 8016c70:	f3bf 8f5b 	dmb	ish
 8016c74:	07db      	lsls	r3, r3, #31
 8016c76:	d40b      	bmi.n	8016c90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8016c78:	4620      	mov	r0, r4
 8016c7a:	f007 feac 	bl	801e9d6 <__cxa_guard_acquire>
 8016c7e:	b138      	cbz	r0, 8016c90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8016c80:	4620      	mov	r0, r4
 8016c82:	f007 feb4 	bl	801e9ee <__cxa_guard_release>
 8016c86:	4a06      	ldr	r2, [pc, #24]	@ (8016ca0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8016c88:	4909      	ldr	r1, [pc, #36]	@ (8016cb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8016c8a:	480a      	ldr	r0, [pc, #40]	@ (8016cb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8016c8c:	f007 fe9c 	bl	801e9c8 <__aeabi_atexit>
 8016c90:	4b05      	ldr	r3, [pc, #20]	@ (8016ca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8016c92:	616b      	str	r3, [r5, #20]
 8016c94:	4b07      	ldr	r3, [pc, #28]	@ (8016cb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8016c96:	61ab      	str	r3, [r5, #24]
 8016c98:	bd38      	pop	{r3, r4, r5, pc}
 8016c9a:	bf00      	nop
 8016c9c:	20015184 	.word	0x20015184
 8016ca0:	20000000 	.word	0x20000000
 8016ca4:	08013a27 	.word	0x08013a27
 8016ca8:	20000090 	.word	0x20000090
 8016cac:	20015188 	.word	0x20015188
 8016cb0:	08013a25 	.word	0x08013a25
 8016cb4:	20000094 	.word	0x20000094

08016cb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8016cb8:	b538      	push	{r3, r4, r5, lr}
 8016cba:	4c15      	ldr	r4, [pc, #84]	@ (8016d10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8016cbc:	4605      	mov	r5, r0
 8016cbe:	7823      	ldrb	r3, [r4, #0]
 8016cc0:	f3bf 8f5b 	dmb	ish
 8016cc4:	07da      	lsls	r2, r3, #31
 8016cc6:	d40b      	bmi.n	8016ce0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8016cc8:	4620      	mov	r0, r4
 8016cca:	f007 fe84 	bl	801e9d6 <__cxa_guard_acquire>
 8016cce:	b138      	cbz	r0, 8016ce0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8016cd0:	4620      	mov	r0, r4
 8016cd2:	f007 fe8c 	bl	801e9ee <__cxa_guard_release>
 8016cd6:	4a0f      	ldr	r2, [pc, #60]	@ (8016d14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8016cd8:	490f      	ldr	r1, [pc, #60]	@ (8016d18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8016cda:	4810      	ldr	r0, [pc, #64]	@ (8016d1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8016cdc:	f007 fe74 	bl	801e9c8 <__aeabi_atexit>
 8016ce0:	4c0f      	ldr	r4, [pc, #60]	@ (8016d20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8016ce2:	7823      	ldrb	r3, [r4, #0]
 8016ce4:	f3bf 8f5b 	dmb	ish
 8016ce8:	07db      	lsls	r3, r3, #31
 8016cea:	d40b      	bmi.n	8016d04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8016cec:	4620      	mov	r0, r4
 8016cee:	f007 fe72 	bl	801e9d6 <__cxa_guard_acquire>
 8016cf2:	b138      	cbz	r0, 8016d04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8016cf4:	4620      	mov	r0, r4
 8016cf6:	f007 fe7a 	bl	801e9ee <__cxa_guard_release>
 8016cfa:	4a06      	ldr	r2, [pc, #24]	@ (8016d14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8016cfc:	4909      	ldr	r1, [pc, #36]	@ (8016d24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8016cfe:	480a      	ldr	r0, [pc, #40]	@ (8016d28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8016d00:	f007 fe62 	bl	801e9c8 <__aeabi_atexit>
 8016d04:	4b05      	ldr	r3, [pc, #20]	@ (8016d1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8016d06:	60eb      	str	r3, [r5, #12]
 8016d08:	4b07      	ldr	r3, [pc, #28]	@ (8016d28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8016d0a:	612b      	str	r3, [r5, #16]
 8016d0c:	bd38      	pop	{r3, r4, r5, pc}
 8016d0e:	bf00      	nop
 8016d10:	2001515c 	.word	0x2001515c
 8016d14:	20000000 	.word	0x20000000
 8016d18:	08013a2b 	.word	0x08013a2b
 8016d1c:	20000068 	.word	0x20000068
 8016d20:	20015160 	.word	0x20015160
 8016d24:	08013a29 	.word	0x08013a29
 8016d28:	2000006c 	.word	0x2000006c

08016d2c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8016d2c:	b510      	push	{r4, lr}
 8016d2e:	4604      	mov	r4, r0
 8016d30:	f7ff ff88 	bl	8016c44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8016d34:	4620      	mov	r0, r4
 8016d36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016d3a:	f7ff bfbd 	b.w	8016cb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08016d40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8016d40:	b538      	push	{r3, r4, r5, lr}
 8016d42:	4c15      	ldr	r4, [pc, #84]	@ (8016d98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8016d44:	4605      	mov	r5, r0
 8016d46:	7823      	ldrb	r3, [r4, #0]
 8016d48:	f3bf 8f5b 	dmb	ish
 8016d4c:	07da      	lsls	r2, r3, #31
 8016d4e:	d40b      	bmi.n	8016d68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8016d50:	4620      	mov	r0, r4
 8016d52:	f007 fe40 	bl	801e9d6 <__cxa_guard_acquire>
 8016d56:	b138      	cbz	r0, 8016d68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8016d58:	4620      	mov	r0, r4
 8016d5a:	f007 fe48 	bl	801e9ee <__cxa_guard_release>
 8016d5e:	4a0f      	ldr	r2, [pc, #60]	@ (8016d9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8016d60:	490f      	ldr	r1, [pc, #60]	@ (8016da0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8016d62:	4810      	ldr	r0, [pc, #64]	@ (8016da4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8016d64:	f007 fe30 	bl	801e9c8 <__aeabi_atexit>
 8016d68:	4c0f      	ldr	r4, [pc, #60]	@ (8016da8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8016d6a:	7823      	ldrb	r3, [r4, #0]
 8016d6c:	f3bf 8f5b 	dmb	ish
 8016d70:	07db      	lsls	r3, r3, #31
 8016d72:	d40b      	bmi.n	8016d8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8016d74:	4620      	mov	r0, r4
 8016d76:	f007 fe2e 	bl	801e9d6 <__cxa_guard_acquire>
 8016d7a:	b138      	cbz	r0, 8016d8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8016d7c:	4620      	mov	r0, r4
 8016d7e:	f007 fe36 	bl	801e9ee <__cxa_guard_release>
 8016d82:	4a06      	ldr	r2, [pc, #24]	@ (8016d9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8016d84:	4909      	ldr	r1, [pc, #36]	@ (8016dac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8016d86:	480a      	ldr	r0, [pc, #40]	@ (8016db0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8016d88:	f007 fe1e 	bl	801e9c8 <__aeabi_atexit>
 8016d8c:	4b05      	ldr	r3, [pc, #20]	@ (8016da4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8016d8e:	626b      	str	r3, [r5, #36]	@ 0x24
 8016d90:	4b07      	ldr	r3, [pc, #28]	@ (8016db0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8016d92:	62ab      	str	r3, [r5, #40]	@ 0x28
 8016d94:	bd38      	pop	{r3, r4, r5, pc}
 8016d96:	bf00      	nop
 8016d98:	2001518c 	.word	0x2001518c
 8016d9c:	20000000 	.word	0x20000000
 8016da0:	08013a1f 	.word	0x08013a1f
 8016da4:	20000098 	.word	0x20000098
 8016da8:	20015190 	.word	0x20015190
 8016dac:	08013a1d 	.word	0x08013a1d
 8016db0:	2000009c 	.word	0x2000009c

08016db4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8016db4:	b538      	push	{r3, r4, r5, lr}
 8016db6:	4c15      	ldr	r4, [pc, #84]	@ (8016e0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8016db8:	4605      	mov	r5, r0
 8016dba:	7823      	ldrb	r3, [r4, #0]
 8016dbc:	f3bf 8f5b 	dmb	ish
 8016dc0:	07da      	lsls	r2, r3, #31
 8016dc2:	d40b      	bmi.n	8016ddc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8016dc4:	4620      	mov	r0, r4
 8016dc6:	f007 fe06 	bl	801e9d6 <__cxa_guard_acquire>
 8016dca:	b138      	cbz	r0, 8016ddc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8016dcc:	4620      	mov	r0, r4
 8016dce:	f007 fe0e 	bl	801e9ee <__cxa_guard_release>
 8016dd2:	4a0f      	ldr	r2, [pc, #60]	@ (8016e10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8016dd4:	490f      	ldr	r1, [pc, #60]	@ (8016e14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8016dd6:	4810      	ldr	r0, [pc, #64]	@ (8016e18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8016dd8:	f007 fdf6 	bl	801e9c8 <__aeabi_atexit>
 8016ddc:	4c0f      	ldr	r4, [pc, #60]	@ (8016e1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8016dde:	7823      	ldrb	r3, [r4, #0]
 8016de0:	f3bf 8f5b 	dmb	ish
 8016de4:	07db      	lsls	r3, r3, #31
 8016de6:	d40b      	bmi.n	8016e00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8016de8:	4620      	mov	r0, r4
 8016dea:	f007 fdf4 	bl	801e9d6 <__cxa_guard_acquire>
 8016dee:	b138      	cbz	r0, 8016e00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8016df0:	4620      	mov	r0, r4
 8016df2:	f007 fdfc 	bl	801e9ee <__cxa_guard_release>
 8016df6:	4a06      	ldr	r2, [pc, #24]	@ (8016e10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8016df8:	4909      	ldr	r1, [pc, #36]	@ (8016e20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8016dfa:	480a      	ldr	r0, [pc, #40]	@ (8016e24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8016dfc:	f007 fde4 	bl	801e9c8 <__aeabi_atexit>
 8016e00:	4b05      	ldr	r3, [pc, #20]	@ (8016e18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8016e02:	61eb      	str	r3, [r5, #28]
 8016e04:	4b07      	ldr	r3, [pc, #28]	@ (8016e24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8016e06:	622b      	str	r3, [r5, #32]
 8016e08:	bd38      	pop	{r3, r4, r5, pc}
 8016e0a:	bf00      	nop
 8016e0c:	20015164 	.word	0x20015164
 8016e10:	20000000 	.word	0x20000000
 8016e14:	08013a23 	.word	0x08013a23
 8016e18:	20000070 	.word	0x20000070
 8016e1c:	20015168 	.word	0x20015168
 8016e20:	08013a21 	.word	0x08013a21
 8016e24:	20000074 	.word	0x20000074

08016e28 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8016e28:	b510      	push	{r4, lr}
 8016e2a:	4604      	mov	r4, r0
 8016e2c:	f7ff ff88 	bl	8016d40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8016e30:	4620      	mov	r0, r4
 8016e32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016e36:	f7ff bfbd 	b.w	8016db4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08016e3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8016e3c:	b538      	push	{r3, r4, r5, lr}
 8016e3e:	4c15      	ldr	r4, [pc, #84]	@ (8016e94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8016e40:	4605      	mov	r5, r0
 8016e42:	7823      	ldrb	r3, [r4, #0]
 8016e44:	f3bf 8f5b 	dmb	ish
 8016e48:	07da      	lsls	r2, r3, #31
 8016e4a:	d40b      	bmi.n	8016e64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8016e4c:	4620      	mov	r0, r4
 8016e4e:	f007 fdc2 	bl	801e9d6 <__cxa_guard_acquire>
 8016e52:	b138      	cbz	r0, 8016e64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8016e54:	4620      	mov	r0, r4
 8016e56:	f007 fdca 	bl	801e9ee <__cxa_guard_release>
 8016e5a:	4a0f      	ldr	r2, [pc, #60]	@ (8016e98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8016e5c:	490f      	ldr	r1, [pc, #60]	@ (8016e9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8016e5e:	4810      	ldr	r0, [pc, #64]	@ (8016ea0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8016e60:	f007 fdb2 	bl	801e9c8 <__aeabi_atexit>
 8016e64:	4c0f      	ldr	r4, [pc, #60]	@ (8016ea4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8016e66:	7823      	ldrb	r3, [r4, #0]
 8016e68:	f3bf 8f5b 	dmb	ish
 8016e6c:	07db      	lsls	r3, r3, #31
 8016e6e:	d40b      	bmi.n	8016e88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8016e70:	4620      	mov	r0, r4
 8016e72:	f007 fdb0 	bl	801e9d6 <__cxa_guard_acquire>
 8016e76:	b138      	cbz	r0, 8016e88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8016e78:	4620      	mov	r0, r4
 8016e7a:	f007 fdb8 	bl	801e9ee <__cxa_guard_release>
 8016e7e:	4a06      	ldr	r2, [pc, #24]	@ (8016e98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8016e80:	4909      	ldr	r1, [pc, #36]	@ (8016ea8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8016e82:	480a      	ldr	r0, [pc, #40]	@ (8016eac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8016e84:	f007 fda0 	bl	801e9c8 <__aeabi_atexit>
 8016e88:	4b05      	ldr	r3, [pc, #20]	@ (8016ea0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8016e8a:	636b      	str	r3, [r5, #52]	@ 0x34
 8016e8c:	4b07      	ldr	r3, [pc, #28]	@ (8016eac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8016e8e:	63ab      	str	r3, [r5, #56]	@ 0x38
 8016e90:	bd38      	pop	{r3, r4, r5, pc}
 8016e92:	bf00      	nop
 8016e94:	2001519c 	.word	0x2001519c
 8016e98:	20000000 	.word	0x20000000
 8016e9c:	08013a17 	.word	0x08013a17
 8016ea0:	200000a8 	.word	0x200000a8
 8016ea4:	200151a0 	.word	0x200151a0
 8016ea8:	08013a15 	.word	0x08013a15
 8016eac:	200000ac 	.word	0x200000ac

08016eb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8016eb0:	b538      	push	{r3, r4, r5, lr}
 8016eb2:	4c15      	ldr	r4, [pc, #84]	@ (8016f08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8016eb4:	4605      	mov	r5, r0
 8016eb6:	7823      	ldrb	r3, [r4, #0]
 8016eb8:	f3bf 8f5b 	dmb	ish
 8016ebc:	07da      	lsls	r2, r3, #31
 8016ebe:	d40b      	bmi.n	8016ed8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8016ec0:	4620      	mov	r0, r4
 8016ec2:	f007 fd88 	bl	801e9d6 <__cxa_guard_acquire>
 8016ec6:	b138      	cbz	r0, 8016ed8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8016ec8:	4620      	mov	r0, r4
 8016eca:	f007 fd90 	bl	801e9ee <__cxa_guard_release>
 8016ece:	4a0f      	ldr	r2, [pc, #60]	@ (8016f0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8016ed0:	490f      	ldr	r1, [pc, #60]	@ (8016f10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8016ed2:	4810      	ldr	r0, [pc, #64]	@ (8016f14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8016ed4:	f007 fd78 	bl	801e9c8 <__aeabi_atexit>
 8016ed8:	4c0f      	ldr	r4, [pc, #60]	@ (8016f18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8016eda:	7823      	ldrb	r3, [r4, #0]
 8016edc:	f3bf 8f5b 	dmb	ish
 8016ee0:	07db      	lsls	r3, r3, #31
 8016ee2:	d40b      	bmi.n	8016efc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8016ee4:	4620      	mov	r0, r4
 8016ee6:	f007 fd76 	bl	801e9d6 <__cxa_guard_acquire>
 8016eea:	b138      	cbz	r0, 8016efc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8016eec:	4620      	mov	r0, r4
 8016eee:	f007 fd7e 	bl	801e9ee <__cxa_guard_release>
 8016ef2:	4a06      	ldr	r2, [pc, #24]	@ (8016f0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8016ef4:	4909      	ldr	r1, [pc, #36]	@ (8016f1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8016ef6:	480a      	ldr	r0, [pc, #40]	@ (8016f20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8016ef8:	f007 fd66 	bl	801e9c8 <__aeabi_atexit>
 8016efc:	4b05      	ldr	r3, [pc, #20]	@ (8016f14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8016efe:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8016f00:	4b07      	ldr	r3, [pc, #28]	@ (8016f20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8016f02:	632b      	str	r3, [r5, #48]	@ 0x30
 8016f04:	bd38      	pop	{r3, r4, r5, pc}
 8016f06:	bf00      	nop
 8016f08:	2001516c 	.word	0x2001516c
 8016f0c:	20000000 	.word	0x20000000
 8016f10:	08013a1b 	.word	0x08013a1b
 8016f14:	20000078 	.word	0x20000078
 8016f18:	20015170 	.word	0x20015170
 8016f1c:	08013a19 	.word	0x08013a19
 8016f20:	2000007c 	.word	0x2000007c

08016f24 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8016f24:	b510      	push	{r4, lr}
 8016f26:	4604      	mov	r4, r0
 8016f28:	f7ff ff88 	bl	8016e3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8016f2c:	4620      	mov	r0, r4
 8016f2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016f32:	f7ff bfbd 	b.w	8016eb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08016f38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8016f38:	b538      	push	{r3, r4, r5, lr}
 8016f3a:	4c15      	ldr	r4, [pc, #84]	@ (8016f90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8016f3c:	4605      	mov	r5, r0
 8016f3e:	7823      	ldrb	r3, [r4, #0]
 8016f40:	f3bf 8f5b 	dmb	ish
 8016f44:	07da      	lsls	r2, r3, #31
 8016f46:	d40b      	bmi.n	8016f60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8016f48:	4620      	mov	r0, r4
 8016f4a:	f007 fd44 	bl	801e9d6 <__cxa_guard_acquire>
 8016f4e:	b138      	cbz	r0, 8016f60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8016f50:	4620      	mov	r0, r4
 8016f52:	f007 fd4c 	bl	801e9ee <__cxa_guard_release>
 8016f56:	4a0f      	ldr	r2, [pc, #60]	@ (8016f94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8016f58:	490f      	ldr	r1, [pc, #60]	@ (8016f98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8016f5a:	4810      	ldr	r0, [pc, #64]	@ (8016f9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8016f5c:	f007 fd34 	bl	801e9c8 <__aeabi_atexit>
 8016f60:	4c0f      	ldr	r4, [pc, #60]	@ (8016fa0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8016f62:	7823      	ldrb	r3, [r4, #0]
 8016f64:	f3bf 8f5b 	dmb	ish
 8016f68:	07db      	lsls	r3, r3, #31
 8016f6a:	d40b      	bmi.n	8016f84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8016f6c:	4620      	mov	r0, r4
 8016f6e:	f007 fd32 	bl	801e9d6 <__cxa_guard_acquire>
 8016f72:	b138      	cbz	r0, 8016f84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8016f74:	4620      	mov	r0, r4
 8016f76:	f007 fd3a 	bl	801e9ee <__cxa_guard_release>
 8016f7a:	4a06      	ldr	r2, [pc, #24]	@ (8016f94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8016f7c:	4909      	ldr	r1, [pc, #36]	@ (8016fa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8016f7e:	480a      	ldr	r0, [pc, #40]	@ (8016fa8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8016f80:	f007 fd22 	bl	801e9c8 <__aeabi_atexit>
 8016f84:	4b05      	ldr	r3, [pc, #20]	@ (8016f9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8016f86:	656b      	str	r3, [r5, #84]	@ 0x54
 8016f88:	4b07      	ldr	r3, [pc, #28]	@ (8016fa8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8016f8a:	65ab      	str	r3, [r5, #88]	@ 0x58
 8016f8c:	bd38      	pop	{r3, r4, r5, pc}
 8016f8e:	bf00      	nop
 8016f90:	200151a4 	.word	0x200151a4
 8016f94:	20000000 	.word	0x20000000
 8016f98:	08013a07 	.word	0x08013a07
 8016f9c:	200000b0 	.word	0x200000b0
 8016fa0:	200151a8 	.word	0x200151a8
 8016fa4:	08013a05 	.word	0x08013a05
 8016fa8:	200000b4 	.word	0x200000b4

08016fac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8016fac:	b538      	push	{r3, r4, r5, lr}
 8016fae:	4c15      	ldr	r4, [pc, #84]	@ (8017004 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8016fb0:	4605      	mov	r5, r0
 8016fb2:	7823      	ldrb	r3, [r4, #0]
 8016fb4:	f3bf 8f5b 	dmb	ish
 8016fb8:	07da      	lsls	r2, r3, #31
 8016fba:	d40b      	bmi.n	8016fd4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8016fbc:	4620      	mov	r0, r4
 8016fbe:	f007 fd0a 	bl	801e9d6 <__cxa_guard_acquire>
 8016fc2:	b138      	cbz	r0, 8016fd4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8016fc4:	4620      	mov	r0, r4
 8016fc6:	f007 fd12 	bl	801e9ee <__cxa_guard_release>
 8016fca:	4a0f      	ldr	r2, [pc, #60]	@ (8017008 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8016fcc:	490f      	ldr	r1, [pc, #60]	@ (801700c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8016fce:	4810      	ldr	r0, [pc, #64]	@ (8017010 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8016fd0:	f007 fcfa 	bl	801e9c8 <__aeabi_atexit>
 8016fd4:	4c0f      	ldr	r4, [pc, #60]	@ (8017014 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8016fd6:	7823      	ldrb	r3, [r4, #0]
 8016fd8:	f3bf 8f5b 	dmb	ish
 8016fdc:	07db      	lsls	r3, r3, #31
 8016fde:	d40b      	bmi.n	8016ff8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8016fe0:	4620      	mov	r0, r4
 8016fe2:	f007 fcf8 	bl	801e9d6 <__cxa_guard_acquire>
 8016fe6:	b138      	cbz	r0, 8016ff8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8016fe8:	4620      	mov	r0, r4
 8016fea:	f007 fd00 	bl	801e9ee <__cxa_guard_release>
 8016fee:	4a06      	ldr	r2, [pc, #24]	@ (8017008 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8016ff0:	4909      	ldr	r1, [pc, #36]	@ (8017018 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8016ff2:	480a      	ldr	r0, [pc, #40]	@ (801701c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8016ff4:	f007 fce8 	bl	801e9c8 <__aeabi_atexit>
 8016ff8:	4b05      	ldr	r3, [pc, #20]	@ (8017010 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8016ffa:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8016ffc:	4b07      	ldr	r3, [pc, #28]	@ (801701c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8016ffe:	652b      	str	r3, [r5, #80]	@ 0x50
 8017000:	bd38      	pop	{r3, r4, r5, pc}
 8017002:	bf00      	nop
 8017004:	200151ac 	.word	0x200151ac
 8017008:	20000000 	.word	0x20000000
 801700c:	08013a0b 	.word	0x08013a0b
 8017010:	200000b8 	.word	0x200000b8
 8017014:	200151b0 	.word	0x200151b0
 8017018:	08013a09 	.word	0x08013a09
 801701c:	200000bc 	.word	0x200000bc

08017020 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8017020:	b538      	push	{r3, r4, r5, lr}
 8017022:	4c15      	ldr	r4, [pc, #84]	@ (8017078 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8017024:	4605      	mov	r5, r0
 8017026:	7823      	ldrb	r3, [r4, #0]
 8017028:	f3bf 8f5b 	dmb	ish
 801702c:	07da      	lsls	r2, r3, #31
 801702e:	d40b      	bmi.n	8017048 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8017030:	4620      	mov	r0, r4
 8017032:	f007 fcd0 	bl	801e9d6 <__cxa_guard_acquire>
 8017036:	b138      	cbz	r0, 8017048 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8017038:	4620      	mov	r0, r4
 801703a:	f007 fcd8 	bl	801e9ee <__cxa_guard_release>
 801703e:	4a0f      	ldr	r2, [pc, #60]	@ (801707c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8017040:	490f      	ldr	r1, [pc, #60]	@ (8017080 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8017042:	4810      	ldr	r0, [pc, #64]	@ (8017084 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8017044:	f007 fcc0 	bl	801e9c8 <__aeabi_atexit>
 8017048:	4c0f      	ldr	r4, [pc, #60]	@ (8017088 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801704a:	7823      	ldrb	r3, [r4, #0]
 801704c:	f3bf 8f5b 	dmb	ish
 8017050:	07db      	lsls	r3, r3, #31
 8017052:	d40b      	bmi.n	801706c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8017054:	4620      	mov	r0, r4
 8017056:	f007 fcbe 	bl	801e9d6 <__cxa_guard_acquire>
 801705a:	b138      	cbz	r0, 801706c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801705c:	4620      	mov	r0, r4
 801705e:	f007 fcc6 	bl	801e9ee <__cxa_guard_release>
 8017062:	4a06      	ldr	r2, [pc, #24]	@ (801707c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8017064:	4909      	ldr	r1, [pc, #36]	@ (801708c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8017066:	480a      	ldr	r0, [pc, #40]	@ (8017090 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8017068:	f007 fcae 	bl	801e9c8 <__aeabi_atexit>
 801706c:	4b05      	ldr	r3, [pc, #20]	@ (8017084 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801706e:	646b      	str	r3, [r5, #68]	@ 0x44
 8017070:	4b07      	ldr	r3, [pc, #28]	@ (8017090 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8017072:	64ab      	str	r3, [r5, #72]	@ 0x48
 8017074:	bd38      	pop	{r3, r4, r5, pc}
 8017076:	bf00      	nop
 8017078:	20015174 	.word	0x20015174
 801707c:	20000000 	.word	0x20000000
 8017080:	08013a0f 	.word	0x08013a0f
 8017084:	20000080 	.word	0x20000080
 8017088:	20015178 	.word	0x20015178
 801708c:	08013a0d 	.word	0x08013a0d
 8017090:	20000084 	.word	0x20000084

08017094 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8017094:	b538      	push	{r3, r4, r5, lr}
 8017096:	4c15      	ldr	r4, [pc, #84]	@ (80170ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8017098:	4605      	mov	r5, r0
 801709a:	7823      	ldrb	r3, [r4, #0]
 801709c:	f3bf 8f5b 	dmb	ish
 80170a0:	07da      	lsls	r2, r3, #31
 80170a2:	d40b      	bmi.n	80170bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80170a4:	4620      	mov	r0, r4
 80170a6:	f007 fc96 	bl	801e9d6 <__cxa_guard_acquire>
 80170aa:	b138      	cbz	r0, 80170bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80170ac:	4620      	mov	r0, r4
 80170ae:	f007 fc9e 	bl	801e9ee <__cxa_guard_release>
 80170b2:	4a0f      	ldr	r2, [pc, #60]	@ (80170f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80170b4:	490f      	ldr	r1, [pc, #60]	@ (80170f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80170b6:	4810      	ldr	r0, [pc, #64]	@ (80170f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80170b8:	f007 fc86 	bl	801e9c8 <__aeabi_atexit>
 80170bc:	4c0f      	ldr	r4, [pc, #60]	@ (80170fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80170be:	7823      	ldrb	r3, [r4, #0]
 80170c0:	f3bf 8f5b 	dmb	ish
 80170c4:	07db      	lsls	r3, r3, #31
 80170c6:	d40b      	bmi.n	80170e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80170c8:	4620      	mov	r0, r4
 80170ca:	f007 fc84 	bl	801e9d6 <__cxa_guard_acquire>
 80170ce:	b138      	cbz	r0, 80170e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80170d0:	4620      	mov	r0, r4
 80170d2:	f007 fc8c 	bl	801e9ee <__cxa_guard_release>
 80170d6:	4a06      	ldr	r2, [pc, #24]	@ (80170f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80170d8:	4909      	ldr	r1, [pc, #36]	@ (8017100 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80170da:	480a      	ldr	r0, [pc, #40]	@ (8017104 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80170dc:	f007 fc74 	bl	801e9c8 <__aeabi_atexit>
 80170e0:	4b05      	ldr	r3, [pc, #20]	@ (80170f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80170e2:	63eb      	str	r3, [r5, #60]	@ 0x3c
 80170e4:	4b07      	ldr	r3, [pc, #28]	@ (8017104 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80170e6:	642b      	str	r3, [r5, #64]	@ 0x40
 80170e8:	bd38      	pop	{r3, r4, r5, pc}
 80170ea:	bf00      	nop
 80170ec:	20015194 	.word	0x20015194
 80170f0:	20000000 	.word	0x20000000
 80170f4:	08013a13 	.word	0x08013a13
 80170f8:	200000a0 	.word	0x200000a0
 80170fc:	20015198 	.word	0x20015198
 8017100:	08013a11 	.word	0x08013a11
 8017104:	200000a4 	.word	0x200000a4

08017108 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8017108:	b510      	push	{r4, lr}
 801710a:	4604      	mov	r4, r0
 801710c:	f7ff ff14 	bl	8016f38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8017110:	4620      	mov	r0, r4
 8017112:	f7ff ff85 	bl	8017020 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8017116:	4620      	mov	r0, r4
 8017118:	f7ff ff48 	bl	8016fac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801711c:	4620      	mov	r0, r4
 801711e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017122:	f7ff bfb7 	b.w	8017094 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08017128 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8017128:	b538      	push	{r3, r4, r5, lr}
 801712a:	4c15      	ldr	r4, [pc, #84]	@ (8017180 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801712c:	4605      	mov	r5, r0
 801712e:	7823      	ldrb	r3, [r4, #0]
 8017130:	f3bf 8f5b 	dmb	ish
 8017134:	07da      	lsls	r2, r3, #31
 8017136:	d40b      	bmi.n	8017150 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8017138:	4620      	mov	r0, r4
 801713a:	f007 fc4c 	bl	801e9d6 <__cxa_guard_acquire>
 801713e:	b138      	cbz	r0, 8017150 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8017140:	4620      	mov	r0, r4
 8017142:	f007 fc54 	bl	801e9ee <__cxa_guard_release>
 8017146:	4a0f      	ldr	r2, [pc, #60]	@ (8017184 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8017148:	490f      	ldr	r1, [pc, #60]	@ (8017188 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801714a:	4810      	ldr	r0, [pc, #64]	@ (801718c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801714c:	f007 fc3c 	bl	801e9c8 <__aeabi_atexit>
 8017150:	4c0f      	ldr	r4, [pc, #60]	@ (8017190 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8017152:	7823      	ldrb	r3, [r4, #0]
 8017154:	f3bf 8f5b 	dmb	ish
 8017158:	07db      	lsls	r3, r3, #31
 801715a:	d40b      	bmi.n	8017174 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801715c:	4620      	mov	r0, r4
 801715e:	f007 fc3a 	bl	801e9d6 <__cxa_guard_acquire>
 8017162:	b138      	cbz	r0, 8017174 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8017164:	4620      	mov	r0, r4
 8017166:	f007 fc42 	bl	801e9ee <__cxa_guard_release>
 801716a:	4a06      	ldr	r2, [pc, #24]	@ (8017184 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801716c:	4909      	ldr	r1, [pc, #36]	@ (8017194 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801716e:	480a      	ldr	r0, [pc, #40]	@ (8017198 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8017170:	f007 fc2a 	bl	801e9c8 <__aeabi_atexit>
 8017174:	4b05      	ldr	r3, [pc, #20]	@ (801718c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8017176:	666b      	str	r3, [r5, #100]	@ 0x64
 8017178:	4b07      	ldr	r3, [pc, #28]	@ (8017198 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801717a:	66ab      	str	r3, [r5, #104]	@ 0x68
 801717c:	bd38      	pop	{r3, r4, r5, pc}
 801717e:	bf00      	nop
 8017180:	2001517c 	.word	0x2001517c
 8017184:	20000000 	.word	0x20000000
 8017188:	080139ff 	.word	0x080139ff
 801718c:	20000088 	.word	0x20000088
 8017190:	20015180 	.word	0x20015180
 8017194:	080139fd 	.word	0x080139fd
 8017198:	2000008c 	.word	0x2000008c

0801719c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801719c:	b538      	push	{r3, r4, r5, lr}
 801719e:	4c15      	ldr	r4, [pc, #84]	@ (80171f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80171a0:	4605      	mov	r5, r0
 80171a2:	7823      	ldrb	r3, [r4, #0]
 80171a4:	f3bf 8f5b 	dmb	ish
 80171a8:	07da      	lsls	r2, r3, #31
 80171aa:	d40b      	bmi.n	80171c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80171ac:	4620      	mov	r0, r4
 80171ae:	f007 fc12 	bl	801e9d6 <__cxa_guard_acquire>
 80171b2:	b138      	cbz	r0, 80171c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80171b4:	4620      	mov	r0, r4
 80171b6:	f007 fc1a 	bl	801e9ee <__cxa_guard_release>
 80171ba:	4a0f      	ldr	r2, [pc, #60]	@ (80171f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80171bc:	490f      	ldr	r1, [pc, #60]	@ (80171fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80171be:	4810      	ldr	r0, [pc, #64]	@ (8017200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80171c0:	f007 fc02 	bl	801e9c8 <__aeabi_atexit>
 80171c4:	4c0f      	ldr	r4, [pc, #60]	@ (8017204 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80171c6:	7823      	ldrb	r3, [r4, #0]
 80171c8:	f3bf 8f5b 	dmb	ish
 80171cc:	07db      	lsls	r3, r3, #31
 80171ce:	d40b      	bmi.n	80171e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80171d0:	4620      	mov	r0, r4
 80171d2:	f007 fc00 	bl	801e9d6 <__cxa_guard_acquire>
 80171d6:	b138      	cbz	r0, 80171e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80171d8:	4620      	mov	r0, r4
 80171da:	f007 fc08 	bl	801e9ee <__cxa_guard_release>
 80171de:	4a06      	ldr	r2, [pc, #24]	@ (80171f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80171e0:	4909      	ldr	r1, [pc, #36]	@ (8017208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80171e2:	480a      	ldr	r0, [pc, #40]	@ (801720c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80171e4:	f007 fbf0 	bl	801e9c8 <__aeabi_atexit>
 80171e8:	4b05      	ldr	r3, [pc, #20]	@ (8017200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80171ea:	65eb      	str	r3, [r5, #92]	@ 0x5c
 80171ec:	4b07      	ldr	r3, [pc, #28]	@ (801720c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80171ee:	662b      	str	r3, [r5, #96]	@ 0x60
 80171f0:	bd38      	pop	{r3, r4, r5, pc}
 80171f2:	bf00      	nop
 80171f4:	20015154 	.word	0x20015154
 80171f8:	20000000 	.word	0x20000000
 80171fc:	08013a03 	.word	0x08013a03
 8017200:	20000060 	.word	0x20000060
 8017204:	20015158 	.word	0x20015158
 8017208:	08013a01 	.word	0x08013a01
 801720c:	20000064 	.word	0x20000064

08017210 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8017210:	b510      	push	{r4, lr}
 8017212:	4604      	mov	r4, r0
 8017214:	f7ff ff88 	bl	8017128 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8017218:	4620      	mov	r0, r4
 801721a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801721e:	f7ff bfbd 	b.w	801719c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08017224 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8017224:	b538      	push	{r3, r4, r5, lr}
 8017226:	4c15      	ldr	r4, [pc, #84]	@ (801727c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8017228:	4605      	mov	r5, r0
 801722a:	7823      	ldrb	r3, [r4, #0]
 801722c:	f3bf 8f5b 	dmb	ish
 8017230:	07da      	lsls	r2, r3, #31
 8017232:	d40b      	bmi.n	801724c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8017234:	4620      	mov	r0, r4
 8017236:	f007 fbce 	bl	801e9d6 <__cxa_guard_acquire>
 801723a:	b138      	cbz	r0, 801724c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801723c:	4620      	mov	r0, r4
 801723e:	f007 fbd6 	bl	801e9ee <__cxa_guard_release>
 8017242:	4a0f      	ldr	r2, [pc, #60]	@ (8017280 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8017244:	490f      	ldr	r1, [pc, #60]	@ (8017284 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8017246:	4810      	ldr	r0, [pc, #64]	@ (8017288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8017248:	f007 fbbe 	bl	801e9c8 <__aeabi_atexit>
 801724c:	4c0f      	ldr	r4, [pc, #60]	@ (801728c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801724e:	7823      	ldrb	r3, [r4, #0]
 8017250:	f3bf 8f5b 	dmb	ish
 8017254:	07db      	lsls	r3, r3, #31
 8017256:	d40b      	bmi.n	8017270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8017258:	4620      	mov	r0, r4
 801725a:	f007 fbbc 	bl	801e9d6 <__cxa_guard_acquire>
 801725e:	b138      	cbz	r0, 8017270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8017260:	4620      	mov	r0, r4
 8017262:	f007 fbc4 	bl	801e9ee <__cxa_guard_release>
 8017266:	4a06      	ldr	r2, [pc, #24]	@ (8017280 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8017268:	4909      	ldr	r1, [pc, #36]	@ (8017290 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801726a:	480a      	ldr	r0, [pc, #40]	@ (8017294 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801726c:	f007 fbac 	bl	801e9c8 <__aeabi_atexit>
 8017270:	4b05      	ldr	r3, [pc, #20]	@ (8017288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8017272:	676b      	str	r3, [r5, #116]	@ 0x74
 8017274:	4b07      	ldr	r3, [pc, #28]	@ (8017294 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8017276:	67ab      	str	r3, [r5, #120]	@ 0x78
 8017278:	bd38      	pop	{r3, r4, r5, pc}
 801727a:	bf00      	nop
 801727c:	2001514c 	.word	0x2001514c
 8017280:	20000000 	.word	0x20000000
 8017284:	080139f7 	.word	0x080139f7
 8017288:	20000058 	.word	0x20000058
 801728c:	20015150 	.word	0x20015150
 8017290:	080139f5 	.word	0x080139f5
 8017294:	2000005c 	.word	0x2000005c

08017298 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8017298:	b538      	push	{r3, r4, r5, lr}
 801729a:	4c15      	ldr	r4, [pc, #84]	@ (80172f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801729c:	4605      	mov	r5, r0
 801729e:	7823      	ldrb	r3, [r4, #0]
 80172a0:	f3bf 8f5b 	dmb	ish
 80172a4:	07da      	lsls	r2, r3, #31
 80172a6:	d40b      	bmi.n	80172c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80172a8:	4620      	mov	r0, r4
 80172aa:	f007 fb94 	bl	801e9d6 <__cxa_guard_acquire>
 80172ae:	b138      	cbz	r0, 80172c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80172b0:	4620      	mov	r0, r4
 80172b2:	f007 fb9c 	bl	801e9ee <__cxa_guard_release>
 80172b6:	4a0f      	ldr	r2, [pc, #60]	@ (80172f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80172b8:	490f      	ldr	r1, [pc, #60]	@ (80172f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80172ba:	4810      	ldr	r0, [pc, #64]	@ (80172fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80172bc:	f007 fb84 	bl	801e9c8 <__aeabi_atexit>
 80172c0:	4c0f      	ldr	r4, [pc, #60]	@ (8017300 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80172c2:	7823      	ldrb	r3, [r4, #0]
 80172c4:	f3bf 8f5b 	dmb	ish
 80172c8:	07db      	lsls	r3, r3, #31
 80172ca:	d40b      	bmi.n	80172e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80172cc:	4620      	mov	r0, r4
 80172ce:	f007 fb82 	bl	801e9d6 <__cxa_guard_acquire>
 80172d2:	b138      	cbz	r0, 80172e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80172d4:	4620      	mov	r0, r4
 80172d6:	f007 fb8a 	bl	801e9ee <__cxa_guard_release>
 80172da:	4a06      	ldr	r2, [pc, #24]	@ (80172f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80172dc:	4909      	ldr	r1, [pc, #36]	@ (8017304 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80172de:	480a      	ldr	r0, [pc, #40]	@ (8017308 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80172e0:	f007 fb72 	bl	801e9c8 <__aeabi_atexit>
 80172e4:	4b05      	ldr	r3, [pc, #20]	@ (80172fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80172e6:	66eb      	str	r3, [r5, #108]	@ 0x6c
 80172e8:	4b07      	ldr	r3, [pc, #28]	@ (8017308 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80172ea:	672b      	str	r3, [r5, #112]	@ 0x70
 80172ec:	bd38      	pop	{r3, r4, r5, pc}
 80172ee:	bf00      	nop
 80172f0:	20015144 	.word	0x20015144
 80172f4:	20000000 	.word	0x20000000
 80172f8:	080139fb 	.word	0x080139fb
 80172fc:	20000050 	.word	0x20000050
 8017300:	20015148 	.word	0x20015148
 8017304:	080139f9 	.word	0x080139f9
 8017308:	20000054 	.word	0x20000054

0801730c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801730c:	b510      	push	{r4, lr}
 801730e:	4604      	mov	r4, r0
 8017310:	f7ff ff88 	bl	8017224 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8017314:	4620      	mov	r0, r4
 8017316:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801731a:	f7ff bfbd 	b.w	8017298 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801731e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801731e:	b510      	push	{r4, lr}
 8017320:	4604      	mov	r4, r0
 8017322:	f7ff fff3 	bl	801730c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8017326:	4620      	mov	r0, r4
 8017328:	f7ff ff72 	bl	8017210 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801732c:	4620      	mov	r0, r4
 801732e:	f7ff fdf9 	bl	8016f24 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8017332:	4620      	mov	r0, r4
 8017334:	f7ff fcfa 	bl	8016d2c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8017338:	4620      	mov	r0, r4
 801733a:	f7ff fd75 	bl	8016e28 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801733e:	4620      	mov	r0, r4
 8017340:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017344:	f7ff bee0 	b.w	8017108 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08017348 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8017348:	b538      	push	{r3, r4, r5, lr}
 801734a:	4c0b      	ldr	r4, [pc, #44]	@ (8017378 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801734c:	4605      	mov	r5, r0
 801734e:	7823      	ldrb	r3, [r4, #0]
 8017350:	f3bf 8f5b 	dmb	ish
 8017354:	07db      	lsls	r3, r3, #31
 8017356:	d40b      	bmi.n	8017370 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8017358:	4620      	mov	r0, r4
 801735a:	f007 fb3c 	bl	801e9d6 <__cxa_guard_acquire>
 801735e:	b138      	cbz	r0, 8017370 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8017360:	4620      	mov	r0, r4
 8017362:	f007 fb44 	bl	801e9ee <__cxa_guard_release>
 8017366:	4a05      	ldr	r2, [pc, #20]	@ (801737c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8017368:	4905      	ldr	r1, [pc, #20]	@ (8017380 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801736a:	4806      	ldr	r0, [pc, #24]	@ (8017384 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801736c:	f007 fb2c 	bl	801e9c8 <__aeabi_atexit>
 8017370:	4b04      	ldr	r3, [pc, #16]	@ (8017384 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8017372:	67eb      	str	r3, [r5, #124]	@ 0x7c
 8017374:	bd38      	pop	{r3, r4, r5, pc}
 8017376:	bf00      	nop
 8017378:	20015138 	.word	0x20015138
 801737c:	20000000 	.word	0x20000000
 8017380:	080139f3 	.word	0x080139f3
 8017384:	20000048 	.word	0x20000048

08017388 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8017388:	b538      	push	{r3, r4, r5, lr}
 801738a:	4c0b      	ldr	r4, [pc, #44]	@ (80173b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801738c:	4605      	mov	r5, r0
 801738e:	7823      	ldrb	r3, [r4, #0]
 8017390:	f3bf 8f5b 	dmb	ish
 8017394:	07db      	lsls	r3, r3, #31
 8017396:	d40b      	bmi.n	80173b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8017398:	4620      	mov	r0, r4
 801739a:	f007 fb1c 	bl	801e9d6 <__cxa_guard_acquire>
 801739e:	b138      	cbz	r0, 80173b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80173a0:	4620      	mov	r0, r4
 80173a2:	f007 fb24 	bl	801e9ee <__cxa_guard_release>
 80173a6:	4a05      	ldr	r2, [pc, #20]	@ (80173bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80173a8:	4905      	ldr	r1, [pc, #20]	@ (80173c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80173aa:	4806      	ldr	r0, [pc, #24]	@ (80173c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80173ac:	f007 fb0c 	bl	801e9c8 <__aeabi_atexit>
 80173b0:	4b04      	ldr	r3, [pc, #16]	@ (80173c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80173b2:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 80173b6:	bd38      	pop	{r3, r4, r5, pc}
 80173b8:	2001513c 	.word	0x2001513c
 80173bc:	20000000 	.word	0x20000000
 80173c0:	080139f1 	.word	0x080139f1
 80173c4:	2000004c 	.word	0x2000004c

080173c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80173c8:	b570      	push	{r4, r5, r6, lr}
 80173ca:	4d0d      	ldr	r5, [pc, #52]	@ (8017400 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80173cc:	4606      	mov	r6, r0
 80173ce:	4c0d      	ldr	r4, [pc, #52]	@ (8017404 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80173d0:	782b      	ldrb	r3, [r5, #0]
 80173d2:	f3bf 8f5b 	dmb	ish
 80173d6:	f013 0f01 	tst.w	r3, #1
 80173da:	d10d      	bne.n	80173f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80173dc:	4628      	mov	r0, r5
 80173de:	f007 fafa 	bl	801e9d6 <__cxa_guard_acquire>
 80173e2:	b148      	cbz	r0, 80173f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80173e4:	4b08      	ldr	r3, [pc, #32]	@ (8017408 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80173e6:	4628      	mov	r0, r5
 80173e8:	6023      	str	r3, [r4, #0]
 80173ea:	f007 fb00 	bl	801e9ee <__cxa_guard_release>
 80173ee:	4a07      	ldr	r2, [pc, #28]	@ (801740c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80173f0:	4620      	mov	r0, r4
 80173f2:	4907      	ldr	r1, [pc, #28]	@ (8017410 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80173f4:	f007 fae8 	bl	801e9c8 <__aeabi_atexit>
 80173f8:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 80173fc:	bd70      	pop	{r4, r5, r6, pc}
 80173fe:	bf00      	nop
 8017400:	20015140 	.word	0x20015140
 8017404:	200151b4 	.word	0x200151b4
 8017408:	08021788 	.word	0x08021788
 801740c:	20000000 	.word	0x20000000
 8017410:	080139ef 	.word	0x080139ef

08017414 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8017414:	b510      	push	{r4, lr}
 8017416:	4604      	mov	r4, r0
 8017418:	f7ff ff96 	bl	8017348 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801741c:	4620      	mov	r0, r4
 801741e:	f7ff ffb3 	bl	8017388 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8017422:	4620      	mov	r0, r4
 8017424:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017428:	f7ff bfce 	b.w	80173c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801742c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801742c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017430:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8017434:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8017438:	2d00      	cmp	r5, #0
 801743a:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801743e:	fb05 4c0e 	mla	ip, r5, lr, r4
 8017442:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8017446:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801744a:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801744e:	eb02 0a0c 	add.w	sl, r2, ip
 8017452:	8808      	ldrh	r0, [r1, #0]
 8017454:	f2c0 80b0 	blt.w	80175b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8017458:	45ab      	cmp	fp, r5
 801745a:	f340 80ad 	ble.w	80175b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801745e:	2c00      	cmp	r4, #0
 8017460:	f2c0 80a8 	blt.w	80175b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8017464:	45a6      	cmp	lr, r4
 8017466:	f340 80a5 	ble.w	80175b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801746a:	f812 200c 	ldrb.w	r2, [r2, ip]
 801746e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8017472:	1c62      	adds	r2, r4, #1
 8017474:	f100 80a3 	bmi.w	80175be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8017478:	4596      	cmp	lr, r2
 801747a:	f340 80a0 	ble.w	80175be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801747e:	f1b9 0f00 	cmp.w	r9, #0
 8017482:	f000 809c 	beq.w	80175be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8017486:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801748a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801748e:	3501      	adds	r5, #1
 8017490:	f100 8099 	bmi.w	80175c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8017494:	45ab      	cmp	fp, r5
 8017496:	f340 8096 	ble.w	80175c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801749a:	2f00      	cmp	r7, #0
 801749c:	f000 8093 	beq.w	80175c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80174a0:	2c00      	cmp	r4, #0
 80174a2:	f2c0 808e 	blt.w	80175c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80174a6:	45a6      	cmp	lr, r4
 80174a8:	f340 808b 	ble.w	80175c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80174ac:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80174b0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80174b4:	3401      	adds	r4, #1
 80174b6:	f100 8089 	bmi.w	80175cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80174ba:	45a6      	cmp	lr, r4
 80174bc:	f340 8086 	ble.w	80175cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80174c0:	f1b9 0f00 	cmp.w	r9, #0
 80174c4:	f000 8082 	beq.w	80175cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80174c8:	44d6      	add	lr, sl
 80174ca:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80174ce:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80174d2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80174d6:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 80174da:	fb19 fe07 	smulbb	lr, r9, r7
 80174de:	f1c7 0210 	rsb	r2, r7, #16
 80174e2:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80174e6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80174ea:	eba2 0209 	sub.w	r2, r2, r9
 80174ee:	ea44 0808 	orr.w	r8, r4, r8
 80174f2:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80174f6:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80174fa:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80174fe:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8017502:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8017506:	ea44 0c0c 	orr.w	ip, r4, ip
 801750a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801750e:	fb04 f40c 	mul.w	r4, r4, ip
 8017512:	fb02 4808 	mla	r8, r2, r8, r4
 8017516:	041a      	lsls	r2, r3, #16
 8017518:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801751c:	b2b4      	uxth	r4, r6
 801751e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8017522:	43f6      	mvns	r6, r6
 8017524:	4313      	orrs	r3, r2
 8017526:	042a      	lsls	r2, r5, #16
 8017528:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801752c:	b2f6      	uxtb	r6, r6
 801752e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8017532:	fb0e 8303 	mla	r3, lr, r3, r8
 8017536:	432a      	orrs	r2, r5
 8017538:	fb07 3202 	mla	r2, r7, r2, r3
 801753c:	10c7      	asrs	r7, r0, #3
 801753e:	0d53      	lsrs	r3, r2, #21
 8017540:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017544:	0952      	lsrs	r2, r2, #5
 8017546:	fb17 f706 	smulbb	r7, r7, r6
 801754a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801754e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8017552:	431a      	orrs	r2, r3
 8017554:	b293      	uxth	r3, r2
 8017556:	1202      	asrs	r2, r0, #8
 8017558:	121d      	asrs	r5, r3, #8
 801755a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801755e:	00c0      	lsls	r0, r0, #3
 8017560:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8017564:	fb12 f206 	smulbb	r2, r2, r6
 8017568:	b2c0      	uxtb	r0, r0
 801756a:	fb05 2504 	mla	r5, r5, r4, r2
 801756e:	10da      	asrs	r2, r3, #3
 8017570:	fb10 f006 	smulbb	r0, r0, r6
 8017574:	00db      	lsls	r3, r3, #3
 8017576:	b2ad      	uxth	r5, r5
 8017578:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801757c:	b2db      	uxtb	r3, r3
 801757e:	fb02 7204 	mla	r2, r2, r4, r7
 8017582:	fb03 0004 	mla	r0, r3, r4, r0
 8017586:	1c6b      	adds	r3, r5, #1
 8017588:	b292      	uxth	r2, r2
 801758a:	b280      	uxth	r0, r0
 801758c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017590:	1c43      	adds	r3, r0, #1
 8017592:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8017596:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801759a:	1c50      	adds	r0, r2, #1
 801759c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80175a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80175a4:	0952      	lsrs	r2, r2, #5
 80175a6:	432b      	orrs	r3, r5
 80175a8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80175ac:	4313      	orrs	r3, r2
 80175ae:	800b      	strh	r3, [r1, #0]
 80175b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175b4:	4680      	mov	r8, r0
 80175b6:	e75c      	b.n	8017472 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80175b8:	4684      	mov	ip, r0
 80175ba:	4680      	mov	r8, r0
 80175bc:	e767      	b.n	801748e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80175be:	4684      	mov	ip, r0
 80175c0:	e765      	b.n	801748e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80175c2:	4605      	mov	r5, r0
 80175c4:	e776      	b.n	80174b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80175c6:	4603      	mov	r3, r0
 80175c8:	4605      	mov	r5, r0
 80175ca:	e782      	b.n	80174d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80175cc:	4603      	mov	r3, r0
 80175ce:	e780      	b.n	80174d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080175d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80175d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80175d4:	b099      	sub	sp, #100	@ 0x64
 80175d6:	9215      	str	r2, [sp, #84]	@ 0x54
 80175d8:	9309      	str	r3, [sp, #36]	@ 0x24
 80175da:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 80175dc:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 80175e0:	9016      	str	r0, [sp, #88]	@ 0x58
 80175e2:	930d      	str	r3, [sp, #52]	@ 0x34
 80175e4:	6850      	ldr	r0, [r2, #4]
 80175e6:	910c      	str	r1, [sp, #48]	@ 0x30
 80175e8:	6812      	ldr	r2, [r2, #0]
 80175ea:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 80175ee:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 80175f2:	fb00 1303 	mla	r3, r0, r3, r1
 80175f6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80175fa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80175fc:	681b      	ldr	r3, [r3, #0]
 80175fe:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017600:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8017602:	685e      	ldr	r6, [r3, #4]
 8017604:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017606:	3604      	adds	r6, #4
 8017608:	43db      	mvns	r3, r3
 801760a:	b2db      	uxtb	r3, r3
 801760c:	930a      	str	r3, [sp, #40]	@ 0x28
 801760e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017610:	2b00      	cmp	r3, #0
 8017612:	dc03      	bgt.n	801761c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8017614:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8017616:	2b00      	cmp	r3, #0
 8017618:	f340 8225 	ble.w	8017a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801761c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801761e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017622:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017626:	1e48      	subs	r0, r1, #1
 8017628:	1e57      	subs	r7, r2, #1
 801762a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801762c:	2b00      	cmp	r3, #0
 801762e:	f340 80e3 	ble.w	80177f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8017632:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8017636:	ea4f 4325 	mov.w	r3, r5, asr #16
 801763a:	d406      	bmi.n	801764a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801763c:	4584      	cmp	ip, r0
 801763e:	da04      	bge.n	801764a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017640:	2b00      	cmp	r3, #0
 8017642:	db02      	blt.n	801764a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017644:	42bb      	cmp	r3, r7
 8017646:	f2c0 80d8 	blt.w	80177fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801764a:	f11c 0c01 	adds.w	ip, ip, #1
 801764e:	f100 80c9 	bmi.w	80177e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8017652:	4561      	cmp	r1, ip
 8017654:	f2c0 80c6 	blt.w	80177e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8017658:	3301      	adds	r3, #1
 801765a:	f100 80c3 	bmi.w	80177e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801765e:	429a      	cmp	r2, r3
 8017660:	f2c0 80c0 	blt.w	80177e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8017664:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8017668:	4647      	mov	r7, r8
 801766a:	f1bb 0f00 	cmp.w	fp, #0
 801766e:	f340 80e3 	ble.w	8017838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8017672:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8017674:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017678:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801767a:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801767e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8017682:	ea5f 422a 	movs.w	r2, sl, asr #16
 8017686:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801768a:	689b      	ldr	r3, [r3, #8]
 801768c:	f100 8121 	bmi.w	80178d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8017690:	f103 39ff 	add.w	r9, r3, #4294967295
 8017694:	454a      	cmp	r2, r9
 8017696:	f280 811c 	bge.w	80178d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801769a:	f1bc 0f00 	cmp.w	ip, #0
 801769e:	f2c0 8118 	blt.w	80178d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80176a2:	f10e 39ff 	add.w	r9, lr, #4294967295
 80176a6:	45cc      	cmp	ip, r9
 80176a8:	f280 8113 	bge.w	80178d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80176ac:	b21b      	sxth	r3, r3
 80176ae:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80176b0:	fb0c 2203 	mla	r2, ip, r3, r2
 80176b4:	eb04 0902 	add.w	r9, r4, r2
 80176b8:	5ca2      	ldrb	r2, [r4, r2]
 80176ba:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80176be:	2800      	cmp	r0, #0
 80176c0:	f000 80fe 	beq.w	80178c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80176c4:	f899 2001 	ldrb.w	r2, [r9, #1]
 80176c8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80176cc:	9211      	str	r2, [sp, #68]	@ 0x44
 80176ce:	b151      	cbz	r1, 80176e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80176d0:	eb09 0203 	add.w	r2, r9, r3
 80176d4:	f819 3003 	ldrb.w	r3, [r9, r3]
 80176d8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80176dc:	930f      	str	r3, [sp, #60]	@ 0x3c
 80176de:	7853      	ldrb	r3, [r2, #1]
 80176e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80176e4:	9312      	str	r3, [sp, #72]	@ 0x48
 80176e6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80176e8:	fb10 f201 	smulbb	r2, r0, r1
 80176ec:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80176ee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80176f2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80176f6:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80176fa:	10d2      	asrs	r2, r2, #3
 80176fc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8017700:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8017704:	ea4c 0c03 	orr.w	ip, ip, r3
 8017708:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801770a:	041b      	lsls	r3, r3, #16
 801770c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017710:	4323      	orrs	r3, r4
 8017712:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8017714:	4353      	muls	r3, r2
 8017716:	fb09 330c 	mla	r3, r9, ip, r3
 801771a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801771e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8017722:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8017726:	ea4c 0e0e 	orr.w	lr, ip, lr
 801772a:	f1c1 0c10 	rsb	ip, r1, #16
 801772e:	ebac 0c00 	sub.w	ip, ip, r0
 8017732:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8017736:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801773a:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801773e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017740:	0418      	lsls	r0, r3, #16
 8017742:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8017746:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801774a:	4318      	orrs	r0, r3
 801774c:	fb02 c200 	mla	r2, r2, r0, ip
 8017750:	8838      	ldrh	r0, [r7, #0]
 8017752:	0d53      	lsrs	r3, r2, #21
 8017754:	0952      	lsrs	r2, r2, #5
 8017756:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801775a:	1201      	asrs	r1, r0, #8
 801775c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8017760:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8017764:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8017768:	00c0      	lsls	r0, r0, #3
 801776a:	431a      	orrs	r2, r3
 801776c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8017770:	fb11 f104 	smulbb	r1, r1, r4
 8017774:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8017778:	b292      	uxth	r2, r2
 801777a:	fb1e fe04 	smulbb	lr, lr, r4
 801777e:	b2c0      	uxtb	r0, r0
 8017780:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8017784:	fb10 f004 	smulbb	r0, r0, r4
 8017788:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801778c:	fb0c 1c03 	mla	ip, ip, r3, r1
 8017790:	10d1      	asrs	r1, r2, #3
 8017792:	00d2      	lsls	r2, r2, #3
 8017794:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8017798:	fa1f fc8c 	uxth.w	ip, ip
 801779c:	b2d2      	uxtb	r2, r2
 801779e:	fb01 e103 	mla	r1, r1, r3, lr
 80177a2:	fb02 0303 	mla	r3, r2, r3, r0
 80177a6:	b289      	uxth	r1, r1
 80177a8:	b29a      	uxth	r2, r3
 80177aa:	f10c 0301 	add.w	r3, ip, #1
 80177ae:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80177b2:	1c53      	adds	r3, r2, #1
 80177b4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80177b8:	1c4a      	adds	r2, r1, #1
 80177ba:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80177be:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80177c2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80177c6:	0949      	lsrs	r1, r1, #5
 80177c8:	ea43 030c 	orr.w	r3, r3, ip
 80177cc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80177d0:	430b      	orrs	r3, r1
 80177d2:	803b      	strh	r3, [r7, #0]
 80177d4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80177d6:	3702      	adds	r7, #2
 80177d8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80177dc:	449a      	add	sl, r3
 80177de:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80177e0:	441d      	add	r5, r3
 80177e2:	e742      	b.n	801766a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80177e4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80177e6:	f108 0802 	add.w	r8, r8, #2
 80177ea:	449a      	add	sl, r3
 80177ec:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80177ee:	441d      	add	r5, r3
 80177f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80177f2:	3b01      	subs	r3, #1
 80177f4:	9309      	str	r3, [sp, #36]	@ 0x24
 80177f6:	e718      	b.n	801762a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80177f8:	d023      	beq.n	8017842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80177fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80177fc:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80177fe:	3b01      	subs	r3, #1
 8017800:	fb00 a003 	mla	r0, r0, r3, sl
 8017804:	1400      	asrs	r0, r0, #16
 8017806:	f53f af2d 	bmi.w	8017664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801780a:	3901      	subs	r1, #1
 801780c:	4288      	cmp	r0, r1
 801780e:	f6bf af29 	bge.w	8017664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8017812:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8017814:	fb01 5303 	mla	r3, r1, r3, r5
 8017818:	141b      	asrs	r3, r3, #16
 801781a:	f53f af23 	bmi.w	8017664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801781e:	3a01      	subs	r2, #1
 8017820:	4293      	cmp	r3, r2
 8017822:	f6bf af1f 	bge.w	8017664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8017826:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801782a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801782e:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8017832:	f1be 0f00 	cmp.w	lr, #0
 8017836:	dc6c      	bgt.n	8017912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8017838:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801783a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801783e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8017842:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017844:	2b00      	cmp	r3, #0
 8017846:	f340 810e 	ble.w	8017a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801784a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801784e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8017850:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017854:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017858:	eef0 6a62 	vmov.f32	s13, s5
 801785c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017860:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017864:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017868:	ee16 aa90 	vmov	sl, s13
 801786c:	eef0 6a43 	vmov.f32	s13, s6
 8017870:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017874:	ee16 5a90 	vmov	r5, s13
 8017878:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801787c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017880:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017884:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017888:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801788c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017890:	ee12 2a90 	vmov	r2, s5
 8017894:	eef0 2a47 	vmov.f32	s5, s14
 8017898:	fb92 f3f3 	sdiv	r3, r2, r3
 801789c:	ee13 2a10 	vmov	r2, s6
 80178a0:	9325      	str	r3, [sp, #148]	@ 0x94
 80178a2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80178a4:	eeb0 3a67 	vmov.f32	s6, s15
 80178a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80178ac:	9326      	str	r3, [sp, #152]	@ 0x98
 80178ae:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80178b0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80178b2:	3b01      	subs	r3, #1
 80178b4:	930c      	str	r3, [sp, #48]	@ 0x30
 80178b6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80178b8:	bf08      	it	eq
 80178ba:	4613      	moveq	r3, r2
 80178bc:	9309      	str	r3, [sp, #36]	@ 0x24
 80178be:	e6a6      	b.n	801760e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80178c0:	2900      	cmp	r1, #0
 80178c2:	f43f af10 	beq.w	80176e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80178c6:	f819 3003 	ldrb.w	r3, [r9, r3]
 80178ca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80178ce:	930f      	str	r3, [sp, #60]	@ 0x3c
 80178d0:	e709      	b.n	80176e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80178d2:	f112 0901 	adds.w	r9, r2, #1
 80178d6:	f53f af7d 	bmi.w	80177d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80178da:	454b      	cmp	r3, r9
 80178dc:	f6ff af7a 	blt.w	80177d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80178e0:	f11c 0901 	adds.w	r9, ip, #1
 80178e4:	f53f af76 	bmi.w	80177d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80178e8:	45ce      	cmp	lr, r9
 80178ea:	f6ff af73 	blt.w	80177d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80178ee:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80178f0:	b21b      	sxth	r3, r3
 80178f2:	9202      	str	r2, [sp, #8]
 80178f4:	fa0f f28e 	sxth.w	r2, lr
 80178f8:	9300      	str	r3, [sp, #0]
 80178fa:	4633      	mov	r3, r6
 80178fc:	9201      	str	r2, [sp, #4]
 80178fe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017900:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8017904:	e9cd c003 	strd	ip, r0, [sp, #12]
 8017908:	4639      	mov	r1, r7
 801790a:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801790c:	f7ff fd8e 	bl	801742c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8017910:	e760      	b.n	80177d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8017912:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8017914:	ea4f 422a 	mov.w	r2, sl, asr #16
 8017918:	1429      	asrs	r1, r5, #16
 801791a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801791c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8017920:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8017924:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017928:	fb03 2101 	mla	r1, r3, r1, r2
 801792c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801792e:	440a      	add	r2, r1
 8017930:	5c61      	ldrb	r1, [r4, r1]
 8017932:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8017936:	f1bc 0f00 	cmp.w	ip, #0
 801793a:	f000 808c 	beq.w	8017a56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801793e:	7857      	ldrb	r7, [r2, #1]
 8017940:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8017944:	9413      	str	r4, [sp, #76]	@ 0x4c
 8017946:	b140      	cbz	r0, 801795a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017948:	18d7      	adds	r7, r2, r3
 801794a:	5cd3      	ldrb	r3, [r2, r3]
 801794c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8017950:	9310      	str	r3, [sp, #64]	@ 0x40
 8017952:	787b      	ldrb	r3, [r7, #1]
 8017954:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8017958:	9314      	str	r3, [sp, #80]	@ 0x50
 801795a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801795c:	fb1c f200 	smulbb	r2, ip, r0
 8017960:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8017962:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017966:	041f      	lsls	r7, r3, #16
 8017968:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801796c:	10d2      	asrs	r2, r2, #3
 801796e:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8017972:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8017976:	431f      	orrs	r7, r3
 8017978:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801797c:	9317      	str	r3, [sp, #92]	@ 0x5c
 801797e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8017980:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8017982:	041b      	lsls	r3, r3, #16
 8017984:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017988:	ea43 030b 	orr.w	r3, r3, fp
 801798c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017990:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8017994:	4353      	muls	r3, r2
 8017996:	fb04 3707 	mla	r7, r4, r7, r3
 801799a:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801799e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80179a0:	ea43 0b01 	orr.w	fp, r3, r1
 80179a4:	f1c0 0110 	rsb	r1, r0, #16
 80179a8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80179aa:	eba1 0c0c 	sub.w	ip, r1, ip
 80179ae:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80179b2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80179b6:	fb0c 770b 	mla	r7, ip, fp, r7
 80179ba:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80179be:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 80179c2:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80179c6:	ea4c 0c0b 	orr.w	ip, ip, fp
 80179ca:	fb02 770c 	mla	r7, r2, ip, r7
 80179ce:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80179d0:	0d79      	lsrs	r1, r7, #21
 80179d2:	8812      	ldrh	r2, [r2, #0]
 80179d4:	097f      	lsrs	r7, r7, #5
 80179d6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80179da:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80179de:	430f      	orrs	r7, r1
 80179e0:	1211      	asrs	r1, r2, #8
 80179e2:	b2bb      	uxth	r3, r7
 80179e4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80179e8:	10d7      	asrs	r7, r2, #3
 80179ea:	fb11 f104 	smulbb	r1, r1, r4
 80179ee:	1218      	asrs	r0, r3, #8
 80179f0:	00d2      	lsls	r2, r2, #3
 80179f2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80179f6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80179fa:	fb17 f704 	smulbb	r7, r7, r4
 80179fe:	b2d2      	uxtb	r2, r2
 8017a00:	fb00 1009 	mla	r0, r0, r9, r1
 8017a04:	10d9      	asrs	r1, r3, #3
 8017a06:	fb12 f204 	smulbb	r2, r2, r4
 8017a0a:	00db      	lsls	r3, r3, #3
 8017a0c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8017a10:	b280      	uxth	r0, r0
 8017a12:	b2db      	uxtb	r3, r3
 8017a14:	fb01 7109 	mla	r1, r1, r9, r7
 8017a18:	fb03 2309 	mla	r3, r3, r9, r2
 8017a1c:	1c42      	adds	r2, r0, #1
 8017a1e:	b289      	uxth	r1, r1
 8017a20:	b29b      	uxth	r3, r3
 8017a22:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017a26:	1c4f      	adds	r7, r1, #1
 8017a28:	1c5a      	adds	r2, r3, #1
 8017a2a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8017a2e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8017a32:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8017a36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017a38:	0949      	lsrs	r1, r1, #5
 8017a3a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017a3e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8017a42:	4310      	orrs	r0, r2
 8017a44:	4308      	orrs	r0, r1
 8017a46:	f823 0b02 	strh.w	r0, [r3], #2
 8017a4a:	930e      	str	r3, [sp, #56]	@ 0x38
 8017a4c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8017a4e:	449a      	add	sl, r3
 8017a50:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8017a52:	441d      	add	r5, r3
 8017a54:	e6ed      	b.n	8017832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8017a56:	2800      	cmp	r0, #0
 8017a58:	f43f af7f 	beq.w	801795a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017a5c:	5cd3      	ldrb	r3, [r2, r3]
 8017a5e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8017a62:	9310      	str	r3, [sp, #64]	@ 0x40
 8017a64:	e779      	b.n	801795a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017a66:	b019      	add	sp, #100	@ 0x64
 8017a68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017a6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8017a6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017a70:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 8017a74:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8017a78:	f1b8 0f00 	cmp.w	r8, #0
 8017a7c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 8017a80:	fb08 470e 	mla	r7, r8, lr, r4
 8017a84:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8017a88:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8017a8c:	eb02 0907 	add.w	r9, r2, r7
 8017a90:	8808      	ldrh	r0, [r1, #0]
 8017a92:	db67      	blt.n	8017b64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8017a94:	45c2      	cmp	sl, r8
 8017a96:	dd65      	ble.n	8017b64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8017a98:	2c00      	cmp	r4, #0
 8017a9a:	db61      	blt.n	8017b60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8017a9c:	45a6      	cmp	lr, r4
 8017a9e:	dd5f      	ble.n	8017b60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8017aa0:	5dd2      	ldrb	r2, [r2, r7]
 8017aa2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8017aa6:	1c62      	adds	r2, r4, #1
 8017aa8:	d45f      	bmi.n	8017b6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8017aaa:	4596      	cmp	lr, r2
 8017aac:	dd5d      	ble.n	8017b6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8017aae:	2d00      	cmp	r5, #0
 8017ab0:	d05b      	beq.n	8017b6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8017ab2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8017ab6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8017aba:	f118 0801 	adds.w	r8, r8, #1
 8017abe:	d458      	bmi.n	8017b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8017ac0:	45c2      	cmp	sl, r8
 8017ac2:	dd56      	ble.n	8017b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8017ac4:	2e00      	cmp	r6, #0
 8017ac6:	d054      	beq.n	8017b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8017ac8:	2c00      	cmp	r4, #0
 8017aca:	db50      	blt.n	8017b6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8017acc:	45a6      	cmp	lr, r4
 8017ace:	dd4e      	ble.n	8017b6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8017ad0:	f819 200e 	ldrb.w	r2, [r9, lr]
 8017ad4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8017ad8:	3401      	adds	r4, #1
 8017ada:	d407      	bmi.n	8017aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8017adc:	45a6      	cmp	lr, r4
 8017ade:	dd05      	ble.n	8017aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8017ae0:	b125      	cbz	r5, 8017aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8017ae2:	44ce      	add	lr, r9
 8017ae4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8017ae8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8017aec:	fb15 f406 	smulbb	r4, r5, r6
 8017af0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8017af4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8017af8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8017afc:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017b00:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8017b04:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8017b08:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8017b0c:	ea43 0c0c 	orr.w	ip, r3, ip
 8017b10:	f1c6 0310 	rsb	r3, r6, #16
 8017b14:	ea4e 0707 	orr.w	r7, lr, r7
 8017b18:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8017b1c:	1b5b      	subs	r3, r3, r5
 8017b1e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8017b22:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017b26:	437d      	muls	r5, r7
 8017b28:	fb03 5c0c 	mla	ip, r3, ip, r5
 8017b2c:	0403      	lsls	r3, r0, #16
 8017b2e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8017b32:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017b36:	4318      	orrs	r0, r3
 8017b38:	0413      	lsls	r3, r2, #16
 8017b3a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8017b3e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017b42:	fb04 c000 	mla	r0, r4, r0, ip
 8017b46:	4313      	orrs	r3, r2
 8017b48:	fb06 0003 	mla	r0, r6, r3, r0
 8017b4c:	0d43      	lsrs	r3, r0, #21
 8017b4e:	0940      	lsrs	r0, r0, #5
 8017b50:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017b54:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8017b58:	4318      	orrs	r0, r3
 8017b5a:	8008      	strh	r0, [r1, #0]
 8017b5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017b60:	4684      	mov	ip, r0
 8017b62:	e7a0      	b.n	8017aa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8017b64:	4607      	mov	r7, r0
 8017b66:	4684      	mov	ip, r0
 8017b68:	e7a7      	b.n	8017aba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8017b6a:	4607      	mov	r7, r0
 8017b6c:	e7a5      	b.n	8017aba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8017b6e:	4602      	mov	r2, r0
 8017b70:	e7b2      	b.n	8017ad8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8017b72:	4602      	mov	r2, r0
 8017b74:	e7ba      	b.n	8017aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08017b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017b76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b7a:	b093      	sub	sp, #76	@ 0x4c
 8017b7c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017b80:	920f      	str	r2, [sp, #60]	@ 0x3c
 8017b82:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8017b84:	9010      	str	r0, [sp, #64]	@ 0x40
 8017b86:	9108      	str	r1, [sp, #32]
 8017b88:	6850      	ldr	r0, [r2, #4]
 8017b8a:	9306      	str	r3, [sp, #24]
 8017b8c:	6812      	ldr	r2, [r2, #0]
 8017b8e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8017b92:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8017b96:	fb00 1303 	mla	r3, r0, r3, r1
 8017b9a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8017b9e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017ba0:	681b      	ldr	r3, [r3, #0]
 8017ba2:	9307      	str	r3, [sp, #28]
 8017ba4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017ba6:	685f      	ldr	r7, [r3, #4]
 8017ba8:	3704      	adds	r7, #4
 8017baa:	9b08      	ldr	r3, [sp, #32]
 8017bac:	2b00      	cmp	r3, #0
 8017bae:	dc03      	bgt.n	8017bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8017bb0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017bb2:	2b00      	cmp	r3, #0
 8017bb4:	f340 81b2 	ble.w	8017f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8017bb8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017bba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017bbe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017bc2:	1e48      	subs	r0, r1, #1
 8017bc4:	f102 3cff 	add.w	ip, r2, #4294967295
 8017bc8:	9b06      	ldr	r3, [sp, #24]
 8017bca:	2b00      	cmp	r3, #0
 8017bcc:	f340 80a9 	ble.w	8017d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8017bd0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8017bd4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017bd8:	d406      	bmi.n	8017be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017bda:	4586      	cmp	lr, r0
 8017bdc:	da04      	bge.n	8017be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017bde:	2b00      	cmp	r3, #0
 8017be0:	db02      	blt.n	8017be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017be2:	4563      	cmp	r3, ip
 8017be4:	f2c0 809e 	blt.w	8017d24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8017be8:	f11e 0e01 	adds.w	lr, lr, #1
 8017bec:	f100 808f 	bmi.w	8017d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017bf0:	4571      	cmp	r1, lr
 8017bf2:	f2c0 808c 	blt.w	8017d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017bf6:	3301      	adds	r3, #1
 8017bf8:	f100 8089 	bmi.w	8017d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017bfc:	429a      	cmp	r2, r3
 8017bfe:	f2c0 8086 	blt.w	8017d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017c02:	f8dd b018 	ldr.w	fp, [sp, #24]
 8017c06:	46c8      	mov	r8, r9
 8017c08:	f1bb 0f00 	cmp.w	fp, #0
 8017c0c:	f340 80a6 	ble.w	8017d5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8017c10:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8017c12:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8017c16:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017c18:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8017c1c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8017c20:	1422      	asrs	r2, r4, #16
 8017c22:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8017c26:	689b      	ldr	r3, [r3, #8]
 8017c28:	f100 80e3 	bmi.w	8017df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8017c2c:	f103 3aff 	add.w	sl, r3, #4294967295
 8017c30:	4552      	cmp	r2, sl
 8017c32:	f280 80de 	bge.w	8017df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8017c36:	f1bc 0f00 	cmp.w	ip, #0
 8017c3a:	f2c0 80da 	blt.w	8017df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8017c3e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8017c42:	45d4      	cmp	ip, sl
 8017c44:	f280 80d5 	bge.w	8017df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8017c48:	b21b      	sxth	r3, r3
 8017c4a:	9d07      	ldr	r5, [sp, #28]
 8017c4c:	fb0c 2203 	mla	r2, ip, r3, r2
 8017c50:	eb05 0a02 	add.w	sl, r5, r2
 8017c54:	5caa      	ldrb	r2, [r5, r2]
 8017c56:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8017c5a:	2800      	cmp	r0, #0
 8017c5c:	f000 80c0 	beq.w	8017de0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8017c60:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8017c64:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8017c68:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017c6a:	b151      	cbz	r1, 8017c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8017c6c:	eb0a 0203 	add.w	r2, sl, r3
 8017c70:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8017c74:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017c78:	9309      	str	r3, [sp, #36]	@ 0x24
 8017c7a:	7853      	ldrb	r3, [r2, #1]
 8017c7c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017c80:	930c      	str	r3, [sp, #48]	@ 0x30
 8017c82:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017c84:	fb10 f201 	smulbb	r2, r0, r1
 8017c88:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8017c8a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017c8e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8017c92:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8017c96:	10d2      	asrs	r2, r2, #3
 8017c98:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8017c9c:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8017ca0:	ea4c 0c03 	orr.w	ip, ip, r3
 8017ca4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017ca6:	041b      	lsls	r3, r3, #16
 8017ca8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017cac:	432b      	orrs	r3, r5
 8017cae:	4353      	muls	r3, r2
 8017cb0:	fb0a 330c 	mla	r3, sl, ip, r3
 8017cb4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8017cb8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8017cbc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8017cc0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8017cc4:	f1c1 0c10 	rsb	ip, r1, #16
 8017cc8:	ebac 0c00 	sub.w	ip, ip, r0
 8017ccc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8017cd0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8017cd4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8017cd8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017cda:	0418      	lsls	r0, r3, #16
 8017cdc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8017ce0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8017ce4:	4318      	orrs	r0, r3
 8017ce6:	fb02 c200 	mla	r2, r2, r0, ip
 8017cea:	0d53      	lsrs	r3, r2, #21
 8017cec:	0952      	lsrs	r2, r2, #5
 8017cee:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017cf2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8017cf6:	431a      	orrs	r2, r3
 8017cf8:	f8a8 2000 	strh.w	r2, [r8]
 8017cfc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017cfe:	f108 0802 	add.w	r8, r8, #2
 8017d02:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017d06:	441c      	add	r4, r3
 8017d08:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017d0a:	441e      	add	r6, r3
 8017d0c:	e77c      	b.n	8017c08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017d0e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017d10:	f109 0902 	add.w	r9, r9, #2
 8017d14:	441c      	add	r4, r3
 8017d16:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017d18:	441e      	add	r6, r3
 8017d1a:	9b06      	ldr	r3, [sp, #24]
 8017d1c:	3b01      	subs	r3, #1
 8017d1e:	9306      	str	r3, [sp, #24]
 8017d20:	e752      	b.n	8017bc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8017d22:	d020      	beq.n	8017d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8017d24:	9b06      	ldr	r3, [sp, #24]
 8017d26:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8017d28:	3b01      	subs	r3, #1
 8017d2a:	fb00 4003 	mla	r0, r0, r3, r4
 8017d2e:	1400      	asrs	r0, r0, #16
 8017d30:	f53f af67 	bmi.w	8017c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017d34:	3901      	subs	r1, #1
 8017d36:	4288      	cmp	r0, r1
 8017d38:	f6bf af63 	bge.w	8017c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017d3c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8017d3e:	fb01 6303 	mla	r3, r1, r3, r6
 8017d42:	141b      	asrs	r3, r3, #16
 8017d44:	f53f af5d 	bmi.w	8017c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017d48:	3a01      	subs	r2, #1
 8017d4a:	4293      	cmp	r3, r2
 8017d4c:	f6bf af59 	bge.w	8017c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017d50:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8017d54:	46ca      	mov	sl, r9
 8017d56:	f1b8 0f00 	cmp.w	r8, #0
 8017d5a:	dc67      	bgt.n	8017e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8017d5c:	9b06      	ldr	r3, [sp, #24]
 8017d5e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017d62:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8017d66:	9b08      	ldr	r3, [sp, #32]
 8017d68:	2b00      	cmp	r3, #0
 8017d6a:	f340 80d7 	ble.w	8017f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8017d6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017d72:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017d74:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017d78:	eeb0 6a62 	vmov.f32	s12, s5
 8017d7c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017d80:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017d84:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017d88:	ee16 4a10 	vmov	r4, s12
 8017d8c:	eeb0 6a43 	vmov.f32	s12, s6
 8017d90:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017d94:	ee16 6a10 	vmov	r6, s12
 8017d98:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017d9c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017da0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017da4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017da8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017dac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017db0:	ee12 2a90 	vmov	r2, s5
 8017db4:	eef0 2a47 	vmov.f32	s5, s14
 8017db8:	fb92 f3f3 	sdiv	r3, r2, r3
 8017dbc:	ee13 2a10 	vmov	r2, s6
 8017dc0:	931f      	str	r3, [sp, #124]	@ 0x7c
 8017dc2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017dc4:	eeb0 3a67 	vmov.f32	s6, s15
 8017dc8:	fb92 f3f3 	sdiv	r3, r2, r3
 8017dcc:	9320      	str	r3, [sp, #128]	@ 0x80
 8017dce:	9b08      	ldr	r3, [sp, #32]
 8017dd0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017dd2:	3b01      	subs	r3, #1
 8017dd4:	9308      	str	r3, [sp, #32]
 8017dd6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017dd8:	bf08      	it	eq
 8017dda:	4613      	moveq	r3, r2
 8017ddc:	9306      	str	r3, [sp, #24]
 8017dde:	e6e4      	b.n	8017baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8017de0:	2900      	cmp	r1, #0
 8017de2:	f43f af4e 	beq.w	8017c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8017de6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8017dea:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017dee:	9309      	str	r3, [sp, #36]	@ 0x24
 8017df0:	e747      	b.n	8017c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8017df2:	f112 0a01 	adds.w	sl, r2, #1
 8017df6:	d481      	bmi.n	8017cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017df8:	4553      	cmp	r3, sl
 8017dfa:	f6ff af7f 	blt.w	8017cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017dfe:	f11c 0a01 	adds.w	sl, ip, #1
 8017e02:	f53f af7b 	bmi.w	8017cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017e06:	45d6      	cmp	lr, sl
 8017e08:	f6ff af78 	blt.w	8017cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017e0c:	b21b      	sxth	r3, r3
 8017e0e:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8017e12:	fa0f f28e 	sxth.w	r2, lr
 8017e16:	9300      	str	r3, [sp, #0]
 8017e18:	463b      	mov	r3, r7
 8017e1a:	9201      	str	r2, [sp, #4]
 8017e1c:	9a07      	ldr	r2, [sp, #28]
 8017e1e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8017e22:	4641      	mov	r1, r8
 8017e24:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8017e26:	f7ff fe21 	bl	8017a6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8017e2a:	e767      	b.n	8017cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017e2c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8017e2e:	1422      	asrs	r2, r4, #16
 8017e30:	1431      	asrs	r1, r6, #16
 8017e32:	9d07      	ldr	r5, [sp, #28]
 8017e34:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8017e38:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8017e3c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017e40:	fb03 2101 	mla	r1, r3, r1, r2
 8017e44:	9a07      	ldr	r2, [sp, #28]
 8017e46:	440a      	add	r2, r1
 8017e48:	5c69      	ldrb	r1, [r5, r1]
 8017e4a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8017e4e:	f1be 0f00 	cmp.w	lr, #0
 8017e52:	d05c      	beq.n	8017f0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8017e54:	f892 c001 	ldrb.w	ip, [r2, #1]
 8017e58:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8017e5c:	950d      	str	r5, [sp, #52]	@ 0x34
 8017e5e:	b150      	cbz	r0, 8017e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8017e60:	eb02 0c03 	add.w	ip, r2, r3
 8017e64:	5cd3      	ldrb	r3, [r2, r3]
 8017e66:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017e6a:	930a      	str	r3, [sp, #40]	@ 0x28
 8017e6c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8017e70:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017e74:	930e      	str	r3, [sp, #56]	@ 0x38
 8017e76:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017e78:	fb1e f200 	smulbb	r2, lr, r0
 8017e7c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8017e7e:	f108 38ff 	add.w	r8, r8, #4294967295
 8017e82:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017e86:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8017e8a:	10d2      	asrs	r2, r2, #3
 8017e8c:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 8017e90:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8017e94:	ea4c 0c03 	orr.w	ip, ip, r3
 8017e98:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8017e9c:	9311      	str	r3, [sp, #68]	@ 0x44
 8017e9e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017ea0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8017ea2:	041b      	lsls	r3, r3, #16
 8017ea4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8017ea8:	ea43 030b 	orr.w	r3, r3, fp
 8017eac:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017eb0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8017eb4:	4353      	muls	r3, r2
 8017eb6:	fb05 3c0c 	mla	ip, r5, ip, r3
 8017eba:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8017ebe:	ea43 0b01 	orr.w	fp, r3, r1
 8017ec2:	f1c0 0110 	rsb	r1, r0, #16
 8017ec6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017ec8:	eba1 0e0e 	sub.w	lr, r1, lr
 8017ecc:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8017ed0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8017ed4:	fb0e cc0b 	mla	ip, lr, fp, ip
 8017ed8:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017edc:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 8017ee0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8017ee4:	ea4b 0e0e 	orr.w	lr, fp, lr
 8017ee8:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017eec:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8017ef0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8017ef4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017ef8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8017efc:	ea43 0c0c 	orr.w	ip, r3, ip
 8017f00:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017f02:	441c      	add	r4, r3
 8017f04:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017f06:	f82a cb02 	strh.w	ip, [sl], #2
 8017f0a:	441e      	add	r6, r3
 8017f0c:	e723      	b.n	8017d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8017f0e:	2800      	cmp	r0, #0
 8017f10:	d0b1      	beq.n	8017e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8017f12:	5cd3      	ldrb	r3, [r2, r3]
 8017f14:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017f18:	930a      	str	r3, [sp, #40]	@ 0x28
 8017f1a:	e7ac      	b.n	8017e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8017f1c:	b013      	add	sp, #76	@ 0x4c
 8017f1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017f22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8017f22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f26:	880d      	ldrh	r5, [r1, #0]
 8017f28:	b087      	sub	sp, #28
 8017f2a:	10ef      	asrs	r7, r5, #3
 8017f2c:	9103      	str	r1, [sp, #12]
 8017f2e:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8017f32:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 8017f36:	00ed      	lsls	r5, r5, #3
 8017f38:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017f3c:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8017f40:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8017f44:	b2ed      	uxtb	r5, r5
 8017f46:	9701      	str	r7, [sp, #4]
 8017f48:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 8017f4c:	9502      	str	r5, [sp, #8]
 8017f4e:	9d01      	ldr	r5, [sp, #4]
 8017f50:	9902      	ldr	r1, [sp, #8]
 8017f52:	022d      	lsls	r5, r5, #8
 8017f54:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 8017f58:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 8017f5c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8017f60:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8017f64:	430d      	orrs	r5, r1
 8017f66:	fb06 0709 	mla	r7, r6, r9, r0
 8017f6a:	2e00      	cmp	r6, #0
 8017f6c:	9505      	str	r5, [sp, #20]
 8017f6e:	eb02 0c07 	add.w	ip, r2, r7
 8017f72:	f2c0 80b6 	blt.w	80180e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8017f76:	45b3      	cmp	fp, r6
 8017f78:	f340 80b3 	ble.w	80180e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8017f7c:	2800      	cmp	r0, #0
 8017f7e:	f2c0 80ae 	blt.w	80180de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8017f82:	4581      	cmp	r9, r0
 8017f84:	f340 80ab 	ble.w	80180de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8017f88:	5dd7      	ldrb	r7, [r2, r7]
 8017f8a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8017f8e:	441f      	add	r7, r3
 8017f90:	1c42      	adds	r2, r0, #1
 8017f92:	f100 80a9 	bmi.w	80180e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8017f96:	4591      	cmp	r9, r2
 8017f98:	f340 80a6 	ble.w	80180e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8017f9c:	2c00      	cmp	r4, #0
 8017f9e:	f000 80a3 	beq.w	80180e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8017fa2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8017fa6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017faa:	441d      	add	r5, r3
 8017fac:	3601      	adds	r6, #1
 8017fae:	f100 809f 	bmi.w	80180f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8017fb2:	45b3      	cmp	fp, r6
 8017fb4:	f340 809c 	ble.w	80180f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8017fb8:	f1be 0f00 	cmp.w	lr, #0
 8017fbc:	f000 8098 	beq.w	80180f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8017fc0:	2800      	cmp	r0, #0
 8017fc2:	f2c0 8093 	blt.w	80180ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8017fc6:	4581      	cmp	r9, r0
 8017fc8:	f340 8090 	ble.w	80180ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8017fcc:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8017fd0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017fd4:	441e      	add	r6, r3
 8017fd6:	3001      	adds	r0, #1
 8017fd8:	f100 808d 	bmi.w	80180f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8017fdc:	4581      	cmp	r9, r0
 8017fde:	f340 808a 	ble.w	80180f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8017fe2:	2c00      	cmp	r4, #0
 8017fe4:	f000 8087 	beq.w	80180f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8017fe8:	44e1      	add	r9, ip
 8017fea:	f899 2001 	ldrb.w	r2, [r9, #1]
 8017fee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017ff2:	4413      	add	r3, r2
 8017ff4:	b2a4      	uxth	r4, r4
 8017ff6:	f897 c002 	ldrb.w	ip, [r7, #2]
 8017ffa:	fa1f fe8e 	uxth.w	lr, lr
 8017ffe:	9901      	ldr	r1, [sp, #4]
 8018000:	fb04 fb0e 	mul.w	fp, r4, lr
 8018004:	0124      	lsls	r4, r4, #4
 8018006:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801800a:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801800e:	eba4 040b 	sub.w	r4, r4, fp
 8018012:	fa1f f08e 	uxth.w	r0, lr
 8018016:	b2a2      	uxth	r2, r4
 8018018:	78ac      	ldrb	r4, [r5, #2]
 801801a:	eba9 0900 	sub.w	r9, r9, r0
 801801e:	fa1f fe88 	uxth.w	lr, r8
 8018022:	4354      	muls	r4, r2
 8018024:	ea6f 0808 	mvn.w	r8, r8
 8018028:	fa1f f989 	uxth.w	r9, r9
 801802c:	fa5f f888 	uxtb.w	r8, r8
 8018030:	fb09 440c 	mla	r4, r9, ip, r4
 8018034:	f896 c002 	ldrb.w	ip, [r6, #2]
 8018038:	fb1a fa08 	smulbb	sl, sl, r8
 801803c:	fb00 440c 	mla	r4, r0, ip, r4
 8018040:	f893 c002 	ldrb.w	ip, [r3, #2]
 8018044:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8018048:	787c      	ldrb	r4, [r7, #1]
 801804a:	783f      	ldrb	r7, [r7, #0]
 801804c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8018050:	fb0c ac0e 	mla	ip, ip, lr, sl
 8018054:	f895 a001 	ldrb.w	sl, [r5, #1]
 8018058:	782d      	ldrb	r5, [r5, #0]
 801805a:	fb02 fa0a 	mul.w	sl, r2, sl
 801805e:	fa1f fc8c 	uxth.w	ip, ip
 8018062:	436a      	muls	r2, r5
 8018064:	7835      	ldrb	r5, [r6, #0]
 8018066:	fb09 aa04 	mla	sl, r9, r4, sl
 801806a:	7874      	ldrb	r4, [r6, #1]
 801806c:	fb09 2207 	mla	r2, r9, r7, r2
 8018070:	fb00 aa04 	mla	sl, r0, r4, sl
 8018074:	785c      	ldrb	r4, [r3, #1]
 8018076:	fb00 2005 	mla	r0, r0, r5, r2
 801807a:	781b      	ldrb	r3, [r3, #0]
 801807c:	fb0b a404 	mla	r4, fp, r4, sl
 8018080:	fb11 fa08 	smulbb	sl, r1, r8
 8018084:	fb0b 0b03 	mla	fp, fp, r3, r0
 8018088:	9b02      	ldr	r3, [sp, #8]
 801808a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801808e:	fb13 f808 	smulbb	r8, r3, r8
 8018092:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8018096:	fb04 a40e 	mla	r4, r4, lr, sl
 801809a:	f10c 0301 	add.w	r3, ip, #1
 801809e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80180a2:	b2a4      	uxth	r4, r4
 80180a4:	fa1f fe8e 	uxth.w	lr, lr
 80180a8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80180ac:	f104 0a01 	add.w	sl, r4, #1
 80180b0:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 80180b4:	f10e 0c01 	add.w	ip, lr, #1
 80180b8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80180bc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80180c0:	0964      	lsrs	r4, r4, #5
 80180c2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80180c6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80180ca:	ea4c 0c03 	orr.w	ip, ip, r3
 80180ce:	9b03      	ldr	r3, [sp, #12]
 80180d0:	ea4c 0c04 	orr.w	ip, ip, r4
 80180d4:	f8a3 c000 	strh.w	ip, [r3]
 80180d8:	b007      	add	sp, #28
 80180da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80180de:	af05      	add	r7, sp, #20
 80180e0:	e756      	b.n	8017f90 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80180e2:	ad05      	add	r5, sp, #20
 80180e4:	462f      	mov	r7, r5
 80180e6:	e761      	b.n	8017fac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80180e8:	ad05      	add	r5, sp, #20
 80180ea:	e75f      	b.n	8017fac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80180ec:	ae05      	add	r6, sp, #20
 80180ee:	e772      	b.n	8017fd6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80180f0:	ab05      	add	r3, sp, #20
 80180f2:	461e      	mov	r6, r3
 80180f4:	e77e      	b.n	8017ff4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80180f6:	ab05      	add	r3, sp, #20
 80180f8:	e77c      	b.n	8017ff4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080180fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80180fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180fe:	b095      	sub	sp, #84	@ 0x54
 8018100:	9212      	str	r2, [sp, #72]	@ 0x48
 8018102:	9309      	str	r3, [sp, #36]	@ 0x24
 8018104:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8018106:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801810a:	9013      	str	r0, [sp, #76]	@ 0x4c
 801810c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801810e:	6850      	ldr	r0, [r2, #4]
 8018110:	910e      	str	r1, [sp, #56]	@ 0x38
 8018112:	6812      	ldr	r2, [r2, #0]
 8018114:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 8018118:	fb00 1303 	mla	r3, r0, r3, r1
 801811c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018120:	930a      	str	r3, [sp, #40]	@ 0x28
 8018122:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8018124:	681b      	ldr	r3, [r3, #0]
 8018126:	930d      	str	r3, [sp, #52]	@ 0x34
 8018128:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801812a:	685c      	ldr	r4, [r3, #4]
 801812c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801812e:	3404      	adds	r4, #4
 8018130:	43db      	mvns	r3, r3
 8018132:	b2db      	uxtb	r3, r3
 8018134:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018136:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018138:	2b00      	cmp	r3, #0
 801813a:	dc03      	bgt.n	8018144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801813c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801813e:	2b00      	cmp	r3, #0
 8018140:	f340 8255 	ble.w	80185ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8018144:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8018146:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801814a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801814e:	1e48      	subs	r0, r1, #1
 8018150:	1e55      	subs	r5, r2, #1
 8018152:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018154:	2b00      	cmp	r3, #0
 8018156:	f340 80f9 	ble.w	801834c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801815a:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801815c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801815e:	1436      	asrs	r6, r6, #16
 8018160:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018164:	d406      	bmi.n	8018174 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018166:	4286      	cmp	r6, r0
 8018168:	da04      	bge.n	8018174 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801816a:	2b00      	cmp	r3, #0
 801816c:	db02      	blt.n	8018174 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801816e:	42ab      	cmp	r3, r5
 8018170:	f2c0 80ed 	blt.w	801834e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8018174:	3601      	adds	r6, #1
 8018176:	f100 80da 	bmi.w	801832e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801817a:	42b1      	cmp	r1, r6
 801817c:	f2c0 80d7 	blt.w	801832e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018180:	3301      	adds	r3, #1
 8018182:	f100 80d4 	bmi.w	801832e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018186:	429a      	cmp	r2, r3
 8018188:	f2c0 80d1 	blt.w	801832e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801818c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801818e:	9311      	str	r3, [sp, #68]	@ 0x44
 8018190:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018192:	930c      	str	r3, [sp, #48]	@ 0x30
 8018194:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018196:	2b00      	cmp	r3, #0
 8018198:	f340 80fa 	ble.w	8018390 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801819c:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801819e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80181a0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80181a2:	68c6      	ldr	r6, [r0, #12]
 80181a4:	141d      	asrs	r5, r3, #16
 80181a6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80181a8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80181ac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80181ae:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 80181b0:	1400      	asrs	r0, r0, #16
 80181b2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80181b6:	6892      	ldr	r2, [r2, #8]
 80181b8:	f100 813e 	bmi.w	8018438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80181bc:	1e57      	subs	r7, r2, #1
 80181be:	42b8      	cmp	r0, r7
 80181c0:	f280 813a 	bge.w	8018438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80181c4:	2d00      	cmp	r5, #0
 80181c6:	f2c0 8137 	blt.w	8018438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80181ca:	1e77      	subs	r7, r6, #1
 80181cc:	42bd      	cmp	r5, r7
 80181ce:	f280 8133 	bge.w	8018438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80181d2:	b212      	sxth	r2, r2
 80181d4:	fb05 0002 	mla	r0, r5, r2, r0
 80181d8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80181da:	f815 a000 	ldrb.w	sl, [r5, r0]
 80181de:	182e      	adds	r6, r5, r0
 80181e0:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80181e4:	eb04 050a 	add.w	r5, r4, sl
 80181e8:	2b00      	cmp	r3, #0
 80181ea:	f000 8117 	beq.w	801841c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80181ee:	f896 c001 	ldrb.w	ip, [r6, #1]
 80181f2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80181f6:	44a4      	add	ip, r4
 80181f8:	2900      	cmp	r1, #0
 80181fa:	f000 8117 	beq.w	801842c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80181fe:	18b0      	adds	r0, r6, r2
 8018200:	5cb2      	ldrb	r2, [r6, r2]
 8018202:	7840      	ldrb	r0, [r0, #1]
 8018204:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018208:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801820c:	4422      	add	r2, r4
 801820e:	4420      	add	r0, r4
 8018210:	b29b      	uxth	r3, r3
 8018212:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8018216:	b289      	uxth	r1, r1
 8018218:	f895 b002 	ldrb.w	fp, [r5, #2]
 801821c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801821e:	fb03 f901 	mul.w	r9, r3, r1
 8018222:	011b      	lsls	r3, r3, #4
 8018224:	f8b6 e000 	ldrh.w	lr, [r6]
 8018228:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801822c:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 8018230:	eba3 0309 	sub.w	r3, r3, r9
 8018234:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 8018238:	b289      	uxth	r1, r1
 801823a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801823e:	b29b      	uxth	r3, r3
 8018240:	eba8 0801 	sub.w	r8, r8, r1
 8018244:	435f      	muls	r7, r3
 8018246:	fa1f f888 	uxth.w	r8, r8
 801824a:	9310      	str	r3, [sp, #64]	@ 0x40
 801824c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801824e:	fb08 770b 	mla	r7, r8, fp, r7
 8018252:	f892 b002 	ldrb.w	fp, [r2, #2]
 8018256:	fb01 770b 	mla	r7, r1, fp, r7
 801825a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801825e:	fb09 770b 	mla	r7, r9, fp, r7
 8018262:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8018266:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801826a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801826e:	fb1b fb03 	smulbb	fp, fp, r3
 8018272:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018274:	fb07 b706 	mla	r7, r7, r6, fp
 8018278:	f895 b001 	ldrb.w	fp, [r5, #1]
 801827c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8018280:	f89c c000 	ldrb.w	ip, [ip]
 8018284:	b2bf      	uxth	r7, r7
 8018286:	435d      	muls	r5, r3
 8018288:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801828a:	fb08 550b 	mla	r5, r8, fp, r5
 801828e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8018292:	fb01 550b 	mla	r5, r1, fp, r5
 8018296:	f890 b001 	ldrb.w	fp, [r0, #1]
 801829a:	fb09 550b 	mla	r5, r9, fp, r5
 801829e:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80182a2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80182a6:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80182aa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80182ae:	fa5f fe8e 	uxtb.w	lr, lr
 80182b2:	fb1b fb03 	smulbb	fp, fp, r3
 80182b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80182b8:	fb03 f30c 	mul.w	r3, r3, ip
 80182bc:	f892 c000 	ldrb.w	ip, [r2]
 80182c0:	fb05 b506 	mla	r5, r5, r6, fp
 80182c4:	fb08 330a 	mla	r3, r8, sl, r3
 80182c8:	b2ad      	uxth	r5, r5
 80182ca:	fb01 330c 	mla	r3, r1, ip, r3
 80182ce:	f890 c000 	ldrb.w	ip, [r0]
 80182d2:	f105 0b01 	add.w	fp, r5, #1
 80182d6:	fb09 3c0c 	mla	ip, r9, ip, r3
 80182da:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80182dc:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80182e0:	fb1e fe03 	smulbb	lr, lr, r3
 80182e4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80182e8:	1c7b      	adds	r3, r7, #1
 80182ea:	096d      	lsrs	r5, r5, #5
 80182ec:	fb0c e606 	mla	r6, ip, r6, lr
 80182f0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80182f4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80182f8:	b2b6      	uxth	r6, r6
 80182fa:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 80182fe:	1c77      	adds	r7, r6, #1
 8018300:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8018304:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018308:	431f      	orrs	r7, r3
 801830a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801830c:	433d      	orrs	r5, r7
 801830e:	801d      	strh	r5, [r3, #0]
 8018310:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018312:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8018314:	3302      	adds	r3, #2
 8018316:	930c      	str	r3, [sp, #48]	@ 0x30
 8018318:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801831a:	4413      	add	r3, r2
 801831c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801831e:	931f      	str	r3, [sp, #124]	@ 0x7c
 8018320:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018322:	4413      	add	r3, r2
 8018324:	9320      	str	r3, [sp, #128]	@ 0x80
 8018326:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018328:	3b01      	subs	r3, #1
 801832a:	9311      	str	r3, [sp, #68]	@ 0x44
 801832c:	e732      	b.n	8018194 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801832e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8018330:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8018332:	4433      	add	r3, r6
 8018334:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8018336:	931f      	str	r3, [sp, #124]	@ 0x7c
 8018338:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801833a:	4433      	add	r3, r6
 801833c:	9320      	str	r3, [sp, #128]	@ 0x80
 801833e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018340:	3b01      	subs	r3, #1
 8018342:	9309      	str	r3, [sp, #36]	@ 0x24
 8018344:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018346:	3302      	adds	r3, #2
 8018348:	930a      	str	r3, [sp, #40]	@ 0x28
 801834a:	e702      	b.n	8018152 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801834c:	d027      	beq.n	801839e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801834e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018350:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8018352:	3b01      	subs	r3, #1
 8018354:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8018356:	fb00 5003 	mla	r0, r0, r3, r5
 801835a:	1400      	asrs	r0, r0, #16
 801835c:	f53f af16 	bmi.w	801818c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018360:	3901      	subs	r1, #1
 8018362:	4288      	cmp	r0, r1
 8018364:	f6bf af12 	bge.w	801818c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018368:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801836a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801836c:	fb01 0303 	mla	r3, r1, r3, r0
 8018370:	141b      	asrs	r3, r3, #16
 8018372:	f53f af0b 	bmi.w	801818c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018376:	3a01      	subs	r2, #1
 8018378:	4293      	cmp	r3, r2
 801837a:	f6bf af07 	bge.w	801818c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801837e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018380:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 8018384:	9311      	str	r3, [sp, #68]	@ 0x44
 8018386:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018388:	930c      	str	r3, [sp, #48]	@ 0x30
 801838a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801838c:	2b00      	cmp	r3, #0
 801838e:	dc70      	bgt.n	8018472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8018390:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018392:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8018394:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018398:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801839c:	930a      	str	r3, [sp, #40]	@ 0x28
 801839e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80183a0:	2b00      	cmp	r3, #0
 80183a2:	f340 8124 	ble.w	80185ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80183a6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80183aa:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80183ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 80183b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80183b4:	eef0 6a62 	vmov.f32	s13, s5
 80183b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80183bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80183c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80183c4:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 80183c8:	eef0 6a43 	vmov.f32	s13, s6
 80183cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80183d0:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 80183d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80183d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80183dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80183e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80183e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80183e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80183ec:	ee12 2a90 	vmov	r2, s5
 80183f0:	eef0 2a47 	vmov.f32	s5, s14
 80183f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80183f8:	ee13 2a10 	vmov	r2, s6
 80183fc:	9321      	str	r3, [sp, #132]	@ 0x84
 80183fe:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8018400:	eeb0 3a67 	vmov.f32	s6, s15
 8018404:	fb92 f3f3 	sdiv	r3, r2, r3
 8018408:	9322      	str	r3, [sp, #136]	@ 0x88
 801840a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801840c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801840e:	3b01      	subs	r3, #1
 8018410:	930e      	str	r3, [sp, #56]	@ 0x38
 8018412:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8018414:	bf08      	it	eq
 8018416:	4613      	moveq	r3, r2
 8018418:	9309      	str	r3, [sp, #36]	@ 0x24
 801841a:	e68c      	b.n	8018136 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801841c:	b149      	cbz	r1, 8018432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801841e:	5cb2      	ldrb	r2, [r6, r2]
 8018420:	4628      	mov	r0, r5
 8018422:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018426:	4422      	add	r2, r4
 8018428:	46ac      	mov	ip, r5
 801842a:	e6f1      	b.n	8018210 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801842c:	4628      	mov	r0, r5
 801842e:	462a      	mov	r2, r5
 8018430:	e6ee      	b.n	8018210 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8018432:	4628      	mov	r0, r5
 8018434:	462a      	mov	r2, r5
 8018436:	e7f7      	b.n	8018428 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8018438:	1c47      	adds	r7, r0, #1
 801843a:	f53f af69 	bmi.w	8018310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801843e:	42ba      	cmp	r2, r7
 8018440:	f6ff af66 	blt.w	8018310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8018444:	1c6f      	adds	r7, r5, #1
 8018446:	f53f af63 	bmi.w	8018310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801844a:	42be      	cmp	r6, r7
 801844c:	f6ff af60 	blt.w	8018310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8018450:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8018452:	b236      	sxth	r6, r6
 8018454:	b212      	sxth	r2, r2
 8018456:	9002      	str	r0, [sp, #8]
 8018458:	9601      	str	r6, [sp, #4]
 801845a:	9200      	str	r2, [sp, #0]
 801845c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801845e:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8018462:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8018466:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801846a:	4623      	mov	r3, r4
 801846c:	f7ff fd59 	bl	8017f22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8018470:	e74e      	b.n	8018310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8018472:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8018474:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8018476:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801847a:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801847c:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801847e:	1400      	asrs	r0, r0, #16
 8018480:	142d      	asrs	r5, r5, #16
 8018482:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8018484:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8018488:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801848c:	fb02 5000 	mla	r0, r2, r0, r5
 8018490:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8018492:	f815 9000 	ldrb.w	r9, [r5, r0]
 8018496:	182e      	adds	r6, r5, r0
 8018498:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801849c:	eb04 0509 	add.w	r5, r4, r9
 80184a0:	2b00      	cmp	r3, #0
 80184a2:	f000 8096 	beq.w	80185d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80184a6:	7877      	ldrb	r7, [r6, #1]
 80184a8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80184ac:	4427      	add	r7, r4
 80184ae:	2900      	cmp	r1, #0
 80184b0:	f000 8097 	beq.w	80185e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80184b4:	18b0      	adds	r0, r6, r2
 80184b6:	5cb2      	ldrb	r2, [r6, r2]
 80184b8:	7840      	ldrb	r0, [r0, #1]
 80184ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80184be:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80184c2:	4422      	add	r2, r4
 80184c4:	4420      	add	r0, r4
 80184c6:	b29b      	uxth	r3, r3
 80184c8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80184ca:	b289      	uxth	r1, r1
 80184cc:	f895 b002 	ldrb.w	fp, [r5, #2]
 80184d0:	f8b6 c000 	ldrh.w	ip, [r6]
 80184d4:	fb03 f801 	mul.w	r8, r3, r1
 80184d8:	011b      	lsls	r3, r3, #4
 80184da:	78be      	ldrb	r6, [r7, #2]
 80184dc:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80184e0:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80184e4:	eba3 0308 	sub.w	r3, r3, r8
 80184e8:	f814 9009 	ldrb.w	r9, [r4, r9]
 80184ec:	b289      	uxth	r1, r1
 80184ee:	b29b      	uxth	r3, r3
 80184f0:	ebae 0e01 	sub.w	lr, lr, r1
 80184f4:	435e      	muls	r6, r3
 80184f6:	fa1f fe8e 	uxth.w	lr, lr
 80184fa:	9310      	str	r3, [sp, #64]	@ 0x40
 80184fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80184fe:	fb0e 660b 	mla	r6, lr, fp, r6
 8018502:	f892 b002 	ldrb.w	fp, [r2, #2]
 8018506:	fb01 660b 	mla	r6, r1, fp, r6
 801850a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801850e:	fb08 660b 	mla	r6, r8, fp, r6
 8018512:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8018516:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801851a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801851e:	fb1b fb03 	smulbb	fp, fp, r3
 8018522:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018524:	fb06 b60a 	mla	r6, r6, sl, fp
 8018528:	f895 b001 	ldrb.w	fp, [r5, #1]
 801852c:	787d      	ldrb	r5, [r7, #1]
 801852e:	783f      	ldrb	r7, [r7, #0]
 8018530:	b2b6      	uxth	r6, r6
 8018532:	435d      	muls	r5, r3
 8018534:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018536:	fb0e 550b 	mla	r5, lr, fp, r5
 801853a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801853e:	fb01 550b 	mla	r5, r1, fp, r5
 8018542:	f890 b001 	ldrb.w	fp, [r0, #1]
 8018546:	fb08 550b 	mla	r5, r8, fp, r5
 801854a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801854e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018552:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8018556:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801855a:	fa5f fc8c 	uxtb.w	ip, ip
 801855e:	fb1b fb03 	smulbb	fp, fp, r3
 8018562:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018564:	437b      	muls	r3, r7
 8018566:	7817      	ldrb	r7, [r2, #0]
 8018568:	fb05 b50a 	mla	r5, r5, sl, fp
 801856c:	fb0e 3309 	mla	r3, lr, r9, r3
 8018570:	b2ad      	uxth	r5, r5
 8018572:	fb01 3307 	mla	r3, r1, r7, r3
 8018576:	7807      	ldrb	r7, [r0, #0]
 8018578:	f105 0b01 	add.w	fp, r5, #1
 801857c:	fb08 3707 	mla	r7, r8, r7, r3
 8018580:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018582:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8018586:	fb1c fc03 	smulbb	ip, ip, r3
 801858a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801858e:	1c73      	adds	r3, r6, #1
 8018590:	096d      	lsrs	r5, r5, #5
 8018592:	fb07 c70a 	mla	r7, r7, sl, ip
 8018596:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801859a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801859e:	b2bf      	uxth	r7, r7
 80185a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80185a2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80185a6:	1c7a      	adds	r2, r7, #1
 80185a8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80185ac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80185b0:	4316      	orrs	r6, r2
 80185b2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80185b4:	432e      	orrs	r6, r5
 80185b6:	f823 6b02 	strh.w	r6, [r3], #2
 80185ba:	930c      	str	r3, [sp, #48]	@ 0x30
 80185bc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80185be:	4413      	add	r3, r2
 80185c0:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80185c2:	931f      	str	r3, [sp, #124]	@ 0x7c
 80185c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80185c6:	4413      	add	r3, r2
 80185c8:	9320      	str	r3, [sp, #128]	@ 0x80
 80185ca:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80185cc:	3b01      	subs	r3, #1
 80185ce:	9311      	str	r3, [sp, #68]	@ 0x44
 80185d0:	e6db      	b.n	801838a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80185d2:	b149      	cbz	r1, 80185e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80185d4:	5cb2      	ldrb	r2, [r6, r2]
 80185d6:	4628      	mov	r0, r5
 80185d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80185dc:	4422      	add	r2, r4
 80185de:	462f      	mov	r7, r5
 80185e0:	e771      	b.n	80184c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80185e2:	4628      	mov	r0, r5
 80185e4:	462a      	mov	r2, r5
 80185e6:	e76e      	b.n	80184c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80185e8:	4628      	mov	r0, r5
 80185ea:	462a      	mov	r2, r5
 80185ec:	e7f7      	b.n	80185de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80185ee:	b015      	add	sp, #84	@ 0x54
 80185f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080185f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80185f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185f8:	880f      	ldrh	r7, [r1, #0]
 80185fa:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 80185fe:	023c      	lsls	r4, r7, #8
 8018600:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8018604:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 8018608:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801860c:	017c      	lsls	r4, r7, #5
 801860e:	00ff      	lsls	r7, r7, #3
 8018610:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8018614:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 8018618:	b2ff      	uxtb	r7, r7
 801861a:	ea4b 0404 	orr.w	r4, fp, r4
 801861e:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 8018622:	4327      	orrs	r7, r4
 8018624:	fb05 ca0e 	mla	sl, r5, lr, ip
 8018628:	2d00      	cmp	r5, #0
 801862a:	9701      	str	r7, [sp, #4]
 801862c:	eb02 080a 	add.w	r8, r2, sl
 8018630:	db7e      	blt.n	8018730 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8018632:	45a9      	cmp	r9, r5
 8018634:	dd7c      	ble.n	8018730 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8018636:	f1bc 0f00 	cmp.w	ip, #0
 801863a:	db77      	blt.n	801872c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801863c:	45e6      	cmp	lr, ip
 801863e:	dd75      	ble.n	801872c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8018640:	f812 700a 	ldrb.w	r7, [r2, sl]
 8018644:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8018648:	441f      	add	r7, r3
 801864a:	f11c 0201 	adds.w	r2, ip, #1
 801864e:	d472      	bmi.n	8018736 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8018650:	4596      	cmp	lr, r2
 8018652:	dd70      	ble.n	8018736 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8018654:	2800      	cmp	r0, #0
 8018656:	d06e      	beq.n	8018736 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8018658:	f898 4001 	ldrb.w	r4, [r8, #1]
 801865c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8018660:	441c      	add	r4, r3
 8018662:	3501      	adds	r5, #1
 8018664:	d46b      	bmi.n	801873e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8018666:	45a9      	cmp	r9, r5
 8018668:	dd69      	ble.n	801873e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801866a:	2e00      	cmp	r6, #0
 801866c:	d067      	beq.n	801873e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801866e:	f1bc 0f00 	cmp.w	ip, #0
 8018672:	db62      	blt.n	801873a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8018674:	45e6      	cmp	lr, ip
 8018676:	dd60      	ble.n	801873a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8018678:	f818 500e 	ldrb.w	r5, [r8, lr]
 801867c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018680:	441d      	add	r5, r3
 8018682:	f11c 0201 	adds.w	r2, ip, #1
 8018686:	d45d      	bmi.n	8018744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8018688:	4596      	cmp	lr, r2
 801868a:	dd5b      	ble.n	8018744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801868c:	2800      	cmp	r0, #0
 801868e:	d059      	beq.n	8018744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8018690:	44c6      	add	lr, r8
 8018692:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018696:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801869a:	4413      	add	r3, r2
 801869c:	b280      	uxth	r0, r0
 801869e:	f897 e002 	ldrb.w	lr, [r7, #2]
 80186a2:	b2b2      	uxth	r2, r6
 80186a4:	f897 9000 	ldrb.w	r9, [r7]
 80186a8:	787f      	ldrb	r7, [r7, #1]
 80186aa:	fb00 f602 	mul.w	r6, r0, r2
 80186ae:	0100      	lsls	r0, r0, #4
 80186b0:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80186b4:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 80186b8:	1b80      	subs	r0, r0, r6
 80186ba:	fa1f fc82 	uxth.w	ip, r2
 80186be:	b282      	uxth	r2, r0
 80186c0:	78a0      	ldrb	r0, [r4, #2]
 80186c2:	eba8 080c 	sub.w	r8, r8, ip
 80186c6:	4350      	muls	r0, r2
 80186c8:	fa1f f888 	uxth.w	r8, r8
 80186cc:	fb08 0e0e 	mla	lr, r8, lr, r0
 80186d0:	78a8      	ldrb	r0, [r5, #2]
 80186d2:	fb0c e000 	mla	r0, ip, r0, lr
 80186d6:	f893 e002 	ldrb.w	lr, [r3, #2]
 80186da:	fb06 0e0e 	mla	lr, r6, lr, r0
 80186de:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 80186e2:	f894 e000 	ldrb.w	lr, [r4]
 80186e6:	fb02 fe0e 	mul.w	lr, r2, lr
 80186ea:	fb08 e909 	mla	r9, r8, r9, lr
 80186ee:	f895 e000 	ldrb.w	lr, [r5]
 80186f2:	fb0c 990e 	mla	r9, ip, lr, r9
 80186f6:	f893 e000 	ldrb.w	lr, [r3]
 80186fa:	785b      	ldrb	r3, [r3, #1]
 80186fc:	fb06 9e0e 	mla	lr, r6, lr, r9
 8018700:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018704:	ea4e 0e00 	orr.w	lr, lr, r0
 8018708:	7860      	ldrb	r0, [r4, #1]
 801870a:	4350      	muls	r0, r2
 801870c:	786a      	ldrb	r2, [r5, #1]
 801870e:	fb08 0007 	mla	r0, r8, r7, r0
 8018712:	fb0c 0202 	mla	r2, ip, r2, r0
 8018716:	fb06 2303 	mla	r3, r6, r3, r2
 801871a:	095b      	lsrs	r3, r3, #5
 801871c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018720:	ea4e 0303 	orr.w	r3, lr, r3
 8018724:	800b      	strh	r3, [r1, #0]
 8018726:	b003      	add	sp, #12
 8018728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801872c:	af01      	add	r7, sp, #4
 801872e:	e78c      	b.n	801864a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8018730:	ac01      	add	r4, sp, #4
 8018732:	4627      	mov	r7, r4
 8018734:	e795      	b.n	8018662 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8018736:	ac01      	add	r4, sp, #4
 8018738:	e793      	b.n	8018662 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801873a:	ad01      	add	r5, sp, #4
 801873c:	e7a1      	b.n	8018682 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801873e:	ab01      	add	r3, sp, #4
 8018740:	461d      	mov	r5, r3
 8018742:	e7ab      	b.n	801869c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8018744:	ab01      	add	r3, sp, #4
 8018746:	e7a9      	b.n	801869c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08018748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801874c:	b08f      	sub	sp, #60	@ 0x3c
 801874e:	920c      	str	r2, [sp, #48]	@ 0x30
 8018750:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8018752:	900d      	str	r0, [sp, #52]	@ 0x34
 8018754:	910a      	str	r1, [sp, #40]	@ 0x28
 8018756:	6850      	ldr	r0, [r2, #4]
 8018758:	9306      	str	r3, [sp, #24]
 801875a:	6812      	ldr	r2, [r2, #0]
 801875c:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 8018760:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 8018764:	fb00 1303 	mla	r3, r0, r3, r1
 8018768:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801876c:	9307      	str	r3, [sp, #28]
 801876e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018770:	681b      	ldr	r3, [r3, #0]
 8018772:	9308      	str	r3, [sp, #32]
 8018774:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018776:	685c      	ldr	r4, [r3, #4]
 8018778:	3404      	adds	r4, #4
 801877a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801877c:	2b00      	cmp	r3, #0
 801877e:	dc03      	bgt.n	8018788 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8018780:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018782:	2b00      	cmp	r3, #0
 8018784:	f340 81d5 	ble.w	8018b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8018788:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801878a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801878e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018792:	1e48      	subs	r0, r1, #1
 8018794:	1e56      	subs	r6, r2, #1
 8018796:	9b06      	ldr	r3, [sp, #24]
 8018798:	2b00      	cmp	r3, #0
 801879a:	f340 80b6 	ble.w	801890a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801879e:	ea5f 472b 	movs.w	r7, fp, asr #16
 80187a2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80187a6:	d406      	bmi.n	80187b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80187a8:	4287      	cmp	r7, r0
 80187aa:	da04      	bge.n	80187b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80187ac:	2b00      	cmp	r3, #0
 80187ae:	db02      	blt.n	80187b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80187b0:	42b3      	cmp	r3, r6
 80187b2:	f2c0 80ab 	blt.w	801890c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80187b6:	3701      	adds	r7, #1
 80187b8:	f100 809c 	bmi.w	80188f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80187bc:	42b9      	cmp	r1, r7
 80187be:	f2c0 8099 	blt.w	80188f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80187c2:	3301      	adds	r3, #1
 80187c4:	f100 8096 	bmi.w	80188f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80187c8:	429a      	cmp	r2, r3
 80187ca:	f2c0 8093 	blt.w	80188f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80187ce:	9b06      	ldr	r3, [sp, #24]
 80187d0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80187d2:	9b07      	ldr	r3, [sp, #28]
 80187d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80187d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80187d8:	2b00      	cmp	r3, #0
 80187da:	f340 80b4 	ble.w	8018946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80187de:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80187e0:	142e      	asrs	r6, r5, #16
 80187e2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80187e4:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80187e8:	68c7      	ldr	r7, [r0, #12]
 80187ea:	ea5f 402b 	movs.w	r0, fp, asr #16
 80187ee:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80187f2:	6892      	ldr	r2, [r2, #8]
 80187f4:	f100 80fb 	bmi.w	80189ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80187f8:	f102 3cff 	add.w	ip, r2, #4294967295
 80187fc:	4560      	cmp	r0, ip
 80187fe:	f280 80f6 	bge.w	80189ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8018802:	2e00      	cmp	r6, #0
 8018804:	f2c0 80f3 	blt.w	80189ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8018808:	f107 3cff 	add.w	ip, r7, #4294967295
 801880c:	4566      	cmp	r6, ip
 801880e:	f280 80ee 	bge.w	80189ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8018812:	b212      	sxth	r2, r2
 8018814:	fb06 0002 	mla	r0, r6, r2, r0
 8018818:	9e08      	ldr	r6, [sp, #32]
 801881a:	1837      	adds	r7, r6, r0
 801881c:	5c30      	ldrb	r0, [r6, r0]
 801881e:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8018822:	eb04 0c08 	add.w	ip, r4, r8
 8018826:	2b00      	cmp	r3, #0
 8018828:	f000 80d3 	beq.w	80189d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801882c:	787e      	ldrb	r6, [r7, #1]
 801882e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8018832:	4426      	add	r6, r4
 8018834:	2900      	cmp	r1, #0
 8018836:	f000 80d4 	beq.w	80189e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801883a:	18b8      	adds	r0, r7, r2
 801883c:	5cba      	ldrb	r2, [r7, r2]
 801883e:	7840      	ldrb	r0, [r0, #1]
 8018840:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018844:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018848:	4422      	add	r2, r4
 801884a:	4420      	add	r0, r4
 801884c:	b29b      	uxth	r3, r3
 801884e:	78b7      	ldrb	r7, [r6, #2]
 8018850:	b289      	uxth	r1, r1
 8018852:	f89c a002 	ldrb.w	sl, [ip, #2]
 8018856:	f89c c001 	ldrb.w	ip, [ip, #1]
 801885a:	fb03 f901 	mul.w	r9, r3, r1
 801885e:	011b      	lsls	r3, r3, #4
 8018860:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018864:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8018868:	eba3 0309 	sub.w	r3, r3, r9
 801886c:	b289      	uxth	r1, r1
 801886e:	b29b      	uxth	r3, r3
 8018870:	ebae 0e01 	sub.w	lr, lr, r1
 8018874:	435f      	muls	r7, r3
 8018876:	fa1f fe8e 	uxth.w	lr, lr
 801887a:	fb0e 770a 	mla	r7, lr, sl, r7
 801887e:	f892 a002 	ldrb.w	sl, [r2, #2]
 8018882:	fb01 770a 	mla	r7, r1, sl, r7
 8018886:	f890 a002 	ldrb.w	sl, [r0, #2]
 801888a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801888e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8018892:	f896 8000 	ldrb.w	r8, [r6]
 8018896:	7876      	ldrb	r6, [r6, #1]
 8018898:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801889c:	fb03 f808 	mul.w	r8, r3, r8
 80188a0:	4373      	muls	r3, r6
 80188a2:	fb0e 8807 	mla	r8, lr, r7, r8
 80188a6:	7817      	ldrb	r7, [r2, #0]
 80188a8:	fb0e 330c 	mla	r3, lr, ip, r3
 80188ac:	fb01 8807 	mla	r8, r1, r7, r8
 80188b0:	7807      	ldrb	r7, [r0, #0]
 80188b2:	fb09 8707 	mla	r7, r9, r7, r8
 80188b6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80188ba:	ea47 070a 	orr.w	r7, r7, sl
 80188be:	f892 a001 	ldrb.w	sl, [r2, #1]
 80188c2:	fb01 310a 	mla	r1, r1, sl, r3
 80188c6:	f890 a001 	ldrb.w	sl, [r0, #1]
 80188ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80188cc:	fb09 1a0a 	mla	sl, r9, sl, r1
 80188d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80188d4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80188d8:	ea47 070a 	orr.w	r7, r7, sl
 80188dc:	801f      	strh	r7, [r3, #0]
 80188de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80188e0:	3302      	adds	r3, #2
 80188e2:	9309      	str	r3, [sp, #36]	@ 0x24
 80188e4:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80188e6:	449b      	add	fp, r3
 80188e8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80188ea:	441d      	add	r5, r3
 80188ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80188ee:	3b01      	subs	r3, #1
 80188f0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80188f2:	e770      	b.n	80187d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80188f4:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80188f6:	449b      	add	fp, r3
 80188f8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80188fa:	441d      	add	r5, r3
 80188fc:	9b06      	ldr	r3, [sp, #24]
 80188fe:	3b01      	subs	r3, #1
 8018900:	9306      	str	r3, [sp, #24]
 8018902:	9b07      	ldr	r3, [sp, #28]
 8018904:	3302      	adds	r3, #2
 8018906:	9307      	str	r3, [sp, #28]
 8018908:	e745      	b.n	8018796 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801890a:	d023      	beq.n	8018954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801890c:	9b06      	ldr	r3, [sp, #24]
 801890e:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8018910:	3b01      	subs	r3, #1
 8018912:	fb00 b003 	mla	r0, r0, r3, fp
 8018916:	1400      	asrs	r0, r0, #16
 8018918:	f53f af59 	bmi.w	80187ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801891c:	3901      	subs	r1, #1
 801891e:	4288      	cmp	r0, r1
 8018920:	f6bf af55 	bge.w	80187ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018924:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8018926:	fb01 5303 	mla	r3, r1, r3, r5
 801892a:	141b      	asrs	r3, r3, #16
 801892c:	f53f af4f 	bmi.w	80187ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018930:	3a01      	subs	r2, #1
 8018932:	4293      	cmp	r3, r2
 8018934:	f6bf af4b 	bge.w	80187ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018938:	9b06      	ldr	r3, [sp, #24]
 801893a:	9309      	str	r3, [sp, #36]	@ 0x24
 801893c:	9b07      	ldr	r3, [sp, #28]
 801893e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018940:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018942:	2b00      	cmp	r3, #0
 8018944:	dc70      	bgt.n	8018a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8018946:	9b06      	ldr	r3, [sp, #24]
 8018948:	9a07      	ldr	r2, [sp, #28]
 801894a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801894e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018952:	9307      	str	r3, [sp, #28]
 8018954:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018956:	2b00      	cmp	r3, #0
 8018958:	f340 80eb 	ble.w	8018b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801895c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018960:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8018962:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018966:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801896a:	eef0 6a62 	vmov.f32	s13, s5
 801896e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018972:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018976:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801897a:	ee16 ba90 	vmov	fp, s13
 801897e:	eef0 6a43 	vmov.f32	s13, s6
 8018982:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018986:	ee16 5a90 	vmov	r5, s13
 801898a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801898e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018992:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018996:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801899a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801899e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80189a2:	ee12 2a90 	vmov	r2, s5
 80189a6:	eef0 2a47 	vmov.f32	s5, s14
 80189aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80189ae:	ee13 2a10 	vmov	r2, s6
 80189b2:	931b      	str	r3, [sp, #108]	@ 0x6c
 80189b4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80189b6:	eeb0 3a67 	vmov.f32	s6, s15
 80189ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80189be:	931c      	str	r3, [sp, #112]	@ 0x70
 80189c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80189c2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80189c4:	3b01      	subs	r3, #1
 80189c6:	930a      	str	r3, [sp, #40]	@ 0x28
 80189c8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80189ca:	bf08      	it	eq
 80189cc:	4613      	moveq	r3, r2
 80189ce:	9306      	str	r3, [sp, #24]
 80189d0:	e6d3      	b.n	801877a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80189d2:	b149      	cbz	r1, 80189e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80189d4:	5cba      	ldrb	r2, [r7, r2]
 80189d6:	4660      	mov	r0, ip
 80189d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80189dc:	4422      	add	r2, r4
 80189de:	4666      	mov	r6, ip
 80189e0:	e734      	b.n	801884c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 80189e2:	4660      	mov	r0, ip
 80189e4:	4662      	mov	r2, ip
 80189e6:	e731      	b.n	801884c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 80189e8:	4660      	mov	r0, ip
 80189ea:	4662      	mov	r2, ip
 80189ec:	e7f7      	b.n	80189de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80189ee:	f110 0c01 	adds.w	ip, r0, #1
 80189f2:	f53f af74 	bmi.w	80188de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80189f6:	4562      	cmp	r2, ip
 80189f8:	f6ff af71 	blt.w	80188de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80189fc:	f116 0c01 	adds.w	ip, r6, #1
 8018a00:	f53f af6d 	bmi.w	80188de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8018a04:	4567      	cmp	r7, ip
 8018a06:	f6ff af6a 	blt.w	80188de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8018a0a:	b23f      	sxth	r7, r7
 8018a0c:	b212      	sxth	r2, r2
 8018a0e:	9701      	str	r7, [sp, #4]
 8018a10:	9200      	str	r2, [sp, #0]
 8018a12:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8018a16:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8018a1a:	4623      	mov	r3, r4
 8018a1c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8018a1e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018a22:	f7ff fde7 	bl	80185f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8018a26:	e75a      	b.n	80188de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8018a28:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8018a2a:	ea4f 462b 	mov.w	r6, fp, asr #16
 8018a2e:	1428      	asrs	r0, r5, #16
 8018a30:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8018a34:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8018a38:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8018a3c:	fb02 6000 	mla	r0, r2, r0, r6
 8018a40:	9e08      	ldr	r6, [sp, #32]
 8018a42:	f816 8000 	ldrb.w	r8, [r6, r0]
 8018a46:	1837      	adds	r7, r6, r0
 8018a48:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8018a4c:	eb04 0c08 	add.w	ip, r4, r8
 8018a50:	2b00      	cmp	r3, #0
 8018a52:	d060      	beq.n	8018b16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 8018a54:	787e      	ldrb	r6, [r7, #1]
 8018a56:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8018a5a:	4426      	add	r6, r4
 8018a5c:	2900      	cmp	r1, #0
 8018a5e:	d062      	beq.n	8018b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 8018a60:	18b8      	adds	r0, r7, r2
 8018a62:	5cba      	ldrb	r2, [r7, r2]
 8018a64:	7840      	ldrb	r0, [r0, #1]
 8018a66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018a6a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018a6e:	4422      	add	r2, r4
 8018a70:	4420      	add	r0, r4
 8018a72:	b29b      	uxth	r3, r3
 8018a74:	78b7      	ldrb	r7, [r6, #2]
 8018a76:	b289      	uxth	r1, r1
 8018a78:	f89c a002 	ldrb.w	sl, [ip, #2]
 8018a7c:	f89c c001 	ldrb.w	ip, [ip, #1]
 8018a80:	fb03 f901 	mul.w	r9, r3, r1
 8018a84:	011b      	lsls	r3, r3, #4
 8018a86:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018a8a:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8018a8e:	eba3 0309 	sub.w	r3, r3, r9
 8018a92:	b289      	uxth	r1, r1
 8018a94:	b29b      	uxth	r3, r3
 8018a96:	ebae 0e01 	sub.w	lr, lr, r1
 8018a9a:	435f      	muls	r7, r3
 8018a9c:	fa1f fe8e 	uxth.w	lr, lr
 8018aa0:	fb0e 770a 	mla	r7, lr, sl, r7
 8018aa4:	f892 a002 	ldrb.w	sl, [r2, #2]
 8018aa8:	fb01 770a 	mla	r7, r1, sl, r7
 8018aac:	f890 a002 	ldrb.w	sl, [r0, #2]
 8018ab0:	fb09 7a0a 	mla	sl, r9, sl, r7
 8018ab4:	f814 7008 	ldrb.w	r7, [r4, r8]
 8018ab8:	f896 8000 	ldrb.w	r8, [r6]
 8018abc:	7876      	ldrb	r6, [r6, #1]
 8018abe:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8018ac2:	fb03 f808 	mul.w	r8, r3, r8
 8018ac6:	4373      	muls	r3, r6
 8018ac8:	7856      	ldrb	r6, [r2, #1]
 8018aca:	fb0e 8807 	mla	r8, lr, r7, r8
 8018ace:	7817      	ldrb	r7, [r2, #0]
 8018ad0:	fb0e 330c 	mla	r3, lr, ip, r3
 8018ad4:	fb01 8807 	mla	r8, r1, r7, r8
 8018ad8:	7807      	ldrb	r7, [r0, #0]
 8018ada:	fb01 3306 	mla	r3, r1, r6, r3
 8018ade:	fb09 8707 	mla	r7, r9, r7, r8
 8018ae2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018ae6:	ea47 070a 	orr.w	r7, r7, sl
 8018aea:	f890 a001 	ldrb.w	sl, [r0, #1]
 8018aee:	fb09 3a0a 	mla	sl, r9, sl, r3
 8018af2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018af4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018af8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018afc:	ea47 070a 	orr.w	r7, r7, sl
 8018b00:	f823 7b02 	strh.w	r7, [r3], #2
 8018b04:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018b06:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8018b08:	449b      	add	fp, r3
 8018b0a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8018b0c:	441d      	add	r5, r3
 8018b0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018b10:	3b01      	subs	r3, #1
 8018b12:	9309      	str	r3, [sp, #36]	@ 0x24
 8018b14:	e714      	b.n	8018940 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8018b16:	b149      	cbz	r1, 8018b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8018b18:	5cba      	ldrb	r2, [r7, r2]
 8018b1a:	4660      	mov	r0, ip
 8018b1c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018b20:	4422      	add	r2, r4
 8018b22:	4666      	mov	r6, ip
 8018b24:	e7a5      	b.n	8018a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8018b26:	4660      	mov	r0, ip
 8018b28:	4662      	mov	r2, ip
 8018b2a:	e7a2      	b.n	8018a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8018b2c:	4660      	mov	r0, ip
 8018b2e:	4662      	mov	r2, ip
 8018b30:	e7f7      	b.n	8018b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 8018b32:	b00f      	add	sp, #60	@ 0x3c
 8018b34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018b38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8018b38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b3c:	b085      	sub	sp, #20
 8018b3e:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 8018b42:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 8018b46:	9102      	str	r1, [sp, #8]
 8018b48:	2c00      	cmp	r4, #0
 8018b4a:	fb04 710c 	mla	r1, r4, ip, r7
 8018b4e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 8018b52:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 8018b56:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8018b5a:	eb02 0e01 	add.w	lr, r2, r1
 8018b5e:	f2c0 8122 	blt.w	8018da6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8018b62:	45a0      	cmp	r8, r4
 8018b64:	f340 811f 	ble.w	8018da6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8018b68:	2f00      	cmp	r7, #0
 8018b6a:	f2c0 811a 	blt.w	8018da2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8018b6e:	45bc      	cmp	ip, r7
 8018b70:	f340 8117 	ble.w	8018da2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8018b74:	5c52      	ldrb	r2, [r2, r1]
 8018b76:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8018b7a:	1c7a      	adds	r2, r7, #1
 8018b7c:	f100 8116 	bmi.w	8018dac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8018b80:	4594      	cmp	ip, r2
 8018b82:	f340 8113 	ble.w	8018dac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8018b86:	2e00      	cmp	r6, #0
 8018b88:	f000 8112 	beq.w	8018db0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8018b8c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018b90:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8018b94:	3401      	adds	r4, #1
 8018b96:	f100 810f 	bmi.w	8018db8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8018b9a:	45a0      	cmp	r8, r4
 8018b9c:	f340 810c 	ble.w	8018db8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8018ba0:	2800      	cmp	r0, #0
 8018ba2:	f000 810c 	beq.w	8018dbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8018ba6:	2f00      	cmp	r7, #0
 8018ba8:	f2c0 8104 	blt.w	8018db4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8018bac:	45bc      	cmp	ip, r7
 8018bae:	f340 8101 	ble.w	8018db4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8018bb2:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8018bb6:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8018bba:	3701      	adds	r7, #1
 8018bbc:	f100 8102 	bmi.w	8018dc4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8018bc0:	45bc      	cmp	ip, r7
 8018bc2:	f340 80ff 	ble.w	8018dc4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8018bc6:	2e00      	cmp	r6, #0
 8018bc8:	f000 80fe 	beq.w	8018dc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8018bcc:	44f4      	add	ip, lr
 8018bce:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8018bd2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8018bd6:	b2b6      	uxth	r6, r6
 8018bd8:	b280      	uxth	r0, r0
 8018bda:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8018bde:	fb00 fe06 	mul.w	lr, r0, r6
 8018be2:	0136      	lsls	r6, r6, #4
 8018be4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8018be8:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8018bec:	eba6 070e 	sub.w	r7, r6, lr
 8018bf0:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8018bf4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018bf8:	b280      	uxth	r0, r0
 8018bfa:	b2bf      	uxth	r7, r7
 8018bfc:	1a1b      	subs	r3, r3, r0
 8018bfe:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8018c02:	fb0a f607 	mul.w	r6, sl, r7
 8018c06:	b29b      	uxth	r3, r3
 8018c08:	fb0b 6603 	mla	r6, fp, r3, r6
 8018c0c:	fb00 6609 	mla	r6, r0, r9, r6
 8018c10:	fb0e 6608 	mla	r6, lr, r8, r6
 8018c14:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8018c18:	9600      	str	r6, [sp, #0]
 8018c1a:	2e00      	cmp	r6, #0
 8018c1c:	f000 80be 	beq.w	8018d9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8018c20:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8018c24:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8018c28:	9e02      	ldr	r6, [sp, #8]
 8018c2a:	fb0b fc0c 	mul.w	ip, fp, ip
 8018c2e:	fb0b f505 	mul.w	r5, fp, r5
 8018c32:	8836      	ldrh	r6, [r6, #0]
 8018c34:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8018c38:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8018c3c:	9501      	str	r5, [sp, #4]
 8018c3e:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8018c42:	44dc      	add	ip, fp
 8018c44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018c48:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8018c4c:	9503      	str	r5, [sp, #12]
 8018c4e:	9d01      	ldr	r5, [sp, #4]
 8018c50:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8018c54:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018c58:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8018c5c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8018c60:	fb0a fc0c 	mul.w	ip, sl, ip
 8018c64:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8018c68:	fb0a fa01 	mul.w	sl, sl, r1
 8018c6c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8018c70:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8018c74:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8018c78:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8018c7c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8018c80:	4465      	add	r5, ip
 8018c82:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8018c86:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8018c8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018c8e:	fb09 fc0c 	mul.w	ip, r9, ip
 8018c92:	0a2d      	lsrs	r5, r5, #8
 8018c94:	fb09 f904 	mul.w	r9, r9, r4
 8018c98:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018c9c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8018ca0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8018ca4:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8018ca8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8018cac:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8018cb0:	437d      	muls	r5, r7
 8018cb2:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8018cb6:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8018cba:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8018cbe:	4461      	add	r1, ip
 8018cc0:	fb08 f404 	mul.w	r4, r8, r4
 8018cc4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018cc8:	fb08 f802 	mul.w	r8, r8, r2
 8018ccc:	0a09      	lsrs	r1, r1, #8
 8018cce:	0a22      	lsrs	r2, r4, #8
 8018cd0:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8018cd4:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8018cd8:	fb07 f70a 	mul.w	r7, r7, sl
 8018cdc:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8018ce0:	4414      	add	r4, r2
 8018ce2:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8018ce6:	0a24      	lsrs	r4, r4, #8
 8018ce8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8018cec:	9a03      	ldr	r2, [sp, #12]
 8018cee:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8018cf2:	fb02 5503 	mla	r5, r2, r3, r5
 8018cf6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018cfa:	9a00      	ldr	r2, [sp, #0]
 8018cfc:	fb04 540e 	mla	r4, r4, lr, r5
 8018d00:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8018d04:	1235      	asrs	r5, r6, #8
 8018d06:	fb01 4100 	mla	r1, r1, r0, r4
 8018d0a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018d0e:	0a09      	lsrs	r1, r1, #8
 8018d10:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8018d14:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8018d18:	fb03 7101 	mla	r1, r3, r1, r7
 8018d1c:	fb0e 1e08 	mla	lr, lr, r8, r1
 8018d20:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8018d24:	fb00 e101 	mla	r1, r0, r1, lr
 8018d28:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8018d2c:	b287      	uxth	r7, r0
 8018d2e:	0a09      	lsrs	r1, r1, #8
 8018d30:	437a      	muls	r2, r7
 8018d32:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8018d36:	1c53      	adds	r3, r2, #1
 8018d38:	4321      	orrs	r1, r4
 8018d3a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018d3e:	0c0a      	lsrs	r2, r1, #16
 8018d40:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8018d44:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8018d48:	b2c8      	uxtb	r0, r1
 8018d4a:	fb12 f207 	smulbb	r2, r2, r7
 8018d4e:	fb14 f407 	smulbb	r4, r4, r7
 8018d52:	b2db      	uxtb	r3, r3
 8018d54:	fb10 f007 	smulbb	r0, r0, r7
 8018d58:	fb05 2503 	mla	r5, r5, r3, r2
 8018d5c:	10f2      	asrs	r2, r6, #3
 8018d5e:	00f6      	lsls	r6, r6, #3
 8018d60:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8018d64:	b2ad      	uxth	r5, r5
 8018d66:	b2f6      	uxtb	r6, r6
 8018d68:	fb02 4203 	mla	r2, r2, r3, r4
 8018d6c:	fb06 0303 	mla	r3, r6, r3, r0
 8018d70:	b294      	uxth	r4, r2
 8018d72:	b299      	uxth	r1, r3
 8018d74:	1c6b      	adds	r3, r5, #1
 8018d76:	1c62      	adds	r2, r4, #1
 8018d78:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018d7c:	1c4b      	adds	r3, r1, #1
 8018d7e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8018d82:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018d86:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018d8a:	0952      	lsrs	r2, r2, #5
 8018d8c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018d90:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018d94:	432b      	orrs	r3, r5
 8018d96:	4313      	orrs	r3, r2
 8018d98:	9a02      	ldr	r2, [sp, #8]
 8018d9a:	8013      	strh	r3, [r2, #0]
 8018d9c:	b005      	add	sp, #20
 8018d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018da2:	2500      	movs	r5, #0
 8018da4:	e6e9      	b.n	8018b7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8018da6:	2100      	movs	r1, #0
 8018da8:	460d      	mov	r5, r1
 8018daa:	e6f3      	b.n	8018b94 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8018dac:	2100      	movs	r1, #0
 8018dae:	e6f1      	b.n	8018b94 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8018db0:	4631      	mov	r1, r6
 8018db2:	e6ef      	b.n	8018b94 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8018db4:	2400      	movs	r4, #0
 8018db6:	e700      	b.n	8018bba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8018db8:	2200      	movs	r2, #0
 8018dba:	4614      	mov	r4, r2
 8018dbc:	e70b      	b.n	8018bd6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8018dbe:	4602      	mov	r2, r0
 8018dc0:	4604      	mov	r4, r0
 8018dc2:	e708      	b.n	8018bd6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8018dc4:	2200      	movs	r2, #0
 8018dc6:	e706      	b.n	8018bd6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8018dc8:	4632      	mov	r2, r6
 8018dca:	e704      	b.n	8018bd6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08018dcc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018dcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018dd0:	b09f      	sub	sp, #124	@ 0x7c
 8018dd2:	921b      	str	r2, [sp, #108]	@ 0x6c
 8018dd4:	9309      	str	r3, [sp, #36]	@ 0x24
 8018dd6:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8018dd8:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 8018ddc:	901d      	str	r0, [sp, #116]	@ 0x74
 8018dde:	931c      	str	r3, [sp, #112]	@ 0x70
 8018de0:	6850      	ldr	r0, [r2, #4]
 8018de2:	9119      	str	r1, [sp, #100]	@ 0x64
 8018de4:	6812      	ldr	r2, [r2, #0]
 8018de6:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8018de8:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 8018dec:	fb00 1303 	mla	r3, r0, r3, r1
 8018df0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018df4:	930c      	str	r3, [sp, #48]	@ 0x30
 8018df6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8018df8:	681b      	ldr	r3, [r3, #0]
 8018dfa:	9312      	str	r3, [sp, #72]	@ 0x48
 8018dfc:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8018dfe:	685e      	ldr	r6, [r3, #4]
 8018e00:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8018e04:	3604      	adds	r6, #4
 8018e06:	930d      	str	r3, [sp, #52]	@ 0x34
 8018e08:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8018e0a:	2b00      	cmp	r3, #0
 8018e0c:	dc03      	bgt.n	8018e16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018e0e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8018e10:	2b00      	cmp	r3, #0
 8018e12:	f340 8387 	ble.w	8019524 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 8018e16:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8018e18:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018e1c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018e20:	1e48      	subs	r0, r1, #1
 8018e22:	1e57      	subs	r7, r2, #1
 8018e24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018e26:	2b00      	cmp	r3, #0
 8018e28:	f340 8194 	ble.w	8019154 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8018e2c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8018e2e:	142b      	asrs	r3, r5, #16
 8018e30:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8018e34:	d406      	bmi.n	8018e44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018e36:	4584      	cmp	ip, r0
 8018e38:	da04      	bge.n	8018e44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018e3a:	2b00      	cmp	r3, #0
 8018e3c:	db02      	blt.n	8018e44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018e3e:	42bb      	cmp	r3, r7
 8018e40:	f2c0 8189 	blt.w	8019156 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018e44:	f11c 0c01 	adds.w	ip, ip, #1
 8018e48:	f100 8177 	bmi.w	801913a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8018e4c:	4561      	cmp	r1, ip
 8018e4e:	f2c0 8174 	blt.w	801913a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8018e52:	3301      	adds	r3, #1
 8018e54:	f100 8171 	bmi.w	801913a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8018e58:	429a      	cmp	r2, r3
 8018e5a:	f2c0 816e 	blt.w	801913a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8018e5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018e60:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8018e62:	931a      	str	r3, [sp, #104]	@ 0x68
 8018e64:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8018e66:	2b00      	cmp	r3, #0
 8018e68:	f340 8193 	ble.w	8019192 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8018e6c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8018e6e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8018e72:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8018e76:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018e7a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8018e7c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8018e80:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8018e82:	141b      	asrs	r3, r3, #16
 8018e84:	f100 81d6 	bmi.w	8019234 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8018e88:	f100 38ff 	add.w	r8, r0, #4294967295
 8018e8c:	4543      	cmp	r3, r8
 8018e8e:	f280 81d1 	bge.w	8019234 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8018e92:	f1bc 0f00 	cmp.w	ip, #0
 8018e96:	f2c0 81cd 	blt.w	8019234 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8018e9a:	f10e 38ff 	add.w	r8, lr, #4294967295
 8018e9e:	45c4      	cmp	ip, r8
 8018ea0:	f280 81c8 	bge.w	8019234 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8018ea4:	b200      	sxth	r0, r0
 8018ea6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018ea8:	fb0c 3300 	mla	r3, ip, r0, r3
 8018eac:	eb04 0803 	add.w	r8, r4, r3
 8018eb0:	5ce3      	ldrb	r3, [r4, r3]
 8018eb2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018eb6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8018eba:	2a00      	cmp	r2, #0
 8018ebc:	f000 81af 	beq.w	801921e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8018ec0:	f898 c001 	ldrb.w	ip, [r8, #1]
 8018ec4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8018ec8:	940e      	str	r4, [sp, #56]	@ 0x38
 8018eca:	0e24      	lsrs	r4, r4, #24
 8018ecc:	9415      	str	r4, [sp, #84]	@ 0x54
 8018ece:	b179      	cbz	r1, 8018ef0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8018ed0:	eb08 0c00 	add.w	ip, r8, r0
 8018ed4:	f818 0000 	ldrb.w	r0, [r8, r0]
 8018ed8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8018edc:	900a      	str	r0, [sp, #40]	@ 0x28
 8018ede:	0e00      	lsrs	r0, r0, #24
 8018ee0:	9013      	str	r0, [sp, #76]	@ 0x4c
 8018ee2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8018ee6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8018eea:	900f      	str	r0, [sp, #60]	@ 0x3c
 8018eec:	0e00      	lsrs	r0, r0, #24
 8018eee:	9016      	str	r0, [sp, #88]	@ 0x58
 8018ef0:	b292      	uxth	r2, r2
 8018ef2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8018ef4:	b289      	uxth	r1, r1
 8018ef6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018ef8:	fb02 f901 	mul.w	r9, r2, r1
 8018efc:	0112      	lsls	r2, r2, #4
 8018efe:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018f02:	eba2 0809 	sub.w	r8, r2, r9
 8018f06:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8018f0a:	b289      	uxth	r1, r1
 8018f0c:	fa1f f888 	uxth.w	r8, r8
 8018f10:	1a52      	subs	r2, r2, r1
 8018f12:	fb08 f000 	mul.w	r0, r8, r0
 8018f16:	b292      	uxth	r2, r2
 8018f18:	fb02 000e 	mla	r0, r2, lr, r0
 8018f1c:	fb01 0004 	mla	r0, r1, r4, r0
 8018f20:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8018f22:	fb09 0004 	mla	r0, r9, r4, r0
 8018f26:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018f2a:	2800      	cmp	r0, #0
 8018f2c:	f000 80fa 	beq.w	8019124 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8018f30:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8018f34:	d01b      	beq.n	8018f6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8018f36:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8018f3a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018f3e:	fb0e fa0a 	mul.w	sl, lr, sl
 8018f42:	fb0e fe03 	mul.w	lr, lr, r3
 8018f46:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018f4a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8018f4e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8018f52:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018f56:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018f5a:	4453      	add	r3, sl
 8018f5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018f60:	0a1b      	lsrs	r3, r3, #8
 8018f62:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8018f66:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018f6a:	ea43 030c 	orr.w	r3, r3, ip
 8018f6e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018f70:	2cff      	cmp	r4, #255	@ 0xff
 8018f72:	d021      	beq.n	8018fb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8018f74:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018f76:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8018f7a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018f7c:	fb04 fb0b 	mul.w	fp, r4, fp
 8018f80:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018f82:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018f86:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018f88:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018f8c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8018f90:	fb04 fa0a 	mul.w	sl, r4, sl
 8018f94:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018f98:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8018f9c:	44de      	add	lr, fp
 8018f9e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018fa2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018fa6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018faa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018fae:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018fb2:	ea4e 040a 	orr.w	r4, lr, sl
 8018fb6:	940e      	str	r4, [sp, #56]	@ 0x38
 8018fb8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018fba:	2cff      	cmp	r4, #255	@ 0xff
 8018fbc:	d021      	beq.n	8019002 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018fbe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018fc0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8018fc4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018fc6:	fb04 fb0b 	mul.w	fp, r4, fp
 8018fca:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018fcc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018fd0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018fd2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018fd6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8018fda:	fb04 fa0a 	mul.w	sl, r4, sl
 8018fde:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018fe2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8018fe6:	44de      	add	lr, fp
 8018fe8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018fec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018ff0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018ff4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018ff8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018ffc:	ea4e 040a 	orr.w	r4, lr, sl
 8019000:	940a      	str	r4, [sp, #40]	@ 0x28
 8019002:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8019004:	2cff      	cmp	r4, #255	@ 0xff
 8019006:	d021      	beq.n	801904c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 8019008:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801900a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801900e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8019010:	fb04 fb0b 	mul.w	fp, r4, fp
 8019014:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8019016:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801901a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801901c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019020:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8019024:	fb04 fa0a 	mul.w	sl, r4, sl
 8019028:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801902c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8019030:	44de      	add	lr, fp
 8019032:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019036:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801903a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801903e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019042:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019046:	ea4e 040a 	orr.w	r4, lr, sl
 801904a:	940f      	str	r4, [sp, #60]	@ 0x3c
 801904c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801904e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8019052:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8019056:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801905a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801905c:	fb08 fc0c 	mul.w	ip, r8, ip
 8019060:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019064:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8019068:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801906a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801906e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8019072:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019074:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019078:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801907c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801907e:	fb08 f80e 	mul.w	r8, r8, lr
 8019082:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019086:	fb02 8303 	mla	r3, r2, r3, r8
 801908a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801908c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019090:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8019094:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019096:	fb01 330a 	mla	r3, r1, sl, r3
 801909a:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801909e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80190a0:	fb09 3901 	mla	r9, r9, r1, r3
 80190a4:	883b      	ldrh	r3, [r7, #0]
 80190a6:	4342      	muls	r2, r0
 80190a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80190ac:	1c50      	adds	r0, r2, #1
 80190ae:	1219      	asrs	r1, r3, #8
 80190b0:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80190b4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80190b8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80190bc:	ea4c 0c09 	orr.w	ip, ip, r9
 80190c0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80190c4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80190c8:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80190cc:	b2c0      	uxtb	r0, r0
 80190ce:	fb12 f204 	smulbb	r2, r2, r4
 80190d2:	fa5f fc8c 	uxtb.w	ip, ip
 80190d6:	fb1e fe04 	smulbb	lr, lr, r4
 80190da:	fb01 2100 	mla	r1, r1, r0, r2
 80190de:	10da      	asrs	r2, r3, #3
 80190e0:	fb1c fc04 	smulbb	ip, ip, r4
 80190e4:	00db      	lsls	r3, r3, #3
 80190e6:	b289      	uxth	r1, r1
 80190e8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80190ec:	b2db      	uxtb	r3, r3
 80190ee:	fb02 e200 	mla	r2, r2, r0, lr
 80190f2:	fb03 c300 	mla	r3, r3, r0, ip
 80190f6:	b292      	uxth	r2, r2
 80190f8:	fa1f fc83 	uxth.w	ip, r3
 80190fc:	1c4b      	adds	r3, r1, #1
 80190fe:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019102:	f10c 0301 	add.w	r3, ip, #1
 8019106:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801910a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801910e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019112:	430b      	orrs	r3, r1
 8019114:	1c51      	adds	r1, r2, #1
 8019116:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801911a:	0952      	lsrs	r2, r2, #5
 801911c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019120:	4313      	orrs	r3, r2
 8019122:	803b      	strh	r3, [r7, #0]
 8019124:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8019126:	3702      	adds	r7, #2
 8019128:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801912a:	441a      	add	r2, r3
 801912c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801912e:	441d      	add	r5, r3
 8019130:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8019132:	9229      	str	r2, [sp, #164]	@ 0xa4
 8019134:	3b01      	subs	r3, #1
 8019136:	931a      	str	r3, [sp, #104]	@ 0x68
 8019138:	e694      	b.n	8018e64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801913a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801913c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801913e:	441c      	add	r4, r3
 8019140:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8019142:	441d      	add	r5, r3
 8019144:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019146:	9429      	str	r4, [sp, #164]	@ 0xa4
 8019148:	3b01      	subs	r3, #1
 801914a:	9309      	str	r3, [sp, #36]	@ 0x24
 801914c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801914e:	3302      	adds	r3, #2
 8019150:	930c      	str	r3, [sp, #48]	@ 0x30
 8019152:	e667      	b.n	8018e24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019154:	d024      	beq.n	80191a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 8019156:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019158:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801915a:	3b01      	subs	r3, #1
 801915c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801915e:	fb00 4003 	mla	r0, r0, r3, r4
 8019162:	1400      	asrs	r0, r0, #16
 8019164:	f53f ae7b 	bmi.w	8018e5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019168:	3901      	subs	r1, #1
 801916a:	4288      	cmp	r0, r1
 801916c:	f6bf ae77 	bge.w	8018e5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019170:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8019172:	fb01 5303 	mla	r3, r1, r3, r5
 8019176:	141b      	asrs	r3, r3, #16
 8019178:	f53f ae71 	bmi.w	8018e5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801917c:	3a01      	subs	r2, #1
 801917e:	4293      	cmp	r3, r2
 8019180:	f6bf ae6d 	bge.w	8018e5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019184:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8019188:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801918c:	f1bb 0f00 	cmp.w	fp, #0
 8019190:	dc70      	bgt.n	8019274 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8019192:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019194:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019198:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801919a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801919e:	930c      	str	r3, [sp, #48]	@ 0x30
 80191a0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80191a2:	2b00      	cmp	r3, #0
 80191a4:	f340 81be 	ble.w	8019524 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 80191a8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80191ac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80191ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 80191b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80191b6:	eef0 6a62 	vmov.f32	s13, s5
 80191ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80191be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80191c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80191c6:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 80191ca:	eef0 6a43 	vmov.f32	s13, s6
 80191ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80191d2:	ee16 5a90 	vmov	r5, s13
 80191d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80191da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80191de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80191e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80191e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80191ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80191ee:	ee12 2a90 	vmov	r2, s5
 80191f2:	eef0 2a47 	vmov.f32	s5, s14
 80191f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80191fa:	ee13 2a10 	vmov	r2, s6
 80191fe:	932b      	str	r3, [sp, #172]	@ 0xac
 8019200:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019202:	eeb0 3a67 	vmov.f32	s6, s15
 8019206:	fb92 f3f3 	sdiv	r3, r2, r3
 801920a:	932c      	str	r3, [sp, #176]	@ 0xb0
 801920c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801920e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8019210:	3b01      	subs	r3, #1
 8019212:	9319      	str	r3, [sp, #100]	@ 0x64
 8019214:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019216:	bf08      	it	eq
 8019218:	4613      	moveq	r3, r2
 801921a:	9309      	str	r3, [sp, #36]	@ 0x24
 801921c:	e5f4      	b.n	8018e08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801921e:	2900      	cmp	r1, #0
 8019220:	f43f ae66 	beq.w	8018ef0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8019224:	f818 0000 	ldrb.w	r0, [r8, r0]
 8019228:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801922c:	900a      	str	r0, [sp, #40]	@ 0x28
 801922e:	0e00      	lsrs	r0, r0, #24
 8019230:	9013      	str	r0, [sp, #76]	@ 0x4c
 8019232:	e65d      	b.n	8018ef0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8019234:	f113 0801 	adds.w	r8, r3, #1
 8019238:	f53f af74 	bmi.w	8019124 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801923c:	4540      	cmp	r0, r8
 801923e:	f6ff af71 	blt.w	8019124 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8019242:	f11c 0801 	adds.w	r8, ip, #1
 8019246:	f53f af6d 	bmi.w	8019124 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801924a:	45c6      	cmp	lr, r8
 801924c:	f6ff af6a 	blt.w	8019124 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8019250:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8019252:	b200      	sxth	r0, r0
 8019254:	9302      	str	r3, [sp, #8]
 8019256:	fa0f f38e 	sxth.w	r3, lr
 801925a:	9000      	str	r0, [sp, #0]
 801925c:	9301      	str	r3, [sp, #4]
 801925e:	4633      	mov	r3, r6
 8019260:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8019262:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019266:	e9cd c203 	strd	ip, r2, [sp, #12]
 801926a:	4639      	mov	r1, r7
 801926c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801926e:	f7ff fc63 	bl	8018b38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8019272:	e757      	b.n	8019124 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8019274:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8019276:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801927a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801927c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019280:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8019282:	1427      	asrs	r7, r4, #16
 8019284:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019286:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801928a:	142b      	asrs	r3, r5, #16
 801928c:	fb01 7303 	mla	r3, r1, r3, r7
 8019290:	18e7      	adds	r7, r4, r3
 8019292:	5ce3      	ldrb	r3, [r4, r3]
 8019294:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019298:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801929c:	2a00      	cmp	r2, #0
 801929e:	f000 8137 	beq.w	8019510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 80192a2:	f897 e001 	ldrb.w	lr, [r7, #1]
 80192a6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80192aa:	9410      	str	r4, [sp, #64]	@ 0x40
 80192ac:	0e24      	lsrs	r4, r4, #24
 80192ae:	9417      	str	r4, [sp, #92]	@ 0x5c
 80192b0:	b170      	cbz	r0, 80192d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 80192b2:	eb07 0e01 	add.w	lr, r7, r1
 80192b6:	5c79      	ldrb	r1, [r7, r1]
 80192b8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80192bc:	910b      	str	r1, [sp, #44]	@ 0x2c
 80192be:	0e09      	lsrs	r1, r1, #24
 80192c0:	9114      	str	r1, [sp, #80]	@ 0x50
 80192c2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80192c6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80192ca:	9111      	str	r1, [sp, #68]	@ 0x44
 80192cc:	0e09      	lsrs	r1, r1, #24
 80192ce:	9118      	str	r1, [sp, #96]	@ 0x60
 80192d0:	b292      	uxth	r2, r2
 80192d2:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80192d4:	b280      	uxth	r0, r0
 80192d6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80192d8:	fb02 f800 	mul.w	r8, r2, r0
 80192dc:	0112      	lsls	r2, r2, #4
 80192de:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80192e2:	eba2 0e08 	sub.w	lr, r2, r8
 80192e6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80192ea:	b280      	uxth	r0, r0
 80192ec:	fa1f fe8e 	uxth.w	lr, lr
 80192f0:	1a12      	subs	r2, r2, r0
 80192f2:	fb0e f101 	mul.w	r1, lr, r1
 80192f6:	b292      	uxth	r2, r2
 80192f8:	fb02 110c 	mla	r1, r2, ip, r1
 80192fc:	fb00 1104 	mla	r1, r0, r4, r1
 8019300:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8019302:	fb08 1104 	mla	r1, r8, r4, r1
 8019306:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801930a:	2900      	cmp	r1, #0
 801930c:	f000 80f5 	beq.w	80194fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 8019310:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8019314:	d019      	beq.n	801934a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 8019316:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801931a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801931e:	fb0c fa0a 	mul.w	sl, ip, sl
 8019322:	fb0c fc03 	mul.w	ip, ip, r3
 8019326:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801932a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801932e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8019332:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8019336:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801933a:	4453      	add	r3, sl
 801933c:	0a3f      	lsrs	r7, r7, #8
 801933e:	0a1b      	lsrs	r3, r3, #8
 8019340:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8019344:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8019348:	433b      	orrs	r3, r7
 801934a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801934c:	2cff      	cmp	r4, #255	@ 0xff
 801934e:	d020      	beq.n	8019392 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 8019350:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8019352:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019356:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8019358:	4367      	muls	r7, r4
 801935a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801935c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019360:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019364:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8019366:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801936a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801936e:	fb04 fa0a 	mul.w	sl, r4, sl
 8019372:	44bc      	add	ip, r7
 8019374:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019378:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801937c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019380:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019384:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019388:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801938c:	ea4c 040a 	orr.w	r4, ip, sl
 8019390:	9410      	str	r4, [sp, #64]	@ 0x40
 8019392:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019394:	2cff      	cmp	r4, #255	@ 0xff
 8019396:	d020      	beq.n	80193da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 8019398:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801939a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801939e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80193a0:	4367      	muls	r7, r4
 80193a2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80193a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80193a8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80193ac:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80193ae:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80193b2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80193b6:	fb04 fa0a 	mul.w	sl, r4, sl
 80193ba:	44bc      	add	ip, r7
 80193bc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80193c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80193c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80193c8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80193cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80193d0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80193d4:	ea4c 040a 	orr.w	r4, ip, sl
 80193d8:	940b      	str	r4, [sp, #44]	@ 0x2c
 80193da:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80193dc:	2cff      	cmp	r4, #255	@ 0xff
 80193de:	d020      	beq.n	8019422 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 80193e0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80193e2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80193e6:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80193e8:	4367      	muls	r7, r4
 80193ea:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80193ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80193f0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80193f4:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80193f6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80193fa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80193fe:	fb04 fa0a 	mul.w	sl, r4, sl
 8019402:	44bc      	add	ip, r7
 8019404:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019408:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801940c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019410:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019414:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019418:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801941c:	ea4c 040a 	orr.w	r4, ip, sl
 8019420:	9411      	str	r4, [sp, #68]	@ 0x44
 8019422:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8019424:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8019428:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801942c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019430:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019432:	fb0e f707 	mul.w	r7, lr, r7
 8019436:	fb02 770c 	mla	r7, r2, ip, r7
 801943a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801943e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019440:	fb00 770c 	mla	r7, r0, ip, r7
 8019444:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8019448:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801944a:	fb08 770c 	mla	r7, r8, ip, r7
 801944e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8019452:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019454:	fb0e fe0c 	mul.w	lr, lr, ip
 8019458:	0a3f      	lsrs	r7, r7, #8
 801945a:	fb02 e303 	mla	r3, r2, r3, lr
 801945e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019460:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8019464:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8019468:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801946a:	fb00 330a 	mla	r3, r0, sl, r3
 801946e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8019472:	f8b9 0000 	ldrh.w	r0, [r9]
 8019476:	fb08 3c0c 	mla	ip, r8, ip, r3
 801947a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801947c:	1202      	asrs	r2, r0, #8
 801947e:	434b      	muls	r3, r1
 8019480:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019484:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019488:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801948c:	1c59      	adds	r1, r3, #1
 801948e:	ea47 070c 	orr.w	r7, r7, ip
 8019492:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8019496:	0c3b      	lsrs	r3, r7, #16
 8019498:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801949c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80194a0:	b2ff      	uxtb	r7, r7
 80194a2:	fb13 f304 	smulbb	r3, r3, r4
 80194a6:	b2c9      	uxtb	r1, r1
 80194a8:	fb1c fc04 	smulbb	ip, ip, r4
 80194ac:	fb02 3201 	mla	r2, r2, r1, r3
 80194b0:	10c3      	asrs	r3, r0, #3
 80194b2:	fb17 f704 	smulbb	r7, r7, r4
 80194b6:	00c0      	lsls	r0, r0, #3
 80194b8:	b292      	uxth	r2, r2
 80194ba:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80194be:	b2c0      	uxtb	r0, r0
 80194c0:	fb03 c301 	mla	r3, r3, r1, ip
 80194c4:	f102 0c01 	add.w	ip, r2, #1
 80194c8:	fb00 7001 	mla	r0, r0, r1, r7
 80194cc:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80194d0:	b280      	uxth	r0, r0
 80194d2:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 80194d6:	b29b      	uxth	r3, r3
 80194d8:	1c42      	adds	r2, r0, #1
 80194da:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80194de:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80194e2:	ea42 020c 	orr.w	r2, r2, ip
 80194e6:	f103 0c01 	add.w	ip, r3, #1
 80194ea:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80194ee:	095b      	lsrs	r3, r3, #5
 80194f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80194f4:	431a      	orrs	r2, r3
 80194f6:	f8a9 2000 	strh.w	r2, [r9]
 80194fa:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 80194fc:	f109 0902 	add.w	r9, r9, #2
 8019500:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8019502:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019506:	441a      	add	r2, r3
 8019508:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801950a:	9229      	str	r2, [sp, #164]	@ 0xa4
 801950c:	441d      	add	r5, r3
 801950e:	e63d      	b.n	801918c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8019510:	2800      	cmp	r0, #0
 8019512:	f43f aedd 	beq.w	80192d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8019516:	5c79      	ldrb	r1, [r7, r1]
 8019518:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801951c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801951e:	0e09      	lsrs	r1, r1, #24
 8019520:	9114      	str	r1, [sp, #80]	@ 0x50
 8019522:	e6d5      	b.n	80192d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8019524:	b01f      	add	sp, #124	@ 0x7c
 8019526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801952a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801952a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801952e:	b089      	sub	sp, #36	@ 0x24
 8019530:	9101      	str	r1, [sp, #4]
 8019532:	9801      	ldr	r0, [sp, #4]
 8019534:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 8019538:	8800      	ldrh	r0, [r0, #0]
 801953a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801953e:	1206      	asrs	r6, r0, #8
 8019540:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8019544:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 8019548:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801954c:	9602      	str	r6, [sp, #8]
 801954e:	10c6      	asrs	r6, r0, #3
 8019550:	00c0      	lsls	r0, r0, #3
 8019552:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019556:	b2c0      	uxtb	r0, r0
 8019558:	9603      	str	r6, [sp, #12]
 801955a:	9004      	str	r0, [sp, #16]
 801955c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 8019560:	fb07 100c 	mla	r0, r7, ip, r1
 8019564:	2f00      	cmp	r7, #0
 8019566:	eb02 0e00 	add.w	lr, r2, r0
 801956a:	f2c0 810a 	blt.w	8019782 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801956e:	45b8      	cmp	r8, r7
 8019570:	f340 8107 	ble.w	8019782 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8019574:	2900      	cmp	r1, #0
 8019576:	f2c0 8102 	blt.w	801977e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801957a:	458c      	cmp	ip, r1
 801957c:	f340 80ff 	ble.w	801977e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8019580:	5c12      	ldrb	r2, [r2, r0]
 8019582:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8019586:	1c4a      	adds	r2, r1, #1
 8019588:	f100 80fe 	bmi.w	8019788 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801958c:	4594      	cmp	ip, r2
 801958e:	f340 80fb 	ble.w	8019788 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8019592:	2d00      	cmp	r5, #0
 8019594:	f000 80fa 	beq.w	801978c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8019598:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801959c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80195a0:	3701      	adds	r7, #1
 80195a2:	f100 80f7 	bmi.w	8019794 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80195a6:	45b8      	cmp	r8, r7
 80195a8:	f340 80f4 	ble.w	8019794 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80195ac:	2c00      	cmp	r4, #0
 80195ae:	f000 80f4 	beq.w	801979a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80195b2:	2900      	cmp	r1, #0
 80195b4:	eb0e 020c 	add.w	r2, lr, ip
 80195b8:	f2c0 80ea 	blt.w	8019790 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80195bc:	458c      	cmp	ip, r1
 80195be:	f340 80e7 	ble.w	8019790 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80195c2:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80195c6:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80195ca:	3101      	adds	r1, #1
 80195cc:	f100 80e8 	bmi.w	80197a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80195d0:	458c      	cmp	ip, r1
 80195d2:	f340 80e5 	ble.w	80197a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80195d6:	2d00      	cmp	r5, #0
 80195d8:	f000 80e4 	beq.w	80197a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80195dc:	7852      	ldrb	r2, [r2, #1]
 80195de:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80195e2:	0e0b      	lsrs	r3, r1, #24
 80195e4:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 80195e8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80195ec:	9300      	str	r3, [sp, #0]
 80195ee:	b2a4      	uxth	r4, r4
 80195f0:	b2ab      	uxth	r3, r5
 80195f2:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 80195f6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80195fa:	fb03 f904 	mul.w	r9, r3, r4
 80195fe:	011b      	lsls	r3, r3, #4
 8019600:	fb0a f505 	mul.w	r5, sl, r5
 8019604:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8019608:	eba3 0e09 	sub.w	lr, r3, r9
 801960c:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 8019610:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8019614:	0a28      	lsrs	r0, r5, #8
 8019616:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801961a:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801961e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8019622:	fb0a f303 	mul.w	r3, sl, r3
 8019626:	fb08 f707 	mul.w	r7, r8, r7
 801962a:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801962e:	4405      	add	r5, r0
 8019630:	fb08 fc0c 	mul.w	ip, r8, ip
 8019634:	b2a4      	uxth	r4, r4
 8019636:	0a2d      	lsrs	r5, r5, #8
 8019638:	fa1f fe8e 	uxth.w	lr, lr
 801963c:	1b12      	subs	r2, r2, r4
 801963e:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 8019642:	b292      	uxth	r2, r2
 8019644:	9005      	str	r0, [sp, #20]
 8019646:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801964a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801964e:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8019652:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8019656:	0a1b      	lsrs	r3, r3, #8
 8019658:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801965c:	9306      	str	r3, [sp, #24]
 801965e:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8019662:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8019666:	4460      	add	r0, ip
 8019668:	fb0b f303 	mul.w	r3, fp, r3
 801966c:	fb0b f606 	mul.w	r6, fp, r6
 8019670:	0a00      	lsrs	r0, r0, #8
 8019672:	0a1d      	lsrs	r5, r3, #8
 8019674:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8019678:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801967c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8019680:	441d      	add	r5, r3
 8019682:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8019686:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801968a:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801968e:	0a2d      	lsrs	r5, r5, #8
 8019690:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8019694:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8019698:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801969c:	0a36      	lsrs	r6, r6, #8
 801969e:	0a1b      	lsrs	r3, r3, #8
 80196a0:	fb05 f50e 	mul.w	r5, r5, lr
 80196a4:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 80196a8:	9307      	str	r3, [sp, #28]
 80196aa:	0e0b      	lsrs	r3, r1, #24
 80196ac:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80196b0:	fb0e f606 	mul.w	r6, lr, r6
 80196b4:	435f      	muls	r7, r3
 80196b6:	4359      	muls	r1, r3
 80196b8:	9b05      	ldr	r3, [sp, #20]
 80196ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80196be:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80196c2:	fb03 5502 	mla	r5, r3, r2, r5
 80196c6:	9b06      	ldr	r3, [sp, #24]
 80196c8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80196cc:	fb0e fe0b 	mul.w	lr, lr, fp
 80196d0:	44bc      	add	ip, r7
 80196d2:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 80196d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80196da:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80196de:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80196e2:	0a09      	lsrs	r1, r1, #8
 80196e4:	fb0c 5509 	mla	r5, ip, r9, r5
 80196e8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80196ec:	fb00 5504 	mla	r5, r0, r4, r5
 80196f0:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 80196f4:	9b07      	ldr	r3, [sp, #28]
 80196f6:	fb02 6000 	mla	r0, r2, r0, r6
 80196fa:	0a2d      	lsrs	r5, r5, #8
 80196fc:	fb02 e20a 	mla	r2, r2, sl, lr
 8019700:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8019704:	fb09 0001 	mla	r0, r9, r1, r0
 8019708:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801970c:	fb04 0003 	mla	r0, r4, r3, r0
 8019710:	9b00      	ldr	r3, [sp, #0]
 8019712:	fb04 2408 	mla	r4, r4, r8, r2
 8019716:	9a04      	ldr	r2, [sp, #16]
 8019718:	0a00      	lsrs	r0, r0, #8
 801971a:	fb09 4903 	mla	r9, r9, r3, r4
 801971e:	9b02      	ldr	r3, [sp, #8]
 8019720:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8019724:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8019728:	4305      	orrs	r5, r0
 801972a:	fa5f f989 	uxtb.w	r9, r9
 801972e:	fb03 f109 	mul.w	r1, r3, r9
 8019732:	9b03      	ldr	r3, [sp, #12]
 8019734:	fb03 f309 	mul.w	r3, r3, r9
 8019738:	fb02 f909 	mul.w	r9, r2, r9
 801973c:	1c4a      	adds	r2, r1, #1
 801973e:	1c58      	adds	r0, r3, #1
 8019740:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019744:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019748:	0c2a      	lsrs	r2, r5, #16
 801974a:	0a2b      	lsrs	r3, r5, #8
 801974c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8019750:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019754:	0212      	lsls	r2, r2, #8
 8019756:	00db      	lsls	r3, r3, #3
 8019758:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801975c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019760:	4313      	orrs	r3, r2
 8019762:	f109 0201 	add.w	r2, r9, #1
 8019766:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801976a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801976e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019772:	431d      	orrs	r5, r3
 8019774:	9b01      	ldr	r3, [sp, #4]
 8019776:	801d      	strh	r5, [r3, #0]
 8019778:	b009      	add	sp, #36	@ 0x24
 801977a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801977e:	2000      	movs	r0, #0
 8019780:	e701      	b.n	8019586 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8019782:	2600      	movs	r6, #0
 8019784:	4630      	mov	r0, r6
 8019786:	e70b      	b.n	80195a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8019788:	2600      	movs	r6, #0
 801978a:	e709      	b.n	80195a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801978c:	462e      	mov	r6, r5
 801978e:	e707      	b.n	80195a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8019790:	2700      	movs	r7, #0
 8019792:	e71a      	b.n	80195ca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8019794:	2100      	movs	r1, #0
 8019796:	460f      	mov	r7, r1
 8019798:	e723      	b.n	80195e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801979a:	4621      	mov	r1, r4
 801979c:	4627      	mov	r7, r4
 801979e:	e720      	b.n	80195e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80197a0:	2100      	movs	r1, #0
 80197a2:	e71e      	b.n	80195e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80197a4:	4629      	mov	r1, r5
 80197a6:	e71c      	b.n	80195e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080197a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80197a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197ac:	b09b      	sub	sp, #108	@ 0x6c
 80197ae:	9218      	str	r2, [sp, #96]	@ 0x60
 80197b0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80197b2:	9019      	str	r0, [sp, #100]	@ 0x64
 80197b4:	9116      	str	r1, [sp, #88]	@ 0x58
 80197b6:	6850      	ldr	r0, [r2, #4]
 80197b8:	9307      	str	r3, [sp, #28]
 80197ba:	6812      	ldr	r2, [r2, #0]
 80197bc:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 80197be:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 80197c2:	fb00 1303 	mla	r3, r0, r3, r1
 80197c6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80197ca:	930a      	str	r3, [sp, #40]	@ 0x28
 80197cc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80197ce:	681b      	ldr	r3, [r3, #0]
 80197d0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80197d2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80197d4:	685e      	ldr	r6, [r3, #4]
 80197d6:	3604      	adds	r6, #4
 80197d8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80197da:	2b00      	cmp	r3, #0
 80197dc:	dc03      	bgt.n	80197e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80197de:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80197e0:	2b00      	cmp	r3, #0
 80197e2:	f340 8373 	ble.w	8019ecc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80197e6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80197e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80197ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80197f0:	1e48      	subs	r0, r1, #1
 80197f2:	1e57      	subs	r7, r2, #1
 80197f4:	9b07      	ldr	r3, [sp, #28]
 80197f6:	2b00      	cmp	r3, #0
 80197f8:	f340 818f 	ble.w	8019b1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80197fc:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80197fe:	142b      	asrs	r3, r5, #16
 8019800:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019804:	d406      	bmi.n	8019814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019806:	4584      	cmp	ip, r0
 8019808:	da04      	bge.n	8019814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801980a:	2b00      	cmp	r3, #0
 801980c:	db02      	blt.n	8019814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801980e:	42bb      	cmp	r3, r7
 8019810:	f2c0 8184 	blt.w	8019b1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019814:	f11c 0c01 	adds.w	ip, ip, #1
 8019818:	f100 8172 	bmi.w	8019b00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801981c:	4561      	cmp	r1, ip
 801981e:	f2c0 816f 	blt.w	8019b00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8019822:	3301      	adds	r3, #1
 8019824:	f100 816c 	bmi.w	8019b00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8019828:	429a      	cmp	r2, r3
 801982a:	f2c0 8169 	blt.w	8019b00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801982e:	9b07      	ldr	r3, [sp, #28]
 8019830:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8019832:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019834:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8019836:	2b00      	cmp	r3, #0
 8019838:	f340 818e 	ble.w	8019b58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801983c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801983e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019842:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019846:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801984a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801984c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8019850:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019852:	141b      	asrs	r3, r3, #16
 8019854:	f100 81d1 	bmi.w	8019bfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019858:	f101 38ff 	add.w	r8, r1, #4294967295
 801985c:	4543      	cmp	r3, r8
 801985e:	f280 81cc 	bge.w	8019bfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019862:	f1bc 0f00 	cmp.w	ip, #0
 8019866:	f2c0 81c8 	blt.w	8019bfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801986a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801986e:	45c4      	cmp	ip, r8
 8019870:	f280 81c3 	bge.w	8019bfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019874:	b209      	sxth	r1, r1
 8019876:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8019878:	fb0c 3301 	mla	r3, ip, r1, r3
 801987c:	eb04 0803 	add.w	r8, r4, r3
 8019880:	5ce3      	ldrb	r3, [r4, r3]
 8019882:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019886:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801988a:	2a00      	cmp	r2, #0
 801988c:	f000 81aa 	beq.w	8019be4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 8019890:	f898 c001 	ldrb.w	ip, [r8, #1]
 8019894:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8019898:	940b      	str	r4, [sp, #44]	@ 0x2c
 801989a:	0e24      	lsrs	r4, r4, #24
 801989c:	9412      	str	r4, [sp, #72]	@ 0x48
 801989e:	b178      	cbz	r0, 80198c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 80198a0:	eb08 0c01 	add.w	ip, r8, r1
 80198a4:	f818 1001 	ldrb.w	r1, [r8, r1]
 80198a8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80198ac:	9108      	str	r1, [sp, #32]
 80198ae:	0e09      	lsrs	r1, r1, #24
 80198b0:	9110      	str	r1, [sp, #64]	@ 0x40
 80198b2:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80198b6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80198ba:	910c      	str	r1, [sp, #48]	@ 0x30
 80198bc:	0e09      	lsrs	r1, r1, #24
 80198be:	9113      	str	r1, [sp, #76]	@ 0x4c
 80198c0:	b292      	uxth	r2, r2
 80198c2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80198c4:	b280      	uxth	r0, r0
 80198c6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80198c8:	fb02 f900 	mul.w	r9, r2, r0
 80198cc:	0112      	lsls	r2, r2, #4
 80198ce:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80198d2:	eba2 0809 	sub.w	r8, r2, r9
 80198d6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80198da:	b280      	uxth	r0, r0
 80198dc:	fa1f f888 	uxth.w	r8, r8
 80198e0:	1a12      	subs	r2, r2, r0
 80198e2:	fb08 f101 	mul.w	r1, r8, r1
 80198e6:	b292      	uxth	r2, r2
 80198e8:	fb02 110e 	mla	r1, r2, lr, r1
 80198ec:	fb00 1104 	mla	r1, r0, r4, r1
 80198f0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80198f2:	fb09 1104 	mla	r1, r9, r4, r1
 80198f6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80198fa:	2900      	cmp	r1, #0
 80198fc:	f000 80f5 	beq.w	8019aea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019900:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8019904:	d01b      	beq.n	801993e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8019906:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801990a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801990e:	fb0e fa0a 	mul.w	sl, lr, sl
 8019912:	fb0e fe03 	mul.w	lr, lr, r3
 8019916:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801991a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801991e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8019922:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8019926:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801992a:	4453      	add	r3, sl
 801992c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019930:	0a1b      	lsrs	r3, r3, #8
 8019932:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8019936:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801993a:	ea43 030c 	orr.w	r3, r3, ip
 801993e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019940:	2cff      	cmp	r4, #255	@ 0xff
 8019942:	d021      	beq.n	8019988 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019944:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019946:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801994a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801994c:	fb04 fb0b 	mul.w	fp, r4, fp
 8019950:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019952:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019956:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019958:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801995c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8019960:	fb04 fa0a 	mul.w	sl, r4, sl
 8019964:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019968:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801996c:	44de      	add	lr, fp
 801996e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019972:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019976:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801997a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801997e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019982:	ea4e 040a 	orr.w	r4, lr, sl
 8019986:	940b      	str	r4, [sp, #44]	@ 0x2c
 8019988:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801998a:	2cff      	cmp	r4, #255	@ 0xff
 801998c:	d021      	beq.n	80199d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801998e:	9c08      	ldr	r4, [sp, #32]
 8019990:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8019994:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8019996:	fb04 fb0b 	mul.w	fp, r4, fp
 801999a:	9c08      	ldr	r4, [sp, #32]
 801999c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80199a0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80199a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80199a6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80199aa:	fb04 fa0a 	mul.w	sl, r4, sl
 80199ae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80199b2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80199b6:	44de      	add	lr, fp
 80199b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80199bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80199c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80199c4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80199c8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80199cc:	ea4e 040a 	orr.w	r4, lr, sl
 80199d0:	9408      	str	r4, [sp, #32]
 80199d2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80199d4:	2cff      	cmp	r4, #255	@ 0xff
 80199d6:	d021      	beq.n	8019a1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80199d8:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80199da:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80199de:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80199e0:	fb04 fb0b 	mul.w	fp, r4, fp
 80199e4:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80199e6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80199ea:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80199ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80199f0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80199f4:	fb04 fa0a 	mul.w	sl, r4, sl
 80199f8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80199fc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8019a00:	44de      	add	lr, fp
 8019a02:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019a06:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a0e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8019a12:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019a16:	ea4e 040a 	orr.w	r4, lr, sl
 8019a1a:	940c      	str	r4, [sp, #48]	@ 0x30
 8019a1c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019a1e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8019a22:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8019a26:	43c9      	mvns	r1, r1
 8019a28:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8019a2c:	9c08      	ldr	r4, [sp, #32]
 8019a2e:	fb08 fc0c 	mul.w	ip, r8, ip
 8019a32:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019a36:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8019a3a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8019a3c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8019a40:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8019a44:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019a46:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019a4a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8019a4e:	fb08 f80e 	mul.w	r8, r8, lr
 8019a52:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019a56:	fa5f fe81 	uxtb.w	lr, r1
 8019a5a:	fb02 8303 	mla	r3, r2, r3, r8
 8019a5e:	9a08      	ldr	r2, [sp, #32]
 8019a60:	f8b7 8000 	ldrh.w	r8, [r7]
 8019a64:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019a68:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8019a6c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8019a6e:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8019a72:	fb00 330a 	mla	r3, r0, sl, r3
 8019a76:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 8019a7a:	ea4f 2228 	mov.w	r2, r8, asr #8
 8019a7e:	fb09 3900 	mla	r9, r9, r0, r3
 8019a82:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8019a86:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019a8a:	b2c9      	uxtb	r1, r1
 8019a8c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019a90:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8019a94:	fb02 f20e 	mul.w	r2, r2, lr
 8019a98:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8019a9c:	fb00 f00e 	mul.w	r0, r0, lr
 8019aa0:	1c53      	adds	r3, r2, #1
 8019aa2:	fb01 f10e 	mul.w	r1, r1, lr
 8019aa6:	ea4c 0c09 	orr.w	ip, ip, r9
 8019aaa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8019aae:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8019ab2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019ab6:	4a60      	ldr	r2, [pc, #384]	@ (8019c38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8019ab8:	b2db      	uxtb	r3, r3
 8019aba:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8019abe:	1c43      	adds	r3, r0, #1
 8019ac0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019ac4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8019ac8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019acc:	00db      	lsls	r3, r3, #3
 8019ace:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019ad2:	4313      	orrs	r3, r2
 8019ad4:	1c4a      	adds	r2, r1, #1
 8019ad6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019ada:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8019ade:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8019ae2:	ea4c 0c03 	orr.w	ip, ip, r3
 8019ae6:	f8a7 c000 	strh.w	ip, [r7]
 8019aea:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8019aec:	3702      	adds	r7, #2
 8019aee:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8019af0:	441a      	add	r2, r3
 8019af2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019af4:	441d      	add	r5, r3
 8019af6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8019af8:	9225      	str	r2, [sp, #148]	@ 0x94
 8019afa:	3b01      	subs	r3, #1
 8019afc:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019afe:	e699      	b.n	8019834 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019b00:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8019b02:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8019b04:	441c      	add	r4, r3
 8019b06:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019b08:	441d      	add	r5, r3
 8019b0a:	9b07      	ldr	r3, [sp, #28]
 8019b0c:	9425      	str	r4, [sp, #148]	@ 0x94
 8019b0e:	3b01      	subs	r3, #1
 8019b10:	9307      	str	r3, [sp, #28]
 8019b12:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019b14:	3302      	adds	r3, #2
 8019b16:	930a      	str	r3, [sp, #40]	@ 0x28
 8019b18:	e66c      	b.n	80197f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019b1a:	d024      	beq.n	8019b66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 8019b1c:	9b07      	ldr	r3, [sp, #28]
 8019b1e:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8019b20:	3b01      	subs	r3, #1
 8019b22:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8019b24:	fb00 4003 	mla	r0, r0, r3, r4
 8019b28:	1400      	asrs	r0, r0, #16
 8019b2a:	f53f ae80 	bmi.w	801982e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019b2e:	3901      	subs	r1, #1
 8019b30:	4288      	cmp	r0, r1
 8019b32:	f6bf ae7c 	bge.w	801982e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019b36:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8019b38:	fb01 5303 	mla	r3, r1, r3, r5
 8019b3c:	141b      	asrs	r3, r3, #16
 8019b3e:	f53f ae76 	bmi.w	801982e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019b42:	3a01      	subs	r2, #1
 8019b44:	4293      	cmp	r3, r2
 8019b46:	f6bf ae72 	bge.w	801982e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019b4a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019b4e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8019b52:	f1bb 0f00 	cmp.w	fp, #0
 8019b56:	dc71      	bgt.n	8019c3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8019b58:	9b07      	ldr	r3, [sp, #28]
 8019b5a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019b5e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019b60:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019b64:	930a      	str	r3, [sp, #40]	@ 0x28
 8019b66:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8019b68:	2b00      	cmp	r3, #0
 8019b6a:	f340 81af 	ble.w	8019ecc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8019b6e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019b72:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019b74:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b7c:	eef0 6a62 	vmov.f32	s13, s5
 8019b80:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019b84:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b8c:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8019b90:	eef0 6a43 	vmov.f32	s13, s6
 8019b94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b98:	ee16 5a90 	vmov	r5, s13
 8019b9c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019ba0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019ba4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019ba8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019bac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019bb0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019bb4:	ee12 2a90 	vmov	r2, s5
 8019bb8:	eef0 2a47 	vmov.f32	s5, s14
 8019bbc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019bc0:	ee13 2a10 	vmov	r2, s6
 8019bc4:	9327      	str	r3, [sp, #156]	@ 0x9c
 8019bc6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019bc8:	eeb0 3a67 	vmov.f32	s6, s15
 8019bcc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019bd0:	9328      	str	r3, [sp, #160]	@ 0xa0
 8019bd2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8019bd4:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8019bd6:	3b01      	subs	r3, #1
 8019bd8:	9316      	str	r3, [sp, #88]	@ 0x58
 8019bda:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019bdc:	bf08      	it	eq
 8019bde:	4613      	moveq	r3, r2
 8019be0:	9307      	str	r3, [sp, #28]
 8019be2:	e5f9      	b.n	80197d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019be4:	2800      	cmp	r0, #0
 8019be6:	f43f ae6b 	beq.w	80198c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8019bea:	f818 1001 	ldrb.w	r1, [r8, r1]
 8019bee:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019bf2:	9108      	str	r1, [sp, #32]
 8019bf4:	0e09      	lsrs	r1, r1, #24
 8019bf6:	9110      	str	r1, [sp, #64]	@ 0x40
 8019bf8:	e662      	b.n	80198c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8019bfa:	f113 0801 	adds.w	r8, r3, #1
 8019bfe:	f53f af74 	bmi.w	8019aea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019c02:	4541      	cmp	r1, r8
 8019c04:	f6ff af71 	blt.w	8019aea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019c08:	f11c 0801 	adds.w	r8, ip, #1
 8019c0c:	f53f af6d 	bmi.w	8019aea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019c10:	45c6      	cmp	lr, r8
 8019c12:	f6ff af6a 	blt.w	8019aea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019c16:	b209      	sxth	r1, r1
 8019c18:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8019c1c:	fa0f f38e 	sxth.w	r3, lr
 8019c20:	9100      	str	r1, [sp, #0]
 8019c22:	4639      	mov	r1, r7
 8019c24:	9301      	str	r3, [sp, #4]
 8019c26:	4633      	mov	r3, r6
 8019c28:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8019c2c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019c2e:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8019c30:	f7ff fc7b 	bl	801952a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8019c34:	e759      	b.n	8019aea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019c36:	bf00      	nop
 8019c38:	fffff800 	.word	0xfffff800
 8019c3c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019c3e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019c42:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8019c44:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019c48:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8019c4a:	1427      	asrs	r7, r4, #16
 8019c4c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8019c4e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019c52:	142b      	asrs	r3, r5, #16
 8019c54:	fb01 7303 	mla	r3, r1, r3, r7
 8019c58:	18e7      	adds	r7, r4, r3
 8019c5a:	5ce3      	ldrb	r3, [r4, r3]
 8019c5c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019c60:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019c64:	2a00      	cmp	r2, #0
 8019c66:	f000 8127 	beq.w	8019eb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8019c6a:	f897 e001 	ldrb.w	lr, [r7, #1]
 8019c6e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8019c72:	940d      	str	r4, [sp, #52]	@ 0x34
 8019c74:	0e24      	lsrs	r4, r4, #24
 8019c76:	9414      	str	r4, [sp, #80]	@ 0x50
 8019c78:	b170      	cbz	r0, 8019c98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8019c7a:	eb07 0e01 	add.w	lr, r7, r1
 8019c7e:	5c79      	ldrb	r1, [r7, r1]
 8019c80:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019c84:	9109      	str	r1, [sp, #36]	@ 0x24
 8019c86:	0e09      	lsrs	r1, r1, #24
 8019c88:	9111      	str	r1, [sp, #68]	@ 0x44
 8019c8a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8019c8e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019c92:	910e      	str	r1, [sp, #56]	@ 0x38
 8019c94:	0e09      	lsrs	r1, r1, #24
 8019c96:	9115      	str	r1, [sp, #84]	@ 0x54
 8019c98:	b292      	uxth	r2, r2
 8019c9a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019c9c:	b280      	uxth	r0, r0
 8019c9e:	fb02 f800 	mul.w	r8, r2, r0
 8019ca2:	0112      	lsls	r2, r2, #4
 8019ca4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019ca8:	eba2 0e08 	sub.w	lr, r2, r8
 8019cac:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8019cb0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019cb2:	b280      	uxth	r0, r0
 8019cb4:	fa1f fe8e 	uxth.w	lr, lr
 8019cb8:	1a09      	subs	r1, r1, r0
 8019cba:	fb0e f202 	mul.w	r2, lr, r2
 8019cbe:	b289      	uxth	r1, r1
 8019cc0:	fb01 220c 	mla	r2, r1, ip, r2
 8019cc4:	fb00 2204 	mla	r2, r0, r4, r2
 8019cc8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019cca:	fb08 2204 	mla	r2, r8, r4, r2
 8019cce:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8019cd2:	2a00      	cmp	r2, #0
 8019cd4:	f000 80e5 	beq.w	8019ea2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8019cd8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8019cdc:	d019      	beq.n	8019d12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8019cde:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8019ce2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8019ce6:	fb0c fa0a 	mul.w	sl, ip, sl
 8019cea:	fb0c fc03 	mul.w	ip, ip, r3
 8019cee:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019cf2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8019cf6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8019cfa:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8019cfe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019d02:	4453      	add	r3, sl
 8019d04:	0a3f      	lsrs	r7, r7, #8
 8019d06:	0a1b      	lsrs	r3, r3, #8
 8019d08:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8019d0c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8019d10:	433b      	orrs	r3, r7
 8019d12:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019d14:	2cff      	cmp	r4, #255	@ 0xff
 8019d16:	d020      	beq.n	8019d5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8019d18:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019d1a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019d1e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019d20:	4367      	muls	r7, r4
 8019d22:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019d24:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019d28:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019d2c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019d2e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019d32:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019d36:	fb04 fa0a 	mul.w	sl, r4, sl
 8019d3a:	44bc      	add	ip, r7
 8019d3c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019d40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019d44:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019d48:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019d4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019d50:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019d54:	ea4c 040a 	orr.w	r4, ip, sl
 8019d58:	940d      	str	r4, [sp, #52]	@ 0x34
 8019d5a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019d5c:	2cff      	cmp	r4, #255	@ 0xff
 8019d5e:	d020      	beq.n	8019da2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8019d60:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8019d62:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019d66:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019d68:	4367      	muls	r7, r4
 8019d6a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8019d6c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019d70:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019d74:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8019d76:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019d7a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019d7e:	fb04 fa0a 	mul.w	sl, r4, sl
 8019d82:	44bc      	add	ip, r7
 8019d84:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019d88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019d8c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019d90:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019d94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019d98:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019d9c:	ea4c 040a 	orr.w	r4, ip, sl
 8019da0:	9409      	str	r4, [sp, #36]	@ 0x24
 8019da2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019da4:	2cff      	cmp	r4, #255	@ 0xff
 8019da6:	d020      	beq.n	8019dea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8019da8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019daa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019dae:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019db0:	4367      	muls	r7, r4
 8019db2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019db4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019db8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8019dbc:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019dbe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8019dc2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019dc6:	fb04 fa0a 	mul.w	sl, r4, sl
 8019dca:	44bc      	add	ip, r7
 8019dcc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8019dd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019dd4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019dd8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8019ddc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019de0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019de4:	ea4c 040a 	orr.w	r4, ip, sl
 8019de8:	940e      	str	r4, [sp, #56]	@ 0x38
 8019dea:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019dec:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8019df0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8019df4:	43d2      	mvns	r2, r2
 8019df6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8019dfa:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8019dfc:	b2d2      	uxtb	r2, r2
 8019dfe:	fb0e f707 	mul.w	r7, lr, r7
 8019e02:	fb01 770c 	mla	r7, r1, ip, r7
 8019e06:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8019e0a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019e0c:	fb00 770c 	mla	r7, r0, ip, r7
 8019e10:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8019e14:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019e16:	fb08 770c 	mla	r7, r8, ip, r7
 8019e1a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8019e1e:	fb0e fe0c 	mul.w	lr, lr, ip
 8019e22:	0a3f      	lsrs	r7, r7, #8
 8019e24:	fb01 e303 	mla	r3, r1, r3, lr
 8019e28:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019e2a:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8019e2e:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8019e32:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8019e34:	fb00 330a 	mla	r3, r0, sl, r3
 8019e38:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8019e3c:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019e40:	f8b9 3000 	ldrh.w	r3, [r9]
 8019e44:	1218      	asrs	r0, r3, #8
 8019e46:	10d9      	asrs	r1, r3, #3
 8019e48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019e4c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019e50:	00db      	lsls	r3, r3, #3
 8019e52:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019e56:	4350      	muls	r0, r2
 8019e58:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8019e5c:	b2db      	uxtb	r3, r3
 8019e5e:	4351      	muls	r1, r2
 8019e60:	ea47 070c 	orr.w	r7, r7, ip
 8019e64:	4353      	muls	r3, r2
 8019e66:	1c42      	adds	r2, r0, #1
 8019e68:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019e6c:	0c3a      	lsrs	r2, r7, #16
 8019e6e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019e72:	4a18      	ldr	r2, [pc, #96]	@ (8019ed4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8019e74:	b2c0      	uxtb	r0, r0
 8019e76:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8019e7a:	1c4a      	adds	r2, r1, #1
 8019e7c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019e80:	0a3a      	lsrs	r2, r7, #8
 8019e82:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019e86:	00c9      	lsls	r1, r1, #3
 8019e88:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019e8c:	4301      	orrs	r1, r0
 8019e8e:	1c58      	adds	r0, r3, #1
 8019e90:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019e94:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8019e98:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8019e9c:	4308      	orrs	r0, r1
 8019e9e:	f8a9 0000 	strh.w	r0, [r9]
 8019ea2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8019ea4:	f109 0902 	add.w	r9, r9, #2
 8019ea8:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8019eaa:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019eae:	441a      	add	r2, r3
 8019eb0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019eb2:	9225      	str	r2, [sp, #148]	@ 0x94
 8019eb4:	441d      	add	r5, r3
 8019eb6:	e64c      	b.n	8019b52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8019eb8:	2800      	cmp	r0, #0
 8019eba:	f43f aeed 	beq.w	8019c98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8019ebe:	5c79      	ldrb	r1, [r7, r1]
 8019ec0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019ec4:	9109      	str	r1, [sp, #36]	@ 0x24
 8019ec6:	0e09      	lsrs	r1, r1, #24
 8019ec8:	9111      	str	r1, [sp, #68]	@ 0x44
 8019eca:	e6e5      	b.n	8019c98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8019ecc:	b01b      	add	sp, #108	@ 0x6c
 8019ece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019ed2:	bf00      	nop
 8019ed4:	fffff800 	.word	0xfffff800

08019ed8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8019ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019edc:	b085      	sub	sp, #20
 8019ede:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8019ee2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8019ee6:	2800      	cmp	r0, #0
 8019ee8:	9103      	str	r1, [sp, #12]
 8019eea:	fb00 7406 	mla	r4, r0, r6, r7
 8019eee:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8019ef2:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8019ef6:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8019efa:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8019efe:	eb03 0904 	add.w	r9, r3, r4
 8019f02:	9501      	str	r5, [sp, #4]
 8019f04:	f2c0 8150 	blt.w	801a1a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8019f08:	4583      	cmp	fp, r0
 8019f0a:	f340 814d 	ble.w	801a1a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8019f0e:	2f00      	cmp	r7, #0
 8019f10:	f2c0 8146 	blt.w	801a1a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8019f14:	42be      	cmp	r6, r7
 8019f16:	f340 8143 	ble.w	801a1a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8019f1a:	f813 c004 	ldrb.w	ip, [r3, r4]
 8019f1e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8019f22:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8019f26:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019f2a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8019f2e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019f32:	4355      	muls	r5, r2
 8019f34:	fb0c f203 	mul.w	r2, ip, r3
 8019f38:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8019f3c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8019f40:	441d      	add	r5, r3
 8019f42:	f102 0320 	add.w	r3, r2, #32
 8019f46:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019f4a:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8019f4e:	0a1b      	lsrs	r3, r3, #8
 8019f50:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019f54:	431c      	orrs	r4, r3
 8019f56:	1c7b      	adds	r3, r7, #1
 8019f58:	f100 812b 	bmi.w	801a1b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8019f5c:	429e      	cmp	r6, r3
 8019f5e:	f340 8128 	ble.w	801a1b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8019f62:	2900      	cmp	r1, #0
 8019f64:	f000 8128 	beq.w	801a1b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8019f68:	9a01      	ldr	r2, [sp, #4]
 8019f6a:	f899 3001 	ldrb.w	r3, [r9, #1]
 8019f6e:	8855      	ldrh	r5, [r2, #2]
 8019f70:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8019f74:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8019f78:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019f7c:	fb08 f802 	mul.w	r8, r8, r2
 8019f80:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8019f84:	435d      	muls	r5, r3
 8019f86:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8019f8a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019f8e:	44d0      	add	r8, sl
 8019f90:	f105 0a20 	add.w	sl, r5, #32
 8019f94:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8019f98:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8019f9c:	0a2d      	lsrs	r5, r5, #8
 8019f9e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019fa2:	432a      	orrs	r2, r5
 8019fa4:	3001      	adds	r0, #1
 8019fa6:	f100 810d 	bmi.w	801a1c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8019faa:	4583      	cmp	fp, r0
 8019fac:	f340 810a 	ble.w	801a1c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8019fb0:	f1be 0f00 	cmp.w	lr, #0
 8019fb4:	f000 810b 	beq.w	801a1ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8019fb8:	2f00      	cmp	r7, #0
 8019fba:	f2c0 8100 	blt.w	801a1be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8019fbe:	42be      	cmp	r6, r7
 8019fc0:	f340 80fd 	ble.w	801a1be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8019fc4:	9801      	ldr	r0, [sp, #4]
 8019fc6:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8019fca:	f819 5006 	ldrb.w	r5, [r9, r6]
 8019fce:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8019fd2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019fd6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8019fda:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8019fde:	fb0a fa00 	mul.w	sl, sl, r0
 8019fe2:	fb05 f808 	mul.w	r8, r5, r8
 8019fe6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8019fea:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8019fee:	4482      	add	sl, r0
 8019ff0:	f108 0020 	add.w	r0, r8, #32
 8019ff4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019ff8:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8019ffc:	0a00      	lsrs	r0, r0, #8
 8019ffe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a002:	ea4b 0b00 	orr.w	fp, fp, r0
 801a006:	3701      	adds	r7, #1
 801a008:	f100 80e6 	bmi.w	801a1d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801a00c:	42be      	cmp	r6, r7
 801a00e:	f340 80e3 	ble.w	801a1d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801a012:	2900      	cmp	r1, #0
 801a014:	f000 80e3 	beq.w	801a1de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801a018:	3601      	adds	r6, #1
 801a01a:	9801      	ldr	r0, [sp, #4]
 801a01c:	f819 7006 	ldrb.w	r7, [r9, r6]
 801a020:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801a024:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801a028:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801a02c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a030:	fb09 f906 	mul.w	r9, r9, r6
 801a034:	fb07 f800 	mul.w	r8, r7, r0
 801a038:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801a03c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801a040:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801a044:	44d1      	add	r9, sl
 801a046:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801a04a:	f108 0020 	add.w	r0, r8, #32
 801a04e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801a052:	0a00      	lsrs	r0, r0, #8
 801a054:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a058:	4330      	orrs	r0, r6
 801a05a:	b28e      	uxth	r6, r1
 801a05c:	fa1f f98e 	uxth.w	r9, lr
 801a060:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801a064:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801a068:	fb06 f809 	mul.w	r8, r6, r9
 801a06c:	0136      	lsls	r6, r6, #4
 801a06e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a072:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801a076:	9601      	str	r6, [sp, #4]
 801a078:	ea4a 0404 	orr.w	r4, sl, r4
 801a07c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801a080:	fa1f f689 	uxth.w	r6, r9
 801a084:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a088:	fb11 f90e 	smulbb	r9, r1, lr
 801a08c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a090:	9602      	str	r6, [sp, #8]
 801a092:	4626      	mov	r6, r4
 801a094:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801a098:	f1ce 0410 	rsb	r4, lr, #16
 801a09c:	ea4a 0202 	orr.w	r2, sl, r2
 801a0a0:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801a0a4:	1a64      	subs	r4, r4, r1
 801a0a6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801a0aa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a0ae:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a0b2:	434a      	muls	r2, r1
 801a0b4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801a0b8:	ea4a 0000 	orr.w	r0, sl, r0
 801a0bc:	9903      	ldr	r1, [sp, #12]
 801a0be:	fb04 2406 	mla	r4, r4, r6, r2
 801a0c2:	9e02      	ldr	r6, [sp, #8]
 801a0c4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801a0c8:	fb09 4200 	mla	r2, r9, r0, r4
 801a0cc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801a0d0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801a0d4:	8808      	ldrh	r0, [r1, #0]
 801a0d6:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801a0da:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801a0de:	ea44 0b0b 	orr.w	fp, r4, fp
 801a0e2:	9c01      	ldr	r4, [sp, #4]
 801a0e4:	b289      	uxth	r1, r1
 801a0e6:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801a0ea:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801a0ee:	1ba4      	subs	r4, r4, r6
 801a0f0:	9e01      	ldr	r6, [sp, #4]
 801a0f2:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801a0f6:	eba6 0608 	sub.w	r6, r6, r8
 801a0fa:	b2a4      	uxth	r4, r4
 801a0fc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801a100:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a104:	b2b6      	uxth	r6, r6
 801a106:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a10a:	4373      	muls	r3, r6
 801a10c:	ea42 0e0e 	orr.w	lr, r2, lr
 801a110:	fb0c 3304 	mla	r3, ip, r4, r3
 801a114:	9c02      	ldr	r4, [sp, #8]
 801a116:	fa1f f28e 	uxth.w	r2, lr
 801a11a:	fb04 3505 	mla	r5, r4, r5, r3
 801a11e:	10d4      	asrs	r4, r2, #3
 801a120:	fb08 5707 	mla	r7, r8, r7, r5
 801a124:	1215      	asrs	r5, r2, #8
 801a126:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801a12a:	00d2      	lsls	r2, r2, #3
 801a12c:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a130:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a134:	b2d2      	uxtb	r2, r2
 801a136:	434f      	muls	r7, r1
 801a138:	1c7b      	adds	r3, r7, #1
 801a13a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a13e:	1203      	asrs	r3, r0, #8
 801a140:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801a144:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801a148:	b2ff      	uxtb	r7, r7
 801a14a:	fb13 f307 	smulbb	r3, r3, r7
 801a14e:	fb05 3501 	mla	r5, r5, r1, r3
 801a152:	10c3      	asrs	r3, r0, #3
 801a154:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801a158:	b2ad      	uxth	r5, r5
 801a15a:	fb13 f307 	smulbb	r3, r3, r7
 801a15e:	fb04 3401 	mla	r4, r4, r1, r3
 801a162:	00c3      	lsls	r3, r0, #3
 801a164:	b2db      	uxtb	r3, r3
 801a166:	b2a4      	uxth	r4, r4
 801a168:	fb13 f307 	smulbb	r3, r3, r7
 801a16c:	fb02 3101 	mla	r1, r2, r1, r3
 801a170:	1c6b      	adds	r3, r5, #1
 801a172:	1c62      	adds	r2, r4, #1
 801a174:	b289      	uxth	r1, r1
 801a176:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a17a:	1c4b      	adds	r3, r1, #1
 801a17c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801a180:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a184:	9a03      	ldr	r2, [sp, #12]
 801a186:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a18a:	0964      	lsrs	r4, r4, #5
 801a18c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a190:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801a194:	432b      	orrs	r3, r5
 801a196:	4323      	orrs	r3, r4
 801a198:	8013      	strh	r3, [r2, #0]
 801a19a:	b005      	add	sp, #20
 801a19c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1a0:	f04f 0c00 	mov.w	ip, #0
 801a1a4:	4664      	mov	r4, ip
 801a1a6:	e6d6      	b.n	8019f56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801a1a8:	2300      	movs	r3, #0
 801a1aa:	469c      	mov	ip, r3
 801a1ac:	461a      	mov	r2, r3
 801a1ae:	461c      	mov	r4, r3
 801a1b0:	e6f8      	b.n	8019fa4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801a1b2:	2300      	movs	r3, #0
 801a1b4:	461a      	mov	r2, r3
 801a1b6:	e6f5      	b.n	8019fa4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801a1b8:	460b      	mov	r3, r1
 801a1ba:	460a      	mov	r2, r1
 801a1bc:	e6f2      	b.n	8019fa4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801a1be:	2500      	movs	r5, #0
 801a1c0:	46ab      	mov	fp, r5
 801a1c2:	e720      	b.n	801a006 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801a1c4:	2700      	movs	r7, #0
 801a1c6:	463d      	mov	r5, r7
 801a1c8:	4638      	mov	r0, r7
 801a1ca:	46bb      	mov	fp, r7
 801a1cc:	e745      	b.n	801a05a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801a1ce:	4677      	mov	r7, lr
 801a1d0:	4675      	mov	r5, lr
 801a1d2:	4670      	mov	r0, lr
 801a1d4:	46f3      	mov	fp, lr
 801a1d6:	e740      	b.n	801a05a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801a1d8:	2700      	movs	r7, #0
 801a1da:	4638      	mov	r0, r7
 801a1dc:	e73d      	b.n	801a05a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801a1de:	460f      	mov	r7, r1
 801a1e0:	4608      	mov	r0, r1
 801a1e2:	e73a      	b.n	801a05a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801a1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a1e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1e8:	b097      	sub	sp, #92	@ 0x5c
 801a1ea:	9214      	str	r2, [sp, #80]	@ 0x50
 801a1ec:	9308      	str	r3, [sp, #32]
 801a1ee:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801a1f0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801a1f4:	9015      	str	r0, [sp, #84]	@ 0x54
 801a1f6:	9312      	str	r3, [sp, #72]	@ 0x48
 801a1f8:	6850      	ldr	r0, [r2, #4]
 801a1fa:	9111      	str	r1, [sp, #68]	@ 0x44
 801a1fc:	6812      	ldr	r2, [r2, #0]
 801a1fe:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801a202:	fb00 1303 	mla	r3, r0, r3, r1
 801a206:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a20a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a20c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a20e:	681b      	ldr	r3, [r3, #0]
 801a210:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a212:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a214:	685b      	ldr	r3, [r3, #4]
 801a216:	930c      	str	r3, [sp, #48]	@ 0x30
 801a218:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801a21c:	930a      	str	r3, [sp, #40]	@ 0x28
 801a21e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a220:	2b00      	cmp	r3, #0
 801a222:	dc03      	bgt.n	801a22c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a224:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801a226:	2b00      	cmp	r3, #0
 801a228:	f340 83cd 	ble.w	801a9c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801a22c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a22e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a232:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a236:	1e48      	subs	r0, r1, #1
 801a238:	1e55      	subs	r5, r2, #1
 801a23a:	9b08      	ldr	r3, [sp, #32]
 801a23c:	2b00      	cmp	r3, #0
 801a23e:	f340 81a5 	ble.w	801a58c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801a242:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801a244:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a246:	1436      	asrs	r6, r6, #16
 801a248:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a24c:	d406      	bmi.n	801a25c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a24e:	4286      	cmp	r6, r0
 801a250:	da04      	bge.n	801a25c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a252:	2b00      	cmp	r3, #0
 801a254:	db02      	blt.n	801a25c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a256:	42ab      	cmp	r3, r5
 801a258:	f2c0 8199 	blt.w	801a58e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801a25c:	3601      	adds	r6, #1
 801a25e:	f100 8186 	bmi.w	801a56e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a262:	42b1      	cmp	r1, r6
 801a264:	f2c0 8183 	blt.w	801a56e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a268:	3301      	adds	r3, #1
 801a26a:	f100 8180 	bmi.w	801a56e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a26e:	429a      	cmp	r2, r3
 801a270:	f2c0 817d 	blt.w	801a56e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a274:	9b08      	ldr	r3, [sp, #32]
 801a276:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801a27a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801a27c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a27e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a280:	2b00      	cmp	r3, #0
 801a282:	f340 81a6 	ble.w	801a5d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801a286:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a288:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801a28a:	1418      	asrs	r0, r3, #16
 801a28c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a28e:	142d      	asrs	r5, r5, #16
 801a290:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801a294:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a296:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801a29a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a29c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801a2a0:	f100 81fa 	bmi.w	801a698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a2a4:	f102 3eff 	add.w	lr, r2, #4294967295
 801a2a8:	4575      	cmp	r5, lr
 801a2aa:	f280 81f5 	bge.w	801a698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a2ae:	2800      	cmp	r0, #0
 801a2b0:	f2c0 81f2 	blt.w	801a698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a2b4:	f103 3eff 	add.w	lr, r3, #4294967295
 801a2b8:	4570      	cmp	r0, lr
 801a2ba:	f280 81ed 	bge.w	801a698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a2be:	b212      	sxth	r2, r2
 801a2c0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a2c2:	fa1f fe81 	uxth.w	lr, r1
 801a2c6:	fb00 5002 	mla	r0, r0, r2, r5
 801a2ca:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801a2ce:	eb03 0a00 	add.w	sl, r3, r0
 801a2d2:	f813 9000 	ldrb.w	r9, [r3, r0]
 801a2d6:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801a2da:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a2de:	b29b      	uxth	r3, r3
 801a2e0:	f1bc 0f00 	cmp.w	ip, #0
 801a2e4:	f000 81bb 	beq.w	801a65e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a2e8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801a2ec:	eb0a 0b02 	add.w	fp, sl, r2
 801a2f0:	fa1f fa8c 	uxth.w	sl, ip
 801a2f4:	940d      	str	r4, [sp, #52]	@ 0x34
 801a2f6:	fb0a fe0e 	mul.w	lr, sl, lr
 801a2fa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801a2fe:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801a302:	eba5 050e 	sub.w	r5, r5, lr
 801a306:	940e      	str	r4, [sp, #56]	@ 0x38
 801a308:	fa1f fa8a 	uxth.w	sl, sl
 801a30c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a30e:	b2ad      	uxth	r5, r5
 801a310:	eba3 030a 	sub.w	r3, r3, sl
 801a314:	fb08 f505 	mul.w	r5, r8, r5
 801a318:	b29b      	uxth	r3, r3
 801a31a:	fb09 5303 	mla	r3, r9, r3, r5
 801a31e:	fb0a 3304 	mla	r3, sl, r4, r3
 801a322:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801a324:	fb0e 3304 	mla	r3, lr, r4, r3
 801a328:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a32c:	2b00      	cmp	r3, #0
 801a32e:	f000 8111 	beq.w	801a554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a332:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a334:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801a338:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801a33c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801a340:	f000 8192 	beq.w	801a668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801a344:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801a348:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801a34c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a350:	fb0a fe0e 	mul.w	lr, sl, lr
 801a354:	fb09 f000 	mul.w	r0, r9, r0
 801a358:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801a35c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801a360:	f100 0b20 	add.w	fp, r0, #32
 801a364:	44ce      	add	lr, r9
 801a366:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801a36a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801a36e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a372:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801a376:	ea4e 0909 	orr.w	r9, lr, r9
 801a37a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801a37e:	8868      	ldrh	r0, [r5, #2]
 801a380:	d019      	beq.n	801a3b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a382:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801a386:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801a38a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a38e:	fb0a fe0e 	mul.w	lr, sl, lr
 801a392:	fb08 f800 	mul.w	r8, r8, r0
 801a396:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801a39a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801a39e:	f108 0b20 	add.w	fp, r8, #32
 801a3a2:	4486      	add	lr, r0
 801a3a4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801a3a8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801a3ac:	0a00      	lsrs	r0, r0, #8
 801a3ae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a3b2:	ea4e 0000 	orr.w	r0, lr, r0
 801a3b6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801a3ba:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801a3be:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801a3c2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a3c6:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801a3ca:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a3ce:	ea4e 0909 	orr.w	r9, lr, r9
 801a3d2:	ea4a 0000 	orr.w	r0, sl, r0
 801a3d6:	f1bc 0f00 	cmp.w	ip, #0
 801a3da:	f000 8147 	beq.w	801a66c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801a3de:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801a3e2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a3e4:	3a01      	subs	r2, #1
 801a3e6:	2cff      	cmp	r4, #255	@ 0xff
 801a3e8:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801a3ec:	f102 0202 	add.w	r2, r2, #2
 801a3f0:	eb05 0e02 	add.w	lr, r5, r2
 801a3f4:	5aaa      	ldrh	r2, [r5, r2]
 801a3f6:	d018      	beq.n	801a42a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a3f8:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801a3fc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a400:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a404:	fb04 fa02 	mul.w	sl, r4, r2
 801a408:	fb08 f805 	mul.w	r8, r8, r5
 801a40c:	f10a 0520 	add.w	r5, sl, #32
 801a410:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801a414:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a418:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801a41c:	4442      	add	r2, r8
 801a41e:	0a2d      	lsrs	r5, r5, #8
 801a420:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801a424:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a428:	432a      	orrs	r2, r5
 801a42a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801a42c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801a430:	2cff      	cmp	r4, #255	@ 0xff
 801a432:	d01a      	beq.n	801a46a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801a434:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801a438:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a43c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a440:	fb04 fa05 	mul.w	sl, r4, r5
 801a444:	fb08 f80e 	mul.w	r8, r8, lr
 801a448:	f10a 0e20 	add.w	lr, sl, #32
 801a44c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801a450:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a454:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801a458:	4445      	add	r5, r8
 801a45a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a45e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801a462:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801a466:	ea45 050e 	orr.w	r5, r5, lr
 801a46a:	fb1c fe01 	smulbb	lr, ip, r1
 801a46e:	f1cc 0810 	rsb	r8, ip, #16
 801a472:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801a476:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a47a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801a47e:	eba8 0801 	sub.w	r8, r8, r1
 801a482:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801a486:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a48a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801a48e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a492:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801a496:	ea4a 0202 	orr.w	r2, sl, r2
 801a49a:	4341      	muls	r1, r0
 801a49c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801a4a0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a4a4:	fb09 1108 	mla	r1, r9, r8, r1
 801a4a8:	ea4b 0505 	orr.w	r5, fp, r5
 801a4ac:	fb0c 1102 	mla	r1, ip, r2, r1
 801a4b0:	fb0e 1e05 	mla	lr, lr, r5, r1
 801a4b4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801a4b8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801a4bc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a4c0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a4c4:	ea42 0e0e 	orr.w	lr, r2, lr
 801a4c8:	fa1f f28e 	uxth.w	r2, lr
 801a4cc:	2bff      	cmp	r3, #255	@ 0xff
 801a4ce:	d103      	bne.n	801a4d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a4d0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801a4d2:	29ff      	cmp	r1, #255	@ 0xff
 801a4d4:	f000 80de 	beq.w	801a694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801a4d8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801a4da:	1215      	asrs	r5, r2, #8
 801a4dc:	8838      	ldrh	r0, [r7, #0]
 801a4de:	434b      	muls	r3, r1
 801a4e0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a4e4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a4e6:	f103 0c01 	add.w	ip, r3, #1
 801a4ea:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801a4ee:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801a4f2:	fa5f fc83 	uxtb.w	ip, r3
 801a4f6:	1203      	asrs	r3, r0, #8
 801a4f8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801a4fc:	fb13 f30c 	smulbb	r3, r3, ip
 801a500:	fb05 3501 	mla	r5, r5, r1, r3
 801a504:	10c3      	asrs	r3, r0, #3
 801a506:	10d1      	asrs	r1, r2, #3
 801a508:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801a50c:	00d2      	lsls	r2, r2, #3
 801a50e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a512:	b2ad      	uxth	r5, r5
 801a514:	fb13 f30c 	smulbb	r3, r3, ip
 801a518:	b2d2      	uxtb	r2, r2
 801a51a:	fb01 3104 	mla	r1, r1, r4, r3
 801a51e:	00c3      	lsls	r3, r0, #3
 801a520:	b2db      	uxtb	r3, r3
 801a522:	b289      	uxth	r1, r1
 801a524:	fb13 f30c 	smulbb	r3, r3, ip
 801a528:	fb02 3304 	mla	r3, r2, r4, r3
 801a52c:	b29a      	uxth	r2, r3
 801a52e:	1c6b      	adds	r3, r5, #1
 801a530:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a534:	1c53      	adds	r3, r2, #1
 801a536:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a53a:	1c4a      	adds	r2, r1, #1
 801a53c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a540:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a544:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a548:	0949      	lsrs	r1, r1, #5
 801a54a:	432b      	orrs	r3, r5
 801a54c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a550:	430b      	orrs	r3, r1
 801a552:	803b      	strh	r3, [r7, #0]
 801a554:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a556:	3702      	adds	r7, #2
 801a558:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a55a:	4413      	add	r3, r2
 801a55c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a55e:	9321      	str	r3, [sp, #132]	@ 0x84
 801a560:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a562:	441a      	add	r2, r3
 801a564:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a566:	3b01      	subs	r3, #1
 801a568:	9222      	str	r2, [sp, #136]	@ 0x88
 801a56a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a56c:	e687      	b.n	801a27e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a56e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a570:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801a572:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801a574:	4433      	add	r3, r6
 801a576:	9321      	str	r3, [sp, #132]	@ 0x84
 801a578:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a57a:	441c      	add	r4, r3
 801a57c:	9b08      	ldr	r3, [sp, #32]
 801a57e:	3b01      	subs	r3, #1
 801a580:	9422      	str	r4, [sp, #136]	@ 0x88
 801a582:	9308      	str	r3, [sp, #32]
 801a584:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a586:	3302      	adds	r3, #2
 801a588:	9309      	str	r3, [sp, #36]	@ 0x24
 801a58a:	e656      	b.n	801a23a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801a58c:	d028      	beq.n	801a5e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801a58e:	9b08      	ldr	r3, [sp, #32]
 801a590:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801a592:	3b01      	subs	r3, #1
 801a594:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801a596:	fb00 5003 	mla	r0, r0, r3, r5
 801a59a:	1400      	asrs	r0, r0, #16
 801a59c:	f53f ae6a 	bmi.w	801a274 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a5a0:	3901      	subs	r1, #1
 801a5a2:	4288      	cmp	r0, r1
 801a5a4:	f6bf ae66 	bge.w	801a274 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a5a8:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801a5aa:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801a5ac:	fb01 0303 	mla	r3, r1, r3, r0
 801a5b0:	141b      	asrs	r3, r3, #16
 801a5b2:	f53f ae5f 	bmi.w	801a274 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a5b6:	3a01      	subs	r2, #1
 801a5b8:	4293      	cmp	r3, r2
 801a5ba:	f6bf ae5b 	bge.w	801a274 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a5be:	9b08      	ldr	r3, [sp, #32]
 801a5c0:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801a5c4:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801a5c8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a5ca:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a5cc:	2b00      	cmp	r3, #0
 801a5ce:	f300 8082 	bgt.w	801a6d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801a5d2:	9b08      	ldr	r3, [sp, #32]
 801a5d4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a5d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a5da:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a5de:	9309      	str	r3, [sp, #36]	@ 0x24
 801a5e0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a5e2:	2b00      	cmp	r3, #0
 801a5e4:	f340 81ef 	ble.w	801a9c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801a5e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a5ec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a5ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a5f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a5f6:	eef0 6a62 	vmov.f32	s13, s5
 801a5fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a5fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a602:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a606:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801a60a:	eef0 6a43 	vmov.f32	s13, s6
 801a60e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a612:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801a616:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a61a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a61e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a622:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a626:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a62a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a62e:	ee12 2a90 	vmov	r2, s5
 801a632:	eef0 2a47 	vmov.f32	s5, s14
 801a636:	fb92 f3f3 	sdiv	r3, r2, r3
 801a63a:	ee13 2a10 	vmov	r2, s6
 801a63e:	9323      	str	r3, [sp, #140]	@ 0x8c
 801a640:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a642:	eeb0 3a67 	vmov.f32	s6, s15
 801a646:	fb92 f3f3 	sdiv	r3, r2, r3
 801a64a:	9324      	str	r3, [sp, #144]	@ 0x90
 801a64c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a64e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a650:	3b01      	subs	r3, #1
 801a652:	9311      	str	r3, [sp, #68]	@ 0x44
 801a654:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a656:	bf08      	it	eq
 801a658:	4613      	moveq	r3, r2
 801a65a:	9308      	str	r3, [sp, #32]
 801a65c:	e5df      	b.n	801a21e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a65e:	fb08 f505 	mul.w	r5, r8, r5
 801a662:	fb09 5303 	mla	r3, r9, r3, r5
 801a666:	e65f      	b.n	801a328 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801a668:	4681      	mov	r9, r0
 801a66a:	e686      	b.n	801a37a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a66c:	f1c1 0210 	rsb	r2, r1, #16
 801a670:	4341      	muls	r1, r0
 801a672:	fb09 1902 	mla	r9, r9, r2, r1
 801a676:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a67a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801a67e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a682:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a686:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801a68a:	ea42 0909 	orr.w	r9, r2, r9
 801a68e:	fa1f f289 	uxth.w	r2, r9
 801a692:	e71b      	b.n	801a4cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801a694:	803a      	strh	r2, [r7, #0]
 801a696:	e75d      	b.n	801a554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a698:	f115 0e01 	adds.w	lr, r5, #1
 801a69c:	f53f af5a 	bmi.w	801a554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a6a0:	4572      	cmp	r2, lr
 801a6a2:	f6ff af57 	blt.w	801a554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a6a6:	f110 0e01 	adds.w	lr, r0, #1
 801a6aa:	f53f af53 	bmi.w	801a554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a6ae:	4573      	cmp	r3, lr
 801a6b0:	f6ff af50 	blt.w	801a554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a6b4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a6b6:	b21b      	sxth	r3, r3
 801a6b8:	b212      	sxth	r2, r2
 801a6ba:	9502      	str	r5, [sp, #8]
 801a6bc:	9301      	str	r3, [sp, #4]
 801a6be:	9200      	str	r2, [sp, #0]
 801a6c0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801a6c4:	e9cd c405 	strd	ip, r4, [sp, #20]
 801a6c8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801a6cc:	4639      	mov	r1, r7
 801a6ce:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801a6d0:	f7ff fc02 	bl	8019ed8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801a6d4:	e73e      	b.n	801a554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a6d6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a6d8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a6dc:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a6de:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801a6e2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a6e4:	fa1f fc82 	uxth.w	ip, r2
 801a6e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a6ec:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a6ee:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801a6f2:	141f      	asrs	r7, r3, #16
 801a6f4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a6f6:	141b      	asrs	r3, r3, #16
 801a6f8:	fb01 3707 	mla	r7, r1, r7, r3
 801a6fc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a6fe:	eb03 0a07 	add.w	sl, r3, r7
 801a702:	f813 9007 	ldrb.w	r9, [r3, r7]
 801a706:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801a70a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a70e:	b29b      	uxth	r3, r3
 801a710:	2d00      	cmp	r5, #0
 801a712:	f000 813d 	beq.w	801a990 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801a716:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801a71a:	eb0a 0b01 	add.w	fp, sl, r1
 801a71e:	fa1f fa85 	uxth.w	sl, r5
 801a722:	940f      	str	r4, [sp, #60]	@ 0x3c
 801a724:	fb0a fc0c 	mul.w	ip, sl, ip
 801a728:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801a72c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801a730:	eba0 000c 	sub.w	r0, r0, ip
 801a734:	9410      	str	r4, [sp, #64]	@ 0x40
 801a736:	fa1f fa8a 	uxth.w	sl, sl
 801a73a:	b280      	uxth	r0, r0
 801a73c:	eba3 030a 	sub.w	r3, r3, sl
 801a740:	fb08 f000 	mul.w	r0, r8, r0
 801a744:	b29b      	uxth	r3, r3
 801a746:	fb09 0303 	mla	r3, r9, r3, r0
 801a74a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801a74c:	fb0a 3300 	mla	r3, sl, r0, r3
 801a750:	fb0c 3304 	mla	r3, ip, r4, r3
 801a754:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a758:	2b00      	cmp	r3, #0
 801a75a:	f000 810b 	beq.w	801a974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801a75e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801a760:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801a764:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a766:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801a76a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801a76e:	f000 8114 	beq.w	801a99a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801a772:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801a776:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801a77a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a77e:	fb0a fc0c 	mul.w	ip, sl, ip
 801a782:	fb09 f707 	mul.w	r7, r9, r7
 801a786:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801a78a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801a78e:	f107 0b20 	add.w	fp, r7, #32
 801a792:	44cc      	add	ip, r9
 801a794:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801a798:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a79c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a7a0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801a7a4:	ea4c 0909 	orr.w	r9, ip, r9
 801a7a8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801a7ac:	8847      	ldrh	r7, [r0, #2]
 801a7ae:	d019      	beq.n	801a7e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801a7b0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801a7b4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801a7b8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a7bc:	fb0a fc0c 	mul.w	ip, sl, ip
 801a7c0:	fb08 f807 	mul.w	r8, r8, r7
 801a7c4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801a7c8:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801a7cc:	f108 0b20 	add.w	fp, r8, #32
 801a7d0:	44bc      	add	ip, r7
 801a7d2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801a7d6:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a7da:	0a3f      	lsrs	r7, r7, #8
 801a7dc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a7e0:	ea4c 0707 	orr.w	r7, ip, r7
 801a7e4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801a7e8:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801a7ec:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801a7f0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a7f4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a7f8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a7fc:	ea4c 0909 	orr.w	r9, ip, r9
 801a800:	ea4a 0707 	orr.w	r7, sl, r7
 801a804:	2d00      	cmp	r5, #0
 801a806:	f000 80ca 	beq.w	801a99e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801a80a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801a80e:	3901      	subs	r1, #1
 801a810:	0049      	lsls	r1, r1, #1
 801a812:	3102      	adds	r1, #2
 801a814:	eb00 0c01 	add.w	ip, r0, r1
 801a818:	5a41      	ldrh	r1, [r0, r1]
 801a81a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801a81c:	28ff      	cmp	r0, #255	@ 0xff
 801a81e:	d019      	beq.n	801a854 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801a820:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801a824:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801a826:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a82a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a82e:	fb04 fa01 	mul.w	sl, r4, r1
 801a832:	fb08 f800 	mul.w	r8, r8, r0
 801a836:	f10a 0020 	add.w	r0, sl, #32
 801a83a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801a83e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a842:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801a846:	4441      	add	r1, r8
 801a848:	0a00      	lsrs	r0, r0, #8
 801a84a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801a84e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a852:	4301      	orrs	r1, r0
 801a854:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801a856:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801a85a:	2cff      	cmp	r4, #255	@ 0xff
 801a85c:	d01a      	beq.n	801a894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801a85e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801a862:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a866:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a86a:	fb04 fa00 	mul.w	sl, r4, r0
 801a86e:	fb08 f80c 	mul.w	r8, r8, ip
 801a872:	f10a 0c20 	add.w	ip, sl, #32
 801a876:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801a87a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a87e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801a882:	4440      	add	r0, r8
 801a884:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a888:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801a88c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801a890:	ea40 000c 	orr.w	r0, r0, ip
 801a894:	fb15 fc02 	smulbb	ip, r5, r2
 801a898:	f1c5 0810 	rsb	r8, r5, #16
 801a89c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a8a0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a8a4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801a8a8:	eba8 0802 	sub.w	r8, r8, r2
 801a8ac:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801a8b0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a8b4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801a8b8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a8bc:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801a8c0:	ea4a 0101 	orr.w	r1, sl, r1
 801a8c4:	437a      	muls	r2, r7
 801a8c6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801a8ca:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a8ce:	fb09 2208 	mla	r2, r9, r8, r2
 801a8d2:	ea4b 0000 	orr.w	r0, fp, r0
 801a8d6:	fb05 2201 	mla	r2, r5, r1, r2
 801a8da:	fb0c 2200 	mla	r2, ip, r0, r2
 801a8de:	0d57      	lsrs	r7, r2, #21
 801a8e0:	0952      	lsrs	r2, r2, #5
 801a8e2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a8e6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a8ea:	433a      	orrs	r2, r7
 801a8ec:	2bff      	cmp	r3, #255	@ 0xff
 801a8ee:	b292      	uxth	r2, r2
 801a8f0:	d102      	bne.n	801a8f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801a8f2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801a8f4:	29ff      	cmp	r1, #255	@ 0xff
 801a8f6:	d063      	beq.n	801a9c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801a8f8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801a8fa:	1215      	asrs	r5, r2, #8
 801a8fc:	f8be 1000 	ldrh.w	r1, [lr]
 801a900:	4343      	muls	r3, r0
 801a902:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a904:	10cf      	asrs	r7, r1, #3
 801a906:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a90a:	1c58      	adds	r0, r3, #1
 801a90c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a910:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801a914:	1208      	asrs	r0, r1, #8
 801a916:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801a91a:	00c9      	lsls	r1, r1, #3
 801a91c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a920:	b2db      	uxtb	r3, r3
 801a922:	b2c9      	uxtb	r1, r1
 801a924:	fb10 f003 	smulbb	r0, r0, r3
 801a928:	fb11 f103 	smulbb	r1, r1, r3
 801a92c:	fb05 0504 	mla	r5, r5, r4, r0
 801a930:	10d0      	asrs	r0, r2, #3
 801a932:	fb17 f703 	smulbb	r7, r7, r3
 801a936:	00d2      	lsls	r2, r2, #3
 801a938:	b2ad      	uxth	r5, r5
 801a93a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801a93e:	b2d2      	uxtb	r2, r2
 801a940:	fb00 7004 	mla	r0, r0, r4, r7
 801a944:	1c6b      	adds	r3, r5, #1
 801a946:	fb02 1204 	mla	r2, r2, r4, r1
 801a94a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a94e:	b292      	uxth	r2, r2
 801a950:	b280      	uxth	r0, r0
 801a952:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a956:	1c57      	adds	r7, r2, #1
 801a958:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a95c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a960:	433d      	orrs	r5, r7
 801a962:	1c47      	adds	r7, r0, #1
 801a964:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801a968:	097f      	lsrs	r7, r7, #5
 801a96a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a96e:	433d      	orrs	r5, r7
 801a970:	f8ae 5000 	strh.w	r5, [lr]
 801a974:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a976:	f10e 0e02 	add.w	lr, lr, #2
 801a97a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a97c:	4413      	add	r3, r2
 801a97e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a980:	9321      	str	r3, [sp, #132]	@ 0x84
 801a982:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a984:	441a      	add	r2, r3
 801a986:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a988:	3b01      	subs	r3, #1
 801a98a:	9222      	str	r2, [sp, #136]	@ 0x88
 801a98c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a98e:	e61c      	b.n	801a5ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a990:	fb08 f000 	mul.w	r0, r8, r0
 801a994:	fb09 0303 	mla	r3, r9, r3, r0
 801a998:	e6dc      	b.n	801a754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801a99a:	46b9      	mov	r9, r7
 801a99c:	e704      	b.n	801a7a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801a99e:	f1c2 0110 	rsb	r1, r2, #16
 801a9a2:	437a      	muls	r2, r7
 801a9a4:	fb09 2901 	mla	r9, r9, r1, r2
 801a9a8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a9ac:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801a9b0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801a9b4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a9b8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a9bc:	4302      	orrs	r2, r0
 801a9be:	e795      	b.n	801a8ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801a9c0:	f8ae 2000 	strh.w	r2, [lr]
 801a9c4:	e7d6      	b.n	801a974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801a9c6:	b017      	add	sp, #92	@ 0x5c
 801a9c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a9cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a9cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9d0:	b085      	sub	sp, #20
 801a9d2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801a9d6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801a9da:	2800      	cmp	r0, #0
 801a9dc:	9103      	str	r1, [sp, #12]
 801a9de:	fb00 7406 	mla	r4, r0, r6, r7
 801a9e2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801a9e6:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801a9ea:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801a9ee:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801a9f2:	eb02 0904 	add.w	r9, r2, r4
 801a9f6:	9501      	str	r5, [sp, #4]
 801a9f8:	f2c0 8141 	blt.w	801ac7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801a9fc:	4583      	cmp	fp, r0
 801a9fe:	f340 813e 	ble.w	801ac7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801aa02:	2f00      	cmp	r7, #0
 801aa04:	f2c0 8137 	blt.w	801ac76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801aa08:	42be      	cmp	r6, r7
 801aa0a:	f340 8134 	ble.w	801ac76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801aa0e:	f812 c004 	ldrb.w	ip, [r2, r4]
 801aa12:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801aa16:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801aa1a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801aa1e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801aa22:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801aa26:	4355      	muls	r5, r2
 801aa28:	fb0c f203 	mul.w	r2, ip, r3
 801aa2c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801aa30:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801aa34:	441d      	add	r5, r3
 801aa36:	f102 0320 	add.w	r3, r2, #32
 801aa3a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801aa3e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801aa42:	0a1b      	lsrs	r3, r3, #8
 801aa44:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801aa48:	431c      	orrs	r4, r3
 801aa4a:	1c7b      	adds	r3, r7, #1
 801aa4c:	f100 811c 	bmi.w	801ac88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801aa50:	429e      	cmp	r6, r3
 801aa52:	f340 8119 	ble.w	801ac88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801aa56:	2900      	cmp	r1, #0
 801aa58:	f000 8119 	beq.w	801ac8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801aa5c:	9a01      	ldr	r2, [sp, #4]
 801aa5e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801aa62:	8855      	ldrh	r5, [r2, #2]
 801aa64:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801aa68:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801aa6c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801aa70:	fb08 f802 	mul.w	r8, r8, r2
 801aa74:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801aa78:	435d      	muls	r5, r3
 801aa7a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801aa7e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801aa82:	44d0      	add	r8, sl
 801aa84:	f105 0a20 	add.w	sl, r5, #32
 801aa88:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801aa8c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801aa90:	0a2d      	lsrs	r5, r5, #8
 801aa92:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801aa96:	432a      	orrs	r2, r5
 801aa98:	3001      	adds	r0, #1
 801aa9a:	f100 80fe 	bmi.w	801ac9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801aa9e:	4583      	cmp	fp, r0
 801aaa0:	f340 80fb 	ble.w	801ac9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801aaa4:	f1be 0f00 	cmp.w	lr, #0
 801aaa8:	f000 80fc 	beq.w	801aca4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801aaac:	2f00      	cmp	r7, #0
 801aaae:	f2c0 80f1 	blt.w	801ac94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801aab2:	42be      	cmp	r6, r7
 801aab4:	f340 80ee 	ble.w	801ac94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801aab8:	9801      	ldr	r0, [sp, #4]
 801aaba:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801aabe:	f819 5006 	ldrb.w	r5, [r9, r6]
 801aac2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801aac6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801aaca:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801aace:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801aad2:	fb0a fa00 	mul.w	sl, sl, r0
 801aad6:	fb05 f808 	mul.w	r8, r5, r8
 801aada:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801aade:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801aae2:	4482      	add	sl, r0
 801aae4:	f108 0020 	add.w	r0, r8, #32
 801aae8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801aaec:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801aaf0:	0a00      	lsrs	r0, r0, #8
 801aaf2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801aaf6:	ea4b 0b00 	orr.w	fp, fp, r0
 801aafa:	3701      	adds	r7, #1
 801aafc:	f100 80d7 	bmi.w	801acae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ab00:	42be      	cmp	r6, r7
 801ab02:	f340 80d4 	ble.w	801acae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ab06:	2900      	cmp	r1, #0
 801ab08:	f000 80d4 	beq.w	801acb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801ab0c:	3601      	adds	r6, #1
 801ab0e:	9801      	ldr	r0, [sp, #4]
 801ab10:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ab14:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801ab18:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801ab1c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801ab20:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ab24:	fb09 f906 	mul.w	r9, r9, r6
 801ab28:	fb07 f800 	mul.w	r8, r7, r0
 801ab2c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801ab30:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801ab34:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801ab38:	44d1      	add	r9, sl
 801ab3a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801ab3e:	f108 0020 	add.w	r0, r8, #32
 801ab42:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ab46:	0a00      	lsrs	r0, r0, #8
 801ab48:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ab4c:	4330      	orrs	r0, r6
 801ab4e:	b28e      	uxth	r6, r1
 801ab50:	fa1f f98e 	uxth.w	r9, lr
 801ab54:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ab58:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801ab5c:	fb06 f809 	mul.w	r8, r6, r9
 801ab60:	0136      	lsls	r6, r6, #4
 801ab62:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ab66:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ab6a:	9601      	str	r6, [sp, #4]
 801ab6c:	ea4a 0404 	orr.w	r4, sl, r4
 801ab70:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ab74:	fa1f f689 	uxth.w	r6, r9
 801ab78:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ab7c:	fb11 f90e 	smulbb	r9, r1, lr
 801ab80:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ab84:	9602      	str	r6, [sp, #8]
 801ab86:	4626      	mov	r6, r4
 801ab88:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ab8c:	f1ce 0410 	rsb	r4, lr, #16
 801ab90:	ea4a 0202 	orr.w	r2, sl, r2
 801ab94:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ab98:	1a64      	subs	r4, r4, r1
 801ab9a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ab9e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801aba2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801aba6:	434a      	muls	r2, r1
 801aba8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801abac:	ea4a 0000 	orr.w	r0, sl, r0
 801abb0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801abb4:	fb04 2406 	mla	r4, r4, r6, r2
 801abb8:	9903      	ldr	r1, [sp, #12]
 801abba:	fb09 4200 	mla	r2, r9, r0, r4
 801abbe:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801abc2:	9801      	ldr	r0, [sp, #4]
 801abc4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801abc8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801abcc:	8809      	ldrh	r1, [r1, #0]
 801abce:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801abd2:	ea44 0b0b 	orr.w	fp, r4, fp
 801abd6:	9c02      	ldr	r4, [sp, #8]
 801abd8:	1b00      	subs	r0, r0, r4
 801abda:	9c01      	ldr	r4, [sp, #4]
 801abdc:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801abe0:	eba4 0608 	sub.w	r6, r4, r8
 801abe4:	b280      	uxth	r0, r0
 801abe6:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801abea:	b2b6      	uxth	r6, r6
 801abec:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801abf0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801abf4:	4373      	muls	r3, r6
 801abf6:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801abfa:	fb0c 3300 	mla	r3, ip, r0, r3
 801abfe:	9802      	ldr	r0, [sp, #8]
 801ac00:	ea42 0e0e 	orr.w	lr, r2, lr
 801ac04:	fb00 3505 	mla	r5, r0, r5, r3
 801ac08:	120b      	asrs	r3, r1, #8
 801ac0a:	10c8      	asrs	r0, r1, #3
 801ac0c:	fb08 5707 	mla	r7, r8, r7, r5
 801ac10:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801ac14:	00c9      	lsls	r1, r1, #3
 801ac16:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ac1a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801ac1e:	fa1f f28e 	uxth.w	r2, lr
 801ac22:	b2c9      	uxtb	r1, r1
 801ac24:	b2ff      	uxtb	r7, r7
 801ac26:	437b      	muls	r3, r7
 801ac28:	4378      	muls	r0, r7
 801ac2a:	434f      	muls	r7, r1
 801ac2c:	1c59      	adds	r1, r3, #1
 801ac2e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ac32:	1213      	asrs	r3, r2, #8
 801ac34:	f023 0307 	bic.w	r3, r3, #7
 801ac38:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ac3c:	1c41      	adds	r1, r0, #1
 801ac3e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ac42:	10d1      	asrs	r1, r2, #3
 801ac44:	021b      	lsls	r3, r3, #8
 801ac46:	f021 0103 	bic.w	r1, r1, #3
 801ac4a:	00d2      	lsls	r2, r2, #3
 801ac4c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801ac50:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ac54:	00c9      	lsls	r1, r1, #3
 801ac56:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ac5a:	430b      	orrs	r3, r1
 801ac5c:	1c79      	adds	r1, r7, #1
 801ac5e:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801ac62:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801ac66:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ac6a:	431a      	orrs	r2, r3
 801ac6c:	9b03      	ldr	r3, [sp, #12]
 801ac6e:	801a      	strh	r2, [r3, #0]
 801ac70:	b005      	add	sp, #20
 801ac72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac76:	f04f 0c00 	mov.w	ip, #0
 801ac7a:	4664      	mov	r4, ip
 801ac7c:	e6e5      	b.n	801aa4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801ac7e:	2300      	movs	r3, #0
 801ac80:	469c      	mov	ip, r3
 801ac82:	461a      	mov	r2, r3
 801ac84:	461c      	mov	r4, r3
 801ac86:	e707      	b.n	801aa98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ac88:	2300      	movs	r3, #0
 801ac8a:	461a      	mov	r2, r3
 801ac8c:	e704      	b.n	801aa98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ac8e:	460b      	mov	r3, r1
 801ac90:	460a      	mov	r2, r1
 801ac92:	e701      	b.n	801aa98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ac94:	2500      	movs	r5, #0
 801ac96:	46ab      	mov	fp, r5
 801ac98:	e72f      	b.n	801aafa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801ac9a:	2700      	movs	r7, #0
 801ac9c:	463d      	mov	r5, r7
 801ac9e:	4638      	mov	r0, r7
 801aca0:	46bb      	mov	fp, r7
 801aca2:	e754      	b.n	801ab4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801aca4:	4677      	mov	r7, lr
 801aca6:	4675      	mov	r5, lr
 801aca8:	4670      	mov	r0, lr
 801acaa:	46f3      	mov	fp, lr
 801acac:	e74f      	b.n	801ab4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801acae:	2700      	movs	r7, #0
 801acb0:	4638      	mov	r0, r7
 801acb2:	e74c      	b.n	801ab4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801acb4:	460f      	mov	r7, r1
 801acb6:	4608      	mov	r0, r1
 801acb8:	e749      	b.n	801ab4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801acbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801acbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acc0:	b093      	sub	sp, #76	@ 0x4c
 801acc2:	9210      	str	r2, [sp, #64]	@ 0x40
 801acc4:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801acc6:	9011      	str	r0, [sp, #68]	@ 0x44
 801acc8:	910e      	str	r1, [sp, #56]	@ 0x38
 801acca:	6850      	ldr	r0, [r2, #4]
 801accc:	9306      	str	r3, [sp, #24]
 801acce:	6812      	ldr	r2, [r2, #0]
 801acd0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801acd4:	fb00 1303 	mla	r3, r0, r3, r1
 801acd8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801acdc:	9307      	str	r3, [sp, #28]
 801acde:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ace0:	681b      	ldr	r3, [r3, #0]
 801ace2:	9308      	str	r3, [sp, #32]
 801ace4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ace6:	685b      	ldr	r3, [r3, #4]
 801ace8:	9309      	str	r3, [sp, #36]	@ 0x24
 801acea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801acec:	2b00      	cmp	r3, #0
 801acee:	dc03      	bgt.n	801acf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801acf0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801acf2:	2b00      	cmp	r3, #0
 801acf4:	f340 83b6 	ble.w	801b464 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801acf8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801acfa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801acfe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ad02:	1e48      	subs	r0, r1, #1
 801ad04:	1e55      	subs	r5, r2, #1
 801ad06:	9b06      	ldr	r3, [sp, #24]
 801ad08:	2b00      	cmp	r3, #0
 801ad0a:	f340 8165 	ble.w	801afd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ad0e:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801ad10:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ad12:	1436      	asrs	r6, r6, #16
 801ad14:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ad18:	d406      	bmi.n	801ad28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ad1a:	4286      	cmp	r6, r0
 801ad1c:	da04      	bge.n	801ad28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ad1e:	2b00      	cmp	r3, #0
 801ad20:	db02      	blt.n	801ad28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ad22:	42ab      	cmp	r3, r5
 801ad24:	f2c0 8159 	blt.w	801afda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801ad28:	3601      	adds	r6, #1
 801ad2a:	f100 8146 	bmi.w	801afba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801ad2e:	42b1      	cmp	r1, r6
 801ad30:	f2c0 8143 	blt.w	801afba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801ad34:	3301      	adds	r3, #1
 801ad36:	f100 8140 	bmi.w	801afba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801ad3a:	429a      	cmp	r2, r3
 801ad3c:	f2c0 813d 	blt.w	801afba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801ad40:	9b06      	ldr	r3, [sp, #24]
 801ad42:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801ad46:	9f07      	ldr	r7, [sp, #28]
 801ad48:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ad4a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ad4c:	2b00      	cmp	r3, #0
 801ad4e:	f340 8166 	ble.w	801b01e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ad52:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ad54:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801ad56:	1418      	asrs	r0, r3, #16
 801ad58:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ad5a:	142d      	asrs	r5, r5, #16
 801ad5c:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801ad60:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ad62:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801ad66:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ad68:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801ad6c:	f100 81f0 	bmi.w	801b150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ad70:	f102 3eff 	add.w	lr, r2, #4294967295
 801ad74:	4575      	cmp	r5, lr
 801ad76:	f280 81eb 	bge.w	801b150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ad7a:	2800      	cmp	r0, #0
 801ad7c:	f2c0 81e8 	blt.w	801b150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ad80:	f103 3eff 	add.w	lr, r3, #4294967295
 801ad84:	4570      	cmp	r0, lr
 801ad86:	f280 81e3 	bge.w	801b150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ad8a:	b212      	sxth	r2, r2
 801ad8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ad8e:	fa1f fe81 	uxth.w	lr, r1
 801ad92:	fb00 5002 	mla	r0, r0, r2, r5
 801ad96:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801ad9a:	eb03 0a00 	add.w	sl, r3, r0
 801ad9e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801ada2:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801ada6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801adaa:	b29b      	uxth	r3, r3
 801adac:	f1bc 0f00 	cmp.w	ip, #0
 801adb0:	f000 817b 	beq.w	801b0aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801adb4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801adb8:	eb0a 0b02 	add.w	fp, sl, r2
 801adbc:	fa1f fa8c 	uxth.w	sl, ip
 801adc0:	940a      	str	r4, [sp, #40]	@ 0x28
 801adc2:	fb0a fe0e 	mul.w	lr, sl, lr
 801adc6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801adca:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801adce:	eba5 050e 	sub.w	r5, r5, lr
 801add2:	940b      	str	r4, [sp, #44]	@ 0x2c
 801add4:	fa1f fa8a 	uxth.w	sl, sl
 801add8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801adda:	b2ad      	uxth	r5, r5
 801addc:	eba3 030a 	sub.w	r3, r3, sl
 801ade0:	fb08 f505 	mul.w	r5, r8, r5
 801ade4:	b29b      	uxth	r3, r3
 801ade6:	fb09 5303 	mla	r3, r9, r3, r5
 801adea:	fb0a 3304 	mla	r3, sl, r4, r3
 801adee:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801adf0:	fb0e 3304 	mla	r3, lr, r4, r3
 801adf4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801adf8:	2b00      	cmp	r3, #0
 801adfa:	f000 80d1 	beq.w	801afa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801adfe:	9c08      	ldr	r4, [sp, #32]
 801ae00:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801ae04:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801ae08:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801ae0c:	f000 8152 	beq.w	801b0b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ae10:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801ae14:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ae18:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ae1c:	fb0a fe0e 	mul.w	lr, sl, lr
 801ae20:	fb09 f000 	mul.w	r0, r9, r0
 801ae24:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801ae28:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801ae2c:	f100 0b20 	add.w	fp, r0, #32
 801ae30:	44ce      	add	lr, r9
 801ae32:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801ae36:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ae3a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ae3e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801ae42:	ea4e 0909 	orr.w	r9, lr, r9
 801ae46:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801ae4a:	8868      	ldrh	r0, [r5, #2]
 801ae4c:	d019      	beq.n	801ae82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ae4e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801ae52:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ae56:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ae5a:	fb0a fe0e 	mul.w	lr, sl, lr
 801ae5e:	fb08 f800 	mul.w	r8, r8, r0
 801ae62:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801ae66:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801ae6a:	f108 0b20 	add.w	fp, r8, #32
 801ae6e:	4486      	add	lr, r0
 801ae70:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801ae74:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ae78:	0a00      	lsrs	r0, r0, #8
 801ae7a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ae7e:	ea4e 0000 	orr.w	r0, lr, r0
 801ae82:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801ae86:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ae8a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ae8e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ae92:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801ae96:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ae9a:	ea4e 0909 	orr.w	r9, lr, r9
 801ae9e:	ea4a 0000 	orr.w	r0, sl, r0
 801aea2:	f1bc 0f00 	cmp.w	ip, #0
 801aea6:	f000 8107 	beq.w	801b0b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801aeaa:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801aeae:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801aeb0:	3a01      	subs	r2, #1
 801aeb2:	2cff      	cmp	r4, #255	@ 0xff
 801aeb4:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801aeb8:	f102 0202 	add.w	r2, r2, #2
 801aebc:	eb05 0e02 	add.w	lr, r5, r2
 801aec0:	5aaa      	ldrh	r2, [r5, r2]
 801aec2:	d018      	beq.n	801aef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801aec4:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801aec8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801aecc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801aed0:	fb04 fa02 	mul.w	sl, r4, r2
 801aed4:	fb08 f805 	mul.w	r8, r8, r5
 801aed8:	f10a 0520 	add.w	r5, sl, #32
 801aedc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801aee0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801aee4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801aee8:	4442      	add	r2, r8
 801aeea:	0a2d      	lsrs	r5, r5, #8
 801aeec:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801aef0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801aef4:	432a      	orrs	r2, r5
 801aef6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801aef8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801aefc:	2cff      	cmp	r4, #255	@ 0xff
 801aefe:	d01a      	beq.n	801af36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801af00:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801af04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801af08:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801af0c:	fb04 fa05 	mul.w	sl, r4, r5
 801af10:	fb08 f80e 	mul.w	r8, r8, lr
 801af14:	f10a 0e20 	add.w	lr, sl, #32
 801af18:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801af1c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801af20:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801af24:	4445      	add	r5, r8
 801af26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801af2a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801af2e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801af32:	ea45 050e 	orr.w	r5, r5, lr
 801af36:	fb1c fe01 	smulbb	lr, ip, r1
 801af3a:	f1cc 0810 	rsb	r8, ip, #16
 801af3e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801af42:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801af46:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801af4a:	eba8 0801 	sub.w	r8, r8, r1
 801af4e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801af52:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801af56:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801af5a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801af5e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801af62:	ea4a 0202 	orr.w	r2, sl, r2
 801af66:	4341      	muls	r1, r0
 801af68:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801af6c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801af70:	fb09 1108 	mla	r1, r9, r8, r1
 801af74:	ea4b 0505 	orr.w	r5, fp, r5
 801af78:	fb0c 1102 	mla	r1, ip, r2, r1
 801af7c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801af80:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801af84:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801af88:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801af8c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801af90:	ea42 0e0e 	orr.w	lr, r2, lr
 801af94:	fa1f f28e 	uxth.w	r2, lr
 801af98:	2bff      	cmp	r3, #255	@ 0xff
 801af9a:	f040 80a1 	bne.w	801b0e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801af9e:	803a      	strh	r2, [r7, #0]
 801afa0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801afa2:	3702      	adds	r7, #2
 801afa4:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801afa6:	4413      	add	r3, r2
 801afa8:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801afaa:	931d      	str	r3, [sp, #116]	@ 0x74
 801afac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801afae:	441a      	add	r2, r3
 801afb0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801afb2:	3b01      	subs	r3, #1
 801afb4:	921e      	str	r2, [sp, #120]	@ 0x78
 801afb6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801afb8:	e6c7      	b.n	801ad4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801afba:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801afbc:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801afbe:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801afc0:	4433      	add	r3, r6
 801afc2:	931d      	str	r3, [sp, #116]	@ 0x74
 801afc4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801afc6:	441c      	add	r4, r3
 801afc8:	9b06      	ldr	r3, [sp, #24]
 801afca:	3b01      	subs	r3, #1
 801afcc:	941e      	str	r4, [sp, #120]	@ 0x78
 801afce:	9306      	str	r3, [sp, #24]
 801afd0:	9b07      	ldr	r3, [sp, #28]
 801afd2:	3302      	adds	r3, #2
 801afd4:	9307      	str	r3, [sp, #28]
 801afd6:	e696      	b.n	801ad06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801afd8:	d028      	beq.n	801b02c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801afda:	9b06      	ldr	r3, [sp, #24]
 801afdc:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801afde:	3b01      	subs	r3, #1
 801afe0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801afe2:	fb00 5003 	mla	r0, r0, r3, r5
 801afe6:	1400      	asrs	r0, r0, #16
 801afe8:	f53f aeaa 	bmi.w	801ad40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801afec:	3901      	subs	r1, #1
 801afee:	4288      	cmp	r0, r1
 801aff0:	f6bf aea6 	bge.w	801ad40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801aff4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801aff6:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801aff8:	fb01 0303 	mla	r3, r1, r3, r0
 801affc:	141b      	asrs	r3, r3, #16
 801affe:	f53f ae9f 	bmi.w	801ad40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b002:	3a01      	subs	r2, #1
 801b004:	4293      	cmp	r3, r2
 801b006:	f6bf ae9b 	bge.w	801ad40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b00a:	9b06      	ldr	r3, [sp, #24]
 801b00c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801b010:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801b014:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b016:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b018:	2b00      	cmp	r3, #0
 801b01a:	f300 80b6 	bgt.w	801b18a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801b01e:	9b06      	ldr	r3, [sp, #24]
 801b020:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b024:	9b07      	ldr	r3, [sp, #28]
 801b026:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b02a:	9307      	str	r3, [sp, #28]
 801b02c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b02e:	2b00      	cmp	r3, #0
 801b030:	f340 8218 	ble.w	801b464 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801b034:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b038:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b03a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b03e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b042:	eef0 6a62 	vmov.f32	s13, s5
 801b046:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b04a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b04e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b052:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801b056:	eef0 6a43 	vmov.f32	s13, s6
 801b05a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b05e:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801b062:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b066:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b06a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b06e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b072:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b076:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b07a:	ee12 2a90 	vmov	r2, s5
 801b07e:	eef0 2a47 	vmov.f32	s5, s14
 801b082:	fb92 f3f3 	sdiv	r3, r2, r3
 801b086:	ee13 2a10 	vmov	r2, s6
 801b08a:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b08c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b08e:	eeb0 3a67 	vmov.f32	s6, s15
 801b092:	fb92 f3f3 	sdiv	r3, r2, r3
 801b096:	9320      	str	r3, [sp, #128]	@ 0x80
 801b098:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b09a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b09c:	3b01      	subs	r3, #1
 801b09e:	930e      	str	r3, [sp, #56]	@ 0x38
 801b0a0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b0a2:	bf08      	it	eq
 801b0a4:	4613      	moveq	r3, r2
 801b0a6:	9306      	str	r3, [sp, #24]
 801b0a8:	e61f      	b.n	801acea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801b0aa:	fb08 f505 	mul.w	r5, r8, r5
 801b0ae:	fb09 5303 	mla	r3, r9, r3, r5
 801b0b2:	e69f      	b.n	801adf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801b0b4:	4681      	mov	r9, r0
 801b0b6:	e6c6      	b.n	801ae46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801b0b8:	f1c1 0210 	rsb	r2, r1, #16
 801b0bc:	4341      	muls	r1, r0
 801b0be:	fb09 1902 	mla	r9, r9, r2, r1
 801b0c2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b0c6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801b0ca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b0ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b0d2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801b0d6:	ea42 0909 	orr.w	r9, r2, r9
 801b0da:	fa1f f289 	uxth.w	r2, r9
 801b0de:	e75b      	b.n	801af98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 801b0e0:	f8b7 c000 	ldrh.w	ip, [r7]
 801b0e4:	43db      	mvns	r3, r3
 801b0e6:	ea4f 202c 	mov.w	r0, ip, asr #8
 801b0ea:	fa5f fe83 	uxtb.w	lr, r3
 801b0ee:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b0f2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801b0f6:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801b0fa:	fb00 f00e 	mul.w	r0, r0, lr
 801b0fe:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b102:	b2db      	uxtb	r3, r3
 801b104:	1c41      	adds	r1, r0, #1
 801b106:	fb05 f50e 	mul.w	r5, r5, lr
 801b10a:	fb03 f30e 	mul.w	r3, r3, lr
 801b10e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801b112:	1211      	asrs	r1, r2, #8
 801b114:	f021 0107 	bic.w	r1, r1, #7
 801b118:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801b11c:	48d3      	ldr	r0, [pc, #844]	@ (801b46c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801b11e:	b2c9      	uxtb	r1, r1
 801b120:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801b124:	1c69      	adds	r1, r5, #1
 801b126:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801b12a:	10d1      	asrs	r1, r2, #3
 801b12c:	00d2      	lsls	r2, r2, #3
 801b12e:	f021 0103 	bic.w	r1, r1, #3
 801b132:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801b136:	00c9      	lsls	r1, r1, #3
 801b138:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b13c:	4301      	orrs	r1, r0
 801b13e:	1c58      	adds	r0, r3, #1
 801b140:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b144:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b148:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b14c:	430a      	orrs	r2, r1
 801b14e:	e726      	b.n	801af9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801b150:	f115 0e01 	adds.w	lr, r5, #1
 801b154:	f53f af24 	bmi.w	801afa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801b158:	4572      	cmp	r2, lr
 801b15a:	f6ff af21 	blt.w	801afa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801b15e:	f110 0e01 	adds.w	lr, r0, #1
 801b162:	f53f af1d 	bmi.w	801afa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801b166:	4573      	cmp	r3, lr
 801b168:	f6ff af1a 	blt.w	801afa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801b16c:	b21b      	sxth	r3, r3
 801b16e:	b212      	sxth	r2, r2
 801b170:	9301      	str	r3, [sp, #4]
 801b172:	9200      	str	r2, [sp, #0]
 801b174:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801b178:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801b17c:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801b180:	4639      	mov	r1, r7
 801b182:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b184:	f7ff fc22 	bl	801a9cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801b188:	e70a      	b.n	801afa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801b18a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801b18c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b190:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801b192:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801b196:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b198:	fa1f fc82 	uxth.w	ip, r2
 801b19c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b1a0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801b1a2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801b1a6:	141f      	asrs	r7, r3, #16
 801b1a8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801b1aa:	141b      	asrs	r3, r3, #16
 801b1ac:	fb01 3707 	mla	r7, r1, r7, r3
 801b1b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b1b2:	eb03 0a07 	add.w	sl, r3, r7
 801b1b6:	f813 9007 	ldrb.w	r9, [r3, r7]
 801b1ba:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801b1be:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b1c2:	b29b      	uxth	r3, r3
 801b1c4:	2d00      	cmp	r5, #0
 801b1c6:	f000 80fe 	beq.w	801b3c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801b1ca:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801b1ce:	eb0a 0b01 	add.w	fp, sl, r1
 801b1d2:	fa1f fa85 	uxth.w	sl, r5
 801b1d6:	940c      	str	r4, [sp, #48]	@ 0x30
 801b1d8:	fb0a fc0c 	mul.w	ip, sl, ip
 801b1dc:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b1e0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801b1e4:	eba0 000c 	sub.w	r0, r0, ip
 801b1e8:	940d      	str	r4, [sp, #52]	@ 0x34
 801b1ea:	fa1f fa8a 	uxth.w	sl, sl
 801b1ee:	b280      	uxth	r0, r0
 801b1f0:	eba3 030a 	sub.w	r3, r3, sl
 801b1f4:	fb08 f000 	mul.w	r0, r8, r0
 801b1f8:	b29b      	uxth	r3, r3
 801b1fa:	fb09 0303 	mla	r3, r9, r3, r0
 801b1fe:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801b200:	fb0a 3300 	mla	r3, sl, r0, r3
 801b204:	fb0c 3304 	mla	r3, ip, r4, r3
 801b208:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b20c:	2b00      	cmp	r3, #0
 801b20e:	f000 80cc 	beq.w	801b3aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801b212:	9808      	ldr	r0, [sp, #32]
 801b214:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801b218:	9c08      	ldr	r4, [sp, #32]
 801b21a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801b21e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801b222:	f000 80d5 	beq.w	801b3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801b226:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801b22a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b22e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b232:	fb0a fc0c 	mul.w	ip, sl, ip
 801b236:	fb09 f707 	mul.w	r7, r9, r7
 801b23a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801b23e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801b242:	f107 0b20 	add.w	fp, r7, #32
 801b246:	44cc      	add	ip, r9
 801b248:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801b24c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b250:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b254:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801b258:	ea4c 0909 	orr.w	r9, ip, r9
 801b25c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801b260:	8847      	ldrh	r7, [r0, #2]
 801b262:	d019      	beq.n	801b298 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 801b264:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801b268:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b26c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b270:	fb0a fc0c 	mul.w	ip, sl, ip
 801b274:	fb08 f807 	mul.w	r8, r8, r7
 801b278:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801b27c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801b280:	f108 0b20 	add.w	fp, r8, #32
 801b284:	44bc      	add	ip, r7
 801b286:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801b28a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b28e:	0a3f      	lsrs	r7, r7, #8
 801b290:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b294:	ea4c 0707 	orr.w	r7, ip, r7
 801b298:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801b29c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801b2a0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801b2a4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801b2a8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b2ac:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b2b0:	ea4c 0909 	orr.w	r9, ip, r9
 801b2b4:	ea4a 0707 	orr.w	r7, sl, r7
 801b2b8:	2d00      	cmp	r5, #0
 801b2ba:	f000 808b 	beq.w	801b3d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801b2be:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801b2c2:	3901      	subs	r1, #1
 801b2c4:	0049      	lsls	r1, r1, #1
 801b2c6:	3102      	adds	r1, #2
 801b2c8:	eb00 0c01 	add.w	ip, r0, r1
 801b2cc:	5a41      	ldrh	r1, [r0, r1]
 801b2ce:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801b2d0:	28ff      	cmp	r0, #255	@ 0xff
 801b2d2:	d019      	beq.n	801b308 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 801b2d4:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801b2d8:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801b2da:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b2de:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b2e2:	fb04 fa01 	mul.w	sl, r4, r1
 801b2e6:	fb08 f800 	mul.w	r8, r8, r0
 801b2ea:	f10a 0020 	add.w	r0, sl, #32
 801b2ee:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801b2f2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801b2f6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801b2fa:	4441      	add	r1, r8
 801b2fc:	0a00      	lsrs	r0, r0, #8
 801b2fe:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801b302:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b306:	4301      	orrs	r1, r0
 801b308:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b30a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801b30e:	2cff      	cmp	r4, #255	@ 0xff
 801b310:	d01a      	beq.n	801b348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 801b312:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801b316:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b31a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b31e:	fb04 fa00 	mul.w	sl, r4, r0
 801b322:	fb08 f80c 	mul.w	r8, r8, ip
 801b326:	f10a 0c20 	add.w	ip, sl, #32
 801b32a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801b32e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801b332:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801b336:	4440      	add	r0, r8
 801b338:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b33c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801b340:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801b344:	ea40 000c 	orr.w	r0, r0, ip
 801b348:	fb15 fc02 	smulbb	ip, r5, r2
 801b34c:	f1c5 0810 	rsb	r8, r5, #16
 801b350:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801b354:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801b358:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801b35c:	eba8 0802 	sub.w	r8, r8, r2
 801b360:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801b364:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b368:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801b36c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b370:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801b374:	ea4a 0101 	orr.w	r1, sl, r1
 801b378:	437a      	muls	r2, r7
 801b37a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801b37e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b382:	fb09 2208 	mla	r2, r9, r8, r2
 801b386:	ea4b 0000 	orr.w	r0, fp, r0
 801b38a:	fb05 2201 	mla	r2, r5, r1, r2
 801b38e:	fb0c 2200 	mla	r2, ip, r0, r2
 801b392:	0d57      	lsrs	r7, r2, #21
 801b394:	0952      	lsrs	r2, r2, #5
 801b396:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b39a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b39e:	433a      	orrs	r2, r7
 801b3a0:	2bff      	cmp	r3, #255	@ 0xff
 801b3a2:	b292      	uxth	r2, r2
 801b3a4:	d127      	bne.n	801b3f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 801b3a6:	f8ae 2000 	strh.w	r2, [lr]
 801b3aa:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801b3ac:	f10e 0e02 	add.w	lr, lr, #2
 801b3b0:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801b3b2:	4413      	add	r3, r2
 801b3b4:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801b3b6:	931d      	str	r3, [sp, #116]	@ 0x74
 801b3b8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b3ba:	441a      	add	r2, r3
 801b3bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b3be:	3b01      	subs	r3, #1
 801b3c0:	921e      	str	r2, [sp, #120]	@ 0x78
 801b3c2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b3c4:	e627      	b.n	801b016 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b3c6:	fb08 f000 	mul.w	r0, r8, r0
 801b3ca:	fb09 0303 	mla	r3, r9, r3, r0
 801b3ce:	e71b      	b.n	801b208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 801b3d0:	46b9      	mov	r9, r7
 801b3d2:	e743      	b.n	801b25c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 801b3d4:	f1c2 0110 	rsb	r1, r2, #16
 801b3d8:	437a      	muls	r2, r7
 801b3da:	fb09 2901 	mla	r9, r9, r1, r2
 801b3de:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b3e2:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801b3e6:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801b3ea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b3ee:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b3f2:	4302      	orrs	r2, r0
 801b3f4:	e7d4      	b.n	801b3a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 801b3f6:	f8be 7000 	ldrh.w	r7, [lr]
 801b3fa:	43db      	mvns	r3, r3
 801b3fc:	4c1b      	ldr	r4, [pc, #108]	@ (801b46c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801b3fe:	1238      	asrs	r0, r7, #8
 801b400:	fa5f fc83 	uxtb.w	ip, r3
 801b404:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b408:	10fd      	asrs	r5, r7, #3
 801b40a:	00fb      	lsls	r3, r7, #3
 801b40c:	fb00 f00c 	mul.w	r0, r0, ip
 801b410:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b414:	b2db      	uxtb	r3, r3
 801b416:	fb05 f10c 	mul.w	r1, r5, ip
 801b41a:	1c45      	adds	r5, r0, #1
 801b41c:	fb03 f30c 	mul.w	r3, r3, ip
 801b420:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801b424:	1215      	asrs	r5, r2, #8
 801b426:	f025 0507 	bic.w	r5, r5, #7
 801b42a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801b42e:	1c4d      	adds	r5, r1, #1
 801b430:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801b434:	10d1      	asrs	r1, r2, #3
 801b436:	b2c0      	uxtb	r0, r0
 801b438:	f021 0103 	bic.w	r1, r1, #3
 801b43c:	00d2      	lsls	r2, r2, #3
 801b43e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801b442:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801b446:	00c9      	lsls	r1, r1, #3
 801b448:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b44c:	4308      	orrs	r0, r1
 801b44e:	1c59      	adds	r1, r3, #1
 801b450:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b454:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b458:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801b45c:	4318      	orrs	r0, r3
 801b45e:	f8ae 0000 	strh.w	r0, [lr]
 801b462:	e7a2      	b.n	801b3aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801b464:	b013      	add	sp, #76	@ 0x4c
 801b466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b46a:	bf00      	nop
 801b46c:	fffff800 	.word	0xfffff800

0801b470 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801b470:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b474:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801b478:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801b47c:	fb05 4c03 	mla	ip, r5, r3, r4
 801b480:	2d00      	cmp	r5, #0
 801b482:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801b486:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801b48a:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801b48e:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801b492:	8808      	ldrh	r0, [r1, #0]
 801b494:	f2c0 80a7 	blt.w	801b5e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801b498:	45aa      	cmp	sl, r5
 801b49a:	f340 80a4 	ble.w	801b5e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801b49e:	2c00      	cmp	r4, #0
 801b4a0:	f2c0 809f 	blt.w	801b5e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801b4a4:	42a3      	cmp	r3, r4
 801b4a6:	f340 809c 	ble.w	801b5e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801b4aa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801b4ae:	1c62      	adds	r2, r4, #1
 801b4b0:	f100 809c 	bmi.w	801b5ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801b4b4:	4293      	cmp	r3, r2
 801b4b6:	f340 8099 	ble.w	801b5ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801b4ba:	f1b9 0f00 	cmp.w	r9, #0
 801b4be:	f000 8095 	beq.w	801b5ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801b4c2:	f8be c002 	ldrh.w	ip, [lr, #2]
 801b4c6:	3501      	adds	r5, #1
 801b4c8:	f100 8094 	bmi.w	801b5f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801b4cc:	45aa      	cmp	sl, r5
 801b4ce:	f340 8091 	ble.w	801b5f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801b4d2:	2f00      	cmp	r7, #0
 801b4d4:	f000 808e 	beq.w	801b5f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801b4d8:	2c00      	cmp	r4, #0
 801b4da:	f2c0 8089 	blt.w	801b5f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801b4de:	42a3      	cmp	r3, r4
 801b4e0:	f340 8086 	ble.w	801b5f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801b4e4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801b4e8:	3401      	adds	r4, #1
 801b4ea:	f100 8086 	bmi.w	801b5fa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801b4ee:	42a3      	cmp	r3, r4
 801b4f0:	f340 8083 	ble.w	801b5fa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801b4f4:	f1b9 0f00 	cmp.w	r9, #0
 801b4f8:	d07f      	beq.n	801b5fa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801b4fa:	3301      	adds	r3, #1
 801b4fc:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801b500:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801b504:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801b508:	fb19 fe07 	smulbb	lr, r9, r7
 801b50c:	f1c7 0210 	rsb	r2, r7, #16
 801b510:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801b514:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801b518:	eba2 0209 	sub.w	r2, r2, r9
 801b51c:	ea44 0808 	orr.w	r8, r4, r8
 801b520:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801b524:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801b528:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801b52c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801b530:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801b534:	ea44 0c0c 	orr.w	ip, r4, ip
 801b538:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801b53c:	fb04 f40c 	mul.w	r4, r4, ip
 801b540:	fb02 4808 	mla	r8, r2, r8, r4
 801b544:	041a      	lsls	r2, r3, #16
 801b546:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b54a:	b2b4      	uxth	r4, r6
 801b54c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b550:	43f6      	mvns	r6, r6
 801b552:	4313      	orrs	r3, r2
 801b554:	042a      	lsls	r2, r5, #16
 801b556:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801b55a:	b2f6      	uxtb	r6, r6
 801b55c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b560:	fb0e 8303 	mla	r3, lr, r3, r8
 801b564:	432a      	orrs	r2, r5
 801b566:	fb07 3202 	mla	r2, r7, r2, r3
 801b56a:	10c7      	asrs	r7, r0, #3
 801b56c:	0d53      	lsrs	r3, r2, #21
 801b56e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b572:	0952      	lsrs	r2, r2, #5
 801b574:	fb17 f706 	smulbb	r7, r7, r6
 801b578:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b57c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b580:	431a      	orrs	r2, r3
 801b582:	b293      	uxth	r3, r2
 801b584:	1202      	asrs	r2, r0, #8
 801b586:	121d      	asrs	r5, r3, #8
 801b588:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b58c:	00c0      	lsls	r0, r0, #3
 801b58e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b592:	fb12 f206 	smulbb	r2, r2, r6
 801b596:	b2c0      	uxtb	r0, r0
 801b598:	fb05 2504 	mla	r5, r5, r4, r2
 801b59c:	10da      	asrs	r2, r3, #3
 801b59e:	fb10 f006 	smulbb	r0, r0, r6
 801b5a2:	00db      	lsls	r3, r3, #3
 801b5a4:	b2ad      	uxth	r5, r5
 801b5a6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b5aa:	b2db      	uxtb	r3, r3
 801b5ac:	fb02 7204 	mla	r2, r2, r4, r7
 801b5b0:	fb03 0004 	mla	r0, r3, r4, r0
 801b5b4:	1c6b      	adds	r3, r5, #1
 801b5b6:	b292      	uxth	r2, r2
 801b5b8:	b280      	uxth	r0, r0
 801b5ba:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b5be:	1c43      	adds	r3, r0, #1
 801b5c0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b5c4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b5c8:	1c50      	adds	r0, r2, #1
 801b5ca:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801b5ce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b5d2:	0952      	lsrs	r2, r2, #5
 801b5d4:	432b      	orrs	r3, r5
 801b5d6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b5da:	4313      	orrs	r3, r2
 801b5dc:	800b      	strh	r3, [r1, #0]
 801b5de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b5e2:	4680      	mov	r8, r0
 801b5e4:	e763      	b.n	801b4ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801b5e6:	4684      	mov	ip, r0
 801b5e8:	4680      	mov	r8, r0
 801b5ea:	e76c      	b.n	801b4c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801b5ec:	4684      	mov	ip, r0
 801b5ee:	e76a      	b.n	801b4c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801b5f0:	4605      	mov	r5, r0
 801b5f2:	e779      	b.n	801b4e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801b5f4:	4603      	mov	r3, r0
 801b5f6:	4605      	mov	r5, r0
 801b5f8:	e782      	b.n	801b500 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801b5fa:	4603      	mov	r3, r0
 801b5fc:	e780      	b.n	801b500 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801b5fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b5fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b602:	b093      	sub	sp, #76	@ 0x4c
 801b604:	461d      	mov	r5, r3
 801b606:	9210      	str	r2, [sp, #64]	@ 0x40
 801b608:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801b60a:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801b60e:	910a      	str	r1, [sp, #40]	@ 0x28
 801b610:	920b      	str	r2, [sp, #44]	@ 0x2c
 801b612:	6859      	ldr	r1, [r3, #4]
 801b614:	681b      	ldr	r3, [r3, #0]
 801b616:	9011      	str	r0, [sp, #68]	@ 0x44
 801b618:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801b61c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801b620:	fb01 2707 	mla	r7, r1, r7, r2
 801b624:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801b628:	9307      	str	r3, [sp, #28]
 801b62a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b62c:	681b      	ldr	r3, [r3, #0]
 801b62e:	9309      	str	r3, [sp, #36]	@ 0x24
 801b630:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b632:	43db      	mvns	r3, r3
 801b634:	b2db      	uxtb	r3, r3
 801b636:	9308      	str	r3, [sp, #32]
 801b638:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b63a:	2b00      	cmp	r3, #0
 801b63c:	dc03      	bgt.n	801b646 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b63e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b640:	2b00      	cmp	r3, #0
 801b642:	f340 8205 	ble.w	801ba50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b646:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b648:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b64c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b650:	1e48      	subs	r0, r1, #1
 801b652:	f102 3cff 	add.w	ip, r2, #4294967295
 801b656:	2d00      	cmp	r5, #0
 801b658:	f340 80da 	ble.w	801b810 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801b65c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b660:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b664:	d406      	bmi.n	801b674 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b666:	4586      	cmp	lr, r0
 801b668:	da04      	bge.n	801b674 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b66a:	2b00      	cmp	r3, #0
 801b66c:	db02      	blt.n	801b674 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b66e:	4563      	cmp	r3, ip
 801b670:	f2c0 80cf 	blt.w	801b812 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b674:	f11e 0e01 	adds.w	lr, lr, #1
 801b678:	f100 80c1 	bmi.w	801b7fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b67c:	4571      	cmp	r1, lr
 801b67e:	f2c0 80be 	blt.w	801b7fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b682:	3301      	adds	r3, #1
 801b684:	f100 80bb 	bmi.w	801b7fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b688:	429a      	cmp	r2, r3
 801b68a:	f2c0 80b8 	blt.w	801b7fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b68e:	46a9      	mov	r9, r5
 801b690:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801b694:	f1b9 0f00 	cmp.w	r9, #0
 801b698:	f340 80d8 	ble.w	801b84c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801b69c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b69e:	1421      	asrs	r1, r4, #16
 801b6a0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b6a4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b6a8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b6ac:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801b6b0:	f100 8112 	bmi.w	801b8d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801b6b4:	f10e 3aff 	add.w	sl, lr, #4294967295
 801b6b8:	4551      	cmp	r1, sl
 801b6ba:	f280 810d 	bge.w	801b8d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801b6be:	2800      	cmp	r0, #0
 801b6c0:	f2c0 810a 	blt.w	801b8d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801b6c4:	f103 3aff 	add.w	sl, r3, #4294967295
 801b6c8:	4550      	cmp	r0, sl
 801b6ca:	f280 8105 	bge.w	801b8d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801b6ce:	fa0f f38e 	sxth.w	r3, lr
 801b6d2:	fb00 1103 	mla	r1, r0, r3, r1
 801b6d6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801b6d8:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801b6dc:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801b6e0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801b6e4:	f1bc 0f00 	cmp.w	ip, #0
 801b6e8:	d007      	beq.n	801b6fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801b6ea:	005b      	lsls	r3, r3, #1
 801b6ec:	eb0a 0003 	add.w	r0, sl, r3
 801b6f0:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801b6f4:	930c      	str	r3, [sp, #48]	@ 0x30
 801b6f6:	8843      	ldrh	r3, [r0, #2]
 801b6f8:	930d      	str	r3, [sp, #52]	@ 0x34
 801b6fa:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801b6fe:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801b702:	fb12 f30c 	smulbb	r3, r2, ip
 801b706:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801b70a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801b70e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801b712:	10db      	asrs	r3, r3, #3
 801b714:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b718:	ea40 000e 	orr.w	r0, r0, lr
 801b71c:	f1cc 0e10 	rsb	lr, ip, #16
 801b720:	ea4a 0101 	orr.w	r1, sl, r1
 801b724:	9f08      	ldr	r7, [sp, #32]
 801b726:	ebae 0e02 	sub.w	lr, lr, r2
 801b72a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801b72e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801b732:	4351      	muls	r1, r2
 801b734:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801b736:	fb0e 1e00 	mla	lr, lr, r0, r1
 801b73a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801b73c:	0410      	lsls	r0, r2, #16
 801b73e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b742:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801b746:	4310      	orrs	r0, r2
 801b748:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801b74a:	0412      	lsls	r2, r2, #16
 801b74c:	fb03 e000 	mla	r0, r3, r0, lr
 801b750:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801b754:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801b758:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b75c:	ea42 020e 	orr.w	r2, r2, lr
 801b760:	fb03 0302 	mla	r3, r3, r2, r0
 801b764:	f8b8 0000 	ldrh.w	r0, [r8]
 801b768:	0d5a      	lsrs	r2, r3, #21
 801b76a:	095b      	lsrs	r3, r3, #5
 801b76c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b770:	1201      	asrs	r1, r0, #8
 801b772:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b776:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801b77a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b77e:	00c0      	lsls	r0, r0, #3
 801b780:	4313      	orrs	r3, r2
 801b782:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801b786:	fb11 f107 	smulbb	r1, r1, r7
 801b78a:	b2c0      	uxtb	r0, r0
 801b78c:	b29b      	uxth	r3, r3
 801b78e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b792:	fb10 f007 	smulbb	r0, r0, r7
 801b796:	fb1e fe07 	smulbb	lr, lr, r7
 801b79a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b79e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b7a2:	fb0c 1c02 	mla	ip, ip, r2, r1
 801b7a6:	10d9      	asrs	r1, r3, #3
 801b7a8:	00db      	lsls	r3, r3, #3
 801b7aa:	fa1f fc8c 	uxth.w	ip, ip
 801b7ae:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b7b2:	b2db      	uxtb	r3, r3
 801b7b4:	fb01 e102 	mla	r1, r1, r2, lr
 801b7b8:	fb03 0302 	mla	r3, r3, r2, r0
 801b7bc:	b289      	uxth	r1, r1
 801b7be:	b29a      	uxth	r2, r3
 801b7c0:	f10c 0301 	add.w	r3, ip, #1
 801b7c4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b7c8:	1c53      	adds	r3, r2, #1
 801b7ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b7ce:	1c4a      	adds	r2, r1, #1
 801b7d0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b7d4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b7d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b7dc:	0949      	lsrs	r1, r1, #5
 801b7de:	ea43 030c 	orr.w	r3, r3, ip
 801b7e2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b7e6:	430b      	orrs	r3, r1
 801b7e8:	f8a8 3000 	strh.w	r3, [r8]
 801b7ec:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b7ee:	f108 0802 	add.w	r8, r8, #2
 801b7f2:	f109 39ff 	add.w	r9, r9, #4294967295
 801b7f6:	441c      	add	r4, r3
 801b7f8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b7fa:	441e      	add	r6, r3
 801b7fc:	e74a      	b.n	801b694 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b7fe:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b800:	3d01      	subs	r5, #1
 801b802:	441c      	add	r4, r3
 801b804:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b806:	441e      	add	r6, r3
 801b808:	9b07      	ldr	r3, [sp, #28]
 801b80a:	3302      	adds	r3, #2
 801b80c:	9307      	str	r3, [sp, #28]
 801b80e:	e722      	b.n	801b656 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b810:	d022      	beq.n	801b858 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801b812:	1e6b      	subs	r3, r5, #1
 801b814:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801b816:	fb00 4003 	mla	r0, r0, r3, r4
 801b81a:	1400      	asrs	r0, r0, #16
 801b81c:	f53f af37 	bmi.w	801b68e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b820:	3901      	subs	r1, #1
 801b822:	4288      	cmp	r0, r1
 801b824:	f6bf af33 	bge.w	801b68e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b828:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801b82a:	fb01 6303 	mla	r3, r1, r3, r6
 801b82e:	141b      	asrs	r3, r3, #16
 801b830:	f53f af2d 	bmi.w	801b68e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b834:	3a01      	subs	r2, #1
 801b836:	4293      	cmp	r3, r2
 801b838:	f6bf af29 	bge.w	801b68e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b83c:	46a8      	mov	r8, r5
 801b83e:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801b842:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801b846:	f1b8 0f00 	cmp.w	r8, #0
 801b84a:	dc60      	bgt.n	801b90e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801b84c:	9b07      	ldr	r3, [sp, #28]
 801b84e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b852:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b856:	9307      	str	r3, [sp, #28]
 801b858:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b85a:	2b00      	cmp	r3, #0
 801b85c:	f340 80f8 	ble.w	801ba50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b860:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b864:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b866:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b86a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b86e:	eef0 6a62 	vmov.f32	s13, s5
 801b872:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b876:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b87a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b87e:	ee16 4a90 	vmov	r4, s13
 801b882:	eef0 6a43 	vmov.f32	s13, s6
 801b886:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b88a:	ee16 6a90 	vmov	r6, s13
 801b88e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b892:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b896:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b89a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b89e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b8a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b8a6:	ee12 2a90 	vmov	r2, s5
 801b8aa:	eef0 2a47 	vmov.f32	s5, s14
 801b8ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801b8b2:	ee13 2a10 	vmov	r2, s6
 801b8b6:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b8b8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b8ba:	eeb0 3a67 	vmov.f32	s6, s15
 801b8be:	fb92 f3f3 	sdiv	r3, r2, r3
 801b8c2:	9320      	str	r3, [sp, #128]	@ 0x80
 801b8c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b8c6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b8c8:	3b01      	subs	r3, #1
 801b8ca:	930a      	str	r3, [sp, #40]	@ 0x28
 801b8cc:	bf08      	it	eq
 801b8ce:	4615      	moveq	r5, r2
 801b8d0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b8d2:	bf18      	it	ne
 801b8d4:	461d      	movne	r5, r3
 801b8d6:	e6af      	b.n	801b638 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b8d8:	f111 0a01 	adds.w	sl, r1, #1
 801b8dc:	d486      	bmi.n	801b7ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b8de:	45d6      	cmp	lr, sl
 801b8e0:	db84      	blt.n	801b7ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b8e2:	f110 0a01 	adds.w	sl, r0, #1
 801b8e6:	d481      	bmi.n	801b7ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b8e8:	4553      	cmp	r3, sl
 801b8ea:	f6ff af7f 	blt.w	801b7ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b8ee:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801b8f0:	b21b      	sxth	r3, r3
 801b8f2:	9101      	str	r1, [sp, #4]
 801b8f4:	4641      	mov	r1, r8
 801b8f6:	9300      	str	r3, [sp, #0]
 801b8f8:	fa0f f38e 	sxth.w	r3, lr
 801b8fc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801b900:	e9cd c704 	strd	ip, r7, [sp, #16]
 801b904:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b906:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b908:	f7ff fdb2 	bl	801b470 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801b90c:	e76e      	b.n	801b7ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b90e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b910:	1430      	asrs	r0, r6, #16
 801b912:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801b914:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801b918:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b91c:	1423      	asrs	r3, r4, #16
 801b91e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b922:	fb01 3000 	mla	r0, r1, r0, r3
 801b926:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b928:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801b92c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801b930:	8858      	ldrh	r0, [r3, #2]
 801b932:	f1be 0f00 	cmp.w	lr, #0
 801b936:	d00b      	beq.n	801b950 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801b938:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801b93c:	3901      	subs	r1, #1
 801b93e:	0049      	lsls	r1, r1, #1
 801b940:	3102      	adds	r1, #2
 801b942:	eb03 0b01 	add.w	fp, r3, r1
 801b946:	5a5b      	ldrh	r3, [r3, r1]
 801b948:	930e      	str	r3, [sp, #56]	@ 0x38
 801b94a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801b94e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b950:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801b954:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801b958:	fb12 f30e 	smulbb	r3, r2, lr
 801b95c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801b960:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801b964:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b968:	10db      	asrs	r3, r3, #3
 801b96a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b96e:	ea41 010c 	orr.w	r1, r1, ip
 801b972:	f1ce 0c10 	rsb	ip, lr, #16
 801b976:	ea4b 0000 	orr.w	r0, fp, r0
 801b97a:	9f08      	ldr	r7, [sp, #32]
 801b97c:	ebac 0c02 	sub.w	ip, ip, r2
 801b980:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801b984:	f108 38ff 	add.w	r8, r8, #4294967295
 801b988:	4350      	muls	r0, r2
 801b98a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801b98e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b990:	fb0c 0c01 	mla	ip, ip, r1, r0
 801b994:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801b996:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801b99a:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801b99e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801b9a0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b9a4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b9a8:	0412      	lsls	r2, r2, #16
 801b9aa:	ea4b 0101 	orr.w	r1, fp, r1
 801b9ae:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b9b2:	fb03 c101 	mla	r1, r3, r1, ip
 801b9b6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801b9ba:	4302      	orrs	r2, r0
 801b9bc:	fb03 1202 	mla	r2, r3, r2, r1
 801b9c0:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801b9c4:	0952      	lsrs	r2, r2, #5
 801b9c6:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801b9ca:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801b9ce:	f8b9 2000 	ldrh.w	r2, [r9]
 801b9d2:	ea4b 0303 	orr.w	r3, fp, r3
 801b9d6:	1211      	asrs	r1, r2, #8
 801b9d8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801b9dc:	b29b      	uxth	r3, r3
 801b9de:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b9e2:	00d2      	lsls	r2, r2, #3
 801b9e4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801b9e8:	fb11 f107 	smulbb	r1, r1, r7
 801b9ec:	1218      	asrs	r0, r3, #8
 801b9ee:	fb1c fc07 	smulbb	ip, ip, r7
 801b9f2:	b2d2      	uxtb	r2, r2
 801b9f4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b9f8:	fb12 f207 	smulbb	r2, r2, r7
 801b9fc:	fb00 100a 	mla	r0, r0, sl, r1
 801ba00:	10d9      	asrs	r1, r3, #3
 801ba02:	00db      	lsls	r3, r3, #3
 801ba04:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ba08:	b280      	uxth	r0, r0
 801ba0a:	b2db      	uxtb	r3, r3
 801ba0c:	fb01 c10a 	mla	r1, r1, sl, ip
 801ba10:	fb03 230a 	mla	r3, r3, sl, r2
 801ba14:	1c42      	adds	r2, r0, #1
 801ba16:	b289      	uxth	r1, r1
 801ba18:	b29b      	uxth	r3, r3
 801ba1a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ba1e:	f101 0c01 	add.w	ip, r1, #1
 801ba22:	1c5a      	adds	r2, r3, #1
 801ba24:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ba28:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801ba2c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ba30:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ba32:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ba36:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ba3a:	441c      	add	r4, r3
 801ba3c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ba40:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ba42:	4310      	orrs	r0, r2
 801ba44:	441e      	add	r6, r3
 801ba46:	ea40 000c 	orr.w	r0, r0, ip
 801ba4a:	f829 0b02 	strh.w	r0, [r9], #2
 801ba4e:	e6fa      	b.n	801b846 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801ba50:	b013      	add	sp, #76	@ 0x4c
 801ba52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ba56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801ba56:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ba5a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801ba5e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801ba62:	fb0e 4703 	mla	r7, lr, r3, r4
 801ba66:	f1be 0f00 	cmp.w	lr, #0
 801ba6a:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801ba6e:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801ba72:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801ba76:	8808      	ldrh	r0, [r1, #0]
 801ba78:	db60      	blt.n	801bb3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801ba7a:	45f1      	cmp	r9, lr
 801ba7c:	dd5e      	ble.n	801bb3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801ba7e:	2c00      	cmp	r4, #0
 801ba80:	db5a      	blt.n	801bb38 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801ba82:	42a3      	cmp	r3, r4
 801ba84:	dd58      	ble.n	801bb38 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801ba86:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801ba8a:	1c62      	adds	r2, r4, #1
 801ba8c:	d459      	bmi.n	801bb42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ba8e:	4293      	cmp	r3, r2
 801ba90:	dd57      	ble.n	801bb42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ba92:	2d00      	cmp	r5, #0
 801ba94:	d055      	beq.n	801bb42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ba96:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801ba9a:	f11e 0e01 	adds.w	lr, lr, #1
 801ba9e:	d454      	bmi.n	801bb4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801baa0:	45f1      	cmp	r9, lr
 801baa2:	dd52      	ble.n	801bb4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801baa4:	2e00      	cmp	r6, #0
 801baa6:	d050      	beq.n	801bb4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801baa8:	2c00      	cmp	r4, #0
 801baaa:	db4c      	blt.n	801bb46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801baac:	42a3      	cmp	r3, r4
 801baae:	dd4a      	ble.n	801bb46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801bab0:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801bab4:	3401      	adds	r4, #1
 801bab6:	d405      	bmi.n	801bac4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801bab8:	42a3      	cmp	r3, r4
 801baba:	dd03      	ble.n	801bac4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801babc:	b115      	cbz	r5, 801bac4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801babe:	3301      	adds	r3, #1
 801bac0:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801bac4:	fb15 f406 	smulbb	r4, r5, r6
 801bac8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801bacc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801bad0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801bad4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801bad8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801badc:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801bae0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801bae4:	ea43 0c0c 	orr.w	ip, r3, ip
 801bae8:	f1c6 0310 	rsb	r3, r6, #16
 801baec:	ea4e 0707 	orr.w	r7, lr, r7
 801baf0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801baf4:	1b5b      	subs	r3, r3, r5
 801baf6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801bafa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801bafe:	437d      	muls	r5, r7
 801bb00:	fb03 5c0c 	mla	ip, r3, ip, r5
 801bb04:	0403      	lsls	r3, r0, #16
 801bb06:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801bb0a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801bb0e:	4318      	orrs	r0, r3
 801bb10:	0413      	lsls	r3, r2, #16
 801bb12:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801bb16:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801bb1a:	fb04 c000 	mla	r0, r4, r0, ip
 801bb1e:	4313      	orrs	r3, r2
 801bb20:	fb06 0003 	mla	r0, r6, r3, r0
 801bb24:	0d43      	lsrs	r3, r0, #21
 801bb26:	0940      	lsrs	r0, r0, #5
 801bb28:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bb2c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801bb30:	4318      	orrs	r0, r3
 801bb32:	8008      	strh	r0, [r1, #0]
 801bb34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801bb38:	4684      	mov	ip, r0
 801bb3a:	e7a6      	b.n	801ba8a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801bb3c:	4607      	mov	r7, r0
 801bb3e:	4684      	mov	ip, r0
 801bb40:	e7ab      	b.n	801ba9a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801bb42:	4607      	mov	r7, r0
 801bb44:	e7a9      	b.n	801ba9a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801bb46:	4602      	mov	r2, r0
 801bb48:	e7b4      	b.n	801bab4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801bb4a:	4602      	mov	r2, r0
 801bb4c:	e7ba      	b.n	801bac4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801bb4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bb4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb52:	b08f      	sub	sp, #60	@ 0x3c
 801bb54:	461d      	mov	r5, r3
 801bb56:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801bb58:	9107      	str	r1, [sp, #28]
 801bb5a:	920c      	str	r2, [sp, #48]	@ 0x30
 801bb5c:	6859      	ldr	r1, [r3, #4]
 801bb5e:	681b      	ldr	r3, [r3, #0]
 801bb60:	900d      	str	r0, [sp, #52]	@ 0x34
 801bb62:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801bb66:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801bb6a:	fb01 2707 	mla	r7, r1, r7, r2
 801bb6e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801bb72:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bb74:	f8d3 8000 	ldr.w	r8, [r3]
 801bb78:	9b07      	ldr	r3, [sp, #28]
 801bb7a:	2b00      	cmp	r3, #0
 801bb7c:	dc03      	bgt.n	801bb86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801bb7e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bb80:	2b00      	cmp	r3, #0
 801bb82:	f340 8182 	ble.w	801be8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801bb86:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bb88:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bb8c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bb90:	1e48      	subs	r0, r1, #1
 801bb92:	f102 3cff 	add.w	ip, r2, #4294967295
 801bb96:	2d00      	cmp	r5, #0
 801bb98:	f340 809b 	ble.w	801bcd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801bb9c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801bba0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801bba4:	d406      	bmi.n	801bbb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bba6:	4586      	cmp	lr, r0
 801bba8:	da04      	bge.n	801bbb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bbaa:	2b00      	cmp	r3, #0
 801bbac:	db02      	blt.n	801bbb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bbae:	4563      	cmp	r3, ip
 801bbb0:	f2c0 8090 	blt.w	801bcd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bbb4:	f11e 0e01 	adds.w	lr, lr, #1
 801bbb8:	f100 8084 	bmi.w	801bcc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801bbbc:	4571      	cmp	r1, lr
 801bbbe:	f2c0 8081 	blt.w	801bcc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801bbc2:	3301      	adds	r3, #1
 801bbc4:	d47e      	bmi.n	801bcc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801bbc6:	429a      	cmp	r2, r3
 801bbc8:	db7c      	blt.n	801bcc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801bbca:	46aa      	mov	sl, r5
 801bbcc:	46b9      	mov	r9, r7
 801bbce:	f1ba 0f00 	cmp.w	sl, #0
 801bbd2:	f340 8099 	ble.w	801bd08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801bbd6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bbd8:	1421      	asrs	r1, r4, #16
 801bbda:	ea4f 4026 	mov.w	r0, r6, asr #16
 801bbde:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801bbe2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801bbe6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801bbea:	f100 80d1 	bmi.w	801bd90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801bbee:	f10e 3bff 	add.w	fp, lr, #4294967295
 801bbf2:	4559      	cmp	r1, fp
 801bbf4:	f280 80cc 	bge.w	801bd90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801bbf8:	2800      	cmp	r0, #0
 801bbfa:	f2c0 80c9 	blt.w	801bd90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801bbfe:	f103 3bff 	add.w	fp, r3, #4294967295
 801bc02:	4558      	cmp	r0, fp
 801bc04:	f280 80c4 	bge.w	801bd90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801bc08:	fa0f fe8e 	sxth.w	lr, lr
 801bc0c:	fb00 110e 	mla	r1, r0, lr, r1
 801bc10:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801bc14:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801bc18:	8841      	ldrh	r1, [r0, #2]
 801bc1a:	f1bc 0f00 	cmp.w	ip, #0
 801bc1e:	d00b      	beq.n	801bc38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801bc20:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801bc24:	3b01      	subs	r3, #1
 801bc26:	005b      	lsls	r3, r3, #1
 801bc28:	3302      	adds	r3, #2
 801bc2a:	eb00 0e03 	add.w	lr, r0, r3
 801bc2e:	5ac3      	ldrh	r3, [r0, r3]
 801bc30:	9308      	str	r3, [sp, #32]
 801bc32:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801bc36:	9309      	str	r3, [sp, #36]	@ 0x24
 801bc38:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801bc3c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801bc40:	fb12 f30c 	smulbb	r3, r2, ip
 801bc44:	f1cc 0e10 	rsb	lr, ip, #16
 801bc48:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801bc4c:	10db      	asrs	r3, r3, #3
 801bc4e:	ebae 0e02 	sub.w	lr, lr, r2
 801bc52:	ea40 000b 	orr.w	r0, r0, fp
 801bc56:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801bc5a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801bc5e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801bc62:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801bc66:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801bc6a:	ea4b 0101 	orr.w	r1, fp, r1
 801bc6e:	4351      	muls	r1, r2
 801bc70:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801bc72:	fb0e 1e00 	mla	lr, lr, r0, r1
 801bc76:	0410      	lsls	r0, r2, #16
 801bc78:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801bc7c:	9908      	ldr	r1, [sp, #32]
 801bc7e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801bc82:	4310      	orrs	r0, r2
 801bc84:	9a08      	ldr	r2, [sp, #32]
 801bc86:	0412      	lsls	r2, r2, #16
 801bc88:	fb03 e000 	mla	r0, r3, r0, lr
 801bc8c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801bc90:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801bc94:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801bc98:	ea42 020e 	orr.w	r2, r2, lr
 801bc9c:	fb03 0302 	mla	r3, r3, r2, r0
 801bca0:	0d5a      	lsrs	r2, r3, #21
 801bca2:	095b      	lsrs	r3, r3, #5
 801bca4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bca8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801bcac:	4313      	orrs	r3, r2
 801bcae:	f8a9 3000 	strh.w	r3, [r9]
 801bcb2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801bcb4:	f109 0902 	add.w	r9, r9, #2
 801bcb8:	f10a 3aff 	add.w	sl, sl, #4294967295
 801bcbc:	441c      	add	r4, r3
 801bcbe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bcc0:	441e      	add	r6, r3
 801bcc2:	e784      	b.n	801bbce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bcc4:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801bcc6:	3d01      	subs	r5, #1
 801bcc8:	3702      	adds	r7, #2
 801bcca:	441c      	add	r4, r3
 801bccc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bcce:	441e      	add	r6, r3
 801bcd0:	e761      	b.n	801bb96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bcd2:	d01d      	beq.n	801bd10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801bcd4:	1e6b      	subs	r3, r5, #1
 801bcd6:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801bcd8:	fb00 4003 	mla	r0, r0, r3, r4
 801bcdc:	1400      	asrs	r0, r0, #16
 801bcde:	f53f af74 	bmi.w	801bbca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bce2:	3901      	subs	r1, #1
 801bce4:	4288      	cmp	r0, r1
 801bce6:	f6bf af70 	bge.w	801bbca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bcea:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801bcec:	fb01 6303 	mla	r3, r1, r3, r6
 801bcf0:	141b      	asrs	r3, r3, #16
 801bcf2:	f53f af6a 	bmi.w	801bbca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bcf6:	3a01      	subs	r2, #1
 801bcf8:	4293      	cmp	r3, r2
 801bcfa:	f6bf af66 	bge.w	801bbca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bcfe:	46a9      	mov	r9, r5
 801bd00:	46ba      	mov	sl, r7
 801bd02:	f1b9 0f00 	cmp.w	r9, #0
 801bd06:	dc5b      	bgt.n	801bdc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801bd08:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801bd0c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801bd10:	9b07      	ldr	r3, [sp, #28]
 801bd12:	2b00      	cmp	r3, #0
 801bd14:	f340 80b9 	ble.w	801be8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801bd18:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801bd1c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801bd1e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bd26:	eef0 6a62 	vmov.f32	s13, s5
 801bd2a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bd2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bd32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bd36:	ee16 4a90 	vmov	r4, s13
 801bd3a:	eef0 6a43 	vmov.f32	s13, s6
 801bd3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bd42:	ee16 6a90 	vmov	r6, s13
 801bd46:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bd4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bd4e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bd52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bd56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bd5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bd5e:	ee12 2a90 	vmov	r2, s5
 801bd62:	eef0 2a47 	vmov.f32	s5, s14
 801bd66:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd6a:	ee13 2a10 	vmov	r2, s6
 801bd6e:	931b      	str	r3, [sp, #108]	@ 0x6c
 801bd70:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801bd72:	eeb0 3a67 	vmov.f32	s6, s15
 801bd76:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd7a:	931c      	str	r3, [sp, #112]	@ 0x70
 801bd7c:	9b07      	ldr	r3, [sp, #28]
 801bd7e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801bd80:	3b01      	subs	r3, #1
 801bd82:	9307      	str	r3, [sp, #28]
 801bd84:	bf08      	it	eq
 801bd86:	4615      	moveq	r5, r2
 801bd88:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801bd8a:	bf18      	it	ne
 801bd8c:	461d      	movne	r5, r3
 801bd8e:	e6f3      	b.n	801bb78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801bd90:	f111 0b01 	adds.w	fp, r1, #1
 801bd94:	d48d      	bmi.n	801bcb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bd96:	45de      	cmp	lr, fp
 801bd98:	db8b      	blt.n	801bcb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bd9a:	f110 0b01 	adds.w	fp, r0, #1
 801bd9e:	d488      	bmi.n	801bcb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bda0:	455b      	cmp	r3, fp
 801bda2:	db86      	blt.n	801bcb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bda4:	b21b      	sxth	r3, r3
 801bda6:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801bdaa:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801bdae:	9300      	str	r3, [sp, #0]
 801bdb0:	4642      	mov	r2, r8
 801bdb2:	fa0f f38e 	sxth.w	r3, lr
 801bdb6:	4649      	mov	r1, r9
 801bdb8:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801bdba:	f7ff fe4c 	bl	801ba56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801bdbe:	e778      	b.n	801bcb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bdc0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bdc2:	1420      	asrs	r0, r4, #16
 801bdc4:	1431      	asrs	r1, r6, #16
 801bdc6:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801bdca:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801bdce:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801bdd2:	fb03 0101 	mla	r1, r3, r1, r0
 801bdd6:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801bdda:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801bdde:	8841      	ldrh	r1, [r0, #2]
 801bde0:	f1be 0f00 	cmp.w	lr, #0
 801bde4:	d00b      	beq.n	801bdfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801bde6:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801bdea:	3b01      	subs	r3, #1
 801bdec:	005b      	lsls	r3, r3, #1
 801bdee:	3302      	adds	r3, #2
 801bdf0:	eb00 0b03 	add.w	fp, r0, r3
 801bdf4:	5ac3      	ldrh	r3, [r0, r3]
 801bdf6:	930a      	str	r3, [sp, #40]	@ 0x28
 801bdf8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801bdfc:	930b      	str	r3, [sp, #44]	@ 0x2c
 801bdfe:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801be02:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801be06:	fb12 f30e 	smulbb	r3, r2, lr
 801be0a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801be0e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801be12:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801be16:	10db      	asrs	r3, r3, #3
 801be18:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801be1c:	ea40 000c 	orr.w	r0, r0, ip
 801be20:	f1ce 0c10 	rsb	ip, lr, #16
 801be24:	ea4b 0101 	orr.w	r1, fp, r1
 801be28:	f109 39ff 	add.w	r9, r9, #4294967295
 801be2c:	ebac 0c02 	sub.w	ip, ip, r2
 801be30:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801be34:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801be38:	4351      	muls	r1, r2
 801be3a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801be3c:	fb0c 1c00 	mla	ip, ip, r0, r1
 801be40:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801be42:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801be46:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801be4a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801be4c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801be50:	0412      	lsls	r2, r2, #16
 801be52:	ea4b 0000 	orr.w	r0, fp, r0
 801be56:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801be5a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801be5e:	fb03 c000 	mla	r0, r3, r0, ip
 801be62:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801be66:	ea42 0b0b 	orr.w	fp, r2, fp
 801be6a:	fb03 000b 	mla	r0, r3, fp, r0
 801be6e:	0d43      	lsrs	r3, r0, #21
 801be70:	0940      	lsrs	r0, r0, #5
 801be72:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801be76:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801be7a:	4318      	orrs	r0, r3
 801be7c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801be7e:	441c      	add	r4, r3
 801be80:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801be82:	f82a 0b02 	strh.w	r0, [sl], #2
 801be86:	441e      	add	r6, r3
 801be88:	e73b      	b.n	801bd02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801be8a:	b00f      	add	sp, #60	@ 0x3c
 801be8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801be90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801be90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be94:	b085      	sub	sp, #20
 801be96:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801be9a:	9102      	str	r1, [sp, #8]
 801be9c:	2c00      	cmp	r4, #0
 801be9e:	fb04 7103 	mla	r1, r4, r3, r7
 801bea2:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801bea6:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801beaa:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801beae:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801beb2:	f2c0 811b 	blt.w	801c0ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801beb6:	45a6      	cmp	lr, r4
 801beb8:	f340 8118 	ble.w	801c0ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801bebc:	2f00      	cmp	r7, #0
 801bebe:	f2c0 8113 	blt.w	801c0e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801bec2:	42bb      	cmp	r3, r7
 801bec4:	f340 8110 	ble.w	801c0e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801bec8:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801becc:	1c7a      	adds	r2, r7, #1
 801bece:	f100 8110 	bmi.w	801c0f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801bed2:	4293      	cmp	r3, r2
 801bed4:	f340 810d 	ble.w	801c0f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801bed8:	2e00      	cmp	r6, #0
 801beda:	f000 810c 	beq.w	801c0f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801bede:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801bee2:	3401      	adds	r4, #1
 801bee4:	f100 810b 	bmi.w	801c0fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801bee8:	45a6      	cmp	lr, r4
 801beea:	f340 8108 	ble.w	801c0fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801beee:	2800      	cmp	r0, #0
 801bef0:	f000 8108 	beq.w	801c104 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801bef4:	2f00      	cmp	r7, #0
 801bef6:	f2c0 8100 	blt.w	801c0fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801befa:	42bb      	cmp	r3, r7
 801befc:	f340 80fd 	ble.w	801c0fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801bf00:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801bf04:	3701      	adds	r7, #1
 801bf06:	f100 8100 	bmi.w	801c10a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801bf0a:	42bb      	cmp	r3, r7
 801bf0c:	f340 80fd 	ble.w	801c10a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801bf10:	2e00      	cmp	r6, #0
 801bf12:	f000 80fc 	beq.w	801c10e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801bf16:	3301      	adds	r3, #1
 801bf18:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801bf1c:	b2b6      	uxth	r6, r6
 801bf1e:	b280      	uxth	r0, r0
 801bf20:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801bf24:	fb00 fe06 	mul.w	lr, r0, r6
 801bf28:	0136      	lsls	r6, r6, #4
 801bf2a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801bf2e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801bf32:	eba6 070e 	sub.w	r7, r6, lr
 801bf36:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801bf3a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801bf3e:	b280      	uxth	r0, r0
 801bf40:	b2bf      	uxth	r7, r7
 801bf42:	1a1b      	subs	r3, r3, r0
 801bf44:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801bf48:	fb0a f607 	mul.w	r6, sl, r7
 801bf4c:	b29b      	uxth	r3, r3
 801bf4e:	fb0b 6603 	mla	r6, fp, r3, r6
 801bf52:	fb00 6609 	mla	r6, r0, r9, r6
 801bf56:	fb0e 6608 	mla	r6, lr, r8, r6
 801bf5a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801bf5e:	9600      	str	r6, [sp, #0]
 801bf60:	2e00      	cmp	r6, #0
 801bf62:	f000 80be 	beq.w	801c0e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801bf66:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801bf6a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801bf6e:	9e02      	ldr	r6, [sp, #8]
 801bf70:	fb0b fc0c 	mul.w	ip, fp, ip
 801bf74:	fb0b f505 	mul.w	r5, fp, r5
 801bf78:	8836      	ldrh	r6, [r6, #0]
 801bf7a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801bf7e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bf82:	9501      	str	r5, [sp, #4]
 801bf84:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801bf88:	44dc      	add	ip, fp
 801bf8a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf8e:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801bf92:	9503      	str	r5, [sp, #12]
 801bf94:	9d01      	ldr	r5, [sp, #4]
 801bf96:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801bf9a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801bf9e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801bfa2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bfa6:	fb0a fc0c 	mul.w	ip, sl, ip
 801bfaa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801bfae:	fb0a fa01 	mul.w	sl, sl, r1
 801bfb2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801bfb6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bfba:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801bfbe:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bfc2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801bfc6:	4465      	add	r5, ip
 801bfc8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bfcc:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801bfd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bfd4:	fb09 fc0c 	mul.w	ip, r9, ip
 801bfd8:	0a2d      	lsrs	r5, r5, #8
 801bfda:	fb09 f904 	mul.w	r9, r9, r4
 801bfde:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bfe2:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801bfe6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bfea:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801bfee:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bff2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801bff6:	437d      	muls	r5, r7
 801bff8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801bffc:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801c000:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801c004:	4461      	add	r1, ip
 801c006:	fb08 f404 	mul.w	r4, r8, r4
 801c00a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c00e:	fb08 f802 	mul.w	r8, r8, r2
 801c012:	0a09      	lsrs	r1, r1, #8
 801c014:	0a22      	lsrs	r2, r4, #8
 801c016:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801c01a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801c01e:	fb07 f70a 	mul.w	r7, r7, sl
 801c022:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801c026:	4414      	add	r4, r2
 801c028:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801c02c:	0a24      	lsrs	r4, r4, #8
 801c02e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801c032:	9a03      	ldr	r2, [sp, #12]
 801c034:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801c038:	fb02 5503 	mla	r5, r2, r3, r5
 801c03c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801c040:	9a00      	ldr	r2, [sp, #0]
 801c042:	fb04 540e 	mla	r4, r4, lr, r5
 801c046:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801c04a:	1235      	asrs	r5, r6, #8
 801c04c:	fb01 4100 	mla	r1, r1, r0, r4
 801c050:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c054:	0a09      	lsrs	r1, r1, #8
 801c056:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801c05a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801c05e:	fb03 7101 	mla	r1, r3, r1, r7
 801c062:	fb0e 1e08 	mla	lr, lr, r8, r1
 801c066:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801c06a:	fb00 e101 	mla	r1, r0, r1, lr
 801c06e:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801c072:	b287      	uxth	r7, r0
 801c074:	0a09      	lsrs	r1, r1, #8
 801c076:	437a      	muls	r2, r7
 801c078:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c07c:	1c53      	adds	r3, r2, #1
 801c07e:	4321      	orrs	r1, r4
 801c080:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c084:	0c0a      	lsrs	r2, r1, #16
 801c086:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801c08a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801c08e:	b2c8      	uxtb	r0, r1
 801c090:	fb12 f207 	smulbb	r2, r2, r7
 801c094:	fb14 f407 	smulbb	r4, r4, r7
 801c098:	b2db      	uxtb	r3, r3
 801c09a:	fb10 f007 	smulbb	r0, r0, r7
 801c09e:	fb05 2503 	mla	r5, r5, r3, r2
 801c0a2:	10f2      	asrs	r2, r6, #3
 801c0a4:	00f6      	lsls	r6, r6, #3
 801c0a6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c0aa:	b2ad      	uxth	r5, r5
 801c0ac:	b2f6      	uxtb	r6, r6
 801c0ae:	fb02 4203 	mla	r2, r2, r3, r4
 801c0b2:	fb06 0303 	mla	r3, r6, r3, r0
 801c0b6:	b294      	uxth	r4, r2
 801c0b8:	b299      	uxth	r1, r3
 801c0ba:	1c6b      	adds	r3, r5, #1
 801c0bc:	1c62      	adds	r2, r4, #1
 801c0be:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c0c2:	1c4b      	adds	r3, r1, #1
 801c0c4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801c0c8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c0cc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c0d0:	0952      	lsrs	r2, r2, #5
 801c0d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c0d6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c0da:	432b      	orrs	r3, r5
 801c0dc:	4313      	orrs	r3, r2
 801c0de:	9a02      	ldr	r2, [sp, #8]
 801c0e0:	8013      	strh	r3, [r2, #0]
 801c0e2:	b005      	add	sp, #20
 801c0e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0e8:	2500      	movs	r5, #0
 801c0ea:	e6ef      	b.n	801becc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801c0ec:	2100      	movs	r1, #0
 801c0ee:	460d      	mov	r5, r1
 801c0f0:	e6f7      	b.n	801bee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801c0f2:	2100      	movs	r1, #0
 801c0f4:	e6f5      	b.n	801bee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801c0f6:	4631      	mov	r1, r6
 801c0f8:	e6f3      	b.n	801bee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801c0fa:	2400      	movs	r4, #0
 801c0fc:	e702      	b.n	801bf04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801c0fe:	2200      	movs	r2, #0
 801c100:	4614      	mov	r4, r2
 801c102:	e70b      	b.n	801bf1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801c104:	4602      	mov	r2, r0
 801c106:	4604      	mov	r4, r0
 801c108:	e708      	b.n	801bf1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801c10a:	2200      	movs	r2, #0
 801c10c:	e706      	b.n	801bf1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801c10e:	4632      	mov	r2, r6
 801c110:	e704      	b.n	801bf1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801c112 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c112:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c116:	b09d      	sub	sp, #116	@ 0x74
 801c118:	9219      	str	r2, [sp, #100]	@ 0x64
 801c11a:	9307      	str	r3, [sp, #28]
 801c11c:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801c11e:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801c122:	901b      	str	r0, [sp, #108]	@ 0x6c
 801c124:	931a      	str	r3, [sp, #104]	@ 0x68
 801c126:	6850      	ldr	r0, [r2, #4]
 801c128:	9117      	str	r1, [sp, #92]	@ 0x5c
 801c12a:	6812      	ldr	r2, [r2, #0]
 801c12c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801c130:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801c134:	fb00 1303 	mla	r3, r0, r3, r1
 801c138:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c13c:	930a      	str	r3, [sp, #40]	@ 0x28
 801c13e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801c140:	681b      	ldr	r3, [r3, #0]
 801c142:	9310      	str	r3, [sp, #64]	@ 0x40
 801c144:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801c148:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c14a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c14c:	2b00      	cmp	r3, #0
 801c14e:	dc03      	bgt.n	801c158 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801c150:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801c152:	2b00      	cmp	r3, #0
 801c154:	f340 8375 	ble.w	801c842 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801c158:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801c15a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c15e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c162:	1e48      	subs	r0, r1, #1
 801c164:	1e57      	subs	r7, r2, #1
 801c166:	9b07      	ldr	r3, [sp, #28]
 801c168:	2b00      	cmp	r3, #0
 801c16a:	f340 818e 	ble.w	801c48a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801c16e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c172:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c176:	d406      	bmi.n	801c186 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c178:	4584      	cmp	ip, r0
 801c17a:	da04      	bge.n	801c186 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c17c:	2b00      	cmp	r3, #0
 801c17e:	db02      	blt.n	801c186 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c180:	42bb      	cmp	r3, r7
 801c182:	f2c0 8183 	blt.w	801c48c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801c186:	f11c 0c01 	adds.w	ip, ip, #1
 801c18a:	f100 8173 	bmi.w	801c474 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c18e:	4561      	cmp	r1, ip
 801c190:	f2c0 8170 	blt.w	801c474 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c194:	3301      	adds	r3, #1
 801c196:	f100 816d 	bmi.w	801c474 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c19a:	429a      	cmp	r2, r3
 801c19c:	f2c0 816a 	blt.w	801c474 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c1a0:	9b07      	ldr	r3, [sp, #28]
 801c1a2:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801c1a4:	9318      	str	r3, [sp, #96]	@ 0x60
 801c1a6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c1a8:	2b00      	cmp	r3, #0
 801c1aa:	f340 818c 	ble.w	801c4c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801c1ae:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801c1b0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801c1b4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801c1b6:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801c1ba:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801c1be:	1422      	asrs	r2, r4, #16
 801c1c0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c1c4:	689b      	ldr	r3, [r3, #8]
 801c1c6:	f100 81cd 	bmi.w	801c564 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c1ca:	f103 38ff 	add.w	r8, r3, #4294967295
 801c1ce:	4542      	cmp	r2, r8
 801c1d0:	f280 81c8 	bge.w	801c564 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c1d4:	f1bc 0f00 	cmp.w	ip, #0
 801c1d8:	f2c0 81c4 	blt.w	801c564 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c1dc:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c1e0:	45c4      	cmp	ip, r8
 801c1e2:	f280 81bf 	bge.w	801c564 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c1e6:	b21b      	sxth	r3, r3
 801c1e8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c1ea:	fb0c 2203 	mla	r2, ip, r3, r2
 801c1ee:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801c1f2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801c1f6:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801c1fa:	2800      	cmp	r0, #0
 801c1fc:	f000 81a9 	beq.w	801c552 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801c200:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801c204:	950c      	str	r5, [sp, #48]	@ 0x30
 801c206:	0e2d      	lsrs	r5, r5, #24
 801c208:	9513      	str	r5, [sp, #76]	@ 0x4c
 801c20a:	b181      	cbz	r1, 801c22e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c20c:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801c210:	3b01      	subs	r3, #1
 801c212:	009b      	lsls	r3, r3, #2
 801c214:	3304      	adds	r3, #4
 801c216:	eb08 0c03 	add.w	ip, r8, r3
 801c21a:	f858 3003 	ldr.w	r3, [r8, r3]
 801c21e:	9308      	str	r3, [sp, #32]
 801c220:	0e1b      	lsrs	r3, r3, #24
 801c222:	9311      	str	r3, [sp, #68]	@ 0x44
 801c224:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801c228:	930d      	str	r3, [sp, #52]	@ 0x34
 801c22a:	0e1b      	lsrs	r3, r3, #24
 801c22c:	9314      	str	r3, [sp, #80]	@ 0x50
 801c22e:	b280      	uxth	r0, r0
 801c230:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c232:	b289      	uxth	r1, r1
 801c234:	fb00 f901 	mul.w	r9, r0, r1
 801c238:	0100      	lsls	r0, r0, #4
 801c23a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c23e:	eba0 0809 	sub.w	r8, r0, r9
 801c242:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801c246:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801c248:	b289      	uxth	r1, r1
 801c24a:	fa1f f888 	uxth.w	r8, r8
 801c24e:	1a5b      	subs	r3, r3, r1
 801c250:	fb08 f000 	mul.w	r0, r8, r0
 801c254:	b29b      	uxth	r3, r3
 801c256:	fb03 000e 	mla	r0, r3, lr, r0
 801c25a:	fb01 0005 	mla	r0, r1, r5, r0
 801c25e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c260:	fb09 0005 	mla	r0, r9, r5, r0
 801c264:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801c268:	2800      	cmp	r0, #0
 801c26a:	f000 80fa 	beq.w	801c462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c26e:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801c272:	d01b      	beq.n	801c2ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801c274:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801c278:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801c27c:	fb0e fa0a 	mul.w	sl, lr, sl
 801c280:	fb0e fe02 	mul.w	lr, lr, r2
 801c284:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801c288:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c28c:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801c290:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801c294:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c298:	4452      	add	r2, sl
 801c29a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c29e:	0a12      	lsrs	r2, r2, #8
 801c2a0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c2a4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801c2a8:	ea42 020c 	orr.w	r2, r2, ip
 801c2ac:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801c2ae:	2dff      	cmp	r5, #255	@ 0xff
 801c2b0:	d021      	beq.n	801c2f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801c2b2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801c2b4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801c2b8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801c2ba:	fb05 fb0b 	mul.w	fp, r5, fp
 801c2be:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801c2c0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c2c4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801c2c6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c2ca:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c2ce:	fb05 fa0a 	mul.w	sl, r5, sl
 801c2d2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c2d6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c2da:	44de      	add	lr, fp
 801c2dc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c2e0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c2e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c2e8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c2ec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c2f0:	ea4e 050a 	orr.w	r5, lr, sl
 801c2f4:	950c      	str	r5, [sp, #48]	@ 0x30
 801c2f6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c2f8:	2dff      	cmp	r5, #255	@ 0xff
 801c2fa:	d021      	beq.n	801c340 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801c2fc:	9d08      	ldr	r5, [sp, #32]
 801c2fe:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801c302:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c304:	fb05 fb0b 	mul.w	fp, r5, fp
 801c308:	9d08      	ldr	r5, [sp, #32]
 801c30a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c30e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c310:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c314:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c318:	fb05 fa0a 	mul.w	sl, r5, sl
 801c31c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c320:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c324:	44de      	add	lr, fp
 801c326:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c32a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c32e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c332:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c336:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c33a:	ea4e 050a 	orr.w	r5, lr, sl
 801c33e:	9508      	str	r5, [sp, #32]
 801c340:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c342:	2dff      	cmp	r5, #255	@ 0xff
 801c344:	d021      	beq.n	801c38a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801c346:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c348:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801c34c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c34e:	fb05 fb0b 	mul.w	fp, r5, fp
 801c352:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c354:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c358:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c35a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c35e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c362:	fb05 fa0a 	mul.w	sl, r5, sl
 801c366:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c36a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c36e:	44de      	add	lr, fp
 801c370:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c374:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c378:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c37c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c380:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c384:	ea4e 050a 	orr.w	r5, lr, sl
 801c388:	950d      	str	r5, [sp, #52]	@ 0x34
 801c38a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801c38c:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801c390:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801c394:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c398:	9d08      	ldr	r5, [sp, #32]
 801c39a:	fb08 fc0c 	mul.w	ip, r8, ip
 801c39e:	fb03 cc0e 	mla	ip, r3, lr, ip
 801c3a2:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801c3a6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c3a8:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c3ac:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801c3b0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801c3b2:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c3b6:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801c3ba:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801c3bc:	fb08 f80e 	mul.w	r8, r8, lr
 801c3c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c3c4:	fb03 8202 	mla	r2, r3, r2, r8
 801c3c8:	9b08      	ldr	r3, [sp, #32]
 801c3ca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3ce:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801c3d2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c3d4:	fb01 220a 	mla	r2, r1, sl, r2
 801c3d8:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801c3dc:	883b      	ldrh	r3, [r7, #0]
 801c3de:	fb09 2901 	mla	r9, r9, r1, r2
 801c3e2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c3e4:	1219      	asrs	r1, r3, #8
 801c3e6:	4342      	muls	r2, r0
 801c3e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c3ec:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801c3f0:	1c50      	adds	r0, r2, #1
 801c3f2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c3f6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801c3fa:	ea4c 0c09 	orr.w	ip, ip, r9
 801c3fe:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801c402:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801c406:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801c40a:	fa5f fc8c 	uxtb.w	ip, ip
 801c40e:	fb12 f205 	smulbb	r2, r2, r5
 801c412:	b2c0      	uxtb	r0, r0
 801c414:	fb1c fc05 	smulbb	ip, ip, r5
 801c418:	fb01 2100 	mla	r1, r1, r0, r2
 801c41c:	10da      	asrs	r2, r3, #3
 801c41e:	fb1e fe05 	smulbb	lr, lr, r5
 801c422:	00db      	lsls	r3, r3, #3
 801c424:	b289      	uxth	r1, r1
 801c426:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c42a:	b2db      	uxtb	r3, r3
 801c42c:	fb02 e200 	mla	r2, r2, r0, lr
 801c430:	fb03 c300 	mla	r3, r3, r0, ip
 801c434:	b292      	uxth	r2, r2
 801c436:	fa1f fc83 	uxth.w	ip, r3
 801c43a:	1c4b      	adds	r3, r1, #1
 801c43c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c440:	f10c 0301 	add.w	r3, ip, #1
 801c444:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801c448:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801c44c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c450:	430b      	orrs	r3, r1
 801c452:	1c51      	adds	r1, r2, #1
 801c454:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c458:	0952      	lsrs	r2, r2, #5
 801c45a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c45e:	4313      	orrs	r3, r2
 801c460:	803b      	strh	r3, [r7, #0]
 801c462:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c464:	3702      	adds	r7, #2
 801c466:	441c      	add	r4, r3
 801c468:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c46a:	441e      	add	r6, r3
 801c46c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c46e:	3b01      	subs	r3, #1
 801c470:	9318      	str	r3, [sp, #96]	@ 0x60
 801c472:	e698      	b.n	801c1a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c474:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c476:	441c      	add	r4, r3
 801c478:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c47a:	441e      	add	r6, r3
 801c47c:	9b07      	ldr	r3, [sp, #28]
 801c47e:	3b01      	subs	r3, #1
 801c480:	9307      	str	r3, [sp, #28]
 801c482:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c484:	3302      	adds	r3, #2
 801c486:	930a      	str	r3, [sp, #40]	@ 0x28
 801c488:	e66d      	b.n	801c166 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801c48a:	d023      	beq.n	801c4d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801c48c:	9b07      	ldr	r3, [sp, #28]
 801c48e:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801c490:	3b01      	subs	r3, #1
 801c492:	fb00 4003 	mla	r0, r0, r3, r4
 801c496:	1400      	asrs	r0, r0, #16
 801c498:	f53f ae82 	bmi.w	801c1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c49c:	3901      	subs	r1, #1
 801c49e:	4288      	cmp	r0, r1
 801c4a0:	f6bf ae7e 	bge.w	801c1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c4a4:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801c4a6:	fb01 6303 	mla	r3, r1, r3, r6
 801c4aa:	141b      	asrs	r3, r3, #16
 801c4ac:	f53f ae78 	bmi.w	801c1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c4b0:	3a01      	subs	r2, #1
 801c4b2:	4293      	cmp	r3, r2
 801c4b4:	f6bf ae74 	bge.w	801c1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c4b8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c4bc:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801c4c0:	f1bb 0f00 	cmp.w	fp, #0
 801c4c4:	dc6c      	bgt.n	801c5a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801c4c6:	9b07      	ldr	r3, [sp, #28]
 801c4c8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801c4cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c4ce:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801c4d2:	930a      	str	r3, [sp, #40]	@ 0x28
 801c4d4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c4d6:	2b00      	cmp	r3, #0
 801c4d8:	f340 81b3 	ble.w	801c842 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801c4dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c4e0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c4e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c4e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c4ea:	eef0 6a62 	vmov.f32	s13, s5
 801c4ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c4f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c4f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c4fa:	ee16 4a90 	vmov	r4, s13
 801c4fe:	eef0 6a43 	vmov.f32	s13, s6
 801c502:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c506:	ee16 6a90 	vmov	r6, s13
 801c50a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c50e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c512:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c516:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c51a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c51e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c522:	ee12 2a90 	vmov	r2, s5
 801c526:	eef0 2a47 	vmov.f32	s5, s14
 801c52a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c52e:	ee13 2a10 	vmov	r2, s6
 801c532:	9329      	str	r3, [sp, #164]	@ 0xa4
 801c534:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c536:	eeb0 3a67 	vmov.f32	s6, s15
 801c53a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c53e:	932a      	str	r3, [sp, #168]	@ 0xa8
 801c540:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c542:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801c544:	3b01      	subs	r3, #1
 801c546:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c548:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c54a:	bf08      	it	eq
 801c54c:	4613      	moveq	r3, r2
 801c54e:	9307      	str	r3, [sp, #28]
 801c550:	e5fb      	b.n	801c14a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c552:	2900      	cmp	r1, #0
 801c554:	f43f ae6b 	beq.w	801c22e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c558:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801c55c:	9308      	str	r3, [sp, #32]
 801c55e:	0e1b      	lsrs	r3, r3, #24
 801c560:	9311      	str	r3, [sp, #68]	@ 0x44
 801c562:	e664      	b.n	801c22e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c564:	f112 0801 	adds.w	r8, r2, #1
 801c568:	f53f af7b 	bmi.w	801c462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c56c:	4543      	cmp	r3, r8
 801c56e:	f6ff af78 	blt.w	801c462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c572:	f11c 0801 	adds.w	r8, ip, #1
 801c576:	f53f af74 	bmi.w	801c462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c57a:	45c6      	cmp	lr, r8
 801c57c:	f6ff af71 	blt.w	801c462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c580:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801c582:	b21b      	sxth	r3, r3
 801c584:	9201      	str	r2, [sp, #4]
 801c586:	fa0f f28e 	sxth.w	r2, lr
 801c58a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801c58e:	e9cd c002 	strd	ip, r0, [sp, #8]
 801c592:	9200      	str	r2, [sp, #0]
 801c594:	4639      	mov	r1, r7
 801c596:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c598:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801c59a:	f7ff fc79 	bl	801be90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801c59e:	e760      	b.n	801c462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801c5a0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801c5a2:	1427      	asrs	r7, r4, #16
 801c5a4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c5a6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c5aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c5ae:	1433      	asrs	r3, r6, #16
 801c5b0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c5b4:	fb01 7303 	mla	r3, r1, r3, r7
 801c5b8:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801c5bc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801c5c0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c5c4:	2a00      	cmp	r2, #0
 801c5c6:	f000 8133 	beq.w	801c830 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801c5ca:	687d      	ldr	r5, [r7, #4]
 801c5cc:	950e      	str	r5, [sp, #56]	@ 0x38
 801c5ce:	0e2d      	lsrs	r5, r5, #24
 801c5d0:	9515      	str	r5, [sp, #84]	@ 0x54
 801c5d2:	b178      	cbz	r0, 801c5f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801c5d4:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801c5d8:	3901      	subs	r1, #1
 801c5da:	0089      	lsls	r1, r1, #2
 801c5dc:	3104      	adds	r1, #4
 801c5de:	eb07 0e01 	add.w	lr, r7, r1
 801c5e2:	5879      	ldr	r1, [r7, r1]
 801c5e4:	9109      	str	r1, [sp, #36]	@ 0x24
 801c5e6:	0e09      	lsrs	r1, r1, #24
 801c5e8:	9112      	str	r1, [sp, #72]	@ 0x48
 801c5ea:	f8de 1004 	ldr.w	r1, [lr, #4]
 801c5ee:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c5f0:	0e09      	lsrs	r1, r1, #24
 801c5f2:	9116      	str	r1, [sp, #88]	@ 0x58
 801c5f4:	b292      	uxth	r2, r2
 801c5f6:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801c5f8:	b280      	uxth	r0, r0
 801c5fa:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c5fc:	fb02 f800 	mul.w	r8, r2, r0
 801c600:	0112      	lsls	r2, r2, #4
 801c602:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c606:	eba2 0e08 	sub.w	lr, r2, r8
 801c60a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c60e:	b280      	uxth	r0, r0
 801c610:	fa1f fe8e 	uxth.w	lr, lr
 801c614:	1a12      	subs	r2, r2, r0
 801c616:	fb0e f101 	mul.w	r1, lr, r1
 801c61a:	b292      	uxth	r2, r2
 801c61c:	fb02 110c 	mla	r1, r2, ip, r1
 801c620:	fb00 1105 	mla	r1, r0, r5, r1
 801c624:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c626:	fb08 1105 	mla	r1, r8, r5, r1
 801c62a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c62e:	2900      	cmp	r1, #0
 801c630:	f000 80f5 	beq.w	801c81e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801c634:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801c638:	d019      	beq.n	801c66e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801c63a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c63e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c642:	fb0c fa0a 	mul.w	sl, ip, sl
 801c646:	fb0c fc03 	mul.w	ip, ip, r3
 801c64a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c64e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c652:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801c656:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c65a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c65e:	4453      	add	r3, sl
 801c660:	0a3f      	lsrs	r7, r7, #8
 801c662:	0a1b      	lsrs	r3, r3, #8
 801c664:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c668:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c66c:	433b      	orrs	r3, r7
 801c66e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801c670:	2dff      	cmp	r5, #255	@ 0xff
 801c672:	d020      	beq.n	801c6b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801c674:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c676:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c67a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801c67c:	436f      	muls	r7, r5
 801c67e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c680:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c684:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c688:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801c68a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c68e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c692:	fb05 fa0a 	mul.w	sl, r5, sl
 801c696:	44bc      	add	ip, r7
 801c698:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c69c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c6a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c6a4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c6a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c6ac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c6b0:	ea4c 050a 	orr.w	r5, ip, sl
 801c6b4:	950e      	str	r5, [sp, #56]	@ 0x38
 801c6b6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c6b8:	2dff      	cmp	r5, #255	@ 0xff
 801c6ba:	d020      	beq.n	801c6fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801c6bc:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c6be:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c6c2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c6c4:	436f      	muls	r7, r5
 801c6c6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c6c8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c6cc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c6d0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c6d2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c6d6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c6da:	fb05 fa0a 	mul.w	sl, r5, sl
 801c6de:	44bc      	add	ip, r7
 801c6e0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c6e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c6e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c6ec:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c6f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c6f4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c6f8:	ea4c 050a 	orr.w	r5, ip, sl
 801c6fc:	9509      	str	r5, [sp, #36]	@ 0x24
 801c6fe:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c700:	2dff      	cmp	r5, #255	@ 0xff
 801c702:	d020      	beq.n	801c746 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801c704:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c706:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c70a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c70c:	436f      	muls	r7, r5
 801c70e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c710:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c714:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c718:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c71a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c71e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c722:	fb05 fa0a 	mul.w	sl, r5, sl
 801c726:	44bc      	add	ip, r7
 801c728:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c72c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c730:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c734:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c738:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c73c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c740:	ea4c 050a 	orr.w	r5, ip, sl
 801c744:	950f      	str	r5, [sp, #60]	@ 0x3c
 801c746:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c748:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c74c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c750:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c754:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c756:	fb0e f707 	mul.w	r7, lr, r7
 801c75a:	fb02 770c 	mla	r7, r2, ip, r7
 801c75e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c762:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c764:	fb00 770c 	mla	r7, r0, ip, r7
 801c768:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c76c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c76e:	fb08 770c 	mla	r7, r8, ip, r7
 801c772:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801c776:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801c778:	fb0e fe0c 	mul.w	lr, lr, ip
 801c77c:	0a3f      	lsrs	r7, r7, #8
 801c77e:	fb02 e303 	mla	r3, r2, r3, lr
 801c782:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c784:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c788:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c78c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c78e:	fb00 330a 	mla	r3, r0, sl, r3
 801c792:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801c796:	f8b9 0000 	ldrh.w	r0, [r9]
 801c79a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c79e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c7a0:	1202      	asrs	r2, r0, #8
 801c7a2:	4359      	muls	r1, r3
 801c7a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c7a8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c7ac:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c7b0:	1c4b      	adds	r3, r1, #1
 801c7b2:	ea47 070c 	orr.w	r7, r7, ip
 801c7b6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c7ba:	0c3b      	lsrs	r3, r7, #16
 801c7bc:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801c7c0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801c7c4:	b2ff      	uxtb	r7, r7
 801c7c6:	fb13 f305 	smulbb	r3, r3, r5
 801c7ca:	b2c9      	uxtb	r1, r1
 801c7cc:	fb17 f705 	smulbb	r7, r7, r5
 801c7d0:	fb02 3201 	mla	r2, r2, r1, r3
 801c7d4:	10c3      	asrs	r3, r0, #3
 801c7d6:	fb1c fc05 	smulbb	ip, ip, r5
 801c7da:	00c0      	lsls	r0, r0, #3
 801c7dc:	b292      	uxth	r2, r2
 801c7de:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c7e2:	b2c0      	uxtb	r0, r0
 801c7e4:	fb03 c301 	mla	r3, r3, r1, ip
 801c7e8:	fb00 7001 	mla	r0, r0, r1, r7
 801c7ec:	1c51      	adds	r1, r2, #1
 801c7ee:	b29b      	uxth	r3, r3
 801c7f0:	b280      	uxth	r0, r0
 801c7f2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c7f6:	f100 0c01 	add.w	ip, r0, #1
 801c7fa:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801c7fe:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801c802:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c806:	ea4c 0202 	orr.w	r2, ip, r2
 801c80a:	f103 0c01 	add.w	ip, r3, #1
 801c80e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801c812:	095b      	lsrs	r3, r3, #5
 801c814:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c818:	431a      	orrs	r2, r3
 801c81a:	f8a9 2000 	strh.w	r2, [r9]
 801c81e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c820:	f109 0902 	add.w	r9, r9, #2
 801c824:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c828:	441c      	add	r4, r3
 801c82a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c82c:	441e      	add	r6, r3
 801c82e:	e647      	b.n	801c4c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801c830:	2800      	cmp	r0, #0
 801c832:	f43f aedf 	beq.w	801c5f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801c836:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801c83a:	9109      	str	r1, [sp, #36]	@ 0x24
 801c83c:	0e09      	lsrs	r1, r1, #24
 801c83e:	9112      	str	r1, [sp, #72]	@ 0x48
 801c840:	e6d8      	b.n	801c5f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801c842:	b01d      	add	sp, #116	@ 0x74
 801c844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c848 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801c848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c84c:	b085      	sub	sp, #20
 801c84e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801c852:	9102      	str	r1, [sp, #8]
 801c854:	2c00      	cmp	r4, #0
 801c856:	fb04 7103 	mla	r1, r4, r3, r7
 801c85a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801c85e:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801c862:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801c866:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801c86a:	f2c0 810c 	blt.w	801ca86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801c86e:	45a6      	cmp	lr, r4
 801c870:	f340 8109 	ble.w	801ca86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801c874:	2f00      	cmp	r7, #0
 801c876:	f2c0 8104 	blt.w	801ca82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801c87a:	42bb      	cmp	r3, r7
 801c87c:	f340 8101 	ble.w	801ca82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801c880:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801c884:	1c7a      	adds	r2, r7, #1
 801c886:	f100 8101 	bmi.w	801ca8c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801c88a:	4293      	cmp	r3, r2
 801c88c:	f340 80fe 	ble.w	801ca8c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801c890:	2e00      	cmp	r6, #0
 801c892:	f000 80fd 	beq.w	801ca90 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801c896:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801c89a:	3401      	adds	r4, #1
 801c89c:	f100 80fc 	bmi.w	801ca98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801c8a0:	45a6      	cmp	lr, r4
 801c8a2:	f340 80f9 	ble.w	801ca98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801c8a6:	2800      	cmp	r0, #0
 801c8a8:	f000 80f9 	beq.w	801ca9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801c8ac:	2f00      	cmp	r7, #0
 801c8ae:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801c8b2:	f2c0 80ef 	blt.w	801ca94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801c8b6:	42bb      	cmp	r3, r7
 801c8b8:	f340 80ec 	ble.w	801ca94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801c8bc:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801c8c0:	3701      	adds	r7, #1
 801c8c2:	f100 80ef 	bmi.w	801caa4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801c8c6:	42bb      	cmp	r3, r7
 801c8c8:	f340 80ec 	ble.w	801caa4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801c8cc:	2e00      	cmp	r6, #0
 801c8ce:	f000 80eb 	beq.w	801caa8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801c8d2:	6852      	ldr	r2, [r2, #4]
 801c8d4:	b2b6      	uxth	r6, r6
 801c8d6:	b280      	uxth	r0, r0
 801c8d8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801c8dc:	fb00 fe06 	mul.w	lr, r0, r6
 801c8e0:	0136      	lsls	r6, r6, #4
 801c8e2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801c8e6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801c8ea:	eba6 070e 	sub.w	r7, r6, lr
 801c8ee:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801c8f2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801c8f6:	b280      	uxth	r0, r0
 801c8f8:	b2bf      	uxth	r7, r7
 801c8fa:	1a1b      	subs	r3, r3, r0
 801c8fc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801c900:	fb07 f60a 	mul.w	r6, r7, sl
 801c904:	b29b      	uxth	r3, r3
 801c906:	fb0b 6603 	mla	r6, fp, r3, r6
 801c90a:	fb00 6609 	mla	r6, r0, r9, r6
 801c90e:	fb0e 6608 	mla	r6, lr, r8, r6
 801c912:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801c916:	9600      	str	r6, [sp, #0]
 801c918:	2e00      	cmp	r6, #0
 801c91a:	f000 80af 	beq.w	801ca7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801c91e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c922:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801c926:	9e02      	ldr	r6, [sp, #8]
 801c928:	fb0b fc0c 	mul.w	ip, fp, ip
 801c92c:	fb0b f505 	mul.w	r5, fp, r5
 801c930:	8836      	ldrh	r6, [r6, #0]
 801c932:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801c936:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c93a:	9501      	str	r5, [sp, #4]
 801c93c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801c940:	44dc      	add	ip, fp
 801c942:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c946:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801c94a:	9503      	str	r5, [sp, #12]
 801c94c:	9d01      	ldr	r5, [sp, #4]
 801c94e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801c952:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c956:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801c95a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c95e:	fb0a fc0c 	mul.w	ip, sl, ip
 801c962:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801c966:	fb0a fa01 	mul.w	sl, sl, r1
 801c96a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801c96e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c972:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801c976:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c97a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801c97e:	4465      	add	r5, ip
 801c980:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c984:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801c988:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c98c:	fb09 fc0c 	mul.w	ip, r9, ip
 801c990:	0a2d      	lsrs	r5, r5, #8
 801c992:	fb09 f904 	mul.w	r9, r9, r4
 801c996:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c99a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801c99e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c9a2:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801c9a6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c9aa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801c9ae:	437d      	muls	r5, r7
 801c9b0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801c9b4:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801c9b8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801c9bc:	4461      	add	r1, ip
 801c9be:	fb08 f404 	mul.w	r4, r8, r4
 801c9c2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c9c6:	fb08 f802 	mul.w	r8, r8, r2
 801c9ca:	0a09      	lsrs	r1, r1, #8
 801c9cc:	0a22      	lsrs	r2, r4, #8
 801c9ce:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801c9d2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801c9d6:	fb07 f70a 	mul.w	r7, r7, sl
 801c9da:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801c9de:	4414      	add	r4, r2
 801c9e0:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801c9e4:	0a24      	lsrs	r4, r4, #8
 801c9e6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801c9ea:	9a03      	ldr	r2, [sp, #12]
 801c9ec:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801c9f0:	fb02 5503 	mla	r5, r2, r3, r5
 801c9f4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801c9f8:	fb04 540e 	mla	r4, r4, lr, r5
 801c9fc:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801ca00:	fb01 4100 	mla	r1, r1, r0, r4
 801ca04:	0a09      	lsrs	r1, r1, #8
 801ca06:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801ca0a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801ca0e:	fb03 7101 	mla	r1, r3, r1, r7
 801ca12:	9b00      	ldr	r3, [sp, #0]
 801ca14:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ca18:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801ca1c:	43da      	mvns	r2, r3
 801ca1e:	1233      	asrs	r3, r6, #8
 801ca20:	fb00 e101 	mla	r1, r0, r1, lr
 801ca24:	10f0      	asrs	r0, r6, #3
 801ca26:	b2d2      	uxtb	r2, r2
 801ca28:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801ca2c:	0a09      	lsrs	r1, r1, #8
 801ca2e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ca32:	00f6      	lsls	r6, r6, #3
 801ca34:	4353      	muls	r3, r2
 801ca36:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ca3a:	4350      	muls	r0, r2
 801ca3c:	b2f6      	uxtb	r6, r6
 801ca3e:	4321      	orrs	r1, r4
 801ca40:	4356      	muls	r6, r2
 801ca42:	1c5a      	adds	r2, r3, #1
 801ca44:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ca48:	0c0b      	lsrs	r3, r1, #16
 801ca4a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ca4e:	1c42      	adds	r2, r0, #1
 801ca50:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ca54:	0a0a      	lsrs	r2, r1, #8
 801ca56:	021b      	lsls	r3, r3, #8
 801ca58:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ca5c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801ca60:	00d2      	lsls	r2, r2, #3
 801ca62:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ca66:	4313      	orrs	r3, r2
 801ca68:	1c72      	adds	r2, r6, #1
 801ca6a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ca6e:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801ca72:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801ca76:	4319      	orrs	r1, r3
 801ca78:	9b02      	ldr	r3, [sp, #8]
 801ca7a:	8019      	strh	r1, [r3, #0]
 801ca7c:	b005      	add	sp, #20
 801ca7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca82:	2500      	movs	r5, #0
 801ca84:	e6fe      	b.n	801c884 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801ca86:	2100      	movs	r1, #0
 801ca88:	460d      	mov	r5, r1
 801ca8a:	e706      	b.n	801c89a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ca8c:	2100      	movs	r1, #0
 801ca8e:	e704      	b.n	801c89a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ca90:	4631      	mov	r1, r6
 801ca92:	e702      	b.n	801c89a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ca94:	2400      	movs	r4, #0
 801ca96:	e713      	b.n	801c8c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801ca98:	2200      	movs	r2, #0
 801ca9a:	4614      	mov	r4, r2
 801ca9c:	e71a      	b.n	801c8d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ca9e:	4602      	mov	r2, r0
 801caa0:	4604      	mov	r4, r0
 801caa2:	e717      	b.n	801c8d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801caa4:	2200      	movs	r2, #0
 801caa6:	e715      	b.n	801c8d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801caa8:	4632      	mov	r2, r6
 801caaa:	e713      	b.n	801c8d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

0801caac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801caac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cab0:	b09b      	sub	sp, #108	@ 0x6c
 801cab2:	9218      	str	r2, [sp, #96]	@ 0x60
 801cab4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801cab6:	9019      	str	r0, [sp, #100]	@ 0x64
 801cab8:	9116      	str	r1, [sp, #88]	@ 0x58
 801caba:	6850      	ldr	r0, [r2, #4]
 801cabc:	9307      	str	r3, [sp, #28]
 801cabe:	6812      	ldr	r2, [r2, #0]
 801cac0:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801cac4:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801cac8:	fb00 1303 	mla	r3, r0, r3, r1
 801cacc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cad0:	930a      	str	r3, [sp, #40]	@ 0x28
 801cad2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801cad4:	681b      	ldr	r3, [r3, #0]
 801cad6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cad8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801cada:	2b00      	cmp	r3, #0
 801cadc:	dc03      	bgt.n	801cae6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cade:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801cae0:	2b00      	cmp	r3, #0
 801cae2:	f340 8387 	ble.w	801d1f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801cae6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801cae8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801caec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801caf0:	1e48      	subs	r0, r1, #1
 801caf2:	1e57      	subs	r7, r2, #1
 801caf4:	9b07      	ldr	r3, [sp, #28]
 801caf6:	2b00      	cmp	r3, #0
 801caf8:	f340 8166 	ble.w	801cdc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801cafc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801cb00:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cb04:	d406      	bmi.n	801cb14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801cb06:	4584      	cmp	ip, r0
 801cb08:	da04      	bge.n	801cb14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801cb0a:	2b00      	cmp	r3, #0
 801cb0c:	db02      	blt.n	801cb14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801cb0e:	42bb      	cmp	r3, r7
 801cb10:	f2c0 815b 	blt.w	801cdca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801cb14:	f11c 0c01 	adds.w	ip, ip, #1
 801cb18:	f100 814b 	bmi.w	801cdb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801cb1c:	4561      	cmp	r1, ip
 801cb1e:	f2c0 8148 	blt.w	801cdb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801cb22:	3301      	adds	r3, #1
 801cb24:	f100 8145 	bmi.w	801cdb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801cb28:	429a      	cmp	r2, r3
 801cb2a:	f2c0 8142 	blt.w	801cdb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801cb2e:	9b07      	ldr	r3, [sp, #28]
 801cb30:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801cb32:	9317      	str	r3, [sp, #92]	@ 0x5c
 801cb34:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801cb36:	2b00      	cmp	r3, #0
 801cb38:	f340 8165 	ble.w	801ce06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cb3c:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801cb3e:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801cb42:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801cb44:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801cb48:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801cb4c:	1422      	asrs	r2, r4, #16
 801cb4e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801cb52:	689b      	ldr	r3, [r3, #8]
 801cb54:	f100 81d5 	bmi.w	801cf02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801cb58:	f103 38ff 	add.w	r8, r3, #4294967295
 801cb5c:	4542      	cmp	r2, r8
 801cb5e:	f280 81d0 	bge.w	801cf02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801cb62:	f1bc 0f00 	cmp.w	ip, #0
 801cb66:	f2c0 81cc 	blt.w	801cf02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801cb6a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801cb6e:	45c4      	cmp	ip, r8
 801cb70:	f280 81c7 	bge.w	801cf02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801cb74:	b21b      	sxth	r3, r3
 801cb76:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801cb78:	fb0c 2203 	mla	r2, ip, r3, r2
 801cb7c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801cb80:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801cb84:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801cb88:	2900      	cmp	r1, #0
 801cb8a:	f000 8182 	beq.w	801ce92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801cb8e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801cb92:	950b      	str	r5, [sp, #44]	@ 0x2c
 801cb94:	0e2d      	lsrs	r5, r5, #24
 801cb96:	9512      	str	r5, [sp, #72]	@ 0x48
 801cb98:	b180      	cbz	r0, 801cbbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801cb9a:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801cb9e:	3b01      	subs	r3, #1
 801cba0:	009b      	lsls	r3, r3, #2
 801cba2:	3304      	adds	r3, #4
 801cba4:	eb08 0c03 	add.w	ip, r8, r3
 801cba8:	f858 3003 	ldr.w	r3, [r8, r3]
 801cbac:	9308      	str	r3, [sp, #32]
 801cbae:	0e1b      	lsrs	r3, r3, #24
 801cbb0:	9310      	str	r3, [sp, #64]	@ 0x40
 801cbb2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801cbb6:	930c      	str	r3, [sp, #48]	@ 0x30
 801cbb8:	0e1b      	lsrs	r3, r3, #24
 801cbba:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cbbc:	b289      	uxth	r1, r1
 801cbbe:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801cbc0:	b280      	uxth	r0, r0
 801cbc2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801cbc4:	fb01 f900 	mul.w	r9, r1, r0
 801cbc8:	0109      	lsls	r1, r1, #4
 801cbca:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801cbce:	eba1 0809 	sub.w	r8, r1, r9
 801cbd2:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801cbd6:	b280      	uxth	r0, r0
 801cbd8:	fa1f f888 	uxth.w	r8, r8
 801cbdc:	1a09      	subs	r1, r1, r0
 801cbde:	fb08 f303 	mul.w	r3, r8, r3
 801cbe2:	b289      	uxth	r1, r1
 801cbe4:	fb01 330e 	mla	r3, r1, lr, r3
 801cbe8:	fb00 3305 	mla	r3, r0, r5, r3
 801cbec:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801cbee:	fb09 3305 	mla	r3, r9, r5, r3
 801cbf2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cbf6:	2b00      	cmp	r3, #0
 801cbf8:	f000 80d2 	beq.w	801cda0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cbfc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801cc00:	d01b      	beq.n	801cc3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801cc02:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801cc06:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801cc0a:	fb0e fa0a 	mul.w	sl, lr, sl
 801cc0e:	fb0e fe02 	mul.w	lr, lr, r2
 801cc12:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801cc16:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801cc1a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801cc1e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801cc22:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801cc26:	4452      	add	r2, sl
 801cc28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cc2c:	0a12      	lsrs	r2, r2, #8
 801cc2e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801cc32:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801cc36:	ea42 020c 	orr.w	r2, r2, ip
 801cc3a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801cc3c:	2dff      	cmp	r5, #255	@ 0xff
 801cc3e:	d021      	beq.n	801cc84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801cc40:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801cc42:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801cc46:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801cc48:	fb05 fb0b 	mul.w	fp, r5, fp
 801cc4c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801cc4e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801cc52:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801cc54:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cc58:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801cc5c:	fb05 fa0a 	mul.w	sl, r5, sl
 801cc60:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801cc64:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801cc68:	44de      	add	lr, fp
 801cc6a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cc6e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cc72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cc76:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801cc7a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cc7e:	ea4e 050a 	orr.w	r5, lr, sl
 801cc82:	950b      	str	r5, [sp, #44]	@ 0x2c
 801cc84:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801cc86:	2dff      	cmp	r5, #255	@ 0xff
 801cc88:	d021      	beq.n	801ccce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801cc8a:	9d08      	ldr	r5, [sp, #32]
 801cc8c:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801cc90:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801cc92:	fb05 fb0b 	mul.w	fp, r5, fp
 801cc96:	9d08      	ldr	r5, [sp, #32]
 801cc98:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801cc9c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801cc9e:	fb05 fa0e 	mul.w	sl, r5, lr
 801cca2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cca6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ccaa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ccae:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ccb2:	44de      	add	lr, fp
 801ccb4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ccb8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ccbc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ccc0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ccc4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ccc8:	ea4e 050a 	orr.w	r5, lr, sl
 801cccc:	9508      	str	r5, [sp, #32]
 801ccce:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ccd0:	2dff      	cmp	r5, #255	@ 0xff
 801ccd2:	d021      	beq.n	801cd18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801ccd4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ccd6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801ccda:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ccdc:	fb05 fb0b 	mul.w	fp, r5, fp
 801cce0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801cce2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801cce6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801cce8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ccec:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ccf0:	fb05 fa0a 	mul.w	sl, r5, sl
 801ccf4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ccf8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ccfc:	44de      	add	lr, fp
 801ccfe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cd02:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cd06:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cd0a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801cd0e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cd12:	ea4e 050a 	orr.w	r5, lr, sl
 801cd16:	950c      	str	r5, [sp, #48]	@ 0x30
 801cd18:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801cd1a:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801cd1e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801cd22:	2bff      	cmp	r3, #255	@ 0xff
 801cd24:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801cd28:	9d08      	ldr	r5, [sp, #32]
 801cd2a:	fb08 fc0c 	mul.w	ip, r8, ip
 801cd2e:	fb01 cc0e 	mla	ip, r1, lr, ip
 801cd32:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801cd36:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801cd38:	fb00 cc0e 	mla	ip, r0, lr, ip
 801cd3c:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801cd40:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801cd42:	fb09 cc0e 	mla	ip, r9, lr, ip
 801cd46:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801cd4a:	fb08 f80e 	mul.w	r8, r8, lr
 801cd4e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd52:	fb01 8202 	mla	r2, r1, r2, r8
 801cd56:	9908      	ldr	r1, [sp, #32]
 801cd58:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd5c:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801cd60:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801cd62:	fb00 220a 	mla	r2, r0, sl, r2
 801cd66:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801cd6a:	fb09 2900 	mla	r9, r9, r0, r2
 801cd6e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cd72:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801cd76:	ea4c 0c09 	orr.w	ip, ip, r9
 801cd7a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801cd7e:	f040 8091 	bne.w	801cea4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cd82:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801cd86:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801cd8a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cd8e:	f022 0207 	bic.w	r2, r2, #7
 801cd92:	431a      	orrs	r2, r3
 801cd94:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801cd98:	ea4c 0c02 	orr.w	ip, ip, r2
 801cd9c:	f8a7 c000 	strh.w	ip, [r7]
 801cda0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801cda2:	3702      	adds	r7, #2
 801cda4:	441c      	add	r4, r3
 801cda6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cda8:	441e      	add	r6, r3
 801cdaa:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801cdac:	3b01      	subs	r3, #1
 801cdae:	9317      	str	r3, [sp, #92]	@ 0x5c
 801cdb0:	e6c0      	b.n	801cb34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cdb2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801cdb4:	441c      	add	r4, r3
 801cdb6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cdb8:	441e      	add	r6, r3
 801cdba:	9b07      	ldr	r3, [sp, #28]
 801cdbc:	3b01      	subs	r3, #1
 801cdbe:	9307      	str	r3, [sp, #28]
 801cdc0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cdc2:	3302      	adds	r3, #2
 801cdc4:	930a      	str	r3, [sp, #40]	@ 0x28
 801cdc6:	e695      	b.n	801caf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801cdc8:	d024      	beq.n	801ce14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801cdca:	9b07      	ldr	r3, [sp, #28]
 801cdcc:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801cdce:	3b01      	subs	r3, #1
 801cdd0:	fb00 4003 	mla	r0, r0, r3, r4
 801cdd4:	1400      	asrs	r0, r0, #16
 801cdd6:	f53f aeaa 	bmi.w	801cb2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801cdda:	3901      	subs	r1, #1
 801cddc:	4288      	cmp	r0, r1
 801cdde:	f6bf aea6 	bge.w	801cb2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801cde2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801cde4:	fb01 6303 	mla	r3, r1, r3, r6
 801cde8:	141b      	asrs	r3, r3, #16
 801cdea:	f53f aea0 	bmi.w	801cb2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801cdee:	3a01      	subs	r2, #1
 801cdf0:	4293      	cmp	r3, r2
 801cdf2:	f6bf ae9c 	bge.w	801cb2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801cdf6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801cdfa:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801cdfe:	f1bb 0f00 	cmp.w	fp, #0
 801ce02:	f300 809a 	bgt.w	801cf3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ce06:	9b07      	ldr	r3, [sp, #28]
 801ce08:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ce0c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ce0e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ce12:	930a      	str	r3, [sp, #40]	@ 0x28
 801ce14:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ce16:	2b00      	cmp	r3, #0
 801ce18:	f340 81ec 	ble.w	801d1f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801ce1c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ce20:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ce22:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ce26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ce2a:	eef0 6a62 	vmov.f32	s13, s5
 801ce2e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ce32:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ce36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ce3a:	ee16 4a90 	vmov	r4, s13
 801ce3e:	eef0 6a43 	vmov.f32	s13, s6
 801ce42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ce46:	ee16 6a90 	vmov	r6, s13
 801ce4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ce4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ce52:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ce56:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ce5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ce5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ce62:	ee12 2a90 	vmov	r2, s5
 801ce66:	eef0 2a47 	vmov.f32	s5, s14
 801ce6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce6e:	ee13 2a10 	vmov	r2, s6
 801ce72:	9327      	str	r3, [sp, #156]	@ 0x9c
 801ce74:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ce76:	eeb0 3a67 	vmov.f32	s6, s15
 801ce7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce7e:	9328      	str	r3, [sp, #160]	@ 0xa0
 801ce80:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ce82:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801ce84:	3b01      	subs	r3, #1
 801ce86:	9316      	str	r3, [sp, #88]	@ 0x58
 801ce88:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ce8a:	bf08      	it	eq
 801ce8c:	4613      	moveq	r3, r2
 801ce8e:	9307      	str	r3, [sp, #28]
 801ce90:	e622      	b.n	801cad8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ce92:	2800      	cmp	r0, #0
 801ce94:	f43f ae92 	beq.w	801cbbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ce98:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ce9c:	9308      	str	r3, [sp, #32]
 801ce9e:	0e1b      	lsrs	r3, r3, #24
 801cea0:	9310      	str	r3, [sp, #64]	@ 0x40
 801cea2:	e68b      	b.n	801cbbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801cea4:	8839      	ldrh	r1, [r7, #0]
 801cea6:	43db      	mvns	r3, r3
 801cea8:	4dd4      	ldr	r5, [pc, #848]	@ (801d1fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801ceaa:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801ceae:	fa5f f883 	uxtb.w	r8, r3
 801ceb2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801ceb6:	10c8      	asrs	r0, r1, #3
 801ceb8:	00cb      	lsls	r3, r1, #3
 801ceba:	fb0e fe08 	mul.w	lr, lr, r8
 801cebe:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801cec2:	b2db      	uxtb	r3, r3
 801cec4:	f10e 0101 	add.w	r1, lr, #1
 801cec8:	fb00 f008 	mul.w	r0, r0, r8
 801cecc:	fb03 f308 	mul.w	r3, r3, r8
 801ced0:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801ced4:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ced8:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801cedc:	f100 0e01 	add.w	lr, r0, #1
 801cee0:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801cee4:	b2c9      	uxtb	r1, r1
 801cee6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ceea:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801ceee:	00d2      	lsls	r2, r2, #3
 801cef0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cef4:	430a      	orrs	r2, r1
 801cef6:	1c59      	adds	r1, r3, #1
 801cef8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801cefc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801cf00:	e748      	b.n	801cd94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801cf02:	f112 0801 	adds.w	r8, r2, #1
 801cf06:	f53f af4b 	bmi.w	801cda0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cf0a:	4543      	cmp	r3, r8
 801cf0c:	f6ff af48 	blt.w	801cda0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cf10:	f11c 0801 	adds.w	r8, ip, #1
 801cf14:	f53f af44 	bmi.w	801cda0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cf18:	45c6      	cmp	lr, r8
 801cf1a:	f6ff af41 	blt.w	801cda0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cf1e:	b21b      	sxth	r3, r3
 801cf20:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801cf24:	fa0f f28e 	sxth.w	r2, lr
 801cf28:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801cf2c:	9200      	str	r2, [sp, #0]
 801cf2e:	4639      	mov	r1, r7
 801cf30:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801cf32:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801cf34:	f7ff fc88 	bl	801c848 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801cf38:	e732      	b.n	801cda0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cf3a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801cf3c:	1421      	asrs	r1, r4, #16
 801cf3e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801cf40:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cf44:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801cf48:	1433      	asrs	r3, r6, #16
 801cf4a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801cf4e:	fb07 1303 	mla	r3, r7, r3, r1
 801cf52:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801cf54:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801cf58:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801cf5c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801cf60:	2a00      	cmp	r2, #0
 801cf62:	f000 8108 	beq.w	801d176 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 801cf66:	684d      	ldr	r5, [r1, #4]
 801cf68:	950d      	str	r5, [sp, #52]	@ 0x34
 801cf6a:	0e2d      	lsrs	r5, r5, #24
 801cf6c:	9514      	str	r5, [sp, #80]	@ 0x50
 801cf6e:	b178      	cbz	r0, 801cf90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801cf70:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801cf74:	3f01      	subs	r7, #1
 801cf76:	00bf      	lsls	r7, r7, #2
 801cf78:	3704      	adds	r7, #4
 801cf7a:	eb01 0e07 	add.w	lr, r1, r7
 801cf7e:	59c9      	ldr	r1, [r1, r7]
 801cf80:	9109      	str	r1, [sp, #36]	@ 0x24
 801cf82:	0e09      	lsrs	r1, r1, #24
 801cf84:	9111      	str	r1, [sp, #68]	@ 0x44
 801cf86:	f8de 1004 	ldr.w	r1, [lr, #4]
 801cf8a:	910e      	str	r1, [sp, #56]	@ 0x38
 801cf8c:	0e09      	lsrs	r1, r1, #24
 801cf8e:	9115      	str	r1, [sp, #84]	@ 0x54
 801cf90:	b292      	uxth	r2, r2
 801cf92:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801cf94:	b280      	uxth	r0, r0
 801cf96:	fb02 f900 	mul.w	r9, r2, r0
 801cf9a:	0112      	lsls	r2, r2, #4
 801cf9c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801cfa0:	eba2 0e09 	sub.w	lr, r2, r9
 801cfa4:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801cfa8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cfaa:	b280      	uxth	r0, r0
 801cfac:	fa1f fe8e 	uxth.w	lr, lr
 801cfb0:	1a09      	subs	r1, r1, r0
 801cfb2:	fb0e f202 	mul.w	r2, lr, r2
 801cfb6:	b289      	uxth	r1, r1
 801cfb8:	fb01 220c 	mla	r2, r1, ip, r2
 801cfbc:	fb00 2205 	mla	r2, r0, r5, r2
 801cfc0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801cfc2:	fb09 2205 	mla	r2, r9, r5, r2
 801cfc6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801cfca:	2a00      	cmp	r2, #0
 801cfcc:	f000 80ca 	beq.w	801d164 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801cfd0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801cfd4:	d019      	beq.n	801d00a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801cfd6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801cfda:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801cfde:	fb0c fa0a 	mul.w	sl, ip, sl
 801cfe2:	fb0c fc03 	mul.w	ip, ip, r3
 801cfe6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801cfea:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801cfee:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801cff2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801cff6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801cffa:	4453      	add	r3, sl
 801cffc:	0a3f      	lsrs	r7, r7, #8
 801cffe:	0a1b      	lsrs	r3, r3, #8
 801d000:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801d004:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d008:	433b      	orrs	r3, r7
 801d00a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801d00c:	2dff      	cmp	r5, #255	@ 0xff
 801d00e:	d020      	beq.n	801d052 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801d010:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d012:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801d016:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801d018:	436f      	muls	r7, r5
 801d01a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d01c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d020:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801d024:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801d026:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d02a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d02e:	fb05 fa0a 	mul.w	sl, r5, sl
 801d032:	44bc      	add	ip, r7
 801d034:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d038:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d03c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d040:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d044:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d048:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d04c:	ea4c 050a 	orr.w	r5, ip, sl
 801d050:	950d      	str	r5, [sp, #52]	@ 0x34
 801d052:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d054:	2dff      	cmp	r5, #255	@ 0xff
 801d056:	d020      	beq.n	801d09a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801d058:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801d05a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801d05e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d060:	436f      	muls	r7, r5
 801d062:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801d064:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801d068:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d06a:	fb05 fa0c 	mul.w	sl, r5, ip
 801d06e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d072:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d076:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d07a:	44bc      	add	ip, r7
 801d07c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d080:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d084:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d088:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d08c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d090:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d094:	ea4c 050a 	orr.w	r5, ip, sl
 801d098:	9509      	str	r5, [sp, #36]	@ 0x24
 801d09a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801d09c:	2dff      	cmp	r5, #255	@ 0xff
 801d09e:	d020      	beq.n	801d0e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801d0a0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d0a2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801d0a6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801d0a8:	436f      	muls	r7, r5
 801d0aa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d0ac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d0b0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801d0b4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801d0b6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d0ba:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d0be:	fb05 fa0a 	mul.w	sl, r5, sl
 801d0c2:	44bc      	add	ip, r7
 801d0c4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d0c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d0cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d0d0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d0d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d0d8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d0dc:	ea4c 050a 	orr.w	r5, ip, sl
 801d0e0:	950e      	str	r5, [sp, #56]	@ 0x38
 801d0e2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d0e4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801d0e8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d0ec:	2aff      	cmp	r2, #255	@ 0xff
 801d0ee:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801d0f2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801d0f4:	fb0e f707 	mul.w	r7, lr, r7
 801d0f8:	fb01 770c 	mla	r7, r1, ip, r7
 801d0fc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801d100:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d102:	fb00 770c 	mla	r7, r0, ip, r7
 801d106:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801d10a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d10c:	fb09 770c 	mla	r7, r9, ip, r7
 801d110:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801d114:	fb0e fe0c 	mul.w	lr, lr, ip
 801d118:	ea4f 2717 	mov.w	r7, r7, lsr #8
 801d11c:	fb01 e303 	mla	r3, r1, r3, lr
 801d120:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801d122:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801d126:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801d12a:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801d12c:	fb00 330a 	mla	r3, r0, sl, r3
 801d130:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801d134:	fb09 3c0c 	mla	ip, r9, ip, r3
 801d138:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d13c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801d140:	ea47 070c 	orr.w	r7, r7, ip
 801d144:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801d148:	d11e      	bne.n	801d188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 801d14a:	097a      	lsrs	r2, r7, #5
 801d14c:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801d150:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801d154:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d158:	f023 0307 	bic.w	r3, r3, #7
 801d15c:	4313      	orrs	r3, r2
 801d15e:	431f      	orrs	r7, r3
 801d160:	f8a8 7000 	strh.w	r7, [r8]
 801d164:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801d166:	f108 0802 	add.w	r8, r8, #2
 801d16a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d16e:	441c      	add	r4, r3
 801d170:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d172:	441e      	add	r6, r3
 801d174:	e643      	b.n	801cdfe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801d176:	2800      	cmp	r0, #0
 801d178:	f43f af0a 	beq.w	801cf90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801d17c:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801d180:	9109      	str	r1, [sp, #36]	@ 0x24
 801d182:	0e09      	lsrs	r1, r1, #24
 801d184:	9111      	str	r1, [sp, #68]	@ 0x44
 801d186:	e703      	b.n	801cf90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801d188:	f8b8 1000 	ldrh.w	r1, [r8]
 801d18c:	43d2      	mvns	r2, r2
 801d18e:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801d192:	fa5f fe82 	uxtb.w	lr, r2
 801d196:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d19a:	10c8      	asrs	r0, r1, #3
 801d19c:	00ca      	lsls	r2, r1, #3
 801d19e:	fb0c fc0e 	mul.w	ip, ip, lr
 801d1a2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d1a6:	b2d2      	uxtb	r2, r2
 801d1a8:	f10c 0101 	add.w	r1, ip, #1
 801d1ac:	fb00 f00e 	mul.w	r0, r0, lr
 801d1b0:	fb02 f20e 	mul.w	r2, r2, lr
 801d1b4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801d1b8:	0c39      	lsrs	r1, r7, #16
 801d1ba:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801d1be:	490f      	ldr	r1, [pc, #60]	@ (801d1fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801d1c0:	fa5f fc8c 	uxtb.w	ip, ip
 801d1c4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801d1c8:	1c41      	adds	r1, r0, #1
 801d1ca:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d1ce:	1c51      	adds	r1, r2, #1
 801d1d0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d1d4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d1d8:	00c0      	lsls	r0, r0, #3
 801d1da:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d1de:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d1e2:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801d1e6:	ea4c 0c00 	orr.w	ip, ip, r0
 801d1ea:	ea47 0c0c 	orr.w	ip, r7, ip
 801d1ee:	f8a8 c000 	strh.w	ip, [r8]
 801d1f2:	e7b7      	b.n	801d164 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801d1f4:	b01b      	add	sp, #108	@ 0x6c
 801d1f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d1fa:	bf00      	nop
 801d1fc:	fffff800 	.word	0xfffff800

0801d200 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801d200:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d204:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801d208:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801d20c:	2d00      	cmp	r5, #0
 801d20e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801d212:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801d216:	fb05 0e03 	mla	lr, r5, r3, r0
 801d21a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801d21e:	f2c0 808c 	blt.w	801d33a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801d222:	45a9      	cmp	r9, r5
 801d224:	f340 8089 	ble.w	801d33a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801d228:	2800      	cmp	r0, #0
 801d22a:	f2c0 8084 	blt.w	801d336 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801d22e:	4580      	cmp	r8, r0
 801d230:	f340 8081 	ble.w	801d336 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801d234:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801d238:	f01e 0f01 	tst.w	lr, #1
 801d23c:	5d16      	ldrb	r6, [r2, r4]
 801d23e:	bf0c      	ite	eq
 801d240:	f006 060f 	andeq.w	r6, r6, #15
 801d244:	1136      	asrne	r6, r6, #4
 801d246:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801d24a:	b2f6      	uxtb	r6, r6
 801d24c:	1c44      	adds	r4, r0, #1
 801d24e:	d477      	bmi.n	801d340 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801d250:	45a0      	cmp	r8, r4
 801d252:	dd75      	ble.n	801d340 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801d254:	2f00      	cmp	r7, #0
 801d256:	d075      	beq.n	801d344 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801d258:	f10e 0a01 	add.w	sl, lr, #1
 801d25c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801d260:	f01a 0f01 	tst.w	sl, #1
 801d264:	5d14      	ldrb	r4, [r2, r4]
 801d266:	bf0c      	ite	eq
 801d268:	f004 040f 	andeq.w	r4, r4, #15
 801d26c:	1124      	asrne	r4, r4, #4
 801d26e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801d272:	b2e4      	uxtb	r4, r4
 801d274:	3501      	adds	r5, #1
 801d276:	d469      	bmi.n	801d34c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801d278:	45a9      	cmp	r9, r5
 801d27a:	dd67      	ble.n	801d34c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801d27c:	f1bc 0f00 	cmp.w	ip, #0
 801d280:	d067      	beq.n	801d352 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801d282:	2800      	cmp	r0, #0
 801d284:	db60      	blt.n	801d348 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801d286:	4580      	cmp	r8, r0
 801d288:	dd5e      	ble.n	801d348 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801d28a:	eb03 090e 	add.w	r9, r3, lr
 801d28e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801d292:	f019 0f01 	tst.w	r9, #1
 801d296:	5d55      	ldrb	r5, [r2, r5]
 801d298:	bf0c      	ite	eq
 801d29a:	f005 050f 	andeq.w	r5, r5, #15
 801d29e:	112d      	asrne	r5, r5, #4
 801d2a0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801d2a4:	b2ed      	uxtb	r5, r5
 801d2a6:	3001      	adds	r0, #1
 801d2a8:	d456      	bmi.n	801d358 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801d2aa:	4580      	cmp	r8, r0
 801d2ac:	dd54      	ble.n	801d358 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801d2ae:	2f00      	cmp	r7, #0
 801d2b0:	d054      	beq.n	801d35c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801d2b2:	3301      	adds	r3, #1
 801d2b4:	449e      	add	lr, r3
 801d2b6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801d2ba:	f01e 0f01 	tst.w	lr, #1
 801d2be:	5cd0      	ldrb	r0, [r2, r3]
 801d2c0:	bf0c      	ite	eq
 801d2c2:	f000 000f 	andeq.w	r0, r0, #15
 801d2c6:	1100      	asrne	r0, r0, #4
 801d2c8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801d2cc:	b2c3      	uxtb	r3, r0
 801d2ce:	b2ba      	uxth	r2, r7
 801d2d0:	fa1f fc8c 	uxth.w	ip, ip
 801d2d4:	fb02 f00c 	mul.w	r0, r2, ip
 801d2d8:	0112      	lsls	r2, r2, #4
 801d2da:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801d2de:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801d2e2:	1a12      	subs	r2, r2, r0
 801d2e4:	fa1f fc8c 	uxth.w	ip, ip
 801d2e8:	b292      	uxth	r2, r2
 801d2ea:	eba7 070c 	sub.w	r7, r7, ip
 801d2ee:	4362      	muls	r2, r4
 801d2f0:	b2bf      	uxth	r7, r7
 801d2f2:	fb06 2207 	mla	r2, r6, r7, r2
 801d2f6:	fb0c 2505 	mla	r5, ip, r5, r2
 801d2fa:	fb00 5303 	mla	r3, r0, r3, r5
 801d2fe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d302:	b1b3      	cbz	r3, 801d332 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801d304:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801d308:	435a      	muls	r2, r3
 801d30a:	1c53      	adds	r3, r2, #1
 801d30c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d310:	4a2d      	ldr	r2, [pc, #180]	@ (801d3c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801d312:	121b      	asrs	r3, r3, #8
 801d314:	6812      	ldr	r2, [r2, #0]
 801d316:	2bff      	cmp	r3, #255	@ 0xff
 801d318:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801d31c:	d120      	bne.n	801d360 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801d31e:	0950      	lsrs	r0, r2, #5
 801d320:	4b2a      	ldr	r3, [pc, #168]	@ (801d3cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801d322:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d326:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d32a:	4033      	ands	r3, r6
 801d32c:	4318      	orrs	r0, r3
 801d32e:	4302      	orrs	r2, r0
 801d330:	800a      	strh	r2, [r1, #0]
 801d332:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d336:	2600      	movs	r6, #0
 801d338:	e788      	b.n	801d24c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801d33a:	2400      	movs	r4, #0
 801d33c:	4626      	mov	r6, r4
 801d33e:	e799      	b.n	801d274 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801d340:	2400      	movs	r4, #0
 801d342:	e797      	b.n	801d274 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801d344:	463c      	mov	r4, r7
 801d346:	e795      	b.n	801d274 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801d348:	2500      	movs	r5, #0
 801d34a:	e7ac      	b.n	801d2a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801d34c:	2300      	movs	r3, #0
 801d34e:	461d      	mov	r5, r3
 801d350:	e7bd      	b.n	801d2ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801d352:	4663      	mov	r3, ip
 801d354:	4665      	mov	r5, ip
 801d356:	e7ba      	b.n	801d2ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801d358:	2300      	movs	r3, #0
 801d35a:	e7b8      	b.n	801d2ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801d35c:	463b      	mov	r3, r7
 801d35e:	e7b6      	b.n	801d2ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801d360:	880d      	ldrh	r5, [r1, #0]
 801d362:	b29f      	uxth	r7, r3
 801d364:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801d368:	43db      	mvns	r3, r3
 801d36a:	122c      	asrs	r4, r5, #8
 801d36c:	fb10 f007 	smulbb	r0, r0, r7
 801d370:	b2db      	uxtb	r3, r3
 801d372:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801d376:	b2f6      	uxtb	r6, r6
 801d378:	b2d2      	uxtb	r2, r2
 801d37a:	fb04 0403 	mla	r4, r4, r3, r0
 801d37e:	10e8      	asrs	r0, r5, #3
 801d380:	fb12 f207 	smulbb	r2, r2, r7
 801d384:	00ed      	lsls	r5, r5, #3
 801d386:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d38a:	b2a4      	uxth	r4, r4
 801d38c:	fb16 f607 	smulbb	r6, r6, r7
 801d390:	b2ed      	uxtb	r5, r5
 801d392:	fb00 6603 	mla	r6, r0, r3, r6
 801d396:	fb05 2303 	mla	r3, r5, r3, r2
 801d39a:	b2b0      	uxth	r0, r6
 801d39c:	b29a      	uxth	r2, r3
 801d39e:	1c63      	adds	r3, r4, #1
 801d3a0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801d3a4:	1c53      	adds	r3, r2, #1
 801d3a6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d3aa:	1c42      	adds	r2, r0, #1
 801d3ac:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801d3b0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d3b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d3b8:	0940      	lsrs	r0, r0, #5
 801d3ba:	4323      	orrs	r3, r4
 801d3bc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d3c0:	4303      	orrs	r3, r0
 801d3c2:	800b      	strh	r3, [r1, #0]
 801d3c4:	e7b5      	b.n	801d332 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801d3c6:	bf00      	nop
 801d3c8:	200150b4 	.word	0x200150b4
 801d3cc:	00fff800 	.word	0x00fff800

0801d3d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d3d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d3d4:	b097      	sub	sp, #92	@ 0x5c
 801d3d6:	9214      	str	r2, [sp, #80]	@ 0x50
 801d3d8:	9309      	str	r3, [sp, #36]	@ 0x24
 801d3da:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801d3dc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801d3e0:	9015      	str	r0, [sp, #84]	@ 0x54
 801d3e2:	910d      	str	r1, [sp, #52]	@ 0x34
 801d3e4:	6850      	ldr	r0, [r2, #4]
 801d3e6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d3e8:	6812      	ldr	r2, [r2, #0]
 801d3ea:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801d3ee:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801d3f2:	fb00 1303 	mla	r3, r0, r3, r1
 801d3f6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801d3fa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d3fc:	689b      	ldr	r3, [r3, #8]
 801d3fe:	3301      	adds	r3, #1
 801d400:	f023 0301 	bic.w	r3, r3, #1
 801d404:	930a      	str	r3, [sp, #40]	@ 0x28
 801d406:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d408:	681f      	ldr	r7, [r3, #0]
 801d40a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d40c:	2b00      	cmp	r3, #0
 801d40e:	dc03      	bgt.n	801d418 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d410:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801d412:	2b00      	cmp	r3, #0
 801d414:	f340 8289 	ble.w	801d92a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801d418:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d41a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d41e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d422:	1e48      	subs	r0, r1, #1
 801d424:	f102 3cff 	add.w	ip, r2, #4294967295
 801d428:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d42a:	2b00      	cmp	r3, #0
 801d42c:	f340 80c5 	ble.w	801d5ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801d430:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d434:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d438:	d406      	bmi.n	801d448 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d43a:	4586      	cmp	lr, r0
 801d43c:	da04      	bge.n	801d448 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d43e:	2b00      	cmp	r3, #0
 801d440:	db02      	blt.n	801d448 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d442:	4563      	cmp	r3, ip
 801d444:	f2c0 80ba 	blt.w	801d5bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801d448:	f11e 0e01 	adds.w	lr, lr, #1
 801d44c:	f100 80ab 	bmi.w	801d5a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801d450:	4571      	cmp	r1, lr
 801d452:	f2c0 80a8 	blt.w	801d5a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801d456:	3301      	adds	r3, #1
 801d458:	f100 80a5 	bmi.w	801d5a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801d45c:	429a      	cmp	r2, r3
 801d45e:	f2c0 80a2 	blt.w	801d5a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801d462:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d464:	46c8      	mov	r8, r9
 801d466:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801d46a:	930e      	str	r3, [sp, #56]	@ 0x38
 801d46c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d46e:	2b00      	cmp	r3, #0
 801d470:	f340 80c4 	ble.w	801d5fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801d474:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d476:	1430      	asrs	r0, r6, #16
 801d478:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d47c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d480:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801d484:	1423      	asrs	r3, r4, #16
 801d486:	f100 814f 	bmi.w	801d728 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d48a:	f10c 3bff 	add.w	fp, ip, #4294967295
 801d48e:	455b      	cmp	r3, fp
 801d490:	f280 814a 	bge.w	801d728 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d494:	2800      	cmp	r0, #0
 801d496:	f2c0 8147 	blt.w	801d728 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d49a:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d49e:	4558      	cmp	r0, fp
 801d4a0:	f280 8142 	bge.w	801d728 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d4a4:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801d4a6:	fb00 3305 	mla	r3, r0, r5, r3
 801d4aa:	0858      	lsrs	r0, r3, #1
 801d4ac:	07dd      	lsls	r5, r3, #31
 801d4ae:	f817 c000 	ldrb.w	ip, [r7, r0]
 801d4b2:	bf54      	ite	pl
 801d4b4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d4b8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d4bc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d4c0:	fa5f fc8c 	uxtb.w	ip, ip
 801d4c4:	2a00      	cmp	r2, #0
 801d4c6:	f000 80dd 	beq.w	801d684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801d4ca:	1c58      	adds	r0, r3, #1
 801d4cc:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801d4d0:	07c0      	lsls	r0, r0, #31
 801d4d2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d4d6:	bf54      	ite	pl
 801d4d8:	f00e 0e0f 	andpl.w	lr, lr, #15
 801d4dc:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801d4e0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801d4e4:	fa5f f08e 	uxtb.w	r0, lr
 801d4e8:	9010      	str	r0, [sp, #64]	@ 0x40
 801d4ea:	b1d9      	cbz	r1, 801d524 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801d4ec:	4453      	add	r3, sl
 801d4ee:	0858      	lsrs	r0, r3, #1
 801d4f0:	07dd      	lsls	r5, r3, #31
 801d4f2:	f103 0301 	add.w	r3, r3, #1
 801d4f6:	5c38      	ldrb	r0, [r7, r0]
 801d4f8:	bf54      	ite	pl
 801d4fa:	f000 000f 	andpl.w	r0, r0, #15
 801d4fe:	1100      	asrmi	r0, r0, #4
 801d500:	07dd      	lsls	r5, r3, #31
 801d502:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801d506:	b2c0      	uxtb	r0, r0
 801d508:	900b      	str	r0, [sp, #44]	@ 0x2c
 801d50a:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801d50e:	f817 e000 	ldrb.w	lr, [r7, r0]
 801d512:	bf54      	ite	pl
 801d514:	f00e 030f 	andpl.w	r3, lr, #15
 801d518:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801d51c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d520:	b2db      	uxtb	r3, r3
 801d522:	9311      	str	r3, [sp, #68]	@ 0x44
 801d524:	b292      	uxth	r2, r2
 801d526:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801d528:	b289      	uxth	r1, r1
 801d52a:	fb02 f301 	mul.w	r3, r2, r1
 801d52e:	0112      	lsls	r2, r2, #4
 801d530:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801d534:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801d538:	1ad2      	subs	r2, r2, r3
 801d53a:	b289      	uxth	r1, r1
 801d53c:	b292      	uxth	r2, r2
 801d53e:	1a40      	subs	r0, r0, r1
 801d540:	436a      	muls	r2, r5
 801d542:	b280      	uxth	r0, r0
 801d544:	fb0c 2c00 	mla	ip, ip, r0, r2
 801d548:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801d54a:	fb01 c102 	mla	r1, r1, r2, ip
 801d54e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801d550:	fb03 1302 	mla	r3, r3, r2, r1
 801d554:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d558:	b1db      	cbz	r3, 801d592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d55a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d55c:	4353      	muls	r3, r2
 801d55e:	1c5a      	adds	r2, r3, #1
 801d560:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d564:	4ac6      	ldr	r2, [pc, #792]	@ (801d880 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801d566:	121b      	asrs	r3, r3, #8
 801d568:	6812      	ldr	r2, [r2, #0]
 801d56a:	2bff      	cmp	r3, #255	@ 0xff
 801d56c:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801d570:	f040 8099 	bne.w	801d6a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801d574:	0953      	lsrs	r3, r2, #5
 801d576:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801d57a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d57e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d582:	f02c 0c07 	bic.w	ip, ip, #7
 801d586:	ea43 0c0c 	orr.w	ip, r3, ip
 801d58a:	ea4c 0202 	orr.w	r2, ip, r2
 801d58e:	f8a8 2000 	strh.w	r2, [r8]
 801d592:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d594:	f108 0802 	add.w	r8, r8, #2
 801d598:	441c      	add	r4, r3
 801d59a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d59c:	441e      	add	r6, r3
 801d59e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d5a0:	3b01      	subs	r3, #1
 801d5a2:	930e      	str	r3, [sp, #56]	@ 0x38
 801d5a4:	e762      	b.n	801d46c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d5a6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d5a8:	f109 0902 	add.w	r9, r9, #2
 801d5ac:	441c      	add	r4, r3
 801d5ae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d5b0:	441e      	add	r6, r3
 801d5b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d5b4:	3b01      	subs	r3, #1
 801d5b6:	9309      	str	r3, [sp, #36]	@ 0x24
 801d5b8:	e736      	b.n	801d428 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d5ba:	d024      	beq.n	801d606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d5bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d5be:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801d5c0:	3b01      	subs	r3, #1
 801d5c2:	fb00 4003 	mla	r0, r0, r3, r4
 801d5c6:	1400      	asrs	r0, r0, #16
 801d5c8:	f53f af4b 	bmi.w	801d462 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d5cc:	3901      	subs	r1, #1
 801d5ce:	4288      	cmp	r0, r1
 801d5d0:	f6bf af47 	bge.w	801d462 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d5d4:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801d5d6:	fb01 6303 	mla	r3, r1, r3, r6
 801d5da:	141b      	asrs	r3, r3, #16
 801d5dc:	f53f af41 	bmi.w	801d462 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d5e0:	3a01      	subs	r2, #1
 801d5e2:	4293      	cmp	r3, r2
 801d5e4:	f6bf af3d 	bge.w	801d462 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d5e8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801d5ec:	46c8      	mov	r8, r9
 801d5ee:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801d5f2:	930e      	str	r3, [sp, #56]	@ 0x38
 801d5f4:	f1bb 0f00 	cmp.w	fp, #0
 801d5f8:	f300 80b7 	bgt.w	801d76a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 801d5fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d5fe:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801d602:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801d606:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d608:	2b00      	cmp	r3, #0
 801d60a:	f340 818e 	ble.w	801d92a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801d60e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d612:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d614:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d618:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d61c:	eef0 6a62 	vmov.f32	s13, s5
 801d620:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d624:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d628:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d62c:	ee16 4a90 	vmov	r4, s13
 801d630:	eef0 6a43 	vmov.f32	s13, s6
 801d634:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d638:	ee16 6a90 	vmov	r6, s13
 801d63c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d640:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d644:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d648:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d64c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d650:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d654:	ee12 2a90 	vmov	r2, s5
 801d658:	eef0 2a47 	vmov.f32	s5, s14
 801d65c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d660:	ee13 2a10 	vmov	r2, s6
 801d664:	9323      	str	r3, [sp, #140]	@ 0x8c
 801d666:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d668:	eeb0 3a67 	vmov.f32	s6, s15
 801d66c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d670:	9324      	str	r3, [sp, #144]	@ 0x90
 801d672:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d674:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d676:	3b01      	subs	r3, #1
 801d678:	930d      	str	r3, [sp, #52]	@ 0x34
 801d67a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d67c:	bf08      	it	eq
 801d67e:	4613      	moveq	r3, r2
 801d680:	9309      	str	r3, [sp, #36]	@ 0x24
 801d682:	e6c2      	b.n	801d40a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d684:	2900      	cmp	r1, #0
 801d686:	f43f af4d 	beq.w	801d524 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801d68a:	eb0a 0003 	add.w	r0, sl, r3
 801d68e:	0843      	lsrs	r3, r0, #1
 801d690:	07c0      	lsls	r0, r0, #31
 801d692:	5cfb      	ldrb	r3, [r7, r3]
 801d694:	bf54      	ite	pl
 801d696:	f003 030f 	andpl.w	r3, r3, #15
 801d69a:	111b      	asrmi	r3, r3, #4
 801d69c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d6a0:	b2db      	uxtb	r3, r3
 801d6a2:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d6a4:	e73e      	b.n	801d524 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801d6a6:	f8b8 e000 	ldrh.w	lr, [r8]
 801d6aa:	fa1f fb83 	uxth.w	fp, r3
 801d6ae:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801d6b2:	43db      	mvns	r3, r3
 801d6b4:	ea4f 202e 	mov.w	r0, lr, asr #8
 801d6b8:	fb11 f10b 	smulbb	r1, r1, fp
 801d6bc:	b2db      	uxtb	r3, r3
 801d6be:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d6c2:	fa5f fc8c 	uxtb.w	ip, ip
 801d6c6:	b2d2      	uxtb	r2, r2
 801d6c8:	fb00 1003 	mla	r0, r0, r3, r1
 801d6cc:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801d6d0:	fb1c fc0b 	smulbb	ip, ip, fp
 801d6d4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d6d8:	b280      	uxth	r0, r0
 801d6da:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d6de:	fb12 fb0b 	smulbb	fp, r2, fp
 801d6e2:	fa5f fe8e 	uxtb.w	lr, lr
 801d6e6:	fb01 cc03 	mla	ip, r1, r3, ip
 801d6ea:	fb0e bb03 	mla	fp, lr, r3, fp
 801d6ee:	1c43      	adds	r3, r0, #1
 801d6f0:	fa1f fc8c 	uxth.w	ip, ip
 801d6f4:	fa1f fb8b 	uxth.w	fp, fp
 801d6f8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d6fc:	f10c 0101 	add.w	r1, ip, #1
 801d700:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801d704:	f10b 0001 	add.w	r0, fp, #1
 801d708:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801d70c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801d710:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d714:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801d718:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d71c:	4318      	orrs	r0, r3
 801d71e:	ea40 000c 	orr.w	r0, r0, ip
 801d722:	f8a8 0000 	strh.w	r0, [r8]
 801d726:	e734      	b.n	801d592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d728:	f113 0b01 	adds.w	fp, r3, #1
 801d72c:	f53f af31 	bmi.w	801d592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d730:	45dc      	cmp	ip, fp
 801d732:	f6ff af2e 	blt.w	801d592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d736:	f110 0b01 	adds.w	fp, r0, #1
 801d73a:	f53f af2a 	bmi.w	801d592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d73e:	45de      	cmp	lr, fp
 801d740:	f6ff af27 	blt.w	801d592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d744:	9302      	str	r3, [sp, #8]
 801d746:	fa0f f38e 	sxth.w	r3, lr
 801d74a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801d74c:	9301      	str	r3, [sp, #4]
 801d74e:	fa0f f38c 	sxth.w	r3, ip
 801d752:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801d756:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801d75a:	9300      	str	r3, [sp, #0]
 801d75c:	463a      	mov	r2, r7
 801d75e:	4653      	mov	r3, sl
 801d760:	4641      	mov	r1, r8
 801d762:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801d764:	f7ff fd4c 	bl	801d200 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801d768:	e713      	b.n	801d592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d76a:	1422      	asrs	r2, r4, #16
 801d76c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801d76e:	1433      	asrs	r3, r6, #16
 801d770:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801d774:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d778:	fb05 2303 	mla	r3, r5, r3, r2
 801d77c:	085a      	lsrs	r2, r3, #1
 801d77e:	07dd      	lsls	r5, r3, #31
 801d780:	5cba      	ldrb	r2, [r7, r2]
 801d782:	bf54      	ite	pl
 801d784:	f002 020f 	andpl.w	r2, r2, #15
 801d788:	1112      	asrmi	r2, r2, #4
 801d78a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d78e:	b2d2      	uxtb	r2, r2
 801d790:	2900      	cmp	r1, #0
 801d792:	d077      	beq.n	801d884 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801d794:	f103 0e01 	add.w	lr, r3, #1
 801d798:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801d79c:	f01e 0f01 	tst.w	lr, #1
 801d7a0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d7a4:	bf0c      	ite	eq
 801d7a6:	f00c 0c0f 	andeq.w	ip, ip, #15
 801d7aa:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801d7ae:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d7b2:	fa5f f58c 	uxtb.w	r5, ip
 801d7b6:	9512      	str	r5, [sp, #72]	@ 0x48
 801d7b8:	b308      	cbz	r0, 801d7fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801d7ba:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d7bc:	442b      	add	r3, r5
 801d7be:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801d7c2:	07dd      	lsls	r5, r3, #31
 801d7c4:	f103 0301 	add.w	r3, r3, #1
 801d7c8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d7cc:	bf54      	ite	pl
 801d7ce:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d7d2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d7d6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d7da:	fa5f f58c 	uxtb.w	r5, ip
 801d7de:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801d7e2:	950c      	str	r5, [sp, #48]	@ 0x30
 801d7e4:	07dd      	lsls	r5, r3, #31
 801d7e6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d7ea:	bf54      	ite	pl
 801d7ec:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d7f0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d7f4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d7f8:	fa5f f38c 	uxtb.w	r3, ip
 801d7fc:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d7fe:	b289      	uxth	r1, r1
 801d800:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801d802:	b280      	uxth	r0, r0
 801d804:	fb01 f300 	mul.w	r3, r1, r0
 801d808:	0109      	lsls	r1, r1, #4
 801d80a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801d80e:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801d812:	1ac9      	subs	r1, r1, r3
 801d814:	b280      	uxth	r0, r0
 801d816:	b289      	uxth	r1, r1
 801d818:	ebac 0c00 	sub.w	ip, ip, r0
 801d81c:	4369      	muls	r1, r5
 801d81e:	fa1f fc8c 	uxth.w	ip, ip
 801d822:	fb02 120c 	mla	r2, r2, ip, r1
 801d826:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801d828:	fb00 2001 	mla	r0, r0, r1, r2
 801d82c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801d82e:	fb03 0302 	mla	r3, r3, r2, r0
 801d832:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d836:	b1d3      	cbz	r3, 801d86e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801d838:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d83a:	4353      	muls	r3, r2
 801d83c:	1c5a      	adds	r2, r3, #1
 801d83e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d842:	4a0f      	ldr	r2, [pc, #60]	@ (801d880 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801d844:	121b      	asrs	r3, r3, #8
 801d846:	6812      	ldr	r2, [r2, #0]
 801d848:	2bff      	cmp	r3, #255	@ 0xff
 801d84a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801d84e:	d12d      	bne.n	801d8ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 801d850:	0953      	lsrs	r3, r2, #5
 801d852:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801d856:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d85a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d85e:	f02c 0c07 	bic.w	ip, ip, #7
 801d862:	ea43 0c0c 	orr.w	ip, r3, ip
 801d866:	ea4c 0202 	orr.w	r2, ip, r2
 801d86a:	f8a8 2000 	strh.w	r2, [r8]
 801d86e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d870:	f108 0802 	add.w	r8, r8, #2
 801d874:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d878:	441c      	add	r4, r3
 801d87a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d87c:	441e      	add	r6, r3
 801d87e:	e6b9      	b.n	801d5f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801d880:	200150b4 	.word	0x200150b4
 801d884:	2800      	cmp	r0, #0
 801d886:	d0ba      	beq.n	801d7fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801d888:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d88a:	442b      	add	r3, r5
 801d88c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801d890:	07db      	lsls	r3, r3, #31
 801d892:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d896:	bf54      	ite	pl
 801d898:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d89c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d8a0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d8a4:	fa5f f38c 	uxtb.w	r3, ip
 801d8a8:	930c      	str	r3, [sp, #48]	@ 0x30
 801d8aa:	e7a8      	b.n	801d7fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801d8ac:	f8b8 e000 	ldrh.w	lr, [r8]
 801d8b0:	fa1f fa83 	uxth.w	sl, r3
 801d8b4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801d8b8:	43db      	mvns	r3, r3
 801d8ba:	ea4f 202e 	mov.w	r0, lr, asr #8
 801d8be:	fb11 f10a 	smulbb	r1, r1, sl
 801d8c2:	b2db      	uxtb	r3, r3
 801d8c4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d8c8:	b2d2      	uxtb	r2, r2
 801d8ca:	fa5f fc8c 	uxtb.w	ip, ip
 801d8ce:	fb00 1003 	mla	r0, r0, r3, r1
 801d8d2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801d8d6:	fb12 f20a 	smulbb	r2, r2, sl
 801d8da:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d8de:	b280      	uxth	r0, r0
 801d8e0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d8e4:	fb1c fc0a 	smulbb	ip, ip, sl
 801d8e8:	fa5f fe8e 	uxtb.w	lr, lr
 801d8ec:	fb0e 2203 	mla	r2, lr, r3, r2
 801d8f0:	fb01 cc03 	mla	ip, r1, r3, ip
 801d8f4:	1c43      	adds	r3, r0, #1
 801d8f6:	b292      	uxth	r2, r2
 801d8f8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d8fc:	1c51      	adds	r1, r2, #1
 801d8fe:	fa1f fc8c 	uxth.w	ip, ip
 801d902:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801d906:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801d90a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801d90e:	4308      	orrs	r0, r1
 801d910:	f10c 0101 	add.w	r1, ip, #1
 801d914:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801d918:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d91c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d920:	ea40 000c 	orr.w	r0, r0, ip
 801d924:	f8a8 0000 	strh.w	r0, [r8]
 801d928:	e7a1      	b.n	801d86e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801d92a:	b017      	add	sp, #92	@ 0x5c
 801d92c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d930 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801d930:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d934:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801d938:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801d93c:	2d00      	cmp	r5, #0
 801d93e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801d942:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801d946:	fb05 0e03 	mla	lr, r5, r3, r0
 801d94a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801d94e:	f2c0 80b0 	blt.w	801dab2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801d952:	45a9      	cmp	r9, r5
 801d954:	f340 80ad 	ble.w	801dab2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801d958:	2800      	cmp	r0, #0
 801d95a:	f2c0 80a8 	blt.w	801daae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801d95e:	4580      	cmp	r8, r0
 801d960:	f340 80a5 	ble.w	801daae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801d964:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801d968:	f01e 0f01 	tst.w	lr, #1
 801d96c:	5d16      	ldrb	r6, [r2, r4]
 801d96e:	bf0c      	ite	eq
 801d970:	f006 060f 	andeq.w	r6, r6, #15
 801d974:	1136      	asrne	r6, r6, #4
 801d976:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801d97a:	b2f6      	uxtb	r6, r6
 801d97c:	1c44      	adds	r4, r0, #1
 801d97e:	f100 809b 	bmi.w	801dab8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801d982:	45a0      	cmp	r8, r4
 801d984:	f340 8098 	ble.w	801dab8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801d988:	2f00      	cmp	r7, #0
 801d98a:	f000 8097 	beq.w	801dabc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801d98e:	f10e 0a01 	add.w	sl, lr, #1
 801d992:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801d996:	f01a 0f01 	tst.w	sl, #1
 801d99a:	5d14      	ldrb	r4, [r2, r4]
 801d99c:	bf0c      	ite	eq
 801d99e:	f004 040f 	andeq.w	r4, r4, #15
 801d9a2:	1124      	asrne	r4, r4, #4
 801d9a4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801d9a8:	b2e4      	uxtb	r4, r4
 801d9aa:	3501      	adds	r5, #1
 801d9ac:	f100 808a 	bmi.w	801dac4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801d9b0:	45a9      	cmp	r9, r5
 801d9b2:	f340 8087 	ble.w	801dac4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801d9b6:	f1bc 0f00 	cmp.w	ip, #0
 801d9ba:	f000 8086 	beq.w	801daca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801d9be:	2800      	cmp	r0, #0
 801d9c0:	db7e      	blt.n	801dac0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801d9c2:	4580      	cmp	r8, r0
 801d9c4:	dd7c      	ble.n	801dac0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801d9c6:	eb03 090e 	add.w	r9, r3, lr
 801d9ca:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801d9ce:	f019 0f01 	tst.w	r9, #1
 801d9d2:	5d55      	ldrb	r5, [r2, r5]
 801d9d4:	bf0c      	ite	eq
 801d9d6:	f005 050f 	andeq.w	r5, r5, #15
 801d9da:	112d      	asrne	r5, r5, #4
 801d9dc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801d9e0:	b2ed      	uxtb	r5, r5
 801d9e2:	3001      	adds	r0, #1
 801d9e4:	d474      	bmi.n	801dad0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801d9e6:	4580      	cmp	r8, r0
 801d9e8:	dd72      	ble.n	801dad0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801d9ea:	2f00      	cmp	r7, #0
 801d9ec:	d072      	beq.n	801dad4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801d9ee:	3301      	adds	r3, #1
 801d9f0:	449e      	add	lr, r3
 801d9f2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801d9f6:	f01e 0f01 	tst.w	lr, #1
 801d9fa:	5cd0      	ldrb	r0, [r2, r3]
 801d9fc:	bf0c      	ite	eq
 801d9fe:	f000 000f 	andeq.w	r0, r0, #15
 801da02:	1100      	asrne	r0, r0, #4
 801da04:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801da08:	b2c3      	uxtb	r3, r0
 801da0a:	b2ba      	uxth	r2, r7
 801da0c:	fa1f fc8c 	uxth.w	ip, ip
 801da10:	fb02 f00c 	mul.w	r0, r2, ip
 801da14:	0112      	lsls	r2, r2, #4
 801da16:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801da1a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801da1e:	1a12      	subs	r2, r2, r0
 801da20:	fa1f fc8c 	uxth.w	ip, ip
 801da24:	b292      	uxth	r2, r2
 801da26:	eba7 070c 	sub.w	r7, r7, ip
 801da2a:	4362      	muls	r2, r4
 801da2c:	b2bf      	uxth	r7, r7
 801da2e:	fb06 2207 	mla	r2, r6, r7, r2
 801da32:	fb0c 2505 	mla	r5, ip, r5, r2
 801da36:	fb00 5303 	mla	r3, r0, r3, r5
 801da3a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801da3e:	b3a3      	cbz	r3, 801daaa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801da40:	4a25      	ldr	r2, [pc, #148]	@ (801dad8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801da42:	880e      	ldrh	r6, [r1, #0]
 801da44:	6815      	ldr	r5, [r2, #0]
 801da46:	b29a      	uxth	r2, r3
 801da48:	1234      	asrs	r4, r6, #8
 801da4a:	43db      	mvns	r3, r3
 801da4c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801da50:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801da54:	b2db      	uxtb	r3, r3
 801da56:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801da5a:	fb10 f002 	smulbb	r0, r0, r2
 801da5e:	b2ed      	uxtb	r5, r5
 801da60:	fb17 f702 	smulbb	r7, r7, r2
 801da64:	fb04 0403 	mla	r4, r4, r3, r0
 801da68:	10f0      	asrs	r0, r6, #3
 801da6a:	fb15 f202 	smulbb	r2, r5, r2
 801da6e:	00f6      	lsls	r6, r6, #3
 801da70:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801da74:	b2a4      	uxth	r4, r4
 801da76:	b2f6      	uxtb	r6, r6
 801da78:	fb00 7003 	mla	r0, r0, r3, r7
 801da7c:	fb06 2303 	mla	r3, r6, r3, r2
 801da80:	b280      	uxth	r0, r0
 801da82:	b29a      	uxth	r2, r3
 801da84:	1c63      	adds	r3, r4, #1
 801da86:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801da8a:	1c53      	adds	r3, r2, #1
 801da8c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801da90:	1c42      	adds	r2, r0, #1
 801da92:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801da96:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801da9a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801da9e:	0940      	lsrs	r0, r0, #5
 801daa0:	4323      	orrs	r3, r4
 801daa2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801daa6:	4303      	orrs	r3, r0
 801daa8:	800b      	strh	r3, [r1, #0]
 801daaa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801daae:	2600      	movs	r6, #0
 801dab0:	e764      	b.n	801d97c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801dab2:	2400      	movs	r4, #0
 801dab4:	4626      	mov	r6, r4
 801dab6:	e778      	b.n	801d9aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801dab8:	2400      	movs	r4, #0
 801daba:	e776      	b.n	801d9aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801dabc:	463c      	mov	r4, r7
 801dabe:	e774      	b.n	801d9aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801dac0:	2500      	movs	r5, #0
 801dac2:	e78e      	b.n	801d9e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801dac4:	2300      	movs	r3, #0
 801dac6:	461d      	mov	r5, r3
 801dac8:	e79f      	b.n	801da0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801daca:	4663      	mov	r3, ip
 801dacc:	4665      	mov	r5, ip
 801dace:	e79c      	b.n	801da0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801dad0:	2300      	movs	r3, #0
 801dad2:	e79a      	b.n	801da0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801dad4:	463b      	mov	r3, r7
 801dad6:	e798      	b.n	801da0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801dad8:	200150b4 	.word	0x200150b4

0801dadc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dadc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dae0:	b093      	sub	sp, #76	@ 0x4c
 801dae2:	461d      	mov	r5, r3
 801dae4:	920c      	str	r2, [sp, #48]	@ 0x30
 801dae6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801dae8:	9011      	str	r0, [sp, #68]	@ 0x44
 801daea:	9107      	str	r1, [sp, #28]
 801daec:	6850      	ldr	r0, [r2, #4]
 801daee:	6812      	ldr	r2, [r2, #0]
 801daf0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801daf4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801daf8:	fb00 1303 	mla	r3, r0, r3, r1
 801dafc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801db00:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801db02:	689b      	ldr	r3, [r3, #8]
 801db04:	3301      	adds	r3, #1
 801db06:	f023 0301 	bic.w	r3, r3, #1
 801db0a:	9306      	str	r3, [sp, #24]
 801db0c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801db0e:	681f      	ldr	r7, [r3, #0]
 801db10:	9b07      	ldr	r3, [sp, #28]
 801db12:	2b00      	cmp	r3, #0
 801db14:	dc03      	bgt.n	801db1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801db16:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801db18:	2b00      	cmp	r3, #0
 801db1a:	f340 8267 	ble.w	801dfec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801db1e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801db20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801db24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801db28:	1e48      	subs	r0, r1, #1
 801db2a:	f102 3cff 	add.w	ip, r2, #4294967295
 801db2e:	2d00      	cmp	r5, #0
 801db30:	f340 80b7 	ble.w	801dca2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801db34:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801db38:	ea4f 4326 	mov.w	r3, r6, asr #16
 801db3c:	d406      	bmi.n	801db4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801db3e:	4586      	cmp	lr, r0
 801db40:	da04      	bge.n	801db4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801db42:	2b00      	cmp	r3, #0
 801db44:	db02      	blt.n	801db4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801db46:	4563      	cmp	r3, ip
 801db48:	f2c0 80ac 	blt.w	801dca4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801db4c:	f11e 0e01 	adds.w	lr, lr, #1
 801db50:	f100 809f 	bmi.w	801dc92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801db54:	4571      	cmp	r1, lr
 801db56:	f2c0 809c 	blt.w	801dc92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801db5a:	3301      	adds	r3, #1
 801db5c:	f100 8099 	bmi.w	801dc92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801db60:	429a      	cmp	r2, r3
 801db62:	f2c0 8096 	blt.w	801dc92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801db66:	46c8      	mov	r8, r9
 801db68:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801db6c:	9509      	str	r5, [sp, #36]	@ 0x24
 801db6e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801db70:	2b00      	cmp	r3, #0
 801db72:	f340 80b5 	ble.w	801dce0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801db76:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801db7a:	1430      	asrs	r0, r6, #16
 801db7c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801db80:	9308      	str	r3, [sp, #32]
 801db82:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801db84:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801db88:	1423      	asrs	r3, r4, #16
 801db8a:	f100 813f 	bmi.w	801de0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801db8e:	f10c 3bff 	add.w	fp, ip, #4294967295
 801db92:	455b      	cmp	r3, fp
 801db94:	f280 813a 	bge.w	801de0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801db98:	2800      	cmp	r0, #0
 801db9a:	f2c0 8137 	blt.w	801de0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801db9e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801dba2:	4558      	cmp	r0, fp
 801dba4:	f280 8132 	bge.w	801de0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801dba8:	9a06      	ldr	r2, [sp, #24]
 801dbaa:	fb00 3302 	mla	r3, r0, r2, r3
 801dbae:	0858      	lsrs	r0, r3, #1
 801dbb0:	07da      	lsls	r2, r3, #31
 801dbb2:	9a08      	ldr	r2, [sp, #32]
 801dbb4:	f817 c000 	ldrb.w	ip, [r7, r0]
 801dbb8:	bf54      	ite	pl
 801dbba:	f00c 0c0f 	andpl.w	ip, ip, #15
 801dbbe:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801dbc2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801dbc6:	fa5f fc8c 	uxtb.w	ip, ip
 801dbca:	2a00      	cmp	r2, #0
 801dbcc:	f000 80cc 	beq.w	801dd68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801dbd0:	1c58      	adds	r0, r3, #1
 801dbd2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801dbd6:	07c0      	lsls	r0, r0, #31
 801dbd8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801dbdc:	bf54      	ite	pl
 801dbde:	f00e 0e0f 	andpl.w	lr, lr, #15
 801dbe2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801dbe6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801dbea:	fa5f fe8e 	uxtb.w	lr, lr
 801dbee:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 801dbf2:	b1b9      	cbz	r1, 801dc24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801dbf4:	4453      	add	r3, sl
 801dbf6:	0858      	lsrs	r0, r3, #1
 801dbf8:	07da      	lsls	r2, r3, #31
 801dbfa:	5c38      	ldrb	r0, [r7, r0]
 801dbfc:	bf54      	ite	pl
 801dbfe:	f000 000f 	andpl.w	r0, r0, #15
 801dc02:	1100      	asrmi	r0, r0, #4
 801dc04:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801dc08:	b2c0      	uxtb	r0, r0
 801dc0a:	900a      	str	r0, [sp, #40]	@ 0x28
 801dc0c:	1c58      	adds	r0, r3, #1
 801dc0e:	0843      	lsrs	r3, r0, #1
 801dc10:	07c2      	lsls	r2, r0, #31
 801dc12:	5cfb      	ldrb	r3, [r7, r3]
 801dc14:	bf54      	ite	pl
 801dc16:	f003 030f 	andpl.w	r3, r3, #15
 801dc1a:	111b      	asrmi	r3, r3, #4
 801dc1c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801dc20:	b2db      	uxtb	r3, r3
 801dc22:	930e      	str	r3, [sp, #56]	@ 0x38
 801dc24:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801dc28:	b289      	uxth	r1, r1
 801dc2a:	fb02 f301 	mul.w	r3, r2, r1
 801dc2e:	0112      	lsls	r2, r2, #4
 801dc30:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801dc34:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801dc38:	1ad2      	subs	r2, r2, r3
 801dc3a:	b289      	uxth	r1, r1
 801dc3c:	b292      	uxth	r2, r2
 801dc3e:	1a40      	subs	r0, r0, r1
 801dc40:	fa1f fe80 	uxth.w	lr, r0
 801dc44:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801dc46:	4342      	muls	r2, r0
 801dc48:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801dc4c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801dc4e:	fb01 c102 	mla	r1, r1, r2, ip
 801dc52:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801dc54:	fb03 1302 	mla	r3, r3, r2, r1
 801dc58:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dc5c:	2bff      	cmp	r3, #255	@ 0xff
 801dc5e:	f040 8094 	bne.w	801dd8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801dc62:	4bbf      	ldr	r3, [pc, #764]	@ (801df60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801dc64:	681a      	ldr	r2, [r3, #0]
 801dc66:	4bbf      	ldr	r3, [pc, #764]	@ (801df64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801dc68:	0951      	lsrs	r1, r2, #5
 801dc6a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801dc6e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dc72:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801dc76:	430b      	orrs	r3, r1
 801dc78:	4313      	orrs	r3, r2
 801dc7a:	f8a8 3000 	strh.w	r3, [r8]
 801dc7e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801dc80:	f108 0802 	add.w	r8, r8, #2
 801dc84:	441c      	add	r4, r3
 801dc86:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dc88:	441e      	add	r6, r3
 801dc8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dc8c:	3b01      	subs	r3, #1
 801dc8e:	9309      	str	r3, [sp, #36]	@ 0x24
 801dc90:	e76d      	b.n	801db6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801dc92:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801dc94:	3d01      	subs	r5, #1
 801dc96:	f109 0902 	add.w	r9, r9, #2
 801dc9a:	441c      	add	r4, r3
 801dc9c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dc9e:	441e      	add	r6, r3
 801dca0:	e745      	b.n	801db2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801dca2:	d021      	beq.n	801dce8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801dca4:	1e6b      	subs	r3, r5, #1
 801dca6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801dca8:	fb00 4003 	mla	r0, r0, r3, r4
 801dcac:	1400      	asrs	r0, r0, #16
 801dcae:	f53f af5a 	bmi.w	801db66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801dcb2:	3901      	subs	r1, #1
 801dcb4:	4288      	cmp	r0, r1
 801dcb6:	f6bf af56 	bge.w	801db66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801dcba:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801dcbc:	fb01 6303 	mla	r3, r1, r3, r6
 801dcc0:	141b      	asrs	r3, r3, #16
 801dcc2:	f53f af50 	bmi.w	801db66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801dcc6:	3a01      	subs	r2, #1
 801dcc8:	4293      	cmp	r3, r2
 801dcca:	f6bf af4c 	bge.w	801db66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801dcce:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801dcd2:	46a8      	mov	r8, r5
 801dcd4:	46ce      	mov	lr, r9
 801dcd6:	9308      	str	r3, [sp, #32]
 801dcd8:	f1b8 0f00 	cmp.w	r8, #0
 801dcdc:	f300 80b6 	bgt.w	801de4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801dce0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801dce4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801dce8:	9b07      	ldr	r3, [sp, #28]
 801dcea:	2b00      	cmp	r3, #0
 801dcec:	f340 817e 	ble.w	801dfec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801dcf0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801dcf4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dcf6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dcfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dcfe:	eef0 6a62 	vmov.f32	s13, s5
 801dd02:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dd06:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dd0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dd0e:	ee16 4a90 	vmov	r4, s13
 801dd12:	eef0 6a43 	vmov.f32	s13, s6
 801dd16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dd1a:	ee16 6a90 	vmov	r6, s13
 801dd1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dd22:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dd26:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dd2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dd2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dd32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dd36:	ee12 2a90 	vmov	r2, s5
 801dd3a:	eef0 2a47 	vmov.f32	s5, s14
 801dd3e:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd42:	ee13 2a10 	vmov	r2, s6
 801dd46:	931f      	str	r3, [sp, #124]	@ 0x7c
 801dd48:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dd4a:	eeb0 3a67 	vmov.f32	s6, s15
 801dd4e:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd52:	9320      	str	r3, [sp, #128]	@ 0x80
 801dd54:	9b07      	ldr	r3, [sp, #28]
 801dd56:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801dd58:	3b01      	subs	r3, #1
 801dd5a:	9307      	str	r3, [sp, #28]
 801dd5c:	bf08      	it	eq
 801dd5e:	4615      	moveq	r5, r2
 801dd60:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dd62:	bf18      	it	ne
 801dd64:	461d      	movne	r5, r3
 801dd66:	e6d3      	b.n	801db10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801dd68:	2900      	cmp	r1, #0
 801dd6a:	f43f af5b 	beq.w	801dc24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801dd6e:	eb0a 0003 	add.w	r0, sl, r3
 801dd72:	0843      	lsrs	r3, r0, #1
 801dd74:	07c0      	lsls	r0, r0, #31
 801dd76:	5cfb      	ldrb	r3, [r7, r3]
 801dd78:	bf54      	ite	pl
 801dd7a:	f003 030f 	andpl.w	r3, r3, #15
 801dd7e:	111b      	asrmi	r3, r3, #4
 801dd80:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801dd84:	b2db      	uxtb	r3, r3
 801dd86:	930a      	str	r3, [sp, #40]	@ 0x28
 801dd88:	e74c      	b.n	801dc24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801dd8a:	2b00      	cmp	r3, #0
 801dd8c:	f43f af77 	beq.w	801dc7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801dd90:	4a73      	ldr	r2, [pc, #460]	@ (801df60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801dd92:	fa1f fe83 	uxth.w	lr, r3
 801dd96:	f8b8 c000 	ldrh.w	ip, [r8]
 801dd9a:	43db      	mvns	r3, r3
 801dd9c:	6810      	ldr	r0, [r2, #0]
 801dd9e:	ea4f 212c 	mov.w	r1, ip, asr #8
 801dda2:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801dda6:	b2db      	uxtb	r3, r3
 801dda8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ddac:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801ddb0:	fb12 f20e 	smulbb	r2, r2, lr
 801ddb4:	b2c0      	uxtb	r0, r0
 801ddb6:	fb1b fb0e 	smulbb	fp, fp, lr
 801ddba:	fb01 2103 	mla	r1, r1, r3, r2
 801ddbe:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ddc2:	fb10 fe0e 	smulbb	lr, r0, lr
 801ddc6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ddca:	b289      	uxth	r1, r1
 801ddcc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ddd0:	fa5f fc8c 	uxtb.w	ip, ip
 801ddd4:	fb02 b203 	mla	r2, r2, r3, fp
 801ddd8:	1c48      	adds	r0, r1, #1
 801ddda:	fb0c e303 	mla	r3, ip, r3, lr
 801ddde:	b292      	uxth	r2, r2
 801dde0:	b29b      	uxth	r3, r3
 801dde2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801dde6:	f102 0b01 	add.w	fp, r2, #1
 801ddea:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 801ddee:	1c59      	adds	r1, r3, #1
 801ddf0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801ddf4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ddf8:	0952      	lsrs	r2, r2, #5
 801ddfa:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ddfe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801de02:	4301      	orrs	r1, r0
 801de04:	4311      	orrs	r1, r2
 801de06:	f8a8 1000 	strh.w	r1, [r8]
 801de0a:	e738      	b.n	801dc7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801de0c:	f113 0b01 	adds.w	fp, r3, #1
 801de10:	f53f af35 	bmi.w	801dc7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801de14:	45dc      	cmp	ip, fp
 801de16:	f6ff af32 	blt.w	801dc7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801de1a:	f110 0b01 	adds.w	fp, r0, #1
 801de1e:	f53f af2e 	bmi.w	801dc7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801de22:	45de      	cmp	lr, fp
 801de24:	f6ff af2b 	blt.w	801dc7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801de28:	9302      	str	r3, [sp, #8]
 801de2a:	fa0f f38e 	sxth.w	r3, lr
 801de2e:	9a08      	ldr	r2, [sp, #32]
 801de30:	9301      	str	r3, [sp, #4]
 801de32:	fa0f f38c 	sxth.w	r3, ip
 801de36:	9105      	str	r1, [sp, #20]
 801de38:	4641      	mov	r1, r8
 801de3a:	9300      	str	r3, [sp, #0]
 801de3c:	4653      	mov	r3, sl
 801de3e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801de42:	463a      	mov	r2, r7
 801de44:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801de46:	f7ff fd73 	bl	801d930 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801de4a:	e718      	b.n	801dc7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801de4c:	1422      	asrs	r2, r4, #16
 801de4e:	9906      	ldr	r1, [sp, #24]
 801de50:	1433      	asrs	r3, r6, #16
 801de52:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801de56:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801de5a:	fb01 2303 	mla	r3, r1, r3, r2
 801de5e:	085a      	lsrs	r2, r3, #1
 801de60:	07d9      	lsls	r1, r3, #31
 801de62:	5cba      	ldrb	r2, [r7, r2]
 801de64:	bf54      	ite	pl
 801de66:	f002 020f 	andpl.w	r2, r2, #15
 801de6a:	1112      	asrmi	r2, r2, #4
 801de6c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801de70:	b2d2      	uxtb	r2, r2
 801de72:	2800      	cmp	r0, #0
 801de74:	d063      	beq.n	801df3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 801de76:	f103 0a01 	add.w	sl, r3, #1
 801de7a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801de7e:	f01a 0f01 	tst.w	sl, #1
 801de82:	5c79      	ldrb	r1, [r7, r1]
 801de84:	bf0c      	ite	eq
 801de86:	f001 010f 	andeq.w	r1, r1, #15
 801de8a:	1109      	asrne	r1, r1, #4
 801de8c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801de90:	b2c9      	uxtb	r1, r1
 801de92:	910f      	str	r1, [sp, #60]	@ 0x3c
 801de94:	f1bc 0f00 	cmp.w	ip, #0
 801de98:	d01a      	beq.n	801ded0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801de9a:	9908      	ldr	r1, [sp, #32]
 801de9c:	440b      	add	r3, r1
 801de9e:	0859      	lsrs	r1, r3, #1
 801dea0:	f013 0f01 	tst.w	r3, #1
 801dea4:	f103 0301 	add.w	r3, r3, #1
 801dea8:	5c79      	ldrb	r1, [r7, r1]
 801deaa:	bf0c      	ite	eq
 801deac:	f001 010f 	andeq.w	r1, r1, #15
 801deb0:	1109      	asrne	r1, r1, #4
 801deb2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801deb6:	b2c9      	uxtb	r1, r1
 801deb8:	910b      	str	r1, [sp, #44]	@ 0x2c
 801deba:	0859      	lsrs	r1, r3, #1
 801debc:	07db      	lsls	r3, r3, #31
 801debe:	5c79      	ldrb	r1, [r7, r1]
 801dec0:	bf54      	ite	pl
 801dec2:	f001 010f 	andpl.w	r1, r1, #15
 801dec6:	1109      	asrmi	r1, r1, #4
 801dec8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801decc:	b2c9      	uxtb	r1, r1
 801dece:	9110      	str	r1, [sp, #64]	@ 0x40
 801ded0:	b280      	uxth	r0, r0
 801ded2:	fa1f fc8c 	uxth.w	ip, ip
 801ded6:	fb00 f30c 	mul.w	r3, r0, ip
 801deda:	0100      	lsls	r0, r0, #4
 801dedc:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801dee0:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 801dee4:	1ac0      	subs	r0, r0, r3
 801dee6:	fa1f fc8c 	uxth.w	ip, ip
 801deea:	b280      	uxth	r0, r0
 801deec:	eba1 010c 	sub.w	r1, r1, ip
 801def0:	fa1f fa81 	uxth.w	sl, r1
 801def4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801def6:	4348      	muls	r0, r1
 801def8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801defa:	fb02 020a 	mla	r2, r2, sl, r0
 801defe:	fb0c 2c01 	mla	ip, ip, r1, r2
 801df02:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801df04:	fb03 c302 	mla	r3, r3, r2, ip
 801df08:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801df0c:	2bff      	cmp	r3, #255	@ 0xff
 801df0e:	d12b      	bne.n	801df68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801df10:	4b13      	ldr	r3, [pc, #76]	@ (801df60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801df12:	681a      	ldr	r2, [r3, #0]
 801df14:	4b13      	ldr	r3, [pc, #76]	@ (801df64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801df16:	0951      	lsrs	r1, r2, #5
 801df18:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801df1c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801df20:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801df24:	430b      	orrs	r3, r1
 801df26:	4313      	orrs	r3, r2
 801df28:	f8ae 3000 	strh.w	r3, [lr]
 801df2c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801df2e:	f10e 0e02 	add.w	lr, lr, #2
 801df32:	f108 38ff 	add.w	r8, r8, #4294967295
 801df36:	441c      	add	r4, r3
 801df38:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801df3a:	441e      	add	r6, r3
 801df3c:	e6cc      	b.n	801dcd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801df3e:	f1bc 0f00 	cmp.w	ip, #0
 801df42:	d0c5      	beq.n	801ded0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801df44:	9908      	ldr	r1, [sp, #32]
 801df46:	440b      	add	r3, r1
 801df48:	0859      	lsrs	r1, r3, #1
 801df4a:	07db      	lsls	r3, r3, #31
 801df4c:	5c79      	ldrb	r1, [r7, r1]
 801df4e:	bf54      	ite	pl
 801df50:	f001 010f 	andpl.w	r1, r1, #15
 801df54:	1109      	asrmi	r1, r1, #4
 801df56:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801df5a:	b2c9      	uxtb	r1, r1
 801df5c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801df5e:	e7b7      	b.n	801ded0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801df60:	200150b4 	.word	0x200150b4
 801df64:	fffff800 	.word	0xfffff800
 801df68:	2b00      	cmp	r3, #0
 801df6a:	d0df      	beq.n	801df2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801df6c:	4a21      	ldr	r2, [pc, #132]	@ (801dff4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801df6e:	fa1f fa83 	uxth.w	sl, r3
 801df72:	f8be c000 	ldrh.w	ip, [lr]
 801df76:	43db      	mvns	r3, r3
 801df78:	6810      	ldr	r0, [r2, #0]
 801df7a:	ea4f 212c 	mov.w	r1, ip, asr #8
 801df7e:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801df82:	b2db      	uxtb	r3, r3
 801df84:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801df88:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801df8c:	fb12 f20a 	smulbb	r2, r2, sl
 801df90:	b2c0      	uxtb	r0, r0
 801df92:	fb1b fb0a 	smulbb	fp, fp, sl
 801df96:	fb01 2103 	mla	r1, r1, r3, r2
 801df9a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801df9e:	fb10 f00a 	smulbb	r0, r0, sl
 801dfa2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801dfa6:	b289      	uxth	r1, r1
 801dfa8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801dfac:	fa5f fc8c 	uxtb.w	ip, ip
 801dfb0:	fb02 b203 	mla	r2, r2, r3, fp
 801dfb4:	fb0c 0003 	mla	r0, ip, r3, r0
 801dfb8:	1c4b      	adds	r3, r1, #1
 801dfba:	b292      	uxth	r2, r2
 801dfbc:	b280      	uxth	r0, r0
 801dfbe:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801dfc2:	f100 0b01 	add.w	fp, r0, #1
 801dfc6:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801dfca:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801dfce:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801dfd2:	ea4b 0101 	orr.w	r1, fp, r1
 801dfd6:	f102 0b01 	add.w	fp, r2, #1
 801dfda:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801dfde:	0952      	lsrs	r2, r2, #5
 801dfe0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dfe4:	4311      	orrs	r1, r2
 801dfe6:	f8ae 1000 	strh.w	r1, [lr]
 801dfea:	e79f      	b.n	801df2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801dfec:	b013      	add	sp, #76	@ 0x4c
 801dfee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dff2:	bf00      	nop
 801dff4:	200150b4 	.word	0x200150b4

0801dff8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801dff8:	b570      	push	{r4, r5, r6, lr}
 801dffa:	1208      	asrs	r0, r1, #8
 801dffc:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801e000:	b29e      	uxth	r6, r3
 801e002:	1213      	asrs	r3, r2, #8
 801e004:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e008:	10cc      	asrs	r4, r1, #3
 801e00a:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801e00e:	00c9      	lsls	r1, r1, #3
 801e010:	fb10 f006 	smulbb	r0, r0, r6
 801e014:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801e018:	fb13 f305 	smulbb	r3, r3, r5
 801e01c:	fb14 f406 	smulbb	r4, r4, r6
 801e020:	4418      	add	r0, r3
 801e022:	10d3      	asrs	r3, r2, #3
 801e024:	00d2      	lsls	r2, r2, #3
 801e026:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801e02a:	b280      	uxth	r0, r0
 801e02c:	b2d2      	uxtb	r2, r2
 801e02e:	fb13 f305 	smulbb	r3, r3, r5
 801e032:	fb12 f205 	smulbb	r2, r2, r5
 801e036:	441c      	add	r4, r3
 801e038:	b2cb      	uxtb	r3, r1
 801e03a:	fb13 f306 	smulbb	r3, r3, r6
 801e03e:	b2a4      	uxth	r4, r4
 801e040:	4413      	add	r3, r2
 801e042:	1c42      	adds	r2, r0, #1
 801e044:	b29b      	uxth	r3, r3
 801e046:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e04a:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 801e04e:	1c58      	adds	r0, r3, #1
 801e050:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e054:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801e058:	4310      	orrs	r0, r2
 801e05a:	1c62      	adds	r2, r4, #1
 801e05c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801e060:	0964      	lsrs	r4, r4, #5
 801e062:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801e066:	4320      	orrs	r0, r4
 801e068:	bd70      	pop	{r4, r5, r6, pc}
	...

0801e06c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801e06c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e070:	b08f      	sub	sp, #60	@ 0x3c
 801e072:	461c      	mov	r4, r3
 801e074:	460d      	mov	r5, r1
 801e076:	4616      	mov	r6, r2
 801e078:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801e07c:	9004      	str	r0, [sp, #16]
 801e07e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e080:	2f00      	cmp	r7, #0
 801e082:	f000 80f6 	beq.w	801e272 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801e086:	6820      	ldr	r0, [r4, #0]
 801e088:	aa0a      	add	r2, sp, #40	@ 0x28
 801e08a:	6861      	ldr	r1, [r4, #4]
 801e08c:	f04f 0802 	mov.w	r8, #2
 801e090:	3604      	adds	r6, #4
 801e092:	c203      	stmia	r2!, {r0, r1}
 801e094:	6818      	ldr	r0, [r3, #0]
 801e096:	aa0c      	add	r2, sp, #48	@ 0x30
 801e098:	6859      	ldr	r1, [r3, #4]
 801e09a:	c203      	stmia	r2!, {r0, r1}
 801e09c:	a80a      	add	r0, sp, #40	@ 0x28
 801e09e:	f7ef fe3f 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e0a2:	4621      	mov	r1, r4
 801e0a4:	a80c      	add	r0, sp, #48	@ 0x30
 801e0a6:	f7ef fe63 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e0aa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801e0ae:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801e0b2:	f002 0301 	and.w	r3, r2, #1
 801e0b6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801e0ba:	9306      	str	r3, [sp, #24]
 801e0bc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801e0c0:	f003 0101 	and.w	r1, r3, #1
 801e0c4:	9105      	str	r1, [sp, #20]
 801e0c6:	9805      	ldr	r0, [sp, #20]
 801e0c8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801e0cc:	4403      	add	r3, r0
 801e0ce:	fb01 2303 	mla	r3, r1, r3, r2
 801e0d2:	fb93 f3f8 	sdiv	r3, r3, r8
 801e0d6:	441d      	add	r5, r3
 801e0d8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801e0dc:	441a      	add	r2, r3
 801e0de:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801e0e2:	4419      	add	r1, r3
 801e0e4:	4b64      	ldr	r3, [pc, #400]	@ (801e278 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801e0e6:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801e0ea:	6818      	ldr	r0, [r3, #0]
 801e0ec:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801e0f0:	6803      	ldr	r3, [r0, #0]
 801e0f2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e0f4:	4798      	blx	r3
 801e0f6:	4a61      	ldr	r2, [pc, #388]	@ (801e27c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801e0f8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801e0fc:	2fff      	cmp	r7, #255	@ 0xff
 801e0fe:	8813      	ldrh	r3, [r2, #0]
 801e100:	4611      	mov	r1, r2
 801e102:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 801e106:	fb03 fb0b 	mul.w	fp, r3, fp
 801e10a:	fb03 a404 	mla	r4, r3, r4, sl
 801e10e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e112:	d06b      	beq.n	801e1ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 801e114:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 801e118:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801e11c:	9303      	str	r3, [sp, #12]
 801e11e:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801e122:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801e126:	9b07      	ldr	r3, [sp, #28]
 801e128:	42a3      	cmp	r3, r4
 801e12a:	f240 809d 	bls.w	801e268 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801e12e:	9b06      	ldr	r3, [sp, #24]
 801e130:	2b00      	cmp	r3, #0
 801e132:	d039      	beq.n	801e1a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 801e134:	782b      	ldrb	r3, [r5, #0]
 801e136:	f105 0801 	add.w	r8, r5, #1
 801e13a:	f109 3bff 	add.w	fp, r9, #4294967295
 801e13e:	8822      	ldrh	r2, [r4, #0]
 801e140:	f003 030f 	and.w	r3, r3, #15
 801e144:	9804      	ldr	r0, [sp, #16]
 801e146:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801e14a:	9b03      	ldr	r3, [sp, #12]
 801e14c:	9300      	str	r3, [sp, #0]
 801e14e:	463b      	mov	r3, r7
 801e150:	f7ff ff52 	bl	801dff8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801e154:	f824 0b02 	strh.w	r0, [r4], #2
 801e158:	f1bb 0f01 	cmp.w	fp, #1
 801e15c:	46a2      	mov	sl, r4
 801e15e:	f104 0404 	add.w	r4, r4, #4
 801e162:	dd24      	ble.n	801e1ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 801e164:	f898 3000 	ldrb.w	r3, [r8]
 801e168:	f1ab 0b02 	sub.w	fp, fp, #2
 801e16c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801e170:	091b      	lsrs	r3, r3, #4
 801e172:	9804      	ldr	r0, [sp, #16]
 801e174:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801e178:	9b03      	ldr	r3, [sp, #12]
 801e17a:	9300      	str	r3, [sp, #0]
 801e17c:	463b      	mov	r3, r7
 801e17e:	f7ff ff3b 	bl	801dff8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801e182:	f824 0c04 	strh.w	r0, [r4, #-4]
 801e186:	f818 3b01 	ldrb.w	r3, [r8], #1
 801e18a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801e18e:	f003 030f 	and.w	r3, r3, #15
 801e192:	9804      	ldr	r0, [sp, #16]
 801e194:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801e198:	9b03      	ldr	r3, [sp, #12]
 801e19a:	9300      	str	r3, [sp, #0]
 801e19c:	463b      	mov	r3, r7
 801e19e:	f7ff ff2b 	bl	801dff8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801e1a2:	f824 0c02 	strh.w	r0, [r4, #-2]
 801e1a6:	e7d7      	b.n	801e158 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 801e1a8:	46a8      	mov	r8, r5
 801e1aa:	46cb      	mov	fp, r9
 801e1ac:	e7d4      	b.n	801e158 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 801e1ae:	d10e      	bne.n	801e1ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 801e1b0:	f898 3000 	ldrb.w	r3, [r8]
 801e1b4:	f8ba 2000 	ldrh.w	r2, [sl]
 801e1b8:	091b      	lsrs	r3, r3, #4
 801e1ba:	9804      	ldr	r0, [sp, #16]
 801e1bc:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801e1c0:	9b03      	ldr	r3, [sp, #12]
 801e1c2:	9300      	str	r3, [sp, #0]
 801e1c4:	463b      	mov	r3, r7
 801e1c6:	f7ff ff17 	bl	801dff8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801e1ca:	f82a 0b02 	strh.w	r0, [sl], #2
 801e1ce:	9b08      	ldr	r3, [sp, #32]
 801e1d0:	9a05      	ldr	r2, [sp, #20]
 801e1d2:	881c      	ldrh	r4, [r3, #0]
 801e1d4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801e1d8:	eba4 0409 	sub.w	r4, r4, r9
 801e1dc:	4413      	add	r3, r2
 801e1de:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e1e0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801e1e4:	fb93 f3f2 	sdiv	r3, r3, r2
 801e1e8:	441d      	add	r5, r3
 801e1ea:	e79c      	b.n	801e126 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 801e1ec:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801e1f0:	45a3      	cmp	fp, r4
 801e1f2:	d939      	bls.n	801e268 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801e1f4:	9b06      	ldr	r3, [sp, #24]
 801e1f6:	b1fb      	cbz	r3, 801e238 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801e1f8:	782b      	ldrb	r3, [r5, #0]
 801e1fa:	1c6a      	adds	r2, r5, #1
 801e1fc:	f109 30ff 	add.w	r0, r9, #4294967295
 801e200:	3402      	adds	r4, #2
 801e202:	f003 030f 	and.w	r3, r3, #15
 801e206:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e20a:	f824 3c02 	strh.w	r3, [r4, #-2]
 801e20e:	2801      	cmp	r0, #1
 801e210:	4623      	mov	r3, r4
 801e212:	f104 0404 	add.w	r4, r4, #4
 801e216:	dd12      	ble.n	801e23e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 801e218:	7813      	ldrb	r3, [r2, #0]
 801e21a:	3802      	subs	r0, #2
 801e21c:	091b      	lsrs	r3, r3, #4
 801e21e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e222:	f824 3c04 	strh.w	r3, [r4, #-4]
 801e226:	f812 3b01 	ldrb.w	r3, [r2], #1
 801e22a:	f003 030f 	and.w	r3, r3, #15
 801e22e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e232:	f824 3c02 	strh.w	r3, [r4, #-2]
 801e236:	e7ea      	b.n	801e20e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801e238:	462a      	mov	r2, r5
 801e23a:	4648      	mov	r0, r9
 801e23c:	e7e7      	b.n	801e20e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801e23e:	d106      	bne.n	801e24e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 801e240:	7812      	ldrb	r2, [r2, #0]
 801e242:	3302      	adds	r3, #2
 801e244:	0912      	lsrs	r2, r2, #4
 801e246:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e24a:	f823 2c02 	strh.w	r2, [r3, #-2]
 801e24e:	880c      	ldrh	r4, [r1, #0]
 801e250:	9a05      	ldr	r2, [sp, #20]
 801e252:	eba4 0409 	sub.w	r4, r4, r9
 801e256:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801e25a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801e25e:	4413      	add	r3, r2
 801e260:	fb93 f3f8 	sdiv	r3, r3, r8
 801e264:	441d      	add	r5, r3
 801e266:	e7c3      	b.n	801e1f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 801e268:	4b03      	ldr	r3, [pc, #12]	@ (801e278 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801e26a:	6818      	ldr	r0, [r3, #0]
 801e26c:	6803      	ldr	r3, [r0, #0]
 801e26e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e270:	4798      	blx	r3
 801e272:	b00f      	add	sp, #60	@ 0x3c
 801e274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e278:	200150ac 	.word	0x200150ac
 801e27c:	200150a6 	.word	0x200150a6

0801e280 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 801e280:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e282:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801e286:	0a0f      	lsrs	r7, r1, #8
 801e288:	2dff      	cmp	r5, #255	@ 0xff
 801e28a:	d10c      	bne.n	801e2a6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801e28c:	2bff      	cmp	r3, #255	@ 0xff
 801e28e:	d10a      	bne.n	801e2a6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801e290:	0948      	lsrs	r0, r1, #5
 801e292:	4b25      	ldr	r3, [pc, #148]	@ (801e328 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 801e294:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e298:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e29c:	403b      	ands	r3, r7
 801e29e:	4318      	orrs	r0, r3
 801e2a0:	4308      	orrs	r0, r1
 801e2a2:	b280      	uxth	r0, r0
 801e2a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e2a6:	fb15 f503 	smulbb	r5, r5, r3
 801e2aa:	1214      	asrs	r4, r2, #8
 801e2ac:	10d6      	asrs	r6, r2, #3
 801e2ae:	b2ab      	uxth	r3, r5
 801e2b0:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801e2b4:	00d0      	lsls	r0, r2, #3
 801e2b6:	f3c1 4207 	ubfx	r2, r1, #16, #8
 801e2ba:	1c5d      	adds	r5, r3, #1
 801e2bc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e2c0:	b2c0      	uxtb	r0, r0
 801e2c2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801e2c6:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 801e2ca:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e2ce:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801e2d2:	fa1f fc85 	uxth.w	ip, r5
 801e2d6:	43ed      	mvns	r5, r5
 801e2d8:	fb12 f20c 	smulbb	r2, r2, ip
 801e2dc:	b2eb      	uxtb	r3, r5
 801e2de:	b2fd      	uxtb	r5, r7
 801e2e0:	fb04 2403 	mla	r4, r4, r3, r2
 801e2e4:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 801e2e8:	fb15 f50c 	smulbb	r5, r5, ip
 801e2ec:	b2c8      	uxtb	r0, r1
 801e2ee:	b2a4      	uxth	r4, r4
 801e2f0:	fb10 f00c 	smulbb	r0, r0, ip
 801e2f4:	fb06 5503 	mla	r5, r6, r3, r5
 801e2f8:	fb02 0003 	mla	r0, r2, r3, r0
 801e2fc:	b2ad      	uxth	r5, r5
 801e2fe:	b283      	uxth	r3, r0
 801e300:	1c60      	adds	r0, r4, #1
 801e302:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 801e306:	1c58      	adds	r0, r3, #1
 801e308:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e30c:	1c6b      	adds	r3, r5, #1
 801e30e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801e312:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e316:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801e31a:	096d      	lsrs	r5, r5, #5
 801e31c:	4320      	orrs	r0, r4
 801e31e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e322:	4328      	orrs	r0, r5
 801e324:	e7be      	b.n	801e2a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 801e326:	bf00      	nop
 801e328:	00fff800 	.word	0x00fff800

0801e32c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801e32c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e330:	461c      	mov	r4, r3
 801e332:	b08d      	sub	sp, #52	@ 0x34
 801e334:	460d      	mov	r5, r1
 801e336:	4616      	mov	r6, r2
 801e338:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801e33a:	4680      	mov	r8, r0
 801e33c:	6861      	ldr	r1, [r4, #4]
 801e33e:	aa08      	add	r2, sp, #32
 801e340:	6820      	ldr	r0, [r4, #0]
 801e342:	f04f 0a02 	mov.w	sl, #2
 801e346:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 801e34a:	3604      	adds	r6, #4
 801e34c:	c203      	stmia	r2!, {r0, r1}
 801e34e:	6818      	ldr	r0, [r3, #0]
 801e350:	aa0a      	add	r2, sp, #40	@ 0x28
 801e352:	6859      	ldr	r1, [r3, #4]
 801e354:	c203      	stmia	r2!, {r0, r1}
 801e356:	a808      	add	r0, sp, #32
 801e358:	f7ef fce2 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e35c:	4621      	mov	r1, r4
 801e35e:	a80a      	add	r0, sp, #40	@ 0x28
 801e360:	f7ef fd06 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e364:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801e368:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 801e36c:	f002 0301 	and.w	r3, r2, #1
 801e370:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 801e374:	9303      	str	r3, [sp, #12]
 801e376:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801e37a:	f003 0101 	and.w	r1, r3, #1
 801e37e:	9102      	str	r1, [sp, #8]
 801e380:	9802      	ldr	r0, [sp, #8]
 801e382:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801e386:	4403      	add	r3, r0
 801e388:	fb01 2303 	mla	r3, r1, r3, r2
 801e38c:	fb93 f3fa 	sdiv	r3, r3, sl
 801e390:	441d      	add	r5, r3
 801e392:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801e396:	441a      	add	r2, r3
 801e398:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801e39c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801e3a0:	4419      	add	r1, r3
 801e3a2:	4a3e      	ldr	r2, [pc, #248]	@ (801e49c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 801e3a4:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 801e3a8:	6810      	ldr	r0, [r2, #0]
 801e3aa:	9205      	str	r2, [sp, #20]
 801e3ac:	6803      	ldr	r3, [r0, #0]
 801e3ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e3b0:	4798      	blx	r3
 801e3b2:	4b3b      	ldr	r3, [pc, #236]	@ (801e4a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 801e3b4:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 801e3b8:	8819      	ldrh	r1, [r3, #0]
 801e3ba:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 801e3be:	434f      	muls	r7, r1
 801e3c0:	fb01 c404 	mla	r4, r1, r4, ip
 801e3c4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e3c8:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 801e3cc:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 801e3d0:	9204      	str	r2, [sp, #16]
 801e3d2:	9b04      	ldr	r3, [sp, #16]
 801e3d4:	429c      	cmp	r4, r3
 801e3d6:	d258      	bcs.n	801e48a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 801e3d8:	9b03      	ldr	r3, [sp, #12]
 801e3da:	2b00      	cmp	r3, #0
 801e3dc:	d034      	beq.n	801e448 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 801e3de:	782b      	ldrb	r3, [r5, #0]
 801e3e0:	1c6f      	adds	r7, r5, #1
 801e3e2:	f003 030f 	and.w	r3, r3, #15
 801e3e6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801e3ea:	0e0b      	lsrs	r3, r1, #24
 801e3ec:	d006      	beq.n	801e3fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 801e3ee:	8822      	ldrh	r2, [r4, #0]
 801e3f0:	4640      	mov	r0, r8
 801e3f2:	9300      	str	r3, [sp, #0]
 801e3f4:	464b      	mov	r3, r9
 801e3f6:	f7ff ff43 	bl	801e280 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801e3fa:	8020      	strh	r0, [r4, #0]
 801e3fc:	3402      	adds	r4, #2
 801e3fe:	f10b 3aff 	add.w	sl, fp, #4294967295
 801e402:	f1ba 0f01 	cmp.w	sl, #1
 801e406:	dd22      	ble.n	801e44e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801e408:	783b      	ldrb	r3, [r7, #0]
 801e40a:	091b      	lsrs	r3, r3, #4
 801e40c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801e410:	0e0b      	lsrs	r3, r1, #24
 801e412:	d006      	beq.n	801e422 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 801e414:	8822      	ldrh	r2, [r4, #0]
 801e416:	4640      	mov	r0, r8
 801e418:	9300      	str	r3, [sp, #0]
 801e41a:	464b      	mov	r3, r9
 801e41c:	f7ff ff30 	bl	801e280 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801e420:	8020      	strh	r0, [r4, #0]
 801e422:	f817 3b01 	ldrb.w	r3, [r7], #1
 801e426:	f003 030f 	and.w	r3, r3, #15
 801e42a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801e42e:	0e0b      	lsrs	r3, r1, #24
 801e430:	d006      	beq.n	801e440 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 801e432:	8862      	ldrh	r2, [r4, #2]
 801e434:	4640      	mov	r0, r8
 801e436:	9300      	str	r3, [sp, #0]
 801e438:	464b      	mov	r3, r9
 801e43a:	f7ff ff21 	bl	801e280 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801e43e:	8060      	strh	r0, [r4, #2]
 801e440:	3404      	adds	r4, #4
 801e442:	f1aa 0a02 	sub.w	sl, sl, #2
 801e446:	e7dc      	b.n	801e402 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801e448:	462f      	mov	r7, r5
 801e44a:	46da      	mov	sl, fp
 801e44c:	e7d9      	b.n	801e402 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801e44e:	d10d      	bne.n	801e46c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 801e450:	783b      	ldrb	r3, [r7, #0]
 801e452:	091b      	lsrs	r3, r3, #4
 801e454:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801e458:	0e0b      	lsrs	r3, r1, #24
 801e45a:	d006      	beq.n	801e46a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 801e45c:	8822      	ldrh	r2, [r4, #0]
 801e45e:	4640      	mov	r0, r8
 801e460:	9300      	str	r3, [sp, #0]
 801e462:	464b      	mov	r3, r9
 801e464:	f7ff ff0c 	bl	801e280 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801e468:	8020      	strh	r0, [r4, #0]
 801e46a:	3402      	adds	r4, #2
 801e46c:	9b06      	ldr	r3, [sp, #24]
 801e46e:	9a02      	ldr	r2, [sp, #8]
 801e470:	881b      	ldrh	r3, [r3, #0]
 801e472:	eba3 030b 	sub.w	r3, r3, fp
 801e476:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e47a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801e47e:	4413      	add	r3, r2
 801e480:	9a07      	ldr	r2, [sp, #28]
 801e482:	fb93 f3f2 	sdiv	r3, r3, r2
 801e486:	441d      	add	r5, r3
 801e488:	e7a3      	b.n	801e3d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 801e48a:	9b05      	ldr	r3, [sp, #20]
 801e48c:	6818      	ldr	r0, [r3, #0]
 801e48e:	6803      	ldr	r3, [r0, #0]
 801e490:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e492:	4798      	blx	r3
 801e494:	b00d      	add	sp, #52	@ 0x34
 801e496:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e49a:	bf00      	nop
 801e49c:	200150ac 	.word	0x200150ac
 801e4a0:	200150a6 	.word	0x200150a6

0801e4a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 801e4a4:	b570      	push	{r4, r5, r6, lr}
 801e4a6:	1214      	asrs	r4, r2, #8
 801e4a8:	788d      	ldrb	r5, [r1, #2]
 801e4aa:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801e4ae:	10d0      	asrs	r0, r2, #3
 801e4b0:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801e4b4:	00d2      	lsls	r2, r2, #3
 801e4b6:	fb15 f503 	smulbb	r5, r5, r3
 801e4ba:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e4be:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e4c2:	b2d2      	uxtb	r2, r2
 801e4c4:	fb04 5506 	mla	r5, r4, r6, r5
 801e4c8:	784c      	ldrb	r4, [r1, #1]
 801e4ca:	7809      	ldrb	r1, [r1, #0]
 801e4cc:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 801e4d0:	fb14 f403 	smulbb	r4, r4, r3
 801e4d4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e4d8:	fb11 f303 	smulbb	r3, r1, r3
 801e4dc:	b2ad      	uxth	r5, r5
 801e4de:	fb00 4406 	mla	r4, r0, r6, r4
 801e4e2:	fb02 3306 	mla	r3, r2, r6, r3
 801e4e6:	1c68      	adds	r0, r5, #1
 801e4e8:	b2a4      	uxth	r4, r4
 801e4ea:	b29b      	uxth	r3, r3
 801e4ec:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801e4f0:	1c62      	adds	r2, r4, #1
 801e4f2:	1c58      	adds	r0, r3, #1
 801e4f4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801e4f8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e4fc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e500:	0964      	lsrs	r4, r4, #5
 801e502:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801e506:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801e50a:	4328      	orrs	r0, r5
 801e50c:	4320      	orrs	r0, r4
 801e50e:	bd70      	pop	{r4, r5, r6, pc}

0801e510 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801e510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e514:	b08f      	sub	sp, #60	@ 0x3c
 801e516:	461c      	mov	r4, r3
 801e518:	4682      	mov	sl, r0
 801e51a:	460e      	mov	r6, r1
 801e51c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801e520:	4615      	mov	r5, r2
 801e522:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e524:	2f00      	cmp	r7, #0
 801e526:	f000 8141 	beq.w	801e7ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 801e52a:	6820      	ldr	r0, [r4, #0]
 801e52c:	aa0a      	add	r2, sp, #40	@ 0x28
 801e52e:	6861      	ldr	r1, [r4, #4]
 801e530:	f04f 0802 	mov.w	r8, #2
 801e534:	3504      	adds	r5, #4
 801e536:	c203      	stmia	r2!, {r0, r1}
 801e538:	6818      	ldr	r0, [r3, #0]
 801e53a:	aa0c      	add	r2, sp, #48	@ 0x30
 801e53c:	6859      	ldr	r1, [r3, #4]
 801e53e:	c203      	stmia	r2!, {r0, r1}
 801e540:	a80a      	add	r0, sp, #40	@ 0x28
 801e542:	f7ef fbed 	bl	800dd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e546:	4621      	mov	r1, r4
 801e548:	a80c      	add	r0, sp, #48	@ 0x30
 801e54a:	f7ef fc11 	bl	800dd70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e54e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801e552:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801e556:	f002 0301 	and.w	r3, r2, #1
 801e55a:	9306      	str	r3, [sp, #24]
 801e55c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801e560:	f003 0101 	and.w	r1, r3, #1
 801e564:	9105      	str	r1, [sp, #20]
 801e566:	9805      	ldr	r0, [sp, #20]
 801e568:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801e56c:	4403      	add	r3, r0
 801e56e:	fb01 2303 	mla	r3, r1, r3, r2
 801e572:	fb93 f3f8 	sdiv	r3, r3, r8
 801e576:	441e      	add	r6, r3
 801e578:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801e57c:	441a      	add	r2, r3
 801e57e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801e582:	4419      	add	r1, r3
 801e584:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801e588:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801e58c:	9303      	str	r3, [sp, #12]
 801e58e:	4b89      	ldr	r3, [pc, #548]	@ (801e7b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801e590:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801e594:	6818      	ldr	r0, [r3, #0]
 801e596:	6803      	ldr	r3, [r0, #0]
 801e598:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e59a:	4798      	blx	r3
 801e59c:	4a86      	ldr	r2, [pc, #536]	@ (801e7b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 801e59e:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801e5a2:	2fff      	cmp	r7, #255	@ 0xff
 801e5a4:	8813      	ldrh	r3, [r2, #0]
 801e5a6:	4694      	mov	ip, r2
 801e5a8:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 801e5ac:	fb03 9404 	mla	r4, r3, r4, r9
 801e5b0:	fb03 f30b 	mul.w	r3, r3, fp
 801e5b4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e5b8:	d071      	beq.n	801e69e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 801e5ba:	43f9      	mvns	r1, r7
 801e5bc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e5c0:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801e5c4:	b2c9      	uxtb	r1, r1
 801e5c6:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801e5ca:	9104      	str	r1, [sp, #16]
 801e5cc:	9b07      	ldr	r3, [sp, #28]
 801e5ce:	42a3      	cmp	r3, r4
 801e5d0:	f240 80e7 	bls.w	801e7a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 801e5d4:	9b06      	ldr	r3, [sp, #24]
 801e5d6:	2b00      	cmp	r3, #0
 801e5d8:	d03d      	beq.n	801e656 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 801e5da:	7831      	ldrb	r1, [r6, #0]
 801e5dc:	4650      	mov	r0, sl
 801e5de:	9b04      	ldr	r3, [sp, #16]
 801e5e0:	f106 0801 	add.w	r8, r6, #1
 801e5e4:	f001 010f 	and.w	r1, r1, #15
 801e5e8:	8822      	ldrh	r2, [r4, #0]
 801e5ea:	9300      	str	r3, [sp, #0]
 801e5ec:	463b      	mov	r3, r7
 801e5ee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e5f2:	4429      	add	r1, r5
 801e5f4:	f7ff ff56 	bl	801e4a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801e5f8:	9b03      	ldr	r3, [sp, #12]
 801e5fa:	f824 0b02 	strh.w	r0, [r4], #2
 801e5fe:	f103 3bff 	add.w	fp, r3, #4294967295
 801e602:	f1bb 0f01 	cmp.w	fp, #1
 801e606:	46a1      	mov	r9, r4
 801e608:	f104 0404 	add.w	r4, r4, #4
 801e60c:	dd27      	ble.n	801e65e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 801e60e:	f898 1000 	ldrb.w	r1, [r8]
 801e612:	4650      	mov	r0, sl
 801e614:	9b04      	ldr	r3, [sp, #16]
 801e616:	f1ab 0b02 	sub.w	fp, fp, #2
 801e61a:	0909      	lsrs	r1, r1, #4
 801e61c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801e620:	9300      	str	r3, [sp, #0]
 801e622:	463b      	mov	r3, r7
 801e624:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e628:	4429      	add	r1, r5
 801e62a:	f7ff ff3b 	bl	801e4a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801e62e:	f824 0c04 	strh.w	r0, [r4, #-4]
 801e632:	f818 1b01 	ldrb.w	r1, [r8], #1
 801e636:	4650      	mov	r0, sl
 801e638:	9b04      	ldr	r3, [sp, #16]
 801e63a:	f001 010f 	and.w	r1, r1, #15
 801e63e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801e642:	9300      	str	r3, [sp, #0]
 801e644:	463b      	mov	r3, r7
 801e646:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e64a:	4429      	add	r1, r5
 801e64c:	f7ff ff2a 	bl	801e4a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801e650:	f824 0c02 	strh.w	r0, [r4, #-2]
 801e654:	e7d5      	b.n	801e602 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 801e656:	46b0      	mov	r8, r6
 801e658:	f8dd b00c 	ldr.w	fp, [sp, #12]
 801e65c:	e7d1      	b.n	801e602 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 801e65e:	d10f      	bne.n	801e680 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 801e660:	f898 1000 	ldrb.w	r1, [r8]
 801e664:	4650      	mov	r0, sl
 801e666:	9b04      	ldr	r3, [sp, #16]
 801e668:	0909      	lsrs	r1, r1, #4
 801e66a:	f8b9 2000 	ldrh.w	r2, [r9]
 801e66e:	9300      	str	r3, [sp, #0]
 801e670:	463b      	mov	r3, r7
 801e672:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e676:	4429      	add	r1, r5
 801e678:	f7ff ff14 	bl	801e4a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801e67c:	f829 0b02 	strh.w	r0, [r9], #2
 801e680:	9b08      	ldr	r3, [sp, #32]
 801e682:	9a05      	ldr	r2, [sp, #20]
 801e684:	881c      	ldrh	r4, [r3, #0]
 801e686:	9b03      	ldr	r3, [sp, #12]
 801e688:	1ae4      	subs	r4, r4, r3
 801e68a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801e68e:	4413      	add	r3, r2
 801e690:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e692:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801e696:	fb93 f3f2 	sdiv	r3, r3, r2
 801e69a:	441e      	add	r6, r3
 801e69c:	e796      	b.n	801e5cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 801e69e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e6a2:	4f46      	ldr	r7, [pc, #280]	@ (801e7bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 801e6a4:	42a3      	cmp	r3, r4
 801e6a6:	d97c      	bls.n	801e7a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 801e6a8:	9a06      	ldr	r2, [sp, #24]
 801e6aa:	2a00      	cmp	r2, #0
 801e6ac:	d054      	beq.n	801e758 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 801e6ae:	7830      	ldrb	r0, [r6, #0]
 801e6b0:	1c71      	adds	r1, r6, #1
 801e6b2:	f000 000f 	and.w	r0, r0, #15
 801e6b6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e6ba:	eb05 0e00 	add.w	lr, r5, r0
 801e6be:	5c28      	ldrb	r0, [r5, r0]
 801e6c0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 801e6c4:	f89e e001 	ldrb.w	lr, [lr, #1]
 801e6c8:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801e6cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e6d0:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801e6d4:	ea42 020e 	orr.w	r2, r2, lr
 801e6d8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 801e6dc:	f824 2b02 	strh.w	r2, [r4], #2
 801e6e0:	9a03      	ldr	r2, [sp, #12]
 801e6e2:	f102 3eff 	add.w	lr, r2, #4294967295
 801e6e6:	f1be 0f01 	cmp.w	lr, #1
 801e6ea:	4620      	mov	r0, r4
 801e6ec:	f104 0404 	add.w	r4, r4, #4
 801e6f0:	dd36      	ble.n	801e760 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 801e6f2:	7808      	ldrb	r0, [r1, #0]
 801e6f4:	f1ae 0e02 	sub.w	lr, lr, #2
 801e6f8:	0900      	lsrs	r0, r0, #4
 801e6fa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e6fe:	eb05 0a00 	add.w	sl, r5, r0
 801e702:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e706:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e70a:	00d2      	lsls	r2, r2, #3
 801e70c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801e710:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e714:	ea49 0202 	orr.w	r2, r9, r2
 801e718:	f815 9000 	ldrb.w	r9, [r5, r0]
 801e71c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e720:	f824 2c04 	strh.w	r2, [r4, #-4]
 801e724:	f811 0b01 	ldrb.w	r0, [r1], #1
 801e728:	f000 000f 	and.w	r0, r0, #15
 801e72c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e730:	eb05 0a00 	add.w	sl, r5, r0
 801e734:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e738:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e73c:	00d2      	lsls	r2, r2, #3
 801e73e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801e742:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e746:	ea49 0202 	orr.w	r2, r9, r2
 801e74a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801e74e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e752:	f824 2c02 	strh.w	r2, [r4, #-2]
 801e756:	e7c6      	b.n	801e6e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801e758:	4631      	mov	r1, r6
 801e75a:	f8dd e00c 	ldr.w	lr, [sp, #12]
 801e75e:	e7c2      	b.n	801e6e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801e760:	d111      	bne.n	801e786 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801e762:	7809      	ldrb	r1, [r1, #0]
 801e764:	0909      	lsrs	r1, r1, #4
 801e766:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e76a:	186c      	adds	r4, r5, r1
 801e76c:	5c69      	ldrb	r1, [r5, r1]
 801e76e:	78a2      	ldrb	r2, [r4, #2]
 801e770:	7864      	ldrb	r4, [r4, #1]
 801e772:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801e776:	00e4      	lsls	r4, r4, #3
 801e778:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801e77c:	4322      	orrs	r2, r4
 801e77e:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 801e782:	f820 2b02 	strh.w	r2, [r0], #2
 801e786:	9a03      	ldr	r2, [sp, #12]
 801e788:	f8bc 4000 	ldrh.w	r4, [ip]
 801e78c:	9905      	ldr	r1, [sp, #20]
 801e78e:	1aa4      	subs	r4, r4, r2
 801e790:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801e794:	440a      	add	r2, r1
 801e796:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e79a:	fb92 f2f8 	sdiv	r2, r2, r8
 801e79e:	4416      	add	r6, r2
 801e7a0:	e780      	b.n	801e6a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 801e7a2:	4b04      	ldr	r3, [pc, #16]	@ (801e7b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801e7a4:	6818      	ldr	r0, [r3, #0]
 801e7a6:	6803      	ldr	r3, [r0, #0]
 801e7a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e7aa:	4798      	blx	r3
 801e7ac:	b00f      	add	sp, #60	@ 0x3c
 801e7ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e7b2:	bf00      	nop
 801e7b4:	200150ac 	.word	0x200150ac
 801e7b8:	200150a6 	.word	0x200150a6
 801e7bc:	fffff800 	.word	0xfffff800

0801e7c0 <CRC_Lock>:
 801e7c0:	4a20      	ldr	r2, [pc, #128]	@ (801e844 <CRC_Lock+0x84>)
 801e7c2:	b530      	push	{r4, r5, lr}
 801e7c4:	6813      	ldr	r3, [r2, #0]
 801e7c6:	f64f 74f0 	movw	r4, #65520	@ 0xfff0
 801e7ca:	f24c 2540 	movw	r5, #49728	@ 0xc240
 801e7ce:	f023 0301 	bic.w	r3, r3, #1
 801e7d2:	6013      	str	r3, [r2, #0]
 801e7d4:	4b1c      	ldr	r3, [pc, #112]	@ (801e848 <CRC_Lock+0x88>)
 801e7d6:	681a      	ldr	r2, [r3, #0]
 801e7d8:	4022      	ands	r2, r4
 801e7da:	42aa      	cmp	r2, r5
 801e7dc:	d005      	beq.n	801e7ea <CRC_Lock+0x2a>
 801e7de:	681b      	ldr	r3, [r3, #0]
 801e7e0:	f24c 2270 	movw	r2, #49776	@ 0xc270
 801e7e4:	4023      	ands	r3, r4
 801e7e6:	4293      	cmp	r3, r2
 801e7e8:	d124      	bne.n	801e834 <CRC_Lock+0x74>
 801e7ea:	4b18      	ldr	r3, [pc, #96]	@ (801e84c <CRC_Lock+0x8c>)
 801e7ec:	681b      	ldr	r3, [r3, #0]
 801e7ee:	bb0b      	cbnz	r3, 801e834 <CRC_Lock+0x74>
 801e7f0:	4b17      	ldr	r3, [pc, #92]	@ (801e850 <CRC_Lock+0x90>)
 801e7f2:	681a      	ldr	r2, [r3, #0]
 801e7f4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801e7f8:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 801e7fc:	d00d      	beq.n	801e81a <CRC_Lock+0x5a>
 801e7fe:	681a      	ldr	r2, [r3, #0]
 801e800:	f240 4483 	movw	r4, #1155	@ 0x483
 801e804:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801e808:	42a2      	cmp	r2, r4
 801e80a:	d006      	beq.n	801e81a <CRC_Lock+0x5a>
 801e80c:	681b      	ldr	r3, [r3, #0]
 801e80e:	f240 4285 	movw	r2, #1157	@ 0x485
 801e812:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801e816:	4293      	cmp	r3, r2
 801e818:	d10c      	bne.n	801e834 <CRC_Lock+0x74>
 801e81a:	4b0e      	ldr	r3, [pc, #56]	@ (801e854 <CRC_Lock+0x94>)
 801e81c:	2201      	movs	r2, #1
 801e81e:	601a      	str	r2, [r3, #0]
 801e820:	681a      	ldr	r2, [r3, #0]
 801e822:	2a00      	cmp	r2, #0
 801e824:	d1fc      	bne.n	801e820 <CRC_Lock+0x60>
 801e826:	4b0c      	ldr	r3, [pc, #48]	@ (801e858 <CRC_Lock+0x98>)
 801e828:	6018      	str	r0, [r3, #0]
 801e82a:	6818      	ldr	r0, [r3, #0]
 801e82c:	1a43      	subs	r3, r0, r1
 801e82e:	4258      	negs	r0, r3
 801e830:	4158      	adcs	r0, r3
 801e832:	bd30      	pop	{r4, r5, pc}
 801e834:	4b09      	ldr	r3, [pc, #36]	@ (801e85c <CRC_Lock+0x9c>)
 801e836:	2201      	movs	r2, #1
 801e838:	601a      	str	r2, [r3, #0]
 801e83a:	681a      	ldr	r2, [r3, #0]
 801e83c:	2a00      	cmp	r2, #0
 801e83e:	d1fc      	bne.n	801e83a <CRC_Lock+0x7a>
 801e840:	4b07      	ldr	r3, [pc, #28]	@ (801e860 <CRC_Lock+0xa0>)
 801e842:	e7f1      	b.n	801e828 <CRC_Lock+0x68>
 801e844:	e0002000 	.word	0xe0002000
 801e848:	e000ed00 	.word	0xe000ed00
 801e84c:	e0042000 	.word	0xe0042000
 801e850:	5c001000 	.word	0x5c001000
 801e854:	58024c08 	.word	0x58024c08
 801e858:	58024c00 	.word	0x58024c00
 801e85c:	40023008 	.word	0x40023008
 801e860:	40023000 	.word	0x40023000

0801e864 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801e864:	6101      	str	r1, [r0, #16]
 801e866:	4770      	bx	lr

0801e868 <_ZN8touchgfx8Gestures4tickEv>:
 801e868:	7b83      	ldrb	r3, [r0, #14]
 801e86a:	b14b      	cbz	r3, 801e880 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801e86c:	8903      	ldrh	r3, [r0, #8]
 801e86e:	3301      	adds	r3, #1
 801e870:	b29b      	uxth	r3, r3
 801e872:	2b07      	cmp	r3, #7
 801e874:	8103      	strh	r3, [r0, #8]
 801e876:	bf81      	itttt	hi
 801e878:	2300      	movhi	r3, #0
 801e87a:	8143      	strhhi	r3, [r0, #10]
 801e87c:	8183      	strhhi	r3, [r0, #12]
 801e87e:	7383      	strbhi	r3, [r0, #14]
 801e880:	4770      	bx	lr
	...

0801e884 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801e884:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801e888:	4698      	mov	r8, r3
 801e88a:	8883      	ldrh	r3, [r0, #4]
 801e88c:	4604      	mov	r4, r0
 801e88e:	4617      	mov	r7, r2
 801e890:	f8ad 3006 	strh.w	r3, [sp, #6]
 801e894:	eba8 0303 	sub.w	r3, r8, r3
 801e898:	4a19      	ldr	r2, [pc, #100]	@ (801e900 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801e89a:	460e      	mov	r6, r1
 801e89c:	b21b      	sxth	r3, r3
 801e89e:	88c1      	ldrh	r1, [r0, #6]
 801e8a0:	9200      	str	r2, [sp, #0]
 801e8a2:	2000      	movs	r0, #0
 801e8a4:	2b00      	cmp	r3, #0
 801e8a6:	8aa2      	ldrh	r2, [r4, #20]
 801e8a8:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 801e8ac:	bfb8      	it	lt
 801e8ae:	425b      	neglt	r3, r3
 801e8b0:	f88d 0004 	strb.w	r0, [sp, #4]
 801e8b4:	f8ad 1008 	strh.w	r1, [sp, #8]
 801e8b8:	b21b      	sxth	r3, r3
 801e8ba:	f8ad 800a 	strh.w	r8, [sp, #10]
 801e8be:	f8ad 500c 	strh.w	r5, [sp, #12]
 801e8c2:	4293      	cmp	r3, r2
 801e8c4:	dc07      	bgt.n	801e8d6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 801e8c6:	1a69      	subs	r1, r5, r1
 801e8c8:	b209      	sxth	r1, r1
 801e8ca:	2900      	cmp	r1, #0
 801e8cc:	bfb8      	it	lt
 801e8ce:	4249      	neglt	r1, r1
 801e8d0:	b209      	sxth	r1, r1
 801e8d2:	428a      	cmp	r2, r1
 801e8d4:	da10      	bge.n	801e8f8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 801e8d6:	6920      	ldr	r0, [r4, #16]
 801e8d8:	4669      	mov	r1, sp
 801e8da:	eba8 0606 	sub.w	r6, r8, r6
 801e8de:	1bef      	subs	r7, r5, r7
 801e8e0:	6803      	ldr	r3, [r0, #0]
 801e8e2:	685b      	ldr	r3, [r3, #4]
 801e8e4:	4798      	blx	r3
 801e8e6:	2300      	movs	r3, #0
 801e8e8:	2001      	movs	r0, #1
 801e8ea:	8166      	strh	r6, [r4, #10]
 801e8ec:	8123      	strh	r3, [r4, #8]
 801e8ee:	81a7      	strh	r7, [r4, #12]
 801e8f0:	f8a4 8004 	strh.w	r8, [r4, #4]
 801e8f4:	80e5      	strh	r5, [r4, #6]
 801e8f6:	73a0      	strb	r0, [r4, #14]
 801e8f8:	b004      	add	sp, #16
 801e8fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e8fe:	bf00      	nop
 801e900:	080216f4 	.word	0x080216f4

0801e904 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801e904:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e906:	461e      	mov	r6, r3
 801e908:	1e4b      	subs	r3, r1, #1
 801e90a:	b085      	sub	sp, #20
 801e90c:	4604      	mov	r4, r0
 801e90e:	2b01      	cmp	r3, #1
 801e910:	460d      	mov	r5, r1
 801e912:	4617      	mov	r7, r2
 801e914:	d84b      	bhi.n	801e9ae <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801e916:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801e91a:	1cd3      	adds	r3, r2, #3
 801e91c:	b29b      	uxth	r3, r3
 801e91e:	2b06      	cmp	r3, #6
 801e920:	d916      	bls.n	801e950 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801e922:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 801e9c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801e926:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e92a:	f8cd c004 	str.w	ip, [sp, #4]
 801e92e:	f04f 0c00 	mov.w	ip, #0
 801e932:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801e936:	6900      	ldr	r0, [r0, #16]
 801e938:	f8ad 100c 	strh.w	r1, [sp, #12]
 801e93c:	a901      	add	r1, sp, #4
 801e93e:	f88d c008 	strb.w	ip, [sp, #8]
 801e942:	f8ad 200a 	strh.w	r2, [sp, #10]
 801e946:	f8ad 300e 	strh.w	r3, [sp, #14]
 801e94a:	6803      	ldr	r3, [r0, #0]
 801e94c:	689b      	ldr	r3, [r3, #8]
 801e94e:	4798      	blx	r3
 801e950:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801e954:	1cd3      	adds	r3, r2, #3
 801e956:	b29b      	uxth	r3, r3
 801e958:	2b06      	cmp	r3, #6
 801e95a:	d916      	bls.n	801e98a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801e95c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 801e9c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801e960:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e964:	f8cd c004 	str.w	ip, [sp, #4]
 801e968:	f04f 0c01 	mov.w	ip, #1
 801e96c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801e970:	6920      	ldr	r0, [r4, #16]
 801e972:	f8ad 100c 	strh.w	r1, [sp, #12]
 801e976:	a901      	add	r1, sp, #4
 801e978:	f88d c008 	strb.w	ip, [sp, #8]
 801e97c:	f8ad 200a 	strh.w	r2, [sp, #10]
 801e980:	f8ad 300e 	strh.w	r3, [sp, #14]
 801e984:	6803      	ldr	r3, [r0, #0]
 801e986:	689b      	ldr	r3, [r3, #8]
 801e988:	4798      	blx	r3
 801e98a:	4b0d      	ldr	r3, [pc, #52]	@ (801e9c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801e98c:	a901      	add	r1, sp, #4
 801e98e:	6920      	ldr	r0, [r4, #16]
 801e990:	9301      	str	r3, [sp, #4]
 801e992:	2300      	movs	r3, #0
 801e994:	f88d 5008 	strb.w	r5, [sp, #8]
 801e998:	f8ad 700a 	strh.w	r7, [sp, #10]
 801e99c:	f8ad 600c 	strh.w	r6, [sp, #12]
 801e9a0:	f8ad 300e 	strh.w	r3, [sp, #14]
 801e9a4:	6803      	ldr	r3, [r0, #0]
 801e9a6:	681b      	ldr	r3, [r3, #0]
 801e9a8:	4798      	blx	r3
 801e9aa:	b005      	add	sp, #20
 801e9ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e9ae:	2900      	cmp	r1, #0
 801e9b0:	d1eb      	bne.n	801e98a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801e9b2:	80a2      	strh	r2, [r4, #4]
 801e9b4:	80c6      	strh	r6, [r0, #6]
 801e9b6:	60a1      	str	r1, [r4, #8]
 801e9b8:	81a1      	strh	r1, [r4, #12]
 801e9ba:	73a1      	strb	r1, [r4, #14]
 801e9bc:	e7e5      	b.n	801e98a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801e9be:	bf00      	nop
 801e9c0:	080216e0 	.word	0x080216e0
 801e9c4:	08021708 	.word	0x08021708

0801e9c8 <__aeabi_atexit>:
 801e9c8:	460b      	mov	r3, r1
 801e9ca:	4601      	mov	r1, r0
 801e9cc:	4618      	mov	r0, r3
 801e9ce:	f000 b911 	b.w	801ebf4 <__cxa_atexit>

0801e9d2 <_ZdlPvj>:
 801e9d2:	f000 b812 	b.w	801e9fa <_ZdlPv>

0801e9d6 <__cxa_guard_acquire>:
 801e9d6:	6802      	ldr	r2, [r0, #0]
 801e9d8:	07d2      	lsls	r2, r2, #31
 801e9da:	4603      	mov	r3, r0
 801e9dc:	d405      	bmi.n	801e9ea <__cxa_guard_acquire+0x14>
 801e9de:	7842      	ldrb	r2, [r0, #1]
 801e9e0:	b102      	cbz	r2, 801e9e4 <__cxa_guard_acquire+0xe>
 801e9e2:	deff      	udf	#255	@ 0xff
 801e9e4:	2001      	movs	r0, #1
 801e9e6:	7058      	strb	r0, [r3, #1]
 801e9e8:	4770      	bx	lr
 801e9ea:	2000      	movs	r0, #0
 801e9ec:	4770      	bx	lr

0801e9ee <__cxa_guard_release>:
 801e9ee:	2301      	movs	r3, #1
 801e9f0:	6003      	str	r3, [r0, #0]
 801e9f2:	4770      	bx	lr

0801e9f4 <__cxa_pure_virtual>:
 801e9f4:	b508      	push	{r3, lr}
 801e9f6:	f000 f80f 	bl	801ea18 <_ZSt9terminatev>

0801e9fa <_ZdlPv>:
 801e9fa:	f000 b845 	b.w	801ea88 <free>

0801e9fe <_ZN10__cxxabiv111__terminateEPFvvE>:
 801e9fe:	b508      	push	{r3, lr}
 801ea00:	4780      	blx	r0
 801ea02:	f000 f80e 	bl	801ea22 <abort>
	...

0801ea08 <_ZSt13get_terminatev>:
 801ea08:	4b02      	ldr	r3, [pc, #8]	@ (801ea14 <_ZSt13get_terminatev+0xc>)
 801ea0a:	6818      	ldr	r0, [r3, #0]
 801ea0c:	f3bf 8f5b 	dmb	ish
 801ea10:	4770      	bx	lr
 801ea12:	bf00      	nop
 801ea14:	200000c0 	.word	0x200000c0

0801ea18 <_ZSt9terminatev>:
 801ea18:	b508      	push	{r3, lr}
 801ea1a:	f7ff fff5 	bl	801ea08 <_ZSt13get_terminatev>
 801ea1e:	f7ff ffee 	bl	801e9fe <_ZN10__cxxabiv111__terminateEPFvvE>

0801ea22 <abort>:
 801ea22:	b508      	push	{r3, lr}
 801ea24:	2006      	movs	r0, #6
 801ea26:	f000 faf5 	bl	801f014 <raise>
 801ea2a:	2001      	movs	r0, #1
 801ea2c:	f7e2 fc8e 	bl	800134c <_exit>

0801ea30 <__assert_func>:
 801ea30:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801ea32:	4614      	mov	r4, r2
 801ea34:	461a      	mov	r2, r3
 801ea36:	4b09      	ldr	r3, [pc, #36]	@ (801ea5c <__assert_func+0x2c>)
 801ea38:	681b      	ldr	r3, [r3, #0]
 801ea3a:	4605      	mov	r5, r0
 801ea3c:	68d8      	ldr	r0, [r3, #12]
 801ea3e:	b954      	cbnz	r4, 801ea56 <__assert_func+0x26>
 801ea40:	4b07      	ldr	r3, [pc, #28]	@ (801ea60 <__assert_func+0x30>)
 801ea42:	461c      	mov	r4, r3
 801ea44:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801ea48:	9100      	str	r1, [sp, #0]
 801ea4a:	462b      	mov	r3, r5
 801ea4c:	4905      	ldr	r1, [pc, #20]	@ (801ea64 <__assert_func+0x34>)
 801ea4e:	f000 f983 	bl	801ed58 <fiprintf>
 801ea52:	f7ff ffe6 	bl	801ea22 <abort>
 801ea56:	4b04      	ldr	r3, [pc, #16]	@ (801ea68 <__assert_func+0x38>)
 801ea58:	e7f4      	b.n	801ea44 <__assert_func+0x14>
 801ea5a:	bf00      	nop
 801ea5c:	200000d0 	.word	0x200000d0
 801ea60:	08021a5f 	.word	0x08021a5f
 801ea64:	08021a31 	.word	0x08021a31
 801ea68:	08021a24 	.word	0x08021a24

0801ea6c <atexit>:
 801ea6c:	2300      	movs	r3, #0
 801ea6e:	4601      	mov	r1, r0
 801ea70:	461a      	mov	r2, r3
 801ea72:	4618      	mov	r0, r3
 801ea74:	f000 bb7c 	b.w	801f170 <__register_exitproc>

0801ea78 <malloc>:
 801ea78:	4b02      	ldr	r3, [pc, #8]	@ (801ea84 <malloc+0xc>)
 801ea7a:	4601      	mov	r1, r0
 801ea7c:	6818      	ldr	r0, [r3, #0]
 801ea7e:	f000 b82d 	b.w	801eadc <_malloc_r>
 801ea82:	bf00      	nop
 801ea84:	200000d0 	.word	0x200000d0

0801ea88 <free>:
 801ea88:	4b02      	ldr	r3, [pc, #8]	@ (801ea94 <free+0xc>)
 801ea8a:	4601      	mov	r1, r0
 801ea8c:	6818      	ldr	r0, [r3, #0]
 801ea8e:	f000 bbcb 	b.w	801f228 <_free_r>
 801ea92:	bf00      	nop
 801ea94:	200000d0 	.word	0x200000d0

0801ea98 <sbrk_aligned>:
 801ea98:	b570      	push	{r4, r5, r6, lr}
 801ea9a:	4e0f      	ldr	r6, [pc, #60]	@ (801ead8 <sbrk_aligned+0x40>)
 801ea9c:	460c      	mov	r4, r1
 801ea9e:	6831      	ldr	r1, [r6, #0]
 801eaa0:	4605      	mov	r5, r0
 801eaa2:	b911      	cbnz	r1, 801eaaa <sbrk_aligned+0x12>
 801eaa4:	f000 fb06 	bl	801f0b4 <_sbrk_r>
 801eaa8:	6030      	str	r0, [r6, #0]
 801eaaa:	4621      	mov	r1, r4
 801eaac:	4628      	mov	r0, r5
 801eaae:	f000 fb01 	bl	801f0b4 <_sbrk_r>
 801eab2:	1c43      	adds	r3, r0, #1
 801eab4:	d103      	bne.n	801eabe <sbrk_aligned+0x26>
 801eab6:	f04f 34ff 	mov.w	r4, #4294967295
 801eaba:	4620      	mov	r0, r4
 801eabc:	bd70      	pop	{r4, r5, r6, pc}
 801eabe:	1cc4      	adds	r4, r0, #3
 801eac0:	f024 0403 	bic.w	r4, r4, #3
 801eac4:	42a0      	cmp	r0, r4
 801eac6:	d0f8      	beq.n	801eaba <sbrk_aligned+0x22>
 801eac8:	1a21      	subs	r1, r4, r0
 801eaca:	4628      	mov	r0, r5
 801eacc:	f000 faf2 	bl	801f0b4 <_sbrk_r>
 801ead0:	3001      	adds	r0, #1
 801ead2:	d1f2      	bne.n	801eaba <sbrk_aligned+0x22>
 801ead4:	e7ef      	b.n	801eab6 <sbrk_aligned+0x1e>
 801ead6:	bf00      	nop
 801ead8:	200159f8 	.word	0x200159f8

0801eadc <_malloc_r>:
 801eadc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801eae0:	1ccd      	adds	r5, r1, #3
 801eae2:	f025 0503 	bic.w	r5, r5, #3
 801eae6:	3508      	adds	r5, #8
 801eae8:	2d0c      	cmp	r5, #12
 801eaea:	bf38      	it	cc
 801eaec:	250c      	movcc	r5, #12
 801eaee:	2d00      	cmp	r5, #0
 801eaf0:	4606      	mov	r6, r0
 801eaf2:	db01      	blt.n	801eaf8 <_malloc_r+0x1c>
 801eaf4:	42a9      	cmp	r1, r5
 801eaf6:	d904      	bls.n	801eb02 <_malloc_r+0x26>
 801eaf8:	230c      	movs	r3, #12
 801eafa:	6033      	str	r3, [r6, #0]
 801eafc:	2000      	movs	r0, #0
 801eafe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801eb02:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 801ebd8 <_malloc_r+0xfc>
 801eb06:	f000 f869 	bl	801ebdc <__malloc_lock>
 801eb0a:	f8d8 3000 	ldr.w	r3, [r8]
 801eb0e:	461c      	mov	r4, r3
 801eb10:	bb44      	cbnz	r4, 801eb64 <_malloc_r+0x88>
 801eb12:	4629      	mov	r1, r5
 801eb14:	4630      	mov	r0, r6
 801eb16:	f7ff ffbf 	bl	801ea98 <sbrk_aligned>
 801eb1a:	1c43      	adds	r3, r0, #1
 801eb1c:	4604      	mov	r4, r0
 801eb1e:	d158      	bne.n	801ebd2 <_malloc_r+0xf6>
 801eb20:	f8d8 4000 	ldr.w	r4, [r8]
 801eb24:	4627      	mov	r7, r4
 801eb26:	2f00      	cmp	r7, #0
 801eb28:	d143      	bne.n	801ebb2 <_malloc_r+0xd6>
 801eb2a:	2c00      	cmp	r4, #0
 801eb2c:	d04b      	beq.n	801ebc6 <_malloc_r+0xea>
 801eb2e:	6823      	ldr	r3, [r4, #0]
 801eb30:	4639      	mov	r1, r7
 801eb32:	4630      	mov	r0, r6
 801eb34:	eb04 0903 	add.w	r9, r4, r3
 801eb38:	f000 fabc 	bl	801f0b4 <_sbrk_r>
 801eb3c:	4581      	cmp	r9, r0
 801eb3e:	d142      	bne.n	801ebc6 <_malloc_r+0xea>
 801eb40:	6821      	ldr	r1, [r4, #0]
 801eb42:	1a6d      	subs	r5, r5, r1
 801eb44:	4629      	mov	r1, r5
 801eb46:	4630      	mov	r0, r6
 801eb48:	f7ff ffa6 	bl	801ea98 <sbrk_aligned>
 801eb4c:	3001      	adds	r0, #1
 801eb4e:	d03a      	beq.n	801ebc6 <_malloc_r+0xea>
 801eb50:	6823      	ldr	r3, [r4, #0]
 801eb52:	442b      	add	r3, r5
 801eb54:	6023      	str	r3, [r4, #0]
 801eb56:	f8d8 3000 	ldr.w	r3, [r8]
 801eb5a:	685a      	ldr	r2, [r3, #4]
 801eb5c:	bb62      	cbnz	r2, 801ebb8 <_malloc_r+0xdc>
 801eb5e:	f8c8 7000 	str.w	r7, [r8]
 801eb62:	e00f      	b.n	801eb84 <_malloc_r+0xa8>
 801eb64:	6822      	ldr	r2, [r4, #0]
 801eb66:	1b52      	subs	r2, r2, r5
 801eb68:	d420      	bmi.n	801ebac <_malloc_r+0xd0>
 801eb6a:	2a0b      	cmp	r2, #11
 801eb6c:	d917      	bls.n	801eb9e <_malloc_r+0xc2>
 801eb6e:	1961      	adds	r1, r4, r5
 801eb70:	42a3      	cmp	r3, r4
 801eb72:	6025      	str	r5, [r4, #0]
 801eb74:	bf18      	it	ne
 801eb76:	6059      	strne	r1, [r3, #4]
 801eb78:	6863      	ldr	r3, [r4, #4]
 801eb7a:	bf08      	it	eq
 801eb7c:	f8c8 1000 	streq.w	r1, [r8]
 801eb80:	5162      	str	r2, [r4, r5]
 801eb82:	604b      	str	r3, [r1, #4]
 801eb84:	4630      	mov	r0, r6
 801eb86:	f000 f82f 	bl	801ebe8 <__malloc_unlock>
 801eb8a:	f104 000b 	add.w	r0, r4, #11
 801eb8e:	1d23      	adds	r3, r4, #4
 801eb90:	f020 0007 	bic.w	r0, r0, #7
 801eb94:	1ac2      	subs	r2, r0, r3
 801eb96:	bf1c      	itt	ne
 801eb98:	1a1b      	subne	r3, r3, r0
 801eb9a:	50a3      	strne	r3, [r4, r2]
 801eb9c:	e7af      	b.n	801eafe <_malloc_r+0x22>
 801eb9e:	6862      	ldr	r2, [r4, #4]
 801eba0:	42a3      	cmp	r3, r4
 801eba2:	bf0c      	ite	eq
 801eba4:	f8c8 2000 	streq.w	r2, [r8]
 801eba8:	605a      	strne	r2, [r3, #4]
 801ebaa:	e7eb      	b.n	801eb84 <_malloc_r+0xa8>
 801ebac:	4623      	mov	r3, r4
 801ebae:	6864      	ldr	r4, [r4, #4]
 801ebb0:	e7ae      	b.n	801eb10 <_malloc_r+0x34>
 801ebb2:	463c      	mov	r4, r7
 801ebb4:	687f      	ldr	r7, [r7, #4]
 801ebb6:	e7b6      	b.n	801eb26 <_malloc_r+0x4a>
 801ebb8:	461a      	mov	r2, r3
 801ebba:	685b      	ldr	r3, [r3, #4]
 801ebbc:	42a3      	cmp	r3, r4
 801ebbe:	d1fb      	bne.n	801ebb8 <_malloc_r+0xdc>
 801ebc0:	2300      	movs	r3, #0
 801ebc2:	6053      	str	r3, [r2, #4]
 801ebc4:	e7de      	b.n	801eb84 <_malloc_r+0xa8>
 801ebc6:	230c      	movs	r3, #12
 801ebc8:	6033      	str	r3, [r6, #0]
 801ebca:	4630      	mov	r0, r6
 801ebcc:	f000 f80c 	bl	801ebe8 <__malloc_unlock>
 801ebd0:	e794      	b.n	801eafc <_malloc_r+0x20>
 801ebd2:	6005      	str	r5, [r0, #0]
 801ebd4:	e7d6      	b.n	801eb84 <_malloc_r+0xa8>
 801ebd6:	bf00      	nop
 801ebd8:	200159fc 	.word	0x200159fc

0801ebdc <__malloc_lock>:
 801ebdc:	4801      	ldr	r0, [pc, #4]	@ (801ebe4 <__malloc_lock+0x8>)
 801ebde:	f000 bab6 	b.w	801f14e <__retarget_lock_acquire_recursive>
 801ebe2:	bf00      	nop
 801ebe4:	20015b40 	.word	0x20015b40

0801ebe8 <__malloc_unlock>:
 801ebe8:	4801      	ldr	r0, [pc, #4]	@ (801ebf0 <__malloc_unlock+0x8>)
 801ebea:	f000 bab1 	b.w	801f150 <__retarget_lock_release_recursive>
 801ebee:	bf00      	nop
 801ebf0:	20015b40 	.word	0x20015b40

0801ebf4 <__cxa_atexit>:
 801ebf4:	b510      	push	{r4, lr}
 801ebf6:	4604      	mov	r4, r0
 801ebf8:	4804      	ldr	r0, [pc, #16]	@ (801ec0c <__cxa_atexit+0x18>)
 801ebfa:	4613      	mov	r3, r2
 801ebfc:	b120      	cbz	r0, 801ec08 <__cxa_atexit+0x14>
 801ebfe:	460a      	mov	r2, r1
 801ec00:	2002      	movs	r0, #2
 801ec02:	4621      	mov	r1, r4
 801ec04:	f000 fab4 	bl	801f170 <__register_exitproc>
 801ec08:	bd10      	pop	{r4, pc}
 801ec0a:	bf00      	nop
 801ec0c:	0801f171 	.word	0x0801f171

0801ec10 <std>:
 801ec10:	2300      	movs	r3, #0
 801ec12:	b510      	push	{r4, lr}
 801ec14:	4604      	mov	r4, r0
 801ec16:	e9c0 3300 	strd	r3, r3, [r0]
 801ec1a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801ec1e:	6083      	str	r3, [r0, #8]
 801ec20:	8181      	strh	r1, [r0, #12]
 801ec22:	6643      	str	r3, [r0, #100]	@ 0x64
 801ec24:	81c2      	strh	r2, [r0, #14]
 801ec26:	6183      	str	r3, [r0, #24]
 801ec28:	4619      	mov	r1, r3
 801ec2a:	2208      	movs	r2, #8
 801ec2c:	305c      	adds	r0, #92	@ 0x5c
 801ec2e:	f000 f99b 	bl	801ef68 <memset>
 801ec32:	4b0d      	ldr	r3, [pc, #52]	@ (801ec68 <std+0x58>)
 801ec34:	6263      	str	r3, [r4, #36]	@ 0x24
 801ec36:	4b0d      	ldr	r3, [pc, #52]	@ (801ec6c <std+0x5c>)
 801ec38:	62a3      	str	r3, [r4, #40]	@ 0x28
 801ec3a:	4b0d      	ldr	r3, [pc, #52]	@ (801ec70 <std+0x60>)
 801ec3c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 801ec3e:	4b0d      	ldr	r3, [pc, #52]	@ (801ec74 <std+0x64>)
 801ec40:	6323      	str	r3, [r4, #48]	@ 0x30
 801ec42:	4b0d      	ldr	r3, [pc, #52]	@ (801ec78 <std+0x68>)
 801ec44:	6224      	str	r4, [r4, #32]
 801ec46:	429c      	cmp	r4, r3
 801ec48:	d006      	beq.n	801ec58 <std+0x48>
 801ec4a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 801ec4e:	4294      	cmp	r4, r2
 801ec50:	d002      	beq.n	801ec58 <std+0x48>
 801ec52:	33d0      	adds	r3, #208	@ 0xd0
 801ec54:	429c      	cmp	r4, r3
 801ec56:	d105      	bne.n	801ec64 <std+0x54>
 801ec58:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 801ec5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ec60:	f000 ba74 	b.w	801f14c <__retarget_lock_init_recursive>
 801ec64:	bd10      	pop	{r4, pc}
 801ec66:	bf00      	nop
 801ec68:	0801edb9 	.word	0x0801edb9
 801ec6c:	0801eddb 	.word	0x0801eddb
 801ec70:	0801ee13 	.word	0x0801ee13
 801ec74:	0801ee37 	.word	0x0801ee37
 801ec78:	20015a00 	.word	0x20015a00

0801ec7c <stdio_exit_handler>:
 801ec7c:	4a02      	ldr	r2, [pc, #8]	@ (801ec88 <stdio_exit_handler+0xc>)
 801ec7e:	4903      	ldr	r1, [pc, #12]	@ (801ec8c <stdio_exit_handler+0x10>)
 801ec80:	4803      	ldr	r0, [pc, #12]	@ (801ec90 <stdio_exit_handler+0x14>)
 801ec82:	f000 b87b 	b.w	801ed7c <_fwalk_sglue>
 801ec86:	bf00      	nop
 801ec88:	200000c4 	.word	0x200000c4
 801ec8c:	0801f965 	.word	0x0801f965
 801ec90:	200000d4 	.word	0x200000d4

0801ec94 <cleanup_stdio>:
 801ec94:	6841      	ldr	r1, [r0, #4]
 801ec96:	4b0c      	ldr	r3, [pc, #48]	@ (801ecc8 <cleanup_stdio+0x34>)
 801ec98:	4299      	cmp	r1, r3
 801ec9a:	b510      	push	{r4, lr}
 801ec9c:	4604      	mov	r4, r0
 801ec9e:	d001      	beq.n	801eca4 <cleanup_stdio+0x10>
 801eca0:	f000 fe60 	bl	801f964 <_fflush_r>
 801eca4:	68a1      	ldr	r1, [r4, #8]
 801eca6:	4b09      	ldr	r3, [pc, #36]	@ (801eccc <cleanup_stdio+0x38>)
 801eca8:	4299      	cmp	r1, r3
 801ecaa:	d002      	beq.n	801ecb2 <cleanup_stdio+0x1e>
 801ecac:	4620      	mov	r0, r4
 801ecae:	f000 fe59 	bl	801f964 <_fflush_r>
 801ecb2:	68e1      	ldr	r1, [r4, #12]
 801ecb4:	4b06      	ldr	r3, [pc, #24]	@ (801ecd0 <cleanup_stdio+0x3c>)
 801ecb6:	4299      	cmp	r1, r3
 801ecb8:	d004      	beq.n	801ecc4 <cleanup_stdio+0x30>
 801ecba:	4620      	mov	r0, r4
 801ecbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ecc0:	f000 be50 	b.w	801f964 <_fflush_r>
 801ecc4:	bd10      	pop	{r4, pc}
 801ecc6:	bf00      	nop
 801ecc8:	20015a00 	.word	0x20015a00
 801eccc:	20015a68 	.word	0x20015a68
 801ecd0:	20015ad0 	.word	0x20015ad0

0801ecd4 <global_stdio_init.part.0>:
 801ecd4:	b510      	push	{r4, lr}
 801ecd6:	4b0b      	ldr	r3, [pc, #44]	@ (801ed04 <global_stdio_init.part.0+0x30>)
 801ecd8:	4c0b      	ldr	r4, [pc, #44]	@ (801ed08 <global_stdio_init.part.0+0x34>)
 801ecda:	4a0c      	ldr	r2, [pc, #48]	@ (801ed0c <global_stdio_init.part.0+0x38>)
 801ecdc:	601a      	str	r2, [r3, #0]
 801ecde:	4620      	mov	r0, r4
 801ece0:	2200      	movs	r2, #0
 801ece2:	2104      	movs	r1, #4
 801ece4:	f7ff ff94 	bl	801ec10 <std>
 801ece8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 801ecec:	2201      	movs	r2, #1
 801ecee:	2109      	movs	r1, #9
 801ecf0:	f7ff ff8e 	bl	801ec10 <std>
 801ecf4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 801ecf8:	2202      	movs	r2, #2
 801ecfa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ecfe:	2112      	movs	r1, #18
 801ed00:	f7ff bf86 	b.w	801ec10 <std>
 801ed04:	20015b38 	.word	0x20015b38
 801ed08:	20015a00 	.word	0x20015a00
 801ed0c:	0801ec7d 	.word	0x0801ec7d

0801ed10 <__sfp_lock_acquire>:
 801ed10:	4801      	ldr	r0, [pc, #4]	@ (801ed18 <__sfp_lock_acquire+0x8>)
 801ed12:	f000 ba1c 	b.w	801f14e <__retarget_lock_acquire_recursive>
 801ed16:	bf00      	nop
 801ed18:	20015b42 	.word	0x20015b42

0801ed1c <__sfp_lock_release>:
 801ed1c:	4801      	ldr	r0, [pc, #4]	@ (801ed24 <__sfp_lock_release+0x8>)
 801ed1e:	f000 ba17 	b.w	801f150 <__retarget_lock_release_recursive>
 801ed22:	bf00      	nop
 801ed24:	20015b42 	.word	0x20015b42

0801ed28 <__sinit>:
 801ed28:	b510      	push	{r4, lr}
 801ed2a:	4604      	mov	r4, r0
 801ed2c:	f7ff fff0 	bl	801ed10 <__sfp_lock_acquire>
 801ed30:	6a23      	ldr	r3, [r4, #32]
 801ed32:	b11b      	cbz	r3, 801ed3c <__sinit+0x14>
 801ed34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ed38:	f7ff bff0 	b.w	801ed1c <__sfp_lock_release>
 801ed3c:	4b04      	ldr	r3, [pc, #16]	@ (801ed50 <__sinit+0x28>)
 801ed3e:	6223      	str	r3, [r4, #32]
 801ed40:	4b04      	ldr	r3, [pc, #16]	@ (801ed54 <__sinit+0x2c>)
 801ed42:	681b      	ldr	r3, [r3, #0]
 801ed44:	2b00      	cmp	r3, #0
 801ed46:	d1f5      	bne.n	801ed34 <__sinit+0xc>
 801ed48:	f7ff ffc4 	bl	801ecd4 <global_stdio_init.part.0>
 801ed4c:	e7f2      	b.n	801ed34 <__sinit+0xc>
 801ed4e:	bf00      	nop
 801ed50:	0801ec95 	.word	0x0801ec95
 801ed54:	20015b38 	.word	0x20015b38

0801ed58 <fiprintf>:
 801ed58:	b40e      	push	{r1, r2, r3}
 801ed5a:	b503      	push	{r0, r1, lr}
 801ed5c:	4601      	mov	r1, r0
 801ed5e:	ab03      	add	r3, sp, #12
 801ed60:	4805      	ldr	r0, [pc, #20]	@ (801ed78 <fiprintf+0x20>)
 801ed62:	f853 2b04 	ldr.w	r2, [r3], #4
 801ed66:	6800      	ldr	r0, [r0, #0]
 801ed68:	9301      	str	r3, [sp, #4]
 801ed6a:	f000 fad1 	bl	801f310 <_vfiprintf_r>
 801ed6e:	b002      	add	sp, #8
 801ed70:	f85d eb04 	ldr.w	lr, [sp], #4
 801ed74:	b003      	add	sp, #12
 801ed76:	4770      	bx	lr
 801ed78:	200000d0 	.word	0x200000d0

0801ed7c <_fwalk_sglue>:
 801ed7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ed80:	4607      	mov	r7, r0
 801ed82:	4688      	mov	r8, r1
 801ed84:	4614      	mov	r4, r2
 801ed86:	2600      	movs	r6, #0
 801ed88:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801ed8c:	f1b9 0901 	subs.w	r9, r9, #1
 801ed90:	d505      	bpl.n	801ed9e <_fwalk_sglue+0x22>
 801ed92:	6824      	ldr	r4, [r4, #0]
 801ed94:	2c00      	cmp	r4, #0
 801ed96:	d1f7      	bne.n	801ed88 <_fwalk_sglue+0xc>
 801ed98:	4630      	mov	r0, r6
 801ed9a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ed9e:	89ab      	ldrh	r3, [r5, #12]
 801eda0:	2b01      	cmp	r3, #1
 801eda2:	d907      	bls.n	801edb4 <_fwalk_sglue+0x38>
 801eda4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801eda8:	3301      	adds	r3, #1
 801edaa:	d003      	beq.n	801edb4 <_fwalk_sglue+0x38>
 801edac:	4629      	mov	r1, r5
 801edae:	4638      	mov	r0, r7
 801edb0:	47c0      	blx	r8
 801edb2:	4306      	orrs	r6, r0
 801edb4:	3568      	adds	r5, #104	@ 0x68
 801edb6:	e7e9      	b.n	801ed8c <_fwalk_sglue+0x10>

0801edb8 <__sread>:
 801edb8:	b510      	push	{r4, lr}
 801edba:	460c      	mov	r4, r1
 801edbc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801edc0:	f000 f952 	bl	801f068 <_read_r>
 801edc4:	2800      	cmp	r0, #0
 801edc6:	bfab      	itete	ge
 801edc8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 801edca:	89a3      	ldrhlt	r3, [r4, #12]
 801edcc:	181b      	addge	r3, r3, r0
 801edce:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801edd2:	bfac      	ite	ge
 801edd4:	6563      	strge	r3, [r4, #84]	@ 0x54
 801edd6:	81a3      	strhlt	r3, [r4, #12]
 801edd8:	bd10      	pop	{r4, pc}

0801edda <__swrite>:
 801edda:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801edde:	461f      	mov	r7, r3
 801ede0:	898b      	ldrh	r3, [r1, #12]
 801ede2:	05db      	lsls	r3, r3, #23
 801ede4:	4605      	mov	r5, r0
 801ede6:	460c      	mov	r4, r1
 801ede8:	4616      	mov	r6, r2
 801edea:	d505      	bpl.n	801edf8 <__swrite+0x1e>
 801edec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801edf0:	2302      	movs	r3, #2
 801edf2:	2200      	movs	r2, #0
 801edf4:	f000 f926 	bl	801f044 <_lseek_r>
 801edf8:	89a3      	ldrh	r3, [r4, #12]
 801edfa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801edfe:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801ee02:	81a3      	strh	r3, [r4, #12]
 801ee04:	4632      	mov	r2, r6
 801ee06:	463b      	mov	r3, r7
 801ee08:	4628      	mov	r0, r5
 801ee0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ee0e:	f000 b961 	b.w	801f0d4 <_write_r>

0801ee12 <__sseek>:
 801ee12:	b510      	push	{r4, lr}
 801ee14:	460c      	mov	r4, r1
 801ee16:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ee1a:	f000 f913 	bl	801f044 <_lseek_r>
 801ee1e:	1c43      	adds	r3, r0, #1
 801ee20:	89a3      	ldrh	r3, [r4, #12]
 801ee22:	bf15      	itete	ne
 801ee24:	6560      	strne	r0, [r4, #84]	@ 0x54
 801ee26:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 801ee2a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 801ee2e:	81a3      	strheq	r3, [r4, #12]
 801ee30:	bf18      	it	ne
 801ee32:	81a3      	strhne	r3, [r4, #12]
 801ee34:	bd10      	pop	{r4, pc}

0801ee36 <__sclose>:
 801ee36:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ee3a:	f000 b8f3 	b.w	801f024 <_close_r>

0801ee3e <__swbuf_r>:
 801ee3e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ee40:	460e      	mov	r6, r1
 801ee42:	4614      	mov	r4, r2
 801ee44:	4605      	mov	r5, r0
 801ee46:	b118      	cbz	r0, 801ee50 <__swbuf_r+0x12>
 801ee48:	6a03      	ldr	r3, [r0, #32]
 801ee4a:	b90b      	cbnz	r3, 801ee50 <__swbuf_r+0x12>
 801ee4c:	f7ff ff6c 	bl	801ed28 <__sinit>
 801ee50:	69a3      	ldr	r3, [r4, #24]
 801ee52:	60a3      	str	r3, [r4, #8]
 801ee54:	89a3      	ldrh	r3, [r4, #12]
 801ee56:	071a      	lsls	r2, r3, #28
 801ee58:	d501      	bpl.n	801ee5e <__swbuf_r+0x20>
 801ee5a:	6923      	ldr	r3, [r4, #16]
 801ee5c:	b943      	cbnz	r3, 801ee70 <__swbuf_r+0x32>
 801ee5e:	4621      	mov	r1, r4
 801ee60:	4628      	mov	r0, r5
 801ee62:	f000 f82b 	bl	801eebc <__swsetup_r>
 801ee66:	b118      	cbz	r0, 801ee70 <__swbuf_r+0x32>
 801ee68:	f04f 37ff 	mov.w	r7, #4294967295
 801ee6c:	4638      	mov	r0, r7
 801ee6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ee70:	6823      	ldr	r3, [r4, #0]
 801ee72:	6922      	ldr	r2, [r4, #16]
 801ee74:	1a98      	subs	r0, r3, r2
 801ee76:	6963      	ldr	r3, [r4, #20]
 801ee78:	b2f6      	uxtb	r6, r6
 801ee7a:	4283      	cmp	r3, r0
 801ee7c:	4637      	mov	r7, r6
 801ee7e:	dc05      	bgt.n	801ee8c <__swbuf_r+0x4e>
 801ee80:	4621      	mov	r1, r4
 801ee82:	4628      	mov	r0, r5
 801ee84:	f000 fd6e 	bl	801f964 <_fflush_r>
 801ee88:	2800      	cmp	r0, #0
 801ee8a:	d1ed      	bne.n	801ee68 <__swbuf_r+0x2a>
 801ee8c:	68a3      	ldr	r3, [r4, #8]
 801ee8e:	3b01      	subs	r3, #1
 801ee90:	60a3      	str	r3, [r4, #8]
 801ee92:	6823      	ldr	r3, [r4, #0]
 801ee94:	1c5a      	adds	r2, r3, #1
 801ee96:	6022      	str	r2, [r4, #0]
 801ee98:	701e      	strb	r6, [r3, #0]
 801ee9a:	6962      	ldr	r2, [r4, #20]
 801ee9c:	1c43      	adds	r3, r0, #1
 801ee9e:	429a      	cmp	r2, r3
 801eea0:	d004      	beq.n	801eeac <__swbuf_r+0x6e>
 801eea2:	89a3      	ldrh	r3, [r4, #12]
 801eea4:	07db      	lsls	r3, r3, #31
 801eea6:	d5e1      	bpl.n	801ee6c <__swbuf_r+0x2e>
 801eea8:	2e0a      	cmp	r6, #10
 801eeaa:	d1df      	bne.n	801ee6c <__swbuf_r+0x2e>
 801eeac:	4621      	mov	r1, r4
 801eeae:	4628      	mov	r0, r5
 801eeb0:	f000 fd58 	bl	801f964 <_fflush_r>
 801eeb4:	2800      	cmp	r0, #0
 801eeb6:	d0d9      	beq.n	801ee6c <__swbuf_r+0x2e>
 801eeb8:	e7d6      	b.n	801ee68 <__swbuf_r+0x2a>
	...

0801eebc <__swsetup_r>:
 801eebc:	b538      	push	{r3, r4, r5, lr}
 801eebe:	4b29      	ldr	r3, [pc, #164]	@ (801ef64 <__swsetup_r+0xa8>)
 801eec0:	4605      	mov	r5, r0
 801eec2:	6818      	ldr	r0, [r3, #0]
 801eec4:	460c      	mov	r4, r1
 801eec6:	b118      	cbz	r0, 801eed0 <__swsetup_r+0x14>
 801eec8:	6a03      	ldr	r3, [r0, #32]
 801eeca:	b90b      	cbnz	r3, 801eed0 <__swsetup_r+0x14>
 801eecc:	f7ff ff2c 	bl	801ed28 <__sinit>
 801eed0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801eed4:	0719      	lsls	r1, r3, #28
 801eed6:	d422      	bmi.n	801ef1e <__swsetup_r+0x62>
 801eed8:	06da      	lsls	r2, r3, #27
 801eeda:	d407      	bmi.n	801eeec <__swsetup_r+0x30>
 801eedc:	2209      	movs	r2, #9
 801eede:	602a      	str	r2, [r5, #0]
 801eee0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801eee4:	81a3      	strh	r3, [r4, #12]
 801eee6:	f04f 30ff 	mov.w	r0, #4294967295
 801eeea:	e033      	b.n	801ef54 <__swsetup_r+0x98>
 801eeec:	0758      	lsls	r0, r3, #29
 801eeee:	d512      	bpl.n	801ef16 <__swsetup_r+0x5a>
 801eef0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801eef2:	b141      	cbz	r1, 801ef06 <__swsetup_r+0x4a>
 801eef4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801eef8:	4299      	cmp	r1, r3
 801eefa:	d002      	beq.n	801ef02 <__swsetup_r+0x46>
 801eefc:	4628      	mov	r0, r5
 801eefe:	f000 f993 	bl	801f228 <_free_r>
 801ef02:	2300      	movs	r3, #0
 801ef04:	6363      	str	r3, [r4, #52]	@ 0x34
 801ef06:	89a3      	ldrh	r3, [r4, #12]
 801ef08:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 801ef0c:	81a3      	strh	r3, [r4, #12]
 801ef0e:	2300      	movs	r3, #0
 801ef10:	6063      	str	r3, [r4, #4]
 801ef12:	6923      	ldr	r3, [r4, #16]
 801ef14:	6023      	str	r3, [r4, #0]
 801ef16:	89a3      	ldrh	r3, [r4, #12]
 801ef18:	f043 0308 	orr.w	r3, r3, #8
 801ef1c:	81a3      	strh	r3, [r4, #12]
 801ef1e:	6923      	ldr	r3, [r4, #16]
 801ef20:	b94b      	cbnz	r3, 801ef36 <__swsetup_r+0x7a>
 801ef22:	89a3      	ldrh	r3, [r4, #12]
 801ef24:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 801ef28:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 801ef2c:	d003      	beq.n	801ef36 <__swsetup_r+0x7a>
 801ef2e:	4621      	mov	r1, r4
 801ef30:	4628      	mov	r0, r5
 801ef32:	f000 fd65 	bl	801fa00 <__smakebuf_r>
 801ef36:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ef3a:	f013 0201 	ands.w	r2, r3, #1
 801ef3e:	d00a      	beq.n	801ef56 <__swsetup_r+0x9a>
 801ef40:	2200      	movs	r2, #0
 801ef42:	60a2      	str	r2, [r4, #8]
 801ef44:	6962      	ldr	r2, [r4, #20]
 801ef46:	4252      	negs	r2, r2
 801ef48:	61a2      	str	r2, [r4, #24]
 801ef4a:	6922      	ldr	r2, [r4, #16]
 801ef4c:	b942      	cbnz	r2, 801ef60 <__swsetup_r+0xa4>
 801ef4e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801ef52:	d1c5      	bne.n	801eee0 <__swsetup_r+0x24>
 801ef54:	bd38      	pop	{r3, r4, r5, pc}
 801ef56:	0799      	lsls	r1, r3, #30
 801ef58:	bf58      	it	pl
 801ef5a:	6962      	ldrpl	r2, [r4, #20]
 801ef5c:	60a2      	str	r2, [r4, #8]
 801ef5e:	e7f4      	b.n	801ef4a <__swsetup_r+0x8e>
 801ef60:	2000      	movs	r0, #0
 801ef62:	e7f7      	b.n	801ef54 <__swsetup_r+0x98>
 801ef64:	200000d0 	.word	0x200000d0

0801ef68 <memset>:
 801ef68:	4402      	add	r2, r0
 801ef6a:	4603      	mov	r3, r0
 801ef6c:	4293      	cmp	r3, r2
 801ef6e:	d100      	bne.n	801ef72 <memset+0xa>
 801ef70:	4770      	bx	lr
 801ef72:	f803 1b01 	strb.w	r1, [r3], #1
 801ef76:	e7f9      	b.n	801ef6c <memset+0x4>

0801ef78 <strncmp>:
 801ef78:	b510      	push	{r4, lr}
 801ef7a:	b16a      	cbz	r2, 801ef98 <strncmp+0x20>
 801ef7c:	3901      	subs	r1, #1
 801ef7e:	1884      	adds	r4, r0, r2
 801ef80:	f810 2b01 	ldrb.w	r2, [r0], #1
 801ef84:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 801ef88:	429a      	cmp	r2, r3
 801ef8a:	d103      	bne.n	801ef94 <strncmp+0x1c>
 801ef8c:	42a0      	cmp	r0, r4
 801ef8e:	d001      	beq.n	801ef94 <strncmp+0x1c>
 801ef90:	2a00      	cmp	r2, #0
 801ef92:	d1f5      	bne.n	801ef80 <strncmp+0x8>
 801ef94:	1ad0      	subs	r0, r2, r3
 801ef96:	bd10      	pop	{r4, pc}
 801ef98:	4610      	mov	r0, r2
 801ef9a:	e7fc      	b.n	801ef96 <strncmp+0x1e>

0801ef9c <strncpy>:
 801ef9c:	b510      	push	{r4, lr}
 801ef9e:	3901      	subs	r1, #1
 801efa0:	4603      	mov	r3, r0
 801efa2:	b132      	cbz	r2, 801efb2 <strncpy+0x16>
 801efa4:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 801efa8:	f803 4b01 	strb.w	r4, [r3], #1
 801efac:	3a01      	subs	r2, #1
 801efae:	2c00      	cmp	r4, #0
 801efb0:	d1f7      	bne.n	801efa2 <strncpy+0x6>
 801efb2:	441a      	add	r2, r3
 801efb4:	2100      	movs	r1, #0
 801efb6:	4293      	cmp	r3, r2
 801efb8:	d100      	bne.n	801efbc <strncpy+0x20>
 801efba:	bd10      	pop	{r4, pc}
 801efbc:	f803 1b01 	strb.w	r1, [r3], #1
 801efc0:	e7f9      	b.n	801efb6 <strncpy+0x1a>

0801efc2 <_raise_r>:
 801efc2:	291f      	cmp	r1, #31
 801efc4:	b538      	push	{r3, r4, r5, lr}
 801efc6:	4605      	mov	r5, r0
 801efc8:	460c      	mov	r4, r1
 801efca:	d904      	bls.n	801efd6 <_raise_r+0x14>
 801efcc:	2316      	movs	r3, #22
 801efce:	6003      	str	r3, [r0, #0]
 801efd0:	f04f 30ff 	mov.w	r0, #4294967295
 801efd4:	bd38      	pop	{r3, r4, r5, pc}
 801efd6:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 801efd8:	b112      	cbz	r2, 801efe0 <_raise_r+0x1e>
 801efda:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801efde:	b94b      	cbnz	r3, 801eff4 <_raise_r+0x32>
 801efe0:	4628      	mov	r0, r5
 801efe2:	f000 f865 	bl	801f0b0 <_getpid_r>
 801efe6:	4622      	mov	r2, r4
 801efe8:	4601      	mov	r1, r0
 801efea:	4628      	mov	r0, r5
 801efec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801eff0:	f000 b84c 	b.w	801f08c <_kill_r>
 801eff4:	2b01      	cmp	r3, #1
 801eff6:	d00a      	beq.n	801f00e <_raise_r+0x4c>
 801eff8:	1c59      	adds	r1, r3, #1
 801effa:	d103      	bne.n	801f004 <_raise_r+0x42>
 801effc:	2316      	movs	r3, #22
 801effe:	6003      	str	r3, [r0, #0]
 801f000:	2001      	movs	r0, #1
 801f002:	e7e7      	b.n	801efd4 <_raise_r+0x12>
 801f004:	2100      	movs	r1, #0
 801f006:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 801f00a:	4620      	mov	r0, r4
 801f00c:	4798      	blx	r3
 801f00e:	2000      	movs	r0, #0
 801f010:	e7e0      	b.n	801efd4 <_raise_r+0x12>
	...

0801f014 <raise>:
 801f014:	4b02      	ldr	r3, [pc, #8]	@ (801f020 <raise+0xc>)
 801f016:	4601      	mov	r1, r0
 801f018:	6818      	ldr	r0, [r3, #0]
 801f01a:	f7ff bfd2 	b.w	801efc2 <_raise_r>
 801f01e:	bf00      	nop
 801f020:	200000d0 	.word	0x200000d0

0801f024 <_close_r>:
 801f024:	b538      	push	{r3, r4, r5, lr}
 801f026:	4d06      	ldr	r5, [pc, #24]	@ (801f040 <_close_r+0x1c>)
 801f028:	2300      	movs	r3, #0
 801f02a:	4604      	mov	r4, r0
 801f02c:	4608      	mov	r0, r1
 801f02e:	602b      	str	r3, [r5, #0]
 801f030:	f7e2 f9ae 	bl	8001390 <_close>
 801f034:	1c43      	adds	r3, r0, #1
 801f036:	d102      	bne.n	801f03e <_close_r+0x1a>
 801f038:	682b      	ldr	r3, [r5, #0]
 801f03a:	b103      	cbz	r3, 801f03e <_close_r+0x1a>
 801f03c:	6023      	str	r3, [r4, #0]
 801f03e:	bd38      	pop	{r3, r4, r5, pc}
 801f040:	20015b3c 	.word	0x20015b3c

0801f044 <_lseek_r>:
 801f044:	b538      	push	{r3, r4, r5, lr}
 801f046:	4d07      	ldr	r5, [pc, #28]	@ (801f064 <_lseek_r+0x20>)
 801f048:	4604      	mov	r4, r0
 801f04a:	4608      	mov	r0, r1
 801f04c:	4611      	mov	r1, r2
 801f04e:	2200      	movs	r2, #0
 801f050:	602a      	str	r2, [r5, #0]
 801f052:	461a      	mov	r2, r3
 801f054:	f7e2 f9a6 	bl	80013a4 <_lseek>
 801f058:	1c43      	adds	r3, r0, #1
 801f05a:	d102      	bne.n	801f062 <_lseek_r+0x1e>
 801f05c:	682b      	ldr	r3, [r5, #0]
 801f05e:	b103      	cbz	r3, 801f062 <_lseek_r+0x1e>
 801f060:	6023      	str	r3, [r4, #0]
 801f062:	bd38      	pop	{r3, r4, r5, pc}
 801f064:	20015b3c 	.word	0x20015b3c

0801f068 <_read_r>:
 801f068:	b538      	push	{r3, r4, r5, lr}
 801f06a:	4d07      	ldr	r5, [pc, #28]	@ (801f088 <_read_r+0x20>)
 801f06c:	4604      	mov	r4, r0
 801f06e:	4608      	mov	r0, r1
 801f070:	4611      	mov	r1, r2
 801f072:	2200      	movs	r2, #0
 801f074:	602a      	str	r2, [r5, #0]
 801f076:	461a      	mov	r2, r3
 801f078:	f7e2 f96e 	bl	8001358 <_read>
 801f07c:	1c43      	adds	r3, r0, #1
 801f07e:	d102      	bne.n	801f086 <_read_r+0x1e>
 801f080:	682b      	ldr	r3, [r5, #0]
 801f082:	b103      	cbz	r3, 801f086 <_read_r+0x1e>
 801f084:	6023      	str	r3, [r4, #0]
 801f086:	bd38      	pop	{r3, r4, r5, pc}
 801f088:	20015b3c 	.word	0x20015b3c

0801f08c <_kill_r>:
 801f08c:	b538      	push	{r3, r4, r5, lr}
 801f08e:	4d07      	ldr	r5, [pc, #28]	@ (801f0ac <_kill_r+0x20>)
 801f090:	2300      	movs	r3, #0
 801f092:	4604      	mov	r4, r0
 801f094:	4608      	mov	r0, r1
 801f096:	4611      	mov	r1, r2
 801f098:	602b      	str	r3, [r5, #0]
 801f09a:	f7e2 f94f 	bl	800133c <_kill>
 801f09e:	1c43      	adds	r3, r0, #1
 801f0a0:	d102      	bne.n	801f0a8 <_kill_r+0x1c>
 801f0a2:	682b      	ldr	r3, [r5, #0]
 801f0a4:	b103      	cbz	r3, 801f0a8 <_kill_r+0x1c>
 801f0a6:	6023      	str	r3, [r4, #0]
 801f0a8:	bd38      	pop	{r3, r4, r5, pc}
 801f0aa:	bf00      	nop
 801f0ac:	20015b3c 	.word	0x20015b3c

0801f0b0 <_getpid_r>:
 801f0b0:	f7e2 b942 	b.w	8001338 <_getpid>

0801f0b4 <_sbrk_r>:
 801f0b4:	b538      	push	{r3, r4, r5, lr}
 801f0b6:	4d06      	ldr	r5, [pc, #24]	@ (801f0d0 <_sbrk_r+0x1c>)
 801f0b8:	2300      	movs	r3, #0
 801f0ba:	4604      	mov	r4, r0
 801f0bc:	4608      	mov	r0, r1
 801f0be:	602b      	str	r3, [r5, #0]
 801f0c0:	f7e2 f972 	bl	80013a8 <_sbrk>
 801f0c4:	1c43      	adds	r3, r0, #1
 801f0c6:	d102      	bne.n	801f0ce <_sbrk_r+0x1a>
 801f0c8:	682b      	ldr	r3, [r5, #0]
 801f0ca:	b103      	cbz	r3, 801f0ce <_sbrk_r+0x1a>
 801f0cc:	6023      	str	r3, [r4, #0]
 801f0ce:	bd38      	pop	{r3, r4, r5, pc}
 801f0d0:	20015b3c 	.word	0x20015b3c

0801f0d4 <_write_r>:
 801f0d4:	b538      	push	{r3, r4, r5, lr}
 801f0d6:	4d07      	ldr	r5, [pc, #28]	@ (801f0f4 <_write_r+0x20>)
 801f0d8:	4604      	mov	r4, r0
 801f0da:	4608      	mov	r0, r1
 801f0dc:	4611      	mov	r1, r2
 801f0de:	2200      	movs	r2, #0
 801f0e0:	602a      	str	r2, [r5, #0]
 801f0e2:	461a      	mov	r2, r3
 801f0e4:	f7e2 f946 	bl	8001374 <_write>
 801f0e8:	1c43      	adds	r3, r0, #1
 801f0ea:	d102      	bne.n	801f0f2 <_write_r+0x1e>
 801f0ec:	682b      	ldr	r3, [r5, #0]
 801f0ee:	b103      	cbz	r3, 801f0f2 <_write_r+0x1e>
 801f0f0:	6023      	str	r3, [r4, #0]
 801f0f2:	bd38      	pop	{r3, r4, r5, pc}
 801f0f4:	20015b3c 	.word	0x20015b3c

0801f0f8 <__errno>:
 801f0f8:	4b01      	ldr	r3, [pc, #4]	@ (801f100 <__errno+0x8>)
 801f0fa:	6818      	ldr	r0, [r3, #0]
 801f0fc:	4770      	bx	lr
 801f0fe:	bf00      	nop
 801f100:	200000d0 	.word	0x200000d0

0801f104 <__libc_init_array>:
 801f104:	b570      	push	{r4, r5, r6, lr}
 801f106:	4d0d      	ldr	r5, [pc, #52]	@ (801f13c <__libc_init_array+0x38>)
 801f108:	4c0d      	ldr	r4, [pc, #52]	@ (801f140 <__libc_init_array+0x3c>)
 801f10a:	1b64      	subs	r4, r4, r5
 801f10c:	10a4      	asrs	r4, r4, #2
 801f10e:	2600      	movs	r6, #0
 801f110:	42a6      	cmp	r6, r4
 801f112:	d109      	bne.n	801f128 <__libc_init_array+0x24>
 801f114:	4d0b      	ldr	r5, [pc, #44]	@ (801f144 <__libc_init_array+0x40>)
 801f116:	4c0c      	ldr	r4, [pc, #48]	@ (801f148 <__libc_init_array+0x44>)
 801f118:	f000 fcd0 	bl	801fabc <_init>
 801f11c:	1b64      	subs	r4, r4, r5
 801f11e:	10a4      	asrs	r4, r4, #2
 801f120:	2600      	movs	r6, #0
 801f122:	42a6      	cmp	r6, r4
 801f124:	d105      	bne.n	801f132 <__libc_init_array+0x2e>
 801f126:	bd70      	pop	{r4, r5, r6, pc}
 801f128:	f855 3b04 	ldr.w	r3, [r5], #4
 801f12c:	4798      	blx	r3
 801f12e:	3601      	adds	r6, #1
 801f130:	e7ee      	b.n	801f110 <__libc_init_array+0xc>
 801f132:	f855 3b04 	ldr.w	r3, [r5], #4
 801f136:	4798      	blx	r3
 801f138:	3601      	adds	r6, #1
 801f13a:	e7f2      	b.n	801f122 <__libc_init_array+0x1e>
 801f13c:	08021af8 	.word	0x08021af8
 801f140:	08021af8 	.word	0x08021af8
 801f144:	08021af8 	.word	0x08021af8
 801f148:	08021b10 	.word	0x08021b10

0801f14c <__retarget_lock_init_recursive>:
 801f14c:	4770      	bx	lr

0801f14e <__retarget_lock_acquire_recursive>:
 801f14e:	4770      	bx	lr

0801f150 <__retarget_lock_release_recursive>:
 801f150:	4770      	bx	lr

0801f152 <memcpy>:
 801f152:	440a      	add	r2, r1
 801f154:	4291      	cmp	r1, r2
 801f156:	f100 33ff 	add.w	r3, r0, #4294967295
 801f15a:	d100      	bne.n	801f15e <memcpy+0xc>
 801f15c:	4770      	bx	lr
 801f15e:	b510      	push	{r4, lr}
 801f160:	f811 4b01 	ldrb.w	r4, [r1], #1
 801f164:	f803 4f01 	strb.w	r4, [r3, #1]!
 801f168:	4291      	cmp	r1, r2
 801f16a:	d1f9      	bne.n	801f160 <memcpy+0xe>
 801f16c:	bd10      	pop	{r4, pc}
	...

0801f170 <__register_exitproc>:
 801f170:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801f174:	4d27      	ldr	r5, [pc, #156]	@ (801f214 <__register_exitproc+0xa4>)
 801f176:	4607      	mov	r7, r0
 801f178:	6828      	ldr	r0, [r5, #0]
 801f17a:	4691      	mov	r9, r2
 801f17c:	460e      	mov	r6, r1
 801f17e:	4698      	mov	r8, r3
 801f180:	f7ff ffe5 	bl	801f14e <__retarget_lock_acquire_recursive>
 801f184:	4a24      	ldr	r2, [pc, #144]	@ (801f218 <__register_exitproc+0xa8>)
 801f186:	6814      	ldr	r4, [r2, #0]
 801f188:	b93c      	cbnz	r4, 801f19a <__register_exitproc+0x2a>
 801f18a:	4b24      	ldr	r3, [pc, #144]	@ (801f21c <__register_exitproc+0xac>)
 801f18c:	6013      	str	r3, [r2, #0]
 801f18e:	4a24      	ldr	r2, [pc, #144]	@ (801f220 <__register_exitproc+0xb0>)
 801f190:	b112      	cbz	r2, 801f198 <__register_exitproc+0x28>
 801f192:	6812      	ldr	r2, [r2, #0]
 801f194:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 801f198:	4c20      	ldr	r4, [pc, #128]	@ (801f21c <__register_exitproc+0xac>)
 801f19a:	6863      	ldr	r3, [r4, #4]
 801f19c:	2b1f      	cmp	r3, #31
 801f19e:	dd06      	ble.n	801f1ae <__register_exitproc+0x3e>
 801f1a0:	6828      	ldr	r0, [r5, #0]
 801f1a2:	f7ff ffd5 	bl	801f150 <__retarget_lock_release_recursive>
 801f1a6:	f04f 30ff 	mov.w	r0, #4294967295
 801f1aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801f1ae:	b32f      	cbz	r7, 801f1fc <__register_exitproc+0x8c>
 801f1b0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 801f1b4:	b968      	cbnz	r0, 801f1d2 <__register_exitproc+0x62>
 801f1b6:	4b1b      	ldr	r3, [pc, #108]	@ (801f224 <__register_exitproc+0xb4>)
 801f1b8:	2b00      	cmp	r3, #0
 801f1ba:	d0f1      	beq.n	801f1a0 <__register_exitproc+0x30>
 801f1bc:	f44f 7084 	mov.w	r0, #264	@ 0x108
 801f1c0:	f7ff fc5a 	bl	801ea78 <malloc>
 801f1c4:	2800      	cmp	r0, #0
 801f1c6:	d0eb      	beq.n	801f1a0 <__register_exitproc+0x30>
 801f1c8:	2300      	movs	r3, #0
 801f1ca:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 801f1ce:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 801f1d2:	6863      	ldr	r3, [r4, #4]
 801f1d4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801f1d8:	2201      	movs	r2, #1
 801f1da:	409a      	lsls	r2, r3
 801f1dc:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801f1e0:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 801f1e4:	4313      	orrs	r3, r2
 801f1e6:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 801f1ea:	2f02      	cmp	r7, #2
 801f1ec:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 801f1f0:	bf02      	ittt	eq
 801f1f2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 801f1f6:	4313      	orreq	r3, r2
 801f1f8:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 801f1fc:	6863      	ldr	r3, [r4, #4]
 801f1fe:	6828      	ldr	r0, [r5, #0]
 801f200:	1c5a      	adds	r2, r3, #1
 801f202:	3302      	adds	r3, #2
 801f204:	6062      	str	r2, [r4, #4]
 801f206:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801f20a:	f7ff ffa1 	bl	801f150 <__retarget_lock_release_recursive>
 801f20e:	2000      	movs	r0, #0
 801f210:	e7cb      	b.n	801f1aa <__register_exitproc+0x3a>
 801f212:	bf00      	nop
 801f214:	20000120 	.word	0x20000120
 801f218:	20015bd0 	.word	0x20015bd0
 801f21c:	20015b44 	.word	0x20015b44
 801f220:	08021a60 	.word	0x08021a60
 801f224:	0801ea79 	.word	0x0801ea79

0801f228 <_free_r>:
 801f228:	b538      	push	{r3, r4, r5, lr}
 801f22a:	4605      	mov	r5, r0
 801f22c:	2900      	cmp	r1, #0
 801f22e:	d041      	beq.n	801f2b4 <_free_r+0x8c>
 801f230:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801f234:	1f0c      	subs	r4, r1, #4
 801f236:	2b00      	cmp	r3, #0
 801f238:	bfb8      	it	lt
 801f23a:	18e4      	addlt	r4, r4, r3
 801f23c:	f7ff fcce 	bl	801ebdc <__malloc_lock>
 801f240:	4a1d      	ldr	r2, [pc, #116]	@ (801f2b8 <_free_r+0x90>)
 801f242:	6813      	ldr	r3, [r2, #0]
 801f244:	b933      	cbnz	r3, 801f254 <_free_r+0x2c>
 801f246:	6063      	str	r3, [r4, #4]
 801f248:	6014      	str	r4, [r2, #0]
 801f24a:	4628      	mov	r0, r5
 801f24c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801f250:	f7ff bcca 	b.w	801ebe8 <__malloc_unlock>
 801f254:	42a3      	cmp	r3, r4
 801f256:	d908      	bls.n	801f26a <_free_r+0x42>
 801f258:	6820      	ldr	r0, [r4, #0]
 801f25a:	1821      	adds	r1, r4, r0
 801f25c:	428b      	cmp	r3, r1
 801f25e:	bf01      	itttt	eq
 801f260:	6819      	ldreq	r1, [r3, #0]
 801f262:	685b      	ldreq	r3, [r3, #4]
 801f264:	1809      	addeq	r1, r1, r0
 801f266:	6021      	streq	r1, [r4, #0]
 801f268:	e7ed      	b.n	801f246 <_free_r+0x1e>
 801f26a:	461a      	mov	r2, r3
 801f26c:	685b      	ldr	r3, [r3, #4]
 801f26e:	b10b      	cbz	r3, 801f274 <_free_r+0x4c>
 801f270:	42a3      	cmp	r3, r4
 801f272:	d9fa      	bls.n	801f26a <_free_r+0x42>
 801f274:	6811      	ldr	r1, [r2, #0]
 801f276:	1850      	adds	r0, r2, r1
 801f278:	42a0      	cmp	r0, r4
 801f27a:	d10b      	bne.n	801f294 <_free_r+0x6c>
 801f27c:	6820      	ldr	r0, [r4, #0]
 801f27e:	4401      	add	r1, r0
 801f280:	1850      	adds	r0, r2, r1
 801f282:	4283      	cmp	r3, r0
 801f284:	6011      	str	r1, [r2, #0]
 801f286:	d1e0      	bne.n	801f24a <_free_r+0x22>
 801f288:	6818      	ldr	r0, [r3, #0]
 801f28a:	685b      	ldr	r3, [r3, #4]
 801f28c:	6053      	str	r3, [r2, #4]
 801f28e:	4408      	add	r0, r1
 801f290:	6010      	str	r0, [r2, #0]
 801f292:	e7da      	b.n	801f24a <_free_r+0x22>
 801f294:	d902      	bls.n	801f29c <_free_r+0x74>
 801f296:	230c      	movs	r3, #12
 801f298:	602b      	str	r3, [r5, #0]
 801f29a:	e7d6      	b.n	801f24a <_free_r+0x22>
 801f29c:	6820      	ldr	r0, [r4, #0]
 801f29e:	1821      	adds	r1, r4, r0
 801f2a0:	428b      	cmp	r3, r1
 801f2a2:	bf04      	itt	eq
 801f2a4:	6819      	ldreq	r1, [r3, #0]
 801f2a6:	685b      	ldreq	r3, [r3, #4]
 801f2a8:	6063      	str	r3, [r4, #4]
 801f2aa:	bf04      	itt	eq
 801f2ac:	1809      	addeq	r1, r1, r0
 801f2ae:	6021      	streq	r1, [r4, #0]
 801f2b0:	6054      	str	r4, [r2, #4]
 801f2b2:	e7ca      	b.n	801f24a <_free_r+0x22>
 801f2b4:	bd38      	pop	{r3, r4, r5, pc}
 801f2b6:	bf00      	nop
 801f2b8:	200159fc 	.word	0x200159fc

0801f2bc <__sfputc_r>:
 801f2bc:	6893      	ldr	r3, [r2, #8]
 801f2be:	3b01      	subs	r3, #1
 801f2c0:	2b00      	cmp	r3, #0
 801f2c2:	b410      	push	{r4}
 801f2c4:	6093      	str	r3, [r2, #8]
 801f2c6:	da08      	bge.n	801f2da <__sfputc_r+0x1e>
 801f2c8:	6994      	ldr	r4, [r2, #24]
 801f2ca:	42a3      	cmp	r3, r4
 801f2cc:	db01      	blt.n	801f2d2 <__sfputc_r+0x16>
 801f2ce:	290a      	cmp	r1, #10
 801f2d0:	d103      	bne.n	801f2da <__sfputc_r+0x1e>
 801f2d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801f2d6:	f7ff bdb2 	b.w	801ee3e <__swbuf_r>
 801f2da:	6813      	ldr	r3, [r2, #0]
 801f2dc:	1c58      	adds	r0, r3, #1
 801f2de:	6010      	str	r0, [r2, #0]
 801f2e0:	7019      	strb	r1, [r3, #0]
 801f2e2:	4608      	mov	r0, r1
 801f2e4:	f85d 4b04 	ldr.w	r4, [sp], #4
 801f2e8:	4770      	bx	lr

0801f2ea <__sfputs_r>:
 801f2ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f2ec:	4606      	mov	r6, r0
 801f2ee:	460f      	mov	r7, r1
 801f2f0:	4614      	mov	r4, r2
 801f2f2:	18d5      	adds	r5, r2, r3
 801f2f4:	42ac      	cmp	r4, r5
 801f2f6:	d101      	bne.n	801f2fc <__sfputs_r+0x12>
 801f2f8:	2000      	movs	r0, #0
 801f2fa:	e007      	b.n	801f30c <__sfputs_r+0x22>
 801f2fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 801f300:	463a      	mov	r2, r7
 801f302:	4630      	mov	r0, r6
 801f304:	f7ff ffda 	bl	801f2bc <__sfputc_r>
 801f308:	1c43      	adds	r3, r0, #1
 801f30a:	d1f3      	bne.n	801f2f4 <__sfputs_r+0xa>
 801f30c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801f310 <_vfiprintf_r>:
 801f310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f314:	460d      	mov	r5, r1
 801f316:	b09d      	sub	sp, #116	@ 0x74
 801f318:	4614      	mov	r4, r2
 801f31a:	4698      	mov	r8, r3
 801f31c:	4606      	mov	r6, r0
 801f31e:	b118      	cbz	r0, 801f328 <_vfiprintf_r+0x18>
 801f320:	6a03      	ldr	r3, [r0, #32]
 801f322:	b90b      	cbnz	r3, 801f328 <_vfiprintf_r+0x18>
 801f324:	f7ff fd00 	bl	801ed28 <__sinit>
 801f328:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801f32a:	07d9      	lsls	r1, r3, #31
 801f32c:	d405      	bmi.n	801f33a <_vfiprintf_r+0x2a>
 801f32e:	89ab      	ldrh	r3, [r5, #12]
 801f330:	059a      	lsls	r2, r3, #22
 801f332:	d402      	bmi.n	801f33a <_vfiprintf_r+0x2a>
 801f334:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801f336:	f7ff ff0a 	bl	801f14e <__retarget_lock_acquire_recursive>
 801f33a:	89ab      	ldrh	r3, [r5, #12]
 801f33c:	071b      	lsls	r3, r3, #28
 801f33e:	d501      	bpl.n	801f344 <_vfiprintf_r+0x34>
 801f340:	692b      	ldr	r3, [r5, #16]
 801f342:	b99b      	cbnz	r3, 801f36c <_vfiprintf_r+0x5c>
 801f344:	4629      	mov	r1, r5
 801f346:	4630      	mov	r0, r6
 801f348:	f7ff fdb8 	bl	801eebc <__swsetup_r>
 801f34c:	b170      	cbz	r0, 801f36c <_vfiprintf_r+0x5c>
 801f34e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801f350:	07dc      	lsls	r4, r3, #31
 801f352:	d504      	bpl.n	801f35e <_vfiprintf_r+0x4e>
 801f354:	f04f 30ff 	mov.w	r0, #4294967295
 801f358:	b01d      	add	sp, #116	@ 0x74
 801f35a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f35e:	89ab      	ldrh	r3, [r5, #12]
 801f360:	0598      	lsls	r0, r3, #22
 801f362:	d4f7      	bmi.n	801f354 <_vfiprintf_r+0x44>
 801f364:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801f366:	f7ff fef3 	bl	801f150 <__retarget_lock_release_recursive>
 801f36a:	e7f3      	b.n	801f354 <_vfiprintf_r+0x44>
 801f36c:	2300      	movs	r3, #0
 801f36e:	9309      	str	r3, [sp, #36]	@ 0x24
 801f370:	2320      	movs	r3, #32
 801f372:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801f376:	f8cd 800c 	str.w	r8, [sp, #12]
 801f37a:	2330      	movs	r3, #48	@ 0x30
 801f37c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 801f52c <_vfiprintf_r+0x21c>
 801f380:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 801f384:	f04f 0901 	mov.w	r9, #1
 801f388:	4623      	mov	r3, r4
 801f38a:	469a      	mov	sl, r3
 801f38c:	f813 2b01 	ldrb.w	r2, [r3], #1
 801f390:	b10a      	cbz	r2, 801f396 <_vfiprintf_r+0x86>
 801f392:	2a25      	cmp	r2, #37	@ 0x25
 801f394:	d1f9      	bne.n	801f38a <_vfiprintf_r+0x7a>
 801f396:	ebba 0b04 	subs.w	fp, sl, r4
 801f39a:	d00b      	beq.n	801f3b4 <_vfiprintf_r+0xa4>
 801f39c:	465b      	mov	r3, fp
 801f39e:	4622      	mov	r2, r4
 801f3a0:	4629      	mov	r1, r5
 801f3a2:	4630      	mov	r0, r6
 801f3a4:	f7ff ffa1 	bl	801f2ea <__sfputs_r>
 801f3a8:	3001      	adds	r0, #1
 801f3aa:	f000 80a7 	beq.w	801f4fc <_vfiprintf_r+0x1ec>
 801f3ae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f3b0:	445a      	add	r2, fp
 801f3b2:	9209      	str	r2, [sp, #36]	@ 0x24
 801f3b4:	f89a 3000 	ldrb.w	r3, [sl]
 801f3b8:	2b00      	cmp	r3, #0
 801f3ba:	f000 809f 	beq.w	801f4fc <_vfiprintf_r+0x1ec>
 801f3be:	2300      	movs	r3, #0
 801f3c0:	f04f 32ff 	mov.w	r2, #4294967295
 801f3c4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801f3c8:	f10a 0a01 	add.w	sl, sl, #1
 801f3cc:	9304      	str	r3, [sp, #16]
 801f3ce:	9307      	str	r3, [sp, #28]
 801f3d0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 801f3d4:	931a      	str	r3, [sp, #104]	@ 0x68
 801f3d6:	4654      	mov	r4, sl
 801f3d8:	2205      	movs	r2, #5
 801f3da:	f814 1b01 	ldrb.w	r1, [r4], #1
 801f3de:	4853      	ldr	r0, [pc, #332]	@ (801f52c <_vfiprintf_r+0x21c>)
 801f3e0:	f7e0 ff16 	bl	8000210 <memchr>
 801f3e4:	9a04      	ldr	r2, [sp, #16]
 801f3e6:	b9d8      	cbnz	r0, 801f420 <_vfiprintf_r+0x110>
 801f3e8:	06d1      	lsls	r1, r2, #27
 801f3ea:	bf44      	itt	mi
 801f3ec:	2320      	movmi	r3, #32
 801f3ee:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801f3f2:	0713      	lsls	r3, r2, #28
 801f3f4:	bf44      	itt	mi
 801f3f6:	232b      	movmi	r3, #43	@ 0x2b
 801f3f8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801f3fc:	f89a 3000 	ldrb.w	r3, [sl]
 801f400:	2b2a      	cmp	r3, #42	@ 0x2a
 801f402:	d015      	beq.n	801f430 <_vfiprintf_r+0x120>
 801f404:	9a07      	ldr	r2, [sp, #28]
 801f406:	4654      	mov	r4, sl
 801f408:	2000      	movs	r0, #0
 801f40a:	f04f 0c0a 	mov.w	ip, #10
 801f40e:	4621      	mov	r1, r4
 801f410:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f414:	3b30      	subs	r3, #48	@ 0x30
 801f416:	2b09      	cmp	r3, #9
 801f418:	d94b      	bls.n	801f4b2 <_vfiprintf_r+0x1a2>
 801f41a:	b1b0      	cbz	r0, 801f44a <_vfiprintf_r+0x13a>
 801f41c:	9207      	str	r2, [sp, #28]
 801f41e:	e014      	b.n	801f44a <_vfiprintf_r+0x13a>
 801f420:	eba0 0308 	sub.w	r3, r0, r8
 801f424:	fa09 f303 	lsl.w	r3, r9, r3
 801f428:	4313      	orrs	r3, r2
 801f42a:	9304      	str	r3, [sp, #16]
 801f42c:	46a2      	mov	sl, r4
 801f42e:	e7d2      	b.n	801f3d6 <_vfiprintf_r+0xc6>
 801f430:	9b03      	ldr	r3, [sp, #12]
 801f432:	1d19      	adds	r1, r3, #4
 801f434:	681b      	ldr	r3, [r3, #0]
 801f436:	9103      	str	r1, [sp, #12]
 801f438:	2b00      	cmp	r3, #0
 801f43a:	bfbb      	ittet	lt
 801f43c:	425b      	neglt	r3, r3
 801f43e:	f042 0202 	orrlt.w	r2, r2, #2
 801f442:	9307      	strge	r3, [sp, #28]
 801f444:	9307      	strlt	r3, [sp, #28]
 801f446:	bfb8      	it	lt
 801f448:	9204      	strlt	r2, [sp, #16]
 801f44a:	7823      	ldrb	r3, [r4, #0]
 801f44c:	2b2e      	cmp	r3, #46	@ 0x2e
 801f44e:	d10a      	bne.n	801f466 <_vfiprintf_r+0x156>
 801f450:	7863      	ldrb	r3, [r4, #1]
 801f452:	2b2a      	cmp	r3, #42	@ 0x2a
 801f454:	d132      	bne.n	801f4bc <_vfiprintf_r+0x1ac>
 801f456:	9b03      	ldr	r3, [sp, #12]
 801f458:	1d1a      	adds	r2, r3, #4
 801f45a:	681b      	ldr	r3, [r3, #0]
 801f45c:	9203      	str	r2, [sp, #12]
 801f45e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801f462:	3402      	adds	r4, #2
 801f464:	9305      	str	r3, [sp, #20]
 801f466:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 801f53c <_vfiprintf_r+0x22c>
 801f46a:	7821      	ldrb	r1, [r4, #0]
 801f46c:	2203      	movs	r2, #3
 801f46e:	4650      	mov	r0, sl
 801f470:	f7e0 fece 	bl	8000210 <memchr>
 801f474:	b138      	cbz	r0, 801f486 <_vfiprintf_r+0x176>
 801f476:	9b04      	ldr	r3, [sp, #16]
 801f478:	eba0 000a 	sub.w	r0, r0, sl
 801f47c:	2240      	movs	r2, #64	@ 0x40
 801f47e:	4082      	lsls	r2, r0
 801f480:	4313      	orrs	r3, r2
 801f482:	3401      	adds	r4, #1
 801f484:	9304      	str	r3, [sp, #16]
 801f486:	f814 1b01 	ldrb.w	r1, [r4], #1
 801f48a:	4829      	ldr	r0, [pc, #164]	@ (801f530 <_vfiprintf_r+0x220>)
 801f48c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 801f490:	2206      	movs	r2, #6
 801f492:	f7e0 febd 	bl	8000210 <memchr>
 801f496:	2800      	cmp	r0, #0
 801f498:	d03f      	beq.n	801f51a <_vfiprintf_r+0x20a>
 801f49a:	4b26      	ldr	r3, [pc, #152]	@ (801f534 <_vfiprintf_r+0x224>)
 801f49c:	bb1b      	cbnz	r3, 801f4e6 <_vfiprintf_r+0x1d6>
 801f49e:	9b03      	ldr	r3, [sp, #12]
 801f4a0:	3307      	adds	r3, #7
 801f4a2:	f023 0307 	bic.w	r3, r3, #7
 801f4a6:	3308      	adds	r3, #8
 801f4a8:	9303      	str	r3, [sp, #12]
 801f4aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f4ac:	443b      	add	r3, r7
 801f4ae:	9309      	str	r3, [sp, #36]	@ 0x24
 801f4b0:	e76a      	b.n	801f388 <_vfiprintf_r+0x78>
 801f4b2:	fb0c 3202 	mla	r2, ip, r2, r3
 801f4b6:	460c      	mov	r4, r1
 801f4b8:	2001      	movs	r0, #1
 801f4ba:	e7a8      	b.n	801f40e <_vfiprintf_r+0xfe>
 801f4bc:	2300      	movs	r3, #0
 801f4be:	3401      	adds	r4, #1
 801f4c0:	9305      	str	r3, [sp, #20]
 801f4c2:	4619      	mov	r1, r3
 801f4c4:	f04f 0c0a 	mov.w	ip, #10
 801f4c8:	4620      	mov	r0, r4
 801f4ca:	f810 2b01 	ldrb.w	r2, [r0], #1
 801f4ce:	3a30      	subs	r2, #48	@ 0x30
 801f4d0:	2a09      	cmp	r2, #9
 801f4d2:	d903      	bls.n	801f4dc <_vfiprintf_r+0x1cc>
 801f4d4:	2b00      	cmp	r3, #0
 801f4d6:	d0c6      	beq.n	801f466 <_vfiprintf_r+0x156>
 801f4d8:	9105      	str	r1, [sp, #20]
 801f4da:	e7c4      	b.n	801f466 <_vfiprintf_r+0x156>
 801f4dc:	fb0c 2101 	mla	r1, ip, r1, r2
 801f4e0:	4604      	mov	r4, r0
 801f4e2:	2301      	movs	r3, #1
 801f4e4:	e7f0      	b.n	801f4c8 <_vfiprintf_r+0x1b8>
 801f4e6:	ab03      	add	r3, sp, #12
 801f4e8:	9300      	str	r3, [sp, #0]
 801f4ea:	462a      	mov	r2, r5
 801f4ec:	4b12      	ldr	r3, [pc, #72]	@ (801f538 <_vfiprintf_r+0x228>)
 801f4ee:	a904      	add	r1, sp, #16
 801f4f0:	4630      	mov	r0, r6
 801f4f2:	f3af 8000 	nop.w
 801f4f6:	4607      	mov	r7, r0
 801f4f8:	1c78      	adds	r0, r7, #1
 801f4fa:	d1d6      	bne.n	801f4aa <_vfiprintf_r+0x19a>
 801f4fc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801f4fe:	07d9      	lsls	r1, r3, #31
 801f500:	d405      	bmi.n	801f50e <_vfiprintf_r+0x1fe>
 801f502:	89ab      	ldrh	r3, [r5, #12]
 801f504:	059a      	lsls	r2, r3, #22
 801f506:	d402      	bmi.n	801f50e <_vfiprintf_r+0x1fe>
 801f508:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801f50a:	f7ff fe21 	bl	801f150 <__retarget_lock_release_recursive>
 801f50e:	89ab      	ldrh	r3, [r5, #12]
 801f510:	065b      	lsls	r3, r3, #25
 801f512:	f53f af1f 	bmi.w	801f354 <_vfiprintf_r+0x44>
 801f516:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801f518:	e71e      	b.n	801f358 <_vfiprintf_r+0x48>
 801f51a:	ab03      	add	r3, sp, #12
 801f51c:	9300      	str	r3, [sp, #0]
 801f51e:	462a      	mov	r2, r5
 801f520:	4b05      	ldr	r3, [pc, #20]	@ (801f538 <_vfiprintf_r+0x228>)
 801f522:	a904      	add	r1, sp, #16
 801f524:	4630      	mov	r0, r6
 801f526:	f000 f879 	bl	801f61c <_printf_i>
 801f52a:	e7e4      	b.n	801f4f6 <_vfiprintf_r+0x1e6>
 801f52c:	08021a64 	.word	0x08021a64
 801f530:	08021a6e 	.word	0x08021a6e
 801f534:	00000000 	.word	0x00000000
 801f538:	0801f2eb 	.word	0x0801f2eb
 801f53c:	08021a6a 	.word	0x08021a6a

0801f540 <_printf_common>:
 801f540:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f544:	4616      	mov	r6, r2
 801f546:	4698      	mov	r8, r3
 801f548:	688a      	ldr	r2, [r1, #8]
 801f54a:	690b      	ldr	r3, [r1, #16]
 801f54c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 801f550:	4293      	cmp	r3, r2
 801f552:	bfb8      	it	lt
 801f554:	4613      	movlt	r3, r2
 801f556:	6033      	str	r3, [r6, #0]
 801f558:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 801f55c:	4607      	mov	r7, r0
 801f55e:	460c      	mov	r4, r1
 801f560:	b10a      	cbz	r2, 801f566 <_printf_common+0x26>
 801f562:	3301      	adds	r3, #1
 801f564:	6033      	str	r3, [r6, #0]
 801f566:	6823      	ldr	r3, [r4, #0]
 801f568:	0699      	lsls	r1, r3, #26
 801f56a:	bf42      	ittt	mi
 801f56c:	6833      	ldrmi	r3, [r6, #0]
 801f56e:	3302      	addmi	r3, #2
 801f570:	6033      	strmi	r3, [r6, #0]
 801f572:	6825      	ldr	r5, [r4, #0]
 801f574:	f015 0506 	ands.w	r5, r5, #6
 801f578:	d106      	bne.n	801f588 <_printf_common+0x48>
 801f57a:	f104 0a19 	add.w	sl, r4, #25
 801f57e:	68e3      	ldr	r3, [r4, #12]
 801f580:	6832      	ldr	r2, [r6, #0]
 801f582:	1a9b      	subs	r3, r3, r2
 801f584:	42ab      	cmp	r3, r5
 801f586:	dc26      	bgt.n	801f5d6 <_printf_common+0x96>
 801f588:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 801f58c:	6822      	ldr	r2, [r4, #0]
 801f58e:	3b00      	subs	r3, #0
 801f590:	bf18      	it	ne
 801f592:	2301      	movne	r3, #1
 801f594:	0692      	lsls	r2, r2, #26
 801f596:	d42b      	bmi.n	801f5f0 <_printf_common+0xb0>
 801f598:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 801f59c:	4641      	mov	r1, r8
 801f59e:	4638      	mov	r0, r7
 801f5a0:	47c8      	blx	r9
 801f5a2:	3001      	adds	r0, #1
 801f5a4:	d01e      	beq.n	801f5e4 <_printf_common+0xa4>
 801f5a6:	6823      	ldr	r3, [r4, #0]
 801f5a8:	6922      	ldr	r2, [r4, #16]
 801f5aa:	f003 0306 	and.w	r3, r3, #6
 801f5ae:	2b04      	cmp	r3, #4
 801f5b0:	bf02      	ittt	eq
 801f5b2:	68e5      	ldreq	r5, [r4, #12]
 801f5b4:	6833      	ldreq	r3, [r6, #0]
 801f5b6:	1aed      	subeq	r5, r5, r3
 801f5b8:	68a3      	ldr	r3, [r4, #8]
 801f5ba:	bf0c      	ite	eq
 801f5bc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801f5c0:	2500      	movne	r5, #0
 801f5c2:	4293      	cmp	r3, r2
 801f5c4:	bfc4      	itt	gt
 801f5c6:	1a9b      	subgt	r3, r3, r2
 801f5c8:	18ed      	addgt	r5, r5, r3
 801f5ca:	2600      	movs	r6, #0
 801f5cc:	341a      	adds	r4, #26
 801f5ce:	42b5      	cmp	r5, r6
 801f5d0:	d11a      	bne.n	801f608 <_printf_common+0xc8>
 801f5d2:	2000      	movs	r0, #0
 801f5d4:	e008      	b.n	801f5e8 <_printf_common+0xa8>
 801f5d6:	2301      	movs	r3, #1
 801f5d8:	4652      	mov	r2, sl
 801f5da:	4641      	mov	r1, r8
 801f5dc:	4638      	mov	r0, r7
 801f5de:	47c8      	blx	r9
 801f5e0:	3001      	adds	r0, #1
 801f5e2:	d103      	bne.n	801f5ec <_printf_common+0xac>
 801f5e4:	f04f 30ff 	mov.w	r0, #4294967295
 801f5e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f5ec:	3501      	adds	r5, #1
 801f5ee:	e7c6      	b.n	801f57e <_printf_common+0x3e>
 801f5f0:	18e1      	adds	r1, r4, r3
 801f5f2:	1c5a      	adds	r2, r3, #1
 801f5f4:	2030      	movs	r0, #48	@ 0x30
 801f5f6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 801f5fa:	4422      	add	r2, r4
 801f5fc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 801f600:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 801f604:	3302      	adds	r3, #2
 801f606:	e7c7      	b.n	801f598 <_printf_common+0x58>
 801f608:	2301      	movs	r3, #1
 801f60a:	4622      	mov	r2, r4
 801f60c:	4641      	mov	r1, r8
 801f60e:	4638      	mov	r0, r7
 801f610:	47c8      	blx	r9
 801f612:	3001      	adds	r0, #1
 801f614:	d0e6      	beq.n	801f5e4 <_printf_common+0xa4>
 801f616:	3601      	adds	r6, #1
 801f618:	e7d9      	b.n	801f5ce <_printf_common+0x8e>
	...

0801f61c <_printf_i>:
 801f61c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801f620:	7e0f      	ldrb	r7, [r1, #24]
 801f622:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801f624:	2f78      	cmp	r7, #120	@ 0x78
 801f626:	4691      	mov	r9, r2
 801f628:	4680      	mov	r8, r0
 801f62a:	460c      	mov	r4, r1
 801f62c:	469a      	mov	sl, r3
 801f62e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 801f632:	d807      	bhi.n	801f644 <_printf_i+0x28>
 801f634:	2f62      	cmp	r7, #98	@ 0x62
 801f636:	d80a      	bhi.n	801f64e <_printf_i+0x32>
 801f638:	2f00      	cmp	r7, #0
 801f63a:	f000 80d2 	beq.w	801f7e2 <_printf_i+0x1c6>
 801f63e:	2f58      	cmp	r7, #88	@ 0x58
 801f640:	f000 80b9 	beq.w	801f7b6 <_printf_i+0x19a>
 801f644:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801f648:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 801f64c:	e03a      	b.n	801f6c4 <_printf_i+0xa8>
 801f64e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 801f652:	2b15      	cmp	r3, #21
 801f654:	d8f6      	bhi.n	801f644 <_printf_i+0x28>
 801f656:	a101      	add	r1, pc, #4	@ (adr r1, 801f65c <_printf_i+0x40>)
 801f658:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801f65c:	0801f6b5 	.word	0x0801f6b5
 801f660:	0801f6c9 	.word	0x0801f6c9
 801f664:	0801f645 	.word	0x0801f645
 801f668:	0801f645 	.word	0x0801f645
 801f66c:	0801f645 	.word	0x0801f645
 801f670:	0801f645 	.word	0x0801f645
 801f674:	0801f6c9 	.word	0x0801f6c9
 801f678:	0801f645 	.word	0x0801f645
 801f67c:	0801f645 	.word	0x0801f645
 801f680:	0801f645 	.word	0x0801f645
 801f684:	0801f645 	.word	0x0801f645
 801f688:	0801f7c9 	.word	0x0801f7c9
 801f68c:	0801f6f3 	.word	0x0801f6f3
 801f690:	0801f783 	.word	0x0801f783
 801f694:	0801f645 	.word	0x0801f645
 801f698:	0801f645 	.word	0x0801f645
 801f69c:	0801f7eb 	.word	0x0801f7eb
 801f6a0:	0801f645 	.word	0x0801f645
 801f6a4:	0801f6f3 	.word	0x0801f6f3
 801f6a8:	0801f645 	.word	0x0801f645
 801f6ac:	0801f645 	.word	0x0801f645
 801f6b0:	0801f78b 	.word	0x0801f78b
 801f6b4:	6833      	ldr	r3, [r6, #0]
 801f6b6:	1d1a      	adds	r2, r3, #4
 801f6b8:	681b      	ldr	r3, [r3, #0]
 801f6ba:	6032      	str	r2, [r6, #0]
 801f6bc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801f6c0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 801f6c4:	2301      	movs	r3, #1
 801f6c6:	e09d      	b.n	801f804 <_printf_i+0x1e8>
 801f6c8:	6833      	ldr	r3, [r6, #0]
 801f6ca:	6820      	ldr	r0, [r4, #0]
 801f6cc:	1d19      	adds	r1, r3, #4
 801f6ce:	6031      	str	r1, [r6, #0]
 801f6d0:	0606      	lsls	r6, r0, #24
 801f6d2:	d501      	bpl.n	801f6d8 <_printf_i+0xbc>
 801f6d4:	681d      	ldr	r5, [r3, #0]
 801f6d6:	e003      	b.n	801f6e0 <_printf_i+0xc4>
 801f6d8:	0645      	lsls	r5, r0, #25
 801f6da:	d5fb      	bpl.n	801f6d4 <_printf_i+0xb8>
 801f6dc:	f9b3 5000 	ldrsh.w	r5, [r3]
 801f6e0:	2d00      	cmp	r5, #0
 801f6e2:	da03      	bge.n	801f6ec <_printf_i+0xd0>
 801f6e4:	232d      	movs	r3, #45	@ 0x2d
 801f6e6:	426d      	negs	r5, r5
 801f6e8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801f6ec:	4859      	ldr	r0, [pc, #356]	@ (801f854 <_printf_i+0x238>)
 801f6ee:	230a      	movs	r3, #10
 801f6f0:	e011      	b.n	801f716 <_printf_i+0xfa>
 801f6f2:	6821      	ldr	r1, [r4, #0]
 801f6f4:	6833      	ldr	r3, [r6, #0]
 801f6f6:	0608      	lsls	r0, r1, #24
 801f6f8:	f853 5b04 	ldr.w	r5, [r3], #4
 801f6fc:	d402      	bmi.n	801f704 <_printf_i+0xe8>
 801f6fe:	0649      	lsls	r1, r1, #25
 801f700:	bf48      	it	mi
 801f702:	b2ad      	uxthmi	r5, r5
 801f704:	2f6f      	cmp	r7, #111	@ 0x6f
 801f706:	4853      	ldr	r0, [pc, #332]	@ (801f854 <_printf_i+0x238>)
 801f708:	6033      	str	r3, [r6, #0]
 801f70a:	bf14      	ite	ne
 801f70c:	230a      	movne	r3, #10
 801f70e:	2308      	moveq	r3, #8
 801f710:	2100      	movs	r1, #0
 801f712:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 801f716:	6866      	ldr	r6, [r4, #4]
 801f718:	60a6      	str	r6, [r4, #8]
 801f71a:	2e00      	cmp	r6, #0
 801f71c:	bfa2      	ittt	ge
 801f71e:	6821      	ldrge	r1, [r4, #0]
 801f720:	f021 0104 	bicge.w	r1, r1, #4
 801f724:	6021      	strge	r1, [r4, #0]
 801f726:	b90d      	cbnz	r5, 801f72c <_printf_i+0x110>
 801f728:	2e00      	cmp	r6, #0
 801f72a:	d04b      	beq.n	801f7c4 <_printf_i+0x1a8>
 801f72c:	4616      	mov	r6, r2
 801f72e:	fbb5 f1f3 	udiv	r1, r5, r3
 801f732:	fb03 5711 	mls	r7, r3, r1, r5
 801f736:	5dc7      	ldrb	r7, [r0, r7]
 801f738:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801f73c:	462f      	mov	r7, r5
 801f73e:	42bb      	cmp	r3, r7
 801f740:	460d      	mov	r5, r1
 801f742:	d9f4      	bls.n	801f72e <_printf_i+0x112>
 801f744:	2b08      	cmp	r3, #8
 801f746:	d10b      	bne.n	801f760 <_printf_i+0x144>
 801f748:	6823      	ldr	r3, [r4, #0]
 801f74a:	07df      	lsls	r7, r3, #31
 801f74c:	d508      	bpl.n	801f760 <_printf_i+0x144>
 801f74e:	6923      	ldr	r3, [r4, #16]
 801f750:	6861      	ldr	r1, [r4, #4]
 801f752:	4299      	cmp	r1, r3
 801f754:	bfde      	ittt	le
 801f756:	2330      	movle	r3, #48	@ 0x30
 801f758:	f806 3c01 	strble.w	r3, [r6, #-1]
 801f75c:	f106 36ff 	addle.w	r6, r6, #4294967295
 801f760:	1b92      	subs	r2, r2, r6
 801f762:	6122      	str	r2, [r4, #16]
 801f764:	f8cd a000 	str.w	sl, [sp]
 801f768:	464b      	mov	r3, r9
 801f76a:	aa03      	add	r2, sp, #12
 801f76c:	4621      	mov	r1, r4
 801f76e:	4640      	mov	r0, r8
 801f770:	f7ff fee6 	bl	801f540 <_printf_common>
 801f774:	3001      	adds	r0, #1
 801f776:	d14a      	bne.n	801f80e <_printf_i+0x1f2>
 801f778:	f04f 30ff 	mov.w	r0, #4294967295
 801f77c:	b004      	add	sp, #16
 801f77e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f782:	6823      	ldr	r3, [r4, #0]
 801f784:	f043 0320 	orr.w	r3, r3, #32
 801f788:	6023      	str	r3, [r4, #0]
 801f78a:	4833      	ldr	r0, [pc, #204]	@ (801f858 <_printf_i+0x23c>)
 801f78c:	2778      	movs	r7, #120	@ 0x78
 801f78e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 801f792:	6823      	ldr	r3, [r4, #0]
 801f794:	6831      	ldr	r1, [r6, #0]
 801f796:	061f      	lsls	r7, r3, #24
 801f798:	f851 5b04 	ldr.w	r5, [r1], #4
 801f79c:	d402      	bmi.n	801f7a4 <_printf_i+0x188>
 801f79e:	065f      	lsls	r7, r3, #25
 801f7a0:	bf48      	it	mi
 801f7a2:	b2ad      	uxthmi	r5, r5
 801f7a4:	6031      	str	r1, [r6, #0]
 801f7a6:	07d9      	lsls	r1, r3, #31
 801f7a8:	bf44      	itt	mi
 801f7aa:	f043 0320 	orrmi.w	r3, r3, #32
 801f7ae:	6023      	strmi	r3, [r4, #0]
 801f7b0:	b11d      	cbz	r5, 801f7ba <_printf_i+0x19e>
 801f7b2:	2310      	movs	r3, #16
 801f7b4:	e7ac      	b.n	801f710 <_printf_i+0xf4>
 801f7b6:	4827      	ldr	r0, [pc, #156]	@ (801f854 <_printf_i+0x238>)
 801f7b8:	e7e9      	b.n	801f78e <_printf_i+0x172>
 801f7ba:	6823      	ldr	r3, [r4, #0]
 801f7bc:	f023 0320 	bic.w	r3, r3, #32
 801f7c0:	6023      	str	r3, [r4, #0]
 801f7c2:	e7f6      	b.n	801f7b2 <_printf_i+0x196>
 801f7c4:	4616      	mov	r6, r2
 801f7c6:	e7bd      	b.n	801f744 <_printf_i+0x128>
 801f7c8:	6833      	ldr	r3, [r6, #0]
 801f7ca:	6825      	ldr	r5, [r4, #0]
 801f7cc:	6961      	ldr	r1, [r4, #20]
 801f7ce:	1d18      	adds	r0, r3, #4
 801f7d0:	6030      	str	r0, [r6, #0]
 801f7d2:	062e      	lsls	r6, r5, #24
 801f7d4:	681b      	ldr	r3, [r3, #0]
 801f7d6:	d501      	bpl.n	801f7dc <_printf_i+0x1c0>
 801f7d8:	6019      	str	r1, [r3, #0]
 801f7da:	e002      	b.n	801f7e2 <_printf_i+0x1c6>
 801f7dc:	0668      	lsls	r0, r5, #25
 801f7de:	d5fb      	bpl.n	801f7d8 <_printf_i+0x1bc>
 801f7e0:	8019      	strh	r1, [r3, #0]
 801f7e2:	2300      	movs	r3, #0
 801f7e4:	6123      	str	r3, [r4, #16]
 801f7e6:	4616      	mov	r6, r2
 801f7e8:	e7bc      	b.n	801f764 <_printf_i+0x148>
 801f7ea:	6833      	ldr	r3, [r6, #0]
 801f7ec:	1d1a      	adds	r2, r3, #4
 801f7ee:	6032      	str	r2, [r6, #0]
 801f7f0:	681e      	ldr	r6, [r3, #0]
 801f7f2:	6862      	ldr	r2, [r4, #4]
 801f7f4:	2100      	movs	r1, #0
 801f7f6:	4630      	mov	r0, r6
 801f7f8:	f7e0 fd0a 	bl	8000210 <memchr>
 801f7fc:	b108      	cbz	r0, 801f802 <_printf_i+0x1e6>
 801f7fe:	1b80      	subs	r0, r0, r6
 801f800:	6060      	str	r0, [r4, #4]
 801f802:	6863      	ldr	r3, [r4, #4]
 801f804:	6123      	str	r3, [r4, #16]
 801f806:	2300      	movs	r3, #0
 801f808:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801f80c:	e7aa      	b.n	801f764 <_printf_i+0x148>
 801f80e:	6923      	ldr	r3, [r4, #16]
 801f810:	4632      	mov	r2, r6
 801f812:	4649      	mov	r1, r9
 801f814:	4640      	mov	r0, r8
 801f816:	47d0      	blx	sl
 801f818:	3001      	adds	r0, #1
 801f81a:	d0ad      	beq.n	801f778 <_printf_i+0x15c>
 801f81c:	6823      	ldr	r3, [r4, #0]
 801f81e:	079b      	lsls	r3, r3, #30
 801f820:	d413      	bmi.n	801f84a <_printf_i+0x22e>
 801f822:	68e0      	ldr	r0, [r4, #12]
 801f824:	9b03      	ldr	r3, [sp, #12]
 801f826:	4298      	cmp	r0, r3
 801f828:	bfb8      	it	lt
 801f82a:	4618      	movlt	r0, r3
 801f82c:	e7a6      	b.n	801f77c <_printf_i+0x160>
 801f82e:	2301      	movs	r3, #1
 801f830:	4632      	mov	r2, r6
 801f832:	4649      	mov	r1, r9
 801f834:	4640      	mov	r0, r8
 801f836:	47d0      	blx	sl
 801f838:	3001      	adds	r0, #1
 801f83a:	d09d      	beq.n	801f778 <_printf_i+0x15c>
 801f83c:	3501      	adds	r5, #1
 801f83e:	68e3      	ldr	r3, [r4, #12]
 801f840:	9903      	ldr	r1, [sp, #12]
 801f842:	1a5b      	subs	r3, r3, r1
 801f844:	42ab      	cmp	r3, r5
 801f846:	dcf2      	bgt.n	801f82e <_printf_i+0x212>
 801f848:	e7eb      	b.n	801f822 <_printf_i+0x206>
 801f84a:	2500      	movs	r5, #0
 801f84c:	f104 0619 	add.w	r6, r4, #25
 801f850:	e7f5      	b.n	801f83e <_printf_i+0x222>
 801f852:	bf00      	nop
 801f854:	08021a75 	.word	0x08021a75
 801f858:	08021a86 	.word	0x08021a86

0801f85c <__sflush_r>:
 801f85c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 801f860:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f864:	0716      	lsls	r6, r2, #28
 801f866:	4605      	mov	r5, r0
 801f868:	460c      	mov	r4, r1
 801f86a:	d454      	bmi.n	801f916 <__sflush_r+0xba>
 801f86c:	684b      	ldr	r3, [r1, #4]
 801f86e:	2b00      	cmp	r3, #0
 801f870:	dc02      	bgt.n	801f878 <__sflush_r+0x1c>
 801f872:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 801f874:	2b00      	cmp	r3, #0
 801f876:	dd48      	ble.n	801f90a <__sflush_r+0xae>
 801f878:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801f87a:	2e00      	cmp	r6, #0
 801f87c:	d045      	beq.n	801f90a <__sflush_r+0xae>
 801f87e:	2300      	movs	r3, #0
 801f880:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 801f884:	682f      	ldr	r7, [r5, #0]
 801f886:	6a21      	ldr	r1, [r4, #32]
 801f888:	602b      	str	r3, [r5, #0]
 801f88a:	d030      	beq.n	801f8ee <__sflush_r+0x92>
 801f88c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 801f88e:	89a3      	ldrh	r3, [r4, #12]
 801f890:	0759      	lsls	r1, r3, #29
 801f892:	d505      	bpl.n	801f8a0 <__sflush_r+0x44>
 801f894:	6863      	ldr	r3, [r4, #4]
 801f896:	1ad2      	subs	r2, r2, r3
 801f898:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801f89a:	b10b      	cbz	r3, 801f8a0 <__sflush_r+0x44>
 801f89c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 801f89e:	1ad2      	subs	r2, r2, r3
 801f8a0:	2300      	movs	r3, #0
 801f8a2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801f8a4:	6a21      	ldr	r1, [r4, #32]
 801f8a6:	4628      	mov	r0, r5
 801f8a8:	47b0      	blx	r6
 801f8aa:	1c43      	adds	r3, r0, #1
 801f8ac:	89a3      	ldrh	r3, [r4, #12]
 801f8ae:	d106      	bne.n	801f8be <__sflush_r+0x62>
 801f8b0:	6829      	ldr	r1, [r5, #0]
 801f8b2:	291d      	cmp	r1, #29
 801f8b4:	d82b      	bhi.n	801f90e <__sflush_r+0xb2>
 801f8b6:	4a2a      	ldr	r2, [pc, #168]	@ (801f960 <__sflush_r+0x104>)
 801f8b8:	410a      	asrs	r2, r1
 801f8ba:	07d6      	lsls	r6, r2, #31
 801f8bc:	d427      	bmi.n	801f90e <__sflush_r+0xb2>
 801f8be:	2200      	movs	r2, #0
 801f8c0:	6062      	str	r2, [r4, #4]
 801f8c2:	04d9      	lsls	r1, r3, #19
 801f8c4:	6922      	ldr	r2, [r4, #16]
 801f8c6:	6022      	str	r2, [r4, #0]
 801f8c8:	d504      	bpl.n	801f8d4 <__sflush_r+0x78>
 801f8ca:	1c42      	adds	r2, r0, #1
 801f8cc:	d101      	bne.n	801f8d2 <__sflush_r+0x76>
 801f8ce:	682b      	ldr	r3, [r5, #0]
 801f8d0:	b903      	cbnz	r3, 801f8d4 <__sflush_r+0x78>
 801f8d2:	6560      	str	r0, [r4, #84]	@ 0x54
 801f8d4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801f8d6:	602f      	str	r7, [r5, #0]
 801f8d8:	b1b9      	cbz	r1, 801f90a <__sflush_r+0xae>
 801f8da:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801f8de:	4299      	cmp	r1, r3
 801f8e0:	d002      	beq.n	801f8e8 <__sflush_r+0x8c>
 801f8e2:	4628      	mov	r0, r5
 801f8e4:	f7ff fca0 	bl	801f228 <_free_r>
 801f8e8:	2300      	movs	r3, #0
 801f8ea:	6363      	str	r3, [r4, #52]	@ 0x34
 801f8ec:	e00d      	b.n	801f90a <__sflush_r+0xae>
 801f8ee:	2301      	movs	r3, #1
 801f8f0:	4628      	mov	r0, r5
 801f8f2:	47b0      	blx	r6
 801f8f4:	4602      	mov	r2, r0
 801f8f6:	1c50      	adds	r0, r2, #1
 801f8f8:	d1c9      	bne.n	801f88e <__sflush_r+0x32>
 801f8fa:	682b      	ldr	r3, [r5, #0]
 801f8fc:	2b00      	cmp	r3, #0
 801f8fe:	d0c6      	beq.n	801f88e <__sflush_r+0x32>
 801f900:	2b1d      	cmp	r3, #29
 801f902:	d001      	beq.n	801f908 <__sflush_r+0xac>
 801f904:	2b16      	cmp	r3, #22
 801f906:	d11e      	bne.n	801f946 <__sflush_r+0xea>
 801f908:	602f      	str	r7, [r5, #0]
 801f90a:	2000      	movs	r0, #0
 801f90c:	e022      	b.n	801f954 <__sflush_r+0xf8>
 801f90e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f912:	b21b      	sxth	r3, r3
 801f914:	e01b      	b.n	801f94e <__sflush_r+0xf2>
 801f916:	690f      	ldr	r7, [r1, #16]
 801f918:	2f00      	cmp	r7, #0
 801f91a:	d0f6      	beq.n	801f90a <__sflush_r+0xae>
 801f91c:	0793      	lsls	r3, r2, #30
 801f91e:	680e      	ldr	r6, [r1, #0]
 801f920:	bf08      	it	eq
 801f922:	694b      	ldreq	r3, [r1, #20]
 801f924:	600f      	str	r7, [r1, #0]
 801f926:	bf18      	it	ne
 801f928:	2300      	movne	r3, #0
 801f92a:	eba6 0807 	sub.w	r8, r6, r7
 801f92e:	608b      	str	r3, [r1, #8]
 801f930:	f1b8 0f00 	cmp.w	r8, #0
 801f934:	dde9      	ble.n	801f90a <__sflush_r+0xae>
 801f936:	6a21      	ldr	r1, [r4, #32]
 801f938:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801f93a:	4643      	mov	r3, r8
 801f93c:	463a      	mov	r2, r7
 801f93e:	4628      	mov	r0, r5
 801f940:	47b0      	blx	r6
 801f942:	2800      	cmp	r0, #0
 801f944:	dc08      	bgt.n	801f958 <__sflush_r+0xfc>
 801f946:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f94a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f94e:	81a3      	strh	r3, [r4, #12]
 801f950:	f04f 30ff 	mov.w	r0, #4294967295
 801f954:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f958:	4407      	add	r7, r0
 801f95a:	eba8 0800 	sub.w	r8, r8, r0
 801f95e:	e7e7      	b.n	801f930 <__sflush_r+0xd4>
 801f960:	dfbffffe 	.word	0xdfbffffe

0801f964 <_fflush_r>:
 801f964:	b538      	push	{r3, r4, r5, lr}
 801f966:	690b      	ldr	r3, [r1, #16]
 801f968:	4605      	mov	r5, r0
 801f96a:	460c      	mov	r4, r1
 801f96c:	b913      	cbnz	r3, 801f974 <_fflush_r+0x10>
 801f96e:	2500      	movs	r5, #0
 801f970:	4628      	mov	r0, r5
 801f972:	bd38      	pop	{r3, r4, r5, pc}
 801f974:	b118      	cbz	r0, 801f97e <_fflush_r+0x1a>
 801f976:	6a03      	ldr	r3, [r0, #32]
 801f978:	b90b      	cbnz	r3, 801f97e <_fflush_r+0x1a>
 801f97a:	f7ff f9d5 	bl	801ed28 <__sinit>
 801f97e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f982:	2b00      	cmp	r3, #0
 801f984:	d0f3      	beq.n	801f96e <_fflush_r+0xa>
 801f986:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 801f988:	07d0      	lsls	r0, r2, #31
 801f98a:	d404      	bmi.n	801f996 <_fflush_r+0x32>
 801f98c:	0599      	lsls	r1, r3, #22
 801f98e:	d402      	bmi.n	801f996 <_fflush_r+0x32>
 801f990:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f992:	f7ff fbdc 	bl	801f14e <__retarget_lock_acquire_recursive>
 801f996:	4628      	mov	r0, r5
 801f998:	4621      	mov	r1, r4
 801f99a:	f7ff ff5f 	bl	801f85c <__sflush_r>
 801f99e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f9a0:	07da      	lsls	r2, r3, #31
 801f9a2:	4605      	mov	r5, r0
 801f9a4:	d4e4      	bmi.n	801f970 <_fflush_r+0xc>
 801f9a6:	89a3      	ldrh	r3, [r4, #12]
 801f9a8:	059b      	lsls	r3, r3, #22
 801f9aa:	d4e1      	bmi.n	801f970 <_fflush_r+0xc>
 801f9ac:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f9ae:	f7ff fbcf 	bl	801f150 <__retarget_lock_release_recursive>
 801f9b2:	e7dd      	b.n	801f970 <_fflush_r+0xc>

0801f9b4 <__swhatbuf_r>:
 801f9b4:	b570      	push	{r4, r5, r6, lr}
 801f9b6:	460c      	mov	r4, r1
 801f9b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f9bc:	2900      	cmp	r1, #0
 801f9be:	b096      	sub	sp, #88	@ 0x58
 801f9c0:	4615      	mov	r5, r2
 801f9c2:	461e      	mov	r6, r3
 801f9c4:	da0d      	bge.n	801f9e2 <__swhatbuf_r+0x2e>
 801f9c6:	89a3      	ldrh	r3, [r4, #12]
 801f9c8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 801f9cc:	f04f 0100 	mov.w	r1, #0
 801f9d0:	bf14      	ite	ne
 801f9d2:	2340      	movne	r3, #64	@ 0x40
 801f9d4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 801f9d8:	2000      	movs	r0, #0
 801f9da:	6031      	str	r1, [r6, #0]
 801f9dc:	602b      	str	r3, [r5, #0]
 801f9de:	b016      	add	sp, #88	@ 0x58
 801f9e0:	bd70      	pop	{r4, r5, r6, pc}
 801f9e2:	466a      	mov	r2, sp
 801f9e4:	f000 f848 	bl	801fa78 <_fstat_r>
 801f9e8:	2800      	cmp	r0, #0
 801f9ea:	dbec      	blt.n	801f9c6 <__swhatbuf_r+0x12>
 801f9ec:	9901      	ldr	r1, [sp, #4]
 801f9ee:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 801f9f2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 801f9f6:	4259      	negs	r1, r3
 801f9f8:	4159      	adcs	r1, r3
 801f9fa:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801f9fe:	e7eb      	b.n	801f9d8 <__swhatbuf_r+0x24>

0801fa00 <__smakebuf_r>:
 801fa00:	898b      	ldrh	r3, [r1, #12]
 801fa02:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801fa04:	079d      	lsls	r5, r3, #30
 801fa06:	4606      	mov	r6, r0
 801fa08:	460c      	mov	r4, r1
 801fa0a:	d507      	bpl.n	801fa1c <__smakebuf_r+0x1c>
 801fa0c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 801fa10:	6023      	str	r3, [r4, #0]
 801fa12:	6123      	str	r3, [r4, #16]
 801fa14:	2301      	movs	r3, #1
 801fa16:	6163      	str	r3, [r4, #20]
 801fa18:	b003      	add	sp, #12
 801fa1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801fa1c:	ab01      	add	r3, sp, #4
 801fa1e:	466a      	mov	r2, sp
 801fa20:	f7ff ffc8 	bl	801f9b4 <__swhatbuf_r>
 801fa24:	9f00      	ldr	r7, [sp, #0]
 801fa26:	4605      	mov	r5, r0
 801fa28:	4639      	mov	r1, r7
 801fa2a:	4630      	mov	r0, r6
 801fa2c:	f7ff f856 	bl	801eadc <_malloc_r>
 801fa30:	b948      	cbnz	r0, 801fa46 <__smakebuf_r+0x46>
 801fa32:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801fa36:	059a      	lsls	r2, r3, #22
 801fa38:	d4ee      	bmi.n	801fa18 <__smakebuf_r+0x18>
 801fa3a:	f023 0303 	bic.w	r3, r3, #3
 801fa3e:	f043 0302 	orr.w	r3, r3, #2
 801fa42:	81a3      	strh	r3, [r4, #12]
 801fa44:	e7e2      	b.n	801fa0c <__smakebuf_r+0xc>
 801fa46:	89a3      	ldrh	r3, [r4, #12]
 801fa48:	6020      	str	r0, [r4, #0]
 801fa4a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801fa4e:	81a3      	strh	r3, [r4, #12]
 801fa50:	9b01      	ldr	r3, [sp, #4]
 801fa52:	e9c4 0704 	strd	r0, r7, [r4, #16]
 801fa56:	b15b      	cbz	r3, 801fa70 <__smakebuf_r+0x70>
 801fa58:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801fa5c:	4630      	mov	r0, r6
 801fa5e:	f000 f81d 	bl	801fa9c <_isatty_r>
 801fa62:	b128      	cbz	r0, 801fa70 <__smakebuf_r+0x70>
 801fa64:	89a3      	ldrh	r3, [r4, #12]
 801fa66:	f023 0303 	bic.w	r3, r3, #3
 801fa6a:	f043 0301 	orr.w	r3, r3, #1
 801fa6e:	81a3      	strh	r3, [r4, #12]
 801fa70:	89a3      	ldrh	r3, [r4, #12]
 801fa72:	431d      	orrs	r5, r3
 801fa74:	81a5      	strh	r5, [r4, #12]
 801fa76:	e7cf      	b.n	801fa18 <__smakebuf_r+0x18>

0801fa78 <_fstat_r>:
 801fa78:	b538      	push	{r3, r4, r5, lr}
 801fa7a:	4d07      	ldr	r5, [pc, #28]	@ (801fa98 <_fstat_r+0x20>)
 801fa7c:	2300      	movs	r3, #0
 801fa7e:	4604      	mov	r4, r0
 801fa80:	4608      	mov	r0, r1
 801fa82:	4611      	mov	r1, r2
 801fa84:	602b      	str	r3, [r5, #0]
 801fa86:	f7e1 fc86 	bl	8001396 <_fstat>
 801fa8a:	1c43      	adds	r3, r0, #1
 801fa8c:	d102      	bne.n	801fa94 <_fstat_r+0x1c>
 801fa8e:	682b      	ldr	r3, [r5, #0]
 801fa90:	b103      	cbz	r3, 801fa94 <_fstat_r+0x1c>
 801fa92:	6023      	str	r3, [r4, #0]
 801fa94:	bd38      	pop	{r3, r4, r5, pc}
 801fa96:	bf00      	nop
 801fa98:	20015b3c 	.word	0x20015b3c

0801fa9c <_isatty_r>:
 801fa9c:	b538      	push	{r3, r4, r5, lr}
 801fa9e:	4d06      	ldr	r5, [pc, #24]	@ (801fab8 <_isatty_r+0x1c>)
 801faa0:	2300      	movs	r3, #0
 801faa2:	4604      	mov	r4, r0
 801faa4:	4608      	mov	r0, r1
 801faa6:	602b      	str	r3, [r5, #0]
 801faa8:	f7e1 fc7a 	bl	80013a0 <_isatty>
 801faac:	1c43      	adds	r3, r0, #1
 801faae:	d102      	bne.n	801fab6 <_isatty_r+0x1a>
 801fab0:	682b      	ldr	r3, [r5, #0]
 801fab2:	b103      	cbz	r3, 801fab6 <_isatty_r+0x1a>
 801fab4:	6023      	str	r3, [r4, #0]
 801fab6:	bd38      	pop	{r3, r4, r5, pc}
 801fab8:	20015b3c 	.word	0x20015b3c

0801fabc <_init>:
 801fabc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801fabe:	bf00      	nop
 801fac0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801fac2:	bc08      	pop	{r3}
 801fac4:	469e      	mov	lr, r3
 801fac6:	4770      	bx	lr

0801fac8 <_fini>:
 801fac8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801faca:	bf00      	nop
 801facc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801face:	bc08      	pop	{r3}
 801fad0:	469e      	mov	lr, r3
 801fad2:	4770      	bx	lr
