
STM32F746G_DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00021aac  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000024a0  08021c7c  08021c7c  00022c7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000008  0802411c  0802411c  0002511c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08024124  08024124  0006f698  2**0
                  CONTENTS
  5 .ARM          00000008  08024124  08024124  00025124  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0802412c  0802412c  0006f698  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0802412c  0802412c  0002512c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08024144  08024144  00025144  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000124  20000000  0802414c  00026000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          00017514  20000124  08024270  00026124  2**2
                  ALLOC
 11 ._user_heap_stack 00001400  20017638  08024270  00026638  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0006f698  2**0
                  CONTENTS, READONLY
 13 BufferSection 000bf400  c0000000  c0000000  00070000  2**2
                  ALLOC
 14 ExtFlashSection 00048430  90000000  90000000  00027000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 FontFlashSection 00000254  90048430  90048430  0006f430  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 00000014  90048684  90048684  0006f684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .debug_info   000b5b98  00000000  00000000  0006f6c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00012832  00000000  00000000  00125260  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002ed0  00000000  00000000  00137a98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 0000353b  00000000  00000000  0013a968  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  00033cf6  00000000  00000000  0013dea3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   000502fd  00000000  00000000  00171b99  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0012b148  00000000  00000000  001c1e96  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000c2  00000000  00000000  002ecfde  2**0
                  CONTENTS, READONLY
 25 .debug_frame  000085d8  00000000  00000000  002ed0a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 0001aa9e  00000000  00000000  002f5678  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000007d  00000000  00000000  00310116  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000124 	.word	0x20000124
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08021c64 	.word	0x08021c64

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000128 	.word	0x20000128
 800020c:	08021c64 	.word	0x08021c64

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_uldivmod>:
 80002b0:	b953      	cbnz	r3, 80002c8 <__aeabi_uldivmod+0x18>
 80002b2:	b94a      	cbnz	r2, 80002c8 <__aeabi_uldivmod+0x18>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bf08      	it	eq
 80002b8:	2800      	cmpeq	r0, #0
 80002ba:	bf1c      	itt	ne
 80002bc:	f04f 31ff 	movne.w	r1, #4294967295
 80002c0:	f04f 30ff 	movne.w	r0, #4294967295
 80002c4:	f000 b96a 	b.w	800059c <__aeabi_idiv0>
 80002c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d0:	f000 f806 	bl	80002e0 <__udivmoddi4>
 80002d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002dc:	b004      	add	sp, #16
 80002de:	4770      	bx	lr

080002e0 <__udivmoddi4>:
 80002e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002e4:	9d08      	ldr	r5, [sp, #32]
 80002e6:	460c      	mov	r4, r1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	d14e      	bne.n	800038a <__udivmoddi4+0xaa>
 80002ec:	4694      	mov	ip, r2
 80002ee:	458c      	cmp	ip, r1
 80002f0:	4686      	mov	lr, r0
 80002f2:	fab2 f282 	clz	r2, r2
 80002f6:	d962      	bls.n	80003be <__udivmoddi4+0xde>
 80002f8:	b14a      	cbz	r2, 800030e <__udivmoddi4+0x2e>
 80002fa:	f1c2 0320 	rsb	r3, r2, #32
 80002fe:	4091      	lsls	r1, r2
 8000300:	fa20 f303 	lsr.w	r3, r0, r3
 8000304:	fa0c fc02 	lsl.w	ip, ip, r2
 8000308:	4319      	orrs	r1, r3
 800030a:	fa00 fe02 	lsl.w	lr, r0, r2
 800030e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000312:	fa1f f68c 	uxth.w	r6, ip
 8000316:	fbb1 f4f7 	udiv	r4, r1, r7
 800031a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800031e:	fb07 1114 	mls	r1, r7, r4, r1
 8000322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000326:	fb04 f106 	mul.w	r1, r4, r6
 800032a:	4299      	cmp	r1, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x64>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f104 30ff 	add.w	r0, r4, #4294967295
 8000336:	f080 8112 	bcs.w	800055e <__udivmoddi4+0x27e>
 800033a:	4299      	cmp	r1, r3
 800033c:	f240 810f 	bls.w	800055e <__udivmoddi4+0x27e>
 8000340:	3c02      	subs	r4, #2
 8000342:	4463      	add	r3, ip
 8000344:	1a59      	subs	r1, r3, r1
 8000346:	fa1f f38e 	uxth.w	r3, lr
 800034a:	fbb1 f0f7 	udiv	r0, r1, r7
 800034e:	fb07 1110 	mls	r1, r7, r0, r1
 8000352:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000356:	fb00 f606 	mul.w	r6, r0, r6
 800035a:	429e      	cmp	r6, r3
 800035c:	d90a      	bls.n	8000374 <__udivmoddi4+0x94>
 800035e:	eb1c 0303 	adds.w	r3, ip, r3
 8000362:	f100 31ff 	add.w	r1, r0, #4294967295
 8000366:	f080 80fc 	bcs.w	8000562 <__udivmoddi4+0x282>
 800036a:	429e      	cmp	r6, r3
 800036c:	f240 80f9 	bls.w	8000562 <__udivmoddi4+0x282>
 8000370:	4463      	add	r3, ip
 8000372:	3802      	subs	r0, #2
 8000374:	1b9b      	subs	r3, r3, r6
 8000376:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800037a:	2100      	movs	r1, #0
 800037c:	b11d      	cbz	r5, 8000386 <__udivmoddi4+0xa6>
 800037e:	40d3      	lsrs	r3, r2
 8000380:	2200      	movs	r2, #0
 8000382:	e9c5 3200 	strd	r3, r2, [r5]
 8000386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800038a:	428b      	cmp	r3, r1
 800038c:	d905      	bls.n	800039a <__udivmoddi4+0xba>
 800038e:	b10d      	cbz	r5, 8000394 <__udivmoddi4+0xb4>
 8000390:	e9c5 0100 	strd	r0, r1, [r5]
 8000394:	2100      	movs	r1, #0
 8000396:	4608      	mov	r0, r1
 8000398:	e7f5      	b.n	8000386 <__udivmoddi4+0xa6>
 800039a:	fab3 f183 	clz	r1, r3
 800039e:	2900      	cmp	r1, #0
 80003a0:	d146      	bne.n	8000430 <__udivmoddi4+0x150>
 80003a2:	42a3      	cmp	r3, r4
 80003a4:	d302      	bcc.n	80003ac <__udivmoddi4+0xcc>
 80003a6:	4290      	cmp	r0, r2
 80003a8:	f0c0 80f0 	bcc.w	800058c <__udivmoddi4+0x2ac>
 80003ac:	1a86      	subs	r6, r0, r2
 80003ae:	eb64 0303 	sbc.w	r3, r4, r3
 80003b2:	2001      	movs	r0, #1
 80003b4:	2d00      	cmp	r5, #0
 80003b6:	d0e6      	beq.n	8000386 <__udivmoddi4+0xa6>
 80003b8:	e9c5 6300 	strd	r6, r3, [r5]
 80003bc:	e7e3      	b.n	8000386 <__udivmoddi4+0xa6>
 80003be:	2a00      	cmp	r2, #0
 80003c0:	f040 8090 	bne.w	80004e4 <__udivmoddi4+0x204>
 80003c4:	eba1 040c 	sub.w	r4, r1, ip
 80003c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003cc:	fa1f f78c 	uxth.w	r7, ip
 80003d0:	2101      	movs	r1, #1
 80003d2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003d6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003da:	fb08 4416 	mls	r4, r8, r6, r4
 80003de:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003e2:	fb07 f006 	mul.w	r0, r7, r6
 80003e6:	4298      	cmp	r0, r3
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x11c>
 80003ea:	eb1c 0303 	adds.w	r3, ip, r3
 80003ee:	f106 34ff 	add.w	r4, r6, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x11a>
 80003f4:	4298      	cmp	r0, r3
 80003f6:	f200 80cd 	bhi.w	8000594 <__udivmoddi4+0x2b4>
 80003fa:	4626      	mov	r6, r4
 80003fc:	1a1c      	subs	r4, r3, r0
 80003fe:	fa1f f38e 	uxth.w	r3, lr
 8000402:	fbb4 f0f8 	udiv	r0, r4, r8
 8000406:	fb08 4410 	mls	r4, r8, r0, r4
 800040a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800040e:	fb00 f707 	mul.w	r7, r0, r7
 8000412:	429f      	cmp	r7, r3
 8000414:	d908      	bls.n	8000428 <__udivmoddi4+0x148>
 8000416:	eb1c 0303 	adds.w	r3, ip, r3
 800041a:	f100 34ff 	add.w	r4, r0, #4294967295
 800041e:	d202      	bcs.n	8000426 <__udivmoddi4+0x146>
 8000420:	429f      	cmp	r7, r3
 8000422:	f200 80b0 	bhi.w	8000586 <__udivmoddi4+0x2a6>
 8000426:	4620      	mov	r0, r4
 8000428:	1bdb      	subs	r3, r3, r7
 800042a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800042e:	e7a5      	b.n	800037c <__udivmoddi4+0x9c>
 8000430:	f1c1 0620 	rsb	r6, r1, #32
 8000434:	408b      	lsls	r3, r1
 8000436:	fa22 f706 	lsr.w	r7, r2, r6
 800043a:	431f      	orrs	r7, r3
 800043c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000440:	fa04 f301 	lsl.w	r3, r4, r1
 8000444:	ea43 030c 	orr.w	r3, r3, ip
 8000448:	40f4      	lsrs	r4, r6
 800044a:	fa00 f801 	lsl.w	r8, r0, r1
 800044e:	0c38      	lsrs	r0, r7, #16
 8000450:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000454:	fbb4 fef0 	udiv	lr, r4, r0
 8000458:	fa1f fc87 	uxth.w	ip, r7
 800045c:	fb00 441e 	mls	r4, r0, lr, r4
 8000460:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000464:	fb0e f90c 	mul.w	r9, lr, ip
 8000468:	45a1      	cmp	r9, r4
 800046a:	fa02 f201 	lsl.w	r2, r2, r1
 800046e:	d90a      	bls.n	8000486 <__udivmoddi4+0x1a6>
 8000470:	193c      	adds	r4, r7, r4
 8000472:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000476:	f080 8084 	bcs.w	8000582 <__udivmoddi4+0x2a2>
 800047a:	45a1      	cmp	r9, r4
 800047c:	f240 8081 	bls.w	8000582 <__udivmoddi4+0x2a2>
 8000480:	f1ae 0e02 	sub.w	lr, lr, #2
 8000484:	443c      	add	r4, r7
 8000486:	eba4 0409 	sub.w	r4, r4, r9
 800048a:	fa1f f983 	uxth.w	r9, r3
 800048e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000492:	fb00 4413 	mls	r4, r0, r3, r4
 8000496:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800049a:	fb03 fc0c 	mul.w	ip, r3, ip
 800049e:	45a4      	cmp	ip, r4
 80004a0:	d907      	bls.n	80004b2 <__udivmoddi4+0x1d2>
 80004a2:	193c      	adds	r4, r7, r4
 80004a4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004a8:	d267      	bcs.n	800057a <__udivmoddi4+0x29a>
 80004aa:	45a4      	cmp	ip, r4
 80004ac:	d965      	bls.n	800057a <__udivmoddi4+0x29a>
 80004ae:	3b02      	subs	r3, #2
 80004b0:	443c      	add	r4, r7
 80004b2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004b6:	fba0 9302 	umull	r9, r3, r0, r2
 80004ba:	eba4 040c 	sub.w	r4, r4, ip
 80004be:	429c      	cmp	r4, r3
 80004c0:	46ce      	mov	lr, r9
 80004c2:	469c      	mov	ip, r3
 80004c4:	d351      	bcc.n	800056a <__udivmoddi4+0x28a>
 80004c6:	d04e      	beq.n	8000566 <__udivmoddi4+0x286>
 80004c8:	b155      	cbz	r5, 80004e0 <__udivmoddi4+0x200>
 80004ca:	ebb8 030e 	subs.w	r3, r8, lr
 80004ce:	eb64 040c 	sbc.w	r4, r4, ip
 80004d2:	fa04 f606 	lsl.w	r6, r4, r6
 80004d6:	40cb      	lsrs	r3, r1
 80004d8:	431e      	orrs	r6, r3
 80004da:	40cc      	lsrs	r4, r1
 80004dc:	e9c5 6400 	strd	r6, r4, [r5]
 80004e0:	2100      	movs	r1, #0
 80004e2:	e750      	b.n	8000386 <__udivmoddi4+0xa6>
 80004e4:	f1c2 0320 	rsb	r3, r2, #32
 80004e8:	fa20 f103 	lsr.w	r1, r0, r3
 80004ec:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f0:	fa24 f303 	lsr.w	r3, r4, r3
 80004f4:	4094      	lsls	r4, r2
 80004f6:	430c      	orrs	r4, r1
 80004f8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004fc:	fa00 fe02 	lsl.w	lr, r0, r2
 8000500:	fa1f f78c 	uxth.w	r7, ip
 8000504:	fbb3 f0f8 	udiv	r0, r3, r8
 8000508:	fb08 3110 	mls	r1, r8, r0, r3
 800050c:	0c23      	lsrs	r3, r4, #16
 800050e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000512:	fb00 f107 	mul.w	r1, r0, r7
 8000516:	4299      	cmp	r1, r3
 8000518:	d908      	bls.n	800052c <__udivmoddi4+0x24c>
 800051a:	eb1c 0303 	adds.w	r3, ip, r3
 800051e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000522:	d22c      	bcs.n	800057e <__udivmoddi4+0x29e>
 8000524:	4299      	cmp	r1, r3
 8000526:	d92a      	bls.n	800057e <__udivmoddi4+0x29e>
 8000528:	3802      	subs	r0, #2
 800052a:	4463      	add	r3, ip
 800052c:	1a5b      	subs	r3, r3, r1
 800052e:	b2a4      	uxth	r4, r4
 8000530:	fbb3 f1f8 	udiv	r1, r3, r8
 8000534:	fb08 3311 	mls	r3, r8, r1, r3
 8000538:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800053c:	fb01 f307 	mul.w	r3, r1, r7
 8000540:	42a3      	cmp	r3, r4
 8000542:	d908      	bls.n	8000556 <__udivmoddi4+0x276>
 8000544:	eb1c 0404 	adds.w	r4, ip, r4
 8000548:	f101 36ff 	add.w	r6, r1, #4294967295
 800054c:	d213      	bcs.n	8000576 <__udivmoddi4+0x296>
 800054e:	42a3      	cmp	r3, r4
 8000550:	d911      	bls.n	8000576 <__udivmoddi4+0x296>
 8000552:	3902      	subs	r1, #2
 8000554:	4464      	add	r4, ip
 8000556:	1ae4      	subs	r4, r4, r3
 8000558:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800055c:	e739      	b.n	80003d2 <__udivmoddi4+0xf2>
 800055e:	4604      	mov	r4, r0
 8000560:	e6f0      	b.n	8000344 <__udivmoddi4+0x64>
 8000562:	4608      	mov	r0, r1
 8000564:	e706      	b.n	8000374 <__udivmoddi4+0x94>
 8000566:	45c8      	cmp	r8, r9
 8000568:	d2ae      	bcs.n	80004c8 <__udivmoddi4+0x1e8>
 800056a:	ebb9 0e02 	subs.w	lr, r9, r2
 800056e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000572:	3801      	subs	r0, #1
 8000574:	e7a8      	b.n	80004c8 <__udivmoddi4+0x1e8>
 8000576:	4631      	mov	r1, r6
 8000578:	e7ed      	b.n	8000556 <__udivmoddi4+0x276>
 800057a:	4603      	mov	r3, r0
 800057c:	e799      	b.n	80004b2 <__udivmoddi4+0x1d2>
 800057e:	4630      	mov	r0, r6
 8000580:	e7d4      	b.n	800052c <__udivmoddi4+0x24c>
 8000582:	46d6      	mov	lr, sl
 8000584:	e77f      	b.n	8000486 <__udivmoddi4+0x1a6>
 8000586:	4463      	add	r3, ip
 8000588:	3802      	subs	r0, #2
 800058a:	e74d      	b.n	8000428 <__udivmoddi4+0x148>
 800058c:	4606      	mov	r6, r0
 800058e:	4623      	mov	r3, r4
 8000590:	4608      	mov	r0, r1
 8000592:	e70f      	b.n	80003b4 <__udivmoddi4+0xd4>
 8000594:	3e02      	subs	r6, #2
 8000596:	4463      	add	r3, ip
 8000598:	e730      	b.n	80003fc <__udivmoddi4+0x11c>
 800059a:	bf00      	nop

0800059c <__aeabi_idiv0>:
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop

080005a0 <vApplicationIdleHook>:
   specified, or call vTaskDelay()). If the application makes use of the
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
   vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80005a0:	4901      	ldr	r1, [pc, #4]	@ (80005a8 <vApplicationIdleHook+0x8>)
 80005a2:	2000      	movs	r0, #0
 80005a4:	f008 b974 	b.w	8008890 <vTaskSetApplicationTaskTag>
 80005a8:	080018c1 	.word	0x080018c1

080005ac <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80005ac:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
	  osDelay(100);
 80005ae:	2064      	movs	r0, #100	@ 0x64
 80005b0:	f006 fc98 	bl	8006ee4 <osDelay>
  for(;;)
 80005b4:	e7fb      	b.n	80005ae <StartDefaultTask+0x2>
	...

080005b8 <UART7_IRQHandler>:
    if (UART7->ISR & UART_FLAG_RXNE) {
 80005b8:	4b08      	ldr	r3, [pc, #32]	@ (80005dc <UART7_IRQHandler+0x24>)
 80005ba:	69da      	ldr	r2, [r3, #28]
 80005bc:	0692      	lsls	r2, r2, #26
 80005be:	d50a      	bpl.n	80005d6 <UART7_IRQHandler+0x1e>
        cm7.rb[cm7.rc++] = UART7->RDR;
 80005c0:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 80005c2:	4b07      	ldr	r3, [pc, #28]	@ (80005e0 <UART7_IRQHandler+0x28>)
 80005c4:	f8b3 2080 	ldrh.w	r2, [r3, #128]	@ 0x80
 80005c8:	1c50      	adds	r0, r2, #1
 80005ca:	5499      	strb	r1, [r3, r2]
        cm7.ct1 = 2;
 80005cc:	2202      	movs	r2, #2
        cm7.rb[cm7.rc++] = UART7->RDR;
 80005ce:	f8a3 0080 	strh.w	r0, [r3, #128]	@ 0x80
        cm7.ct1 = 2;
 80005d2:	f8a3 2082 	strh.w	r2, [r3, #130]	@ 0x82
    HAL_UART_IRQHandler(&huart7);
 80005d6:	4803      	ldr	r0, [pc, #12]	@ (80005e4 <UART7_IRQHandler+0x2c>)
 80005d8:	f005 bfb4 	b.w	8006544 <HAL_UART_IRQHandler>
 80005dc:	40007800 	.word	0x40007800
 80005e0:	20000142 	.word	0x20000142
 80005e4:	20000218 	.word	0x20000218

080005e8 <put_AT>:
        UART7->TDR = bf[i];
 80005e8:	4b05      	ldr	r3, [pc, #20]	@ (8000600 <put_AT+0x18>)
 80005ea:	2241      	movs	r2, #65	@ 0x41
 80005ec:	629a      	str	r2, [r3, #40]	@ 0x28
        while ((UART7->ISR & 0x40) == 0);
 80005ee:	69da      	ldr	r2, [r3, #28]
 80005f0:	0651      	lsls	r1, r2, #25
 80005f2:	d5fc      	bpl.n	80005ee <put_AT+0x6>
        UART7->TDR = bf[i];
 80005f4:	2254      	movs	r2, #84	@ 0x54
 80005f6:	629a      	str	r2, [r3, #40]	@ 0x28
        while ((UART7->ISR & 0x40) == 0);
 80005f8:	69da      	ldr	r2, [r3, #28]
 80005fa:	0652      	lsls	r2, r2, #25
 80005fc:	d5fc      	bpl.n	80005f8 <put_AT+0x10>
}
 80005fe:	4770      	bx	lr
 8000600:	40007800 	.word	0x40007800

08000604 <send_Hello>:
    uint8_t bf[] = "Hello";
 8000604:	4b08      	ldr	r3, [pc, #32]	@ (8000628 <send_Hello+0x24>)
{
 8000606:	b507      	push	{r0, r1, r2, lr}
    uint8_t bf[] = "Hello";
 8000608:	6818      	ldr	r0, [r3, #0]
    HAL_UART_Transmit(&huart7, bf, sizeof(bf), HAL_MAX_DELAY);
 800060a:	2206      	movs	r2, #6
    uint8_t bf[] = "Hello";
 800060c:	889b      	ldrh	r3, [r3, #4]
    HAL_UART_Transmit(&huart7, bf, sizeof(bf), HAL_MAX_DELAY);
 800060e:	4669      	mov	r1, sp
    uint8_t bf[] = "Hello";
 8000610:	9000      	str	r0, [sp, #0]
 8000612:	f8ad 3004 	strh.w	r3, [sp, #4]
    HAL_UART_Transmit(&huart7, bf, sizeof(bf), HAL_MAX_DELAY);
 8000616:	f04f 33ff 	mov.w	r3, #4294967295
 800061a:	4804      	ldr	r0, [pc, #16]	@ (800062c <send_Hello+0x28>)
 800061c:	f006 faa9 	bl	8006b72 <HAL_UART_Transmit>
}
 8000620:	b003      	add	sp, #12
 8000622:	f85d fb04 	ldr.w	pc, [sp], #4
 8000626:	bf00      	nop
 8000628:	08021cbc 	.word	0x08021cbc
 800062c:	20000218 	.word	0x20000218

08000630 <put_ATBAUD4>:
    uint8_t tb[] = "AT+BAUD4";
 8000630:	4a0b      	ldr	r2, [pc, #44]	@ (8000660 <put_ATBAUD4+0x30>)
{
 8000632:	b084      	sub	sp, #16
    uint8_t tb[] = "AT+BAUD4";
 8000634:	6851      	ldr	r1, [r2, #4]
 8000636:	ab01      	add	r3, sp, #4
 8000638:	6810      	ldr	r0, [r2, #0]
 800063a:	7a12      	ldrb	r2, [r2, #8]
 800063c:	c303      	stmia	r3!, {r0, r1}
        UART7->TDR = tb[i];
 800063e:	4909      	ldr	r1, [pc, #36]	@ (8000664 <put_ATBAUD4+0x34>)
    uint8_t tb[] = "AT+BAUD4";
 8000640:	701a      	strb	r2, [r3, #0]
    for (uint8_t i = 0; i < 8; ++i) {
 8000642:	aa01      	add	r2, sp, #4
 8000644:	2300      	movs	r3, #0
        UART7->TDR = tb[i];
 8000646:	f812 0b01 	ldrb.w	r0, [r2], #1
 800064a:	6288      	str	r0, [r1, #40]	@ 0x28
        while ((UART7->ISR & 0x40) == 0);
 800064c:	69c8      	ldr	r0, [r1, #28]
 800064e:	0640      	lsls	r0, r0, #25
 8000650:	d5fc      	bpl.n	800064c <put_ATBAUD4+0x1c>
    for (uint8_t i = 0; i < 8; ++i) {
 8000652:	3301      	adds	r3, #1
 8000654:	b2db      	uxtb	r3, r3
 8000656:	2b08      	cmp	r3, #8
 8000658:	d1f5      	bne.n	8000646 <put_ATBAUD4+0x16>
}
 800065a:	b004      	add	sp, #16
 800065c:	4770      	bx	lr
 800065e:	bf00      	nop
 8000660:	08021cc2 	.word	0x08021cc2
 8000664:	40007800 	.word	0x40007800

08000668 <put_ATPIN0000>:
    uint8_t tb[] = "AT+PIN0000";
 8000668:	4a0c      	ldr	r2, [pc, #48]	@ (800069c <put_ATPIN0000+0x34>)
{
 800066a:	b084      	sub	sp, #16
    uint8_t tb[] = "AT+PIN0000";
 800066c:	6851      	ldr	r1, [r2, #4]
 800066e:	ab01      	add	r3, sp, #4
 8000670:	6810      	ldr	r0, [r2, #0]
 8000672:	c303      	stmia	r3!, {r0, r1}
 8000674:	8911      	ldrh	r1, [r2, #8]
 8000676:	7a92      	ldrb	r2, [r2, #10]
 8000678:	8019      	strh	r1, [r3, #0]
 800067a:	709a      	strb	r2, [r3, #2]
    for (uint8_t i = 0; i < 10; ++i) {
 800067c:	aa01      	add	r2, sp, #4
 800067e:	2300      	movs	r3, #0
        UART7->TDR = tb[i];
 8000680:	4907      	ldr	r1, [pc, #28]	@ (80006a0 <put_ATPIN0000+0x38>)
 8000682:	f812 0b01 	ldrb.w	r0, [r2], #1
 8000686:	6288      	str	r0, [r1, #40]	@ 0x28
        while ((UART7->ISR & 0x40) == 0);
 8000688:	69c8      	ldr	r0, [r1, #28]
 800068a:	0640      	lsls	r0, r0, #25
 800068c:	d5fc      	bpl.n	8000688 <put_ATPIN0000+0x20>
    for (uint8_t i = 0; i < 10; ++i) {
 800068e:	3301      	adds	r3, #1
 8000690:	b2db      	uxtb	r3, r3
 8000692:	2b0a      	cmp	r3, #10
 8000694:	d1f5      	bne.n	8000682 <put_ATPIN0000+0x1a>
}
 8000696:	b004      	add	sp, #16
 8000698:	4770      	bx	lr
 800069a:	bf00      	nop
 800069c:	08021ccb 	.word	0x08021ccb
 80006a0:	40007800 	.word	0x40007800

080006a4 <put_ATNAMEHC06>:
{
 80006a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    uint8_t tb[] = "AT+NAMEHC06";
 80006a6:	4a08      	ldr	r2, [pc, #32]	@ (80006c8 <put_ATNAMEHC06+0x24>)
 80006a8:	ab01      	add	r3, sp, #4
 80006aa:	6810      	ldr	r0, [r2, #0]
 80006ac:	6851      	ldr	r1, [r2, #4]
 80006ae:	c303      	stmia	r3!, {r0, r1}
 80006b0:	6890      	ldr	r0, [r2, #8]
    HAL_UART_Transmit(&huart7, tb, 11, 100);
 80006b2:	a901      	add	r1, sp, #4
 80006b4:	220b      	movs	r2, #11
    uint8_t tb[] = "AT+NAMEHC06";
 80006b6:	6018      	str	r0, [r3, #0]
    HAL_UART_Transmit(&huart7, tb, 11, 100);
 80006b8:	2364      	movs	r3, #100	@ 0x64
 80006ba:	4804      	ldr	r0, [pc, #16]	@ (80006cc <put_ATNAMEHC06+0x28>)
 80006bc:	f006 fa59 	bl	8006b72 <HAL_UART_Transmit>
}
 80006c0:	b005      	add	sp, #20
 80006c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80006c6:	bf00      	nop
 80006c8:	08021cd6 	.word	0x08021cd6
 80006cc:	20000218 	.word	0x20000218

080006d0 <chk_key>:
{
 80006d0:	b508      	push	{r3, lr}
    if ((GPIOI->IDR & 0x00000800) == 0) { // PI11 low?
 80006d2:	4b0b      	ldr	r3, [pc, #44]	@ (8000700 <chk_key+0x30>)
 80006d4:	4a0b      	ldr	r2, [pc, #44]	@ (8000704 <chk_key+0x34>)
 80006d6:	691b      	ldr	r3, [r3, #16]
 80006d8:	f413 6300 	ands.w	r3, r3, #2048	@ 0x800
 80006dc:	d101      	bne.n	80006e2 <chk_key+0x12>
        key.repeat = false;
 80006de:	7013      	strb	r3, [r2, #0]
}
 80006e0:	bd08      	pop	{r3, pc}
    if (key.repeat == true) return;
 80006e2:	7813      	ldrb	r3, [r2, #0]
 80006e4:	2b00      	cmp	r3, #0
 80006e6:	d1fb      	bne.n	80006e0 <chk_key+0x10>
    key.repeat = true;
 80006e8:	2301      	movs	r3, #1
 80006ea:	7013      	strb	r3, [r2, #0]
    put_AT();
 80006ec:	f7ff ff7c 	bl	80005e8 <put_AT>
    put_ATBAUD4();
 80006f0:	f7ff ff9e 	bl	8000630 <put_ATBAUD4>
    put_ATPIN0000();
 80006f4:	f7ff ffb8 	bl	8000668 <put_ATPIN0000>
}
 80006f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    put_ATNAMEHC06();
 80006fc:	f7ff bfd2 	b.w	80006a4 <put_ATNAMEHC06>
 8000700:	40022000 	.word	0x40022000
 8000704:	20000140 	.word	0x20000140

08000708 <chk_tim>:
    if (cm7.ct1 > 0) {
 8000708:	4a07      	ldr	r2, [pc, #28]	@ (8000728 <chk_tim+0x20>)
 800070a:	f8b2 3082 	ldrh.w	r3, [r2, #130]	@ 0x82
 800070e:	b14b      	cbz	r3, 8000724 <chk_tim+0x1c>
        if (!(--cm7.ct1)) {
 8000710:	3b01      	subs	r3, #1
 8000712:	b29b      	uxth	r3, r3
 8000714:	f8a2 3082 	strh.w	r3, [r2, #130]	@ 0x82
 8000718:	b923      	cbnz	r3, 8000724 <chk_tim+0x1c>
            cm7.rc = 0;
 800071a:	f8a2 3080 	strh.w	r3, [r2, #128]	@ 0x80
            cm7.rfg = true;
 800071e:	2301      	movs	r3, #1
 8000720:	f882 3084 	strb.w	r3, [r2, #132]	@ 0x84
    chk_key();
 8000724:	f7ff bfd4 	b.w	80006d0 <chk_key>
 8000728:	20000142 	.word	0x20000142

0800072c <BLE_Task>:
  {
	  send_Hello();


	  chk_tim();
	  if (cm7.rfg == true)
 800072c:	4c0a      	ldr	r4, [pc, #40]	@ (8000758 <BLE_Task+0x2c>)
	  {
	  	cm7.rfg = false;
 800072e:	2500      	movs	r5, #0
{
 8000730:	b508      	push	{r3, lr}
	put_ATBAUD4();
 8000732:	f7ff ff7d 	bl	8000630 <put_ATBAUD4>
	put_ATNAMEHC06();
 8000736:	f7ff ffb5 	bl	80006a4 <put_ATNAMEHC06>
	put_ATPIN0000();
 800073a:	f7ff ff95 	bl	8000668 <put_ATPIN0000>
	  send_Hello();
 800073e:	f7ff ff61 	bl	8000604 <send_Hello>
	  chk_tim();
 8000742:	f7ff ffe1 	bl	8000708 <chk_tim>
	  if (cm7.rfg == true)
 8000746:	f894 3084 	ldrb.w	r3, [r4, #132]	@ 0x84
 800074a:	b10b      	cbz	r3, 8000750 <BLE_Task+0x24>
	  	cm7.rfg = false;
 800074c:	f884 5084 	strb.w	r5, [r4, #132]	@ 0x84
	  }
    osDelay(25);
 8000750:	2019      	movs	r0, #25
 8000752:	f006 fbc7 	bl	8006ee4 <osDelay>
	  send_Hello();
 8000756:	e7f2      	b.n	800073e <BLE_Task+0x12>
 8000758:	20000142 	.word	0x20000142

0800075c <SystemClock_Config>:
{
 800075c:	b510      	push	{r4, lr}
 800075e:	b094      	sub	sp, #80	@ 0x50
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000760:	2210      	movs	r2, #16
 8000762:	2100      	movs	r1, #0
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000764:	2402      	movs	r4, #2
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000766:	a80a      	add	r0, sp, #40	@ 0x28
 8000768:	f020 fcf8 	bl	802115c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800076c:	2214      	movs	r2, #20
 800076e:	2100      	movs	r1, #0
 8000770:	a803      	add	r0, sp, #12
 8000772:	f020 fcf3 	bl	802115c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8000776:	4b1d      	ldr	r3, [pc, #116]	@ (80007ec <SystemClock_Config+0x90>)
  RCC_OscInitStruct.PLL.PLLN = 432;
 8000778:	2119      	movs	r1, #25
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800077a:	a808      	add	r0, sp, #32
  __HAL_RCC_PWR_CLK_ENABLE();
 800077c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800077e:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000782:	641a      	str	r2, [r3, #64]	@ 0x40
 8000784:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000786:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800078a:	9301      	str	r3, [sp, #4]
 800078c:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800078e:	4b18      	ldr	r3, [pc, #96]	@ (80007f0 <SystemClock_Config+0x94>)
 8000790:	681a      	ldr	r2, [r3, #0]
 8000792:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8000796:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000798:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80007a0:	9302      	str	r3, [sp, #8]
 80007a2:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80007a4:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80007a8:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80007ac:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80007b0:	e9cd 430e 	strd	r4, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 432;
 80007b4:	f44f 73d8 	mov.w	r3, #432	@ 0x1b0
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80007b8:	e9cd 4412 	strd	r4, r4, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLN = 432;
 80007bc:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80007c0:	f004 ff5a 	bl	8005678 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80007c4:	f004 fbf6 	bl	8004fb4 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80007c8:	230f      	movs	r3, #15
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80007ca:	2000      	movs	r0, #0
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80007cc:	2107      	movs	r1, #7
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80007ce:	e9cd 3403 	strd	r3, r4, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80007d2:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80007d6:	e9cd 0305 	strd	r0, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80007da:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80007de:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80007e0:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80007e2:	f005 f931 	bl	8005a48 <HAL_RCC_ClockConfig>
}
 80007e6:	b014      	add	sp, #80	@ 0x50
 80007e8:	bd10      	pop	{r4, pc}
 80007ea:	bf00      	nop
 80007ec:	40023800 	.word	0x40023800
 80007f0:	40007000 	.word	0x40007000

080007f4 <main>:
{
 80007f4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80007f8:	b09b      	sub	sp, #108	@ 0x6c

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80007fa:	2210      	movs	r2, #16
 80007fc:	2100      	movs	r1, #0
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80007fe:	2501      	movs	r5, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8000800:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 8000802:	f04f 4a10 	mov.w	sl, #2415919104	@ 0x90000000
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8000806:	f020 fca9 	bl	802115c <memset>
  MPU_InitStruct.SubRegionDisable = 0x0;
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 800080a:	2400      	movs	r4, #0
  HAL_MPU_Disable();
 800080c:	f003 fb26 	bl	8003e5c <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 8000810:	4bc7      	ldr	r3, [pc, #796]	@ (8000b30 <main+0x33c>)
  MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000812:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000814:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 8000818:	9410      	str	r4, [sp, #64]	@ 0x40
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 800081a:	e9cd a30e 	strd	sl, r3, [sp, #56]	@ 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800081e:	f003 fb3b 	bl	8003e98 <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 8000822:	2317      	movs	r3, #23
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000824:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 8000826:	f88d 5035 	strb.w	r5, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 800082a:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 800082e:	f88d 5042 	strb.w	r5, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000832:	f003 fb31 	bl	8003e98 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 8000836:	2004      	movs	r0, #4
 8000838:	f003 fb1e 	bl	8003e78 <HAL_MPU_Enable>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800083c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000840:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000844:	4abb      	ldr	r2, [pc, #748]	@ (8000b34 <main+0x340>)
 8000846:	f8c2 4250 	str.w	r4, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800084a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800084e:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000852:	6953      	ldr	r3, [r2, #20]
 8000854:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000858:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800085a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800085e:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8000862:	f8c2 4084 	str.w	r4, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8000866:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 800086a:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800086e:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000872:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8000876:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800087a:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800087c:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000880:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000882:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8000886:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000888:	f8c2 5260 	str.w	r5, [r2, #608]	@ 0x260
      } while (ways-- != 0U);
 800088c:	d2f9      	bcs.n	8000882 <main+0x8e>
    } while(sets-- != 0U);
 800088e:	3b20      	subs	r3, #32
 8000890:	f113 0f20 	cmn.w	r3, #32
 8000894:	d1f2      	bne.n	800087c <main+0x88>
 8000896:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 800089a:	6953      	ldr	r3, [r2, #20]
 800089c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80008a0:	6153      	str	r3, [r2, #20]
 80008a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80008a6:	f3bf 8f6f 	isb	sy
  HAL_Init();
 80008aa:	f003 fa3d 	bl	8003d28 <HAL_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008ae:	2400      	movs	r4, #0
  SystemClock_Config();
 80008b0:	f7ff ff54 	bl	800075c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80008b4:	2214      	movs	r2, #20
 80008b6:	2100      	movs	r1, #0
 80008b8:	a80d      	add	r0, sp, #52	@ 0x34
 80008ba:	f020 fc4f 	bl	802115c <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80008be:	4b9e      	ldr	r3, [pc, #632]	@ (8000b38 <main+0x344>)
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80008c0:	2110      	movs	r1, #16
 80008c2:	489e      	ldr	r0, [pc, #632]	@ (8000b3c <main+0x348>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80008c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008c6:	2701      	movs	r7, #1
 80008c8:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008cc:	f04f 0b03 	mov.w	fp, #3
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80008d0:	f042 0210 	orr.w	r2, r2, #16
  GPIO_InitStruct.Pin = LCD_DISP_Pin;
 80008d4:	f44f 5a80 	mov.w	sl, #4096	@ 0x1000
  hdma2d.Instance = DMA2D;
 80008d8:	4d99      	ldr	r5, [pc, #612]	@ (8000b40 <main+0x34c>)
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80008da:	f04f 0904 	mov.w	r9, #4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80008de:	631a      	str	r2, [r3, #48]	@ 0x30
 80008e0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80008e2:	4e98      	ldr	r6, [pc, #608]	@ (8000b44 <main+0x350>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80008e4:	f002 0210 	and.w	r2, r2, #16
 80008e8:	9202      	str	r2, [sp, #8]
 80008ea:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80008ec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80008ee:	f042 0202 	orr.w	r2, r2, #2
 80008f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80008f4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80008f6:	f002 0202 	and.w	r2, r2, #2
 80008fa:	9203      	str	r2, [sp, #12]
 80008fc:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80008fe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000900:	f042 0201 	orr.w	r2, r2, #1
 8000904:	631a      	str	r2, [r3, #48]	@ 0x30
 8000906:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000908:	f002 0201 	and.w	r2, r2, #1
 800090c:	9204      	str	r2, [sp, #16]
 800090e:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000910:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000912:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8000916:	631a      	str	r2, [r3, #48]	@ 0x30
 8000918:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800091a:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 800091e:	9205      	str	r2, [sp, #20]
 8000920:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000922:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000924:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000928:	631a      	str	r2, [r3, #48]	@ 0x30
 800092a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800092c:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 8000930:	9206      	str	r2, [sp, #24]
 8000932:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000934:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000936:	f042 0208 	orr.w	r2, r2, #8
 800093a:	631a      	str	r2, [r3, #48]	@ 0x30
 800093c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800093e:	f002 0208 	and.w	r2, r2, #8
 8000942:	9207      	str	r2, [sp, #28]
 8000944:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8000946:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000948:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800094c:	631a      	str	r2, [r3, #48]	@ 0x30
 800094e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000950:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
 8000954:	9208      	str	r2, [sp, #32]
 8000956:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000958:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800095a:	f042 0220 	orr.w	r2, r2, #32
 800095e:	631a      	str	r2, [r3, #48]	@ 0x30
 8000960:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000962:	f002 0220 	and.w	r2, r2, #32
 8000966:	9209      	str	r2, [sp, #36]	@ 0x24
 8000968:	9a09      	ldr	r2, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800096a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800096c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000970:	631a      	str	r2, [r3, #48]	@ 0x30
 8000972:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000974:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8000978:	920a      	str	r2, [sp, #40]	@ 0x28
 800097a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800097c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800097e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000982:	631a      	str	r2, [r3, #48]	@ 0x30
 8000984:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000986:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 800098a:	920b      	str	r2, [sp, #44]	@ 0x2c
 800098c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800098e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000990:	f042 0204 	orr.w	r2, r2, #4
 8000994:	631a      	str	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8000996:	2200      	movs	r2, #0
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000998:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800099a:	f003 0304 	and.w	r3, r3, #4
 800099e:	930c      	str	r3, [sp, #48]	@ 0x30
 80009a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80009a2:	f003 fdd7 	bl	8004554 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80009a6:	2201      	movs	r2, #1
 80009a8:	2108      	movs	r1, #8
 80009aa:	4867      	ldr	r0, [pc, #412]	@ (8000b48 <main+0x354>)
 80009ac:	f003 fdd2 	bl	8004554 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 80009b0:	2201      	movs	r2, #1
 80009b2:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80009b6:	4865      	ldr	r0, [pc, #404]	@ (8000b4c <main+0x358>)
 80009b8:	f003 fdcc 	bl	8004554 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80009bc:	2200      	movs	r2, #0
 80009be:	21c0      	movs	r1, #192	@ 0xc0
 80009c0:	4863      	ldr	r0, [pc, #396]	@ (8000b50 <main+0x35c>)
 80009c2:	f003 fdc7 	bl	8004554 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80009c6:	2200      	movs	r2, #0
 80009c8:	2140      	movs	r1, #64	@ 0x40
 80009ca:	4862      	ldr	r0, [pc, #392]	@ (8000b54 <main+0x360>)
 80009cc:	f003 fdc2 	bl	8004554 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80009d0:	a90d      	add	r1, sp, #52	@ 0x34
 80009d2:	485a      	ldr	r0, [pc, #360]	@ (8000b3c <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80009d4:	e9cd 870d 	strd	r8, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009d8:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80009dc:	f003 fc36 	bl	800424c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 80009e0:	2308      	movs	r3, #8
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80009e2:	a90d      	add	r1, sp, #52	@ 0x34
 80009e4:	4858      	ldr	r0, [pc, #352]	@ (8000b48 <main+0x354>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80009e6:	e9cd 370d 	strd	r3, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80009ea:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80009ee:	f003 fc2d 	bl	800424c <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 80009f2:	a90d      	add	r1, sp, #52	@ 0x34
 80009f4:	4855      	ldr	r0, [pc, #340]	@ (8000b4c <main+0x358>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80009f6:	e9cd a70d 	strd	sl, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80009fa:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 80009fe:	f003 fc25 	bl	800424c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
 8000a02:	22c0      	movs	r2, #192	@ 0xc0
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000a04:	a90d      	add	r1, sp, #52	@ 0x34
 8000a06:	4852      	ldr	r0, [pc, #328]	@ (8000b50 <main+0x35c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a08:	e9cd 270d 	strd	r2, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a0c:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000a10:	f003 fc1c 	bl	800424c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
 8000a14:	2240      	movs	r2, #64	@ 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8000a16:	a90d      	add	r1, sp, #52	@ 0x34
 8000a18:	484e      	ldr	r0, [pc, #312]	@ (8000b54 <main+0x360>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a1a:	e9cd 270d 	strd	r2, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a1e:	e9cd 4b0f 	strd	r4, fp, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8000a22:	f003 fc13 	bl	800424c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8000a26:	484c      	ldr	r0, [pc, #304]	@ (8000b58 <main+0x364>)
 8000a28:	494c      	ldr	r1, [pc, #304]	@ (8000b5c <main+0x368>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000a2a:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
 8000a2c:	6001      	str	r1, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8000a2e:	6207      	str	r7, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000a30:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000a34:	f003 fa5c 	bl	8003ef0 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8000a38:	4949      	ldr	r1, [pc, #292]	@ (8000b60 <main+0x36c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000a3a:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8000a3c:	e9c5 1400 	strd	r1, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8000a40:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8000a44:	e9c5 440a 	strd	r4, r4, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000a48:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000a4c:	f003 faff 	bl	800404e <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000a50:	4639      	mov	r1, r7
 8000a52:	4628      	mov	r0, r5
    Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8000a54:	4d43      	ldr	r5, [pc, #268]	@ (8000b64 <main+0x370>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000a56:	f003 fbb3 	bl	80041c0 <HAL_DMA2D_ConfigLayer>
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000a5a:	2340      	movs	r3, #64	@ 0x40
 8000a5c:	f44f 72c0 	mov.w	r2, #384	@ 0x180
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000a60:	4941      	ldr	r1, [pc, #260]	@ (8000b68 <main+0x374>)
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000a62:	4630      	mov	r0, r6
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000a64:	60b4      	str	r4, [r6, #8]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000a66:	61f4      	str	r4, [r6, #28]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 8000a68:	62b4      	str	r4, [r6, #40]	@ 0x28
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000a6a:	e9c6 3205 	strd	r3, r2, [r6, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000a6e:	f44f 6200 	mov.w	r2, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8000a72:	e9c6 2a08 	strd	r2, sl, [r6, #32]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000a76:	f04f 0a02 	mov.w	sl, #2
 8000a7a:	2207      	movs	r2, #7
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8000a7c:	e9c6 1400 	strd	r1, r4, [r6]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000a80:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.RCDDelay = 2;
 8000a82:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000a86:	e9c6 9803 	strd	r9, r8, [r6, #12]
  SdramTiming.RowCycleDelay = 7;
 8000a8a:	e9cd 920f 	strd	r9, r2, [sp, #60]	@ 0x3c
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000a8e:	e9cd a20d 	strd	sl, r2, [sp, #52]	@ 0x34
  SdramTiming.RPDelay = 2;
 8000a92:	e9cd ba11 	strd	fp, sl, [sp, #68]	@ 0x44
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000a96:	f005 fb3d 	bl	8006114 <HAL_SDRAM_Init>
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000a9a:	4629      	mov	r1, r5
 8000a9c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000aa0:	4630      	mov	r0, r6
  __IO uint32_t tmpmrd = 0;
 8000aa2:	9401      	str	r4, [sp, #4]
    Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK1;
 8000aa4:	e9c5 7800 	strd	r7, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 8000aa8:	e9c5 7402 	strd	r7, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000aac:	f005 fb52 	bl	8006154 <HAL_SDRAM_SendCommand>
    HAL_Delay(1);
 8000ab0:	4638      	mov	r0, r7
 8000ab2:	f003 f95d 	bl	8003d70 <HAL_Delay>
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000ab6:	4629      	mov	r1, r5
 8000ab8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000abc:	4630      	mov	r0, r6
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8000abe:	e9c5 a800 	strd	sl, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 8000ac2:	e9c5 7402 	strd	r7, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000ac6:	f005 fb45 	bl	8006154 <HAL_SDRAM_SendCommand>
    Command.AutoRefreshNumber      = 8;
 8000aca:	2308      	movs	r3, #8
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000acc:	4629      	mov	r1, r5
 8000ace:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000ad2:	4630      	mov	r0, r6
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8000ad4:	e9c5 b800 	strd	fp, r8, [r5]
    Command.ModeRegisterDefinition = 0;
 8000ad8:	e9c5 3402 	strd	r3, r4, [r5, #8]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000adc:	f005 fb3a 	bl	8006154 <HAL_SDRAM_SendCommand>
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 8000ae0:	f44f 730c 	mov.w	r3, #560	@ 0x230
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000ae4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000ae8:	4629      	mov	r1, r5
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 8000aea:	9301      	str	r3, [sp, #4]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000aec:	4630      	mov	r0, r6
    Command.ModeRegisterDefinition = tmpmrd;
 8000aee:	9b01      	ldr	r3, [sp, #4]
    Command.AutoRefreshNumber      = 1;
 8000af0:	60af      	str	r7, [r5, #8]
    Command.ModeRegisterDefinition = tmpmrd;
 8000af2:	60eb      	str	r3, [r5, #12]
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8000af4:	e9c5 9800 	strd	r9, r8, [r5]
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000af8:	f005 fb2c 	bl	8006154 <HAL_SDRAM_SendCommand>
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 8000afc:	f240 712b 	movw	r1, #1835	@ 0x72b
 8000b00:	4630      	mov	r0, r6
  hi2c3.Instance = I2C3;
 8000b02:	4d1a      	ldr	r5, [pc, #104]	@ (8000b6c <main+0x378>)
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 8000b04:	f005 fb45 	bl	8006192 <HAL_SDRAM_ProgramRefreshRate>
    FMC_Bank1->BTCR[0] = 0x000030D2;
 8000b08:	f04f 4320 	mov.w	r3, #2684354560	@ 0xa0000000
 8000b0c:	f243 02d2 	movw	r2, #12498	@ 0x30d2
  HAL_Delay(100); //Delay to fix initialization issue on some boards 
 8000b10:	2064      	movs	r0, #100	@ 0x64
  hltdc.Init.AccumulatedActiveH = 283;
 8000b12:	f240 2615 	movw	r6, #533	@ 0x215
    FMC_Bank1->BTCR[0] = 0x000030D2;
 8000b16:	601a      	str	r2, [r3, #0]
  HAL_Delay(100); //Delay to fix initialization issue on some boards 
 8000b18:	f003 f92a 	bl	8003d70 <HAL_Delay>
  hi2c3.Init.Timing = 0x20404768;
 8000b1c:	4b14      	ldr	r3, [pc, #80]	@ (8000b70 <main+0x37c>)
 8000b1e:	4a15      	ldr	r2, [pc, #84]	@ (8000b74 <main+0x380>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000b20:	4628      	mov	r0, r5
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000b22:	622c      	str	r4, [r5, #32]
  hi2c3.Init.Timing = 0x20404768;
 8000b24:	e9c5 2300 	strd	r2, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000b28:	e9c5 4702 	strd	r4, r7, [r5, #8]
 8000b2c:	e024      	b.n	8000b78 <main+0x384>
 8000b2e:	bf00      	nop
 8000b30:	0300001b 	.word	0x0300001b
 8000b34:	e000ed00 	.word	0xe000ed00
 8000b38:	40023800 	.word	0x40023800
 8000b3c:	40020400 	.word	0x40020400
 8000b40:	200003e8 	.word	0x200003e8
 8000b44:	200001e4 	.word	0x200001e4
 8000b48:	40022800 	.word	0x40022800
 8000b4c:	40022000 	.word	0x40022000
 8000b50:	40020800 	.word	0x40020800
 8000b54:	40021800 	.word	0x40021800
 8000b58:	20000428 	.word	0x20000428
 8000b5c:	40023000 	.word	0x40023000
 8000b60:	4002b000 	.word	0x4002b000
 8000b64:	200001c8 	.word	0x200001c8
 8000b68:	a0000140 	.word	0xa0000140
 8000b6c:	20000394 	.word	0x20000394
 8000b70:	20404768 	.word	0x20404768
 8000b74:	40005c00 	.word	0x40005c00
  hi2c3.Init.OwnAddress2 = 0;
 8000b78:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000b7c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000b80:	f003 fe10 	bl	80047a4 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000b84:	4621      	mov	r1, r4
 8000b86:	4628      	mov	r0, r5
 8000b88:	f004 f82e 	bl	8004be8 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000b8c:	4621      	mov	r1, r4
 8000b8e:	4628      	mov	r0, r5
  hltdc.Instance = LTDC;
 8000b90:	4d47      	ldr	r5, [pc, #284]	@ (8000cb0 <main+0x4bc>)
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000b92:	f004 f84f 	bl	8004c34 <HAL_I2CEx_ConfigDigitalFilter>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000b96:	2234      	movs	r2, #52	@ 0x34
 8000b98:	4621      	mov	r1, r4
 8000b9a:	eb0d 0002 	add.w	r0, sp, r2
 8000b9e:	f020 fadd 	bl	802115c <memset>
  hltdc.Instance = LTDC;
 8000ba2:	4b44      	ldr	r3, [pc, #272]	@ (8000cb4 <main+0x4c0>)
  hltdc.Init.VerticalSync = 9;
 8000ba4:	2128      	movs	r1, #40	@ 0x28
  hltdc.Init.AccumulatedVBP = 11;
 8000ba6:	2035      	movs	r0, #53	@ 0x35
  hltdc.Init.TotalHeigh = 285;
 8000ba8:	f240 2c35 	movw	ip, #565	@ 0x235
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000bac:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Blue = 0;
 8000bae:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8000bb0:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000bb4:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.VerticalSync = 9;
 8000bb8:	2309      	movs	r3, #9
 8000bba:	e9c5 1305 	strd	r1, r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
 8000bbe:	230b      	movs	r3, #11
 8000bc0:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
 8000bc4:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000bc8:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
 8000bca:	e9c5 6309 	strd	r6, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
 8000bce:	f240 131d 	movw	r3, #285	@ 0x11d
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000bd2:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.TotalHeigh = 285;
 8000bd6:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000bda:	f004 f8d7 	bl	8004d8c <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8000bde:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000be0:	f44f 6e80 	mov.w	lr, #1024	@ 0x400
  pLayerCfg.WindowX1 = 480;
 8000be4:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  pLayerCfg.WindowY1 = 272;
 8000be8:	f44f 7388 	mov.w	r3, #272	@ 0x110
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000bec:	4628      	mov	r0, r5
  pLayerCfg.WindowX0 = 0;
 8000bee:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.ImageHeight = 272;
 8000bf0:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000bf2:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8000bf6:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  pLayerCfg.Alpha0 = 0;
 8000bfa:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000bfe:	2105      	movs	r1, #5
 8000c00:	e9cd e114 	strd	lr, r1, [sp, #80]	@ 0x50
  pLayerCfg.FBStartAdress = 0xC0000000;
 8000c04:	f04f 4140 	mov.w	r1, #3221225472	@ 0xc0000000
  pLayerCfg.WindowY0 = 0;
 8000c08:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.ImageWidth = 480;
 8000c0c:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000c10:	4622      	mov	r2, r4
 8000c12:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000c14:	e9cd 3a10 	strd	r3, sl, [sp, #64]	@ 0x40
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000c18:	f004 f983 	bl	8004f22 <HAL_LTDC_ConfigLayer>
  hqspi.Instance = QUADSPI;
 8000c1c:	4826      	ldr	r0, [pc, #152]	@ (8000cb8 <main+0x4c4>)
 8000c1e:	4b27      	ldr	r3, [pc, #156]	@ (8000cbc <main+0x4c8>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8000c20:	6204      	str	r4, [r0, #32]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8000c22:	e9c0 9802 	strd	r9, r8, [r0, #8]
  hqspi.Init.ClockPrescaler = 1;
 8000c26:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 8000c2a:	f04f 0818 	mov.w	r8, #24
 8000c2e:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
  huart7.Init.BaudRate = 9600;
 8000c32:	f8df 90b4 	ldr.w	r9, [pc, #180]	@ 8000ce8 <main+0x4f4>
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 8000c36:	e9c0 8304 	strd	r8, r3, [r0, #16]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8000c3a:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8000c3e:	f004 fad3 	bl	80051e8 <HAL_QSPI_Init>
  BSP_QSPI_Init();
 8000c42:	f002 fef1 	bl	8003a28 <BSP_QSPI_Init>
  BSP_QSPI_MemoryMappedMode();
 8000c46:	f002 fe37 	bl	80038b8 <BSP_QSPI_EnableMemoryMappedMode>
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8000c4a:	205c      	movs	r0, #92	@ 0x5c
 8000c4c:	f003 f8f4 	bl	8003e38 <HAL_NVIC_DisableIRQ>
  MX_LIBJPEG_Init();
 8000c50:	f000 fbb6 	bl	80013c0 <MX_LIBJPEG_Init>
  huart7.Instance = UART7;
 8000c54:	481a      	ldr	r0, [pc, #104]	@ (8000cc0 <main+0x4cc>)
  huart7.Init.BaudRate = 9600;
 8000c56:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
  huart7.Init.Parity = UART_PARITY_NONE;
 8000c5a:	6104      	str	r4, [r0, #16]
  huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000c5c:	6244      	str	r4, [r0, #36]	@ 0x24
  huart7.Init.BaudRate = 9600;
 8000c5e:	e9c0 9300 	strd	r9, r3, [r0]
  huart7.Init.Mode = UART_MODE_TX_RX;
 8000c62:	230c      	movs	r3, #12
  huart7.Init.StopBits = UART_STOPBITS_1;
 8000c64:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000c68:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000c6c:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_UART_Init(&huart7) != HAL_OK)
 8000c70:	f005 fff2 	bl	8006c58 <HAL_UART_Init>
  MX_TouchGFX_Init();
 8000c74:	f000 fbd0 	bl	8001418 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000c78:	f000 fbcd 	bl	8001416 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8000c7c:	f006 f8a4 	bl	8006dc8 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000c80:	4a10      	ldr	r2, [pc, #64]	@ (8000cc4 <main+0x4d0>)
 8000c82:	4621      	mov	r1, r4
 8000c84:	4810      	ldr	r0, [pc, #64]	@ (8000cc8 <main+0x4d4>)
 8000c86:	f006 f8d9 	bl	8006e3c <osThreadNew>
 8000c8a:	4b10      	ldr	r3, [pc, #64]	@ (8000ccc <main+0x4d8>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000c8c:	4a10      	ldr	r2, [pc, #64]	@ (8000cd0 <main+0x4dc>)
 8000c8e:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000c90:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000c92:	4810      	ldr	r0, [pc, #64]	@ (8000cd4 <main+0x4e0>)
 8000c94:	f006 f8d2 	bl	8006e3c <osThreadNew>
 8000c98:	4b0f      	ldr	r3, [pc, #60]	@ (8000cd8 <main+0x4e4>)
  Bluethooth_taskHandle = osThreadNew(BLE_Task, NULL, &Bluethooth_task_attributes);
 8000c9a:	4a10      	ldr	r2, [pc, #64]	@ (8000cdc <main+0x4e8>)
 8000c9c:	4621      	mov	r1, r4
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000c9e:	6018      	str	r0, [r3, #0]
  Bluethooth_taskHandle = osThreadNew(BLE_Task, NULL, &Bluethooth_task_attributes);
 8000ca0:	480f      	ldr	r0, [pc, #60]	@ (8000ce0 <main+0x4ec>)
 8000ca2:	f006 f8cb 	bl	8006e3c <osThreadNew>
 8000ca6:	4b0f      	ldr	r3, [pc, #60]	@ (8000ce4 <main+0x4f0>)
 8000ca8:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8000caa:	f006 f8a7 	bl	8006dfc <osKernelStart>
  while (1)
 8000cae:	e7fe      	b.n	8000cae <main+0x4ba>
 8000cb0:	200002ec 	.word	0x200002ec
 8000cb4:	40016800 	.word	0x40016800
 8000cb8:	200002a0 	.word	0x200002a0
 8000cbc:	a0001000 	.word	0xa0001000
 8000cc0:	20000218 	.word	0x20000218
 8000cc4:	08021d54 	.word	0x08021d54
 8000cc8:	080005ad 	.word	0x080005ad
 8000ccc:	200001e0 	.word	0x200001e0
 8000cd0:	08021d30 	.word	0x08021d30
 8000cd4:	08001427 	.word	0x08001427
 8000cd8:	200001dc 	.word	0x200001dc
 8000cdc:	08021d0c 	.word	0x08021d0c
 8000ce0:	0800072d 	.word	0x0800072d
 8000ce4:	200001d8 	.word	0x200001d8
 8000ce8:	40007800 	.word	0x40007800

08000cec <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8000cec:	6802      	ldr	r2, [r0, #0]
 8000cee:	4b03      	ldr	r3, [pc, #12]	@ (8000cfc <HAL_TIM_PeriodElapsedCallback+0x10>)
 8000cf0:	429a      	cmp	r2, r3
 8000cf2:	d101      	bne.n	8000cf8 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8000cf4:	f003 b82a 	b.w	8003d4c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000cf8:	4770      	bx	lr
 8000cfa:	bf00      	nop
 8000cfc:	40001000 	.word	0x40001000

08000d00 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8000d00:	4770      	bx	lr
	...

08000d04 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8000d04:	4b0d      	ldr	r3, [pc, #52]	@ (8000d3c <HAL_MspInit+0x38>)
{
 8000d06:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000d08:	210f      	movs	r1, #15
 8000d0a:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 8000d0e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000d10:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8000d14:	641a      	str	r2, [r3, #64]	@ 0x40
 8000d16:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000d18:	f002 5280 	and.w	r2, r2, #268435456	@ 0x10000000
 8000d1c:	9200      	str	r2, [sp, #0]
 8000d1e:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d20:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000d22:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8000d26:	645a      	str	r2, [r3, #68]	@ 0x44
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000d28:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d2a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000d2c:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000d30:	9301      	str	r3, [sp, #4]
 8000d32:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000d34:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000d36:	f003 b83f 	b.w	8003db8 <HAL_NVIC_SetPriority>
 8000d3a:	bf00      	nop
 8000d3c:	40023800 	.word	0x40023800

08000d40 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000d40:	6802      	ldr	r2, [r0, #0]
{
 8000d42:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8000d44:	4b08      	ldr	r3, [pc, #32]	@ (8000d68 <HAL_CRC_MspInit+0x28>)
 8000d46:	429a      	cmp	r2, r3
 8000d48:	d10b      	bne.n	8000d62 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000d4a:	f8d3 2830 	ldr.w	r2, [r3, #2096]	@ 0x830
 8000d4e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8000d52:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8000d56:	631a      	str	r2, [r3, #48]	@ 0x30
 8000d58:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d5a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000d5e:	9301      	str	r3, [sp, #4]
 8000d60:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000d62:	b002      	add	sp, #8
 8000d64:	4770      	bx	lr
 8000d66:	bf00      	nop
 8000d68:	40023000 	.word	0x40023000

08000d6c <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8000d6c:	4b0e      	ldr	r3, [pc, #56]	@ (8000da8 <HAL_DMA2D_MspInit+0x3c>)
{
 8000d6e:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8000d70:	6802      	ldr	r2, [r0, #0]
 8000d72:	429a      	cmp	r2, r3
 8000d74:	d115      	bne.n	8000da2 <HAL_DMA2D_MspInit+0x36>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d76:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000d7a:	2105      	movs	r1, #5
 8000d7c:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d7e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000d80:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000d84:	631a      	str	r2, [r3, #48]	@ 0x30
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000d86:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d8a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000d8e:	9301      	str	r3, [sp, #4]
 8000d90:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000d92:	f003 f811 	bl	8003db8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000d96:	205a      	movs	r0, #90	@ 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8000d98:	b003      	add	sp, #12
 8000d9a:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000d9e:	f003 b83d 	b.w	8003e1c <HAL_NVIC_EnableIRQ>
}
 8000da2:	b003      	add	sp, #12
 8000da4:	f85d fb04 	ldr.w	pc, [sp], #4
 8000da8:	4002b000 	.word	0x4002b000

08000dac <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000dac:	b510      	push	{r4, lr}
 8000dae:	b0a8      	sub	sp, #160	@ 0xa0
 8000db0:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000db2:	2214      	movs	r2, #20
 8000db4:	2100      	movs	r1, #0
 8000db6:	a802      	add	r0, sp, #8
 8000db8:	f020 f9d0 	bl	802115c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000dbc:	2284      	movs	r2, #132	@ 0x84
 8000dbe:	2100      	movs	r1, #0
 8000dc0:	a807      	add	r0, sp, #28
 8000dc2:	f020 f9cb 	bl	802115c <memset>
  if(hi2c->Instance==I2C3)
 8000dc6:	6822      	ldr	r2, [r4, #0]
 8000dc8:	4b17      	ldr	r3, [pc, #92]	@ (8000e28 <HAL_I2C_MspInit+0x7c>)
 8000dca:	429a      	cmp	r2, r3
 8000dcc:	d12a      	bne.n	8000e24 <HAL_I2C_MspInit+0x78>

  /* USER CODE END I2C3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000dce:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000dd2:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000dd4:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000dd6:	f004 ff13 	bl	8005c00 <HAL_RCCEx_PeriphCLKConfig>
 8000dda:	b108      	cbz	r0, 8000de0 <HAL_I2C_MspInit+0x34>
    {
      Error_Handler();
 8000ddc:	f7ff ff90 	bl	8000d00 <Error_Handler>
    }

    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000de0:	4c12      	ldr	r4, [pc, #72]	@ (8000e2c <HAL_I2C_MspInit+0x80>)
    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000de2:	f44f 72c0 	mov.w	r2, #384	@ 0x180
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000de6:	2101      	movs	r1, #1
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000de8:	4811      	ldr	r0, [pc, #68]	@ (8000e30 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000dea:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8000dec:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000df0:	6323      	str	r3, [r4, #48]	@ 0x30
 8000df2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8000df4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000df8:	9300      	str	r3, [sp, #0]
 8000dfa:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000dfc:	2312      	movs	r3, #18
 8000dfe:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e02:	2303      	movs	r3, #3
 8000e04:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000e08:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000e0a:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000e0c:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000e0e:	f003 fa1d 	bl	800424c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8000e12:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000e14:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000e18:	6423      	str	r3, [r4, #64]	@ 0x40
 8000e1a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000e1c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000e20:	9301      	str	r3, [sp, #4]
 8000e22:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8000e24:	b028      	add	sp, #160	@ 0xa0
 8000e26:	bd10      	pop	{r4, pc}
 8000e28:	40005c00 	.word	0x40005c00
 8000e2c:	40023800 	.word	0x40023800
 8000e30:	40021c00 	.word	0x40021c00

08000e34 <HAL_I2C_MspDeInit>:
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
  if(hi2c->Instance==I2C3)
 8000e34:	6802      	ldr	r2, [r0, #0]
{
 8000e36:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C3)
 8000e38:	4b09      	ldr	r3, [pc, #36]	@ (8000e60 <HAL_I2C_MspDeInit+0x2c>)
 8000e3a:	429a      	cmp	r2, r3
 8000e3c:	d10f      	bne.n	8000e5e <HAL_I2C_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN I2C3_MspDeInit 0 */

  /* USER CODE END I2C3_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000e3e:	4a09      	ldr	r2, [pc, #36]	@ (8000e64 <HAL_I2C_MspDeInit+0x30>)

    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_7);
 8000e40:	2180      	movs	r1, #128	@ 0x80
 8000e42:	4809      	ldr	r0, [pc, #36]	@ (8000e68 <HAL_I2C_MspDeInit+0x34>)
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000e44:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8000e46:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8000e4a:	6413      	str	r3, [r2, #64]	@ 0x40
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_7);
 8000e4c:	f003 fae2 	bl	8004414 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_8);
 8000e50:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000e54:	4804      	ldr	r0, [pc, #16]	@ (8000e68 <HAL_I2C_MspDeInit+0x34>)
  /* USER CODE BEGIN I2C3_MspDeInit 1 */

  /* USER CODE END I2C3_MspDeInit 1 */
  }

}
 8000e56:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_8);
 8000e5a:	f003 badb 	b.w	8004414 <HAL_GPIO_DeInit>
}
 8000e5e:	bd08      	pop	{r3, pc}
 8000e60:	40005c00 	.word	0x40005c00
 8000e64:	40023800 	.word	0x40023800
 8000e68:	40021c00 	.word	0x40021c00

08000e6c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000e6c:	b570      	push	{r4, r5, r6, lr}
 8000e6e:	b0ac      	sub	sp, #176	@ 0xb0
 8000e70:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e72:	2214      	movs	r2, #20
 8000e74:	2100      	movs	r1, #0
 8000e76:	a806      	add	r0, sp, #24
 8000e78:	f020 f970 	bl	802115c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000e7c:	2284      	movs	r2, #132	@ 0x84
 8000e7e:	2100      	movs	r1, #0
 8000e80:	a80b      	add	r0, sp, #44	@ 0x2c
 8000e82:	f020 f96b 	bl	802115c <memset>
  if(hltdc->Instance==LTDC)
 8000e86:	6822      	ldr	r2, [r4, #0]
 8000e88:	4b48      	ldr	r3, [pc, #288]	@ (8000fac <HAL_LTDC_MspInit+0x140>)
 8000e8a:	429a      	cmp	r2, r3
 8000e8c:	f040 808c 	bne.w	8000fa8 <HAL_LTDC_MspInit+0x13c>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000e90:	2308      	movs	r3, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000e92:	2005      	movs	r0, #5
    PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV2;
    PeriphClkInitStruct.PLLSAIDivQ = 1;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000e94:	2401      	movs	r4, #1
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000e96:	930b      	str	r3, [sp, #44]	@ 0x2c
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
 8000e98:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8000e9c:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000e9e:	2302      	movs	r3, #2
 8000ea0:	e9cd 3011 	strd	r3, r0, [sp, #68]	@ 0x44
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000ea4:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000ea8:	a80b      	add	r0, sp, #44	@ 0x2c
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000eaa:	e9cd 4315 	strd	r4, r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000eae:	f004 fea7 	bl	8005c00 <HAL_RCCEx_PeriphCLKConfig>
 8000eb2:	b108      	cbz	r0, 8000eb8 <HAL_LTDC_MspInit+0x4c>
    {
      Error_Handler();
 8000eb4:	f7ff ff24 	bl	8000d00 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000eb8:	4b3d      	ldr	r3, [pc, #244]	@ (8000fb0 <HAL_LTDC_MspInit+0x144>)
    PJ0     ------> LTDC_R1
    PJ1     ------> LTDC_R2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000eba:	2400      	movs	r4, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ebc:	2502      	movs	r5, #2
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000ebe:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000ec0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000ec2:	a906      	add	r1, sp, #24
 8000ec4:	483b      	ldr	r0, [pc, #236]	@ (8000fb4 <HAL_LTDC_MspInit+0x148>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000ec6:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8000eca:	645a      	str	r2, [r3, #68]	@ 0x44
 8000ecc:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000ece:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8000ed2:	9200      	str	r2, [sp, #0]
 8000ed4:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000ed6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000ed8:	f042 0210 	orr.w	r2, r2, #16
 8000edc:	631a      	str	r2, [r3, #48]	@ 0x30
 8000ede:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000ee0:	f002 0210 	and.w	r2, r2, #16
 8000ee4:	9201      	str	r2, [sp, #4]
 8000ee6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000ee8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000eea:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000eee:	631a      	str	r2, [r3, #48]	@ 0x30
 8000ef0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000ef2:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 8000ef6:	9202      	str	r2, [sp, #8]
 8000ef8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOK_CLK_ENABLE();
 8000efa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000efc:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8000f00:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f02:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f04:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
 8000f08:	9203      	str	r2, [sp, #12]
 8000f0a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000f0c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f0e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8000f12:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f14:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f16:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8000f1a:	9204      	str	r2, [sp, #16]
 8000f1c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000f1e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f20:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000f24:	631a      	str	r2, [r3, #48]	@ 0x30
 8000f26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f28:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000f2c:	9305      	str	r3, [sp, #20]
 8000f2e:	9b05      	ldr	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f30:	2310      	movs	r3, #16
 8000f32:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f36:	e9cd 4408 	strd	r4, r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f3a:	960a      	str	r6, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000f3c:	f003 f986 	bl	800424c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_11
 8000f40:	f64e 73ff 	movw	r3, #61439	@ 0xefff
                          |GPIO_PIN_2|GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000f44:	a906      	add	r1, sp, #24
 8000f46:	481c      	ldr	r0, [pc, #112]	@ (8000fb8 <HAL_LTDC_MspInit+0x14c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f48:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f4a:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f4e:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000f52:	f003 f97b 	bl	800424c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4
 8000f56:	23f7      	movs	r3, #247	@ 0xf7
                          |GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000f58:	a906      	add	r1, sp, #24
 8000f5a:	4818      	ldr	r0, [pc, #96]	@ (8000fbc <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f5c:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f5e:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f62:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000f66:	f003 f971 	bl	800424c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000f6a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000f6e:	a906      	add	r1, sp, #24
 8000f70:	4813      	ldr	r0, [pc, #76]	@ (8000fc0 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f72:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000f76:	2309      	movs	r3, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f78:	e9cd 4408 	strd	r4, r4, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000f7c:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000f7e:	f003 f965 	bl	800424c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_15|GPIO_PIN_14;
 8000f82:	f44f 4346 	mov.w	r3, #50688	@ 0xc600
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000f86:	a906      	add	r1, sp, #24
 8000f88:	480e      	ldr	r0, [pc, #56]	@ (8000fc4 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f8a:	960a      	str	r6, [sp, #40]	@ 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f8c:	e9cd 3506 	strd	r3, r5, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f90:	e9cd 4408 	strd	r4, r4, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000f94:	f003 f95a 	bl	800424c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000f98:	2058      	movs	r0, #88	@ 0x58
 8000f9a:	4622      	mov	r2, r4
 8000f9c:	2105      	movs	r1, #5
 8000f9e:	f002 ff0b 	bl	8003db8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000fa2:	2058      	movs	r0, #88	@ 0x58
 8000fa4:	f002 ff3a 	bl	8003e1c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000fa8:	b02c      	add	sp, #176	@ 0xb0
 8000faa:	bd70      	pop	{r4, r5, r6, pc}
 8000fac:	40016800 	.word	0x40016800
 8000fb0:	40023800 	.word	0x40023800
 8000fb4:	40021000 	.word	0x40021000
 8000fb8:	40022400 	.word	0x40022400
 8000fbc:	40022800 	.word	0x40022800
 8000fc0:	40021800 	.word	0x40021800
 8000fc4:	40022000 	.word	0x40022000

08000fc8 <HAL_QSPI_MspInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000fc8:	2214      	movs	r2, #20
 8000fca:	2100      	movs	r1, #0
{
 8000fcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000fd0:	b08a      	sub	sp, #40	@ 0x28
 8000fd2:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000fd4:	eb0d 0002 	add.w	r0, sp, r2
 8000fd8:	f020 f8c0 	bl	802115c <memset>
  if(hqspi->Instance==QUADSPI)
 8000fdc:	6822      	ldr	r2, [r4, #0]
 8000fde:	4b2c      	ldr	r3, [pc, #176]	@ (8001090 <HAL_QSPI_MspInit+0xc8>)
 8000fe0:	429a      	cmp	r2, r3
 8000fe2:	d151      	bne.n	8001088 <HAL_QSPI_MspInit+0xc0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000fe4:	4b2b      	ldr	r3, [pc, #172]	@ (8001094 <HAL_QSPI_MspInit+0xcc>)
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fe6:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000fe8:	2403      	movs	r4, #3
 8000fea:	2609      	movs	r6, #9
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000fec:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fee:	f04f 0804 	mov.w	r8, #4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000ff2:	a905      	add	r1, sp, #20
 8000ff4:	4828      	ldr	r0, [pc, #160]	@ (8001098 <HAL_QSPI_MspInit+0xd0>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000ff6:	f042 0202 	orr.w	r2, r2, #2

    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ffa:	2700      	movs	r7, #0
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000ffc:	639a      	str	r2, [r3, #56]	@ 0x38
 8000ffe:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8001000:	f002 0202 	and.w	r2, r2, #2
 8001004:	9201      	str	r2, [sp, #4]
 8001006:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8001008:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800100a:	f042 0210 	orr.w	r2, r2, #16
 800100e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001010:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001012:	f002 0210 	and.w	r2, r2, #16
 8001016:	9202      	str	r2, [sp, #8]
 8001018:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800101a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800101c:	f042 0202 	orr.w	r2, r2, #2
 8001020:	631a      	str	r2, [r3, #48]	@ 0x30
 8001022:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001024:	f002 0202 	and.w	r2, r2, #2
 8001028:	9203      	str	r2, [sp, #12]
 800102a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800102c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800102e:	f042 0208 	orr.w	r2, r2, #8
 8001032:	631a      	str	r2, [r3, #48]	@ 0x30
 8001034:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001036:	f003 0308 	and.w	r3, r3, #8
 800103a:	9304      	str	r3, [sp, #16]
 800103c:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800103e:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001042:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001046:	f003 f901 	bl	800424c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 800104a:	2340      	movs	r3, #64	@ 0x40
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800104c:	a905      	add	r1, sp, #20
 800104e:	4813      	ldr	r0, [pc, #76]	@ (800109c <HAL_QSPI_MspInit+0xd4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001050:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8001054:	230a      	movs	r3, #10
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001056:	e9cd 7407 	strd	r7, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 800105a:	9309      	str	r3, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800105c:	f003 f8f6 	bl	800424c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001060:	a905      	add	r1, sp, #20
 8001062:	480e      	ldr	r0, [pc, #56]	@ (800109c <HAL_QSPI_MspInit+0xd4>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001064:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001066:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800106a:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800106e:	f003 f8ed 	bl	800424c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11;
 8001072:	f44f 5360 	mov.w	r3, #14336	@ 0x3800
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001076:	a905      	add	r1, sp, #20
 8001078:	4809      	ldr	r0, [pc, #36]	@ (80010a0 <HAL_QSPI_MspInit+0xd8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 800107a:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800107c:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001080:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001084:	f003 f8e2 	bl	800424c <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001088:	b00a      	add	sp, #40	@ 0x28
 800108a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800108e:	bf00      	nop
 8001090:	a0001000 	.word	0xa0001000
 8001094:	40023800 	.word	0x40023800
 8001098:	40021000 	.word	0x40021000
 800109c:	40020400 	.word	0x40020400
 80010a0:	40020c00 	.word	0x40020c00

080010a4 <HAL_QSPI_MspDeInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
  if(hqspi->Instance==QUADSPI)
 80010a4:	6802      	ldr	r2, [r0, #0]
{
 80010a6:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 80010a8:	4b0b      	ldr	r3, [pc, #44]	@ (80010d8 <HAL_QSPI_MspDeInit+0x34>)
 80010aa:	429a      	cmp	r2, r3
 80010ac:	d113      	bne.n	80010d6 <HAL_QSPI_MspDeInit+0x32>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 80010ae:	4a0b      	ldr	r2, [pc, #44]	@ (80010dc <HAL_QSPI_MspDeInit+0x38>)
    PB2     ------> QUADSPI_CLK
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 80010b0:	2104      	movs	r1, #4
 80010b2:	480b      	ldr	r0, [pc, #44]	@ (80010e0 <HAL_QSPI_MspDeInit+0x3c>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 80010b4:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80010b6:	f023 0302 	bic.w	r3, r3, #2
 80010ba:	6393      	str	r3, [r2, #56]	@ 0x38
    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_2);
 80010bc:	f003 f9aa 	bl	8004414 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_2);
 80010c0:	2144      	movs	r1, #68	@ 0x44
 80010c2:	4808      	ldr	r0, [pc, #32]	@ (80010e4 <HAL_QSPI_MspDeInit+0x40>)
 80010c4:	f003 f9a6 	bl	8004414 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11);
 80010c8:	f44f 5160 	mov.w	r1, #14336	@ 0x3800
 80010cc:	4806      	ldr	r0, [pc, #24]	@ (80010e8 <HAL_QSPI_MspDeInit+0x44>)
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 80010ce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11);
 80010d2:	f003 b99f 	b.w	8004414 <HAL_GPIO_DeInit>
}
 80010d6:	bd08      	pop	{r3, pc}
 80010d8:	a0001000 	.word	0xa0001000
 80010dc:	40023800 	.word	0x40023800
 80010e0:	40021000 	.word	0x40021000
 80010e4:	40020400 	.word	0x40020400
 80010e8:	40020c00 	.word	0x40020c00

080010ec <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80010ec:	b510      	push	{r4, lr}
 80010ee:	b0a8      	sub	sp, #160	@ 0xa0
 80010f0:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80010f2:	2214      	movs	r2, #20
 80010f4:	2100      	movs	r1, #0
 80010f6:	a802      	add	r0, sp, #8
 80010f8:	f020 f830 	bl	802115c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80010fc:	2284      	movs	r2, #132	@ 0x84
 80010fe:	2100      	movs	r1, #0
 8001100:	a807      	add	r0, sp, #28
 8001102:	f020 f82b 	bl	802115c <memset>
  if(huart->Instance==UART7)
 8001106:	6822      	ldr	r2, [r4, #0]
 8001108:	4b17      	ldr	r3, [pc, #92]	@ (8001168 <HAL_UART_MspInit+0x7c>)
 800110a:	429a      	cmp	r2, r3
 800110c:	d12a      	bne.n	8001164 <HAL_UART_MspInit+0x78>

  /* USER CODE END UART7_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 800110e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001112:	a807      	add	r0, sp, #28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 8001114:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001116:	f004 fd73 	bl	8005c00 <HAL_RCCEx_PeriphCLKConfig>
 800111a:	b108      	cbz	r0, 8001120 <HAL_UART_MspInit+0x34>
    {
      Error_Handler();
 800111c:	f7ff fdf0 	bl	8000d00 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_UART7_CLK_ENABLE();
 8001120:	4b12      	ldr	r3, [pc, #72]	@ (800116c <HAL_UART_MspInit+0x80>)
    PF6     ------> UART7_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001122:	2100      	movs	r1, #0
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001124:	4812      	ldr	r0, [pc, #72]	@ (8001170 <HAL_UART_MspInit+0x84>)
    __HAL_RCC_UART7_CLK_ENABLE();
 8001126:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001128:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800112c:	641a      	str	r2, [r3, #64]	@ 0x40
 800112e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001130:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 8001134:	9200      	str	r2, [sp, #0]
 8001136:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001138:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800113a:	f042 0220 	orr.w	r2, r2, #32
 800113e:	631a      	str	r2, [r3, #48]	@ 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001140:	22c0      	movs	r2, #192	@ 0xc0
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001142:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001144:	f003 0320 	and.w	r3, r3, #32
 8001148:	9301      	str	r3, [sp, #4]
 800114a:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800114c:	2302      	movs	r3, #2
 800114e:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001152:	2303      	movs	r3, #3
 8001154:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 8001158:	2308      	movs	r3, #8
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800115a:	eb0d 0103 	add.w	r1, sp, r3
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 800115e:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001160:	f003 f874 	bl	800424c <HAL_GPIO_Init>
  /* USER CODE BEGIN UART7_MspInit 1 */

  /* USER CODE END UART7_MspInit 1 */
  }

}
 8001164:	b028      	add	sp, #160	@ 0xa0
 8001166:	bd10      	pop	{r4, pc}
 8001168:	40007800 	.word	0x40007800
 800116c:	40023800 	.word	0x40023800
 8001170:	40021400 	.word	0x40021400

08001174 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001174:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001176:	2300      	movs	r3, #0
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001178:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800117a:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 800117c:	4b29      	ldr	r3, [pc, #164]	@ (8001224 <HAL_SDRAM_MspInit+0xb0>)
 800117e:	681e      	ldr	r6, [r3, #0]
 8001180:	2e00      	cmp	r6, #0
 8001182:	d14d      	bne.n	8001220 <HAL_SDRAM_MspInit+0xac>
  FMC_Initialized = 1;
 8001184:	2201      	movs	r2, #1
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001186:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001188:	2503      	movs	r5, #3
 800118a:	240c      	movs	r4, #12
  FMC_Initialized = 1;
 800118c:	601a      	str	r2, [r3, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800118e:	a901      	add	r1, sp, #4
  __HAL_RCC_FMC_CLK_ENABLE();
 8001190:	4b25      	ldr	r3, [pc, #148]	@ (8001228 <HAL_SDRAM_MspInit+0xb4>)
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001192:	4826      	ldr	r0, [pc, #152]	@ (800122c <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001194:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8001196:	f042 0201 	orr.w	r2, r2, #1
 800119a:	639a      	str	r2, [r3, #56]	@ 0x38
 800119c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800119e:	f003 0301 	and.w	r3, r3, #1
 80011a2:	9300      	str	r3, [sp, #0]
 80011a4:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011a6:	f64f 7383 	movw	r3, #65411	@ 0xff83
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80011aa:	e9cd 5404 	strd	r5, r4, [sp, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011ae:	e9cd 3701 	strd	r3, r7, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80011b2:	f003 f84b 	bl	800424c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 80011b6:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80011ba:	a901      	add	r1, sp, #4
 80011bc:	481c      	ldr	r0, [pc, #112]	@ (8001230 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80011be:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011c0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80011c4:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80011c8:	f003 f840 	bl	800424c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 80011cc:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80011d0:	a901      	add	r1, sp, #4
 80011d2:	4818      	ldr	r0, [pc, #96]	@ (8001234 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80011d4:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011d6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80011da:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80011de:	f003 f835 	bl	800424c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80011e2:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80011e6:	a901      	add	r1, sp, #4
 80011e8:	4813      	ldr	r0, [pc, #76]	@ (8001238 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80011ea:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011ec:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80011f0:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80011f4:	f003 f82a 	bl	800424c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_3;
 80011f8:	2328      	movs	r3, #40	@ 0x28
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80011fa:	a901      	add	r1, sp, #4
 80011fc:	480f      	ldr	r0, [pc, #60]	@ (800123c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80011fe:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001200:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001204:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001208:	f003 f820 	bl	800424c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 800120c:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800120e:	a901      	add	r1, sp, #4
 8001210:	480b      	ldr	r0, [pc, #44]	@ (8001240 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001212:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001214:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001218:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800121c:	f003 f816 	bl	800424c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001220:	b007      	add	sp, #28
 8001222:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001224:	2000044c 	.word	0x2000044c
 8001228:	40023800 	.word	0x40023800
 800122c:	40021000 	.word	0x40021000
 8001230:	40021800 	.word	0x40021800
 8001234:	40020c00 	.word	0x40020c00
 8001238:	40021400 	.word	0x40021400
 800123c:	40021c00 	.word	0x40021c00
 8001240:	40020800 	.word	0x40020800

08001244 <HAL_InitTick>:
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001244:	4b21      	ldr	r3, [pc, #132]	@ (80012cc <HAL_InitTick+0x88>)
 8001246:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001248:	f042 0210 	orr.w	r2, r2, #16
{
 800124c:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_TIM6_CLK_ENABLE();
 800124e:	641a      	str	r2, [r3, #64]	@ 0x40
{
 8001250:	b088      	sub	sp, #32
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001252:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
{
 8001254:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001256:	a901      	add	r1, sp, #4
 8001258:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 800125a:	f003 0310 	and.w	r3, r3, #16
 800125e:	9302      	str	r3, [sp, #8]
 8001260:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001262:	f004 fcaf 	bl	8005bc4 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001266:	9b06      	ldr	r3, [sp, #24]
 8001268:	bb4b      	cbnz	r3, 80012be <HAL_InitTick+0x7a>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800126a:	f004 fc8b 	bl	8005b84 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800126e:	4e18      	ldr	r6, [pc, #96]	@ (80012d0 <HAL_InitTick+0x8c>)
 8001270:	4b18      	ldr	r3, [pc, #96]	@ (80012d4 <HAL_InitTick+0x90>)
 8001272:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001274:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8001278:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800127a:	4b17      	ldr	r3, [pc, #92]	@ (80012d8 <HAL_InitTick+0x94>)
 800127c:	fbb0 f3f3 	udiv	r3, r0, r3
 8001280:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001282:	4630      	mov	r0, r6
  htim6.Init.Prescaler = uwPrescalerValue;
 8001284:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
 8001286:	2300      	movs	r3, #0
 8001288:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800128a:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800128c:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 800128e:	f005 f8f1 	bl	8006474 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001292:	4604      	mov	r4, r0
 8001294:	b980      	cbnz	r0, 80012b8 <HAL_InitTick+0x74>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001296:	4630      	mov	r0, r6
 8001298:	f004 ff94 	bl	80061c4 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800129c:	4604      	mov	r4, r0
 800129e:	b958      	cbnz	r0, 80012b8 <HAL_InitTick+0x74>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80012a0:	2036      	movs	r0, #54	@ 0x36
 80012a2:	f002 fdbb 	bl	8003e1c <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80012a6:	2d0f      	cmp	r5, #15
 80012a8:	d80d      	bhi.n	80012c6 <HAL_InitTick+0x82>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80012aa:	4622      	mov	r2, r4
 80012ac:	4629      	mov	r1, r5
 80012ae:	2036      	movs	r0, #54	@ 0x36
 80012b0:	f002 fd82 	bl	8003db8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80012b4:	4b09      	ldr	r3, [pc, #36]	@ (80012dc <HAL_InitTick+0x98>)
 80012b6:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 80012b8:	4620      	mov	r0, r4
 80012ba:	b008      	add	sp, #32
 80012bc:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80012be:	f004 fc61 	bl	8005b84 <HAL_RCC_GetPCLK1Freq>
 80012c2:	0040      	lsls	r0, r0, #1
 80012c4:	e7d3      	b.n	800126e <HAL_InitTick+0x2a>
        status = HAL_ERROR;
 80012c6:	2401      	movs	r4, #1
 80012c8:	e7f6      	b.n	80012b8 <HAL_InitTick+0x74>
 80012ca:	bf00      	nop
 80012cc:	40023800 	.word	0x40023800
 80012d0:	20000450 	.word	0x20000450
 80012d4:	40001000 	.word	0x40001000
 80012d8:	000f4240 	.word	0x000f4240
 80012dc:	2000003c 	.word	0x2000003c

080012e0 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80012e0:	4770      	bx	lr

080012e2 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80012e2:	e7fe      	b.n	80012e2 <HardFault_Handler>

080012e4 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80012e4:	e7fe      	b.n	80012e4 <MemManage_Handler>

080012e6 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80012e6:	e7fe      	b.n	80012e6 <BusFault_Handler>

080012e8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80012e8:	e7fe      	b.n	80012e8 <UsageFault_Handler>

080012ea <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 80012ea:	4770      	bx	lr

080012ec <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80012ec:	4801      	ldr	r0, [pc, #4]	@ (80012f4 <TIM6_DAC_IRQHandler+0x8>)
 80012ee:	f004 bfab 	b.w	8006248 <HAL_TIM_IRQHandler>
 80012f2:	bf00      	nop
 80012f4:	20000450 	.word	0x20000450

080012f8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80012f8:	4801      	ldr	r0, [pc, #4]	@ (8001300 <LTDC_IRQHandler+0x8>)
 80012fa:	f003 bdb5 	b.w	8004e68 <HAL_LTDC_IRQHandler>
 80012fe:	bf00      	nop
 8001300:	200002ec 	.word	0x200002ec

08001304 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001304:	4801      	ldr	r0, [pc, #4]	@ (800130c <DMA2D_IRQHandler+0x8>)
 8001306:	f002 bed0 	b.w	80040aa <HAL_DMA2D_IRQHandler>
 800130a:	bf00      	nop
 800130c:	200003e8 	.word	0x200003e8

08001310 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001310:	2001      	movs	r0, #1
 8001312:	4770      	bx	lr

08001314 <_kill>:

int _kill(int pid, int sig)
{
 8001314:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001316:	f01f ffc3 	bl	80212a0 <__errno>
 800131a:	2316      	movs	r3, #22
 800131c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800131e:	f04f 30ff 	mov.w	r0, #4294967295
 8001322:	bd08      	pop	{r3, pc}

08001324 <_exit>:

void _exit (int status)
{
 8001324:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001326:	f01f ffbb 	bl	80212a0 <__errno>
 800132a:	2316      	movs	r3, #22
 800132c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800132e:	e7fe      	b.n	800132e <_exit+0xa>

08001330 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001330:	b570      	push	{r4, r5, r6, lr}
 8001332:	460d      	mov	r5, r1
 8001334:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001336:	460e      	mov	r6, r1
 8001338:	1b73      	subs	r3, r6, r5
 800133a:	429c      	cmp	r4, r3
 800133c:	dc01      	bgt.n	8001342 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800133e:	4620      	mov	r0, r4
 8001340:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001342:	f3af 8000 	nop.w
 8001346:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800134a:	e7f5      	b.n	8001338 <_read+0x8>

0800134c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800134c:	b570      	push	{r4, r5, r6, lr}
 800134e:	460d      	mov	r5, r1
 8001350:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001352:	460e      	mov	r6, r1
 8001354:	1b73      	subs	r3, r6, r5
 8001356:	429c      	cmp	r4, r3
 8001358:	dc01      	bgt.n	800135e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800135a:	4620      	mov	r0, r4
 800135c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800135e:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001362:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001366:	e7f5      	b.n	8001354 <_write+0x8>

08001368 <_close>:

int _close(int file)
{
	return -1;
}
 8001368:	f04f 30ff 	mov.w	r0, #4294967295
 800136c:	4770      	bx	lr

0800136e <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800136e:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
 8001372:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 8001374:	604b      	str	r3, [r1, #4]
}
 8001376:	4770      	bx	lr

08001378 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001378:	2001      	movs	r0, #1
 800137a:	4770      	bx	lr

0800137c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 800137c:	2000      	movs	r0, #0
 800137e:	4770      	bx	lr

08001380 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001380:	4a0b      	ldr	r2, [pc, #44]	@ (80013b0 <_sbrk+0x30>)
{
 8001382:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 8001384:	6811      	ldr	r1, [r2, #0]
{
 8001386:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8001388:	b909      	cbnz	r1, 800138e <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 800138a:	490a      	ldr	r1, [pc, #40]	@ (80013b4 <_sbrk+0x34>)
 800138c:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800138e:	6810      	ldr	r0, [r2, #0]
 8001390:	4909      	ldr	r1, [pc, #36]	@ (80013b8 <_sbrk+0x38>)
 8001392:	4c0a      	ldr	r4, [pc, #40]	@ (80013bc <_sbrk+0x3c>)
 8001394:	4403      	add	r3, r0
 8001396:	1b09      	subs	r1, r1, r4
 8001398:	428b      	cmp	r3, r1
 800139a:	d906      	bls.n	80013aa <_sbrk+0x2a>
  {
    errno = ENOMEM;
 800139c:	f01f ff80 	bl	80212a0 <__errno>
 80013a0:	230c      	movs	r3, #12
 80013a2:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80013a4:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 80013a8:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 80013aa:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 80013ac:	e7fc      	b.n	80013a8 <_sbrk+0x28>
 80013ae:	bf00      	nop
 80013b0:	2000049c 	.word	0x2000049c
 80013b4:	20017638 	.word	0x20017638
 80013b8:	20050000 	.word	0x20050000
 80013bc:	00000a00 	.word	0x00000a00

080013c0 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
 80013c0:	4770      	bx	lr
	...

080013c4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80013c4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80013fc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80013c8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80013ca:	e003      	b.n	80013d4 <LoopCopyDataInit>

080013cc <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80013cc:	4b0c      	ldr	r3, [pc, #48]	@ (8001400 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80013ce:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80013d0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80013d2:	3104      	adds	r1, #4

080013d4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80013d4:	480b      	ldr	r0, [pc, #44]	@ (8001404 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80013d6:	4b0c      	ldr	r3, [pc, #48]	@ (8001408 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80013d8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80013da:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80013dc:	d3f6      	bcc.n	80013cc <CopyDataInit>
  ldr  r2, =_sbss
 80013de:	4a0b      	ldr	r2, [pc, #44]	@ (800140c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80013e0:	e002      	b.n	80013e8 <LoopFillZerobss>

080013e2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80013e2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80013e4:	f842 3b04 	str.w	r3, [r2], #4

080013e8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80013e8:	4b09      	ldr	r3, [pc, #36]	@ (8001410 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80013ea:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80013ec:	d3f9      	bcc.n	80013e2 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 80013ee:	f002 fbb3 	bl	8003b58 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80013f2:	f01f ff5b 	bl	80212ac <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80013f6:	f7ff f9fd 	bl	80007f4 <main>
  bx  lr    
 80013fa:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80013fc:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8001400:	0802414c 	.word	0x0802414c
  ldr  r0, =_sdata
 8001404:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001408:	20000124 	.word	0x20000124
  ldr  r2, =_sbss
 800140c:	20000124 	.word	0x20000124
  ldr  r3, = _ebss
 8001410:	20017638 	.word	0x20017638

08001414 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001414:	e7fe      	b.n	8001414 <ADC_IRQHandler>

08001416 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001416:	4770      	bx	lr

08001418 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001418:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 800141a:	f000 fd99 	bl	8001f50 <touchgfx_components_init>
    touchgfx_init();
}
 800141e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8001422:	f000 bd21 	b.w	8001e68 <touchgfx_init>

08001426 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8001426:	f000 bd95 	b.w	8001f54 <touchgfx_taskEntry>

0800142a <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800142a:	6840      	ldr	r0, [r0, #4]
    }
 800142c:	4770      	bx	lr

0800142e <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 800142e:	6041      	str	r1, [r0, #4]
    }
 8001430:	4770      	bx	lr
	...

08001434 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8001434:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8001438:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 800143c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8001440:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 8001444:	4b05      	ldr	r3, [pc, #20]	@ (800145c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 8001446:	4a06      	ldr	r2, [pc, #24]	@ (8001460 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 8001448:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
 800144c:	430a      	orrs	r2, r1
 800144e:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 8001452:	681a      	ldr	r2, [r3, #0]
 8001454:	f042 0201 	orr.w	r2, r2, #1
 8001458:	601a      	str	r2, [r3, #0]
}
 800145a:	4770      	bx	lr
 800145c:	e0001000 	.word	0xe0001000
 8001460:	c5acce55 	.word	0xc5acce55

08001464 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8001464:	1a52      	subs	r2, r2, r1
 8001466:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 800146a:	fbb2 f0f3 	udiv	r0, r2, r3
 800146e:	4770      	bx	lr

08001470 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8001470:	4b01      	ldr	r3, [pc, #4]	@ (8001478 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8001472:	6858      	ldr	r0, [r3, #4]
}
 8001474:	4770      	bx	lr
 8001476:	bf00      	nop
 8001478:	e0001000 	.word	0xe0001000

0800147c <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 800147c:	4770      	bx	lr

0800147e <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 800147e:	b510      	push	{r4, lr}
 8001480:	4604      	mov	r4, r0
 8001482:	210c      	movs	r1, #12
 8001484:	f01e fe63 	bl	802014e <_ZdlPvj>
 8001488:	4620      	mov	r0, r4
 800148a:	bd10      	pop	{r4, pc}

0800148c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800148c:	6803      	ldr	r3, [r0, #0]
{
 800148e:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001490:	691b      	ldr	r3, [r3, #16]
{
 8001492:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8001494:	b131      	cbz	r1, 80014a4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001496:	4798      	blx	r3
 8001498:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800149a:	6863      	ldr	r3, [r4, #4]
 800149c:	1a9b      	subs	r3, r3, r2
 800149e:	4403      	add	r3, r0
 80014a0:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 80014a2:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 80014a4:	4798      	blx	r3
 80014a6:	60a0      	str	r0, [r4, #8]
}
 80014a8:	e7fb      	b.n	80014a2 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>
	...

080014ac <_ZN20STM32TouchController4initEv>:
extern I2C_HandleTypeDef hi2c3;

void STM32TouchController::init()
{
    /* Initialize the TS driver structure */
    tsDriver = &ft5336_ts_drv;
 80014ac:	4b02      	ldr	r3, [pc, #8]	@ (80014b8 <_ZN20STM32TouchController4initEv+0xc>)

    /* Initialize the TS driver */
    tsDriver->Start(TS_I2C_ADDRESS);
 80014ae:	2070      	movs	r0, #112	@ 0x70
    tsDriver = &ft5336_ts_drv;
 80014b0:	4a02      	ldr	r2, [pc, #8]	@ (80014bc <_ZN20STM32TouchController4initEv+0x10>)
 80014b2:	6013      	str	r3, [r2, #0]
    tsDriver->Start(TS_I2C_ADDRESS);
 80014b4:	68db      	ldr	r3, [r3, #12]
 80014b6:	4718      	bx	r3
 80014b8:	20000010 	.word	0x20000010
 80014bc:	200004a0 	.word	0x200004a0

080014c0 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80014c0:	4770      	bx	lr

080014c2 <_ZN20STM32TouchControllerD0Ev>:
 80014c2:	b510      	push	{r4, lr}
 80014c4:	4604      	mov	r4, r0
 80014c6:	2104      	movs	r1, #4
 80014c8:	f01e fe41 	bl	802014e <_ZdlPvj>
 80014cc:	4620      	mov	r0, r4
 80014ce:	bd10      	pop	{r4, pc}

080014d0 <_ZN20STM32TouchController11sampleTouchERlS0_>:
}

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 80014d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (tsDriver)
 80014d2:	4e0e      	ldr	r6, [pc, #56]	@ (800150c <_ZN20STM32TouchController11sampleTouchERlS0_+0x3c>)
{
 80014d4:	460d      	mov	r5, r1
 80014d6:	4614      	mov	r4, r2
    if (tsDriver)
 80014d8:	6833      	ldr	r3, [r6, #0]
 80014da:	b913      	cbnz	r3, 80014e2 <_ZN20STM32TouchController11sampleTouchERlS0_+0x12>
            x = (int32_t)_x;
            y = (int32_t)_y;
            return true;
        }
    }
    return false;
 80014dc:	2000      	movs	r0, #0
}
 80014de:	b002      	add	sp, #8
 80014e0:	bd70      	pop	{r4, r5, r6, pc}
        if (tsDriver->DetectTouch(TS_I2C_ADDRESS))
 80014e2:	691b      	ldr	r3, [r3, #16]
 80014e4:	2070      	movs	r0, #112	@ 0x70
 80014e6:	4798      	blx	r3
 80014e8:	2800      	cmp	r0, #0
 80014ea:	d0f7      	beq.n	80014dc <_ZN20STM32TouchController11sampleTouchERlS0_+0xc>
            tsDriver->GetXY(TS_I2C_ADDRESS, &_y, &_x);
 80014ec:	6833      	ldr	r3, [r6, #0]
 80014ee:	2070      	movs	r0, #112	@ 0x70
 80014f0:	aa01      	add	r2, sp, #4
 80014f2:	f10d 0106 	add.w	r1, sp, #6
 80014f6:	695b      	ldr	r3, [r3, #20]
 80014f8:	4798      	blx	r3
            x = (int32_t)_x;
 80014fa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80014fe:	2001      	movs	r0, #1
 8001500:	602b      	str	r3, [r5, #0]
            y = (int32_t)_y;
 8001502:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001506:	6023      	str	r3, [r4, #0]
            return true;
 8001508:	e7e9      	b.n	80014de <_ZN20STM32TouchController11sampleTouchERlS0_+0xe>
 800150a:	bf00      	nop
 800150c:	200004a0 	.word	0x200004a0

08001510 <TS_IO_Write>:
  * @param  Reg: Reg address
  * @param  Value: Data to be written
  * @retval None
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8001510:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8001512:	2301      	movs	r3, #1
{
 8001514:	f88d 2017 	strb.w	r2, [sp, #23]
    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8001518:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800151c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001520:	f10d 0217 	add.w	r2, sp, #23
 8001524:	9200      	str	r2, [sp, #0]
 8001526:	460a      	mov	r2, r1
 8001528:	4601      	mov	r1, r0
 800152a:	4805      	ldr	r0, [pc, #20]	@ (8001540 <TS_IO_Write+0x30>)
 800152c:	f003 f9a4 	bl	8004878 <HAL_I2C_Mem_Write>
    if (status != HAL_OK)
 8001530:	b110      	cbz	r0, 8001538 <TS_IO_Write+0x28>
    HAL_I2C_DeInit(i2c_handler);
 8001532:	4803      	ldr	r0, [pc, #12]	@ (8001540 <TS_IO_Write+0x30>)
 8001534:	f003 f987 	bl	8004846 <HAL_I2C_DeInit>
    I2Cx_WriteMultiple(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&Value, 1);
}
 8001538:	b007      	add	sp, #28
 800153a:	f85d fb04 	ldr.w	pc, [sp], #4
 800153e:	bf00      	nop
 8001540:	20000394 	.word	0x20000394

08001544 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Reg address
  * @retval Data to be read
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8001544:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    uint8_t read_value = 0;
 8001546:	2300      	movs	r3, #0
{
 8001548:	460a      	mov	r2, r1
    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 800154a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
    uint8_t read_value = 0;
 800154e:	f88d 3017 	strb.w	r3, [sp, #23]
    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8001552:	2301      	movs	r3, #1
 8001554:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8001558:	f10d 0117 	add.w	r1, sp, #23
 800155c:	9100      	str	r1, [sp, #0]
 800155e:	4601      	mov	r1, r0
 8001560:	4805      	ldr	r0, [pc, #20]	@ (8001578 <TS_IO_Read+0x34>)
 8001562:	f003 fa63 	bl	8004a2c <HAL_I2C_Mem_Read>
    if (status != HAL_OK)
 8001566:	b110      	cbz	r0, 800156e <TS_IO_Read+0x2a>
    HAL_I2C_DeInit(i2c_handler);
 8001568:	4803      	ldr	r0, [pc, #12]	@ (8001578 <TS_IO_Read+0x34>)
 800156a:	f003 f96c 	bl	8004846 <HAL_I2C_DeInit>

    I2Cx_ReadMultiple(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&read_value, 1);

    return read_value;
}
 800156e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001572:	b007      	add	sp, #28
 8001574:	f85d fb04 	ldr.w	pc, [sp], #4
 8001578:	20000394 	.word	0x20000394

0800157c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800157c:	2803      	cmp	r0, #3
 800157e:	d823      	bhi.n	80015c8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
 8001580:	e8df f000 	tbb	[pc, r0]
 8001584:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001588:	4b10      	ldr	r3, [pc, #64]	@ (80015cc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800158a:	2110      	movs	r1, #16
 800158c:	4810      	ldr	r0, [pc, #64]	@ (80015d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 800158e:	681a      	ldr	r2, [r3, #0]
 8001590:	fab2 f282 	clz	r2, r2
 8001594:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001596:	f002 bfdd 	b.w	8004554 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800159a:	4b0c      	ldr	r3, [pc, #48]	@ (80015cc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800159c:	2140      	movs	r1, #64	@ 0x40
 800159e:	685a      	ldr	r2, [r3, #4]
 80015a0:	fab2 f282 	clz	r2, r2
 80015a4:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 80015a6:	480b      	ldr	r0, [pc, #44]	@ (80015d4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 80015a8:	e7f5      	b.n	8001596 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 80015aa:	4b08      	ldr	r3, [pc, #32]	@ (80015cc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80015ac:	2180      	movs	r1, #128	@ 0x80
 80015ae:	689a      	ldr	r2, [r3, #8]
 80015b0:	fab2 f282 	clz	r2, r2
 80015b4:	0952      	lsrs	r2, r2, #5
 80015b6:	e7f6      	b.n	80015a6 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80015b8:	4b04      	ldr	r3, [pc, #16]	@ (80015cc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80015ba:	2140      	movs	r1, #64	@ 0x40
 80015bc:	4806      	ldr	r0, [pc, #24]	@ (80015d8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
 80015be:	68da      	ldr	r2, [r3, #12]
 80015c0:	fab2 f282 	clz	r2, r2
 80015c4:	0952      	lsrs	r2, r2, #5
 80015c6:	e7e6      	b.n	8001596 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 80015c8:	4770      	bx	lr
 80015ca:	bf00      	nop
 80015cc:	200004a4 	.word	0x200004a4
 80015d0:	40020400 	.word	0x40020400
 80015d4:	40020800 	.word	0x40020800
 80015d8:	40021800 	.word	0x40021800

080015dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80015dc:	2803      	cmp	r0, #3
 80015de:	d823      	bhi.n	8001628 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
 80015e0:	e8df f000 	tbb	[pc, r0]
 80015e4:	1a130b02 	.word	0x1a130b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80015e8:	4b10      	ldr	r3, [pc, #64]	@ (800162c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80015ea:	2110      	movs	r1, #16
 80015ec:	4810      	ldr	r0, [pc, #64]	@ (8001630 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 80015ee:	681a      	ldr	r2, [r3, #0]
 80015f0:	3a00      	subs	r2, #0
 80015f2:	bf18      	it	ne
 80015f4:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80015f6:	f002 bfad 	b.w	8004554 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80015fa:	4b0c      	ldr	r3, [pc, #48]	@ (800162c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80015fc:	2140      	movs	r1, #64	@ 0x40
 80015fe:	685a      	ldr	r2, [r3, #4]
 8001600:	3a00      	subs	r2, #0
 8001602:	bf18      	it	ne
 8001604:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001606:	480b      	ldr	r0, [pc, #44]	@ (8001634 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 8001608:	e7f5      	b.n	80015f6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 800160a:	4b08      	ldr	r3, [pc, #32]	@ (800162c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800160c:	2180      	movs	r1, #128	@ 0x80
 800160e:	689a      	ldr	r2, [r3, #8]
 8001610:	3a00      	subs	r2, #0
 8001612:	bf18      	it	ne
 8001614:	2201      	movne	r2, #1
 8001616:	e7f6      	b.n	8001606 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001618:	4b04      	ldr	r3, [pc, #16]	@ (800162c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800161a:	2140      	movs	r1, #64	@ 0x40
 800161c:	4806      	ldr	r0, [pc, #24]	@ (8001638 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
 800161e:	68da      	ldr	r2, [r3, #12]
 8001620:	3a00      	subs	r2, #0
 8001622:	bf18      	it	ne
 8001624:	2201      	movne	r2, #1
 8001626:	e7e6      	b.n	80015f6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8001628:	4770      	bx	lr
 800162a:	bf00      	nop
 800162c:	200004a4 	.word	0x200004a4
 8001630:	40020400 	.word	0x40020400
 8001634:	40020800 	.word	0x40020800
 8001638:	40021800 	.word	0x40021800

0800163c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 800163c:	2803      	cmp	r0, #3
 800163e:	d80f      	bhi.n	8001660 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
 8001640:	e8df f000 	tbb	[pc, r0]
 8001644:	0b090602 	.word	0x0b090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001648:	2110      	movs	r1, #16
 800164a:	4806      	ldr	r0, [pc, #24]	@ (8001664 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800164c:	f002 bf87 	b.w	800455e <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001650:	2140      	movs	r1, #64	@ 0x40
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001652:	4805      	ldr	r0, [pc, #20]	@ (8001668 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
 8001654:	e7fa      	b.n	800164c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001656:	2180      	movs	r1, #128	@ 0x80
 8001658:	e7fb      	b.n	8001652 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800165a:	2140      	movs	r1, #64	@ 0x40
 800165c:	4803      	ldr	r0, [pc, #12]	@ (800166c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
 800165e:	e7f5      	b.n	800164c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 8001660:	4770      	bx	lr
 8001662:	bf00      	nop
 8001664:	40020400 	.word	0x40020400
 8001668:	40020800 	.word	0x40020800
 800166c:	40021800 	.word	0x40021800

08001670 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001670:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001672:	2803      	cmp	r0, #3
 8001674:	d813      	bhi.n	800169e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 8001676:	e8df f000 	tbb	[pc, r0]
 800167a:	0a02      	.short	0x0a02
 800167c:	0f0d      	.short	0x0f0d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800167e:	2110      	movs	r1, #16
 8001680:	4808      	ldr	r0, [pc, #32]	@ (80016a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001682:	f002 ff61 	bl	8004548 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001686:	1e43      	subs	r3, r0, #1
 8001688:	4258      	negs	r0, r3
 800168a:	4158      	adcs	r0, r3
 800168c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800168e:	2140      	movs	r1, #64	@ 0x40
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001690:	4805      	ldr	r0, [pc, #20]	@ (80016a8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
 8001692:	e7f6      	b.n	8001682 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001694:	2180      	movs	r1, #128	@ 0x80
 8001696:	e7fb      	b.n	8001690 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001698:	2140      	movs	r1, #64	@ 0x40
 800169a:	4804      	ldr	r0, [pc, #16]	@ (80016ac <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x3c>)
 800169c:	e7f1      	b.n	8001682 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
    switch (id)
 800169e:	2000      	movs	r0, #0
 80016a0:	e7f1      	b.n	8001686 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 80016a2:	bf00      	nop
 80016a4:	40020400 	.word	0x40020400
 80016a8:	40020800 	.word	0x40020800
 80016ac:	40021800 	.word	0x40021800

080016b0 <_ZN8touchgfx4GPIO4initEv>:
{
 80016b0:	b570      	push	{r4, r5, r6, lr}
 80016b2:	4d08      	ldr	r5, [pc, #32]	@ (80016d4 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80016b4:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80016b6:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80016b8:	b2e0      	uxtb	r0, r4
 80016ba:	f7ff ffd9 	bl	8001670 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80016be:	b118      	cbz	r0, 80016c8 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80016c0:	682b      	ldr	r3, [r5, #0]
 80016c2:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80016c4:	bf18      	it	ne
 80016c6:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80016c8:	3401      	adds	r4, #1
 80016ca:	3504      	adds	r5, #4
 80016cc:	2c05      	cmp	r4, #5
 80016ce:	d1f3      	bne.n	80016b8 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80016d0:	bd70      	pop	{r4, r5, r6, pc}
 80016d2:	bf00      	nop
 80016d4:	200004a4 	.word	0x200004a4

080016d8 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80016d8:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80016da:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 80016de:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 80016e2:	4770      	bx	lr

080016e4 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80016e4:	2000      	movs	r0, #0
 80016e6:	4770      	bx	lr

080016e8 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80016e8:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80016ea:	3900      	subs	r1, #0
 80016ec:	4b02      	ldr	r3, [pc, #8]	@ (80016f8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 80016ee:	bf18      	it	ne
 80016f0:	2101      	movne	r1, #1
 80016f2:	7019      	strb	r1, [r3, #0]
    }
 80016f4:	4770      	bx	lr
 80016f6:	bf00      	nop
 80016f8:	200169ff 	.word	0x200169ff

080016fc <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80016fc:	2000      	movs	r0, #0
 80016fe:	4770      	bx	lr

08001700 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001700:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8001702:	b10b      	cbz	r3, 8001708 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001704:	4608      	mov	r0, r1
 8001706:	4718      	bx	r3
        }
    }
 8001708:	4770      	bx	lr

0800170a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800170a:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800170e:	4770      	bx	lr

08001710 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001710:	6840      	ldr	r0, [r0, #4]
 8001712:	6803      	ldr	r3, [r0, #0]
 8001714:	699b      	ldr	r3, [r3, #24]
 8001716:	4718      	bx	r3

08001718 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001718:	4770      	bx	lr
	...

0800171c <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationBuffer[(480 * 272 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 800171c:	b538      	push	{r3, r4, r5, lr}
 800171e:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001720:	f000 fce0 	bl	80020e4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);  //enable the animation storage to allow slide animations
 8001724:	4908      	ldr	r1, [pc, #32]	@ (8001748 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
 8001726:	6823      	ldr	r3, [r4, #0]
 8001728:	4620      	mov	r0, r4
    lockDMAToFrontPorch(false);
    instrumentation.init();
 800172a:	4d08      	ldr	r5, [pc, #32]	@ (800174c <_ZN11TouchGFXHAL10initializeEv+0x30>)
    setAnimationStorage((void*)animationBuffer);  //enable the animation storage to allow slide animations
 800172c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001730:	4798      	blx	r3
        lockDMAToPorch = enableLock;
 8001732:	2300      	movs	r3, #0
    instrumentation.init();
 8001734:	4628      	mov	r0, r5
 8001736:	f884 304a 	strb.w	r3, [r4, #74]	@ 0x4a
 800173a:	f7ff fe7b 	bl	8001434 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 800173e:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 8001740:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 8001742:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
}
 8001746:	bd38      	pop	{r3, r4, r5, pc}
 8001748:	c0000000 	.word	0xc0000000
 800174c:	200004b4 	.word	0x200004b4

08001750 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001750:	f000 bc92 	b.w	8002078 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001754 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001754:	f000 bc96 	b.w	8002084 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001758 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8001758:	b570      	push	{r4, r5, r6, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800175a:	f000 fce1 	bl	8002120 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 800175e:	4910      	ldr	r1, [pc, #64]	@ (80017a0 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x48>)
 8001760:	2300      	movs	r3, #0
 8001762:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001766:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 800176a:	f8d1 3080 	ldr.w	r3, [r1, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800176e:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001772:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8001776:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800177a:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800177c:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001780:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001782:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8001786:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001788:	f8c1 5274 	str.w	r5, [r1, #628]	@ 0x274
      } while (ways-- != 0U);
 800178c:	d2f9      	bcs.n	8001782 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2a>
    } while(sets-- != 0U);
 800178e:	3b20      	subs	r3, #32
 8001790:	f113 0f20 	cmn.w	r3, #32
 8001794:	d1f2      	bne.n	800177c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x24>
 8001796:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800179a:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
 800179e:	bd70      	pop	{r4, r5, r6, pc}
 80017a0:	e000ed00 	.word	0xe000ed00

080017a4 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80017a4:	f000 bcbe 	b.w	8002124 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

080017a8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80017a8:	f000 bc42 	b.w	8002030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080017ac <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80017ac:	f000 bcbc 	b.w	8002128 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080017b0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80017b0:	f000 bcc4 	b.w	800213c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080017b4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80017b4:	f000 bc46 	b.w	8002044 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080017b8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80017b8:	b510      	push	{r4, lr}
 80017ba:	4604      	mov	r4, r0
        swapFrameBuffers();
 80017bc:	f009 f816 	bl	800a7ec <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80017c0:	6823      	ldr	r3, [r4, #0]
 80017c2:	4620      	mov	r0, r4
 80017c4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 80017c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80017cc:	4718      	bx	r3

080017ce <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80017ce:	f008 ba6a 	b.w	8009ca6 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080017d2 <_ZN11TouchGFXHALD0Ev>:
 80017d2:	b510      	push	{r4, lr}
 80017d4:	4604      	mov	r4, r0
 80017d6:	217c      	movs	r1, #124	@ 0x7c
 80017d8:	f01e fcb9 	bl	802014e <_ZdlPvj>
 80017dc:	4620      	mov	r0, r4
 80017de:	bd10      	pop	{r4, pc}

080017e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80017e0:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
 80017e4:	4b0d      	ldr	r3, [pc, #52]	@ (800181c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
 80017e6:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80017e8:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 80017ec:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80017ee:	428c      	cmp	r4, r1
 80017f0:	d009      	beq.n	8001806 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80017f2:	b93a      	cbnz	r2, 8001804 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 80017f4:	490a      	ldr	r1, [pc, #40]	@ (8001820 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80017f6:	4a0b      	ldr	r2, [pc, #44]	@ (8001824 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80017f8:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80017fa:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 80017fc:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 80017fe:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001800:	800c      	strh	r4, [r1, #0]
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
 8001802:	701a      	strb	r2, [r3, #0]
        }
    }
 8001804:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001806:	2a00      	cmp	r2, #0
 8001808:	d0fc      	beq.n	8001804 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800180a:	4a06      	ldr	r2, [pc, #24]	@ (8001824 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800180c:	4904      	ldr	r1, [pc, #16]	@ (8001820 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800180e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001810:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001812:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001814:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 8001816:	2200      	movs	r2, #0
 8001818:	e7f3      	b.n	8001802 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800181a:	bf00      	nop
 800181c:	200169f8 	.word	0x200169f8
 8001820:	200169f6 	.word	0x200169f6
 8001824:	200169f4 	.word	0x200169f4

08001828 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001828:	b570      	push	{r4, r5, r6, lr}
 800182a:	460d      	mov	r5, r1
 800182c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800182e:	b935      	cbnz	r5, 800183e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001830:	4b09      	ldr	r3, [pc, #36]	@ (8001858 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001832:	f240 21d2 	movw	r1, #722	@ 0x2d2
 8001836:	4a09      	ldr	r2, [pc, #36]	@ (800185c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001838:	4809      	ldr	r0, [pc, #36]	@ (8001860 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 800183a:	f01f f9f3 	bl	8020c24 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800183e:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001842:	3a00      	subs	r2, #0
 8001844:	4b07      	ldr	r3, [pc, #28]	@ (8001864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001846:	bf18      	it	ne
 8001848:	2201      	movne	r2, #1
 800184a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800184c:	6803      	ldr	r3, [r0, #0]
    }
 800184e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001852:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001856:	4718      	bx	r3
 8001858:	08021db8 	.word	0x08021db8
 800185c:	08021df0 	.word	0x08021df0
 8001860:	08021e3e 	.word	0x08021e3e
 8001864:	200169fe 	.word	0x200169fe

08001868 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001868:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800186a:	4b09      	ldr	r3, [pc, #36]	@ (8001890 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 800186c:	881b      	ldrh	r3, [r3, #0]
 800186e:	428b      	cmp	r3, r1
 8001870:	d803      	bhi.n	800187a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001872:	4b08      	ldr	r3, [pc, #32]	@ (8001894 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001874:	881b      	ldrh	r3, [r3, #0]
 8001876:	4293      	cmp	r3, r2
 8001878:	d905      	bls.n	8001886 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800187a:	4b07      	ldr	r3, [pc, #28]	@ (8001898 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 800187c:	219e      	movs	r1, #158	@ 0x9e
 800187e:	4a07      	ldr	r2, [pc, #28]	@ (800189c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001880:	4807      	ldr	r0, [pc, #28]	@ (80018a0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001882:	f01f f9cf 	bl	8020c24 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001886:	4b07      	ldr	r3, [pc, #28]	@ (80018a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001888:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800188a:	4b07      	ldr	r3, [pc, #28]	@ (80018a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 800188c:	801a      	strh	r2, [r3, #0]
    }
 800188e:	bd08      	pop	{r3, pc}
 8001890:	200169f4 	.word	0x200169f4
 8001894:	200169f6 	.word	0x200169f6
 8001898:	08021e83 	.word	0x08021e83
 800189c:	08021ee6 	.word	0x08021ee6
 80018a0:	08021e3e 	.word	0x08021e3e
 80018a4:	200169fa 	.word	0x200169fa
 80018a8:	200169fc 	.word	0x200169fc

080018ac <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 80018ac:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 80018ae:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 80018b2:	b118      	cbz	r0, 80018bc <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 80018b4:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 80018b6:	6803      	ldr	r3, [r0, #0]
 80018b8:	681b      	ldr	r3, [r3, #0]
 80018ba:	4718      	bx	r3
    }
 80018bc:	4770      	bx	lr
	...

080018c0 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 80018c0:	4601      	mov	r1, r0
 80018c2:	b508      	push	{r3, lr}
        return instance;
 80018c4:	4b03      	ldr	r3, [pc, #12]	@ (80018d4 <IdleTaskHook+0x14>)
 80018c6:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 80018c8:	b101      	cbz	r1, 80018cc <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 80018ca:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 80018cc:	f008 ffa8 	bl	800a820 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 80018d0:	2001      	movs	r0, #1
 80018d2:	bd08      	pop	{r3, pc}
 80018d4:	20016a00 	.word	0x20016a00

080018d8 <_GLOBAL__sub_I_instrumentation>:
        : cc_consumed(0),
 80018d8:	4b03      	ldr	r3, [pc, #12]	@ (80018e8 <_GLOBAL__sub_I_instrumentation+0x10>)
 80018da:	2200      	movs	r2, #0
 80018dc:	605a      	str	r2, [r3, #4]
          cc_in(0)
 80018de:	609a      	str	r2, [r3, #8]
 80018e0:	4a02      	ldr	r2, [pc, #8]	@ (80018ec <_GLOBAL__sub_I_instrumentation+0x14>)
 80018e2:	601a      	str	r2, [r3, #0]
}
 80018e4:	4770      	bx	lr
 80018e6:	bf00      	nop
 80018e8:	200004b4 	.word	0x200004b4
 80018ec:	08021d80 	.word	0x08021d80

080018f0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80018f0:	2101      	movs	r1, #1
 80018f2:	2200      	movs	r2, #0
{
 80018f4:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80018f6:	4608      	mov	r0, r1
 80018f8:	f005 fb0c 	bl	8006f14 <osSemaphoreNew>
 80018fc:	4b0a      	ldr	r3, [pc, #40]	@ (8001928 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80018fe:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001900:	b928      	cbnz	r0, 800190e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001902:	4b0a      	ldr	r3, [pc, #40]	@ (800192c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001904:	2128      	movs	r1, #40	@ 0x28
 8001906:	4a0a      	ldr	r2, [pc, #40]	@ (8001930 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001908:	480a      	ldr	r0, [pc, #40]	@ (8001934 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800190a:	f01f f98b 	bl	8020c24 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800190e:	2200      	movs	r2, #0
 8001910:	2104      	movs	r1, #4
 8001912:	2001      	movs	r0, #1
 8001914:	f005 fbc8 	bl	80070a8 <osMessageQueueNew>
 8001918:	4b07      	ldr	r3, [pc, #28]	@ (8001938 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800191a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800191c:	b918      	cbnz	r0, 8001926 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 800191e:	4b07      	ldr	r3, [pc, #28]	@ (800193c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001920:	212c      	movs	r1, #44	@ 0x2c
 8001922:	4a03      	ldr	r2, [pc, #12]	@ (8001930 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001924:	e7f0      	b.n	8001908 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001926:	bd08      	pop	{r3, pc}
 8001928:	200004c4 	.word	0x200004c4
 800192c:	08022004 	.word	0x08022004
 8001930:	0802204d 	.word	0x0802204d
 8001934:	0802207c 	.word	0x0802207c
 8001938:	200004c0 	.word	0x200004c0
 800193c:	080220db 	.word	0x080220db

08001940 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001940:	4b02      	ldr	r3, [pc, #8]	@ (800194c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001942:	f04f 31ff 	mov.w	r1, #4294967295
 8001946:	6818      	ldr	r0, [r3, #0]
 8001948:	f005 bb3c 	b.w	8006fc4 <osSemaphoreAcquire>
 800194c:	200004c4 	.word	0x200004c4

08001950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001950:	4b01      	ldr	r3, [pc, #4]	@ (8001958 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001952:	6818      	ldr	r0, [r3, #0]
 8001954:	f005 bb72 	b.w	800703c <osSemaphoreRelease>
 8001958:	200004c4 	.word	0x200004c4

0800195c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 800195c:	4b02      	ldr	r3, [pc, #8]	@ (8001968 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800195e:	2100      	movs	r1, #0
 8001960:	6818      	ldr	r0, [r3, #0]
 8001962:	f005 bb2f 	b.w	8006fc4 <osSemaphoreAcquire>
 8001966:	bf00      	nop
 8001968:	200004c4 	.word	0x200004c4

0800196c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 800196c:	f7ff bff0 	b.w	8001950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001970 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001970:	2300      	movs	r3, #0
 8001972:	4803      	ldr	r0, [pc, #12]	@ (8001980 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001974:	4903      	ldr	r1, [pc, #12]	@ (8001984 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001976:	461a      	mov	r2, r3
 8001978:	6800      	ldr	r0, [r0, #0]
 800197a:	f005 bbdb 	b.w	8007134 <osMessageQueuePut>
 800197e:	bf00      	nop
 8001980:	200004c0 	.word	0x200004c0
 8001984:	20000004 	.word	0x20000004

08001988 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001988:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800198a:	2300      	movs	r3, #0
 800198c:	4c07      	ldr	r4, [pc, #28]	@ (80019ac <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800198e:	a901      	add	r1, sp, #4
 8001990:	461a      	mov	r2, r3
 8001992:	6820      	ldr	r0, [r4, #0]
 8001994:	f005 fc10 	bl	80071b8 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001998:	f04f 33ff 	mov.w	r3, #4294967295
 800199c:	2200      	movs	r2, #0
 800199e:	a901      	add	r1, sp, #4
 80019a0:	6820      	ldr	r0, [r4, #0]
 80019a2:	f005 fc09 	bl	80071b8 <osMessageQueueGet>
}
 80019a6:	b002      	add	sp, #8
 80019a8:	bd10      	pop	{r4, pc}
 80019aa:	bf00      	nop
 80019ac:	200004c0 	.word	0x200004c0

080019b0 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80019b0:	6803      	ldr	r3, [r0, #0]
 80019b2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80019b4:	4718      	bx	r3

080019b6 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80019b6:	2001      	movs	r0, #1
 80019b8:	4770      	bx	lr

080019ba <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80019ba:	6803      	ldr	r3, [r0, #0]
 80019bc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80019be:	4718      	bx	r3

080019c0 <_ZN8STM32DMA10initializeEv>:
}

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80019c0:	4b0d      	ldr	r3, [pc, #52]	@ (80019f8 <_ZN8STM32DMA10initializeEv+0x38>)
{
 80019c2:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80019c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019c6:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80019ca:	631a      	str	r2, [r3, #48]	@ 0x30
 80019cc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019ce:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 80019d2:	9201      	str	r2, [sp, #4]
 80019d4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80019d6:	691a      	ldr	r2, [r3, #16]
 80019d8:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80019dc:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80019de:	691a      	ldr	r2, [r3, #16]
 80019e0:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 80019e4:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80019e6:	4b05      	ldr	r3, [pc, #20]	@ (80019fc <_ZN8STM32DMA10initializeEv+0x3c>)
 80019e8:	4a05      	ldr	r2, [pc, #20]	@ (8001a00 <_ZN8STM32DMA10initializeEv+0x40>)
 80019ea:	611a      	str	r2, [r3, #16]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80019ec:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80019f0:	4b04      	ldr	r3, [pc, #16]	@ (8001a04 <_ZN8STM32DMA10initializeEv+0x44>)
 80019f2:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80019f4:	b002      	add	sp, #8
 80019f6:	4770      	bx	lr
 80019f8:	40023800 	.word	0x40023800
 80019fc:	200003e8 	.word	0x200003e8
 8001a00:	08001c91 	.word	0x08001c91
 8001a04:	e000e100 	.word	0xe000e100

08001a08 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001a08:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8001a0c:	4770      	bx	lr
	...

08001a10 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001a10:	4b05      	ldr	r3, [pc, #20]	@ (8001a28 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001a12:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001a16:	6003      	str	r3, [r0, #0]
 8001a18:	4b04      	ldr	r3, [pc, #16]	@ (8001a2c <_ZN8STM32DMAD1Ev+0x1c>)
 8001a1a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001a1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001a22:	f3bf 8f6f 	isb	sy
}
 8001a26:	4770      	bx	lr
 8001a28:	0802228c 	.word	0x0802228c
 8001a2c:	e000e100 	.word	0xe000e100

08001a30 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001a30:	b510      	push	{r4, lr}
 8001a32:	4604      	mov	r4, r0
}
 8001a34:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001a38:	f7ff ffea 	bl	8001a10 <_ZN8STM32DMAD1Ev>
 8001a3c:	4620      	mov	r0, r4
 8001a3e:	f01e fb86 	bl	802014e <_ZdlPvj>
 8001a42:	4620      	mov	r0, r4
 8001a44:	bd10      	pop	{r4, pc}
	...

08001a48 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8001a48:	b508      	push	{r3, lr}
    switch (format)
 8001a4a:	280a      	cmp	r0, #10
 8001a4c:	d809      	bhi.n	8001a62 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8001a4e:	e8df f000 	tbb	[pc, r0]
 8001a52:	1006      	.short	0x1006
 8001a54:	0808080e 	.word	0x0808080e
 8001a58:	10101008 	.word	0x10101008
 8001a5c:	10          	.byte	0x10
 8001a5d:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001a5e:	2002      	movs	r0, #2
}
 8001a60:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001a62:	4b05      	ldr	r3, [pc, #20]	@ (8001a78 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8001a64:	2186      	movs	r1, #134	@ 0x86
 8001a66:	4a05      	ldr	r2, [pc, #20]	@ (8001a7c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001a68:	4805      	ldr	r0, [pc, #20]	@ (8001a80 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001a6a:	f01f f8db 	bl	8020c24 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001a6e:	2000      	movs	r0, #0
 8001a70:	e7f6      	b.n	8001a60 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001a72:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001a74:	e7f4      	b.n	8001a60 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001a76:	bf00      	nop
 8001a78:	0802211d 	.word	0x0802211d
 8001a7c:	08022138 	.word	0x08022138
 8001a80:	08022183 	.word	0x08022183

08001a84 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001a84:	b538      	push	{r3, r4, r5, lr}
 8001a86:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001a88:	7f88      	ldrb	r0, [r1, #30]
 8001a8a:	f7ff ffdd 	bl	8001a48 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001a8e:	4b17      	ldr	r3, [pc, #92]	@ (8001aec <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001a90:	8aa5      	ldrh	r5, [r4, #20]
 8001a92:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001a94:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001a96:	ea42 4205 	orr.w	r2, r2, r5, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001a9a:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001a9c:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001a9e:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001aa0:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001aa2:	1b52      	subs	r2, r2, r5
 8001aa4:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001aa6:	6825      	ldr	r5, [r4, #0]
 8001aa8:	2d08      	cmp	r5, #8
 8001aaa:	d10e      	bne.n	8001aca <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001aac:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001aae:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001ab0:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001ab2:	4a0f      	ldr	r2, [pc, #60]	@ (8001af0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001ab4:	7f20      	ldrb	r0, [r4, #28]
 8001ab6:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001aba:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001abc:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001abe:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001ac0:	4a0c      	ldr	r2, [pc, #48]	@ (8001af4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ac2:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001ac4:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001ac6:	601a      	str	r2, [r3, #0]
    }
}
 8001ac8:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001aca:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001acc:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001ace:	611a      	str	r2, [r3, #16]
 8001ad0:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001ad2:	0a0a      	lsrs	r2, r1, #8
 8001ad4:	0948      	lsrs	r0, r1, #5
 8001ad6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001ada:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8001ade:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8001ae2:	4302      	orrs	r2, r0
 8001ae4:	430a      	orrs	r2, r1
 8001ae6:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001ae8:	4a03      	ldr	r2, [pc, #12]	@ (8001af8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001aea:	e7ec      	b.n	8001ac6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001aec:	4002b000 	.word	0x4002b000
 8001af0:	00010009 	.word	0x00010009
 8001af4:	00020201 	.word	0x00020201
 8001af8:	00030201 	.word	0x00030201

08001afc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8001afc:	b508      	push	{r3, lr}
    switch (format)
 8001afe:	280b      	cmp	r0, #11
 8001b00:	d80b      	bhi.n	8001b1a <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8001b02:	e8df f000 	tbb	[pc, r0]
 8001b06:	1206      	.short	0x1206
 8001b08:	0a0a0a10 	.word	0x0a0a0a10
 8001b0c:	0808080a 	.word	0x0808080a
 8001b10:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001b12:	2002      	movs	r0, #2
}
 8001b14:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001b16:	2005      	movs	r0, #5
        break;
 8001b18:	e7fc      	b.n	8001b14 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8001b1a:	4b05      	ldr	r3, [pc, #20]	@ (8001b30 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001b1c:	2165      	movs	r1, #101	@ 0x65
 8001b1e:	4a05      	ldr	r2, [pc, #20]	@ (8001b34 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001b20:	4805      	ldr	r0, [pc, #20]	@ (8001b38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8001b22:	f01f f87f 	bl	8020c24 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001b26:	2000      	movs	r0, #0
 8001b28:	e7f4      	b.n	8001b14 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001b2a:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001b2c:	e7f2      	b.n	8001b14 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001b2e:	bf00      	nop
 8001b30:	0802211d 	.word	0x0802211d
 8001b34:	080221e0 	.word	0x080221e0
 8001b38:	08022183 	.word	0x08022183

08001b3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8001b3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001b40:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8001b44:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001b46:	4640      	mov	r0, r8
 8001b48:	f7ff ffd8 	bl	8001afc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001b4c:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001b4e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001b50:	4638      	mov	r0, r7
 8001b52:	f7ff ffd3 	bl	8001afc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8001b56:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001b58:	4638      	mov	r0, r7
 8001b5a:	f7ff ff75 	bl	8001a48 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001b5e:	8aa1      	ldrh	r1, [r4, #20]
 8001b60:	8b62      	ldrh	r2, [r4, #26]
 8001b62:	4b43      	ldr	r3, [pc, #268]	@ (8001c70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001b64:	1a52      	subs	r2, r2, r1
 8001b66:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001b68:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001b6a:	8b22      	ldrh	r2, [r4, #24]
 8001b6c:	1a52      	subs	r2, r2, r1
 8001b6e:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001b70:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001b72:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001b74:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001b78:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001b7a:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001b7c:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001b7e:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001b80:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8001b82:	6820      	ldr	r0, [r4, #0]
 8001b84:	2880      	cmp	r0, #128	@ 0x80
 8001b86:	d028      	beq.n	8001bda <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8001b88:	7f22      	ldrb	r2, [r4, #28]
 8001b8a:	d80f      	bhi.n	8001bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8001b8c:	2820      	cmp	r0, #32
 8001b8e:	d066      	beq.n	8001c5e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
 8001b90:	2840      	cmp	r0, #64	@ 0x40
 8001b92:	d064      	beq.n	8001c5e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x122>
 8001b94:	2804      	cmp	r0, #4
 8001b96:	d01a      	beq.n	8001bce <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001b98:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001b9c:	4b34      	ldr	r3, [pc, #208]	@ (8001c70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001b9e:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001ba0:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001ba4:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001ba6:	d060      	beq.n	8001c6a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12e>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001ba8:	4a32      	ldr	r2, [pc, #200]	@ (8001c74 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001baa:	e044      	b.n	8001c36 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8001bac:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8001bb0:	d004      	beq.n	8001bbc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8001bb2:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8001bb6:	d1ef      	bne.n	8001b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bb8:	482f      	ldr	r0, [pc, #188]	@ (8001c78 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001bba:	e000      	b.n	8001bbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bbc:	482f      	ldr	r0, [pc, #188]	@ (8001c7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bbe:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8001bc2:	61da      	str	r2, [r3, #28]
 8001bc4:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001bc6:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001bc8:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001bca:	6159      	str	r1, [r3, #20]
 8001bcc:	e032      	b.n	8001c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bce:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001bd2:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001bd6:	61da      	str	r2, [r3, #28]
 8001bd8:	e7f6      	b.n	8001bc8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001bda:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001bdc:	1d02      	adds	r2, r0, #4
 8001bde:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001be0:	7f22      	ldrb	r2, [r4, #28]
 8001be2:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001be6:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001bea:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001bec:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001bee:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001bf0:	7801      	ldrb	r1, [r0, #0]
 8001bf2:	b141      	cbz	r1, 8001c06 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8001bf4:	2901      	cmp	r1, #1
 8001bf6:	d021      	beq.n	8001c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8001bf8:	4b21      	ldr	r3, [pc, #132]	@ (8001c80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8001bfa:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8001bfe:	4a21      	ldr	r2, [pc, #132]	@ (8001c84 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001c00:	4821      	ldr	r0, [pc, #132]	@ (8001c88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8001c02:	f01f f80f 	bl	8020c24 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001c06:	69da      	ldr	r2, [r3, #28]
 8001c08:	8841      	ldrh	r1, [r0, #2]
 8001c0a:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001c0e:	3901      	subs	r1, #1
 8001c10:	f022 0210 	bic.w	r2, r2, #16
 8001c14:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 8001c18:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001c1a:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001c1c:	4b14      	ldr	r3, [pc, #80]	@ (8001c70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001c1e:	69da      	ldr	r2, [r3, #28]
 8001c20:	f042 0220 	orr.w	r2, r2, #32
 8001c24:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001c26:	69da      	ldr	r2, [r3, #28]
 8001c28:	0692      	lsls	r2, r2, #26
 8001c2a:	d4fc      	bmi.n	8001c26 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001c2c:	2210      	movs	r2, #16
 8001c2e:	609a      	str	r2, [r3, #8]
            if (blend)
 8001c30:	2900      	cmp	r1, #0
 8001c32:	d0b9      	beq.n	8001ba8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001c34:	4a15      	ldr	r2, [pc, #84]	@ (8001c8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001c36:	601a      	str	r2, [r3, #0]
}
 8001c38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8001c3c:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001c40:	69da      	ldr	r2, [r3, #28]
 8001c42:	8840      	ldrh	r0, [r0, #2]
 8001c44:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
                if (blitOp.alpha == 255)
 8001c48:	bf18      	it	ne
 8001c4a:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001c4c:	3801      	subs	r0, #1
 8001c4e:	f022 0210 	bic.w	r2, r2, #16
 8001c52:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001c56:	f042 0210 	orr.w	r2, r2, #16
 8001c5a:	61da      	str	r2, [r3, #28]
                break;
 8001c5c:	e7de      	b.n	8001c1c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001c5e:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001c62:	4b03      	ldr	r3, [pc, #12]	@ (8001c70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>)
 8001c64:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001c68:	e7b5      	b.n	8001bd6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001c6a:	f240 2201 	movw	r2, #513	@ 0x201
 8001c6e:	e7e2      	b.n	8001c36 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8001c70:	4002b000 	.word	0x4002b000
 8001c74:	00010201 	.word	0x00010201
 8001c78:	00020009 	.word	0x00020009
 8001c7c:	0002000a 	.word	0x0002000a
 8001c80:	0802222a 	.word	0x0802222a
 8001c84:	08022244 	.word	0x08022244
 8001c88:	08022183 	.word	0x08022183
 8001c8c:	00020201 	.word	0x00020201

08001c90 <DMA2D_XferCpltCallback>:
 8001c90:	4b02      	ldr	r3, [pc, #8]	@ (8001c9c <DMA2D_XferCpltCallback+0xc>)
 8001c92:	681b      	ldr	r3, [r3, #0]
 8001c94:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001c96:	6803      	ldr	r3, [r0, #0]
 8001c98:	695b      	ldr	r3, [r3, #20]
 8001c9a:	4718      	bx	r3
 8001c9c:	20016a00 	.word	0x20016a00

08001ca0 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001ca0:	b570      	push	{r4, r5, r6, lr}
 8001ca2:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001ca4:	4b0a      	ldr	r3, [pc, #40]	@ (8001cd0 <_ZN8STM32DMAC1Ev+0x30>)
 8001ca6:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001ca8:	2600      	movs	r6, #0
 8001caa:	4625      	mov	r5, r4
 8001cac:	2260      	movs	r2, #96	@ 0x60
 8001cae:	6060      	str	r0, [r4, #4]
 8001cb0:	7226      	strb	r6, [r4, #8]
 8001cb2:	7266      	strb	r6, [r4, #9]
 8001cb4:	f845 3b20 	str.w	r3, [r5], #32
 8001cb8:	4629      	mov	r1, r5
 8001cba:	f008 ff07 	bl	800aacc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001cbe:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8001cc2:	60ee      	str	r6, [r5, #12]
 8001cc4:	3524      	adds	r5, #36	@ 0x24
 8001cc6:	429d      	cmp	r5, r3
 8001cc8:	d1fb      	bne.n	8001cc2 <_ZN8STM32DMAC1Ev+0x22>
}
 8001cca:	4620      	mov	r0, r4
 8001ccc:	bd70      	pop	{r4, r5, r6, pc}
 8001cce:	bf00      	nop
 8001cd0:	0802228c 	.word	0x0802228c

08001cd4 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001cd4:	4b03      	ldr	r3, [pc, #12]	@ (8001ce4 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8001cd6:	681a      	ldr	r2, [r3, #0]
 8001cd8:	07d2      	lsls	r2, r2, #31
 8001cda:	d4fc      	bmi.n	8001cd6 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001cdc:	2223      	movs	r2, #35	@ 0x23
 8001cde:	609a      	str	r2, [r3, #8]
}
 8001ce0:	4770      	bx	lr
 8001ce2:	bf00      	nop
 8001ce4:	4002b000 	.word	0x4002b000

08001ce8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8001ce8:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001cea:	4c10      	ldr	r4, [pc, #64]	@ (8001d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
 8001cec:	6825      	ldr	r5, [r4, #0]
 8001cee:	07ed      	lsls	r5, r5, #31
 8001cf0:	d4fc      	bmi.n	8001cec <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001cf2:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001cf4:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8001cf6:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001cf8:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001cfa:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001cfe:	f04f 0502 	mov.w	r5, #2
 8001d02:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001d04:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001d06:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8001d08:	d00a      	beq.n	8001d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001d0a:	4909      	ldr	r1, [pc, #36]	@ (8001d30 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001d0c:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001d0e:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8001d12:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001d14:	4b07      	ldr	r3, [pc, #28]	@ (8001d34 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8001d16:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8001d18:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8001d1a:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8001d1c:	6023      	str	r3, [r4, #0]
    }
}
 8001d1e:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001d20:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8001d22:	9b03      	ldr	r3, [sp, #12]
 8001d24:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8001d26:	4b04      	ldr	r3, [pc, #16]	@ (8001d38 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
 8001d28:	e7f8      	b.n	8001d1c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x34>
 8001d2a:	bf00      	nop
 8001d2c:	4002b000 	.word	0x4002b000
 8001d30:	00010009 	.word	0x00010009
 8001d34:	00020001 	.word	0x00020001
 8001d38:	00030001 	.word	0x00030001

08001d3c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001d3c:	2001      	movs	r0, #1
 8001d3e:	4770      	bx	lr

08001d40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001d40:	200c      	movs	r0, #12
 8001d42:	4770      	bx	lr

08001d44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001d44:	230c      	movs	r3, #12
 8001d46:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001d4a:	3008      	adds	r0, #8
 8001d4c:	4770      	bx	lr

08001d4e <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001d4e:	230c      	movs	r3, #12
 8001d50:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001d54:	3008      	adds	r0, #8
 8001d56:	4770      	bx	lr

08001d58 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001d58:	2001      	movs	r0, #1
 8001d5a:	4770      	bx	lr

08001d5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001d5c:	f242 10ec 	movw	r0, #8684	@ 0x21ec
 8001d60:	4770      	bx	lr

08001d62 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001d62:	f242 13ec 	movw	r3, #8684	@ 0x21ec
 8001d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001d6a:	3008      	adds	r0, #8
 8001d6c:	4770      	bx	lr

08001d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001d6e:	f242 13ec 	movw	r3, #8684	@ 0x21ec
 8001d72:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001d76:	3008      	adds	r0, #8
 8001d78:	4770      	bx	lr

08001d7a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001d7a:	2001      	movs	r0, #1
 8001d7c:	4770      	bx	lr

08001d7e <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001d7e:	2010      	movs	r0, #16
 8001d80:	4770      	bx	lr

08001d82 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001d82:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001d86:	3008      	adds	r0, #8
 8001d88:	4770      	bx	lr

08001d8a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001d8a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001d8e:	3008      	adds	r0, #8
 8001d90:	4770      	bx	lr

08001d92 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainScreenNoTransition();
 8001d92:	4608      	mov	r0, r1
 8001d94:	f000 bbae 	b.w	80024f4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>

08001d98 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001d98:	4b03      	ldr	r3, [pc, #12]	@ (8001da8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001d9a:	b510      	push	{r4, lr}
 8001d9c:	4604      	mov	r4, r0
 8001d9e:	6003      	str	r3, [r0, #0]
 8001da0:	f007 fa03 	bl	80091aa <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001da4:	4620      	mov	r0, r4
 8001da6:	bd10      	pop	{r4, pc}
 8001da8:	08022344 	.word	0x08022344

08001dac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001dac:	b510      	push	{r4, lr}
 8001dae:	4604      	mov	r4, r0
 8001db0:	f7ff fff2 	bl	8001d98 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001db4:	2114      	movs	r1, #20
 8001db6:	4620      	mov	r0, r4
 8001db8:	f01e f9c9 	bl	802014e <_ZdlPvj>
 8001dbc:	4620      	mov	r0, r4
 8001dbe:	bd10      	pop	{r4, pc}

08001dc0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001dc0:	4b03      	ldr	r3, [pc, #12]	@ (8001dd0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001dc2:	b510      	push	{r4, lr}
 8001dc4:	4604      	mov	r4, r0
 8001dc6:	6003      	str	r3, [r0, #0]
 8001dc8:	f007 f9ef 	bl	80091aa <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001dcc:	4620      	mov	r0, r4
 8001dce:	bd10      	pop	{r4, pc}
 8001dd0:	08022310 	.word	0x08022310

08001dd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001dd4:	b510      	push	{r4, lr}
 8001dd6:	4604      	mov	r4, r0
 8001dd8:	f7ff fff2 	bl	8001dc0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001ddc:	f242 11f4 	movw	r1, #8692	@ 0x21f4
 8001de0:	4620      	mov	r0, r4
 8001de2:	f01e f9b4 	bl	802014e <_ZdlPvj>
 8001de6:	4620      	mov	r0, r4
 8001de8:	bd10      	pop	{r4, pc}
	...

08001dec <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001dec:	4b03      	ldr	r3, [pc, #12]	@ (8001dfc <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001dee:	b510      	push	{r4, lr}
 8001df0:	4604      	mov	r4, r0
 8001df2:	6003      	str	r3, [r0, #0]
 8001df4:	f007 f9d9 	bl	80091aa <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001df8:	4620      	mov	r0, r4
 8001dfa:	bd10      	pop	{r4, pc}
 8001dfc:	080222dc 	.word	0x080222dc

08001e00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001e00:	b510      	push	{r4, lr}
 8001e02:	4604      	mov	r4, r0
 8001e04:	f7ff fff2 	bl	8001dec <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001e08:	2118      	movs	r1, #24
 8001e0a:	4620      	mov	r0, r4
 8001e0c:	f01e f99f 	bl	802014e <_ZdlPvj>
 8001e10:	4620      	mov	r0, r4
 8001e12:	bd10      	pop	{r4, pc}

08001e14 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001e14:	4b09      	ldr	r3, [pc, #36]	@ (8001e3c <_ZN12FrontendHeapD1Ev+0x28>)
 8001e16:	b510      	push	{r4, lr}
 8001e18:	4604      	mov	r4, r0
 8001e1a:	6003      	str	r3, [r0, #0]
 8001e1c:	f500 5008 	add.w	r0, r0, #8704	@ 0x2200
 8001e20:	3020      	adds	r0, #32
 8001e22:	f7ff ffb9 	bl	8001d98 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001e26:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001e2a:	f7ff ffc9 	bl	8001dc0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001e2e:	f104 0014 	add.w	r0, r4, #20
 8001e32:	f7ff ffdb 	bl	8001dec <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001e36:	4620      	mov	r0, r4
 8001e38:	bd10      	pop	{r4, pc}
 8001e3a:	bf00      	nop
 8001e3c:	08022378 	.word	0x08022378

08001e40 <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001e40:	b508      	push	{r3, lr}
 8001e42:	4802      	ldr	r0, [pc, #8]	@ (8001e4c <__tcf_0+0xc>)
 8001e44:	f7ff ffe6 	bl	8001e14 <_ZN12FrontendHeapD1Ev>
 8001e48:	bd08      	pop	{r3, pc}
 8001e4a:	bf00      	nop
 8001e4c:	20001378 	.word	0x20001378

08001e50 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001e50:	b510      	push	{r4, lr}
 8001e52:	4604      	mov	r4, r0
 8001e54:	f7ff ffde 	bl	8001e14 <_ZN12FrontendHeapD1Ev>
 8001e58:	f242 3194 	movw	r1, #9108	@ 0x2394
 8001e5c:	4620      	mov	r0, r4
 8001e5e:	f01e f976 	bl	802014e <_ZdlPvj>
 8001e62:	4620      	mov	r0, r4
 8001e64:	bd10      	pop	{r4, pc}
	...

08001e68 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
 8001e68:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001e6c:	f000 f9bc 	bl	80021e8 <_ZN14BitmapDatabase11getInstanceEv>
 8001e70:	2400      	movs	r4, #0
 8001e72:	4605      	mov	r5, r0
 8001e74:	f000 f9bc 	bl	80021f0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001e78:	4623      	mov	r3, r4
 8001e7a:	4601      	mov	r1, r0
 8001e7c:	4622      	mov	r2, r4
 8001e7e:	4628      	mov	r0, r5
 8001e80:	9400      	str	r4, [sp, #0]
 8001e82:	f010 fa0b 	bl	801229c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001e86:	4b26      	ldr	r3, [pc, #152]	@ (8001f20 <touchgfx_init+0xb8>)
 8001e88:	4a26      	ldr	r2, [pc, #152]	@ (8001f24 <touchgfx_init+0xbc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001e8a:	4620      	mov	r0, r4
        static FrontendHeap instance;
 8001e8c:	4d26      	ldr	r5, [pc, #152]	@ (8001f28 <touchgfx_init+0xc0>)
 8001e8e:	601a      	str	r2, [r3, #0]
 8001e90:	f001 fb5a 	bl	8003548 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001e94:	4825      	ldr	r0, [pc, #148]	@ (8001f2c <touchgfx_init+0xc4>)
 8001e96:	f010 f969 	bl	801216c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001e9a:	682b      	ldr	r3, [r5, #0]
 8001e9c:	f3bf 8f5b 	dmb	ish
 8001ea0:	07db      	lsls	r3, r3, #31
 8001ea2:	d436      	bmi.n	8001f12 <touchgfx_init+0xaa>
 8001ea4:	4628      	mov	r0, r5
 8001ea6:	f01e f954 	bl	8020152 <__cxa_guard_acquire>
 8001eaa:	b390      	cbz	r0, 8001f12 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001eac:	4c20      	ldr	r4, [pc, #128]	@ (8001f30 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
 8001eae:	4f21      	ldr	r7, [pc, #132]	@ (8001f34 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
        app(model, *this)
 8001eb0:	4b21      	ldr	r3, [pc, #132]	@ (8001f38 <touchgfx_init+0xd0>)
        : presenterStorage(pres),
 8001eb2:	f104 0014 	add.w	r0, r4, #20
          frontendApplication(app)
 8001eb6:	f107 0618 	add.w	r6, r7, #24
          screenStorage(scr),
 8001eba:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
 8001ebe:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 8001ec0:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001ec2:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001ec6:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001ec8:	6126      	str	r6, [r4, #16]
 8001eca:	f007 f96f 	bl	80091ac <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001ece:	4b1b      	ldr	r3, [pc, #108]	@ (8001f3c <touchgfx_init+0xd4>)
 8001ed0:	4640      	mov	r0, r8
 8001ed2:	6163      	str	r3, [r4, #20]
 8001ed4:	f007 f96a 	bl	80091ac <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001ed8:	4b19      	ldr	r3, [pc, #100]	@ (8001f40 <touchgfx_init+0xd8>)
 8001eda:	4638      	mov	r0, r7
 8001edc:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001ede:	f007 f965 	bl	80091ac <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001ee2:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 8001ee6:	4a17      	ldr	r2, [pc, #92]	@ (8001f44 <touchgfx_init+0xdc>)
 8001ee8:	f503 700d 	add.w	r0, r3, #564	@ 0x234
 8001eec:	f8c3 2220 	str.w	r2, [r3, #544]	@ 0x220
 8001ef0:	f001 fc7c 	bl	80037ec <_ZN5ModelC1Ev>
 8001ef4:	4622      	mov	r2, r4
 8001ef6:	f107 0114 	add.w	r1, r7, #20
 8001efa:	4630      	mov	r0, r6
 8001efc:	f001 fb90 	bl	8003620 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001f00:	4630      	mov	r0, r6
 8001f02:	f000 faf7 	bl	80024f4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
        static FrontendHeap instance;
 8001f06:	4810      	ldr	r0, [pc, #64]	@ (8001f48 <touchgfx_init+0xe0>)
 8001f08:	f01e feaa 	bl	8020c60 <atexit>
 8001f0c:	4628      	mov	r0, r5
 8001f0e:	f01e f92c 	bl	802016a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001f12:	480e      	ldr	r0, [pc, #56]	@ (8001f4c <touchgfx_init+0xe4>)
}
 8001f14:	b002      	add	sp, #8
 8001f16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001f1a:	f7ff bbff 	b.w	800171c <_ZN11TouchGFXHAL10initializeEv>
 8001f1e:	bf00      	nop
 8001f20:	20016a64 	.word	0x20016a64
 8001f24:	20000544 	.word	0x20000544
 8001f28:	20001374 	.word	0x20001374
 8001f2c:	20000008 	.word	0x20000008
 8001f30:	20001378 	.word	0x20001378
 8001f34:	20003598 	.word	0x20003598
 8001f38:	08022378 	.word	0x08022378
 8001f3c:	080222dc 	.word	0x080222dc
 8001f40:	08022310 	.word	0x08022310
 8001f44:	08022344 	.word	0x08022344
 8001f48:	08001e41 	.word	0x08001e41
 8001f4c:	200004c8 	.word	0x200004c8

08001f50 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001f50:	4770      	bx	lr
	...

08001f54 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001f54:	4801      	ldr	r0, [pc, #4]	@ (8001f5c <touchgfx_taskEntry+0x8>)
 8001f56:	f007 bf10 	b.w	8009d7a <_ZN8touchgfx3HAL9taskEntryEv>
 8001f5a:	bf00      	nop
 8001f5c:	200004c8 	.word	0x200004c8

08001f60 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001f60:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001f62:	4e22      	ldr	r6, [pc, #136]	@ (8001fec <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001f64:	4b22      	ldr	r3, [pc, #136]	@ (8001ff0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
 8001f66:	4c23      	ldr	r4, [pc, #140]	@ (8001ff4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001f68:	4630      	mov	r0, r6
static LCD16bpp display;
 8001f6a:	4d23      	ldr	r5, [pc, #140]	@ (8001ff8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001f6c:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001f6e:	f7ff fe97 	bl	8001ca0 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001f72:	4628      	mov	r0, r5
 8001f74:	f014 fc6c 	bl	8016850 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8001f78:	4b20      	ldr	r3, [pc, #128]	@ (8001ffc <_GLOBAL__sub_I_touchgfx_init+0x9c>)
          mcuInstrumentation(0),
 8001f7a:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001f7c:	f44f 7180 	mov.w	r1, #256	@ 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001f80:	481f      	ldr	r0, [pc, #124]	@ (8002000 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001f82:	861a      	strh	r2, [r3, #48]	@ 0x30
          useAuxiliaryLCD(false),
 8001f84:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
 8001f88:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 8001f8a:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 8001f8e:	675a      	str	r2, [r3, #116]	@ 0x74
          touchController(touchCtrl),
 8001f90:	60dc      	str	r4, [r3, #12]
          auxiliaryLCD(0),
 8001f92:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001f96:	491b      	ldr	r1, [pc, #108]	@ (8002004 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          vSyncCompensationEnabled(false),
 8001f98:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001f9c:	491a      	ldr	r1, [pc, #104]	@ (8002008 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001f9e:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 8001fa0:	491a      	ldr	r1, [pc, #104]	@ (800200c <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8001fa2:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001fa4:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8001fa8:	8001      	strh	r1, [r0, #0]
 8001faa:	4819      	ldr	r0, [pc, #100]	@ (8002010 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 8001fac:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001fae:	f44f 7188 	mov.w	r1, #272	@ 0x110
 8001fb2:	4818      	ldr	r0, [pc, #96]	@ (8002014 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          buttonController(0),
 8001fb4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001fb8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001fbc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001fc0:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8001fc4:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8001fc8:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001fcc:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 8001fd0:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lcdRef(display),
 8001fd4:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001fd8:	8001      	strh	r1, [r0, #0]
 8001fda:	480f      	ldr	r0, [pc, #60]	@ (8002018 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001fdc:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001fe0:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001fe2:	490e      	ldr	r1, [pc, #56]	@ (800201c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001fe4:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001fe6:	4a0e      	ldr	r2, [pc, #56]	@ (8002020 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001fe8:	601a      	str	r2, [r3, #0]
}
 8001fea:	bd70      	pop	{r4, r5, r6, pc}
 8001fec:	200005d0 	.word	0x200005d0
 8001ff0:	08021da8 	.word	0x08021da8
 8001ff4:	20001370 	.word	0x20001370
 8001ff8:	20000548 	.word	0x20000548
 8001ffc:	200004c8 	.word	0x200004c8
 8002000:	200169f4 	.word	0x200169f4
 8002004:	01000001 	.word	0x01000001
 8002008:	01010000 	.word	0x01010000
 800200c:	20016a00 	.word	0x20016a00
 8002010:	200169fa 	.word	0x200169fa
 8002014:	200169f6 	.word	0x200169f6
 8002018:	200169fc 	.word	0x200169fc
 800201c:	200169f8 	.word	0x200169f8
 8002020:	08021f34 	.word	0x08021f34

08002024 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8002024:	4801      	ldr	r0, [pc, #4]	@ (800202c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8002026:	f7ff bcf3 	b.w	8001a10 <_ZN8STM32DMAD1Ev>
 800202a:	bf00      	nop
 800202c:	200005d0 	.word	0x200005d0

08002030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002030:	4b03      	ldr	r3, [pc, #12]	@ (8002040 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8002032:	2290      	movs	r2, #144	@ 0x90
 8002034:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8002038:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800203c:	4770      	bx	lr
 800203e:	bf00      	nop
 8002040:	e000e100 	.word	0xe000e100

08002044 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002044:	4a09      	ldr	r2, [pc, #36]	@ (800206c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8002046:	490a      	ldr	r1, [pc, #40]	@ (8002070 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8002048:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800204a:	480a      	ldr	r0, [pc, #40]	@ (8002074 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800204c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002050:	3b01      	subs	r3, #1
 8002052:	b29b      	uxth	r3, r3
 8002054:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002056:	6911      	ldr	r1, [r2, #16]
 8002058:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800205c:	3901      	subs	r1, #1
 800205e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002060:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002062:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8002064:	f043 0301 	orr.w	r3, r3, #1
 8002068:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800206a:	4770      	bx	lr
 800206c:	40016800 	.word	0x40016800
 8002070:	2000370e 	.word	0x2000370e
 8002074:	2000370c 	.word	0x2000370c

08002078 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002078:	4b01      	ldr	r3, [pc, #4]	@ (8002080 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800207a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 800207e:	4770      	bx	lr
 8002080:	40016800 	.word	0x40016800

08002084 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002084:	4b02      	ldr	r3, [pc, #8]	@ (8002090 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002086:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002088:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800208c:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800208e:	4770      	bx	lr
 8002090:	40016800 	.word	0x40016800

08002094 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8002094:	4a12      	ldr	r2, [pc, #72]	@ (80020e0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x4c>)
 8002096:	6953      	ldr	r3, [r2, #20]
 8002098:	03db      	lsls	r3, r3, #15
{
 800209a:	b570      	push	{r4, r5, r6, lr}
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800209c:	d51e      	bpl.n	80020dc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 800209e:	2300      	movs	r3, #0
 80020a0:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80020a4:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 80020a8:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80020ac:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80020b0:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80020b4:	f3c3 334e 	ubfx	r3, r3, #13, #15
 80020b8:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80020ba:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80020be:	4601      	mov	r1, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80020c0:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
 80020c4:	3901      	subs	r1, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80020c6:	f8c2 5274 	str.w	r5, [r2, #628]	@ 0x274
      } while (ways-- != 0U);
 80020ca:	d2f9      	bcs.n	80020c0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>
    } while(sets-- != 0U);
 80020cc:	3b20      	subs	r3, #32
 80020ce:	f113 0f20 	cmn.w	r3, #32
 80020d2:	d1f2      	bne.n	80020ba <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x26>
 80020d4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80020d8:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
 80020dc:	bd70      	pop	{r4, r5, r6, pc}
 80020de:	bf00      	nop
 80020e0:	e000ed00 	.word	0xe000ed00

080020e4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80020e4:	b570      	push	{r4, r5, r6, lr}
 80020e6:	4604      	mov	r4, r0
    HAL::initialize();
 80020e8:	f007 fe33 	bl	8009d52 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80020ec:	6823      	ldr	r3, [r4, #0]
 80020ee:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 80020f0:	f00c ffd4 	bl	800f09c <_ZN8touchgfx11Application11getInstanceEv>
 80020f4:	4601      	mov	r1, r0
 80020f6:	4620      	mov	r0, r4
 80020f8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80020fa:	6823      	ldr	r3, [r4, #0]
 80020fc:	4a05      	ldr	r2, [pc, #20]	@ (8002114 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80020fe:	4620      	mov	r0, r4
 8002100:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 8002104:	2300      	movs	r3, #0
 8002106:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
 800210a:	46ac      	mov	ip, r5
}
 800210c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002110:	4760      	bx	ip
 8002112:	bf00      	nop
 8002114:	c007f800 	.word	0xc007f800

08002118 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002118:	f007 be02 	b.w	8009d20 <_ZN8touchgfx3HAL10beginFrameEv>

0800211c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800211c:	f007 be0c 	b.w	8009d38 <_ZN8touchgfx3HAL8endFrameEv>

08002120 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
    HAL::flushFrameBuffer(rect);
 8002120:	f007 bdc7 	b.w	8009cb2 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002124 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
    return HAL::blockCopy(dest, src, numBytes);
 8002124:	f007 bf37 	b.w	8009f96 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002128 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002128:	4b03      	ldr	r3, [pc, #12]	@ (8002138 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800212a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800212e:	609a      	str	r2, [r3, #8]
 8002130:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002134:	609a      	str	r2, [r3, #8]
}
 8002136:	4770      	bx	lr
 8002138:	e000e100 	.word	0xe000e100

0800213c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800213c:	4b08      	ldr	r3, [pc, #32]	@ (8002160 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800213e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8002142:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002146:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800214a:	f3bf 8f6f 	isb	sy
 800214e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002152:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002156:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800215a:	f3bf 8f6f 	isb	sy
}
 800215e:	4770      	bx	lr
 8002160:	e000e100 	.word	0xe000e100

08002164 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002164:	b510      	push	{r4, lr}
        return instance;
 8002166:	4c14      	ldr	r4, [pc, #80]	@ (80021b8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002168:	6823      	ldr	r3, [r4, #0]
 800216a:	b323      	cbz	r3, 80021b6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800216c:	4b13      	ldr	r3, [pc, #76]	@ (80021bc <HAL_LTDC_LineEventCallback+0x58>)
 800216e:	4a14      	ldr	r2, [pc, #80]	@ (80021c0 <HAL_LTDC_LineEventCallback+0x5c>)
 8002170:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002172:	8811      	ldrh	r1, [r2, #0]
 8002174:	428b      	cmp	r3, r1
 8002176:	d113      	bne.n	80021a0 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002178:	4b12      	ldr	r3, [pc, #72]	@ (80021c4 <HAL_LTDC_LineEventCallback+0x60>)
 800217a:	8819      	ldrh	r1, [r3, #0]
 800217c:	f002 fefe 	bl	8004f7c <HAL_LTDC_ProgramLineEvent>
 8002180:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002182:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 8002186:	3301      	adds	r3, #1
 8002188:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800218c:	f7ff fbf0 	bl	8001970 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002190:	6820      	ldr	r0, [r4, #0]
 8002192:	f008 fb2b 	bl	800a7ec <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8002196:	2000      	movs	r0, #0

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002198:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800219c:	f7ff b9ee 	b.w	800157c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80021a0:	f002 feec 	bl	8004f7c <HAL_LTDC_ProgramLineEvent>
        return instance;
 80021a4:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80021a6:	6803      	ldr	r3, [r0, #0]
 80021a8:	6a1b      	ldr	r3, [r3, #32]
 80021aa:	4798      	blx	r3
            GPIO::clear(GPIO::VSYNC_FREQ);
 80021ac:	2000      	movs	r0, #0
    }
 80021ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80021b2:	f7ff ba13 	b.w	80015dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80021b6:	bd10      	pop	{r4, pc}
 80021b8:	20016a00 	.word	0x20016a00
 80021bc:	40016800 	.word	0x40016800
 80021c0:	2000370e 	.word	0x2000370e
 80021c4:	2000370c 	.word	0x2000370c

080021c8 <_ZN23ApplicationFontProviderD1Ev>:
{
    static const touchgfx::FontId LABELS = 0; // NotoSans_Regular_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 1;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80021c8:	4770      	bx	lr

080021ca <_ZN23ApplicationFontProviderD0Ev>:
 80021ca:	b510      	push	{r4, lr}
 80021cc:	4604      	mov	r4, r0
 80021ce:	2104      	movs	r1, #4
 80021d0:	f01d ffbd 	bl	802014e <_ZdlPvj>
 80021d4:	4620      	mov	r0, r4
 80021d6:	bd10      	pop	{r4, pc}

080021d8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80021d8:	b508      	push	{r3, lr}
    switch (typography)
 80021da:	b919      	cbnz	r1, 80021e4 <_ZN23ApplicationFontProvider7getFontEt+0xc>
    {
    case Typography::LABELS:
        // NotoSans_Regular_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80021dc:	f001 fa00 	bl	80035e0 <_ZN17TypedTextDatabase8getFontsEv>
 80021e0:	6800      	ldr	r0, [r0, #0]
    default:
        return 0;
    }
}
 80021e2:	bd08      	pop	{r3, pc}
        return 0;
 80021e4:	2000      	movs	r0, #0
 80021e6:	e7fc      	b.n	80021e2 <_ZN23ApplicationFontProvider7getFontEt+0xa>

080021e8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80021e8:	4800      	ldr	r0, [pc, #0]	@ (80021ec <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80021ea:	4770      	bx	lr
 80021ec:	08022398 	.word	0x08022398

080021f0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80021f0:	2004      	movs	r0, #4
 80021f2:	4770      	bx	lr

080021f4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80021f4:	b513      	push	{r0, r1, r4, lr}
 80021f6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80021f8:	b151      	cbz	r1, 8002210 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021fa:	6803      	ldr	r3, [r0, #0]
 80021fc:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
 80021fe:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002200:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002204:	689c      	ldr	r4, [r3, #8]
 8002206:	f10d 0303 	add.w	r3, sp, #3
 800220a:	47a0      	blx	r4
        return glyph;
    }
 800220c:	b002      	add	sp, #8
 800220e:	bd10      	pop	{r4, pc}
            return 0;
 8002210:	4608      	mov	r0, r1
 8002212:	e7fb      	b.n	800220c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002214 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002214:	89c0      	ldrh	r0, [r0, #14]
 8002216:	4770      	bx	lr

08002218 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002218:	8a00      	ldrh	r0, [r0, #16]
 800221a:	4770      	bx	lr

0800221c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800221c:	88c0      	ldrh	r0, [r0, #6]
 800221e:	4770      	bx	lr

08002220 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002220:	8880      	ldrh	r0, [r0, #4]
 8002222:	4770      	bx	lr

08002224 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002224:	7a80      	ldrb	r0, [r0, #10]
    }
 8002226:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 800222a:	4770      	bx	lr

0800222c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800222c:	7a80      	ldrb	r0, [r0, #10]
    }
 800222e:	09c0      	lsrs	r0, r0, #7
 8002230:	4770      	bx	lr

08002232 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002232:	2000      	movs	r0, #0
 8002234:	4770      	bx	lr
	...

08002238 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002238:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002240 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 800223c:	4770      	bx	lr
 800223e:	bf00      	nop
 8002240:	00000000 	.word	0x00000000

08002244 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002244:	4770      	bx	lr

08002246 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002246:	b510      	push	{r4, lr}
 8002248:	4604      	mov	r4, r0
    }
 800224a:	2108      	movs	r1, #8
 800224c:	f01d ff7f 	bl	802014e <_ZdlPvj>
 8002250:	4620      	mov	r0, r4
 8002252:	bd10      	pop	{r4, pc}

08002254 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002254:	4770      	bx	lr

08002256 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002256:	4770      	bx	lr

08002258 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002258:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 800225c:	6808      	ldr	r0, [r1, #0]
 800225e:	6849      	ldr	r1, [r1, #4]
 8002260:	c303      	stmia	r3!, {r0, r1}
    }
 8002262:	4770      	bx	lr

08002264 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002264:	4770      	bx	lr

08002266 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002266:	4770      	bx	lr

08002268 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002268:	6041      	str	r1, [r0, #4]
    }
 800226a:	4770      	bx	lr

0800226c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800226c:	4770      	bx	lr
	...

08002270 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002270:	4b06      	ldr	r3, [pc, #24]	@ (800228c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002272:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002276:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800227a:	2300      	movs	r3, #0
 800227c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002280:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002284:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoMainScreenNoTransition();
    }
 8002288:	4770      	bx	lr
 800228a:	bf00      	nop
 800228c:	08002331 	.word	0x08002331

08002290 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002290:	2301      	movs	r3, #1
 8002292:	7203      	strb	r3, [r0, #8]
    }
 8002294:	4770      	bx	lr

08002296 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002296:	4770      	bx	lr

08002298 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002298:	4770      	bx	lr

0800229a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800229a:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800229c:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
 800229e:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80022a0:	68c2      	ldr	r2, [r0, #12]
 80022a2:	689b      	ldr	r3, [r3, #8]
 80022a4:	1054      	asrs	r4, r2, #1
 80022a6:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80022aa:	07d2      	lsls	r2, r2, #31
 80022ac:	bf48      	it	mi
 80022ae:	590a      	ldrmi	r2, [r1, r4]
    }
 80022b0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80022b4:	bf48      	it	mi
 80022b6:	58d3      	ldrmi	r3, [r2, r3]
 80022b8:	4718      	bx	r3

080022ba <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 80022ba:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 80022bc:	6840      	ldr	r0, [r0, #4]
 80022be:	b130      	cbz	r0, 80022ce <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80022c0:	689a      	ldr	r2, [r3, #8]
 80022c2:	b91a      	cbnz	r2, 80022cc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 80022c4:	68d8      	ldr	r0, [r3, #12]
 80022c6:	f000 0001 	and.w	r0, r0, #1
 80022ca:	4770      	bx	lr
 80022cc:	2001      	movs	r0, #1
    }
 80022ce:	4770      	bx	lr

080022d0 <_ZN8touchgfx12NoTransitionD0Ev>:
 80022d0:	b510      	push	{r4, lr}
 80022d2:	4604      	mov	r4, r0
 80022d4:	210c      	movs	r1, #12
 80022d6:	f01d ff3a 	bl	802014e <_ZdlPvj>
 80022da:	4620      	mov	r0, r4
 80022dc:	bd10      	pop	{r4, pc}

080022de <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80022de:	b510      	push	{r4, lr}
 80022e0:	4604      	mov	r4, r0
 80022e2:	2110      	movs	r1, #16
 80022e4:	f01d ff33 	bl	802014e <_ZdlPvj>
 80022e8:	4620      	mov	r0, r4
 80022ea:	bd10      	pop	{r4, pc}

080022ec <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80022ec:	b510      	push	{r4, lr}
 80022ee:	4604      	mov	r4, r0
 80022f0:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80022f4:	f01d ff2b 	bl	802014e <_ZdlPvj>
 80022f8:	4620      	mov	r0, r4
 80022fa:	bd10      	pop	{r4, pc}

080022fc <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80022fc:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80022fe:	f00c fecd 	bl	800f09c <_ZN8touchgfx11Application11getInstanceEv>
 8002302:	6803      	ldr	r3, [r0, #0]
    }
 8002304:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002308:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800230a:	4718      	bx	r3

0800230c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800230c:	b510      	push	{r4, lr}
 800230e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002310:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002314:	b158      	cbz	r0, 800232e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002316:	6803      	ldr	r3, [r0, #0]
 8002318:	68db      	ldr	r3, [r3, #12]
 800231a:	4798      	blx	r3
 800231c:	b138      	cbz	r0, 800232e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800231e:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8002322:	6803      	ldr	r3, [r0, #0]
 8002324:	689b      	ldr	r3, [r3, #8]
 8002326:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002328:	2300      	movs	r3, #0
 800232a:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 800232e:	bd10      	pop	{r4, pc}

08002330 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
 8002330:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002334:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002338:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800233a:	68b0      	ldr	r0, [r6, #8]
 800233c:	6803      	ldr	r3, [r0, #0]
 800233e:	6a1b      	ldr	r3, [r3, #32]
 8002340:	4798      	blx	r3
 8002342:	f242 13eb 	movw	r3, #8683	@ 0x21eb
 8002346:	4298      	cmp	r0, r3
 8002348:	d805      	bhi.n	8002356 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x26>
 800234a:	4b44      	ldr	r3, [pc, #272]	@ (800245c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12c>)
 800234c:	21a3      	movs	r1, #163	@ 0xa3
 800234e:	4a44      	ldr	r2, [pc, #272]	@ (8002460 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002350:	4844      	ldr	r0, [pc, #272]	@ (8002464 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x134>)
 8002352:	f01e fc67 	bl	8020c24 <__assert_func>
 8002356:	6870      	ldr	r0, [r6, #4]
 8002358:	6803      	ldr	r3, [r0, #0]
 800235a:	6a1b      	ldr	r3, [r3, #32]
 800235c:	4798      	blx	r3
 800235e:	280f      	cmp	r0, #15
 8002360:	d803      	bhi.n	800236a <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x3a>
 8002362:	4b41      	ldr	r3, [pc, #260]	@ (8002468 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>)
 8002364:	21a4      	movs	r1, #164	@ 0xa4
 8002366:	4a3e      	ldr	r2, [pc, #248]	@ (8002460 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
 8002368:	e7f2      	b.n	8002350 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800236a:	68f0      	ldr	r0, [r6, #12]
 800236c:	6803      	ldr	r3, [r0, #0]
 800236e:	6a1b      	ldr	r3, [r3, #32]
 8002370:	4798      	blx	r3
 8002372:	280b      	cmp	r0, #11
 8002374:	d803      	bhi.n	800237e <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x4e>
 8002376:	4b3d      	ldr	r3, [pc, #244]	@ (800246c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x13c>)
 8002378:	21a5      	movs	r1, #165	@ 0xa5
 800237a:	4a39      	ldr	r2, [pc, #228]	@ (8002460 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x130>)
 800237c:	e7e8      	b.n	8002350 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x20>
    if (*currentTrans)
 800237e:	f8df 90f4 	ldr.w	r9, [pc, #244]	@ 8002474 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 8002382:	f00c fe8b 	bl	800f09c <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002386:	3004      	adds	r0, #4
 8002388:	f00c fead 	bl	800f0e6 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 800238c:	f8d9 0000 	ldr.w	r0, [r9]
 8002390:	b110      	cbz	r0, 8002398 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002392:	6803      	ldr	r3, [r0, #0]
 8002394:	68db      	ldr	r3, [r3, #12]
 8002396:	4798      	blx	r3
    if (*currentTrans)
 8002398:	f8d9 0000 	ldr.w	r0, [r9]
 800239c:	b110      	cbz	r0, 80023a4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800239e:	6803      	ldr	r3, [r0, #0]
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	4798      	blx	r3
    if (*currentScreen)
 80023a4:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002478 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x148>
 80023a8:	f8d8 0000 	ldr.w	r0, [r8]
 80023ac:	b110      	cbz	r0, 80023b4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80023ae:	6803      	ldr	r3, [r0, #0]
 80023b0:	695b      	ldr	r3, [r3, #20]
 80023b2:	4798      	blx	r3
    if (*currentPresenter)
 80023b4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80023b8:	b110      	cbz	r0, 80023c0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80023ba:	6803      	ldr	r3, [r0, #0]
 80023bc:	685b      	ldr	r3, [r3, #4]
 80023be:	4798      	blx	r3
    if (*currentScreen)
 80023c0:	f8d8 0000 	ldr.w	r0, [r8]
 80023c4:	b110      	cbz	r0, 80023cc <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80023c6:	6803      	ldr	r3, [r0, #0]
 80023c8:	681b      	ldr	r3, [r3, #0]
 80023ca:	4798      	blx	r3
    if (*currentPresenter)
 80023cc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80023d0:	b110      	cbz	r0, 80023d8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80023d2:	6803      	ldr	r3, [r0, #0]
 80023d4:	689b      	ldr	r3, [r3, #8]
 80023d6:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80023d8:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80023da:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
 80023dc:	f04f 0b00 	mov.w	fp, #0
 80023e0:	6803      	ldr	r3, [r0, #0]
 80023e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80023e4:	4798      	blx	r3
 80023e6:	4b22      	ldr	r3, [pc, #136]	@ (8002470 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x140>)
 80023e8:	4604      	mov	r4, r0
 80023ea:	f8c0 b004 	str.w	fp, [r0, #4]
 80023ee:	f880 b008 	strb.w	fp, [r0, #8]
 80023f2:	4659      	mov	r1, fp
 80023f4:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80023f6:	68b0      	ldr	r0, [r6, #8]
 80023f8:	6803      	ldr	r3, [r0, #0]
 80023fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80023fc:	4798      	blx	r3
 80023fe:	4605      	mov	r5, r0
 8002400:	f001 f9a6 	bl	8003750 <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002404:	6870      	ldr	r0, [r6, #4]
 8002406:	4659      	mov	r1, fp
 8002408:	6803      	ldr	r3, [r0, #0]
 800240a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800240c:	4798      	blx	r3
 800240e:	4606      	mov	r6, r0
 8002410:	4629      	mov	r1, r5
 8002412:	f001 f91d 	bl	8003650 <_ZN13MainPresenterC1ER8MainView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002416:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002418:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
 800241c:	4628      	mov	r0, r5
    *currentTrans = newTransition;
 800241e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002422:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002426:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800242a:	682b      	ldr	r3, [r5, #0]

    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800242c:	f8c6 a008 	str.w	sl, [r6, #8]
 8002430:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002432:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002434:	4798      	blx	r3
    newPresenter->activate();
 8002436:	6833      	ldr	r3, [r6, #0]
 8002438:	4630      	mov	r0, r6
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800243e:	4621      	mov	r1, r4
 8002440:	4628      	mov	r0, r5
 8002442:	f00e fbc5 	bl	8010bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002446:	6823      	ldr	r3, [r4, #0]
 8002448:	4620      	mov	r0, r4
 800244a:	691b      	ldr	r3, [r3, #16]
 800244c:	4798      	blx	r3
    newTransition->invalidate();
 800244e:	6823      	ldr	r3, [r4, #0]
 8002450:	4620      	mov	r0, r4
 8002452:	695b      	ldr	r3, [r3, #20]
}
 8002454:	b001      	add	sp, #4
 8002456:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800245a:	4718      	bx	r3
 800245c:	080223f8 	.word	0x080223f8
 8002460:	08022486 	.word	0x08022486
 8002464:	08022552 	.word	0x08022552
 8002468:	08022599 	.word	0x08022599
 800246c:	0802263c 	.word	0x0802263c
 8002470:	08022754 	.word	0x08022754
 8002474:	20016a48 	.word	0x20016a48
 8002478:	20016a44 	.word	0x20016a44

0800247c <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800247c:	4b04      	ldr	r3, [pc, #16]	@ (8002490 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800247e:	681b      	ldr	r3, [r3, #0]
 8002480:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002484:	b10a      	cbz	r2, 800248a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002486:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8002488:	b900      	cbnz	r0, 800248c <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800248a:	6898      	ldr	r0, [r3, #8]
    }
 800248c:	4770      	bx	lr
 800248e:	bf00      	nop
 8002490:	20016a00 	.word	0x20016a00

08002494 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002496:	4604      	mov	r4, r0
 8002498:	4617      	mov	r7, r2
 800249a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800249c:	f00c fec4 	bl	800f228 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80024a0:	4b10      	ldr	r3, [pc, #64]	@ (80024e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
 80024a2:	2500      	movs	r5, #0
        instance = this;
 80024a4:	601c      	str	r4, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024a6:	4629      	mov	r1, r5
      model(m)
 80024a8:	4b0f      	ldr	r3, [pc, #60]	@ (80024e8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80024aa:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80024ac:	4b0f      	ldr	r3, [pc, #60]	@ (80024ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80024ae:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 80024b2:	4b0f      	ldr	r3, [pc, #60]	@ (80024f0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80024b4:	6818      	ldr	r0, [r3, #0]
 80024b6:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024ba:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 80024bc:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
 80024c0:	689b      	ldr	r3, [r3, #8]
      model(m)
 80024c2:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024c6:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80024c8:	4628      	mov	r0, r5
 80024ca:	f001 f83d 	bl	8003548 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80024ce:	f7ff ffd5 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 80024d2:	f015 ffee 	bl	80184b2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80024d6:	f7ff ffd1 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 80024da:	f016 f865 	bl	80185a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80024de:	4620      	mov	r0, r4
 80024e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80024e2:	bf00      	nop
 80024e4:	20016a54 	.word	0x20016a54
 80024e8:	08022700 	.word	0x08022700
 80024ec:	080226e8 	.word	0x080226e8
 80024f0:	20016a00 	.word	0x20016a00

080024f4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80024f4:	4b06      	ldr	r3, [pc, #24]	@ (8002510 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x1c>)
 80024f6:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80024fa:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80024fe:	2300      	movs	r3, #0
 8002500:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002504:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002508:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 800250c:	4770      	bx	lr
 800250e:	bf00      	nop
 8002510:	08002331 	.word	0x08002331

08002514 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002514:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002516:	4770      	bx	lr

08002518 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002518:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800251a:	4770      	bx	lr

0800251c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800251c:	4770      	bx	lr

0800251e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800251e:	888b      	ldrh	r3, [r1, #4]
 8002520:	69c0      	ldr	r0, [r0, #28]
 8002522:	0adb      	lsrs	r3, r3, #11
 8002524:	680a      	ldr	r2, [r1, #0]
 8002526:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800252a:	4410      	add	r0, r2
 800252c:	4770      	bx	lr

0800252e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800252e:	b510      	push	{r4, lr}
 8002530:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8002532:	b1ba      	cbz	r2, 8002564 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002534:	7b10      	ldrb	r0, [r2, #12]
 8002536:	b168      	cbz	r0, 8002554 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002538:	7b53      	ldrb	r3, [r2, #13]
 800253a:	7ad2      	ldrb	r2, [r2, #11]
 800253c:	021b      	lsls	r3, r3, #8
 800253e:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002542:	431a      	orrs	r2, r3
 8002544:	6a23      	ldr	r3, [r4, #32]
 8002546:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 800254a:	881a      	ldrh	r2, [r3, #0]
 800254c:	428a      	cmp	r2, r1
 800254e:	d102      	bne.n	8002556 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002550:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8002554:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002556:	d805      	bhi.n	8002564 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002558:	3801      	subs	r0, #1
 800255a:	3304      	adds	r3, #4
 800255c:	b280      	uxth	r0, r0
 800255e:	2800      	cmp	r0, #0
 8002560:	d1f3      	bne.n	800254a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002562:	e7f7      	b.n	8002554 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002564:	2000      	movs	r0, #0
 8002566:	e7f5      	b.n	8002554 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002568 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002568:	b510      	push	{r4, lr}
 800256a:	4604      	mov	r4, r0
 800256c:	212c      	movs	r1, #44	@ 0x2c
 800256e:	f01d fdee 	bl	802014e <_ZdlPvj>
 8002572:	4620      	mov	r0, r4
 8002574:	bd10      	pop	{r4, pc}
	...

08002578 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002578:	b530      	push	{r4, r5, lr}
 800257a:	b08b      	sub	sp, #44	@ 0x2c
 800257c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800257e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8002582:	9508      	str	r5, [sp, #32]
 8002584:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8002588:	9507      	str	r5, [sp, #28]
 800258a:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800258e:	9506      	str	r5, [sp, #24]
 8002590:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8002594:	9505      	str	r5, [sp, #20]
 8002596:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800259a:	9504      	str	r5, [sp, #16]
 800259c:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80025a0:	9503      	str	r5, [sp, #12]
 80025a2:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 80025a6:	9502      	str	r5, [sp, #8]
 80025a8:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 80025ac:	9501      	str	r5, [sp, #4]
 80025ae:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80025b2:	9500      	str	r5, [sp, #0]
 80025b4:	f00d fe98 	bl	80102e8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80025b8:	4b06      	ldr	r3, [pc, #24]	@ (80025d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
}
 80025ba:	4620      	mov	r0, r4
      arabicTable(formsTable)
 80025bc:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80025be:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80025c0:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80025c2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80025c4:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80025c6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80025c8:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80025ca:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80025cc:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80025ce:	b00b      	add	sp, #44	@ 0x2c
 80025d0:	bd30      	pop	{r4, r5, pc}
 80025d2:	bf00      	nop
 80025d4:	08022778 	.word	0x08022778

080025d8 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80025d8:	2000      	movs	r0, #0
 80025da:	4770      	bx	lr

080025dc <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80025dc:	8081      	strh	r1, [r0, #4]
    }
 80025de:	4770      	bx	lr

080025e0 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80025e0:	80c1      	strh	r1, [r0, #6]
    }
 80025e2:	4770      	bx	lr

080025e4 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80025e4:	8101      	strh	r1, [r0, #8]
    }
 80025e6:	4770      	bx	lr

080025e8 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80025e8:	8141      	strh	r1, [r0, #10]
    }
 80025ea:	4770      	bx	lr

080025ec <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80025ec:	4770      	bx	lr

080025ee <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80025ee:	4770      	bx	lr

080025f0 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80025f0:	4770      	bx	lr

080025f2 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80025f2:	4770      	bx	lr

080025f4 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80025f4:	4770      	bx	lr

080025f6 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80025f6:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80025f8:	88c4      	ldrh	r4, [r0, #6]
 80025fa:	6803      	ldr	r3, [r0, #0]
 80025fc:	1b12      	subs	r2, r2, r4
 80025fe:	8884      	ldrh	r4, [r0, #4]
 8002600:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002602:	1b09      	subs	r1, r1, r4
 8002604:	b212      	sxth	r2, r2
    }
 8002606:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800260a:	b209      	sxth	r1, r1
 800260c:	4718      	bx	r3

0800260e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800260e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002612:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002614:	f04f 33ff 	mov.w	r3, #4294967295
 8002618:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800261a:	6813      	ldr	r3, [r2, #0]
 800261c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800261e:	6010      	str	r0, [r2, #0]
    }
 8002620:	4770      	bx	lr

08002622 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002622:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002624:	4770      	bx	lr

08002626 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002626:	4770      	bx	lr

08002628 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002628:	4770      	bx	lr

0800262a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800262a:	4770      	bx	lr

0800262c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800262c:	4770      	bx	lr

0800262e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800262e:	4770      	bx	lr

08002630 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002630:	2000      	movs	r0, #0
 8002632:	4770      	bx	lr

08002634 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8002634:	888b      	ldrh	r3, [r1, #4]
 8002636:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002638:	2001      	movs	r0, #1
 800263a:	4770      	bx	lr

0800263c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800263c:	4770      	bx	lr

0800263e <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800263e:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
 8002642:	4770      	bx	lr

08002644 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 8002644:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8002646:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 8002648:	6b04      	ldr	r4, [r0, #48]	@ 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 800264a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800264e:	4362      	muls	r2, r4
 8002650:	4361      	muls	r1, r4
    }
 8002652:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8002656:	4718      	bx	r3

08002658 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 8002658:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800265c:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800265e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    virtual void setGraphRangeX(float min, float max)
 8002662:	b410      	push	{r4}
        const float fs = f * (float)scale;
 8002664:	ee20 0a27 	vmul.f32	s0, s0, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8002668:	f8d3 40a4 	ldr.w	r4, [r3, #164]	@ 0xa4
        if (fs >= 0)
 800266c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002670:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002674:	db1a      	blt.n	80026ac <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x54>
        {
            return (int)(fs + 0.5f);
 8002676:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800267a:	ee30 0a07 	vadd.f32	s0, s0, s14
 800267e:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8002682:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8002686:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 800268a:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 800268e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002692:	db1e      	blt.n	80026d2 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x7a>
            return (int)(fs + 0.5f);
 8002694:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8002698:	ee70 0aa7 	vadd.f32	s1, s1, s15
 800269c:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80026a0:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80026a4:	4623      	mov	r3, r4
    }
 80026a6:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80026aa:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80026ac:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80026b0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80026b4:	ee17 3a10 	vmov	r3, s14
 80026b8:	3b01      	subs	r3, #1
 80026ba:	ee30 0a66 	vsub.f32	s0, s0, s13
 80026be:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 80026c2:	ee30 0a26 	vadd.f32	s0, s0, s13
 80026c6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80026ca:	ee10 1a10 	vmov	r1, s0
 80026ce:	4419      	add	r1, r3
 80026d0:	e7d9      	b.n	8002686 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2e>
 80026d2:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80026d6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80026da:	ee17 3a90 	vmov	r3, s15
 80026de:	3b01      	subs	r3, #1
 80026e0:	ee70 0ac7 	vsub.f32	s1, s1, s14
 80026e4:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80026e8:	ee70 0a87 	vadd.f32	s1, s1, s14
 80026ec:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 80026f0:	ee10 2a90 	vmov	r2, s1
 80026f4:	441a      	add	r2, r3
 80026f6:	e7d5      	b.n	80026a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>

080026f8 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 80026f8:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 80026fa:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 80026fc:	6b04      	ldr	r4, [r0, #48]	@ 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 80026fe:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8002702:	4362      	muls	r2, r4
    }
 8002704:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8002708:	4718      	bx	r3

0800270a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 800270a:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800270e:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002710:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    virtual void setGraphRangeXAuto(bool showYaxis, float margin)
 8002714:	b410      	push	{r4}
        const float fs = f * (float)scale;
 8002716:	ee27 0a80 	vmul.f32	s0, s15, s0
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800271a:	f8d3 40b0 	ldr.w	r4, [r3, #176]	@ 0xb0
        if (fs >= 0)
 800271e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002722:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002726:	db0b      	blt.n	8002740 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x36>
            return (int)(fs + 0.5f);
 8002728:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800272c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8002730:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002734:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8002738:	4623      	mov	r3, r4
    }
 800273a:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800273e:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002740:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002744:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002748:	ee17 3a90 	vmov	r3, s15
 800274c:	3b01      	subs	r3, #1
 800274e:	ee30 0a47 	vsub.f32	s0, s0, s14
 8002752:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8002756:	ee30 0a07 	vadd.f32	s0, s0, s14
 800275a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800275e:	ee10 2a10 	vmov	r2, s0
 8002762:	441a      	add	r2, r3
 8002764:	e7e8      	b.n	8002738 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>

08002766 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 8002766:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8002768:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 800276a:	6b44      	ldr	r4, [r0, #52]	@ 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800276c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8002770:	4362      	muls	r2, r4
 8002772:	4361      	muls	r1, r4
    }
 8002774:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8002778:	4718      	bx	r3

0800277a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 800277a:	edd0 7a0d 	vldr	s15, [r0, #52]	@ 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800277e:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002780:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    virtual void setGraphRangeY(float min, float max)
 8002784:	b410      	push	{r4}
        const float fs = f * (float)scale;
 8002786:	ee20 0a27 	vmul.f32	s0, s0, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800278a:	f8d3 40bc 	ldr.w	r4, [r3, #188]	@ 0xbc
        if (fs >= 0)
 800278e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002792:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002796:	db1a      	blt.n	80027ce <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x54>
            return (int)(fs + 0.5f);
 8002798:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800279c:	ee30 0a07 	vadd.f32	s0, s0, s14
 80027a0:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80027a4:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80027a8:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80027ac:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80027b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027b4:	db1e      	blt.n	80027f4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x7a>
            return (int)(fs + 0.5f);
 80027b6:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80027ba:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80027be:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80027c2:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80027c6:	4623      	mov	r3, r4
    }
 80027c8:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80027cc:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80027ce:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80027d2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80027d6:	ee17 3a10 	vmov	r3, s14
 80027da:	3b01      	subs	r3, #1
 80027dc:	ee30 0a66 	vsub.f32	s0, s0, s13
 80027e0:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 80027e4:	ee30 0a26 	vadd.f32	s0, s0, s13
 80027e8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80027ec:	ee10 1a10 	vmov	r1, s0
 80027f0:	4419      	add	r1, r3
 80027f2:	e7d9      	b.n	80027a8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2e>
 80027f4:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80027f8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80027fc:	ee17 3a90 	vmov	r3, s15
 8002800:	3b01      	subs	r3, #1
 8002802:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8002806:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800280a:	ee70 0a87 	vadd.f32	s1, s1, s14
 800280e:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8002812:	ee10 2a90 	vmov	r2, s1
 8002816:	441a      	add	r2, r3
 8002818:	e7d5      	b.n	80027c6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>

0800281a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 800281a:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800281c:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 800281e:	6b44      	ldr	r4, [r0, #52]	@ 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8002820:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8002824:	4362      	muls	r2, r4
    }
 8002826:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800282a:	4718      	bx	r3

0800282c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 800282c:	edd0 7a0d 	vldr	s15, [r0, #52]	@ 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8002830:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002832:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    virtual void setGraphRangeYAuto(bool showXaxis, float margin)
 8002836:	b410      	push	{r4}
        const float fs = f * (float)scale;
 8002838:	ee27 0a80 	vmul.f32	s0, s15, s0
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800283c:	f8d3 40c0 	ldr.w	r4, [r3, #192]	@ 0xc0
        if (fs >= 0)
 8002840:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002844:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002848:	db0b      	blt.n	8002862 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x36>
            return (int)(fs + 0.5f);
 800284a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800284e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8002852:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002856:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800285a:	4623      	mov	r3, r4
    }
 800285c:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8002860:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002862:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002866:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800286a:	ee17 3a90 	vmov	r3, s15
 800286e:	3b01      	subs	r3, #1
 8002870:	ee30 0a47 	vsub.f32	s0, s0, s14
 8002874:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8002878:	ee30 0a07 	vadd.f32	s0, s0, s14
 800287c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8002880:	ee10 2a10 	vmov	r2, s0
 8002884:	441a      	add	r2, r3
 8002886:	e7e8      	b.n	800285a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>

08002888 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 8002888:	f8d0 312c 	ldr.w	r3, [r0, #300]	@ 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 800288c:	6b02      	ldr	r2, [r0, #48]	@ 0x30
        if (i >= 0)
 800288e:	2b00      	cmp	r3, #0
 8002890:	db07      	blt.n	80028a2 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8002892:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 8002896:	fb90 f0f2 	sdiv	r0, r0, r2
 800289a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800289e:	1040      	asrs	r0, r0, #1
 80028a0:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80028a2:	f06f 0101 	mvn.w	r1, #1
 80028a6:	fb01 2003 	mla	r0, r1, r3, r2
 80028aa:	3801      	subs	r0, #1
 80028ac:	fb90 f0f2 	sdiv	r0, r0, r2
 80028b0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80028b4:	1040      	asrs	r0, r0, #1
 80028b6:	4240      	negs	r0, r0
    }
 80028b8:	4770      	bx	lr

080028ba <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 80028ba:	edd0 7a4b 	vldr	s15, [r0, #300]	@ 0x12c
 80028be:	ed90 0a0c 	vldr	s0, [r0, #48]	@ 0x30
 80028c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80028c6:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 80028ca:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80028ce:	4770      	bx	lr

080028d0 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 80028d0:	f8d0 012c 	ldr.w	r0, [r0, #300]	@ 0x12c
 80028d4:	4770      	bx	lr

080028d6 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 80028d6:	f8d0 3130 	ldr.w	r3, [r0, #304]	@ 0x130
        return scaled2int(i, xScale);
 80028da:	6b02      	ldr	r2, [r0, #48]	@ 0x30
        if (i >= 0)
 80028dc:	2b00      	cmp	r3, #0
 80028de:	db07      	blt.n	80028f0 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80028e0:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 80028e4:	fb90 f0f2 	sdiv	r0, r0, r2
 80028e8:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80028ec:	1040      	asrs	r0, r0, #1
 80028ee:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80028f0:	f06f 0101 	mvn.w	r1, #1
 80028f4:	fb01 2003 	mla	r0, r1, r3, r2
 80028f8:	3801      	subs	r0, #1
 80028fa:	fb90 f0f2 	sdiv	r0, r0, r2
 80028fe:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002902:	1040      	asrs	r0, r0, #1
 8002904:	4240      	negs	r0, r0
    }
 8002906:	4770      	bx	lr

08002908 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8002908:	edd0 7a4c 	vldr	s15, [r0, #304]	@ 0x130
 800290c:	ed90 0a0c 	vldr	s0, [r0, #48]	@ 0x30
 8002910:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002914:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 8002918:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800291c:	4770      	bx	lr

0800291e <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 800291e:	f8d0 0130 	ldr.w	r0, [r0, #304]	@ 0x130
 8002922:	4770      	bx	lr

08002924 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8002924:	f8d0 3134 	ldr.w	r3, [r0, #308]	@ 0x134
        return scaled2int(i, yScale);
 8002928:	6b42      	ldr	r2, [r0, #52]	@ 0x34
        if (i >= 0)
 800292a:	2b00      	cmp	r3, #0
 800292c:	db07      	blt.n	800293e <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800292e:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 8002932:	fb90 f0f2 	sdiv	r0, r0, r2
 8002936:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800293a:	1040      	asrs	r0, r0, #1
 800293c:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800293e:	f06f 0101 	mvn.w	r1, #1
 8002942:	fb01 2003 	mla	r0, r1, r3, r2
 8002946:	3801      	subs	r0, #1
 8002948:	fb90 f0f2 	sdiv	r0, r0, r2
 800294c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002950:	1040      	asrs	r0, r0, #1
 8002952:	4240      	negs	r0, r0
    }
 8002954:	4770      	bx	lr

08002956 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 8002956:	edd0 7a4d 	vldr	s15, [r0, #308]	@ 0x134
 800295a:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
 800295e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002962:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 8002966:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800296a:	4770      	bx	lr

0800296c <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 800296c:	f8d0 0134 	ldr.w	r0, [r0, #308]	@ 0x134
 8002970:	4770      	bx	lr

08002972 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 8002972:	f8d0 3138 	ldr.w	r3, [r0, #312]	@ 0x138
        return scaled2int(i, yScale);
 8002976:	6b42      	ldr	r2, [r0, #52]	@ 0x34
        if (i >= 0)
 8002978:	2b00      	cmp	r3, #0
 800297a:	db07      	blt.n	800298c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800297c:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 8002980:	fb90 f0f2 	sdiv	r0, r0, r2
 8002984:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002988:	1040      	asrs	r0, r0, #1
 800298a:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800298c:	f06f 0101 	mvn.w	r1, #1
 8002990:	fb01 2003 	mla	r0, r1, r3, r2
 8002994:	3801      	subs	r0, #1
 8002996:	fb90 f0f2 	sdiv	r0, r0, r2
 800299a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800299e:	1040      	asrs	r0, r0, #1
 80029a0:	4240      	negs	r0, r0
    }
 80029a2:	4770      	bx	lr

080029a4 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 80029a4:	edd0 7a4e 	vldr	s15, [r0, #312]	@ 0x138
 80029a8:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
 80029ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80029b0:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 80029b4:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80029b8:	4770      	bx	lr

080029ba <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 80029ba:	f8d0 0138 	ldr.w	r0, [r0, #312]	@ 0x138
 80029be:	4770      	bx	lr

080029c0 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
    {
        setScaleX(scale, updateData);
 80029c0:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 80029c2:	b570      	push	{r4, r5, r6, lr}
 80029c4:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 80029c6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    virtual void setScale(int scale, bool updateData = false)
 80029ca:	460d      	mov	r5, r1
 80029cc:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 80029ce:	4798      	blx	r3
        setScaleY(scale, updateData);
 80029d0:	6823      	ldr	r3, [r4, #0]
 80029d2:	4632      	mov	r2, r6
 80029d4:	4629      	mov	r1, r5
 80029d6:	4620      	mov	r0, r4
 80029d8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
    }
 80029dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 80029e0:	4718      	bx	r3

080029e2 <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 80029e2:	6803      	ldr	r3, [r0, #0]
 80029e4:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80029e8:	4718      	bx	r3

080029ea <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 80029ea:	6803      	ldr	r3, [r0, #0]
 80029ec:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 80029f0:	4718      	bx	r3

080029f2 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 80029f2:	6803      	ldr	r3, [r0, #0]
 80029f4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80029f8:	4718      	bx	r3

080029fa <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 80029fa:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 80029fc:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 80029fe:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8002a00:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
        return scaled2int(i, xScale);
 8002a04:	6b04      	ldr	r4, [r0, #48]	@ 0x30
        if (i >= 0)
 8002a06:	db0e      	blt.n	8002a26 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8002a08:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002a0c:	fb92 f1f4 	sdiv	r1, r2, r4
 8002a10:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002a14:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8002a16:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	@ 0x11e
    }
 8002a1a:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8002a1e:	3a01      	subs	r2, #1
 8002a20:	440a      	add	r2, r1
 8002a22:	4249      	negs	r1, r1
 8002a24:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002a26:	f06f 0101 	mvn.w	r1, #1
 8002a2a:	fb01 4102 	mla	r1, r1, r2, r4
 8002a2e:	3901      	subs	r1, #1
 8002a30:	fb91 f1f4 	sdiv	r1, r1, r4
 8002a34:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002a38:	1049      	asrs	r1, r1, #1
 8002a3a:	4249      	negs	r1, r1
 8002a3c:	e7eb      	b.n	8002a16 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

08002a3e <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 8002a3e:	6803      	ldr	r3, [r0, #0]
 8002a40:	f8d3 313c 	ldr.w	r3, [r3, #316]	@ 0x13c
 8002a44:	4718      	bx	r3

08002a46 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8002a46:	6b02      	ldr	r2, [r0, #48]	@ 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8002a48:	6803      	ldr	r3, [r0, #0]
 8002a4a:	4351      	muls	r1, r2
 8002a4c:	f8d3 3148 	ldr.w	r3, [r3, #328]	@ 0x148
 8002a50:	4718      	bx	r3

08002a52 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 8002a52:	6803      	ldr	r3, [r0, #0]
 8002a54:	f8d3 3144 	ldr.w	r3, [r3, #324]	@ 0x144
 8002a58:	4718      	bx	r3

08002a5a <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8002a5a:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 8002a5e:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002a60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8002a64:	f8d3 2148 	ldr.w	r2, [r3, #328]	@ 0x148
        const float fs = f * (float)scale;
 8002a68:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8002a6c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002a70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002a74:	db08      	blt.n	8002a88 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 8002a76:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8002a7a:	ee30 0a27 	vadd.f32	s0, s0, s15
 8002a7e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002a82:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8002a86:	4710      	bx	r2
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002a88:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002a8c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002a90:	ee17 3a90 	vmov	r3, s15
 8002a94:	3b01      	subs	r3, #1
 8002a96:	ee30 0a47 	vsub.f32	s0, s0, s14
 8002a9a:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8002a9e:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002aa2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8002aa6:	ee10 1a10 	vmov	r1, s0
 8002aaa:	4419      	add	r1, r3
 8002aac:	e7eb      	b.n	8002a86 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08002aae <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8002aae:	f8c0 113c 	str.w	r1, [r0, #316]	@ 0x13c
    }
 8002ab2:	4770      	bx	lr

08002ab4 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 8002ab4:	6803      	ldr	r3, [r0, #0]
 8002ab6:	f8d3 3150 	ldr.w	r3, [r3, #336]	@ 0x150
 8002aba:	4718      	bx	r3

08002abc <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8002abc:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8002abe:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8002ac0:	f8d3 315c 	ldr.w	r3, [r3, #348]	@ 0x15c
    virtual int getXAxisFactorAsInt() const
 8002ac4:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8002ac6:	4798      	blx	r3
        if (i >= 0)
 8002ac8:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8002aca:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        if (i >= 0)
 8002acc:	db07      	blt.n	8002ade <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8002ace:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002ad2:	fb90 f0f3 	sdiv	r0, r0, r3
 8002ad6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002ada:	1040      	asrs	r0, r0, #1
    }
 8002adc:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002ade:	f06f 0201 	mvn.w	r2, #1
 8002ae2:	fb02 3000 	mla	r0, r2, r0, r3
 8002ae6:	3801      	subs	r0, #1
 8002ae8:	fb90 f0f3 	sdiv	r0, r0, r3
 8002aec:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002af0:	1040      	asrs	r0, r0, #1
 8002af2:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8002af4:	e7f2      	b.n	8002adc <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08002af6 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8002af6:	6803      	ldr	r3, [r0, #0]
 8002af8:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8002afc:	4718      	bx	r3

08002afe <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8002afe:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8002b00:	b510      	push	{r4, lr}
 8002b02:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8002b04:	f8d3 315c 	ldr.w	r3, [r3, #348]	@ 0x15c
 8002b08:	4798      	blx	r3
 8002b0a:	ee07 0a90 	vmov	s15, r0
        return (float)i / (float)scale;
 8002b0e:	ed94 0a0c 	vldr	s0, [r4, #48]	@ 0x30
 8002b12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002b16:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 8002b1a:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8002b1e:	bd10      	pop	{r4, pc}

08002b20 <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8002b20:	f8d0 013c 	ldr.w	r0, [r0, #316]	@ 0x13c
 8002b24:	4770      	bx	lr

08002b26 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8002b26:	6b02      	ldr	r2, [r0, #48]	@ 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8002b28:	6803      	ldr	r3, [r0, #0]
 8002b2a:	4351      	muls	r1, r2
 8002b2c:	f8d3 3168 	ldr.w	r3, [r3, #360]	@ 0x168
 8002b30:	4718      	bx	r3

08002b32 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8002b32:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8002b36:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002b38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8002b3c:	f8d3 2168 	ldr.w	r2, [r3, #360]	@ 0x168
        const float fs = f * (float)scale;
 8002b40:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8002b44:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002b48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b4c:	db08      	blt.n	8002b60 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8002b4e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8002b52:	ee30 0a27 	vadd.f32	s0, s0, s15
 8002b56:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002b5a:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8002b5e:	4710      	bx	r2
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002b60:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002b64:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002b68:	ee17 3a90 	vmov	r3, s15
 8002b6c:	3b01      	subs	r3, #1
 8002b6e:	ee30 0a47 	vsub.f32	s0, s0, s14
 8002b72:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8002b76:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002b7a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8002b7e:	ee10 1a10 	vmov	r1, s0
 8002b82:	4419      	add	r1, r3
 8002b84:	e7eb      	b.n	8002b5e <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08002b86 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8002b86:	f8c0 1140 	str.w	r1, [r0, #320]	@ 0x140
    }
 8002b8a:	4770      	bx	lr

08002b8c <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8002b8c:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8002b8e:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8002b90:	f8d3 3174 	ldr.w	r3, [r3, #372]	@ 0x174
    virtual int getXAxisOffsetAsInt() const
 8002b94:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8002b96:	4798      	blx	r3
        if (i >= 0)
 8002b98:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8002b9a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        if (i >= 0)
 8002b9c:	db07      	blt.n	8002bae <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8002b9e:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002ba2:	fb90 f0f3 	sdiv	r0, r0, r3
 8002ba6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002baa:	1040      	asrs	r0, r0, #1
    }
 8002bac:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002bae:	f06f 0201 	mvn.w	r2, #1
 8002bb2:	fb02 3000 	mla	r0, r2, r0, r3
 8002bb6:	3801      	subs	r0, #1
 8002bb8:	fb90 f0f3 	sdiv	r0, r0, r3
 8002bbc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002bc0:	1040      	asrs	r0, r0, #1
 8002bc2:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8002bc4:	e7f2      	b.n	8002bac <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08002bc6 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8002bc6:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8002bc8:	b510      	push	{r4, lr}
 8002bca:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8002bcc:	f8d3 3174 	ldr.w	r3, [r3, #372]	@ 0x174
 8002bd0:	4798      	blx	r3
 8002bd2:	ee07 0a90 	vmov	s15, r0
        return (float)i / (float)scale;
 8002bd6:	ed94 0a0c 	vldr	s0, [r4, #48]	@ 0x30
 8002bda:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002bde:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 8002be2:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8002be6:	bd10      	pop	{r4, pc}

08002be8 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8002be8:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002bec:	4770      	bx	lr

08002bee <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
     * @return The index in the yValues array.
     */
    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return screenIndex;
    }
 8002bee:	4608      	mov	r0, r1
 8002bf0:	4770      	bx	lr

08002bf2 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8002bf2:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8002bf4:	2900      	cmp	r1, #0
        return scaled2int(i, xScale);
 8002bf6:	6b02      	ldr	r2, [r0, #48]	@ 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8002bf8:	f8d3 3184 	ldr.w	r3, [r3, #388]	@ 0x184
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8002bfc:	b510      	push	{r4, lr}
 8002bfe:	4604      	mov	r4, r0
        if (i >= 0)
 8002c00:	db0e      	blt.n	8002c20 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8002c02:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8002c06:	fb91 f1f2 	sdiv	r1, r1, r2
 8002c0a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002c0e:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8002c10:	b209      	sxth	r1, r1
 8002c12:	4620      	mov	r0, r4
 8002c14:	4798      	blx	r3
 8002c16:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	@ 0x13c
    }
 8002c1a:	fb02 3000 	mla	r0, r2, r0, r3
 8002c1e:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002c20:	f06f 0001 	mvn.w	r0, #1
 8002c24:	fb00 2101 	mla	r1, r0, r1, r2
 8002c28:	3901      	subs	r1, #1
 8002c2a:	fb91 f1f2 	sdiv	r1, r1, r2
 8002c2e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002c32:	1049      	asrs	r1, r1, #1
 8002c34:	4249      	negs	r1, r1
 8002c36:	e7eb      	b.n	8002c10 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08002c38 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8002c38:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8002c3a:	4770      	bx	lr

08002c3c <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8002c3c:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8002c3e:	4770      	bx	lr

08002c40 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8002c40:	6803      	ldr	r3, [r0, #0]
 8002c42:	f8d3 3148 	ldr.w	r3, [r3, #328]	@ 0x148
 8002c46:	4718      	bx	r3

08002c48 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8002c48:	6803      	ldr	r3, [r0, #0]
 8002c4a:	f8d3 315c 	ldr.w	r3, [r3, #348]	@ 0x15c
 8002c4e:	4718      	bx	r3

08002c50 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8002c50:	6b02      	ldr	r2, [r0, #48]	@ 0x30

    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8002c52:	6803      	ldr	r3, [r0, #0]
 8002c54:	4351      	muls	r1, r2
 8002c56:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 8002c5a:	4718      	bx	r3

08002c5c <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8002c5c:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8002c5e:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8002c60:	f8d3 5118 	ldr.w	r5, [r3, #280]	@ 0x118
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8002c64:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8002c66:	f8d0 6144 	ldr.w	r6, [r0, #324]	@ 0x144
 8002c6a:	f8d3 3180 	ldr.w	r3, [r3, #384]	@ 0x180
 8002c6e:	4798      	blx	r3
 8002c70:	462b      	mov	r3, r5
 8002c72:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8002c76:	4620      	mov	r0, r4
    }
 8002c78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8002c7c:	4718      	bx	r3

08002c7e <_ZNK8touchgfx21GraphWrapAndClearData18indexToGlobalIndexEs>:

    virtual void clear();

    virtual int32_t indexToGlobalIndex(int16_t index) const
    {
        return (this->dataCounter - this->usedCapacity) + index;
 8002c7e:	f8d0 3148 	ldr.w	r3, [r0, #328]	@ 0x148
 8002c82:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	@ 0x11e
 8002c86:	4419      	add	r1, r3
    }
 8002c88:	1a08      	subs	r0, r1, r0
 8002c8a:	4770      	bx	lr

08002c8c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002c8c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 8002c90:	4770      	bx	lr

08002c92 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8002c92:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8002c96:	4770      	bx	lr

08002c98 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002c98:	2200      	movs	r2, #0
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002c9a:	b510      	push	{r4, lr}
        return rect.width;
 8002c9c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002ca0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002ca4:	8002      	strh	r2, [r0, #0]
 8002ca6:	8042      	strh	r2, [r0, #2]
 8002ca8:	8084      	strh	r4, [r0, #4]
 8002caa:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002cac:	bd10      	pop	{r4, pc}

08002cae <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002cae:	2200      	movs	r2, #0
 8002cb0:	8002      	strh	r2, [r0, #0]
 8002cb2:	8042      	strh	r2, [r0, #2]
 8002cb4:	8082      	strh	r2, [r0, #4]
 8002cb6:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002cb8:	4770      	bx	lr

08002cba <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8002cba:	62c1      	str	r1, [r0, #44]	@ 0x2c
    }
 8002cbc:	4770      	bx	lr

08002cbe <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8002cbe:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8002cc0:	4770      	bx	lr

08002cc2 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8002cc2:	2001      	movs	r0, #1
 8002cc4:	4770      	bx	lr

08002cc6 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8002cc6:	4770      	bx	lr

08002cc8 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8002cc8:	4770      	bx	lr

08002cca <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8002cca:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8002ccc:	b118      	cbz	r0, 8002cd6 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8002cce:	6803      	ldr	r3, [r0, #0]
 8002cd0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8002cd4:	4718      	bx	r3
    }
 8002cd6:	4770      	bx	lr

08002cd8 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8002cd8:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8002cda:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	@ 0x116
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8002cde:	f8b2 4118 	ldrh.w	r4, [r2, #280]	@ 0x118
 8002ce2:	f8b2 1040 	ldrh.w	r1, [r2, #64]	@ 0x40
 8002ce6:	442c      	add	r4, r5
 8002ce8:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	@ 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002cec:	8005      	strh	r5, [r0, #0]
 8002cee:	1b09      	subs	r1, r1, r4
 8002cf0:	2400      	movs	r4, #0
 8002cf2:	80c2      	strh	r2, [r0, #6]
 8002cf4:	8044      	strh	r4, [r0, #2]
 8002cf6:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8002cf8:	bd30      	pop	{r4, r5, pc}

08002cfa <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8002cfa:	8002      	strh	r2, [r0, #0]
 8002cfc:	8083      	strh	r3, [r0, #4]
 8002cfe:	f9bd 2000 	ldrsh.w	r2, [sp]
 8002d02:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8002d06:	8042      	strh	r2, [r0, #2]
 8002d08:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8002d0a:	4770      	bx	lr

08002d0c <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8002d0c:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8002d0e:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8002d10:	f8d3 30ec 	ldr.w	r3, [r3, #236]	@ 0xec
 8002d14:	4718      	bx	r3

08002d16 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8002d16:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8002d18:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8002d1a:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 8002d1e:	4718      	bx	r3

08002d20 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8002d20:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	@ 0x116
 8002d24:	4770      	bx	lr

08002d26 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8002d26:	f8b1 3116 	ldrh.w	r3, [r1, #278]	@ 0x116
 8002d2a:	f8b1 2118 	ldrh.w	r2, [r1, #280]	@ 0x118
 8002d2e:	f8b1 0040 	ldrh.w	r0, [r1, #64]	@ 0x40
 8002d32:	4413      	add	r3, r2
 8002d34:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8002d36:	b200      	sxth	r0, r0
 8002d38:	4770      	bx	lr

08002d3a <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8002d3a:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	@ 0x114
 8002d3e:	4770      	bx	lr

08002d40 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8002d40:	f8b1 3114 	ldrh.w	r3, [r1, #276]	@ 0x114
 8002d44:	f8b1 211a 	ldrh.w	r2, [r1, #282]	@ 0x11a
 8002d48:	f8b1 0042 	ldrh.w	r0, [r1, #66]	@ 0x42
 8002d4c:	4413      	add	r3, r2
 8002d4e:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8002d50:	b200      	sxth	r0, r0
 8002d52:	4770      	bx	lr

08002d54 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8002d54:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8002d56:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8002d58:	4611      	mov	r1, r2
 8002d5a:	f8d3 3118 	ldr.w	r3, [r3, #280]	@ 0x118
 8002d5e:	4718      	bx	r3

08002d60 <_ZN12MainViewBase18sliderValueChangedEi>:
     * Virtual Action Handlers
     */
    virtual void sliderValueChanged(int value)
    {
        // Override and implement this function in Main
    }
 8002d60:	4770      	bx	lr

08002d62 <_ZN12MainViewBase11setupScreenEv>:
}

void MainViewBase::setupScreen()
{

}
 8002d62:	4770      	bx	lr

08002d64 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_6SliderEivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8002d64:	4770      	bx	lr

08002d66 <_ZN8touchgfx17GraphWrapAndClearILs100EED1Ev>:
 * be created as new values are added.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphWrapAndClear : public GraphWrapAndClearData
 8002d66:	4770      	bx	lr

08002d68 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8002d68:	4770      	bx	lr

08002d6a <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_6SliderEivE7executeES4_i>:
    virtual void execute(T1 t1, T2 t2)
 8002d6a:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 8002d6c:	6845      	ldr	r5, [r0, #4]
    virtual void execute(T1 t1, T2 t2)
 8002d6e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1, t2);
 8002d70:	68c4      	ldr	r4, [r0, #12]
 8002d72:	689b      	ldr	r3, [r3, #8]
 8002d74:	1066      	asrs	r6, r4, #1
 8002d76:	eb05 0064 	add.w	r0, r5, r4, asr #1
 8002d7a:	07e4      	lsls	r4, r4, #31
 8002d7c:	bf44      	itt	mi
 8002d7e:	59ac      	ldrmi	r4, [r5, r6]
 8002d80:	58e3      	ldrmi	r3, [r4, r3]
    }
 8002d82:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 8002d84:	4718      	bx	r3

08002d86 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_6SliderEivE7isValidEv>:
    virtual bool isValid() const
 8002d86:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8002d88:	6840      	ldr	r0, [r0, #4]
 8002d8a:	b130      	cbz	r0, 8002d9a <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_6SliderEivE7isValidEv+0x14>
 8002d8c:	689a      	ldr	r2, [r3, #8]
 8002d8e:	b91a      	cbnz	r2, 8002d98 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_6SliderEivE7isValidEv+0x12>
 8002d90:	68d8      	ldr	r0, [r3, #12]
 8002d92:	f000 0001 	and.w	r0, r0, #1
 8002d96:	4770      	bx	lr
 8002d98:	2001      	movs	r0, #1
    }
 8002d9a:	4770      	bx	lr

08002d9c <_ZN8touchgfx17GraphElementGridYD0Ev>:
 8002d9c:	b510      	push	{r4, lr}
 8002d9e:	4604      	mov	r4, r0
 8002da0:	2140      	movs	r1, #64	@ 0x40
 8002da2:	f01d f9d4 	bl	802014e <_ZdlPvj>
 8002da6:	4620      	mov	r0, r4
 8002da8:	bd10      	pop	{r4, pc}

08002daa <_ZN8touchgfx17GraphWrapAndClearILs100EED0Ev>:
 8002daa:	b510      	push	{r4, lr}
 8002dac:	4604      	mov	r4, r0
 8002dae:	f44f 7137 	mov.w	r1, #732	@ 0x2dc
 8002db2:	f01d f9cc 	bl	802014e <_ZdlPvj>
 8002db6:	4620      	mov	r0, r4
 8002db8:	bd10      	pop	{r4, pc}

08002dba <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_6SliderEivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8002dba:	b510      	push	{r4, lr}
 8002dbc:	4604      	mov	r4, r0
 8002dbe:	2110      	movs	r1, #16
 8002dc0:	f01d f9c5 	bl	802014e <_ZdlPvj>
 8002dc4:	4620      	mov	r0, r4
 8002dc6:	bd10      	pop	{r4, pc}

08002dc8 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8002dc8:	b538      	push	{r3, r4, r5, lr}
 8002dca:	4603      	mov	r3, r0
 8002dcc:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8002dce:	e9d3 540c 	ldrd	r5, r4, [r3, #48]	@ 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8002dd2:	680b      	ldr	r3, [r1, #0]
 8002dd4:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002dd8:	4798      	blx	r3
 8002dda:	4629      	mov	r1, r5
 8002ddc:	4602      	mov	r2, r0
 8002dde:	4620      	mov	r0, r4
    }
 8002de0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8002de4:	f008 bb7e 	b.w	800b4e4 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08002de8 <_ZN12MainViewBaseD1Ev>:
MainViewBase::~MainViewBase()
 8002de8:	4b03      	ldr	r3, [pc, #12]	@ (8002df8 <_ZN12MainViewBaseD1Ev+0x10>)
 8002dea:	b510      	push	{r4, lr}
 8002dec:	4604      	mov	r4, r0
 8002dee:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002df0:	f00a fcd2 	bl	800d798 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002df4:	4620      	mov	r0, r4
 8002df6:	bd10      	pop	{r4, pc}
 8002df8:	08022c80 	.word	0x08022c80

08002dfc <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 8002dfc:	4b06      	ldr	r3, [pc, #24]	@ (8002e18 <_ZN12MainViewBaseD0Ev+0x1c>)
 8002dfe:	b510      	push	{r4, lr}
 8002e00:	4604      	mov	r4, r0
 8002e02:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002e04:	f00a fcc8 	bl	800d798 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002e08:	f242 11e8 	movw	r1, #8680	@ 0x21e8
 8002e0c:	4620      	mov	r0, r4
 8002e0e:	f01d f99e 	bl	802014e <_ZdlPvj>
 8002e12:	4620      	mov	r0, r4
 8002e14:	bd10      	pop	{r4, pc}
 8002e16:	bf00      	nop
 8002e18:	08022c80 	.word	0x08022c80

08002e1c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002e1c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002e20:	b112      	cbz	r2, 8002e28 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002e22:	6803      	ldr	r3, [r0, #0]
 8002e24:	695b      	ldr	r3, [r3, #20]
 8002e26:	4718      	bx	r3
    }
 8002e28:	4770      	bx	lr

08002e2a <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
    virtual void invalidateContent() const
 8002e2a:	b508      	push	{r3, lr}
        if (alpha > 0)
 8002e2c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8002e30:	b10b      	cbz	r3, 8002e36 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xc>
            Container::invalidateContent();
 8002e32:	f7ff fff3 	bl	8002e1c <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002e36:	bd08      	pop	{r3, pc}

08002e38 <_ZN12MainViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi>:

void MainViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
 8002e38:	b410      	push	{r4}
    if (&src == &sliderResolution)
 8002e3a:	f200 44c4 	addw	r4, r0, #1220	@ 0x4c4
 8002e3e:	428c      	cmp	r4, r1
 8002e40:	d105      	bne.n	8002e4e <_ZN12MainViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x16>
    {
        //SliderValueChanged
        //When sliderResolution value changed call virtual function
        //Call sliderValueChanged
        sliderValueChanged(value);
 8002e42:	6803      	ldr	r3, [r0, #0]
 8002e44:	4611      	mov	r1, r2
    }
}
 8002e46:	f85d 4b04 	ldr.w	r4, [sp], #4
        sliderValueChanged(value);
 8002e4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e4c:	4718      	bx	r3
}
 8002e4e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002e52:	4770      	bx	lr

08002e54 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8002e54:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8002e56:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8002e58:	db03      	blt.n	8002e62 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8002e5a:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	@ 0x11e
 8002e5e:	4294      	cmp	r4, r2
 8002e60:	dc06      	bgt.n	8002e70 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8002e62:	4b08      	ldr	r3, [pc, #32]	@ (8002e84 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8002e64:	f240 6139 	movw	r1, #1593	@ 0x639
 8002e68:	4a07      	ldr	r2, [pc, #28]	@ (8002e88 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8002e6a:	4808      	ldr	r0, [pc, #32]	@ (8002e8c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8002e6c:	f01d feda 	bl	8020c24 <__assert_func>
        return yValues[dataIndex(index)];
 8002e70:	6803      	ldr	r3, [r0, #0]
 8002e72:	f8d0 4144 	ldr.w	r4, [r0, #324]	@ 0x144
 8002e76:	f8d3 3180 	ldr.w	r3, [r3, #384]	@ 0x180
 8002e7a:	4798      	blx	r3
    }
 8002e7c:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8002e80:	bd10      	pop	{r4, pc}
 8002e82:	bf00      	nop
 8002e84:	080227d8 	.word	0x080227d8
 8002e88:	080227fb 	.word	0x080227fb
 8002e8c:	0802284a 	.word	0x0802284a

08002e90 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8002e90:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8002e92:	b510      	push	{r4, lr}
 8002e94:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8002e96:	db03      	blt.n	8002ea0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8002e98:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	@ 0x11e
 8002e9c:	429a      	cmp	r2, r3
 8002e9e:	dc06      	bgt.n	8002eae <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8002ea0:	4b07      	ldr	r3, [pc, #28]	@ (8002ec0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8002ea2:	f240 6133 	movw	r1, #1587	@ 0x633
 8002ea6:	4a07      	ldr	r2, [pc, #28]	@ (8002ec4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8002ea8:	4807      	ldr	r0, [pc, #28]	@ (8002ec8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8002eaa:	f01d febb 	bl	8020c24 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8002eae:	6803      	ldr	r3, [r0, #0]
 8002eb0:	f8d3 3184 	ldr.w	r3, [r3, #388]	@ 0x184
 8002eb4:	4798      	blx	r3
 8002eb6:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	@ 0x13c
    }
 8002eba:	fb02 3000 	mla	r0, r2, r0, r3
 8002ebe:	bd10      	pop	{r4, pc}
 8002ec0:	080227d8 	.word	0x080227d8
 8002ec4:	080228a7 	.word	0x080228a7
 8002ec8:	0802284a 	.word	0x0802284a

08002ecc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002ecc:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002ed0:	b11a      	cbz	r2, 8002eda <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002ed2:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8002ed6:	b102      	cbz	r2, 8002eda <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002ed8:	6018      	str	r0, [r3, #0]
        }
    }
 8002eda:	4770      	bx	lr

08002edc <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
 8002edc:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002ede:	b570      	push	{r4, r5, r6, lr}
 8002ee0:	4604      	mov	r4, r0
        setX(x);
 8002ee2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8002ee4:	4615      	mov	r5, r2
        setX(x);
 8002ee6:	4798      	blx	r3
        setY(y);
 8002ee8:	6823      	ldr	r3, [r4, #0]
 8002eea:	4620      	mov	r0, r4
 8002eec:	4629      	mov	r1, r5
 8002eee:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 8002ef0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002ef4:	4718      	bx	r3

08002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002ef6:	b570      	push	{r4, r5, r6, lr}
 8002ef8:	4604      	mov	r4, r0
 8002efa:	461d      	mov	r5, r3
 8002efc:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002f00:	f7ff ffec 	bl	8002edc <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002f04:	6823      	ldr	r3, [r4, #0]
 8002f06:	4629      	mov	r1, r5
 8002f08:	4620      	mov	r0, r4
 8002f0a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002f0c:	4798      	blx	r3
        setHeight(height);
 8002f0e:	6823      	ldr	r3, [r4, #0]
 8002f10:	4631      	mov	r1, r6
 8002f12:	4620      	mov	r0, r4
 8002f14:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8002f16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002f1a:	4718      	bx	r3

08002f1c <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002f1c:	4a09      	ldr	r2, [pc, #36]	@ (8002f44 <_ZN8touchgfx3BoxC1Ev+0x28>)
          touchable(false),
 8002f1e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8002f22:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 8002f24:	2200      	movs	r2, #0
 8002f26:	8481      	strh	r1, [r0, #36]	@ 0x24
 8002f28:	21ff      	movs	r1, #255	@ 0xff
        : color(col)
 8002f2a:	6282      	str	r2, [r0, #40]	@ 0x28
 8002f2c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
        : x(0), y(0), width(0), height(0)
 8002f30:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002f34:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002f38:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002f3c:	e9c0 2207 	strd	r2, r2, [r0, #28]
    {
    }
 8002f40:	4770      	bx	lr
 8002f42:	bf00      	nop
 8002f44:	08023710 	.word	0x08023710

08002f48 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8002f48:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8002f4a:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8002f4c:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8002f4e:	f00d fac9 	bl	80104e4 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8002f52:	2800      	cmp	r0, #0
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8002f54:	462a      	mov	r2, r5
 8002f56:	9901      	ldr	r1, [sp, #4]
 8002f58:	ea4f 1440 	mov.w	r4, r0, lsl #5
 8002f5c:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8002f60:	db04      	blt.n	8002f6c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8002f62:	f00d fade 	bl	8010522 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8002f66:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8002f68:	b003      	add	sp, #12
 8002f6a:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8002f6c:	f00d fad9 	bl	8010522 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8002f70:	1a20      	subs	r0, r4, r0
        explicit Q5(int i)
 8002f72:	e7f9      	b.n	8002f68 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08002f74 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8002f74:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8002f76:	f8b0 311a 	ldrh.w	r3, [r0, #282]	@ 0x11a
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8002f7a:	460e      	mov	r6, r1
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8002f7c:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	@ 0x114
 8002f80:	f8b0 5042 	ldrh.w	r5, [r0, #66]	@ 0x42
 8002f84:	4423      	add	r3, r4
 8002f86:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8002f88:	b22d      	sxth	r5, r5
 8002f8a:	442c      	add	r4, r5
 8002f8c:	1e69      	subs	r1, r5, #1
 8002f8e:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	@ 0x134
 8002f92:	3c01      	subs	r4, #1
 8002f94:	1ad2      	subs	r2, r2, r3
 8002f96:	1af0      	subs	r0, r6, r3
 8002f98:	f7ff ffd6 	bl	8002f48 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
    }
 8002f9c:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8002fa0:	bd70      	pop	{r4, r5, r6, pc}

08002fa2 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8002fa2:	b538      	push	{r3, r4, r5, lr}
 8002fa4:	4604      	mov	r4, r0
 8002fa6:	460d      	mov	r5, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8002fa8:	f8b4 3116 	ldrh.w	r3, [r4, #278]	@ 0x116
 8002fac:	f8b4 1118 	ldrh.w	r1, [r4, #280]	@ 0x118
 8002fb0:	440b      	add	r3, r1
 8002fb2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8002fb6:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8002fb8:	e9d0 024b 	ldrd	r0, r2, [r0, #300]	@ 0x12c
 8002fbc:	b209      	sxth	r1, r1
 8002fbe:	1a12      	subs	r2, r2, r0
 8002fc0:	1a28      	subs	r0, r5, r0
 8002fc2:	3901      	subs	r1, #1
 8002fc4:	f7ff ffc0 	bl	8002f48 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8002fc8:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	@ 0x116
    }
 8002fcc:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8002fd0:	bd38      	pop	{r3, r4, r5, pc}
	...

08002fd4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 8002fd4:	b510      	push	{r4, lr}
 8002fd6:	4604      	mov	r4, r0
        : CanvasWidget()
 8002fd8:	f007 fe5c 	bl	800ac94 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8002fdc:	4a0a      	ldr	r2, [pc, #40]	@ (8003008 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
        : color(col)
 8002fde:	2300      	movs	r3, #0
    {
    }
 8002fe0:	4620      	mov	r0, r4
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8002fe2:	6022      	str	r2, [r4, #0]
 8002fe4:	2201      	movs	r2, #1
 8002fe6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002fe8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8002fec:	f8a4 3042 	strh.w	r3, [r4, #66]	@ 0x42
 8002ff0:	64a3      	str	r3, [r4, #72]	@ 0x48
 8002ff2:	e9c4 230c 	strd	r2, r3, [r4, #48]	@ 0x30
        : typedTextId(id)
 8002ff6:	4a05      	ldr	r2, [pc, #20]	@ (800300c <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 8002ff8:	63a2      	str	r2, [r4, #56]	@ 0x38
 8002ffa:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002ffe:	87a2      	strh	r2, [r4, #60]	@ 0x3c
 8003000:	222e      	movs	r2, #46	@ 0x2e
 8003002:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
    }
 8003006:	bd10      	pop	{r4, pc}
 8003008:	08023670 	.word	0x08023670
 800300c:	080223f0 	.word	0x080223f0

08003010 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
        : widgetWidth(0)
 8003010:	2300      	movs	r3, #0
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003012:	b570      	push	{r4, r5, r6, lr}
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003014:	4e12      	ldr	r6, [pc, #72]	@ (8003060 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003016:	4605      	mov	r5, r0
 8003018:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 800301a:	4b12      	ldr	r3, [pc, #72]	@ (8003064 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800301c:	6003      	str	r3, [r0, #0]
 800301e:	6833      	ldr	r3, [r6, #0]
 8003020:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8003024:	b10a      	cbz	r2, 800302a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8003026:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8003028:	b900      	cbnz	r0, 800302c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800302a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800302c:	6803      	ldr	r3, [r0, #0]
 800302e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003030:	4798      	blx	r3
        return auxiliaryLCD;
 8003032:	6833      	ldr	r3, [r6, #0]
 8003034:	fab0 f480 	clz	r4, r0
 8003038:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800303a:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 800303c:	b130      	cbz	r0, 800304c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800303e:	6803      	ldr	r3, [r0, #0]
 8003040:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003042:	4798      	blx	r3
 8003044:	2800      	cmp	r0, #0
 8003046:	bf08      	it	eq
 8003048:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 800304c:	b92c      	cbnz	r4, 800305a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800304e:	4b06      	ldr	r3, [pc, #24]	@ (8003068 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003050:	212c      	movs	r1, #44	@ 0x2c
 8003052:	4a06      	ldr	r2, [pc, #24]	@ (800306c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003054:	4806      	ldr	r0, [pc, #24]	@ (8003070 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003056:	f01d fde5 	bl	8020c24 <__assert_func>
    }
 800305a:	4628      	mov	r0, r5
 800305c:	bd70      	pop	{r4, r5, r6, pc}
 800305e:	bf00      	nop
 8003060:	20016a00 	.word	0x20016a00
 8003064:	08022ab0 	.word	0x08022ab0
 8003068:	080228f6 	.word	0x080228f6
 800306c:	08022954 	.word	0x08022954
 8003070:	0802298d 	.word	0x0802298d

08003074 <_ZN12MainViewBaseC1Ev>:
MainViewBase::MainViewBase() :
 8003074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003078:	4604      	mov	r4, r0
 800307a:	b08d      	sub	sp, #52	@ 0x34
        : presenter(0)
 800307c:	2500      	movs	r5, #0
 800307e:	f00d fbfb 	bl	8010878 <_ZN8touchgfx6ScreenC1Ev>
    sliderValueChangedCallback(this, &MainViewBase::sliderValueChangedCallbackHandler)
 8003082:	46a1      	mov	r9, r4
 8003084:	4bc9      	ldr	r3, [pc, #804]	@ (80033ac <_ZN12MainViewBaseC1Ev+0x338>)
 8003086:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003088:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 800308c:	f849 3b40 	str.w	r3, [r9], #64
 8003090:	4648      	mov	r0, r9
 8003092:	f7ff ff43 	bl	8002f1c <_ZN8touchgfx3BoxC1Ev>
          touchable(false),
 8003096:	f44f 7280 	mov.w	r2, #256	@ 0x100
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800309a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
    {
        Image::setBitmap(bmp);
 800309e:	a90b      	add	r1, sp, #44	@ 0x2c
 80030a0:	f8a4 2090 	strh.w	r2, [r4, #144]	@ 0x90
 80030a4:	4650      	mov	r0, sl
        : Widget(), bitmap(bmp), alpha(255)
 80030a6:	4ac2      	ldr	r2, [pc, #776]	@ (80033b0 <_ZN12MainViewBaseC1Ev+0x33c>)
 80030a8:	f104 07cc 	add.w	r7, r4, #204	@ 0xcc
 80030ac:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80030b0:	2601      	movs	r6, #1
 80030b2:	66e2      	str	r2, [r4, #108]	@ 0x6c
 80030b4:	f204 4bc4 	addw	fp, r4, #1220	@ 0x4c4
 80030b8:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80030bc:	f104 0804 	add.w	r8, r4, #4
 80030c0:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
        : x(0), y(0), width(0), height(0)
 80030c4:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
 80030c8:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
 80030cc:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
 80030d0:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
        Image::setBitmap(bmp);
 80030d4:	f009 fc5a 	bl	800c98c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80030d8:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 80030dc:	4618      	mov	r0, r3
 80030de:	9302      	str	r3, [sp, #8]
 80030e0:	f7ff ff1c 	bl	8002f1c <_ZN8touchgfx3BoxC1Ev>
 80030e4:	4bb3      	ldr	r3, [pc, #716]	@ (80033b4 <_ZN12MainViewBaseC1Ev+0x340>)
 80030e6:	2164      	movs	r1, #100	@ 0x64
 80030e8:	4638      	mov	r0, r7
 80030ea:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
        : color(col)
 80030ee:	f8c4 50c4 	str.w	r5, [r4, #196]	@ 0xc4
 80030f2:	f8a4 50c8 	strh.w	r5, [r4, #200]	@ 0xc8
 80030f6:	f008 f991 	bl	800b41c <_ZN8touchgfx17AbstractDataGraphC1Es>
 80030fa:	4baf      	ldr	r3, [pc, #700]	@ (80033b8 <_ZN12MainViewBaseC1Ev+0x344>)
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80030fc:	4629      	mov	r1, r5
 80030fe:	2263      	movs	r2, #99	@ 0x63
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003100:	f8c4 30cc 	str.w	r3, [r4, #204]	@ 0xcc
{
public:
    GraphWrapAndClear()
        : GraphWrapAndClearData(CAPACITY, y)
 8003104:	f504 7306 	add.w	r3, r4, #536	@ 0x218
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003108:	4638      	mov	r0, r7
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800310a:	e9c4 3584 	strd	r3, r5, [r4, #528]	@ 0x210
 800310e:	e9c4 6582 	strd	r6, r5, [r4, #520]	@ 0x208
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003112:	f7ff fa97 	bl	8002644 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8003116:	4ba9      	ldr	r3, [pc, #676]	@ (80033bc <_ZN12MainViewBaseC1Ev+0x348>)
 8003118:	f8c4 30cc 	str.w	r3, [r4, #204]	@ 0xcc
 800311c:	f504 736a 	add.w	r3, r4, #936	@ 0x3a8
 8003120:	4618      	mov	r0, r3
 8003122:	9303      	str	r3, [sp, #12]
 8003124:	f007 fdb6 	bl	800ac94 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003128:	230a      	movs	r3, #10
 800312a:	f884 63e0 	strb.w	r6, [r4, #992]	@ 0x3e0
 800312e:	f8c4 33dc 	str.w	r3, [r4, #988]	@ 0x3dc
class GraphElementGridY : public GraphElementGridBase
 8003132:	4ba3      	ldr	r3, [pc, #652]	@ (80033c0 <_ZN12MainViewBaseC1Ev+0x34c>)
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003134:	f8c4 53e4 	str.w	r5, [r4, #996]	@ 0x3e4
class GraphElementGridY : public GraphElementGridBase
 8003138:	f8c4 33a8 	str.w	r3, [r4, #936]	@ 0x3a8
 800313c:	f504 737a 	add.w	r3, r4, #1000	@ 0x3e8
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003140:	e9c4 56f5 	strd	r5, r6, [r4, #980]	@ 0x3d4

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 8003144:	4618      	mov	r0, r3
 8003146:	9304      	str	r3, [sp, #16]
 8003148:	f7ff ff44 	bl	8002fd4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800314c:	4b9d      	ldr	r3, [pc, #628]	@ (80033c4 <_ZN12MainViewBaseC1Ev+0x350>)
 800314e:	f8c4 33e8 	str.w	r3, [r4, #1000]	@ 0x3e8
 8003152:	f204 4334 	addw	r3, r4, #1076	@ 0x434

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8003156:	4618      	mov	r0, r3
 8003158:	9305      	str	r3, [sp, #20]
 800315a:	f7ff ff3b 	bl	8002fd4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800315e:	4b9a      	ldr	r3, [pc, #616]	@ (80033c8 <_ZN12MainViewBaseC1Ev+0x354>)
 8003160:	f8c4 3434 	str.w	r3, [r4, #1076]	@ 0x434
 8003164:	f504 6390 	add.w	r3, r4, #1152	@ 0x480
        : CanvasWidget()
 8003168:	4618      	mov	r0, r3
 800316a:	9306      	str	r3, [sp, #24]
 800316c:	f007 fd92 	bl	800ac94 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8003170:	4b96      	ldr	r3, [pc, #600]	@ (80033cc <_ZN12MainViewBaseC1Ev+0x358>)
 8003172:	f504 6296 	add.w	r2, r4, #1200	@ 0x4b0
 8003176:	f8c4 3480 	str.w	r3, [r4, #1152]	@ 0x480
 800317a:	f04f 0302 	mov.w	r3, #2
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800317e:	4610      	mov	r0, r2
 8003180:	9207      	str	r2, [sp, #28]
 8003182:	f884 34ac 	strb.w	r3, [r4, #1196]	@ 0x4ac
 8003186:	f7ff ff43 	bl	8003010 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800318a:	4b91      	ldr	r3, [pc, #580]	@ (80033d0 <_ZN12MainViewBaseC1Ev+0x35c>)
 800318c:	4658      	mov	r0, fp
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800318e:	f8c4 54bc 	str.w	r5, [r4, #1212]	@ 0x4bc
 8003192:	f8c4 34b0 	str.w	r3, [r4, #1200]	@ 0x4b0
 8003196:	3324      	adds	r3, #36	@ 0x24
 8003198:	f8c4 34b8 	str.w	r3, [r4, #1208]	@ 0x4b8
 800319c:	f006 fcea 	bl	8009b74 <_ZN8touchgfx6SliderC1Ev>
        : pobject(pObject), pmemfun(pmemfun_2)
 80031a0:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 80031a4:	4a8b      	ldr	r2, [pc, #556]	@ (80033d4 <_ZN12MainViewBaseC1Ev+0x360>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80031a6:	f504 60b7 	add.w	r0, r4, #1464	@ 0x5b8
 80031aa:	f44f 51e1 	mov.w	r1, #7200	@ 0x1c20
 80031ae:	e9c3 2476 	strd	r2, r4, [r3, #472]	@ 0x1d8
 80031b2:	4a89      	ldr	r2, [pc, #548]	@ (80033d8 <_ZN12MainViewBaseC1Ev+0x364>)
 80031b4:	e9c3 2578 	strd	r2, r5, [r3, #480]	@ 0x1e0
 80031b8:	f00a fae4 	bl	800d784 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 480, 272);
 80031bc:	f44f 7388 	mov.w	r3, #272	@ 0x110
 80031c0:	462a      	mov	r2, r5
 80031c2:	4629      	mov	r1, r5
 80031c4:	4648      	mov	r0, r9
 80031c6:	9300      	str	r3, [sp, #0]
 80031c8:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 80031cc:	f7ff fe93 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80031d0:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 80031d4:	4649      	mov	r1, r9
 80031d6:	4640      	mov	r0, r8
 80031d8:	66a2      	str	r2, [r4, #104]	@ 0x68
    graphBackground.setPosition(15, 24, 389, 224);
 80031da:	f04f 09e0 	mov.w	r9, #224	@ 0xe0
 80031de:	f005 fff7 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setXY(0, 0);
 80031e2:	462a      	mov	r2, r5
 80031e4:	4629      	mov	r1, r5
 80031e6:	4650      	mov	r0, sl
 80031e8:	f7ff fe78 	bl	8002edc <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_480X272PX_ID));
 80031ec:	a90b      	add	r1, sp, #44	@ 0x2c
 80031ee:	4650      	mov	r0, sl
 80031f0:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
 80031f4:	f009 fbca 	bl	800c98c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031f8:	4651      	mov	r1, sl
 80031fa:	4640      	mov	r0, r8
        color = newColor;
 80031fc:	f8df a1dc 	ldr.w	sl, [pc, #476]	@ 80033dc <_ZN12MainViewBaseC1Ev+0x368>
 8003200:	f005 ffe6 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    graphBackground.setPosition(15, 24, 389, 224);
 8003204:	9802      	ldr	r0, [sp, #8]
 8003206:	f8cd 9000 	str.w	r9, [sp]
 800320a:	f240 1385 	movw	r3, #389	@ 0x185
 800320e:	2218      	movs	r2, #24
 8003210:	210f      	movs	r1, #15
 8003212:	f7ff fe70 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003216:	f04f 33ff 	mov.w	r3, #4294967295
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 800321a:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 800321e:	9902      	ldr	r1, [sp, #8]
 8003220:	4640      	mov	r0, r8
 8003222:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8003226:	f8c4 20c4 	str.w	r2, [r4, #196]	@ 0xc4
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 800322a:	f8a4 60c8 	strh.w	r6, [r4, #200]	@ 0xc8
 800322e:	f005 ffcf 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    graph.setPosition(15, 24, 389, 224);
 8003232:	f240 1385 	movw	r3, #389	@ 0x185
 8003236:	4638      	mov	r0, r7
 8003238:	f8cd 9000 	str.w	r9, [sp]
 800323c:	2218      	movs	r2, #24
 800323e:	210f      	movs	r1, #15
 8003240:	f7ff fe59 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
    graph.setScale(1);
 8003244:	462a      	mov	r2, r5
 8003246:	4631      	mov	r1, r6
 8003248:	4638      	mov	r0, r7
 800324a:	f7ff fbb9 	bl	80029c0 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    graph.setGraphRangeX(0, 100);
 800324e:	4629      	mov	r1, r5
 8003250:	4638      	mov	r0, r7
 8003252:	2264      	movs	r2, #100	@ 0x64
 8003254:	f7ff f9f6 	bl	8002644 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    graph.setGraphAreaMargin(10, 28, 19, 22);
 8003258:	2316      	movs	r3, #22
 800325a:	4638      	mov	r0, r7
 800325c:	221c      	movs	r2, #28
 800325e:	9300      	str	r3, [sp, #0]
 8003260:	210a      	movs	r1, #10
 8003262:	2313      	movs	r3, #19
        setIntervalScaled(abs(interval) * dataScale);
 8003264:	f04f 0914 	mov.w	r9, #20
 8003268:	f008 f889 	bl	800b37e <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    graph.setGraphAreaPadding(2, 6, 0, 6);
 800326c:	2206      	movs	r2, #6
 800326e:	462b      	mov	r3, r5
 8003270:	4638      	mov	r0, r7
 8003272:	9200      	str	r2, [sp, #0]
 8003274:	2102      	movs	r1, #2
 8003276:	f007 ff85 	bl	800b184 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    graph.setGraphRangeY(0, 180);
 800327a:	4629      	mov	r1, r5
 800327c:	4638      	mov	r0, r7
 800327e:	22b4      	movs	r2, #180	@ 0xb4
 8003280:	f7ff fa71 	bl	8002766 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>
 8003284:	f8d4 13d8 	ldr.w	r1, [r4, #984]	@ 0x3d8
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8003288:	4632      	mov	r2, r6
        color = newColor;
 800328a:	f8c4 a3d4 	str.w	sl, [r4, #980]	@ 0x3d4
        setIntervalScaled(abs(interval) * dataScale);
 800328e:	fb09 f001 	mul.w	r0, r9, r1
        lineWidth = width;
 8003292:	f884 63e0 	strb.w	r6, [r4, #992]	@ 0x3e0
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 8003296:	2800      	cmp	r0, #0
 8003298:	bfb8      	it	lt
 800329a:	4240      	neglt	r0, r0
        gridInterval = abs(interval);
 800329c:	f8c4 03dc 	str.w	r0, [r4, #988]	@ 0x3dc
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80032a0:	f008 f920 	bl	800b4e4 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    graph.addGraphElement(graphMajorYAxisGrid);
 80032a4:	9903      	ldr	r1, [sp, #12]
        dataScale = scale;
 80032a6:	e9c4 60f6 	strd	r6, r0, [r4, #984]	@ 0x3d8
 80032aa:	4638      	mov	r0, r7
 80032ac:	f007 ff75 	bl	800b19a <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 80032b0:	f8d4 1418 	ldr.w	r1, [r4, #1048]	@ 0x418
        color = newColor;
 80032b4:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
class TypedText
 80032b8:	f8a4 6424 	strh.w	r6, [r4, #1060]	@ 0x424
        return i * scale;
 80032bc:	fb09 f001 	mul.w	r0, r9, r1
 80032c0:	f8c4 2414 	str.w	r2, [r4, #1044]	@ 0x414
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80032c4:	4632      	mov	r2, r6
 80032c6:	2800      	cmp	r0, #0
 80032c8:	bfb8      	it	lt
 80032ca:	4240      	neglt	r0, r0
        labelInterval = abs(interval);
 80032cc:	f8c4 041c 	str.w	r0, [r4, #1052]	@ 0x41c
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80032d0:	f008 f908 	bl	800b4e4 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    graph.addBottomElement(graphMajorXAxisLabel);
 80032d4:	9904      	ldr	r1, [sp, #16]
 80032d6:	f8c4 041c 	str.w	r0, [r4, #1052]	@ 0x41c
 80032da:	4638      	mov	r0, r7
        dataScale = scale;
 80032dc:	f8c4 6418 	str.w	r6, [r4, #1048]	@ 0x418
 80032e0:	f007 ff7f 	bl	800b1e2 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 80032e4:	f8d4 1464 	ldr.w	r1, [r4, #1124]	@ 0x464
 80032e8:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 80032ec:	f8a4 5470 	strh.w	r5, [r4, #1136]	@ 0x470
 80032f0:	fb09 f001 	mul.w	r0, r9, r1
 80032f4:	f8c4 2460 	str.w	r2, [r4, #1120]	@ 0x460
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80032f8:	4632      	mov	r2, r6
 80032fa:	2800      	cmp	r0, #0
 80032fc:	bfb8      	it	lt
 80032fe:	4240      	neglt	r0, r0
        labelInterval = abs(interval);
 8003300:	f8c4 0468 	str.w	r0, [r4, #1128]	@ 0x468
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8003304:	f008 f8ee 	bl	800b4e4 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    graph.addLeftElement(graphMajorYAxisLabel);
 8003308:	9905      	ldr	r1, [sp, #20]
 800330a:	f8c4 0468 	str.w	r0, [r4, #1128]	@ 0x468
 800330e:	4638      	mov	r0, r7
        dataScale = scale;
 8003310:	f8c4 6464 	str.w	r6, [r4, #1124]	@ 0x464
 8003314:	f007 ff53 	bl	800b1be <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003318:	f241 43b8 	movw	r3, #5304	@ 0x14b8
    graph.addGraphElement(graphLine1);
 800331c:	9906      	ldr	r1, [sp, #24]
 800331e:	4638      	mov	r0, r7
 8003320:	f8a4 34c0 	strh.w	r3, [r4, #1216]	@ 0x4c0
        canvasPainter = &painter;
 8003324:	9b07      	ldr	r3, [sp, #28]
 8003326:	f8c4 a4bc 	str.w	sl, [r4, #1212]	@ 0x4bc
 800332a:	f8c4 34a8 	str.w	r3, [r4, #1192]	@ 0x4a8
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 800332e:	f04f 0302 	mov.w	r3, #2
 8003332:	f884 34ac 	strb.w	r3, [r4, #1196]	@ 0x4ac
 8003336:	f007 ff30 	bl	800b19a <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
 800333a:	4639      	mov	r1, r7
 800333c:	4640      	mov	r0, r8
 800333e:	2703      	movs	r7, #3
 8003340:	f005 ff46 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sliderResolution.setXY(424, 47);
 8003344:	4658      	mov	r0, fp
 8003346:	222f      	movs	r2, #47	@ 0x2f
 8003348:	f44f 71d4 	mov.w	r1, #424	@ 0x1a8
 800334c:	f7ff fdc6 	bl	8002edc <_ZN8touchgfx8Drawable5setXYEss>
 8003350:	f04f 0302 	mov.w	r3, #2
    sliderResolution.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
 8003354:	aa0a      	add	r2, sp, #40	@ 0x28
 8003356:	a909      	add	r1, sp, #36	@ 0x24
 8003358:	4658      	mov	r0, fp
 800335a:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800335e:	ab0b      	add	r3, sp, #44	@ 0x2c
 8003360:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8003364:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 8003368:	f006 fc5e 	bl	8009c28 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    sliderResolution.setupVerticalSlider(7, 3, 0, 0, 125);
 800336c:	237d      	movs	r3, #125	@ 0x7d
 800336e:	463a      	mov	r2, r7
 8003370:	4658      	mov	r0, fp
 8003372:	2107      	movs	r1, #7
 8003374:	e9cd 5300 	strd	r5, r3, [sp]
 8003378:	462b      	mov	r3, r5
 800337a:	f006 fba4 	bl	8009ac6 <_ZN8touchgfx6Slider19setupVerticalSliderEsssss>
    sliderResolution.setValueRange(20, 250);
 800337e:	22fa      	movs	r2, #250	@ 0xfa
 8003380:	4649      	mov	r1, r9
 8003382:	4658      	mov	r0, fp
 8003384:	f006 f9f1 	bl	800976a <_ZN8touchgfx6Slider13setValueRangeEss>
    sliderResolution.setValue(180);
 8003388:	4658      	mov	r0, fp
 800338a:	21b4      	movs	r1, #180	@ 0xb4
 800338c:	f006 f9b5 	bl	80096fa <_ZN8touchgfx6Slider8setValueEs>
    sliderResolution.setNewValueCallback(sliderValueChangedCallback);
 8003390:	f504 5307 	add.w	r3, r4, #8640	@ 0x21c0
 8003394:	4640      	mov	r0, r8
 8003396:	4659      	mov	r1, fp
 8003398:	3318      	adds	r3, #24
     *
     * @see GenericCallback
     */
    void setNewValueCallback(GenericCallback<const Slider&, int>& callback)
    {
        newValueCallback = &callback;
 800339a:	f8c4 35b4 	str.w	r3, [r4, #1460]	@ 0x5b4
 800339e:	f005 ff17 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80033a2:	4620      	mov	r0, r4
 80033a4:	b00d      	add	sp, #52	@ 0x34
 80033a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80033aa:	bf00      	nop
 80033ac:	08022c80 	.word	0x08022c80
 80033b0:	080237e0 	.word	0x080237e0
 80033b4:	08023778 	.word	0x08023778
 80033b8:	080231e8 	.word	0x080231e8
 80033bc:	08022ad0 	.word	0x08022ad0
 80033c0:	080229f8 	.word	0x080229f8
 80033c4:	08023530 	.word	0x08023530
 80033c8:	080235d0 	.word	0x080235d0
 80033cc:	080234b0 	.word	0x080234b0
 80033d0:	08023138 	.word	0x08023138
 80033d4:	08022c68 	.word	0x08022c68
 80033d8:	08002e39 	.word	0x08002e39
 80033dc:	ff1497c5 	.word	0xff1497c5

080033e0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_NotoSans_Regular_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_NotoSans_Regular_12_4bpp();

touchgfx::GeneratedFont& getFont_NotoSans_Regular_12_4bpp()
{
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 15, 14, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 80033e0:	4770      	bx	lr
	...

080033e4 <_Z32getFont_NotoSans_Regular_12_4bppv>:
{
 80033e4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 15, 14, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 80033e6:	4d17      	ldr	r5, [pc, #92]	@ (8003444 <_Z32getFont_NotoSans_Regular_12_4bppv+0x60>)
{
 80033e8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont NotoSans_Regular_12_4bpp(glyphs_NotoSans_Regular_12_4bpp, 15, 14, 12, 0, 0, 4, 1, 0, 0, unicodes_NotoSans_Regular_12_4bpp, kerning_NotoSans_Regular_12_4bpp, 63, 0, 0, 0);
 80033ea:	682c      	ldr	r4, [r5, #0]
 80033ec:	f3bf 8f5b 	dmb	ish
 80033f0:	f014 0401 	ands.w	r4, r4, #1
 80033f4:	d122      	bne.n	800343c <_Z32getFont_NotoSans_Regular_12_4bppv+0x58>
 80033f6:	4628      	mov	r0, r5
 80033f8:	f01c feab 	bl	8020152 <__cxa_guard_acquire>
 80033fc:	b1f0      	cbz	r0, 800343c <_Z32getFont_NotoSans_Regular_12_4bppv+0x58>
 80033fe:	233f      	movs	r3, #63	@ 0x3f
 8003400:	2201      	movs	r2, #1
 8003402:	4911      	ldr	r1, [pc, #68]	@ (8003448 <_Z32getFont_NotoSans_Regular_12_4bppv+0x64>)
 8003404:	9309      	str	r3, [sp, #36]	@ 0x24
 8003406:	4b11      	ldr	r3, [pc, #68]	@ (800344c <_Z32getFont_NotoSans_Regular_12_4bppv+0x68>)
 8003408:	4811      	ldr	r0, [pc, #68]	@ (8003450 <_Z32getFont_NotoSans_Regular_12_4bppv+0x6c>)
 800340a:	9308      	str	r3, [sp, #32]
 800340c:	4b11      	ldr	r3, [pc, #68]	@ (8003454 <_Z32getFont_NotoSans_Regular_12_4bppv+0x70>)
 800340e:	940a      	str	r4, [sp, #40]	@ 0x28
 8003410:	9405      	str	r4, [sp, #20]
 8003412:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003416:	2304      	movs	r3, #4
 8003418:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800341c:	230c      	movs	r3, #12
 800341e:	220f      	movs	r2, #15
 8003420:	9300      	str	r3, [sp, #0]
 8003422:	230e      	movs	r3, #14
 8003424:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003428:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800342c:	f7ff f8a4 	bl	8002578 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003430:	4809      	ldr	r0, [pc, #36]	@ (8003458 <_Z32getFont_NotoSans_Regular_12_4bppv+0x74>)
 8003432:	f01d fc15 	bl	8020c60 <atexit>
 8003436:	4628      	mov	r0, r5
 8003438:	f01c fe97 	bl	802016a <__cxa_guard_release>
    return NotoSans_Regular_12_4bpp;
}
 800343c:	4804      	ldr	r0, [pc, #16]	@ (8003450 <_Z32getFont_NotoSans_Regular_12_4bppv+0x6c>)
 800343e:	b00f      	add	sp, #60	@ 0x3c
 8003440:	bd30      	pop	{r4, r5, pc}
 8003442:	bf00      	nop
 8003444:	20003710 	.word	0x20003710
 8003448:	900485b0 	.word	0x900485b0
 800344c:	0802411c 	.word	0x0802411c
 8003450:	20003714 	.word	0x20003714
 8003454:	08024120 	.word	0x08024120
 8003458:	080033e1 	.word	0x080033e1

0800345c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 800345c:	2000      	movs	r0, #0
 800345e:	4770      	bx	lr

08003460 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8003460:	2000      	movs	r0, #0
 8003462:	4770      	bx	lr

08003464 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003464:	b40e      	push	{r1, r2, r3}
 8003466:	b503      	push	{r0, r1, lr}
 8003468:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800346a:	2100      	movs	r1, #0
{
 800346c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8003470:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003472:	f00c fd61 	bl	800ff38 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003476:	b002      	add	sp, #8
 8003478:	f85d eb04 	ldr.w	lr, [sp], #4
 800347c:	b003      	add	sp, #12
 800347e:	4770      	bx	lr

08003480 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003480:	b40c      	push	{r2, r3}
 8003482:	b507      	push	{r0, r1, r2, lr}
 8003484:	ab04      	add	r3, sp, #16
 8003486:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800348a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800348c:	f00c fd54 	bl	800ff38 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003490:	b003      	add	sp, #12
 8003492:	f85d eb04 	ldr.w	lr, [sp], #4
 8003496:	b002      	add	sp, #8
 8003498:	4770      	bx	lr
	...

0800349c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800349c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 800349e:	b510      	push	{r4, lr}
 80034a0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80034a2:	b373      	cbz	r3, 8003502 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80034a4:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 80034a6:	b92b      	cbnz	r3, 80034b4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80034a8:	4b18      	ldr	r3, [pc, #96]	@ (800350c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80034aa:	21c5      	movs	r1, #197	@ 0xc5
 80034ac:	4a18      	ldr	r2, [pc, #96]	@ (8003510 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80034ae:	4819      	ldr	r0, [pc, #100]	@ (8003514 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80034b0:	f01d fbb8 	bl	8020c24 <__assert_func>
            return buffer[pos];
 80034b4:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80034b6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80034ba:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 80034bc:	b30b      	cbz	r3, 8003502 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80034be:	f00e f89f 	bl	8011600 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80034c2:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80034c4:	2b01      	cmp	r3, #1
 80034c6:	d803      	bhi.n	80034d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80034c8:	4b13      	ldr	r3, [pc, #76]	@ (8003518 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80034ca:	21cb      	movs	r1, #203	@ 0xcb
 80034cc:	4a13      	ldr	r2, [pc, #76]	@ (800351c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80034ce:	e7ee      	b.n	80034ae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80034d0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80034d2:	f640 103f 	movw	r0, #2367	@ 0x93f
 80034d6:	1c53      	adds	r3, r2, #1
 80034d8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80034da:	2b09      	cmp	r3, #9
 80034dc:	4619      	mov	r1, r3
 80034de:	bf88      	it	hi
 80034e0:	f1a3 010a 	subhi.w	r1, r3, #10
 80034e4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80034e8:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 80034ea:	4281      	cmp	r1, r0
 80034ec:	d109      	bne.n	8003502 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80034ee:	2b0a      	cmp	r3, #10
 80034f0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80034f4:	bf28      	it	cs
 80034f6:	2300      	movcs	r3, #0
            return buffer[pos];
 80034f8:	8c50      	ldrh	r0, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80034fa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80034fe:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8003500:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8003502:	4620      	mov	r0, r4
}
 8003504:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003508:	f00d bf7c 	b.w	8011404 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800350c:	08022cb0 	.word	0x08022cb0
 8003510:	08022cb9 	.word	0x08022cb9
 8003514:	08022d64 	.word	0x08022d64
 8003518:	08022dae 	.word	0x08022dae
 800351c:	08022dbc 	.word	0x08022dbc

08003520 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003520:	f00d bf39 	b.w	8011396 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003524 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003524:	b510      	push	{r4, lr}
 8003526:	b086      	sub	sp, #24
 8003528:	ac02      	add	r4, sp, #8
 800352a:	e884 0006 	stmia.w	r4, {r1, r2}
 800352e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8003530:	ab0a      	add	r3, sp, #40	@ 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003532:	4621      	mov	r1, r4
    va_start(pArg, format);
 8003534:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003536:	9301      	str	r3, [sp, #4]
 8003538:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800353a:	9300      	str	r3, [sp, #0]
 800353c:	9b08      	ldr	r3, [sp, #32]
 800353e:	f00b f991 	bl	800e864 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8003542:	b006      	add	sp, #24
 8003544:	bd10      	pop	{r4, pc}
	...

08003548 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003548:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800354a:	bb18      	cbnz	r0, 8003594 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800354c:	4b12      	ldr	r3, [pc, #72]	@ (8003598 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800354e:	4813      	ldr	r0, [pc, #76]	@ (800359c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003550:	681c      	ldr	r4, [r3, #0]
 8003552:	4913      	ldr	r1, [pc, #76]	@ (80035a0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003554:	b1b4      	cbz	r4, 8003584 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003556:	6822      	ldr	r2, [r4, #0]
 8003558:	4422      	add	r2, r4
 800355a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800355c:	6862      	ldr	r2, [r4, #4]
 800355e:	4422      	add	r2, r4
 8003560:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003562:	68a2      	ldr	r2, [r4, #8]
 8003564:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8003566:	4b0f      	ldr	r3, [pc, #60]	@ (80035a4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003568:	2200      	movs	r2, #0
 800356a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800356c:	f000 f838 	bl	80035e0 <_ZN17TypedTextDatabase8getFontsEv>
 8003570:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003572:	f000 f833 	bl	80035dc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003576:	4b0c      	ldr	r3, [pc, #48]	@ (80035a8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003578:	601c      	str	r4, [r3, #0]
        fonts = f;
 800357a:	4b0c      	ldr	r3, [pc, #48]	@ (80035ac <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800357c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800357e:	4b0c      	ldr	r3, [pc, #48]	@ (80035b0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003580:	8018      	strh	r0, [r3, #0]
    }
}
 8003582:	e007      	b.n	8003594 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003584:	4b0b      	ldr	r3, [pc, #44]	@ (80035b4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003586:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003588:	4b0b      	ldr	r3, [pc, #44]	@ (80035b8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800358a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800358c:	4b0b      	ldr	r3, [pc, #44]	@ (80035bc <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800358e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003590:	2c00      	cmp	r4, #0
 8003592:	d1e8      	bne.n	8003566 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003594:	bd38      	pop	{r3, r4, r5, pc}
 8003596:	bf00      	nop
 8003598:	2000374c 	.word	0x2000374c
 800359c:	20003744 	.word	0x20003744
 80035a0:	20003740 	.word	0x20003740
 80035a4:	20003748 	.word	0x20003748
 80035a8:	20016a58 	.word	0x20016a58
 80035ac:	20016a60 	.word	0x20016a60
 80035b0:	20016a5c 	.word	0x20016a5c
 80035b4:	9004868c 	.word	0x9004868c
 80035b8:	90048684 	.word	0x90048684
 80035bc:	90048690 	.word	0x90048690

080035c0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80035c0:	4b04      	ldr	r3, [pc, #16]	@ (80035d4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80035c2:	681b      	ldr	r3, [r3, #0]
 80035c4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80035c8:	4b03      	ldr	r3, [pc, #12]	@ (80035d8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80035ca:	681b      	ldr	r3, [r3, #0]
}
 80035cc:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80035d0:	4770      	bx	lr
 80035d2:	bf00      	nop
 80035d4:	20003740 	.word	0x20003740
 80035d8:	20003744 	.word	0x20003744

080035dc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80035dc:	2002      	movs	r0, #2
 80035de:	4770      	bx	lr

080035e0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80035e0:	4800      	ldr	r0, [pc, #0]	@ (80035e4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80035e2:	4770      	bx	lr
 80035e4:	20003750 	.word	0x20003750

080035e8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 0:
        touchgfx_fonts[0] = &(getFont_NotoSans_Regular_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80035e8:	b508      	push	{r3, lr}
    &(getFont_NotoSans_Regular_12_4bpp())
 80035ea:	f7ff fefb 	bl	80033e4 <_Z32getFont_NotoSans_Regular_12_4bppv>
};
 80035ee:	4b01      	ldr	r3, [pc, #4]	@ (80035f4 <_GLOBAL__sub_I_touchgfx_fonts+0xc>)
 80035f0:	6018      	str	r0, [r3, #0]
} // namespace TypedTextDatabase
 80035f2:	bd08      	pop	{r3, pc}
 80035f4:	20003750 	.word	0x20003750

080035f8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80035f8:	4770      	bx	lr

080035fa <_ZN19FrontendApplicationD0Ev>:
 80035fa:	b510      	push	{r4, lr}
 80035fc:	4604      	mov	r4, r0
 80035fe:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003602:	f01c fda4 	bl	802014e <_ZdlPvj>
 8003606:	4620      	mov	r0, r4
 8003608:	bd10      	pop	{r4, pc}

0800360a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800360a:	b510      	push	{r4, lr}
 800360c:	4604      	mov	r4, r0
    {
        model.tick();
 800360e:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8003612:	f000 f8ee 	bl	80037f2 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003616:	4620      	mov	r0, r4
    }
 8003618:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800361c:	f00b bdc0 	b.w	800f1a0 <_ZN8touchgfx11Application15handleTickEventEv>

08003620 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003620:	b510      	push	{r4, lr}
 8003622:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003624:	f7fe ff36 	bl	8002494 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003628:	4b01      	ldr	r3, [pc, #4]	@ (8003630 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 800362a:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 800362c:	6023      	str	r3, [r4, #0]
}
 800362e:	bd10      	pop	{r4, pc}
 8003630:	08022e98 	.word	0x08022e98

08003634 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 8003634:	4770      	bx	lr

08003636 <_ZThn4_N13MainPresenterD1Ev>:
 8003636:	3804      	subs	r0, #4
 8003638:	4770      	bx	lr

0800363a <_ZN13MainPresenter10deactivateEv>:
}

void MainPresenter::activate()
{

}
 800363a:	4770      	bx	lr

0800363c <_ZN13MainPresenterD0Ev>:
 800363c:	b510      	push	{r4, lr}
 800363e:	4604      	mov	r4, r0
 8003640:	2110      	movs	r1, #16
 8003642:	f01c fd84 	bl	802014e <_ZdlPvj>
 8003646:	4620      	mov	r0, r4
 8003648:	bd10      	pop	{r4, pc}

0800364a <_ZThn4_N13MainPresenterD0Ev>:
 800364a:	f1a0 0004 	sub.w	r0, r0, #4
 800364e:	e7f5      	b.n	800363c <_ZN13MainPresenterD0Ev>

08003650 <_ZN13MainPresenterC1ER8MainView>:
    ModelListener() : model(0) {}
 8003650:	2200      	movs	r2, #0
    : view(v)
 8003652:	60c1      	str	r1, [r0, #12]
 8003654:	6082      	str	r2, [r0, #8]
 8003656:	4a02      	ldr	r2, [pc, #8]	@ (8003660 <_ZN13MainPresenterC1ER8MainView+0x10>)
 8003658:	6002      	str	r2, [r0, #0]
 800365a:	3218      	adds	r2, #24
 800365c:	6042      	str	r2, [r0, #4]
}
 800365e:	4770      	bx	lr
 8003660:	08022eec 	.word	0x08022eec

08003664 <_ZN8MainView14tearDownScreenEv>:
}

void MainView::tearDownScreen()
{
    MainViewBase::tearDownScreen();
}
 8003664:	4770      	bx	lr
	...

08003668 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    virtual ~MainView() {}
 8003668:	4b03      	ldr	r3, [pc, #12]	@ (8003678 <_ZN8MainViewD1Ev+0x10>)
 800366a:	b510      	push	{r4, lr}
 800366c:	4604      	mov	r4, r0
 800366e:	6003      	str	r3, [r0, #0]
 8003670:	f7ff fbba 	bl	8002de8 <_ZN12MainViewBaseD1Ev>
 8003674:	4620      	mov	r0, r4
 8003676:	bd10      	pop	{r4, pc}
 8003678:	08022f14 	.word	0x08022f14

0800367c <_ZN8MainViewD0Ev>:
 800367c:	b510      	push	{r4, lr}
 800367e:	4604      	mov	r4, r0
 8003680:	f7ff fff2 	bl	8003668 <_ZN8MainViewD1Ev>
 8003684:	f242 11ec 	movw	r1, #8684	@ 0x21ec
 8003688:	4620      	mov	r0, r4
 800368a:	f01c fd60 	bl	802014e <_ZdlPvj>
 800368e:	4620      	mov	r0, r4
 8003690:	bd10      	pop	{r4, pc}
	...

08003694 <_ZN8MainView15handleTickEventEv>:

void MainView::handleTickEvent()
{
    tickCounter++;
 8003694:	f500 5300 	add.w	r3, r0, #8192	@ 0x2000
{
 8003698:	b570      	push	{r4, r5, r6, lr}
    tickCounter++;
 800369a:	f8d3 51e8 	ldr.w	r5, [r3, #488]	@ 0x1e8
{
 800369e:	4604      	mov	r4, r0
    tickCounter++;
 80036a0:	3501      	adds	r5, #1
{
 80036a2:	ed2d 8b02 	vpush	{d8}
    tickCounter++;
 80036a6:	f8c3 51e8 	str.w	r5, [r3, #488]	@ 0x1e8

    // Insert each second tick
    if (tickCounter % 2 == 0)
 80036aa:	07eb      	lsls	r3, r5, #31
 80036ac:	d447      	bmi.n	800373e <_ZN8MainView15handleTickEventEv+0xaa>
        return scaled2float(i, yScale);
 80036ae:	f8d0 6100 	ldr.w	r6, [r0, #256]	@ 0x100
        return (float)i / (float)scale;
 80036b2:	edd0 7a81 	vldr	s15, [r0, #516]	@ 0x204
 80036b6:	ee07 6a10 	vmov	s14, r6
 80036ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80036be:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80036c2:	ee87 8a87 	vdiv.f32	s16, s15, s14
    {
        float yMax = graph.getGraphRangeYMaxAsFloat();

        // Insert "random" points along a sine wave
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 80036c6:	ee07 5a90 	vmov	s15, r5
 80036ca:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80036ce:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 8003744 <_ZN8MainView15handleTickEventEv+0xb0>
 80036d2:	ee20 0a27 	vmul.f32	s0, s0, s15
 80036d6:	f01c fd63 	bl	80201a0 <sinf>
 80036da:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80036de:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 8003748 <_ZN8MainView15handleTickEventEv+0xb4>
    const uint16_t num = (seed * (1337 + last)) % 0xFFFF;
 80036e2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80036e6:	4919      	ldr	r1, [pc, #100]	@ (800374c <_ZN8MainView15handleTickEventEv+0xb8>)
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 80036e8:	ee30 0a27 	vadd.f32	s0, s0, s15
    const uint16_t num = (seed * (1337 + last)) % 0xFFFF;
 80036ec:	880b      	ldrh	r3, [r1, #0]
 80036ee:	f203 5339 	addw	r3, r3, #1337	@ 0x539
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 80036f2:	eec8 7a07 	vdiv.f32	s15, s16, s14
    const uint16_t num = (seed * (1337 + last)) % 0xFFFF;
 80036f6:	436b      	muls	r3, r5
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 80036f8:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
    const uint16_t num = (seed * (1337 + last)) % 0xFFFF;
 80036fc:	fb93 f2f2 	sdiv	r2, r3, r2
 8003700:	ebc2 4202 	rsb	r2, r2, r2, lsl #16
 8003704:	1a9b      	subs	r3, r3, r2
 8003706:	800b      	strh	r3, [r1, #0]
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 8003708:	b29b      	uxth	r3, r3
 800370a:	ee20 0a27 	vmul.f32	s0, s0, s15
 800370e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003712:	ee17 1a90 	vmov	r1, s15
 8003716:	eec8 7a07 	vdiv.f32	s15, s16, s14
    }
}
 800371a:	ecbd 8b02 	vpop	{d8}
        graph.addDataPoint((int)((sinf(tickCounter * .02f) + 1) * (yMax / 2.2f)) + randomish(tickCounter) % (int)(yMax / 10.f));
 800371e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003722:	ee17 2a90 	vmov	r2, s15
 8003726:	fb93 f0f2 	sdiv	r0, r3, r2
 800372a:	fb02 3310 	mls	r3, r2, r0, r3
        return addDataPointScaled(int2scaledY(y));
 800372e:	f104 00cc 	add.w	r0, r4, #204	@ 0xcc
 8003732:	4419      	add	r1, r3
 8003734:	4371      	muls	r1, r6
}
 8003736:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800373a:	f007 bf2c 	b.w	800b596 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
 800373e:	ecbd 8b02 	vpop	{d8}
 8003742:	bd70      	pop	{r4, r5, r6, pc}
 8003744:	3ca3d70a 	.word	0x3ca3d70a
 8003748:	400ccccd 	.word	0x400ccccd
 800374c:	20003754 	.word	0x20003754

08003750 <_ZN8MainViewC1Ev>:
MainView::MainView()
 8003750:	b510      	push	{r4, lr}
 8003752:	4604      	mov	r4, r0
 8003754:	f7ff fc8e 	bl	8003074 <_ZN12MainViewBaseC1Ev>
 8003758:	4b04      	ldr	r3, [pc, #16]	@ (800376c <_ZN8MainViewC1Ev+0x1c>)
    tickCounter = 0;
 800375a:	2200      	movs	r2, #0
}
 800375c:	4620      	mov	r0, r4
MainView::MainView()
 800375e:	6023      	str	r3, [r4, #0]
    tickCounter = 0;
 8003760:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
 8003764:	f8c3 21e8 	str.w	r2, [r3, #488]	@ 0x1e8
}
 8003768:	bd10      	pop	{r4, pc}
 800376a:	bf00      	nop
 800376c:	08022f14 	.word	0x08022f14

08003770 <_ZN8MainView11setupScreenEv>:
{
 8003770:	b510      	push	{r4, lr}
 8003772:	4604      	mov	r4, r0
    MainViewBase::setupScreen();
 8003774:	f7ff faf5 	bl	8002d62 <_ZN12MainViewBase11setupScreenEv>
    sliderValueChanged(sliderResolution.getValue());
 8003778:	6823      	ldr	r3, [r4, #0]
 800377a:	4620      	mov	r0, r4
 800377c:	f9b4 14f2 	ldrsh.w	r1, [r4, #1266]	@ 0x4f2
 8003780:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
}
 8003782:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sliderValueChanged(sliderResolution.getValue());
 8003786:	4718      	bx	r3

08003788 <_ZN8MainView18sliderValueChangedEi>:

void MainView::sliderValueChanged(int value)
{
 8003788:	b570      	push	{r4, r5, r6, lr}
        return i * scale;
 800378a:	f8d0 2100 	ldr.w	r2, [r0, #256]	@ 0x100
    // Adjust the Y-axis max value according to the slider value
    graph.setGraphRangeY(0, value);
 800378e:	f100 06cc 	add.w	r6, r0, #204	@ 0xcc
{
 8003792:	4604      	mov	r4, r0
 8003794:	460d      	mov	r5, r1
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8003796:	434a      	muls	r2, r1
 8003798:	4630      	mov	r0, r6
 800379a:	2100      	movs	r1, #0
 800379c:	f007 faea 	bl	800ad74 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>
    graph.invalidate();
 80037a0:	4630      	mov	r0, r6
 80037a2:	f00c fcf4 	bl	801018e <_ZNK8touchgfx8Drawable10invalidateEv>

    // Adjust the interval of the labels/grid lines on the Y-axis
    // to match the new range.
    if (value > 199)
 80037a6:	2dc7      	cmp	r5, #199	@ 0xc7
 80037a8:	f8d4 3464 	ldr.w	r3, [r4, #1124]	@ 0x464
 80037ac:	f8d4 23d8 	ldr.w	r2, [r4, #984]	@ 0x3d8
 80037b0:	dd17      	ble.n	80037e2 <_ZN8MainView18sliderValueChangedEi+0x5a>
        return i * scale;
 80037b2:	2132      	movs	r1, #50	@ 0x32
 80037b4:	434b      	muls	r3, r1
    {
        graphMajorYAxisLabel.setInterval(10);
        graphMajorYAxisGrid.setInterval(10);
    }

    graphMajorYAxisLabel.invalidate();
 80037b6:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	bfb8      	it	lt
 80037be:	425b      	neglt	r3, r3
        labelInterval = abs(interval);
 80037c0:	f8c4 3468 	str.w	r3, [r4, #1128]	@ 0x468
        setIntervalScaled(abs(interval) * dataScale);
 80037c4:	fb01 f302 	mul.w	r3, r1, r2
 80037c8:	2b00      	cmp	r3, #0
 80037ca:	bfb8      	it	lt
 80037cc:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 80037ce:	f8c4 33dc 	str.w	r3, [r4, #988]	@ 0x3dc
 80037d2:	f007 fa43 	bl	800ac5c <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    graphMajorYAxisGrid.invalidate();
 80037d6:	f504 706a 	add.w	r0, r4, #936	@ 0x3a8
}
 80037da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    graphMajorYAxisGrid.invalidate();
 80037de:	f007 ba3d 	b.w	800ac5c <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    else if (value > 100)
 80037e2:	2d64      	cmp	r5, #100	@ 0x64
 80037e4:	bfcc      	ite	gt
 80037e6:	2114      	movgt	r1, #20
 80037e8:	210a      	movle	r1, #10
 80037ea:	e7e3      	b.n	80037b4 <_ZN8MainView18sliderValueChangedEi+0x2c>

080037ec <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 80037ec:	2200      	movs	r2, #0
 80037ee:	6002      	str	r2, [r0, #0]
{

}
 80037f0:	4770      	bx	lr

080037f2 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80037f2:	4770      	bx	lr

080037f4 <QSPI_AutoPollingMemReady.constprop.0>:
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout
  * @retval None
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80037f4:	b500      	push	{lr}
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80037f6:	f44f 7280 	mov.w	r2, #256	@ 0x100
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80037fa:	b095      	sub	sp, #84	@ 0x54
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80037fc:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003800:	4603      	mov	r3, r0
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003802:	920c      	str	r2, [sp, #48]	@ 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8003804:	2205      	movs	r2, #5
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003806:	910f      	str	r1, [sp, #60]	@ 0x3c
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8003808:	2101      	movs	r1, #1
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800380a:	9206      	str	r2, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800380c:	2200      	movs	r2, #0
  s_config.Mask            = N25Q128A_SR_WIP;
 800380e:	9101      	str	r1, [sp, #4]
  s_command.DummyCycles       = 0;
 8003810:	920b      	str	r2, [sp, #44]	@ 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003812:	9213      	str	r2, [sp, #76]	@ 0x4c
  s_config.Match           = 0;
 8003814:	9200      	str	r2, [sp, #0]
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
  s_config.Interval        = 0x10;
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003816:	480b      	ldr	r0, [pc, #44]	@ (8003844 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
  s_config.StatusBytesSize = 1;
 8003818:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800381c:	e9cd 220d 	strd	r2, r2, [sp, #52]	@ 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003820:	e9cd 2211 	strd	r2, r2, [sp, #68]	@ 0x44
  s_config.Interval        = 0x10;
 8003824:	2210      	movs	r2, #16
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003826:	a906      	add	r1, sp, #24
  s_config.Interval        = 0x10;
 8003828:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800382a:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 800382e:	9205      	str	r2, [sp, #20]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003830:	466a      	mov	r2, sp
 8003832:	f001 fd83 	bl	800533c <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8003836:	3800      	subs	r0, #0
 8003838:	bf18      	it	ne
 800383a:	2001      	movne	r0, #1
 800383c:	b015      	add	sp, #84	@ 0x54
 800383e:	f85d fb04 	ldr.w	pc, [sp], #4
 8003842:	bf00      	nop
 8003844:	20003758 	.word	0x20003758

08003848 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8003848:	b500      	push	{lr}
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800384a:	f44f 7380 	mov.w	r3, #256	@ 0x100
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 800384e:	b095      	sub	sp, #84	@ 0x54
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003850:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003854:	4817      	ldr	r0, [pc, #92]	@ (80038b4 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003856:	930c      	str	r3, [sp, #48]	@ 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8003858:	2306      	movs	r3, #6
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800385a:	a906      	add	r1, sp, #24
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800385c:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800385e:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003860:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
  s_command.DataMode          = QSPI_DATA_NONE;
 8003864:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.DummyCycles       = 0;
 8003866:	930b      	str	r3, [sp, #44]	@ 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003868:	9313      	str	r3, [sp, #76]	@ 0x4c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800386a:	e9cd 3311 	strd	r3, r3, [sp, #68]	@ 0x44
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800386e:	f001 fd20 	bl	80052b2 <HAL_QSPI_Command>
 8003872:	b9e0      	cbnz	r0, 80038ae <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8003874:	2302      	movs	r3, #2
  s_config.Interval        = 0x10;
 8003876:	2201      	movs	r2, #1
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8003878:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 800387c:	9004      	str	r0, [sp, #16]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800387e:	480d      	ldr	r0, [pc, #52]	@ (80038b4 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_config.Mask            = N25Q128A_SR_WREN;
 8003880:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8003884:	2310      	movs	r3, #16
 8003886:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800388a:	2305      	movs	r3, #5
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800388c:	466a      	mov	r2, sp
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800388e:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003892:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003896:	a906      	add	r1, sp, #24
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003898:	930f      	str	r3, [sp, #60]	@ 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800389a:	f241 3388 	movw	r3, #5000	@ 0x1388
 800389e:	f001 fd4d 	bl	800533c <HAL_QSPI_AutoPolling>
 80038a2:	3800      	subs	r0, #0
 80038a4:	bf18      	it	ne
 80038a6:	2001      	movne	r0, #1
}
 80038a8:	b015      	add	sp, #84	@ 0x54
 80038aa:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 80038ae:	2001      	movs	r0, #1
 80038b0:	e7fa      	b.n	80038a8 <QSPI_WriteEnable.constprop.0+0x60>
 80038b2:	bf00      	nop
 80038b4:	20003758 	.word	0x20003758

080038b8 <BSP_QSPI_EnableMemoryMappedMode>:
{
 80038b8:	b500      	push	{lr}
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80038ba:	f44f 7380 	mov.w	r3, #256	@ 0x100
{
 80038be:	b091      	sub	sp, #68	@ 0x44
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80038c0:	f04f 7240 	mov.w	r2, #50331648	@ 0x3000000
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80038c4:	480e      	ldr	r0, [pc, #56]	@ (8003900 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80038c6:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 80038c8:	23eb      	movs	r3, #235	@ 0xeb
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80038ca:	a902      	add	r1, sp, #8
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 80038cc:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 80038ce:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 80038d2:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 80038d4:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80038d8:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80038da:	2300      	movs	r3, #0
 80038dc:	e9cd 320a 	strd	r3, r2, [sp, #40]	@ 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 80038e0:	220a      	movs	r2, #10
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80038e2:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 80038e4:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80038e6:	466a      	mov	r2, sp
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80038e8:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 80038ec:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80038f0:	f001 fd75 	bl	80053de <HAL_QSPI_MemoryMapped>
}
 80038f4:	3800      	subs	r0, #0
 80038f6:	bf18      	it	ne
 80038f8:	2001      	movne	r0, #1
 80038fa:	b011      	add	sp, #68	@ 0x44
 80038fc:	f85d fb04 	ldr.w	pc, [sp], #4
 8003900:	20003758 	.word	0x20003758

08003904 <BSP_QSPI_MspInit>:
  QSPI_CLK_ENABLE();
 8003904:	4b45      	ldr	r3, [pc, #276]	@ (8003a1c <BSP_QSPI_MspInit+0x118>)
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8003906:	2101      	movs	r1, #1
  QSPI_CLK_ENABLE();
 8003908:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800390a:	f042 0202 	orr.w	r2, r2, #2
{
 800390e:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPI_CLK_ENABLE();
 8003910:	639a      	str	r2, [r3, #56]	@ 0x38
{
 8003912:	b08d      	sub	sp, #52	@ 0x34
  QSPI_CLK_ENABLE();
 8003914:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8003916:	2409      	movs	r4, #9
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003918:	4d41      	ldr	r5, [pc, #260]	@ (8003a20 <BSP_QSPI_MspInit+0x11c>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800391a:	2704      	movs	r7, #4
  QSPI_CLK_ENABLE();
 800391c:	f002 0202 	and.w	r2, r2, #2
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8003920:	2600      	movs	r6, #0
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003922:	4628      	mov	r0, r5
  QSPI_CLK_ENABLE();
 8003924:	9200      	str	r2, [sp, #0]
 8003926:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8003928:	699a      	ldr	r2, [r3, #24]
 800392a:	f042 0202 	orr.w	r2, r2, #2
 800392e:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003930:	699a      	ldr	r2, [r3, #24]
 8003932:	f022 0202 	bic.w	r2, r2, #2
 8003936:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8003938:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800393a:	f042 0202 	orr.w	r2, r2, #2
 800393e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003940:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003942:	f002 0202 	and.w	r2, r2, #2
 8003946:	9201      	str	r2, [sp, #4]
 8003948:	9a01      	ldr	r2, [sp, #4]
  QSPI_CLK_GPIO_CLK_ENABLE();
 800394a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800394c:	f042 0202 	orr.w	r2, r2, #2
 8003950:	631a      	str	r2, [r3, #48]	@ 0x30
 8003952:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003954:	f002 0202 	and.w	r2, r2, #2
 8003958:	9202      	str	r2, [sp, #8]
 800395a:	9a02      	ldr	r2, [sp, #8]
  QSPI_D0_GPIO_CLK_ENABLE();
 800395c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800395e:	f042 0208 	orr.w	r2, r2, #8
 8003962:	631a      	str	r2, [r3, #48]	@ 0x30
 8003964:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003966:	f002 0208 	and.w	r2, r2, #8
 800396a:	9203      	str	r2, [sp, #12]
 800396c:	9a03      	ldr	r2, [sp, #12]
  QSPI_D1_GPIO_CLK_ENABLE();
 800396e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003970:	f042 0208 	orr.w	r2, r2, #8
 8003974:	631a      	str	r2, [r3, #48]	@ 0x30
 8003976:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003978:	f002 0208 	and.w	r2, r2, #8
 800397c:	9204      	str	r2, [sp, #16]
 800397e:	9a04      	ldr	r2, [sp, #16]
  QSPI_D2_GPIO_CLK_ENABLE();
 8003980:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003982:	f042 0210 	orr.w	r2, r2, #16
 8003986:	631a      	str	r2, [r3, #48]	@ 0x30
 8003988:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800398a:	f002 0210 	and.w	r2, r2, #16
 800398e:	9205      	str	r2, [sp, #20]
 8003990:	9a05      	ldr	r2, [sp, #20]
  QSPI_D3_GPIO_CLK_ENABLE();
 8003992:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003994:	f042 0208 	orr.w	r2, r2, #8
 8003998:	631a      	str	r2, [r3, #48]	@ 0x30
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 800399a:	2240      	movs	r2, #64	@ 0x40
  QSPI_D3_GPIO_CLK_ENABLE();
 800399c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800399e:	f003 0308 	and.w	r3, r3, #8
 80039a2:	9306      	str	r3, [sp, #24]
 80039a4:	9b06      	ldr	r3, [sp, #24]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80039a6:	2302      	movs	r3, #2
 80039a8:	e9cd 2307 	strd	r2, r3, [sp, #28]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 80039ac:	2303      	movs	r3, #3
 80039ae:	e9cd 1309 	strd	r1, r3, [sp, #36]	@ 0x24
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 80039b2:	230a      	movs	r3, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80039b4:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 80039b6:	930b      	str	r3, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80039b8:	f000 fc48 	bl	800424c <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80039bc:	a907      	add	r1, sp, #28
 80039be:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80039c0:	9707      	str	r7, [sp, #28]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80039c2:	9609      	str	r6, [sp, #36]	@ 0x24
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80039c4:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80039c6:	f000 fc41 	bl	800424c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D0_PIN;
 80039ca:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 80039ce:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80039d0:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 80039d2:	441d      	add	r5, r3
  gpio_init_structure.Pin       = QSPI_D0_PIN;
 80039d4:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(QSPI_D0_GPIO_PORT, &gpio_init_structure);
 80039d6:	4628      	mov	r0, r5
 80039d8:	f000 fc38 	bl	800424c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D1_PIN;
 80039dc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  HAL_GPIO_Init(QSPI_D1_GPIO_PORT, &gpio_init_structure);
 80039e0:	a907      	add	r1, sp, #28
 80039e2:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = QSPI_D1_PIN;
 80039e4:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80039e6:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D1_GPIO_PORT, &gpio_init_structure);
 80039e8:	f000 fc30 	bl	800424c <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_D2_GPIO_PORT, &gpio_init_structure);
 80039ec:	a907      	add	r1, sp, #28
 80039ee:	480d      	ldr	r0, [pc, #52]	@ (8003a24 <BSP_QSPI_MspInit+0x120>)
  gpio_init_structure.Pin       = QSPI_D2_PIN;
 80039f0:	9707      	str	r7, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80039f2:	940b      	str	r4, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(QSPI_D2_GPIO_PORT, &gpio_init_structure);
 80039f4:	f000 fc2a 	bl	800424c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_D3_PIN;
 80039f8:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(QSPI_D3_GPIO_PORT, &gpio_init_structure);
 80039fc:	a907      	add	r1, sp, #28
 80039fe:	4628      	mov	r0, r5
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8003a00:	940b      	str	r4, [sp, #44]	@ 0x2c
  gpio_init_structure.Pin       = QSPI_D3_PIN;
 8003a02:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(QSPI_D3_GPIO_PORT, &gpio_init_structure);
 8003a04:	f000 fc22 	bl	800424c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8003a08:	4632      	mov	r2, r6
 8003a0a:	210f      	movs	r1, #15
 8003a0c:	205c      	movs	r0, #92	@ 0x5c
 8003a0e:	f000 f9d3 	bl	8003db8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8003a12:	205c      	movs	r0, #92	@ 0x5c
 8003a14:	f000 fa02 	bl	8003e1c <HAL_NVIC_EnableIRQ>
}
 8003a18:	b00d      	add	sp, #52	@ 0x34
 8003a1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003a1c:	40023800 	.word	0x40023800
 8003a20:	40020400 	.word	0x40020400
 8003a24:	40021000 	.word	0x40021000

08003a28 <BSP_QSPI_Init>:
{ 
 8003a28:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8003a2a:	4c49      	ldr	r4, [pc, #292]	@ (8003b50 <BSP_QSPI_Init+0x128>)
{ 
 8003a2c:	b091      	sub	sp, #68	@ 0x44
  QSPIHandle.Instance = QUADSPI;
 8003a2e:	4b49      	ldr	r3, [pc, #292]	@ (8003b54 <BSP_QSPI_Init+0x12c>)
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003a30:	4620      	mov	r0, r4
  QSPIHandle.Instance = QUADSPI;
 8003a32:	6023      	str	r3, [r4, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003a34:	f001 fc2a 	bl	800528c <HAL_QSPI_DeInit>
 8003a38:	4605      	mov	r5, r0
 8003a3a:	b110      	cbz	r0, 8003a42 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8003a3c:	2001      	movs	r0, #1
}
 8003a3e:	b011      	add	sp, #68	@ 0x44
 8003a40:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8003a42:	4601      	mov	r1, r0
 8003a44:	4620      	mov	r0, r4
 8003a46:	f7ff ff5d 	bl	8003904 <BSP_QSPI_MspInit>
  QSPIHandle.Init.FifoThreshold      = 4;
 8003a4a:	2601      	movs	r6, #1
 8003a4c:	2304      	movs	r3, #4
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8003a4e:	f04f 7780 	mov.w	r7, #16777216	@ 0x1000000
 8003a52:	e9c4 6301 	strd	r6, r3, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003a56:	2310      	movs	r3, #16
 8003a58:	60e3      	str	r3, [r4, #12]
 8003a5a:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003a5e:	fab3 f383 	clz	r3, r3
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003a62:	4620      	mov	r0, r4
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003a64:	3b01      	subs	r3, #1
 8003a66:	6123      	str	r3, [r4, #16]
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE; /* Min 50ns for nonRead */
 8003a68:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8003a6c:	e9c4 5507 	strd	r5, r5, [r4, #28]
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8003a70:	e9c4 3505 	strd	r3, r5, [r4, #20]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003a74:	f001 fbb8 	bl	80051e8 <HAL_QSPI_Init>
 8003a78:	2800      	cmp	r0, #0
 8003a7a:	d1df      	bne.n	8003a3c <BSP_QSPI_Init+0x14>
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003a7c:	f44f 7580 	mov.w	r5, #256	@ 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003a80:	2366      	movs	r3, #102	@ 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8003a82:	900b      	str	r0, [sp, #44]	@ 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a84:	f241 3288 	movw	r2, #5000	@ 0x1388
  s_command.DummyCycles       = 0;
 8003a88:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a8a:	a902      	add	r1, sp, #8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003a8c:	900f      	str	r0, [sp, #60]	@ 0x3c
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003a8e:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003a90:	9302      	str	r3, [sp, #8]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003a92:	e9cd 0009 	strd	r0, r0, [sp, #36]	@ 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003a96:	e9cd 000d 	strd	r0, r0, [sp, #52]	@ 0x34
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a9a:	4620      	mov	r0, r4
 8003a9c:	f001 fc09 	bl	80052b2 <HAL_QSPI_Command>
 8003aa0:	b108      	cbz	r0, 8003aa6 <BSP_QSPI_Init+0x7e>
    return QSPI_NOT_SUPPORTED;
 8003aa2:	2004      	movs	r0, #4
 8003aa4:	e7cb      	b.n	8003a3e <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8003aa6:	2399      	movs	r3, #153	@ 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003aa8:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003aac:	a902      	add	r1, sp, #8
 8003aae:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8003ab0:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ab2:	f001 fbfe 	bl	80052b2 <HAL_QSPI_Command>
 8003ab6:	2800      	cmp	r0, #0
 8003ab8:	d1f3      	bne.n	8003aa2 <BSP_QSPI_Init+0x7a>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8003aba:	f241 3088 	movw	r0, #5000	@ 0x1388
 8003abe:	f7ff fe99 	bl	80037f4 <QSPI_AutoPollingMemReady.constprop.0>
 8003ac2:	2800      	cmp	r0, #0
 8003ac4:	d1ed      	bne.n	8003aa2 <BSP_QSPI_Init+0x7a>
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003ac6:	2385      	movs	r3, #133	@ 0x85
  s_command.DummyCycles       = 0;
 8003ac8:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003aca:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003ace:	a902      	add	r1, sp, #8
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003ad0:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003ad2:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003ad4:	970b      	str	r7, [sp, #44]	@ 0x2c
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003ad6:	e9cd 0009 	strd	r0, r0, [sp, #36]	@ 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8003ada:	e9cd 600c 	strd	r6, r0, [sp, #48]	@ 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003ade:	e9cd 000e 	strd	r0, r0, [sp, #56]	@ 0x38
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ae2:	4620      	mov	r0, r4
 8003ae4:	f001 fbe5 	bl	80052b2 <HAL_QSPI_Command>
 8003ae8:	2800      	cmp	r0, #0
 8003aea:	d1da      	bne.n	8003aa2 <BSP_QSPI_Init+0x7a>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003aec:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003af0:	f10d 0107 	add.w	r1, sp, #7
 8003af4:	4620      	mov	r0, r4
 8003af6:	f001 fd5c 	bl	80055b2 <HAL_QSPI_Receive>
 8003afa:	2800      	cmp	r0, #0
 8003afc:	d1d1      	bne.n	8003aa2 <BSP_QSPI_Init+0x7a>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8003afe:	f7ff fea3 	bl	8003848 <QSPI_WriteEnable.constprop.0>
 8003b02:	2800      	cmp	r0, #0
 8003b04:	d1cd      	bne.n	8003aa2 <BSP_QSPI_Init+0x7a>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8003b06:	2381      	movs	r3, #129	@ 0x81
 8003b08:	22f0      	movs	r2, #240	@ 0xf0
 8003b0a:	9302      	str	r3, [sp, #8]
 8003b0c:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003b10:	210a      	movs	r1, #10
 8003b12:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003b16:	fab2 f282 	clz	r2, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b1a:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003b1c:	f003 030f 	and.w	r3, r3, #15
 8003b20:	fa01 f202 	lsl.w	r2, r1, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b24:	a902      	add	r1, sp, #8
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003b26:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b28:	f241 3288 	movw	r2, #5000	@ 0x1388
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003b2c:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b30:	f001 fbbf 	bl	80052b2 <HAL_QSPI_Command>
 8003b34:	2800      	cmp	r0, #0
 8003b36:	d1b4      	bne.n	8003aa2 <BSP_QSPI_Init+0x7a>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b38:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003b3c:	f10d 0107 	add.w	r1, sp, #7
 8003b40:	4620      	mov	r0, r4
 8003b42:	f001 fcd7 	bl	80054f4 <HAL_QSPI_Transmit>
 8003b46:	2800      	cmp	r0, #0
 8003b48:	f43f af79 	beq.w	8003a3e <BSP_QSPI_Init+0x16>
 8003b4c:	e7a9      	b.n	8003aa2 <BSP_QSPI_Init+0x7a>
 8003b4e:	bf00      	nop
 8003b50:	20003758 	.word	0x20003758
 8003b54:	a0001000 	.word	0xa0001000

08003b58 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003b58:	490f      	ldr	r1, [pc, #60]	@ (8003b98 <SystemInit+0x40>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8003b5a:	2000      	movs	r0, #0
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003b5c:	f8d1 3088 	ldr.w	r3, [r1, #136]	@ 0x88
 8003b60:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003b64:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
  RCC->CR |= (uint32_t)0x00000001;
 8003b68:	4b0c      	ldr	r3, [pc, #48]	@ (8003b9c <SystemInit+0x44>)
 8003b6a:	681a      	ldr	r2, [r3, #0]
 8003b6c:	f042 0201 	orr.w	r2, r2, #1
 8003b70:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000;
 8003b72:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8003b74:	681a      	ldr	r2, [r3, #0]
 8003b76:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 8003b7a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8003b7e:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 8003b80:	4a07      	ldr	r2, [pc, #28]	@ (8003ba0 <SystemInit+0x48>)
 8003b82:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8003b84:	681a      	ldr	r2, [r3, #0]
 8003b86:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003b8a:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8003b8c:	60d8      	str	r0, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = RAMDTCM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003b8e:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8003b92:	608b      	str	r3, [r1, #8]
#endif
}
 8003b94:	4770      	bx	lr
 8003b96:	bf00      	nop
 8003b98:	e000ed00 	.word	0xe000ed00
 8003b9c:	40023800 	.word	0x40023800
 8003ba0:	24003010 	.word	0x24003010

08003ba4 <ft5336_Reset>:
  */
void ft5336_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT5336 IC */
}
 8003ba4:	4770      	bx	lr

08003ba6 <ft5336_TS_ITStatus>:
  */
uint8_t ft5336_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT5336 */
  return 0;
}
 8003ba6:	2000      	movs	r0, #0
 8003ba8:	4770      	bx	lr
	...

08003bac <ft5336_ReadID>:
  volatile uint8_t ucReadId = 0;
 8003bac:	2300      	movs	r3, #0
{
 8003bae:	b537      	push	{r0, r1, r2, r4, r5, lr}
  volatile uint8_t ucReadId = 0;
 8003bb0:	f88d 3007 	strb.w	r3, [sp, #7]
  * @param  None.
  * @retval : I2C initialization status.
  */
static uint8_t ft5336_Get_I2C_InitializedStatus(void)
{
  return(ft5336_handle.i2cInitialized);
 8003bb4:	4b0c      	ldr	r3, [pc, #48]	@ (8003be8 <ft5336_ReadID+0x3c>)
  * @param  None.
  * @retval : None.
  */
static void ft5336_I2C_InitializeIfRequired(void)
{
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8003bb6:	781a      	ldrb	r2, [r3, #0]
 8003bb8:	b90a      	cbnz	r2, 8003bbe <ft5336_ReadID+0x12>
  {
    /* Initialize TS IO BUS layer (I2C) */
    //TS_IO_Init();

    /* Set state to initialized */
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8003bba:	2201      	movs	r2, #1
 8003bbc:	701a      	strb	r2, [r3, #0]
{
 8003bbe:	2403      	movs	r4, #3
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8003bc0:	b2c5      	uxtb	r5, r0
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8003bc2:	3c01      	subs	r4, #1
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8003bc4:	21a8      	movs	r1, #168	@ 0xa8
 8003bc6:	4628      	mov	r0, r5
 8003bc8:	f7fd fcbc 	bl	8001544 <TS_IO_Read>
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8003bcc:	f014 04ff 	ands.w	r4, r4, #255	@ 0xff
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8003bd0:	f88d 0007 	strb.w	r0, [sp, #7]
    if(ucReadId == FT5336_ID_VALUE)
 8003bd4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003bd8:	b2db      	uxtb	r3, r3
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8003bda:	d001      	beq.n	8003be0 <ft5336_ReadID+0x34>
 8003bdc:	2b51      	cmp	r3, #81	@ 0x51
 8003bde:	d1f0      	bne.n	8003bc2 <ft5336_ReadID+0x16>
  return (ucReadId);
 8003be0:	f89d 0007 	ldrb.w	r0, [sp, #7]
}
 8003be4:	b003      	add	sp, #12
 8003be6:	bd30      	pop	{r4, r5, pc}
 8003be8:	200037a6 	.word	0x200037a6

08003bec <ft5336_TS_DetectTouch>:
{
 8003bec:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8003bee:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 8003bf0:	2102      	movs	r1, #2
 8003bf2:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8003bf4:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 8003bf8:	f7fd fca4 	bl	8001544 <TS_IO_Read>
 8003bfc:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT5336_TD_STAT_MASK;
 8003c00:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003c04:	f003 030f 	and.w	r3, r3, #15
 8003c08:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT5336_MAX_DETECTABLE_TOUCH)
 8003c0c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003c10:	2b05      	cmp	r3, #5
 8003c12:	d901      	bls.n	8003c18 <ft5336_TS_DetectTouch+0x2c>
    nbTouch = 0;
 8003c14:	f88d 4007 	strb.w	r4, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
 8003c18:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8003c1c:	4b03      	ldr	r3, [pc, #12]	@ (8003c2c <ft5336_TS_DetectTouch+0x40>)
  return(nbTouch);
 8003c1e:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft5336_handle.currActiveTouchNb = nbTouch;
 8003c22:	705a      	strb	r2, [r3, #1]
  ft5336_handle.currActiveTouchIdx = 0;
 8003c24:	2200      	movs	r2, #0
 8003c26:	709a      	strb	r2, [r3, #2]
}
 8003c28:	b002      	add	sp, #8
 8003c2a:	bd10      	pop	{r4, pc}
 8003c2c:	200037a6 	.word	0x200037a6

08003c30 <ft5336_TS_GetXY>:
{
 8003c30:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8003c34:	4c2f      	ldr	r4, [pc, #188]	@ (8003cf4 <ft5336_TS_GetXY+0xc4>)
{
 8003c36:	4615      	mov	r5, r2
  volatile uint8_t ucReadData = 0;
 8003c38:	f04f 0800 	mov.w	r8, #0
{
 8003c3c:	460f      	mov	r7, r1
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8003c3e:	78a3      	ldrb	r3, [r4, #2]
 8003c40:	7862      	ldrb	r2, [r4, #1]
  volatile uint8_t ucReadData = 0;
 8003c42:	f88d 8007 	strb.w	r8, [sp, #7]
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8003c46:	429a      	cmp	r2, r3
 8003c48:	d94d      	bls.n	8003ce6 <ft5336_TS_GetXY+0xb6>
    switch(ft5336_handle.currActiveTouchIdx)
 8003c4a:	2b09      	cmp	r3, #9
 8003c4c:	d84e      	bhi.n	8003cec <ft5336_TS_GetXY+0xbc>
 8003c4e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8003c52:	005b      	lsls	r3, r3, #1
 8003c54:	b2db      	uxtb	r3, r3
 8003c56:	1d19      	adds	r1, r3, #4
 8003c58:	f103 0b03 	add.w	fp, r3, #3
 8003c5c:	f103 0a06 	add.w	sl, r3, #6
 8003c60:	3305      	adds	r3, #5
 8003c62:	b2c9      	uxtb	r1, r1
 8003c64:	fa5f fb8b 	uxtb.w	fp, fp
 8003c68:	fa5f fa8a 	uxtb.w	sl, sl
 8003c6c:	fa5f f883 	uxtb.w	r8, r3
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 8003c70:	b2c6      	uxtb	r6, r0
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8003c72:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 8003cf8 <ft5336_TS_GetXY+0xc8>
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 8003c76:	4630      	mov	r0, r6
 8003c78:	f7fd fc64 	bl	8001544 <TS_IO_Read>
 8003c7c:	f88d 0007 	strb.w	r0, [sp, #7]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8003c80:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8003c84:	4659      	mov	r1, fp
 8003c86:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8003c88:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8003c8c:	f7fd fc5a 	bl	8001544 <TS_IO_Read>
 8003c90:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8003c94:	4651      	mov	r1, sl
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8003c96:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8003c9a:	4630      	mov	r0, r6
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8003c9c:	f8b9 2000 	ldrh.w	r2, [r9]
 8003ca0:	021b      	lsls	r3, r3, #8
 8003ca2:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8003ca6:	4313      	orrs	r3, r2
    *X = coord;
 8003ca8:	803b      	strh	r3, [r7, #0]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8003caa:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8003cae:	f7fd fc49 	bl	8001544 <TS_IO_Read>
 8003cb2:	f88d 0007 	strb.w	r0, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8003cb6:	4641      	mov	r1, r8
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8003cb8:	f89d 3007 	ldrb.w	r3, [sp, #7]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8003cbc:	4630      	mov	r0, r6
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8003cbe:	f8a9 3000 	strh.w	r3, [r9]
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8003cc2:	f7fd fc3f 	bl	8001544 <TS_IO_Read>
 8003cc6:	f88d 0007 	strb.w	r0, [sp, #7]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8003cca:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003cce:	f8b9 2000 	ldrh.w	r2, [r9]
 8003cd2:	021b      	lsls	r3, r3, #8
 8003cd4:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8003cd8:	4313      	orrs	r3, r2
 8003cda:	f8a9 3000 	strh.w	r3, [r9]
    *Y = coord;
 8003cde:	802b      	strh	r3, [r5, #0]
    ft5336_handle.currActiveTouchIdx++; /* next call will work on next touch */
 8003ce0:	78a3      	ldrb	r3, [r4, #2]
 8003ce2:	3301      	adds	r3, #1
 8003ce4:	70a3      	strb	r3, [r4, #2]
}
 8003ce6:	b003      	add	sp, #12
 8003ce8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8003cec:	46c2      	mov	sl, r8
 8003cee:	46c3      	mov	fp, r8
 8003cf0:	4641      	mov	r1, r8
 8003cf2:	e7bd      	b.n	8003c70 <ft5336_TS_GetXY+0x40>
 8003cf4:	200037a6 	.word	0x200037a6
 8003cf8:	200037a4 	.word	0x200037a4

08003cfc <ft5336_TS_EnableIT>:
   TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 8003cfc:	2201      	movs	r2, #1
 8003cfe:	21a4      	movs	r1, #164	@ 0xa4
 8003d00:	b2c0      	uxtb	r0, r0
 8003d02:	f7fd bc05 	b.w	8001510 <TS_IO_Write>

08003d06 <ft5336_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 8003d06:	2200      	movs	r2, #0
 8003d08:	21a4      	movs	r1, #164	@ 0xa4
 8003d0a:	b2c0      	uxtb	r0, r0
 8003d0c:	f7fd bc00 	b.w	8001510 <TS_IO_Write>

08003d10 <ft5336_TS_Start>:
  ft5336_TS_DisableIT(DeviceAddr);
 8003d10:	f7ff bff9 	b.w	8003d06 <ft5336_TS_DisableIT>

08003d14 <ft5336_TS_ClearIT>:
void ft5336_TS_ClearIT(uint16_t DeviceAddr)
 8003d14:	4770      	bx	lr
	...

08003d18 <ft5336_Init>:
  return(ft5336_handle.i2cInitialized);
 8003d18:	4b02      	ldr	r3, [pc, #8]	@ (8003d24 <ft5336_Init+0xc>)
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8003d1a:	781a      	ldrb	r2, [r3, #0]
 8003d1c:	b90a      	cbnz	r2, 8003d22 <ft5336_Init+0xa>
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8003d1e:	2201      	movs	r2, #1
 8003d20:	701a      	strb	r2, [r3, #0]
}
 8003d22:	4770      	bx	lr
 8003d24:	200037a6 	.word	0x200037a6

08003d28 <HAL_Init>:
  __HAL_FLASH_ART_ENABLE();
#endif /* ART_ACCELERATOR_ENABLE */

  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003d28:	4a07      	ldr	r2, [pc, #28]	@ (8003d48 <HAL_Init+0x20>)
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003d2a:	2003      	movs	r0, #3
{
 8003d2c:	b508      	push	{r3, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003d2e:	6813      	ldr	r3, [r2, #0]
 8003d30:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003d34:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003d36:	f000 f82d 	bl	8003d94 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003d3a:	2000      	movs	r0, #0
 8003d3c:	f7fd fa82 	bl	8001244 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003d40:	f7fc ffe0 	bl	8000d04 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003d44:	2000      	movs	r0, #0
 8003d46:	bd08      	pop	{r3, pc}
 8003d48:	40023c00 	.word	0x40023c00

08003d4c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003d4c:	4a03      	ldr	r2, [pc, #12]	@ (8003d5c <HAL_IncTick+0x10>)
 8003d4e:	4b04      	ldr	r3, [pc, #16]	@ (8003d60 <HAL_IncTick+0x14>)
 8003d50:	6811      	ldr	r1, [r2, #0]
 8003d52:	781b      	ldrb	r3, [r3, #0]
 8003d54:	440b      	add	r3, r1
 8003d56:	6013      	str	r3, [r2, #0]
}
 8003d58:	4770      	bx	lr
 8003d5a:	bf00      	nop
 8003d5c:	200037ac 	.word	0x200037ac
 8003d60:	20000038 	.word	0x20000038

08003d64 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003d64:	4b01      	ldr	r3, [pc, #4]	@ (8003d6c <HAL_GetTick+0x8>)
 8003d66:	6818      	ldr	r0, [r3, #0]
}
 8003d68:	4770      	bx	lr
 8003d6a:	bf00      	nop
 8003d6c:	200037ac 	.word	0x200037ac

08003d70 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003d70:	b538      	push	{r3, r4, r5, lr}
 8003d72:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003d74:	f7ff fff6 	bl	8003d64 <HAL_GetTick>
 8003d78:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003d7a:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003d7c:	bf1e      	ittt	ne
 8003d7e:	4b04      	ldrne	r3, [pc, #16]	@ (8003d90 <HAL_Delay+0x20>)
 8003d80:	781b      	ldrbne	r3, [r3, #0]
 8003d82:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8003d84:	f7ff ffee 	bl	8003d64 <HAL_GetTick>
 8003d88:	1b43      	subs	r3, r0, r5
 8003d8a:	42a3      	cmp	r3, r4
 8003d8c:	d3fa      	bcc.n	8003d84 <HAL_Delay+0x14>
  {
  }
}
 8003d8e:	bd38      	pop	{r3, r4, r5, pc}
 8003d90:	20000038 	.word	0x20000038

08003d94 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003d94:	4907      	ldr	r1, [pc, #28]	@ (8003db4 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003d96:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003d98:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003d9a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003d9e:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8003da2:	0412      	lsls	r2, r2, #16
 8003da4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003da6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003da8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003dac:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8003db0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003db2:	4770      	bx	lr
 8003db4:	e000ed00 	.word	0xe000ed00

08003db8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003db8:	4b16      	ldr	r3, [pc, #88]	@ (8003e14 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003dba:	b530      	push	{r4, r5, lr}
 8003dbc:	68dc      	ldr	r4, [r3, #12]
 8003dbe:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003dc2:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003dc6:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003dc8:	2b04      	cmp	r3, #4
 8003dca:	bf28      	it	cs
 8003dcc:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003dce:	2d06      	cmp	r5, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003dd0:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003dd4:	bf8c      	ite	hi
 8003dd6:	3c03      	subhi	r4, #3
 8003dd8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003dda:	fa05 f303 	lsl.w	r3, r5, r3
  if ((int32_t)(IRQn) >= 0)
 8003dde:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003de0:	fa05 f504 	lsl.w	r5, r5, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003de4:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003de8:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003dec:	fa03 f304 	lsl.w	r3, r3, r4
 8003df0:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003df4:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8003df8:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 8003dfa:	db06      	blt.n	8003e0a <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003dfc:	f100 4060 	add.w	r0, r0, #3758096384	@ 0xe0000000
 8003e00:	f500 4061 	add.w	r0, r0, #57600	@ 0xe100
 8003e04:	f880 3300 	strb.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003e08:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003e0a:	f000 000f 	and.w	r0, r0, #15
 8003e0e:	4a02      	ldr	r2, [pc, #8]	@ (8003e18 <HAL_NVIC_SetPriority+0x60>)
 8003e10:	5413      	strb	r3, [r2, r0]
 8003e12:	e7f9      	b.n	8003e08 <HAL_NVIC_SetPriority+0x50>
 8003e14:	e000ed00 	.word	0xe000ed00
 8003e18:	e000ed14 	.word	0xe000ed14

08003e1c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003e1c:	2800      	cmp	r0, #0
 8003e1e:	db07      	blt.n	8003e30 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003e20:	0941      	lsrs	r1, r0, #5
 8003e22:	2301      	movs	r3, #1
 8003e24:	f000 001f 	and.w	r0, r0, #31
 8003e28:	4a02      	ldr	r2, [pc, #8]	@ (8003e34 <HAL_NVIC_EnableIRQ+0x18>)
 8003e2a:	4083      	lsls	r3, r0
 8003e2c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003e30:	4770      	bx	lr
 8003e32:	bf00      	nop
 8003e34:	e000e100 	.word	0xe000e100

08003e38 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003e38:	2800      	cmp	r0, #0
 8003e3a:	db0c      	blt.n	8003e56 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003e3c:	0943      	lsrs	r3, r0, #5
 8003e3e:	2201      	movs	r2, #1
 8003e40:	f000 001f 	and.w	r0, r0, #31
 8003e44:	4904      	ldr	r1, [pc, #16]	@ (8003e58 <HAL_NVIC_DisableIRQ+0x20>)
 8003e46:	3320      	adds	r3, #32
 8003e48:	4082      	lsls	r2, r0
 8003e4a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003e4e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003e52:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8003e56:	4770      	bx	lr
 8003e58:	e000e100 	.word	0xe000e100

08003e5c <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 8003e5c:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 8003e60:	4b04      	ldr	r3, [pc, #16]	@ (8003e74 <HAL_MPU_Disable+0x18>)
 8003e62:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8003e64:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8003e68:	625a      	str	r2, [r3, #36]	@ 0x24
  
  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 8003e6a:	2200      	movs	r2, #0
 8003e6c:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
}
 8003e70:	4770      	bx	lr
 8003e72:	bf00      	nop
 8003e74:	e000ed00 	.word	0xe000ed00

08003e78 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 8003e78:	4b06      	ldr	r3, [pc, #24]	@ (8003e94 <HAL_MPU_Enable+0x1c>)
 8003e7a:	f040 0001 	orr.w	r0, r0, #1
 8003e7e:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94
  
  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 8003e82:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8003e84:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8003e88:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 8003e8a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003e8e:	f3bf 8f6f 	isb	sy
  
  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 8003e92:	4770      	bx	lr
 8003e94:	e000ed00 	.word	0xe000ed00

08003e98 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8003e98:	7843      	ldrb	r3, [r0, #1]
 8003e9a:	4a14      	ldr	r2, [pc, #80]	@ (8003eec <HAL_MPU_ConfigRegion+0x54>)
{
 8003e9c:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 8003e9e:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  if ((MPU_Init->Enable) != RESET)
 8003ea2:	7801      	ldrb	r1, [r0, #0]
 8003ea4:	b1e9      	cbz	r1, 8003ee2 <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
    
    MPU->RBAR = MPU_Init->BaseAddress;
 8003ea6:	6843      	ldr	r3, [r0, #4]
 8003ea8:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8003eac:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8003eae:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8003eb0:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8003eb2:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8003eb6:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8003eb8:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8003eba:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 8003ebe:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8003ec0:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8003ec4:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8003ec6:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 8003eca:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8003ecc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8003ed0:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8003ed2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8003ed6:	7a01      	ldrb	r1, [r0, #8]
 8003ed8:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8003edc:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 8003ee0:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 8003ee2:	f8c2 109c 	str.w	r1, [r2, #156]	@ 0x9c
    MPU->RASR = 0x00;
 8003ee6:	f8c2 10a0 	str.w	r1, [r2, #160]	@ 0xa0
}
 8003eea:	e7f9      	b.n	8003ee0 <HAL_MPU_ConfigRegion+0x48>
 8003eec:	e000ed00 	.word	0xe000ed00

08003ef0 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003ef0:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003ef2:	4604      	mov	r4, r0
 8003ef4:	b908      	cbnz	r0, 8003efa <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8003ef6:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8003ef8:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003efa:	7f43      	ldrb	r3, [r0, #29]
 8003efc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003f00:	b913      	cbnz	r3, 8003f08 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8003f02:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8003f04:	f7fc ff1c 	bl	8000d40 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8003f08:	2302      	movs	r3, #2
 8003f0a:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8003f0c:	7923      	ldrb	r3, [r4, #4]
 8003f0e:	b9e3      	cbnz	r3, 8003f4a <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8003f10:	6823      	ldr	r3, [r4, #0]
 8003f12:	4a13      	ldr	r2, [pc, #76]	@ (8003f60 <HAL_CRC_Init+0x70>)
 8003f14:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8003f16:	689a      	ldr	r2, [r3, #8]
 8003f18:	f022 0218 	bic.w	r2, r2, #24
 8003f1c:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003f1e:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8003f20:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003f22:	b9d2      	cbnz	r2, 8003f5a <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8003f24:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003f28:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 8003f2a:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8003f2c:	689a      	ldr	r2, [r3, #8]
 8003f2e:	6961      	ldr	r1, [r4, #20]
 8003f30:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8003f34:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8003f36:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8003f38:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8003f3a:	689a      	ldr	r2, [r3, #8]
 8003f3c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003f40:	430a      	orrs	r2, r1
 8003f42:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8003f44:	2301      	movs	r3, #1
 8003f46:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8003f48:	e7d6      	b.n	8003ef8 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8003f4a:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8003f4e:	4620      	mov	r0, r4
 8003f50:	f000 f808 	bl	8003f64 <HAL_CRCEx_Polynomial_Set>
 8003f54:	2800      	cmp	r0, #0
 8003f56:	d0e2      	beq.n	8003f1e <HAL_CRC_Init+0x2e>
 8003f58:	e7cd      	b.n	8003ef6 <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003f5a:	6922      	ldr	r2, [r4, #16]
 8003f5c:	e7e4      	b.n	8003f28 <HAL_CRC_Init+0x38>
 8003f5e:	bf00      	nop
 8003f60:	04c11db7 	.word	0x04c11db7

08003f64 <HAL_CRCEx_Polynomial_Set>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8003f64:	231f      	movs	r3, #31
{
 8003f66:	b510      	push	{r4, lr}
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8003f68:	3b01      	subs	r3, #1
 8003f6a:	d31d      	bcc.n	8003fa8 <HAL_CRCEx_Polynomial_Set+0x44>
 8003f6c:	fa21 f403 	lsr.w	r4, r1, r3
 8003f70:	07e4      	lsls	r4, r4, #31
 8003f72:	d5f9      	bpl.n	8003f68 <HAL_CRCEx_Polynomial_Set+0x4>
  {
  }

  switch (PolyLength)
 8003f74:	2a10      	cmp	r2, #16
 8003f76:	d013      	beq.n	8003fa0 <HAL_CRCEx_Polynomial_Set+0x3c>
 8003f78:	2a10      	cmp	r2, #16
 8003f7a:	d804      	bhi.n	8003f86 <HAL_CRCEx_Polynomial_Set+0x22>
 8003f7c:	b13a      	cbz	r2, 8003f8e <HAL_CRCEx_Polynomial_Set+0x2a>
 8003f7e:	2a08      	cmp	r2, #8
 8003f80:	d010      	beq.n	8003fa4 <HAL_CRCEx_Polynomial_Set+0x40>
 8003f82:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8003f84:	e00b      	b.n	8003f9e <HAL_CRCEx_Polynomial_Set+0x3a>
  switch (PolyLength)
 8003f86:	2a18      	cmp	r2, #24
 8003f88:	d1fb      	bne.n	8003f82 <HAL_CRCEx_Polynomial_Set+0x1e>
      if (msb >= HAL_CRC_LENGTH_7B)
 8003f8a:	2b06      	cmp	r3, #6
      if (msb >= HAL_CRC_LENGTH_16B)
 8003f8c:	d8f9      	bhi.n	8003f82 <HAL_CRCEx_Polynomial_Set+0x1e>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8003f8e:	6800      	ldr	r0, [r0, #0]
 8003f90:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8003f92:	6883      	ldr	r3, [r0, #8]
 8003f94:	f023 0318 	bic.w	r3, r3, #24
 8003f98:	4313      	orrs	r3, r2
 8003f9a:	6083      	str	r3, [r0, #8]
 8003f9c:	2000      	movs	r0, #0
}
 8003f9e:	bd10      	pop	{r4, pc}
      if (msb >= HAL_CRC_LENGTH_8B)
 8003fa0:	2b07      	cmp	r3, #7
 8003fa2:	e7f3      	b.n	8003f8c <HAL_CRCEx_Polynomial_Set+0x28>
      if (msb >= HAL_CRC_LENGTH_16B)
 8003fa4:	2b0f      	cmp	r3, #15
 8003fa6:	e7f1      	b.n	8003f8c <HAL_CRCEx_Polynomial_Set+0x28>
  switch (PolyLength)
 8003fa8:	2a10      	cmp	r2, #16
 8003faa:	d1e5      	bne.n	8003f78 <HAL_CRCEx_Polynomial_Set+0x14>
 8003fac:	e7e9      	b.n	8003f82 <HAL_CRCEx_Polynomial_Set+0x1e>

08003fae <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8003fae:	b570      	push	{r4, r5, r6, lr}
 8003fb0:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003fb2:	6d86      	ldr	r6, [r0, #88]	@ 0x58
  
  uint32_t tickstart = HAL_GetTick();
 8003fb4:	f7ff fed6 	bl	8003d64 <HAL_GetTick>
 8003fb8:	4605      	mov	r5, r0
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003fba:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
 8003fbe:	2b02      	cmp	r3, #2
 8003fc0:	d006      	beq.n	8003fd0 <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003fc2:	2380      	movs	r3, #128	@ 0x80
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
    
    return HAL_ERROR;
 8003fc4:	2001      	movs	r0, #1
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003fc6:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
 8003fc8:	2300      	movs	r3, #0
 8003fca:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
    
  }
  return HAL_OK;
}
 8003fce:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003fd0:	6823      	ldr	r3, [r4, #0]
 8003fd2:	681a      	ldr	r2, [r3, #0]
 8003fd4:	f022 0216 	bic.w	r2, r2, #22
 8003fd8:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003fda:	695a      	ldr	r2, [r3, #20]
 8003fdc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003fe0:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003fe2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8003fe4:	b90a      	cbnz	r2, 8003fea <HAL_DMA_Abort+0x3c>
 8003fe6:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 8003fe8:	b11a      	cbz	r2, 8003ff2 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003fea:	681a      	ldr	r2, [r3, #0]
 8003fec:	f022 0208 	bic.w	r2, r2, #8
 8003ff0:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8003ff2:	681a      	ldr	r2, [r3, #0]
 8003ff4:	f022 0201 	bic.w	r2, r2, #1
 8003ff8:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003ffa:	6823      	ldr	r3, [r4, #0]
 8003ffc:	6818      	ldr	r0, [r3, #0]
 8003ffe:	f010 0001 	ands.w	r0, r0, #1
 8004002:	d107      	bne.n	8004014 <HAL_DMA_Abort+0x66>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004004:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8004006:	233f      	movs	r3, #63	@ 0x3f
 8004008:	4093      	lsls	r3, r2
 800400a:	60b3      	str	r3, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800400c:	2301      	movs	r3, #1
 800400e:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
  return HAL_OK;
 8004012:	e7d9      	b.n	8003fc8 <HAL_DMA_Abort+0x1a>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8004014:	f7ff fea6 	bl	8003d64 <HAL_GetTick>
 8004018:	1b40      	subs	r0, r0, r5
 800401a:	2805      	cmp	r0, #5
 800401c:	d9ed      	bls.n	8003ffa <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800401e:	2320      	movs	r3, #32
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004020:	2003      	movs	r0, #3
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004022:	6563      	str	r3, [r4, #84]	@ 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004024:	f884 0035 	strb.w	r0, [r4, #53]	@ 0x35
        return HAL_TIMEOUT;
 8004028:	e7ce      	b.n	8003fc8 <HAL_DMA_Abort+0x1a>

0800402a <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800402a:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 800402e:	2b02      	cmp	r3, #2
 8004030:	d003      	beq.n	800403a <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004032:	2380      	movs	r3, #128	@ 0x80
 8004034:	6543      	str	r3, [r0, #84]	@ 0x54
    return HAL_ERROR;
 8004036:	2001      	movs	r0, #1
 8004038:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800403a:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800403c:	2305      	movs	r3, #5
 800403e:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
  }

  return HAL_OK;
 8004042:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8004044:	6813      	ldr	r3, [r2, #0]
 8004046:	f023 0301 	bic.w	r3, r3, #1
 800404a:	6013      	str	r3, [r2, #0]
}
 800404c:	4770      	bx	lr

0800404e <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800404e:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004050:	4604      	mov	r4, r0
 8004052:	b330      	cbz	r0, 80040a2 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004054:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8004058:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800405c:	b91b      	cbnz	r3, 8004066 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800405e:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004062:	f7fc fe83 	bl	8000d6c <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004066:	6822      	ldr	r2, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004068:	2302      	movs	r3, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800406a:	6861      	ldr	r1, [r4, #4]
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800406c:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800406e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004072:	6813      	ldr	r3, [r2, #0]
 8004074:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8004078:	430b      	orrs	r3, r1
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800407a:	68a1      	ldr	r1, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800407c:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800407e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8004080:	f023 0307 	bic.w	r3, r3, #7
 8004084:	430b      	orrs	r3, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004086:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004088:	6353      	str	r3, [r2, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800408a:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800408c:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8004090:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8004094:	430b      	orrs	r3, r1
 8004096:	6413      	str	r3, [r2, #64]	@ 0x40

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004098:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800409a:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800409c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 80040a0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80040a2:	2001      	movs	r0, #1
 80040a4:	e7fc      	b.n	80040a0 <HAL_DMA2D_Init+0x52>

080040a6 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 80040a6:	4770      	bx	lr

080040a8 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 80040a8:	4770      	bx	lr

080040aa <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80040aa:	6803      	ldr	r3, [r0, #0]
{
 80040ac:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80040ae:	685e      	ldr	r6, [r3, #4]
{
 80040b0:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80040b2:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80040b4:	07f2      	lsls	r2, r6, #31
 80040b6:	d514      	bpl.n	80040e2 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 80040b8:	05e9      	lsls	r1, r5, #23
 80040ba:	d512      	bpl.n	80040e2 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80040bc:	681a      	ldr	r2, [r3, #0]
 80040be:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80040c2:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80040c4:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80040c6:	f042 0201 	orr.w	r2, r2, #1
 80040ca:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80040cc:	2201      	movs	r2, #1
 80040ce:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80040d0:	2304      	movs	r3, #4
 80040d2:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80040d6:	2300      	movs	r3, #0
 80040d8:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80040dc:	6943      	ldr	r3, [r0, #20]
 80040de:	b103      	cbz	r3, 80040e2 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80040e0:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80040e2:	06b2      	lsls	r2, r6, #26
 80040e4:	d516      	bpl.n	8004114 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80040e6:	04ab      	lsls	r3, r5, #18
 80040e8:	d514      	bpl.n	8004114 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80040ea:	6823      	ldr	r3, [r4, #0]
 80040ec:	681a      	ldr	r2, [r3, #0]
 80040ee:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80040f2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80040f4:	2220      	movs	r2, #32
 80040f6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80040f8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80040fa:	f043 0302 	orr.w	r3, r3, #2
 80040fe:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004100:	2304      	movs	r3, #4
 8004102:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004106:	2300      	movs	r3, #0
 8004108:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800410c:	6963      	ldr	r3, [r4, #20]
 800410e:	b10b      	cbz	r3, 8004114 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004110:	4620      	mov	r0, r4
 8004112:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004114:	0730      	lsls	r0, r6, #28
 8004116:	d516      	bpl.n	8004146 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004118:	0529      	lsls	r1, r5, #20
 800411a:	d514      	bpl.n	8004146 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800411c:	6823      	ldr	r3, [r4, #0]
 800411e:	681a      	ldr	r2, [r3, #0]
 8004120:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004124:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004126:	2208      	movs	r2, #8
 8004128:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800412a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800412c:	f043 0304 	orr.w	r3, r3, #4
 8004130:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004132:	2304      	movs	r3, #4
 8004134:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004138:	2300      	movs	r3, #0
 800413a:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800413e:	6963      	ldr	r3, [r4, #20]
 8004140:	b10b      	cbz	r3, 8004146 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004142:	4620      	mov	r0, r4
 8004144:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004146:	0772      	lsls	r2, r6, #29
 8004148:	d50b      	bpl.n	8004162 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800414a:	056b      	lsls	r3, r5, #21
 800414c:	d509      	bpl.n	8004162 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800414e:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004150:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004152:	681a      	ldr	r2, [r3, #0]
 8004154:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004158:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800415a:	2204      	movs	r2, #4
 800415c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800415e:	f7ff ffa2 	bl	80040a6 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004162:	07b0      	lsls	r0, r6, #30
 8004164:	d514      	bpl.n	8004190 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004166:	05a9      	lsls	r1, r5, #22
 8004168:	d512      	bpl.n	8004190 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800416a:	6823      	ldr	r3, [r4, #0]
 800416c:	681a      	ldr	r2, [r3, #0]
 800416e:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004172:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004174:	2202      	movs	r2, #2
 8004176:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004178:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800417a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800417c:	2301      	movs	r3, #1
 800417e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004182:	2300      	movs	r3, #0
 8004184:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8004188:	6923      	ldr	r3, [r4, #16]
 800418a:	b10b      	cbz	r3, 8004190 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 800418c:	4620      	mov	r0, r4
 800418e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004190:	06f2      	lsls	r2, r6, #27
 8004192:	d513      	bpl.n	80041bc <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004194:	04eb      	lsls	r3, r5, #19
 8004196:	d511      	bpl.n	80041bc <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004198:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800419a:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800419c:	681a      	ldr	r2, [r3, #0]
 800419e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80041a2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80041a4:	2210      	movs	r2, #16
 80041a6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80041a8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80041aa:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80041ac:	2301      	movs	r3, #1
 80041ae:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80041b2:	2300      	movs	r3, #0
 80041b4:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80041b8:	f7ff ff76 	bl	80040a8 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 80041bc:	bd70      	pop	{r4, r5, r6, pc}
	...

080041c0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80041c0:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80041c2:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
{
 80041c6:	4603      	mov	r3, r0
 80041c8:	2002      	movs	r0, #2
  __HAL_LOCK(hdma2d);
 80041ca:	2a01      	cmp	r2, #1
 80041cc:	d02b      	beq.n	8004226 <HAL_DMA2D_ConfigLayer+0x66>
 80041ce:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80041d0:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39
#if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
#else
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80041d4:	010e      	lsls	r6, r1, #4
 80041d6:	4f1c      	ldr	r7, [pc, #112]	@ (8004248 <HAL_DMA2D_ConfigLayer+0x88>)
  __HAL_LOCK(hdma2d);
 80041d8:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80041dc:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 80041e0:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 80041e4:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 80041e6:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80041ea:	3c09      	subs	r4, #9
 80041ec:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80041ee:	bf96      	itet	ls
 80041f0:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80041f4:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80041f8:	4310      	orrls	r0, r2

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80041fa:	681a      	ldr	r2, [r3, #0]
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80041fc:	b9a1      	cbnz	r1, 8004228 <HAL_DMA2D_ConfigLayer+0x68>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80041fe:	6a51      	ldr	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004200:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004202:	ea01 0107 	and.w	r1, r1, r7
 8004206:	ea41 0100 	orr.w	r1, r1, r0
 800420a:	6251      	str	r1, [r2, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800420c:	6999      	ldr	r1, [r3, #24]
 800420e:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004210:	d803      	bhi.n	800421a <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8004212:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8004214:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8004218:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800421a:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800421c:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800421e:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8004222:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8004226:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004228:	69d1      	ldr	r1, [r2, #28]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800422a:	2c01      	cmp	r4, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800422c:	ea01 0107 	and.w	r1, r1, r7
 8004230:	ea41 0100 	orr.w	r1, r1, r0
 8004234:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004236:	eb03 0106 	add.w	r1, r3, r6
 800423a:	6989      	ldr	r1, [r1, #24]
 800423c:	6111      	str	r1, [r2, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800423e:	d8ec      	bhi.n	800421a <HAL_DMA2D_ConfigLayer+0x5a>
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004240:	f025 457f 	bic.w	r5, r5, #4278190080	@ 0xff000000
 8004244:	6215      	str	r5, [r2, #32]
 8004246:	e7e8      	b.n	800421a <HAL_DMA2D_ConfigLayer+0x5a>
 8004248:	00fcfff0 	.word	0x00fcfff0

0800424c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800424c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8004250:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004252:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8004410 <HAL_GPIO_Init+0x1c4>
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004256:	4a6c      	ldr	r2, [pc, #432]	@ (8004408 <HAL_GPIO_Init+0x1bc>)
    ioposition = ((uint32_t)0x01) << position;
 8004258:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800425a:	680d      	ldr	r5, [r1, #0]
    ioposition = ((uint32_t)0x01) << position;
 800425c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800425e:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8004262:	43ac      	bics	r4, r5
 8004264:	f040 80b7 	bne.w	80043d6 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004268:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 800426a:	2703      	movs	r7, #3
 800426c:	ea4f 0e43 	mov.w	lr, r3, lsl #1
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004270:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004274:	fa07 fc0e 	lsl.w	ip, r7, lr
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004278:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 800427a:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 800427e:	2f01      	cmp	r7, #1
 8004280:	d834      	bhi.n	80042ec <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8004282:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004284:	ea07 080c 	and.w	r8, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2));
 8004288:	68cf      	ldr	r7, [r1, #12]
 800428a:	fa07 f70e 	lsl.w	r7, r7, lr
 800428e:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OSPEEDR = temp;
 8004292:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004294:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004296:	ea27 0806 	bic.w	r8, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800429a:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800429e:	409f      	lsls	r7, r3
 80042a0:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OTYPER = temp;
 80042a4:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80042a6:	68c7      	ldr	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80042a8:	2c02      	cmp	r4, #2
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 80042aa:	ea07 080c 	and.w	r8, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2));
 80042ae:	688f      	ldr	r7, [r1, #8]
 80042b0:	fa07 f70e 	lsl.w	r7, r7, lr
 80042b4:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->PUPDR = temp;
 80042b8:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80042ba:	d119      	bne.n	80042f0 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3];
 80042bc:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80042c0:	f003 0a07 	and.w	sl, r3, #7
 80042c4:	f04f 0b0f 	mov.w	fp, #15
 80042c8:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 80042cc:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
        temp = GPIOx->AFR[position >> 3];
 80042d0:	f8d8 7020 	ldr.w	r7, [r8, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80042d4:	fa0b fb0a 	lsl.w	fp, fp, sl
 80042d8:	ea27 0b0b 	bic.w	fp, r7, fp
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 80042dc:	690f      	ldr	r7, [r1, #16]
 80042de:	fa07 f70a 	lsl.w	r7, r7, sl
 80042e2:	ea47 070b 	orr.w	r7, r7, fp
        GPIOx->AFR[position >> 3] = temp;
 80042e6:	f8c8 7020 	str.w	r7, [r8, #32]
 80042ea:	e001      	b.n	80042f0 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80042ec:	2c03      	cmp	r4, #3
 80042ee:	d1da      	bne.n	80042a6 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80042f0:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80042f2:	fa04 f40e 	lsl.w	r4, r4, lr
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80042f6:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 80042fa:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80042fe:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
 8004302:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8004304:	d067      	beq.n	80043d6 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004306:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 800430a:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800430e:	f003 0c03 	and.w	ip, r3, #3
 8004312:	f04f 0e0f 	mov.w	lr, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004316:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 800431a:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800431e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004322:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8004326:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 800432a:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800432e:	fa0e fe0c 	lsl.w	lr, lr, ip
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004332:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8004336:	9401      	str	r4, [sp, #4]
 8004338:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2];
 800433a:	68bc      	ldr	r4, [r7, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800433c:	ea24 0e0e 	bic.w	lr, r4, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8004340:	4c32      	ldr	r4, [pc, #200]	@ (800440c <HAL_GPIO_Init+0x1c0>)
 8004342:	42a0      	cmp	r0, r4
 8004344:	d04e      	beq.n	80043e4 <HAL_GPIO_Init+0x198>
 8004346:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800434a:	42a0      	cmp	r0, r4
 800434c:	d04c      	beq.n	80043e8 <HAL_GPIO_Init+0x19c>
 800434e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004352:	42a0      	cmp	r0, r4
 8004354:	d04a      	beq.n	80043ec <HAL_GPIO_Init+0x1a0>
 8004356:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800435a:	42a0      	cmp	r0, r4
 800435c:	d048      	beq.n	80043f0 <HAL_GPIO_Init+0x1a4>
 800435e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004362:	42a0      	cmp	r0, r4
 8004364:	d046      	beq.n	80043f4 <HAL_GPIO_Init+0x1a8>
 8004366:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800436a:	42a0      	cmp	r0, r4
 800436c:	d044      	beq.n	80043f8 <HAL_GPIO_Init+0x1ac>
 800436e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004372:	42a0      	cmp	r0, r4
 8004374:	d042      	beq.n	80043fc <HAL_GPIO_Init+0x1b0>
 8004376:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800437a:	42a0      	cmp	r0, r4
 800437c:	d040      	beq.n	8004400 <HAL_GPIO_Init+0x1b4>
 800437e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004382:	42a0      	cmp	r0, r4
 8004384:	d03e      	beq.n	8004404 <HAL_GPIO_Init+0x1b8>
 8004386:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800438a:	42a0      	cmp	r0, r4
 800438c:	bf14      	ite	ne
 800438e:	240a      	movne	r4, #10
 8004390:	2409      	moveq	r4, #9
 8004392:	fa04 f40c 	lsl.w	r4, r4, ip
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8004396:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 800439a:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2] = temp;
 800439e:	60bc      	str	r4, [r7, #8]
        temp &= ~((uint32_t)iocurrent);
 80043a0:	ea6f 0706 	mvn.w	r7, r6
        temp = EXTI->RTSR;
 80043a4:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80043a6:	bf0c      	ite	eq
 80043a8:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80043aa:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80043ac:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        EXTI->RTSR = temp;
 80043b0:	6094      	str	r4, [r2, #8]
        temp = EXTI->FTSR;
 80043b2:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 80043b4:	bf0c      	ite	eq
 80043b6:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80043b8:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80043ba:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        EXTI->FTSR = temp;
 80043be:	60d4      	str	r4, [r2, #12]
        temp = EXTI->EMR;
 80043c0:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 80043c2:	bf0c      	ite	eq
 80043c4:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80043c6:	4334      	orrne	r4, r6
        EXTI->EMR = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 80043c8:	03ed      	lsls	r5, r5, #15
        EXTI->EMR = temp;
 80043ca:	6054      	str	r4, [r2, #4]
        temp = EXTI->IMR;
 80043cc:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80043ce:	bf54      	ite	pl
 80043d0:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 80043d2:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 80043d4:	6014      	str	r4, [r2, #0]
  for(position = 0; position < GPIO_NUMBER; position++)
 80043d6:	3301      	adds	r3, #1
 80043d8:	2b10      	cmp	r3, #16
 80043da:	f47f af3d 	bne.w	8004258 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80043de:	b003      	add	sp, #12
 80043e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80043e4:	2400      	movs	r4, #0
 80043e6:	e7d4      	b.n	8004392 <HAL_GPIO_Init+0x146>
 80043e8:	2401      	movs	r4, #1
 80043ea:	e7d2      	b.n	8004392 <HAL_GPIO_Init+0x146>
 80043ec:	2402      	movs	r4, #2
 80043ee:	e7d0      	b.n	8004392 <HAL_GPIO_Init+0x146>
 80043f0:	2403      	movs	r4, #3
 80043f2:	e7ce      	b.n	8004392 <HAL_GPIO_Init+0x146>
 80043f4:	2404      	movs	r4, #4
 80043f6:	e7cc      	b.n	8004392 <HAL_GPIO_Init+0x146>
 80043f8:	2405      	movs	r4, #5
 80043fa:	e7ca      	b.n	8004392 <HAL_GPIO_Init+0x146>
 80043fc:	2406      	movs	r4, #6
 80043fe:	e7c8      	b.n	8004392 <HAL_GPIO_Init+0x146>
 8004400:	2407      	movs	r4, #7
 8004402:	e7c6      	b.n	8004392 <HAL_GPIO_Init+0x146>
 8004404:	2408      	movs	r4, #8
 8004406:	e7c4      	b.n	8004392 <HAL_GPIO_Init+0x146>
 8004408:	40013c00 	.word	0x40013c00
 800440c:	40020000 	.word	0x40020000
 8004410:	40023800 	.word	0x40023800

08004414 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8004414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8004418:	2200      	movs	r2, #0
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 800441a:	f04f 0a01 	mov.w	sl, #1

    if(iocurrent == ioposition)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2];
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 800441e:	f04f 080f 	mov.w	r8, #15
        tmp = ((uint32_t)0x0F) << (4 * (position & 0x03));
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
      }
      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 8004422:	f04f 0b03 	mov.w	fp, #3
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004426:	4c46      	ldr	r4, [pc, #280]	@ (8004540 <HAL_GPIO_DeInit+0x12c>)
    ioposition = ((uint32_t)0x01) << position;
 8004428:	fa0a fc02 	lsl.w	ip, sl, r2
    if(iocurrent == ioposition)
 800442c:	ea3c 0301 	bics.w	r3, ip, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8004430:	ea0c 0601 	and.w	r6, ip, r1
    if(iocurrent == ioposition)
 8004434:	d16c      	bne.n	8004510 <HAL_GPIO_DeInit+0xfc>
      tmp = SYSCFG->EXTICR[position >> 2];
 8004436:	f022 0503 	bic.w	r5, r2, #3
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 800443a:	f002 0703 	and.w	r7, r2, #3
 800443e:	f105 4580 	add.w	r5, r5, #1073741824	@ 0x40000000
 8004442:	00bf      	lsls	r7, r7, #2
 8004444:	f505 359c 	add.w	r5, r5, #79872	@ 0x13800
 8004448:	fa08 f907 	lsl.w	r9, r8, r7
      tmp = SYSCFG->EXTICR[position >> 2];
 800444c:	68ab      	ldr	r3, [r5, #8]
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 800444e:	ea09 0e03 	and.w	lr, r9, r3
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 8004452:	4b3c      	ldr	r3, [pc, #240]	@ (8004544 <HAL_GPIO_DeInit+0x130>)
 8004454:	4298      	cmp	r0, r3
 8004456:	d060      	beq.n	800451a <HAL_GPIO_DeInit+0x106>
 8004458:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800445c:	4298      	cmp	r0, r3
 800445e:	d05e      	beq.n	800451e <HAL_GPIO_DeInit+0x10a>
 8004460:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004464:	4298      	cmp	r0, r3
 8004466:	d05c      	beq.n	8004522 <HAL_GPIO_DeInit+0x10e>
 8004468:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800446c:	4298      	cmp	r0, r3
 800446e:	d05a      	beq.n	8004526 <HAL_GPIO_DeInit+0x112>
 8004470:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004474:	4298      	cmp	r0, r3
 8004476:	d058      	beq.n	800452a <HAL_GPIO_DeInit+0x116>
 8004478:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800447c:	4298      	cmp	r0, r3
 800447e:	d056      	beq.n	800452e <HAL_GPIO_DeInit+0x11a>
 8004480:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004484:	4298      	cmp	r0, r3
 8004486:	d054      	beq.n	8004532 <HAL_GPIO_DeInit+0x11e>
 8004488:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800448c:	4298      	cmp	r0, r3
 800448e:	d052      	beq.n	8004536 <HAL_GPIO_DeInit+0x122>
 8004490:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8004494:	4298      	cmp	r0, r3
 8004496:	d050      	beq.n	800453a <HAL_GPIO_DeInit+0x126>
 8004498:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800449c:	4298      	cmp	r0, r3
 800449e:	bf0c      	ite	eq
 80044a0:	2309      	moveq	r3, #9
 80044a2:	230a      	movne	r3, #10
 80044a4:	40bb      	lsls	r3, r7
 80044a6:	4573      	cmp	r3, lr
 80044a8:	d113      	bne.n	80044d2 <HAL_GPIO_DeInit+0xbe>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80044aa:	6823      	ldr	r3, [r4, #0]
 80044ac:	ea23 0306 	bic.w	r3, r3, r6
 80044b0:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 80044b2:	6863      	ldr	r3, [r4, #4]
 80044b4:	ea23 0306 	bic.w	r3, r3, r6
 80044b8:	6063      	str	r3, [r4, #4]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 80044ba:	68e3      	ldr	r3, [r4, #12]
 80044bc:	ea23 0306 	bic.w	r3, r3, r6
 80044c0:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 80044c2:	68a3      	ldr	r3, [r4, #8]
 80044c4:	ea23 0306 	bic.w	r3, r3, r6
 80044c8:	60a3      	str	r3, [r4, #8]
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
 80044ca:	68ab      	ldr	r3, [r5, #8]
 80044cc:	ea23 0309 	bic.w	r3, r3, r9
 80044d0:	60ab      	str	r3, [r5, #8]
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 80044d2:	0053      	lsls	r3, r2, #1
 80044d4:	6805      	ldr	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80044d6:	08d6      	lsrs	r6, r2, #3
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 80044d8:	fa0b f303 	lsl.w	r3, fp, r3
 80044dc:	eb00 0686 	add.w	r6, r0, r6, lsl #2
 80044e0:	ea25 0503 	bic.w	r5, r5, r3
 80044e4:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80044e6:	f002 0507 	and.w	r5, r2, #7
 80044ea:	6a37      	ldr	r7, [r6, #32]
 80044ec:	00ad      	lsls	r5, r5, #2
 80044ee:	fa08 f505 	lsl.w	r5, r8, r5
 80044f2:	ea27 0705 	bic.w	r7, r7, r5
 80044f6:	6237      	str	r7, [r6, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 80044f8:	68c5      	ldr	r5, [r0, #12]
 80044fa:	ea25 0503 	bic.w	r5, r5, r3
 80044fe:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004500:	6845      	ldr	r5, [r0, #4]
 8004502:	ea25 050c 	bic.w	r5, r5, ip
 8004506:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004508:	6885      	ldr	r5, [r0, #8]
 800450a:	ea25 0303 	bic.w	r3, r5, r3
 800450e:	6083      	str	r3, [r0, #8]
  for(position = 0; position < GPIO_NUMBER; position++)
 8004510:	3201      	adds	r2, #1
 8004512:	2a10      	cmp	r2, #16
 8004514:	d188      	bne.n	8004428 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8004516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 800451a:	2300      	movs	r3, #0
 800451c:	e7c2      	b.n	80044a4 <HAL_GPIO_DeInit+0x90>
 800451e:	2301      	movs	r3, #1
 8004520:	e7c0      	b.n	80044a4 <HAL_GPIO_DeInit+0x90>
 8004522:	2302      	movs	r3, #2
 8004524:	e7be      	b.n	80044a4 <HAL_GPIO_DeInit+0x90>
 8004526:	2303      	movs	r3, #3
 8004528:	e7bc      	b.n	80044a4 <HAL_GPIO_DeInit+0x90>
 800452a:	2304      	movs	r3, #4
 800452c:	e7ba      	b.n	80044a4 <HAL_GPIO_DeInit+0x90>
 800452e:	2305      	movs	r3, #5
 8004530:	e7b8      	b.n	80044a4 <HAL_GPIO_DeInit+0x90>
 8004532:	2306      	movs	r3, #6
 8004534:	e7b6      	b.n	80044a4 <HAL_GPIO_DeInit+0x90>
 8004536:	2307      	movs	r3, #7
 8004538:	e7b4      	b.n	80044a4 <HAL_GPIO_DeInit+0x90>
 800453a:	2308      	movs	r3, #8
 800453c:	e7b2      	b.n	80044a4 <HAL_GPIO_DeInit+0x90>
 800453e:	bf00      	nop
 8004540:	40013c00 	.word	0x40013c00
 8004544:	40020000 	.word	0x40020000

08004548 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004548:	6903      	ldr	r3, [r0, #16]
 800454a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800454c:	bf14      	ite	ne
 800454e:	2001      	movne	r0, #1
 8004550:	2000      	moveq	r0, #0
 8004552:	4770      	bx	lr

08004554 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004554:	b10a      	cbz	r2, 800455a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8004556:	6181      	str	r1, [r0, #24]
  }
}
 8004558:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 800455a:	0409      	lsls	r1, r1, #16
 800455c:	e7fb      	b.n	8004556 <HAL_GPIO_WritePin+0x2>

0800455e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800455e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004560:	ea01 0203 	and.w	r2, r1, r3
 8004564:	ea21 0103 	bic.w	r1, r1, r3
 8004568:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800456c:	6181      	str	r1, [r0, #24]
}
 800456e:	4770      	bx	lr

08004570 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8004570:	6803      	ldr	r3, [r0, #0]
 8004572:	699a      	ldr	r2, [r3, #24]
 8004574:	0791      	lsls	r1, r2, #30
 8004576:	d501      	bpl.n	800457c <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8004578:	2200      	movs	r2, #0
 800457a:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800457c:	699a      	ldr	r2, [r3, #24]
 800457e:	07d2      	lsls	r2, r2, #31
 8004580:	d403      	bmi.n	800458a <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8004582:	699a      	ldr	r2, [r3, #24]
 8004584:	f042 0201 	orr.w	r2, r2, #1
 8004588:	619a      	str	r2, [r3, #24]
  }
}
 800458a:	4770      	bx	lr

0800458c <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 800458c:	b530      	push	{r4, r5, lr}
 800458e:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004590:	f3c1 0109 	ubfx	r1, r1, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8004594:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004596:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
 8004598:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800459a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 800459e:	4a05      	ldr	r2, [pc, #20]	@ (80045b4 <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80045a0:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 80045a2:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80045a6:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 80045aa:	ea20 0002 	bic.w	r0, r0, r2
 80045ae:	4303      	orrs	r3, r0
 80045b0:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 80045b2:	bd30      	pop	{r4, r5, pc}
 80045b4:	03ff63ff 	.word	0x03ff63ff

080045b8 <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 80045b8:	6803      	ldr	r3, [r0, #0]
{
 80045ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 80045be:	699c      	ldr	r4, [r3, #24]
{
 80045c0:	4605      	mov	r5, r0
 80045c2:	460f      	mov	r7, r1
 80045c4:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 80045c6:	f014 0410 	ands.w	r4, r4, #16
 80045ca:	d06f      	beq.n	80046ac <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 80045cc:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80045ce:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 80045d0:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80045d2:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 80045d4:	682b      	ldr	r3, [r5, #0]
 80045d6:	699a      	ldr	r2, [r3, #24]
 80045d8:	0690      	lsls	r0, r2, #26
 80045da:	d461      	bmi.n	80046a0 <I2C_IsErrorOccurred+0xe8>
 80045dc:	f1b8 0f00 	cmp.w	r8, #0
 80045e0:	d035      	beq.n	800464e <I2C_IsErrorOccurred+0x96>
    error_code |= HAL_I2C_ERROR_AF;
 80045e2:	f044 0404 	orr.w	r4, r4, #4
    status = HAL_ERROR;
 80045e6:	2001      	movs	r0, #1
  itflag = hi2c->Instance->ISR;
 80045e8:	682e      	ldr	r6, [r5, #0]
 80045ea:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 80045ec:	05d9      	lsls	r1, r3, #23
 80045ee:	d505      	bpl.n	80045fc <I2C_IsErrorOccurred+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80045f0:	f44f 7280 	mov.w	r2, #256	@ 0x100
    error_code |= HAL_I2C_ERROR_BERR;
 80045f4:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
 80045f8:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80045fa:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 80045fc:	055a      	lsls	r2, r3, #21
 80045fe:	d505      	bpl.n	800460c <I2C_IsErrorOccurred+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004600:	f44f 6280 	mov.w	r2, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
 8004604:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
 8004608:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 800460a:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 800460c:	059b      	lsls	r3, r3, #22
 800460e:	d54f      	bpl.n	80046b0 <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004610:	f44f 7300 	mov.w	r3, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8004614:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004618:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 800461a:	4628      	mov	r0, r5
 800461c:	f7ff ffa8 	bl	8004570 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8004620:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 8004622:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8004624:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
 8004628:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
 800462c:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
 8004630:	f023 0301 	bic.w	r3, r3, #1
 8004634:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 8004636:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8004638:	4323      	orrs	r3, r4
 800463a:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 800463c:	2320      	movs	r3, #32
 800463e:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004642:	2300      	movs	r3, #0
 8004644:	f885 3042 	strb.w	r3, [r5, #66]	@ 0x42
    __HAL_UNLOCK(hi2c);
 8004648:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
 800464c:	e032      	b.n	80046b4 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 800464e:	1c7a      	adds	r2, r7, #1
 8004650:	d0c1      	beq.n	80045d6 <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004652:	f7ff fb87 	bl	8003d64 <HAL_GetTick>
 8004656:	1b80      	subs	r0, r0, r6
 8004658:	42b8      	cmp	r0, r7
 800465a:	d801      	bhi.n	8004660 <I2C_IsErrorOccurred+0xa8>
 800465c:	2f00      	cmp	r7, #0
 800465e:	d1b9      	bne.n	80045d4 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8004660:	682b      	ldr	r3, [r5, #0]
 8004662:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8004664:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004668:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 800466a:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 800466c:	0400      	lsls	r0, r0, #16
 800466e:	d50a      	bpl.n	8004686 <I2C_IsErrorOccurred+0xce>
 8004670:	0449      	lsls	r1, r1, #17
 8004672:	d408      	bmi.n	8004686 <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 8004674:	2a20      	cmp	r2, #32
 8004676:	d006      	beq.n	8004686 <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8004678:	685a      	ldr	r2, [r3, #4]
 800467a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800467e:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8004680:	f7ff fb70 	bl	8003d64 <HAL_GetTick>
 8004684:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004686:	682b      	ldr	r3, [r5, #0]
 8004688:	699b      	ldr	r3, [r3, #24]
 800468a:	069b      	lsls	r3, r3, #26
 800468c:	d4a2      	bmi.n	80045d4 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 800468e:	f7ff fb69 	bl	8003d64 <HAL_GetTick>
 8004692:	1b80      	subs	r0, r0, r6
 8004694:	2819      	cmp	r0, #25
 8004696:	d9f6      	bls.n	8004686 <I2C_IsErrorOccurred+0xce>
              error_code |=HAL_I2C_ERROR_TIMEOUT;
 8004698:	2420      	movs	r4, #32
              status = HAL_ERROR;
 800469a:	f04f 0801 	mov.w	r8, #1
 800469e:	e799      	b.n	80045d4 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 80046a0:	f1b8 0f00 	cmp.w	r8, #0
 80046a4:	d19d      	bne.n	80045e2 <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80046a6:	2220      	movs	r2, #32
 80046a8:	61da      	str	r2, [r3, #28]
 80046aa:	e79a      	b.n	80045e2 <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 80046ac:	4620      	mov	r0, r4
 80046ae:	e79b      	b.n	80045e8 <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 80046b0:	2800      	cmp	r0, #0
 80046b2:	d1b2      	bne.n	800461a <I2C_IsErrorOccurred+0x62>
}
 80046b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080046b8 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 80046b8:	b570      	push	{r4, r5, r6, lr}
 80046ba:	4604      	mov	r4, r0
 80046bc:	460d      	mov	r5, r1
 80046be:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 80046c0:	6823      	ldr	r3, [r4, #0]
 80046c2:	699b      	ldr	r3, [r3, #24]
 80046c4:	079b      	lsls	r3, r3, #30
 80046c6:	d501      	bpl.n	80046cc <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 80046c8:	2000      	movs	r0, #0
 80046ca:	e01b      	b.n	8004704 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80046cc:	4632      	mov	r2, r6
 80046ce:	4629      	mov	r1, r5
 80046d0:	4620      	mov	r0, r4
 80046d2:	f7ff ff71 	bl	80045b8 <I2C_IsErrorOccurred>
 80046d6:	b9a0      	cbnz	r0, 8004702 <I2C_WaitOnTXISFlagUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 80046d8:	1c6a      	adds	r2, r5, #1
 80046da:	d0f1      	beq.n	80046c0 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80046dc:	f7ff fb42 	bl	8003d64 <HAL_GetTick>
 80046e0:	1b80      	subs	r0, r0, r6
 80046e2:	42a8      	cmp	r0, r5
 80046e4:	d801      	bhi.n	80046ea <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 80046e6:	2d00      	cmp	r5, #0
 80046e8:	d1ea      	bne.n	80046c0 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80046ea:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80046ec:	f043 0320 	orr.w	r3, r3, #32
 80046f0:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80046f2:	2320      	movs	r3, #32
 80046f4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80046f8:	2300      	movs	r3, #0
 80046fa:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
 80046fe:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004702:	2001      	movs	r0, #1
}
 8004704:	bd70      	pop	{r4, r5, r6, pc}

08004706 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8004706:	b570      	push	{r4, r5, r6, lr}
 8004708:	4604      	mov	r4, r0
 800470a:	460d      	mov	r5, r1
 800470c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 800470e:	6823      	ldr	r3, [r4, #0]
 8004710:	699b      	ldr	r3, [r3, #24]
 8004712:	069b      	lsls	r3, r3, #26
 8004714:	d501      	bpl.n	800471a <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 8004716:	2000      	movs	r0, #0
 8004718:	e019      	b.n	800474e <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 800471a:	4632      	mov	r2, r6
 800471c:	4629      	mov	r1, r5
 800471e:	4620      	mov	r0, r4
 8004720:	f7ff ff4a 	bl	80045b8 <I2C_IsErrorOccurred>
 8004724:	b990      	cbnz	r0, 800474c <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004726:	f7ff fb1d 	bl	8003d64 <HAL_GetTick>
 800472a:	1b80      	subs	r0, r0, r6
 800472c:	42a8      	cmp	r0, r5
 800472e:	d801      	bhi.n	8004734 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8004730:	2d00      	cmp	r5, #0
 8004732:	d1ec      	bne.n	800470e <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004734:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8004736:	f043 0320 	orr.w	r3, r3, #32
 800473a:	6463      	str	r3, [r4, #68]	@ 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 800473c:	2320      	movs	r3, #32
 800473e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8004742:	2300      	movs	r3, #0
 8004744:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      __HAL_UNLOCK(hi2c);
 8004748:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800474c:	2001      	movs	r0, #1
}
 800474e:	bd70      	pop	{r4, r5, r6, pc}

08004750 <I2C_WaitOnFlagUntilTimeout>:
{
 8004750:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004754:	9f06      	ldr	r7, [sp, #24]
 8004756:	4604      	mov	r4, r0
 8004758:	4688      	mov	r8, r1
 800475a:	4616      	mov	r6, r2
 800475c:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800475e:	6822      	ldr	r2, [r4, #0]
 8004760:	6993      	ldr	r3, [r2, #24]
 8004762:	ea38 0303 	bics.w	r3, r8, r3
 8004766:	bf0c      	ite	eq
 8004768:	2301      	moveq	r3, #1
 800476a:	2300      	movne	r3, #0
 800476c:	42b3      	cmp	r3, r6
 800476e:	d001      	beq.n	8004774 <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 8004770:	2000      	movs	r0, #0
 8004772:	e015      	b.n	80047a0 <I2C_WaitOnFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8004774:	1c6b      	adds	r3, r5, #1
 8004776:	d0f3      	beq.n	8004760 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004778:	f7ff faf4 	bl	8003d64 <HAL_GetTick>
 800477c:	1bc0      	subs	r0, r0, r7
 800477e:	42a8      	cmp	r0, r5
 8004780:	d801      	bhi.n	8004786 <I2C_WaitOnFlagUntilTimeout+0x36>
 8004782:	2d00      	cmp	r5, #0
 8004784:	d1eb      	bne.n	800475e <I2C_WaitOnFlagUntilTimeout+0xe>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004786:	6c63      	ldr	r3, [r4, #68]	@ 0x44
        __HAL_UNLOCK(hi2c);
 8004788:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800478a:	f043 0320 	orr.w	r3, r3, #32
 800478e:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8004790:	2320      	movs	r3, #32
 8004792:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8004796:	2300      	movs	r3, #0
 8004798:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
 800479c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 80047a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080047a4 <HAL_I2C_Init>:
{
 80047a4:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 80047a6:	4604      	mov	r4, r0
 80047a8:	2800      	cmp	r0, #0
 80047aa:	d04a      	beq.n	8004842 <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80047ac:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 80047b0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80047b4:	b91b      	cbnz	r3, 80047be <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 80047b6:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
 80047ba:	f7fc faf7 	bl	8000dac <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80047be:	2324      	movs	r3, #36	@ 0x24
 80047c0:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 80047c4:	6823      	ldr	r3, [r4, #0]
 80047c6:	681a      	ldr	r2, [r3, #0]
 80047c8:	f022 0201 	bic.w	r2, r2, #1
 80047cc:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 80047ce:	6862      	ldr	r2, [r4, #4]
 80047d0:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80047d4:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 80047d6:	689a      	ldr	r2, [r3, #8]
 80047d8:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80047dc:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80047de:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 80047e2:	2901      	cmp	r1, #1
 80047e4:	d124      	bne.n	8004830 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80047e6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80047ea:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80047ec:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80047ee:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80047f0:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 80047f4:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80047f8:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80047fa:	68da      	ldr	r2, [r3, #12]
 80047fc:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004800:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8004802:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8004806:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8004808:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 800480a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800480e:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8004810:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8004814:	430a      	orrs	r2, r1
 8004816:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8004818:	681a      	ldr	r2, [r3, #0]
 800481a:	f042 0201 	orr.w	r2, r2, #1
 800481e:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8004820:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004822:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8004824:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8004828:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800482a:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 800482e:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004830:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004834:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004836:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004838:	d1d8      	bne.n	80047ec <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 800483a:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800483e:	605a      	str	r2, [r3, #4]
 8004840:	e7d4      	b.n	80047ec <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 8004842:	2001      	movs	r0, #1
 8004844:	e7f3      	b.n	800482e <HAL_I2C_Init+0x8a>

08004846 <HAL_I2C_DeInit>:
{
 8004846:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004848:	4604      	mov	r4, r0
 800484a:	b198      	cbz	r0, 8004874 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800484c:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800484e:	2324      	movs	r3, #36	@ 0x24
 8004850:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8004854:	6813      	ldr	r3, [r2, #0]
 8004856:	f023 0301 	bic.w	r3, r3, #1
 800485a:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800485c:	f7fc faea 	bl	8000e34 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004860:	2000      	movs	r0, #0
 8004862:	6460      	str	r0, [r4, #68]	@ 0x44
  __HAL_UNLOCK(hi2c);
 8004864:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 8004868:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 800486c:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800486e:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 8004872:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004874:	2001      	movs	r0, #1
 8004876:	e7fc      	b.n	8004872 <HAL_I2C_DeInit+0x2c>

08004878 <HAL_I2C_Mem_Write>:
{
 8004878:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800487c:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 800487e:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8004882:	4604      	mov	r4, r0
 8004884:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004886:	2b20      	cmp	r3, #32
{
 8004888:	4616      	mov	r6, r2
 800488a:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 800488e:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004892:	f040 80c6 	bne.w	8004a22 <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 8004896:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004898:	b113      	cbz	r3, 80048a0 <HAL_I2C_Mem_Write+0x28>
 800489a:	f1ba 0f00 	cmp.w	sl, #0
 800489e:	d106      	bne.n	80048ae <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80048a0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80048a4:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 80048a6:	2001      	movs	r0, #1
}
 80048a8:	b003      	add	sp, #12
 80048aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 80048ae:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 80048b2:	2b01      	cmp	r3, #1
 80048b4:	f000 80b5 	beq.w	8004a22 <HAL_I2C_Mem_Write+0x1aa>
 80048b8:	f04f 0b01 	mov.w	fp, #1
 80048bc:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 80048c0:	f7ff fa50 	bl	8003d64 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80048c4:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 80048c6:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80048c8:	9000      	str	r0, [sp, #0]
 80048ca:	465a      	mov	r2, fp
 80048cc:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80048d0:	4620      	mov	r0, r4
 80048d2:	f7ff ff3d 	bl	8004750 <I2C_WaitOnFlagUntilTimeout>
 80048d6:	2800      	cmp	r0, #0
 80048d8:	d1e5      	bne.n	80048a6 <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80048da:	2321      	movs	r3, #33	@ 0x21
    hi2c->XferISR   = NULL;
 80048dc:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80048de:	fa5f f289 	uxtb.w	r2, r9
 80048e2:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80048e4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80048e8:	2340      	movs	r3, #64	@ 0x40
 80048ea:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 80048ee:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80048f0:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80048f2:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 80048f4:	6263      	str	r3, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80048f6:	4b4c      	ldr	r3, [pc, #304]	@ (8004a28 <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferCount = Size;
 80048f8:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80048fc:	9300      	str	r3, [sp, #0]
 80048fe:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8004902:	f7ff fe43 	bl	800458c <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004906:	462a      	mov	r2, r5
 8004908:	4641      	mov	r1, r8
 800490a:	4620      	mov	r0, r4
 800490c:	f7ff fed4 	bl	80046b8 <I2C_WaitOnTXISFlagUntilTimeout>
 8004910:	bb18      	cbnz	r0, 800495a <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004912:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004916:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004918:	d115      	bne.n	8004946 <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800491a:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 800491c:	2200      	movs	r2, #0
 800491e:	2180      	movs	r1, #128	@ 0x80
 8004920:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004922:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8004924:	4643      	mov	r3, r8
 8004926:	9500      	str	r5, [sp, #0]
 8004928:	f7ff ff12 	bl	8004750 <I2C_WaitOnFlagUntilTimeout>
 800492c:	b9a8      	cbnz	r0, 800495a <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800492e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004930:	b29b      	uxth	r3, r3
 8004932:	2bff      	cmp	r3, #255	@ 0xff
 8004934:	d815      	bhi.n	8004962 <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8004936:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004938:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 800493c:	b292      	uxth	r2, r2
 800493e:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004940:	b2d2      	uxtb	r2, r2
 8004942:	9000      	str	r0, [sp, #0]
 8004944:	e012      	b.n	800496c <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004946:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004948:	4641      	mov	r1, r8
 800494a:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800494c:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800494e:	462a      	mov	r2, r5
 8004950:	f7ff feb2 	bl	80046b8 <I2C_WaitOnTXISFlagUntilTimeout>
 8004954:	b908      	cbnz	r0, 800495a <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004956:	6823      	ldr	r3, [r4, #0]
 8004958:	e7df      	b.n	800491a <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 800495a:	2300      	movs	r3, #0
 800495c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004960:	e7a1      	b.n	80048a6 <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004962:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8004964:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004968:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 800496a:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800496c:	4639      	mov	r1, r7
 800496e:	4620      	mov	r0, r4
 8004970:	f7ff fe0c 	bl	800458c <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004974:	462a      	mov	r2, r5
 8004976:	4641      	mov	r1, r8
 8004978:	4620      	mov	r0, r4
 800497a:	f7ff fe9d 	bl	80046b8 <I2C_WaitOnTXISFlagUntilTimeout>
 800497e:	2800      	cmp	r0, #0
 8004980:	d191      	bne.n	80048a6 <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8004982:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004984:	6822      	ldr	r2, [r4, #0]
 8004986:	f813 1b01 	ldrb.w	r1, [r3], #1
 800498a:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 800498c:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 800498e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004990:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8004992:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8004994:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 8004996:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8004998:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 800499a:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800499c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800499e:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80049a0:	b29b      	uxth	r3, r3
 80049a2:	b1b3      	cbz	r3, 80049d2 <HAL_I2C_Mem_Write+0x15a>
 80049a4:	b9aa      	cbnz	r2, 80049d2 <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80049a6:	4643      	mov	r3, r8
 80049a8:	2180      	movs	r1, #128	@ 0x80
 80049aa:	4620      	mov	r0, r4
 80049ac:	9500      	str	r5, [sp, #0]
 80049ae:	f7ff fecf 	bl	8004750 <I2C_WaitOnFlagUntilTimeout>
 80049b2:	2800      	cmp	r0, #0
 80049b4:	f47f af77 	bne.w	80048a6 <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80049b8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80049ba:	b29b      	uxth	r3, r3
 80049bc:	2bff      	cmp	r3, #255	@ 0xff
 80049be:	d928      	bls.n	8004a12 <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80049c0:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80049c2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80049c6:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80049c8:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80049ca:	4639      	mov	r1, r7
 80049cc:	4620      	mov	r0, r4
 80049ce:	f7ff fddd 	bl	800458c <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 80049d2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80049d4:	b29b      	uxth	r3, r3
 80049d6:	2b00      	cmp	r3, #0
 80049d8:	d1cc      	bne.n	8004974 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80049da:	462a      	mov	r2, r5
 80049dc:	4641      	mov	r1, r8
 80049de:	4620      	mov	r0, r4
 80049e0:	f7ff fe91 	bl	8004706 <I2C_WaitOnSTOPFlagUntilTimeout>
 80049e4:	2800      	cmp	r0, #0
 80049e6:	f47f af5e 	bne.w	80048a6 <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80049ea:	6823      	ldr	r3, [r4, #0]
 80049ec:	2120      	movs	r1, #32
 80049ee:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80049f0:	685a      	ldr	r2, [r3, #4]
 80049f2:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 80049f6:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 80049fa:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 80049fe:	f022 0201 	bic.w	r2, r2, #1
 8004a02:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8004a04:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8004a08:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8004a0c:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8004a10:	e74a      	b.n	80048a8 <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8004a12:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004a14:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8004a18:	b292      	uxth	r2, r2
 8004a1a:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004a1c:	b2d2      	uxtb	r2, r2
 8004a1e:	9000      	str	r0, [sp, #0]
 8004a20:	e7d3      	b.n	80049ca <HAL_I2C_Mem_Write+0x152>
    __HAL_LOCK(hi2c);
 8004a22:	2002      	movs	r0, #2
 8004a24:	e740      	b.n	80048a8 <HAL_I2C_Mem_Write+0x30>
 8004a26:	bf00      	nop
 8004a28:	80002000 	.word	0x80002000

08004a2c <HAL_I2C_Mem_Read>:
{
 8004a2c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004a30:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004a32:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8004a36:	4604      	mov	r4, r0
 8004a38:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004a3a:	2b20      	cmp	r3, #32
{
 8004a3c:	4616      	mov	r6, r2
 8004a3e:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8004a42:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004a46:	f040 80c9 	bne.w	8004bdc <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 8004a4a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004a4c:	b113      	cbz	r3, 8004a54 <HAL_I2C_Mem_Read+0x28>
 8004a4e:	f1ba 0f00 	cmp.w	sl, #0
 8004a52:	d106      	bne.n	8004a62 <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8004a54:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004a58:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8004a5a:	2001      	movs	r0, #1
}
 8004a5c:	b003      	add	sp, #12
 8004a5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8004a62:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8004a66:	2b01      	cmp	r3, #1
 8004a68:	f000 80b8 	beq.w	8004bdc <HAL_I2C_Mem_Read+0x1b0>
 8004a6c:	f04f 0b01 	mov.w	fp, #1
 8004a70:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8004a74:	f7ff f976 	bl	8003d64 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004a78:	2319      	movs	r3, #25
 8004a7a:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8004a7c:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004a7e:	465a      	mov	r2, fp
 8004a80:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8004a84:	4620      	mov	r0, r4
 8004a86:	f7ff fe63 	bl	8004750 <I2C_WaitOnFlagUntilTimeout>
 8004a8a:	4603      	mov	r3, r0
 8004a8c:	2800      	cmp	r0, #0
 8004a8e:	d1e4      	bne.n	8004a5a <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004a90:	2222      	movs	r2, #34	@ 0x22
    hi2c->XferISR   = NULL;
 8004a92:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8004a94:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004a96:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004a9a:	2240      	movs	r2, #64	@ 0x40
 8004a9c:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8004aa0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004aa2:	6460      	str	r0, [r4, #68]	@ 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8004aa4:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8004aa6:	6262      	str	r2, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8004aa8:	4a4d      	ldr	r2, [pc, #308]	@ (8004be0 <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferCount = Size;
 8004aaa:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8004aae:	9200      	str	r2, [sp, #0]
 8004ab0:	fa5f f289 	uxtb.w	r2, r9
 8004ab4:	f7ff fd6a 	bl	800458c <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004ab8:	462a      	mov	r2, r5
 8004aba:	4641      	mov	r1, r8
 8004abc:	4620      	mov	r0, r4
 8004abe:	f7ff fdfb 	bl	80046b8 <I2C_WaitOnTXISFlagUntilTimeout>
 8004ac2:	bb20      	cbnz	r0, 8004b0e <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004ac4:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004ac8:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004aca:	d116      	bne.n	8004afa <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004acc:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8004ace:	2200      	movs	r2, #0
 8004ad0:	2140      	movs	r1, #64	@ 0x40
 8004ad2:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004ad4:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8004ad6:	4643      	mov	r3, r8
 8004ad8:	9500      	str	r5, [sp, #0]
 8004ada:	f7ff fe39 	bl	8004750 <I2C_WaitOnFlagUntilTimeout>
 8004ade:	b9b0      	cbnz	r0, 8004b0e <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004ae0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004ae2:	b29b      	uxth	r3, r3
 8004ae4:	2bff      	cmp	r3, #255	@ 0xff
 8004ae6:	4b3f      	ldr	r3, [pc, #252]	@ (8004be4 <HAL_I2C_Mem_Read+0x1b8>)
 8004ae8:	d815      	bhi.n	8004b16 <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8004aea:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 8004aec:	b292      	uxth	r2, r2
 8004aee:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004af0:	b2d2      	uxtb	r2, r2
 8004af2:	9300      	str	r3, [sp, #0]
 8004af4:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8004af8:	e012      	b.n	8004b20 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004afa:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004afc:	4641      	mov	r1, r8
 8004afe:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004b00:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004b02:	462a      	mov	r2, r5
 8004b04:	f7ff fdd8 	bl	80046b8 <I2C_WaitOnTXISFlagUntilTimeout>
 8004b08:	b908      	cbnz	r0, 8004b0e <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004b0a:	6823      	ldr	r3, [r4, #0]
 8004b0c:	e7de      	b.n	8004acc <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 8004b0e:	2300      	movs	r3, #0
 8004b10:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004b14:	e7a1      	b.n	8004a5a <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004b16:	22ff      	movs	r2, #255	@ 0xff
 8004b18:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004b1a:	9300      	str	r3, [sp, #0]
 8004b1c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004b20:	4639      	mov	r1, r7
 8004b22:	4620      	mov	r0, r4
 8004b24:	f7ff fd32 	bl	800458c <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8004b28:	4643      	mov	r3, r8
 8004b2a:	2200      	movs	r2, #0
 8004b2c:	2104      	movs	r1, #4
 8004b2e:	4620      	mov	r0, r4
 8004b30:	9500      	str	r5, [sp, #0]
 8004b32:	f7ff fe0d 	bl	8004750 <I2C_WaitOnFlagUntilTimeout>
 8004b36:	2800      	cmp	r0, #0
 8004b38:	d18f      	bne.n	8004a5a <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8004b3a:	6823      	ldr	r3, [r4, #0]
 8004b3c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004b3e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004b40:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8004b42:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 8004b44:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8004b46:	3301      	adds	r3, #1
      hi2c->XferSize--;
 8004b48:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 8004b4a:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8004b4c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004b4e:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8004b50:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8004b52:	8522      	strh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8004b54:	b29b      	uxth	r3, r3
 8004b56:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004b58:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004b5a:	b29b      	uxth	r3, r3
 8004b5c:	b1b3      	cbz	r3, 8004b8c <HAL_I2C_Mem_Read+0x160>
 8004b5e:	b9aa      	cbnz	r2, 8004b8c <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8004b60:	4643      	mov	r3, r8
 8004b62:	2180      	movs	r1, #128	@ 0x80
 8004b64:	4620      	mov	r0, r4
 8004b66:	9500      	str	r5, [sp, #0]
 8004b68:	f7ff fdf2 	bl	8004750 <I2C_WaitOnFlagUntilTimeout>
 8004b6c:	2800      	cmp	r0, #0
 8004b6e:	f47f af74 	bne.w	8004a5a <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004b72:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004b74:	b29b      	uxth	r3, r3
 8004b76:	2bff      	cmp	r3, #255	@ 0xff
 8004b78:	d928      	bls.n	8004bcc <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004b7a:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8004b7c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004b80:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8004b82:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004b84:	4639      	mov	r1, r7
 8004b86:	4620      	mov	r0, r4
 8004b88:	f7ff fd00 	bl	800458c <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8004b8c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004b8e:	b29b      	uxth	r3, r3
 8004b90:	2b00      	cmp	r3, #0
 8004b92:	d1c9      	bne.n	8004b28 <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004b94:	462a      	mov	r2, r5
 8004b96:	4641      	mov	r1, r8
 8004b98:	4620      	mov	r0, r4
 8004b9a:	f7ff fdb4 	bl	8004706 <I2C_WaitOnSTOPFlagUntilTimeout>
 8004b9e:	2800      	cmp	r0, #0
 8004ba0:	f47f af5b 	bne.w	8004a5a <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004ba4:	6823      	ldr	r3, [r4, #0]
 8004ba6:	2120      	movs	r1, #32
 8004ba8:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8004baa:	685a      	ldr	r2, [r3, #4]
 8004bac:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8004bb0:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8004bb4:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8004bb8:	f022 0201 	bic.w	r2, r2, #1
 8004bbc:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8004bbe:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8004bc2:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8004bc6:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8004bca:	e747      	b.n	8004a5c <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8004bcc:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004bce:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8004bd2:	b292      	uxth	r2, r2
 8004bd4:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004bd6:	b2d2      	uxtb	r2, r2
 8004bd8:	9000      	str	r0, [sp, #0]
 8004bda:	e7d3      	b.n	8004b84 <HAL_I2C_Mem_Read+0x158>
    __HAL_LOCK(hi2c);
 8004bdc:	2002      	movs	r0, #2
 8004bde:	e73d      	b.n	8004a5c <HAL_I2C_Mem_Read+0x30>
 8004be0:	80002000 	.word	0x80002000
 8004be4:	80002400 	.word	0x80002400

08004be8 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004be8:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004bea:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 8004bee:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004bf0:	2a20      	cmp	r2, #32
 8004bf2:	b2d4      	uxtb	r4, r2
 8004bf4:	d11c      	bne.n	8004c30 <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004bf6:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8004bfa:	2a01      	cmp	r2, #1
 8004bfc:	d018      	beq.n	8004c30 <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8004bfe:	2224      	movs	r2, #36	@ 0x24
 8004c00:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004c04:	6802      	ldr	r2, [r0, #0]
 8004c06:	6810      	ldr	r0, [r2, #0]
 8004c08:	f020 0001 	bic.w	r0, r0, #1
 8004c0c:	6010      	str	r0, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8004c0e:	6810      	ldr	r0, [r2, #0]
 8004c10:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 8004c14:	6010      	str	r0, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8004c16:	6810      	ldr	r0, [r2, #0]
 8004c18:	4301      	orrs	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004c1a:	2000      	movs	r0, #0
    hi2c->Instance->CR1 |= AnalogFilter;
 8004c1c:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8004c1e:	6811      	ldr	r1, [r2, #0]
 8004c20:	f041 0101 	orr.w	r1, r1, #1
 8004c24:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004c26:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8004c2a:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004c2e:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 8004c30:	2002      	movs	r0, #2
 8004c32:	e7fc      	b.n	8004c2e <HAL_I2CEx_ConfigAnalogFilter+0x46>

08004c34 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8004c34:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c36:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 8004c3a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c3c:	2a20      	cmp	r2, #32
 8004c3e:	b2d4      	uxtb	r4, r2
 8004c40:	d11b      	bne.n	8004c7a <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004c42:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8004c46:	2a01      	cmp	r2, #1
 8004c48:	d017      	beq.n	8004c7a <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8004c4a:	2224      	movs	r2, #36	@ 0x24
 8004c4c:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004c50:	6802      	ldr	r2, [r0, #0]
 8004c52:	6810      	ldr	r0, [r2, #0]
 8004c54:	f020 0001 	bic.w	r0, r0, #1
 8004c58:	6010      	str	r0, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8004c5a:	6810      	ldr	r0, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8004c5c:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8004c60:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004c64:	2000      	movs	r0, #0
    hi2c->Instance->CR1 = tmpreg;
 8004c66:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8004c68:	6811      	ldr	r1, [r2, #0]
 8004c6a:	f041 0101 	orr.w	r1, r1, #1
 8004c6e:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004c70:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8004c74:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004c78:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 8004c7a:	2002      	movs	r0, #2
 8004c7c:	e7fc      	b.n	8004c78 <HAL_I2CEx_ConfigDigitalFilter+0x44>

08004c7e <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004c7e:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004c80:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8004c82:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004c86:	3284      	adds	r2, #132	@ 0x84
 8004c88:	1883      	adds	r3, r0, r2
{
 8004c8a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004c8e:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004c90:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004c94:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8004c96:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004c9a:	684c      	ldr	r4, [r1, #4]
 8004c9c:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004ca0:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8004ca4:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004ca8:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004caa:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004cac:	68c5      	ldr	r5, [r0, #12]
 8004cae:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8004cb2:	443d      	add	r5, r7
 8004cb4:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8004cb8:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8004cba:	68c6      	ldr	r6, [r0, #12]
 8004cbc:	68cd      	ldr	r5, [r1, #12]
 8004cbe:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8004cc2:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8004cc4:	689d      	ldr	r5, [r3, #8]
 8004cc6:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8004cca:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8004ccc:	688d      	ldr	r5, [r1, #8]
 8004cce:	68c7      	ldr	r7, [r0, #12]
 8004cd0:	3501      	adds	r5, #1
 8004cd2:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8004cd6:	443d      	add	r5, r7
 8004cd8:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004cdc:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8004cde:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004ce0:	691d      	ldr	r5, [r3, #16]
 8004ce2:	f025 0507 	bic.w	r5, r5, #7
 8004ce6:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004ce8:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8004cea:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8004cec:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8004cf0:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8004cf4:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8004cf8:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8004cfc:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8004d00:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8004d04:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8004d08:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8004d0a:	695d      	ldr	r5, [r3, #20]
 8004d0c:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8004d10:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8004d12:	694d      	ldr	r5, [r1, #20]
 8004d14:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8004d16:	69dd      	ldr	r5, [r3, #28]
 8004d18:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8004d1c:	f025 0507 	bic.w	r5, r5, #7
 8004d20:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8004d22:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8004d26:	433d      	orrs	r5, r7
 8004d28:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004d2a:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004d2c:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004d2e:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004d32:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8004d34:	b31e      	cbz	r6, 8004d7e <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8004d36:	2e01      	cmp	r6, #1
 8004d38:	d023      	beq.n	8004d82 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8004d3a:	1eb5      	subs	r5, r6, #2
 8004d3c:	2d02      	cmp	r5, #2
 8004d3e:	d922      	bls.n	8004d86 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 8004d40:	2e07      	cmp	r6, #7
 8004d42:	bf14      	ite	ne
 8004d44:	2501      	movne	r5, #1
 8004d46:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004d48:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004d4a:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004d4e:	f006 26e0 	and.w	r6, r6, #3758153728	@ 0xe000e000
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004d52:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004d54:	62de      	str	r6, [r3, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004d56:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004d58:	6a8e      	ldr	r6, [r1, #40]	@ 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004d5a:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004d5c:	436e      	muls	r6, r5
 8004d5e:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8004d62:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004d64:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8004d66:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 8004d6a:	f024 0407 	bic.w	r4, r4, #7
 8004d6e:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004d70:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004d72:	5883      	ldr	r3, [r0, r2]
 8004d74:	f043 0301 	orr.w	r3, r3, #1
 8004d78:	5083      	str	r3, [r0, r2]
}
 8004d7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8004d7e:	2504      	movs	r5, #4
 8004d80:	e7e2      	b.n	8004d48 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8004d82:	2503      	movs	r5, #3
 8004d84:	e7e0      	b.n	8004d48 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8004d86:	2502      	movs	r5, #2
 8004d88:	e7de      	b.n	8004d48 <LTDC_SetConfig+0xca>
	...

08004d8c <HAL_LTDC_Init>:
{
 8004d8c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8004d8e:	4604      	mov	r4, r0
 8004d90:	2800      	cmp	r0, #0
 8004d92:	d063      	beq.n	8004e5c <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8004d94:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8004d98:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004d9c:	b91b      	cbnz	r3, 8004da6 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8004d9e:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8004da2:	f7fc f863 	bl	8000e6c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004da6:	2302      	movs	r3, #2
 8004da8:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8004dac:	6823      	ldr	r3, [r4, #0]
 8004dae:	699a      	ldr	r2, [r3, #24]
 8004db0:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8004db4:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004db6:	6999      	ldr	r1, [r3, #24]
 8004db8:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8004dbc:	4302      	orrs	r2, r0
 8004dbe:	68e0      	ldr	r0, [r4, #12]
 8004dc0:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004dc2:	6920      	ldr	r0, [r4, #16]
 8004dc4:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8004dc6:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004dc8:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004dca:	4925      	ldr	r1, [pc, #148]	@ (8004e60 <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004dcc:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004dce:	689a      	ldr	r2, [r3, #8]
 8004dd0:	400a      	ands	r2, r1
 8004dd2:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8004dd4:	689a      	ldr	r2, [r3, #8]
 8004dd6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004dda:	69a0      	ldr	r0, [r4, #24]
 8004ddc:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8004dde:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8004de0:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8004de2:	68da      	ldr	r2, [r3, #12]
 8004de4:	400a      	ands	r2, r1
 8004de6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8004de8:	68da      	ldr	r2, [r3, #12]
 8004dea:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004dee:	6a20      	ldr	r0, [r4, #32]
 8004df0:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8004df2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8004df4:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8004df6:	691a      	ldr	r2, [r3, #16]
 8004df8:	400a      	ands	r2, r1
 8004dfa:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8004dfc:	691a      	ldr	r2, [r3, #16]
 8004dfe:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004e02:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8004e04:	4302      	orrs	r2, r0
 8004e06:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8004e08:	695a      	ldr	r2, [r3, #20]
 8004e0a:	400a      	ands	r2, r1
  tmp = (hltdc->Init.TotalWidth << 16U);
 8004e0c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8004e0e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8004e10:	695a      	ldr	r2, [r3, #20]
 8004e12:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004e16:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8004e18:	430a      	orrs	r2, r1
 8004e1a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004e1c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8004e1e:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004e22:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8004e26:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004e2a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8004e2c:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8004e2e:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8004e32:	432a      	orrs	r2, r5
 8004e34:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004e38:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8004e3a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004e3e:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8004e40:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004e42:	f042 0206 	orr.w	r2, r2, #6
 8004e46:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8004e48:	699a      	ldr	r2, [r3, #24]
 8004e4a:	f042 0201 	orr.w	r2, r2, #1
 8004e4e:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8004e50:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004e52:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8004e56:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8004e5a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004e5c:	2001      	movs	r0, #1
 8004e5e:	e7fc      	b.n	8004e5a <HAL_LTDC_Init+0xce>
 8004e60:	f000f800 	.word	0xf000f800

08004e64 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8004e64:	4770      	bx	lr

08004e66 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8004e66:	4770      	bx	lr

08004e68 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004e68:	6803      	ldr	r3, [r0, #0]
{
 8004e6a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004e6c:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
{
 8004e6e:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8004e70:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004e72:	0772      	lsls	r2, r6, #29
 8004e74:	d514      	bpl.n	8004ea0 <HAL_LTDC_IRQHandler+0x38>
 8004e76:	0769      	lsls	r1, r5, #29
 8004e78:	d512      	bpl.n	8004ea0 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8004e7a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004e7c:	f022 0204 	bic.w	r2, r2, #4
 8004e80:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8004e82:	2204      	movs	r2, #4
 8004e84:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8004e86:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8004e8a:	f043 0301 	orr.w	r3, r3, #1
 8004e8e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8004e92:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004e94:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004e98:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004e9c:	f7ff ffe2 	bl	8004e64 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8004ea0:	07b2      	lsls	r2, r6, #30
 8004ea2:	d516      	bpl.n	8004ed2 <HAL_LTDC_IRQHandler+0x6a>
 8004ea4:	07ab      	lsls	r3, r5, #30
 8004ea6:	d514      	bpl.n	8004ed2 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8004ea8:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 8004eaa:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8004eac:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004eae:	f022 0202 	bic.w	r2, r2, #2
 8004eb2:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8004eb4:	2202      	movs	r2, #2
 8004eb6:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8004eb8:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8004ebc:	4313      	orrs	r3, r2
 8004ebe:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004ec2:	2304      	movs	r3, #4
 8004ec4:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004ec8:	2300      	movs	r3, #0
 8004eca:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004ece:	f7ff ffc9 	bl	8004e64 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8004ed2:	07f0      	lsls	r0, r6, #31
 8004ed4:	d510      	bpl.n	8004ef8 <HAL_LTDC_IRQHandler+0x90>
 8004ed6:	07e9      	lsls	r1, r5, #31
 8004ed8:	d50e      	bpl.n	8004ef8 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004eda:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 8004edc:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004ede:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004ee0:	f022 0201 	bic.w	r2, r2, #1
 8004ee4:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8004ee6:	2201      	movs	r2, #1
 8004ee8:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8004eea:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8004eec:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004ef0:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8004ef4:	f7fd f936 	bl	8002164 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8004ef8:	0732      	lsls	r2, r6, #28
 8004efa:	d511      	bpl.n	8004f20 <HAL_LTDC_IRQHandler+0xb8>
 8004efc:	072b      	lsls	r3, r5, #28
 8004efe:	d50f      	bpl.n	8004f20 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8004f00:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 8004f02:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8004f04:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004f06:	f022 0208 	bic.w	r2, r2, #8
 8004f0a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8004f0c:	2208      	movs	r2, #8
 8004f0e:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8004f10:	2301      	movs	r3, #1
 8004f12:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004f16:	2300      	movs	r3, #0
 8004f18:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8004f1c:	f7ff ffa3 	bl	8004e66 <HAL_LTDC_ReloadEventCallback>
}
 8004f20:	bd70      	pop	{r4, r5, r6, pc}

08004f22 <HAL_LTDC_ConfigLayer>:
{
 8004f22:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8004f26:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
 8004f2a:	4606      	mov	r6, r0
 8004f2c:	460f      	mov	r7, r1
 8004f2e:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
 8004f30:	2b01      	cmp	r3, #1
 8004f32:	f04f 0002 	mov.w	r0, #2
 8004f36:	d01f      	beq.n	8004f78 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004f38:	2434      	movs	r4, #52	@ 0x34
  __HAL_LOCK(hltdc);
 8004f3a:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004f3e:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004f40:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004f44:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 8004f48:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004f4c:	3438      	adds	r4, #56	@ 0x38
 8004f4e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004f50:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004f52:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004f54:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004f56:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004f58:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004f5a:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8004f5c:	4630      	mov	r0, r6
 8004f5e:	4662      	mov	r2, ip
 8004f60:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004f62:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8004f64:	f7ff fe8b 	bl	8004c7e <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004f68:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8004f6a:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004f6c:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8004f70:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8004f74:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8004f78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004f7c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8004f7c:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
{
 8004f80:	4603      	mov	r3, r0
 8004f82:	2002      	movs	r0, #2
  __HAL_LOCK(hltdc);
 8004f84:	2a01      	cmp	r2, #1
 8004f86:	d012      	beq.n	8004fae <HAL_LTDC_ProgramLineEvent+0x32>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004f88:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004f8a:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004f8e:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8004f90:	f020 0001 	bic.w	r0, r0, #1
 8004f94:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8004f96:	4806      	ldr	r0, [pc, #24]	@ (8004fb0 <HAL_LTDC_ProgramLineEvent+0x34>)
 8004f98:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_UNLOCK(hltdc);
 8004f9a:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8004f9c:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8004f9e:	f041 0101 	orr.w	r1, r1, #1
 8004fa2:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8004fa4:	2201      	movs	r2, #1
  __HAL_UNLOCK(hltdc);
 8004fa6:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_READY;
 8004faa:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
}
 8004fae:	4770      	bx	lr
 8004fb0:	40016800 	.word	0x40016800

08004fb4 <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 8004fb4:	4b19      	ldr	r3, [pc, #100]	@ (800501c <HAL_PWREx_EnableOverDrive+0x68>)
{
 8004fb6:	b537      	push	{r0, r1, r2, r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 8004fb8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8004fba:	4c19      	ldr	r4, [pc, #100]	@ (8005020 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8004fbc:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8004fc0:	641a      	str	r2, [r3, #64]	@ 0x40
 8004fc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004fc4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004fc8:	9301      	str	r3, [sp, #4]
 8004fca:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8004fcc:	6823      	ldr	r3, [r4, #0]
 8004fce:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004fd2:	6023      	str	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8004fd4:	f7fe fec6 	bl	8003d64 <HAL_GetTick>
 8004fd8:	4605      	mov	r5, r0

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8004fda:	6863      	ldr	r3, [r4, #4]
 8004fdc:	03da      	lsls	r2, r3, #15
 8004fde:	d50c      	bpl.n	8004ffa <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8004fe0:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8004fe2:	4d0f      	ldr	r5, [pc, #60]	@ (8005020 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8004fe4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004fe8:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8004fea:	f7fe febb 	bl	8003d64 <HAL_GetTick>
 8004fee:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8004ff0:	686b      	ldr	r3, [r5, #4]
 8004ff2:	039b      	lsls	r3, r3, #14
 8004ff4:	d50a      	bpl.n	800500c <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8004ff6:	2000      	movs	r0, #0
 8004ff8:	e006      	b.n	8005008 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8004ffa:	f7fe feb3 	bl	8003d64 <HAL_GetTick>
 8004ffe:	1b40      	subs	r0, r0, r5
 8005000:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8005004:	d9e9      	bls.n	8004fda <HAL_PWREx_EnableOverDrive+0x26>
      return HAL_TIMEOUT;
 8005006:	2003      	movs	r0, #3
}
 8005008:	b003      	add	sp, #12
 800500a:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800500c:	f7fe feaa 	bl	8003d64 <HAL_GetTick>
 8005010:	1b00      	subs	r0, r0, r4
 8005012:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8005016:	d9eb      	bls.n	8004ff0 <HAL_PWREx_EnableOverDrive+0x3c>
 8005018:	e7f5      	b.n	8005006 <HAL_PWREx_EnableOverDrive+0x52>
 800501a:	bf00      	nop
 800501c:	40023800 	.word	0x40023800
 8005020:	40007000 	.word	0x40007000

08005024 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8005024:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8005028:	6a4e      	ldr	r6, [r1, #36]	@ 0x24
 800502a:	b136      	cbz	r6, 800503a <QSPI_Config+0x16>
 800502c:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
 8005030:	d003      	beq.n	800503a <QSPI_Config+0x16>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005032:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8005034:	6804      	ldr	r4, [r0, #0]
 8005036:	3b01      	subs	r3, #1
 8005038:	6123      	str	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800503a:	f8d1 a018 	ldr.w	sl, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800503e:	e9d1 7e07 	ldrd	r7, lr, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005042:	f1ba 0f00 	cmp.w	sl, #0
 8005046:	d04c      	beq.n	80050e2 <QSPI_Config+0xbe>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005048:	694c      	ldr	r4, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800504a:	6805      	ldr	r5, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800504c:	ea4f 4c84 	mov.w	ip, r4, lsl #18
 8005050:	ea4a 0406 	orr.w	r4, sl, r6
 8005054:	680b      	ldr	r3, [r1, #0]
 8005056:	f8d1 8034 	ldr.w	r8, [r1, #52]	@ 0x34
 800505a:	ea44 0a02 	orr.w	sl, r4, r2
 800505e:	e9d1 090b 	ldrd	r0, r9, [r1, #44]	@ 0x2c
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005062:	f1be 0f00 	cmp.w	lr, #0
 8005066:	d024      	beq.n	80050b2 <QSPI_Config+0x8e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005068:	688e      	ldr	r6, [r1, #8]
 800506a:	ea4a 040e 	orr.w	r4, sl, lr
 800506e:	61ee      	str	r6, [r5, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005070:	690e      	ldr	r6, [r1, #16]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005072:	b19f      	cbz	r7, 800509c <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005074:	433b      	orrs	r3, r7
 8005076:	4303      	orrs	r3, r0
 8005078:	68c8      	ldr	r0, [r1, #12]
 800507a:	ea43 0309 	orr.w	r3, r3, r9
 800507e:	ea43 0308 	orr.w	r3, r3, r8
 8005082:	4333      	orrs	r3, r6
 8005084:	4303      	orrs	r3, r0
 8005086:	ea43 030c 	orr.w	r3, r3, ip
 800508a:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800508c:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005090:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005092:	d001      	beq.n	8005098 <QSPI_Config+0x74>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005094:	684b      	ldr	r3, [r1, #4]
 8005096:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8005098:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800509c:	4303      	orrs	r3, r0
 800509e:	ea43 0309 	orr.w	r3, r3, r9
 80050a2:	ea43 0308 	orr.w	r3, r3, r8
 80050a6:	4333      	orrs	r3, r6
 80050a8:	ea43 030c 	orr.w	r3, r3, ip
 80050ac:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80050ae:	616b      	str	r3, [r5, #20]
 80050b0:	e7f2      	b.n	8005098 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80050b2:	b167      	cbz	r7, 80050ce <QSPI_Config+0xaa>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80050b4:	433b      	orrs	r3, r7
 80050b6:	4303      	orrs	r3, r0
 80050b8:	68c8      	ldr	r0, [r1, #12]
 80050ba:	ea43 0309 	orr.w	r3, r3, r9
 80050be:	ea43 0308 	orr.w	r3, r3, r8
 80050c2:	4303      	orrs	r3, r0
 80050c4:	ea43 030c 	orr.w	r3, r3, ip
 80050c8:	ea43 030a 	orr.w	r3, r3, sl
 80050cc:	e7de      	b.n	800508c <QSPI_Config+0x68>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80050ce:	4303      	orrs	r3, r0
 80050d0:	ea43 0309 	orr.w	r3, r3, r9
 80050d4:	ea43 0408 	orr.w	r4, r3, r8
 80050d8:	ea44 030c 	orr.w	r3, r4, ip
 80050dc:	ea43 030a 	orr.w	r3, r3, sl
 80050e0:	e7e5      	b.n	80050ae <QSPI_Config+0x8a>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80050e2:	f1be 0f00 	cmp.w	lr, #0
 80050e6:	d02c      	beq.n	8005142 <QSPI_Config+0x11e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80050e8:	ea46 050e 	orr.w	r5, r6, lr
 80050ec:	688b      	ldr	r3, [r1, #8]
 80050ee:	6804      	ldr	r4, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80050f0:	694e      	ldr	r6, [r1, #20]
 80050f2:	4315      	orrs	r5, r2
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80050f4:	61e3      	str	r3, [r4, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80050f6:	f8d1 c034 	ldr.w	ip, [r1, #52]	@ 0x34
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80050fa:	04b6      	lsls	r6, r6, #18
 80050fc:	690b      	ldr	r3, [r1, #16]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80050fe:	e9d1 8e0b 	ldrd	r8, lr, [r1, #44]	@ 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005102:	b1a7      	cbz	r7, 800512e <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005104:	433b      	orrs	r3, r7
 8005106:	68c8      	ldr	r0, [r1, #12]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005108:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800510c:	ea43 0308 	orr.w	r3, r3, r8
 8005110:	ea43 030e 	orr.w	r3, r3, lr
 8005114:	ea43 030c 	orr.w	r3, r3, ip
 8005118:	ea43 0300 	orr.w	r3, r3, r0
 800511c:	ea43 0306 	orr.w	r3, r3, r6
 8005120:	ea43 0305 	orr.w	r3, r3, r5
 8005124:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005126:	d0b7      	beq.n	8005098 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005128:	684b      	ldr	r3, [r1, #4]
 800512a:	61a3      	str	r3, [r4, #24]
 800512c:	e7b4      	b.n	8005098 <QSPI_Config+0x74>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800512e:	ea43 0308 	orr.w	r3, r3, r8
 8005132:	ea43 030e 	orr.w	r3, r3, lr
 8005136:	ea43 030c 	orr.w	r3, r3, ip
 800513a:	4333      	orrs	r3, r6
 800513c:	432b      	orrs	r3, r5
 800513e:	6163      	str	r3, [r4, #20]
 8005140:	e7aa      	b.n	8005098 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005142:	b1d7      	cbz	r7, 800517a <QSPI_Config+0x156>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005144:	ea46 0307 	orr.w	r3, r6, r7
 8005148:	6acc      	ldr	r4, [r1, #44]	@ 0x2c
 800514a:	6800      	ldr	r0, [r0, #0]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800514c:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005150:	ea43 0302 	orr.w	r3, r3, r2
 8005154:	ea43 0304 	orr.w	r3, r3, r4
 8005158:	6b0c      	ldr	r4, [r1, #48]	@ 0x30
 800515a:	ea43 0304 	orr.w	r3, r3, r4
 800515e:	6b4c      	ldr	r4, [r1, #52]	@ 0x34
 8005160:	ea43 0304 	orr.w	r3, r3, r4
 8005164:	68cc      	ldr	r4, [r1, #12]
 8005166:	ea43 0304 	orr.w	r3, r3, r4
 800516a:	694c      	ldr	r4, [r1, #20]
 800516c:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8005170:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005172:	d091      	beq.n	8005098 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005174:	684b      	ldr	r3, [r1, #4]
 8005176:	6183      	str	r3, [r0, #24]
 8005178:	e78e      	b.n	8005098 <QSPI_Config+0x74>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800517a:	2e00      	cmp	r6, #0
 800517c:	d08c      	beq.n	8005098 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800517e:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 8005180:	6800      	ldr	r0, [r0, #0]
 8005182:	4333      	orrs	r3, r6
 8005184:	4313      	orrs	r3, r2
 8005186:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 8005188:	4313      	orrs	r3, r2
 800518a:	6b4a      	ldr	r2, [r1, #52]	@ 0x34
 800518c:	4313      	orrs	r3, r2
 800518e:	694a      	ldr	r2, [r1, #20]
 8005190:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8005194:	6143      	str	r3, [r0, #20]
}
 8005196:	e77f      	b.n	8005098 <QSPI_Config+0x74>

08005198 <QSPI_WaitFlagStateUntilTimeout>:
{
 8005198:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800519c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80051a0:	4604      	mov	r4, r0
 80051a2:	460e      	mov	r6, r1
 80051a4:	4615      	mov	r5, r2
 80051a6:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 80051a8:	6822      	ldr	r2, [r4, #0]
 80051aa:	6893      	ldr	r3, [r2, #8]
 80051ac:	4233      	tst	r3, r6
 80051ae:	bf14      	ite	ne
 80051b0:	2301      	movne	r3, #1
 80051b2:	2300      	moveq	r3, #0
 80051b4:	42ab      	cmp	r3, r5
 80051b6:	d101      	bne.n	80051bc <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 80051b8:	2000      	movs	r0, #0
 80051ba:	e012      	b.n	80051e2 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 80051bc:	f1b8 3fff 	cmp.w	r8, #4294967295
 80051c0:	d0f3      	beq.n	80051aa <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80051c2:	f7fe fdcf 	bl	8003d64 <HAL_GetTick>
 80051c6:	1bc0      	subs	r0, r0, r7
 80051c8:	4540      	cmp	r0, r8
 80051ca:	d802      	bhi.n	80051d2 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 80051cc:	f1b8 0f00 	cmp.w	r8, #0
 80051d0:	d1ea      	bne.n	80051a8 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 80051d2:	2304      	movs	r3, #4
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 80051d4:	2001      	movs	r0, #1
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 80051d6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 80051da:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80051dc:	f043 0301 	orr.w	r3, r3, #1
 80051e0:	6463      	str	r3, [r4, #68]	@ 0x44
}
 80051e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080051e8 <HAL_QSPI_Init>:
{
 80051e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80051ea:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80051ec:	f7fe fdba 	bl	8003d64 <HAL_GetTick>
 80051f0:	4605      	mov	r5, r0
  if(hqspi == NULL)
 80051f2:	2c00      	cmp	r4, #0
 80051f4:	d046      	beq.n	8005284 <HAL_QSPI_Init+0x9c>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 80051f6:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 80051fa:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80051fe:	b93b      	cbnz	r3, 8005210 <HAL_QSPI_Init+0x28>
    HAL_QSPI_MspInit(hqspi);
 8005200:	4620      	mov	r0, r4
    hqspi->Lock = HAL_UNLOCKED;
 8005202:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    HAL_QSPI_MspInit(hqspi);
 8005206:	f7fb fedf 	bl	8000fc8 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800520a:	f241 3388 	movw	r3, #5000	@ 0x1388
 800520e:	64a3      	str	r3, [r4, #72]	@ 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005210:	6821      	ldr	r1, [r4, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005212:	4620      	mov	r0, r4
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005214:	68a3      	ldr	r3, [r4, #8]
 8005216:	680a      	ldr	r2, [r1, #0]
 8005218:	3b01      	subs	r3, #1
 800521a:	f422 52f8 	bic.w	r2, r2, #7936	@ 0x1f00
 800521e:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005222:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005224:	600a      	str	r2, [r1, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005226:	2200      	movs	r2, #0
 8005228:	9300      	str	r3, [sp, #0]
 800522a:	2120      	movs	r1, #32
 800522c:	462b      	mov	r3, r5
 800522e:	f7ff ffb3 	bl	8005198 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8005232:	bb10      	cbnz	r0, 800527a <HAL_QSPI_Init+0x92>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8005234:	6822      	ldr	r2, [r4, #0]
 8005236:	69e5      	ldr	r5, [r4, #28]
 8005238:	68e3      	ldr	r3, [r4, #12]
 800523a:	6811      	ldr	r1, [r2, #0]
 800523c:	432b      	orrs	r3, r5
 800523e:	6a25      	ldr	r5, [r4, #32]
 8005240:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8005244:	432b      	orrs	r3, r5
 8005246:	6865      	ldr	r5, [r4, #4]
 8005248:	f021 01d0 	bic.w	r1, r1, #208	@ 0xd0
 800524c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8005250:	430b      	orrs	r3, r1
 8005252:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8005254:	6855      	ldr	r5, [r2, #4]
 8005256:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800525a:	430b      	orrs	r3, r1
 800525c:	6921      	ldr	r1, [r4, #16]
 800525e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005262:	4909      	ldr	r1, [pc, #36]	@ (8005288 <HAL_QSPI_Init+0xa0>)
 8005264:	4029      	ands	r1, r5
 8005266:	430b      	orrs	r3, r1
 8005268:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800526a:	6813      	ldr	r3, [r2, #0]
 800526c:	f043 0301 	orr.w	r3, r3, #1
 8005270:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8005272:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005274:	6460      	str	r0, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8005276:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 800527a:	2300      	movs	r3, #0
 800527c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005280:	b003      	add	sp, #12
 8005282:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8005284:	2001      	movs	r0, #1
 8005286:	e7fb      	b.n	8005280 <HAL_QSPI_Init+0x98>
 8005288:	ffe0f8fe 	.word	0xffe0f8fe

0800528c <HAL_QSPI_DeInit>:
{
 800528c:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800528e:	4604      	mov	r4, r0
 8005290:	b168      	cbz	r0, 80052ae <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8005292:	6802      	ldr	r2, [r0, #0]
 8005294:	6813      	ldr	r3, [r2, #0]
 8005296:	f023 0301 	bic.w	r3, r3, #1
 800529a:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800529c:	f7fb ff02 	bl	80010a4 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80052a0:	2000      	movs	r0, #0
 80052a2:	6460      	str	r0, [r4, #68]	@ 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 80052a4:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 80052a8:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
}
 80052ac:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80052ae:	2001      	movs	r0, #1
 80052b0:	e7fc      	b.n	80052ac <HAL_QSPI_DeInit+0x20>

080052b2 <HAL_QSPI_Command>:
{
 80052b2:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80052b6:	4604      	mov	r4, r0
 80052b8:	468a      	mov	sl, r1
 80052ba:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80052bc:	f7fe fd52 	bl	8003d64 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80052c0:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 80052c4:	4607      	mov	r7, r0
  __HAL_LOCK(hqspi);
 80052c6:	2b01      	cmp	r3, #1
 80052c8:	d036      	beq.n	8005338 <HAL_QSPI_Command+0x86>
 80052ca:	2301      	movs	r3, #1
 80052cc:	2602      	movs	r6, #2
 80052ce:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80052d2:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 80052d6:	2b01      	cmp	r3, #1
 80052d8:	fa5f f983 	uxtb.w	r9, r3
 80052dc:	d128      	bne.n	8005330 <HAL_QSPI_Command+0x7e>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80052de:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80052e0:	4603      	mov	r3, r0
 80052e2:	2120      	movs	r1, #32
 80052e4:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80052e6:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY;
 80052e8:	f884 6041 	strb.w	r6, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80052ec:	f8cd 8000 	str.w	r8, [sp]
 80052f0:	f7ff ff52 	bl	8005198 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80052f4:	4605      	mov	r5, r0
 80052f6:	b9a0      	cbnz	r0, 8005322 <HAL_QSPI_Command+0x70>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80052f8:	4602      	mov	r2, r0
 80052fa:	4651      	mov	r1, sl
 80052fc:	4620      	mov	r0, r4
 80052fe:	f7ff fe91 	bl	8005024 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8005302:	f8da 3024 	ldr.w	r3, [sl, #36]	@ 0x24
 8005306:	b953      	cbnz	r3, 800531e <HAL_QSPI_Command+0x6c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005308:	463b      	mov	r3, r7
 800530a:	464a      	mov	r2, r9
 800530c:	4631      	mov	r1, r6
 800530e:	4620      	mov	r0, r4
 8005310:	f8cd 8000 	str.w	r8, [sp]
 8005314:	f7ff ff40 	bl	8005198 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005318:	b960      	cbnz	r0, 8005334 <HAL_QSPI_Command+0x82>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800531a:	6823      	ldr	r3, [r4, #0]
 800531c:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800531e:	f884 9041 	strb.w	r9, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005322:	2300      	movs	r3, #0
 8005324:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005328:	4628      	mov	r0, r5
 800532a:	b002      	add	sp, #8
 800532c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    status = HAL_BUSY;
 8005330:	4635      	mov	r5, r6
 8005332:	e7f6      	b.n	8005322 <HAL_QSPI_Command+0x70>
 8005334:	4605      	mov	r5, r0
 8005336:	e7f4      	b.n	8005322 <HAL_QSPI_Command+0x70>
  __HAL_LOCK(hqspi);
 8005338:	2502      	movs	r5, #2
 800533a:	e7f5      	b.n	8005328 <HAL_QSPI_Command+0x76>

0800533c <HAL_QSPI_AutoPolling>:
{
 800533c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005340:	4604      	mov	r4, r0
 8005342:	461f      	mov	r7, r3
 8005344:	4689      	mov	r9, r1
 8005346:	4615      	mov	r5, r2
  uint32_t tickstart = HAL_GetTick();
 8005348:	f7fe fd0c 	bl	8003d64 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800534c:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 8005350:	4606      	mov	r6, r0
  __HAL_LOCK(hqspi);
 8005352:	2b01      	cmp	r3, #1
 8005354:	d041      	beq.n	80053da <HAL_QSPI_AutoPolling+0x9e>
 8005356:	2301      	movs	r3, #1
 8005358:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800535c:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8005360:	2b01      	cmp	r3, #1
 8005362:	fa5f f883 	uxtb.w	r8, r3
 8005366:	d136      	bne.n	80053d6 <HAL_QSPI_AutoPolling+0x9a>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005368:	2342      	movs	r3, #66	@ 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800536a:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800536c:	2120      	movs	r1, #32
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800536e:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005370:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005374:	4603      	mov	r3, r0
 8005376:	9700      	str	r7, [sp, #0]
 8005378:	4620      	mov	r0, r4
 800537a:	f7ff ff0d 	bl	8005198 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800537e:	bb20      	cbnz	r0, 80053ca <HAL_QSPI_AutoPolling+0x8e>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005380:	6822      	ldr	r2, [r4, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005382:	4620      	mov	r0, r4
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005384:	682b      	ldr	r3, [r5, #0]
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8005386:	6929      	ldr	r1, [r5, #16]
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005388:	6293      	str	r3, [r2, #40]	@ 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800538a:	686b      	ldr	r3, [r5, #4]
 800538c:	6253      	str	r3, [r2, #36]	@ 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800538e:	68ab      	ldr	r3, [r5, #8]
 8005390:	62d3      	str	r3, [r2, #44]	@ 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8005392:	6813      	ldr	r3, [r2, #0]
 8005394:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8005398:	430b      	orrs	r3, r1
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800539a:	4649      	mov	r1, r9
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800539c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80053a0:	6013      	str	r3, [r2, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 80053a2:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
      cmd->NbData = cfg->StatusBytesSize;
 80053a6:	68eb      	ldr	r3, [r5, #12]
 80053a8:	f8c9 3028 	str.w	r3, [r9, #40]	@ 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 80053ac:	f7ff fe3a 	bl	8005024 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 80053b0:	4633      	mov	r3, r6
 80053b2:	4642      	mov	r2, r8
 80053b4:	2108      	movs	r1, #8
 80053b6:	4620      	mov	r0, r4
 80053b8:	9700      	str	r7, [sp, #0]
 80053ba:	f7ff feed 	bl	8005198 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80053be:	b920      	cbnz	r0, 80053ca <HAL_QSPI_AutoPolling+0x8e>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 80053c0:	6823      	ldr	r3, [r4, #0]
 80053c2:	2208      	movs	r2, #8
 80053c4:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80053c6:	f884 8041 	strb.w	r8, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 80053ca:	2300      	movs	r3, #0
 80053cc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 80053d0:	b003      	add	sp, #12
 80053d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 80053d6:	2002      	movs	r0, #2
 80053d8:	e7f7      	b.n	80053ca <HAL_QSPI_AutoPolling+0x8e>
  __HAL_LOCK(hqspi);
 80053da:	2002      	movs	r0, #2
 80053dc:	e7f8      	b.n	80053d0 <HAL_QSPI_AutoPolling+0x94>

080053de <HAL_QSPI_MemoryMapped>:
{
 80053de:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80053e0:	4604      	mov	r4, r0
 80053e2:	4616      	mov	r6, r2
 80053e4:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80053e6:	f7fe fcbd 	bl	8003d64 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80053ea:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 80053ee:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80053f0:	2a01      	cmp	r2, #1
 80053f2:	d033      	beq.n	800545c <HAL_QSPI_MemoryMapped+0x7e>
 80053f4:	2201      	movs	r2, #1
 80053f6:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80053fa:	f894 2041 	ldrb.w	r2, [r4, #65]	@ 0x41
 80053fe:	2a01      	cmp	r2, #1
 8005400:	d12a      	bne.n	8005458 <HAL_QSPI_MemoryMapped+0x7a>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005402:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005404:	2182      	movs	r1, #130	@ 0x82
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005406:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005408:	6462      	str	r2, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800540a:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800540e:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8005410:	9100      	str	r1, [sp, #0]
 8005412:	2120      	movs	r1, #32
 8005414:	f7ff fec0 	bl	8005198 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005418:	4605      	mov	r5, r0
 800541a:	b9b8      	cbnz	r0, 800544c <HAL_QSPI_MemoryMapped+0x6e>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800541c:	6823      	ldr	r3, [r4, #0]
 800541e:	6872      	ldr	r2, [r6, #4]
 8005420:	6818      	ldr	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005422:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005424:	f020 0008 	bic.w	r0, r0, #8
 8005428:	ea40 0002 	orr.w	r0, r0, r2
 800542c:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800542e:	d107      	bne.n	8005440 <HAL_QSPI_MemoryMapped+0x62>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8005430:	6832      	ldr	r2, [r6, #0]
 8005432:	631a      	str	r2, [r3, #48]	@ 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8005434:	2210      	movs	r2, #16
 8005436:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8005438:	681a      	ldr	r2, [r3, #0]
 800543a:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 800543e:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8005440:	f04f 6240 	mov.w	r2, #201326592	@ 0xc000000
 8005444:	4639      	mov	r1, r7
 8005446:	4620      	mov	r0, r4
 8005448:	f7ff fdec 	bl	8005024 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800544c:	2300      	movs	r3, #0
 800544e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005452:	4628      	mov	r0, r5
 8005454:	b003      	add	sp, #12
 8005456:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8005458:	2502      	movs	r5, #2
 800545a:	e7f7      	b.n	800544c <HAL_QSPI_MemoryMapped+0x6e>
  __HAL_LOCK(hqspi);
 800545c:	2502      	movs	r5, #2
 800545e:	e7f8      	b.n	8005452 <HAL_QSPI_MemoryMapped+0x74>

08005460 <HAL_QSPI_Abort>:
{
 8005460:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005462:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005464:	f7fe fc7e 	bl	8003d64 <HAL_GetTick>
 8005468:	4605      	mov	r5, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800546a:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 800546e:	0798      	lsls	r0, r3, #30
 8005470:	d534      	bpl.n	80054dc <HAL_QSPI_Abort+0x7c>
    __HAL_UNLOCK(hqspi);
 8005472:	2300      	movs	r3, #0
 8005474:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8005478:	6823      	ldr	r3, [r4, #0]
 800547a:	681a      	ldr	r2, [r3, #0]
 800547c:	0751      	lsls	r1, r2, #29
 800547e:	d507      	bpl.n	8005490 <HAL_QSPI_Abort+0x30>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005480:	681a      	ldr	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005482:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005484:	f022 0204 	bic.w	r2, r2, #4
 8005488:	601a      	str	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800548a:	f7fe fd90 	bl	8003fae <HAL_DMA_Abort>
      if(status != HAL_OK)
 800548e:	bb40      	cbnz	r0, 80054e2 <HAL_QSPI_Abort+0x82>
  HAL_StatusTypeDef status = HAL_OK;
 8005490:	2000      	movs	r0, #0
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 8005492:	6823      	ldr	r3, [r4, #0]
 8005494:	689a      	ldr	r2, [r3, #8]
 8005496:	0692      	lsls	r2, r2, #26
 8005498:	d528      	bpl.n	80054ec <HAL_QSPI_Abort+0x8c>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800549a:	681a      	ldr	r2, [r3, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800549c:	2102      	movs	r1, #2
 800549e:	4620      	mov	r0, r4
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 80054a0:	f042 0202 	orr.w	r2, r2, #2
 80054a4:	601a      	str	r2, [r3, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 80054a6:	2201      	movs	r2, #1
 80054a8:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80054aa:	9300      	str	r3, [sp, #0]
 80054ac:	462b      	mov	r3, r5
 80054ae:	f7ff fe73 	bl	8005198 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80054b2:	b9a0      	cbnz	r0, 80054de <HAL_QSPI_Abort+0x7e>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80054b4:	6823      	ldr	r3, [r4, #0]
 80054b6:	2202      	movs	r2, #2
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80054b8:	2120      	movs	r1, #32
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80054ba:	60da      	str	r2, [r3, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80054bc:	4602      	mov	r2, r0
 80054be:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80054c0:	4620      	mov	r0, r4
 80054c2:	9300      	str	r3, [sp, #0]
 80054c4:	462b      	mov	r3, r5
 80054c6:	f7ff fe67 	bl	8005198 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80054ca:	b940      	cbnz	r0, 80054de <HAL_QSPI_Abort+0x7e>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 80054cc:	6822      	ldr	r2, [r4, #0]
 80054ce:	6953      	ldr	r3, [r2, #20]
 80054d0:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 80054d4:	6153      	str	r3, [r2, #20]
        hqspi->State = HAL_QSPI_STATE_READY;
 80054d6:	2301      	movs	r3, #1
 80054d8:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  HAL_StatusTypeDef status = HAL_OK;
 80054dc:	2000      	movs	r0, #0
}
 80054de:	b003      	add	sp, #12
 80054e0:	bd30      	pop	{r4, r5, pc}
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 80054e2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80054e4:	f043 0304 	orr.w	r3, r3, #4
 80054e8:	6463      	str	r3, [r4, #68]	@ 0x44
 80054ea:	e7d2      	b.n	8005492 <HAL_QSPI_Abort+0x32>
      hqspi->State = HAL_QSPI_STATE_READY;
 80054ec:	2301      	movs	r3, #1
 80054ee:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 80054f2:	e7f4      	b.n	80054de <HAL_QSPI_Abort+0x7e>

080054f4 <HAL_QSPI_Transmit>:
{
 80054f4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80054f8:	4604      	mov	r4, r0
 80054fa:	4688      	mov	r8, r1
 80054fc:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 80054fe:	f7fe fc31 	bl	8003d64 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005502:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  uint32_t tickstart = HAL_GetTick();
 8005506:	4606      	mov	r6, r0
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8005508:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 800550a:	2b01      	cmp	r3, #1
 800550c:	d04f      	beq.n	80055ae <HAL_QSPI_Transmit+0xba>
 800550e:	2301      	movs	r3, #1
 8005510:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005514:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 8005518:	2b01      	cmp	r3, #1
 800551a:	b2d8      	uxtb	r0, r3
 800551c:	d145      	bne.n	80055aa <HAL_QSPI_Transmit+0xb6>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800551e:	2300      	movs	r3, #0
 8005520:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 8005522:	f1b8 0f00 	cmp.w	r8, #0
 8005526:	d03b      	beq.n	80055a0 <HAL_QSPI_Transmit+0xac>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8005528:	2312      	movs	r3, #18
 800552a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800552e:	692b      	ldr	r3, [r5, #16]
 8005530:	3301      	adds	r3, #1
 8005532:	62e3      	str	r3, [r4, #44]	@ 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005534:	692b      	ldr	r3, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8005536:	f8c4 8024 	str.w	r8, [r4, #36]	@ 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800553a:	3301      	adds	r3, #1
 800553c:	62a3      	str	r3, [r4, #40]	@ 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800553e:	696b      	ldr	r3, [r5, #20]
 8005540:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8005544:	616b      	str	r3, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8005546:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8005548:	b9b3      	cbnz	r3, 8005578 <HAL_QSPI_Transmit+0x84>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800554a:	4633      	mov	r3, r6
 800554c:	2201      	movs	r2, #1
 800554e:	2102      	movs	r1, #2
 8005550:	4620      	mov	r0, r4
 8005552:	9700      	str	r7, [sp, #0]
 8005554:	f7ff fe20 	bl	8005198 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005558:	b928      	cbnz	r0, 8005566 <HAL_QSPI_Transmit+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800555a:	6823      	ldr	r3, [r4, #0]
 800555c:	2202      	movs	r2, #2
          status = HAL_QSPI_Abort(hqspi);
 800555e:	4620      	mov	r0, r4
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005560:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005562:	f7ff ff7d 	bl	8005460 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005566:	2301      	movs	r3, #1
 8005568:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 800556c:	2300      	movs	r3, #0
 800556e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005572:	b002      	add	sp, #8
 8005574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8005578:	4633      	mov	r3, r6
 800557a:	2201      	movs	r2, #1
 800557c:	2104      	movs	r1, #4
 800557e:	4620      	mov	r0, r4
 8005580:	9700      	str	r7, [sp, #0]
 8005582:	f7ff fe09 	bl	8005198 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8005586:	2800      	cmp	r0, #0
 8005588:	d1ed      	bne.n	8005566 <HAL_QSPI_Transmit+0x72>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800558a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800558c:	781b      	ldrb	r3, [r3, #0]
 800558e:	f885 3020 	strb.w	r3, [r5, #32]
        hqspi->pTxBuffPtr++;
 8005592:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005594:	3301      	adds	r3, #1
 8005596:	6263      	str	r3, [r4, #36]	@ 0x24
        hqspi->TxXferCount--;
 8005598:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800559a:	3b01      	subs	r3, #1
 800559c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800559e:	e7d2      	b.n	8005546 <HAL_QSPI_Transmit+0x52>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 80055a0:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80055a2:	f043 0308 	orr.w	r3, r3, #8
 80055a6:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 80055a8:	e7e0      	b.n	800556c <HAL_QSPI_Transmit+0x78>
    status = HAL_BUSY;
 80055aa:	2002      	movs	r0, #2
 80055ac:	e7de      	b.n	800556c <HAL_QSPI_Transmit+0x78>
  __HAL_LOCK(hqspi);
 80055ae:	2002      	movs	r0, #2
 80055b0:	e7df      	b.n	8005572 <HAL_QSPI_Transmit+0x7e>

080055b2 <HAL_QSPI_Receive>:
{
 80055b2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80055b6:	4604      	mov	r4, r0
 80055b8:	4616      	mov	r6, r2
 80055ba:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 80055bc:	f7fe fbd2 	bl	8003d64 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 80055c0:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 80055c2:	4607      	mov	r7, r0
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 80055c4:	69aa      	ldr	r2, [r5, #24]
  __HAL_LOCK(hqspi);
 80055c6:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 80055ca:	2b01      	cmp	r3, #1
 80055cc:	d052      	beq.n	8005674 <HAL_QSPI_Receive+0xc2>
 80055ce:	2301      	movs	r3, #1
 80055d0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80055d4:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 80055d8:	2b01      	cmp	r3, #1
 80055da:	b2d8      	uxtb	r0, r3
 80055dc:	d148      	bne.n	8005670 <HAL_QSPI_Receive+0xbe>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80055de:	2300      	movs	r3, #0
 80055e0:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 80055e2:	f1b8 0f00 	cmp.w	r8, #0
 80055e6:	d03e      	beq.n	8005666 <HAL_QSPI_Receive+0xb4>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 80055e8:	2322      	movs	r3, #34	@ 0x22
 80055ea:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80055ee:	692b      	ldr	r3, [r5, #16]
 80055f0:	3301      	adds	r3, #1
 80055f2:	63a3      	str	r3, [r4, #56]	@ 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80055f4:	692b      	ldr	r3, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 80055f6:	f8c4 8030 	str.w	r8, [r4, #48]	@ 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80055fa:	3301      	adds	r3, #1
 80055fc:	6363      	str	r3, [r4, #52]	@ 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80055fe:	6969      	ldr	r1, [r5, #20]
 8005600:	f021 6140 	bic.w	r1, r1, #201326592	@ 0xc000000
 8005604:	f041 6180 	orr.w	r1, r1, #67108864	@ 0x4000000
 8005608:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800560a:	61aa      	str	r2, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 800560c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800560e:	b9b3      	cbnz	r3, 800563e <HAL_QSPI_Receive+0x8c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005610:	463b      	mov	r3, r7
 8005612:	2201      	movs	r2, #1
 8005614:	2102      	movs	r1, #2
 8005616:	4620      	mov	r0, r4
 8005618:	9600      	str	r6, [sp, #0]
 800561a:	f7ff fdbd 	bl	8005198 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 800561e:	b928      	cbnz	r0, 800562c <HAL_QSPI_Receive+0x7a>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005620:	6823      	ldr	r3, [r4, #0]
 8005622:	2202      	movs	r2, #2
          status = HAL_QSPI_Abort(hqspi);
 8005624:	4620      	mov	r0, r4
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005626:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005628:	f7ff ff1a 	bl	8005460 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800562c:	2301      	movs	r3, #1
 800562e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 8005632:	2300      	movs	r3, #0
 8005634:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 8005638:	b002      	add	sp, #8
 800563a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 800563e:	463b      	mov	r3, r7
 8005640:	2201      	movs	r2, #1
 8005642:	2106      	movs	r1, #6
 8005644:	4620      	mov	r0, r4
 8005646:	9600      	str	r6, [sp, #0]
 8005648:	f7ff fda6 	bl	8005198 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 800564c:	2800      	cmp	r0, #0
 800564e:	d1ed      	bne.n	800562c <HAL_QSPI_Receive+0x7a>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8005650:	f895 2020 	ldrb.w	r2, [r5, #32]
 8005654:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005656:	701a      	strb	r2, [r3, #0]
        hqspi->pRxBuffPtr++;
 8005658:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800565a:	3301      	adds	r3, #1
 800565c:	6323      	str	r3, [r4, #48]	@ 0x30
        hqspi->RxXferCount--;
 800565e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005660:	3b01      	subs	r3, #1
 8005662:	63a3      	str	r3, [r4, #56]	@ 0x38
 8005664:	e7d2      	b.n	800560c <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005666:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8005668:	f043 0308 	orr.w	r3, r3, #8
 800566c:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 800566e:	e7e0      	b.n	8005632 <HAL_QSPI_Receive+0x80>
    status = HAL_BUSY;
 8005670:	2002      	movs	r0, #2
 8005672:	e7de      	b.n	8005632 <HAL_QSPI_Receive+0x80>
  __HAL_LOCK(hqspi);
 8005674:	2002      	movs	r0, #2
 8005676:	e7df      	b.n	8005638 <HAL_QSPI_Receive+0x86>

08005678 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005678:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800567c:	4604      	mov	r4, r0
 800567e:	b340      	cbz	r0, 80056d2 <HAL_RCC_OscConfig+0x5a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005680:	6803      	ldr	r3, [r0, #0]
 8005682:	07de      	lsls	r6, r3, #31
 8005684:	d410      	bmi.n	80056a8 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005686:	6823      	ldr	r3, [r4, #0]
 8005688:	079d      	lsls	r5, r3, #30
 800568a:	d461      	bmi.n	8005750 <HAL_RCC_OscConfig+0xd8>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800568c:	6823      	ldr	r3, [r4, #0]
 800568e:	0719      	lsls	r1, r3, #28
 8005690:	f100 80a6 	bmi.w	80057e0 <HAL_RCC_OscConfig+0x168>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005694:	6823      	ldr	r3, [r4, #0]
 8005696:	075a      	lsls	r2, r3, #29
 8005698:	f100 80c7 	bmi.w	800582a <HAL_RCC_OscConfig+0x1b2>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800569c:	69a2      	ldr	r2, [r4, #24]
 800569e:	2a00      	cmp	r2, #0
 80056a0:	f040 8130 	bne.w	8005904 <HAL_RCC_OscConfig+0x28c>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
 80056a4:	2000      	movs	r0, #0
 80056a6:	e02c      	b.n	8005702 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 80056a8:	4b94      	ldr	r3, [pc, #592]	@ (80058fc <HAL_RCC_OscConfig+0x284>)
 80056aa:	689a      	ldr	r2, [r3, #8]
 80056ac:	f002 020c 	and.w	r2, r2, #12
 80056b0:	2a04      	cmp	r2, #4
 80056b2:	d007      	beq.n	80056c4 <HAL_RCC_OscConfig+0x4c>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80056b4:	689a      	ldr	r2, [r3, #8]
 80056b6:	f002 020c 	and.w	r2, r2, #12
 80056ba:	2a08      	cmp	r2, #8
 80056bc:	d10b      	bne.n	80056d6 <HAL_RCC_OscConfig+0x5e>
 80056be:	685b      	ldr	r3, [r3, #4]
 80056c0:	0259      	lsls	r1, r3, #9
 80056c2:	d508      	bpl.n	80056d6 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80056c4:	4b8d      	ldr	r3, [pc, #564]	@ (80058fc <HAL_RCC_OscConfig+0x284>)
 80056c6:	681b      	ldr	r3, [r3, #0]
 80056c8:	039a      	lsls	r2, r3, #14
 80056ca:	d5dc      	bpl.n	8005686 <HAL_RCC_OscConfig+0xe>
 80056cc:	6863      	ldr	r3, [r4, #4]
 80056ce:	2b00      	cmp	r3, #0
 80056d0:	d1d9      	bne.n	8005686 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 80056d2:	2001      	movs	r0, #1
 80056d4:	e015      	b.n	8005702 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80056d6:	6863      	ldr	r3, [r4, #4]
 80056d8:	4d88      	ldr	r5, [pc, #544]	@ (80058fc <HAL_RCC_OscConfig+0x284>)
 80056da:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80056de:	d113      	bne.n	8005708 <HAL_RCC_OscConfig+0x90>
 80056e0:	682b      	ldr	r3, [r5, #0]
 80056e2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80056e6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80056e8:	f7fe fb3c 	bl	8003d64 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80056ec:	4e83      	ldr	r6, [pc, #524]	@ (80058fc <HAL_RCC_OscConfig+0x284>)
        tickstart = HAL_GetTick();
 80056ee:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80056f0:	6833      	ldr	r3, [r6, #0]
 80056f2:	039b      	lsls	r3, r3, #14
 80056f4:	d4c7      	bmi.n	8005686 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80056f6:	f7fe fb35 	bl	8003d64 <HAL_GetTick>
 80056fa:	1b40      	subs	r0, r0, r5
 80056fc:	2864      	cmp	r0, #100	@ 0x64
 80056fe:	d9f7      	bls.n	80056f0 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8005700:	2003      	movs	r0, #3
}
 8005702:	b002      	add	sp, #8
 8005704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005708:	b99b      	cbnz	r3, 8005732 <HAL_RCC_OscConfig+0xba>
 800570a:	682b      	ldr	r3, [r5, #0]
 800570c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005710:	602b      	str	r3, [r5, #0]
 8005712:	682b      	ldr	r3, [r5, #0]
 8005714:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005718:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800571a:	f7fe fb23 	bl	8003d64 <HAL_GetTick>
 800571e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005720:	682b      	ldr	r3, [r5, #0]
 8005722:	039f      	lsls	r7, r3, #14
 8005724:	d5af      	bpl.n	8005686 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005726:	f7fe fb1d 	bl	8003d64 <HAL_GetTick>
 800572a:	1b80      	subs	r0, r0, r6
 800572c:	2864      	cmp	r0, #100	@ 0x64
 800572e:	d9f7      	bls.n	8005720 <HAL_RCC_OscConfig+0xa8>
 8005730:	e7e6      	b.n	8005700 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005732:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005736:	682b      	ldr	r3, [r5, #0]
 8005738:	d103      	bne.n	8005742 <HAL_RCC_OscConfig+0xca>
 800573a:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800573e:	602b      	str	r3, [r5, #0]
 8005740:	e7ce      	b.n	80056e0 <HAL_RCC_OscConfig+0x68>
 8005742:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005746:	602b      	str	r3, [r5, #0]
 8005748:	682b      	ldr	r3, [r5, #0]
 800574a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800574e:	e7ca      	b.n	80056e6 <HAL_RCC_OscConfig+0x6e>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8005750:	4b6a      	ldr	r3, [pc, #424]	@ (80058fc <HAL_RCC_OscConfig+0x284>)
 8005752:	689a      	ldr	r2, [r3, #8]
 8005754:	f012 0f0c 	tst.w	r2, #12
 8005758:	d007      	beq.n	800576a <HAL_RCC_OscConfig+0xf2>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800575a:	689a      	ldr	r2, [r3, #8]
 800575c:	f002 020c 	and.w	r2, r2, #12
 8005760:	2a08      	cmp	r2, #8
 8005762:	d111      	bne.n	8005788 <HAL_RCC_OscConfig+0x110>
 8005764:	685b      	ldr	r3, [r3, #4]
 8005766:	025d      	lsls	r5, r3, #9
 8005768:	d40e      	bmi.n	8005788 <HAL_RCC_OscConfig+0x110>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800576a:	4a64      	ldr	r2, [pc, #400]	@ (80058fc <HAL_RCC_OscConfig+0x284>)
 800576c:	6813      	ldr	r3, [r2, #0]
 800576e:	0799      	lsls	r1, r3, #30
 8005770:	d502      	bpl.n	8005778 <HAL_RCC_OscConfig+0x100>
 8005772:	68e3      	ldr	r3, [r4, #12]
 8005774:	2b01      	cmp	r3, #1
 8005776:	d1ac      	bne.n	80056d2 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005778:	6813      	ldr	r3, [r2, #0]
 800577a:	6921      	ldr	r1, [r4, #16]
 800577c:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005780:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005784:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005786:	e781      	b.n	800568c <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005788:	68e3      	ldr	r3, [r4, #12]
 800578a:	4d5c      	ldr	r5, [pc, #368]	@ (80058fc <HAL_RCC_OscConfig+0x284>)
 800578c:	b1bb      	cbz	r3, 80057be <HAL_RCC_OscConfig+0x146>
        __HAL_RCC_HSI_ENABLE();
 800578e:	682b      	ldr	r3, [r5, #0]
 8005790:	f043 0301 	orr.w	r3, r3, #1
 8005794:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005796:	f7fe fae5 	bl	8003d64 <HAL_GetTick>
 800579a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800579c:	682b      	ldr	r3, [r5, #0]
 800579e:	079b      	lsls	r3, r3, #30
 80057a0:	d507      	bpl.n	80057b2 <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80057a2:	682b      	ldr	r3, [r5, #0]
 80057a4:	6922      	ldr	r2, [r4, #16]
 80057a6:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80057aa:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80057ae:	602b      	str	r3, [r5, #0]
 80057b0:	e76c      	b.n	800568c <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80057b2:	f7fe fad7 	bl	8003d64 <HAL_GetTick>
 80057b6:	1b80      	subs	r0, r0, r6
 80057b8:	2802      	cmp	r0, #2
 80057ba:	d9ef      	bls.n	800579c <HAL_RCC_OscConfig+0x124>
 80057bc:	e7a0      	b.n	8005700 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 80057be:	682b      	ldr	r3, [r5, #0]
 80057c0:	f023 0301 	bic.w	r3, r3, #1
 80057c4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80057c6:	f7fe facd 	bl	8003d64 <HAL_GetTick>
 80057ca:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80057cc:	682b      	ldr	r3, [r5, #0]
 80057ce:	079f      	lsls	r7, r3, #30
 80057d0:	f57f af5c 	bpl.w	800568c <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80057d4:	f7fe fac6 	bl	8003d64 <HAL_GetTick>
 80057d8:	1b80      	subs	r0, r0, r6
 80057da:	2802      	cmp	r0, #2
 80057dc:	d9f6      	bls.n	80057cc <HAL_RCC_OscConfig+0x154>
 80057de:	e78f      	b.n	8005700 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80057e0:	6963      	ldr	r3, [r4, #20]
 80057e2:	4d46      	ldr	r5, [pc, #280]	@ (80058fc <HAL_RCC_OscConfig+0x284>)
 80057e4:	b183      	cbz	r3, 8005808 <HAL_RCC_OscConfig+0x190>
      __HAL_RCC_LSI_ENABLE();
 80057e6:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80057e8:	f043 0301 	orr.w	r3, r3, #1
 80057ec:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
 80057ee:	f7fe fab9 	bl	8003d64 <HAL_GetTick>
 80057f2:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80057f4:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 80057f6:	079b      	lsls	r3, r3, #30
 80057f8:	f53f af4c 	bmi.w	8005694 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80057fc:	f7fe fab2 	bl	8003d64 <HAL_GetTick>
 8005800:	1b80      	subs	r0, r0, r6
 8005802:	2802      	cmp	r0, #2
 8005804:	d9f6      	bls.n	80057f4 <HAL_RCC_OscConfig+0x17c>
 8005806:	e77b      	b.n	8005700 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8005808:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 800580a:	f023 0301 	bic.w	r3, r3, #1
 800580e:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
 8005810:	f7fe faa8 	bl	8003d64 <HAL_GetTick>
 8005814:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005816:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
 8005818:	079f      	lsls	r7, r3, #30
 800581a:	f57f af3b 	bpl.w	8005694 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800581e:	f7fe faa1 	bl	8003d64 <HAL_GetTick>
 8005822:	1b80      	subs	r0, r0, r6
 8005824:	2802      	cmp	r0, #2
 8005826:	d9f6      	bls.n	8005816 <HAL_RCC_OscConfig+0x19e>
 8005828:	e76a      	b.n	8005700 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800582a:	4b34      	ldr	r3, [pc, #208]	@ (80058fc <HAL_RCC_OscConfig+0x284>)
 800582c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800582e:	00d5      	lsls	r5, r2, #3
 8005830:	d427      	bmi.n	8005882 <HAL_RCC_OscConfig+0x20a>
      __HAL_RCC_PWR_CLK_ENABLE();
 8005832:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
      pwrclkchanged = SET;
 8005834:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8005836:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800583a:	641a      	str	r2, [r3, #64]	@ 0x40
 800583c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800583e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005842:	9301      	str	r3, [sp, #4]
 8005844:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8005846:	4d2e      	ldr	r5, [pc, #184]	@ (8005900 <HAL_RCC_OscConfig+0x288>)
 8005848:	682b      	ldr	r3, [r5, #0]
 800584a:	05d8      	lsls	r0, r3, #23
 800584c:	d51b      	bpl.n	8005886 <HAL_RCC_OscConfig+0x20e>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800584e:	68a3      	ldr	r3, [r4, #8]
 8005850:	4d2a      	ldr	r5, [pc, #168]	@ (80058fc <HAL_RCC_OscConfig+0x284>)
 8005852:	2b01      	cmp	r3, #1
 8005854:	d127      	bne.n	80058a6 <HAL_RCC_OscConfig+0x22e>
 8005856:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005858:	f043 0301 	orr.w	r3, r3, #1
 800585c:	672b      	str	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800585e:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8005862:	f7fe fa7f 	bl	8003d64 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005866:	4e25      	ldr	r6, [pc, #148]	@ (80058fc <HAL_RCC_OscConfig+0x284>)
      tickstart = HAL_GetTick();
 8005868:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800586a:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 800586c:	079a      	lsls	r2, r3, #30
 800586e:	d53f      	bpl.n	80058f0 <HAL_RCC_OscConfig+0x278>
    if (pwrclkchanged == SET)
 8005870:	2f00      	cmp	r7, #0
 8005872:	f43f af13 	beq.w	800569c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8005876:	4a21      	ldr	r2, [pc, #132]	@ (80058fc <HAL_RCC_OscConfig+0x284>)
 8005878:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800587a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800587e:	6413      	str	r3, [r2, #64]	@ 0x40
 8005880:	e70c      	b.n	800569c <HAL_RCC_OscConfig+0x24>
  FlagStatus pwrclkchanged = RESET;
 8005882:	2700      	movs	r7, #0
 8005884:	e7df      	b.n	8005846 <HAL_RCC_OscConfig+0x1ce>
      PWR->CR1 |= PWR_CR1_DBP;
 8005886:	682b      	ldr	r3, [r5, #0]
 8005888:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800588c:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800588e:	f7fe fa69 	bl	8003d64 <HAL_GetTick>
 8005892:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8005894:	682b      	ldr	r3, [r5, #0]
 8005896:	05d9      	lsls	r1, r3, #23
 8005898:	d4d9      	bmi.n	800584e <HAL_RCC_OscConfig+0x1d6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800589a:	f7fe fa63 	bl	8003d64 <HAL_GetTick>
 800589e:	1b80      	subs	r0, r0, r6
 80058a0:	2864      	cmp	r0, #100	@ 0x64
 80058a2:	d9f7      	bls.n	8005894 <HAL_RCC_OscConfig+0x21c>
 80058a4:	e72c      	b.n	8005700 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80058a6:	b9ab      	cbnz	r3, 80058d4 <HAL_RCC_OscConfig+0x25c>
 80058a8:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80058aa:	f241 3888 	movw	r8, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80058ae:	f023 0301 	bic.w	r3, r3, #1
 80058b2:	672b      	str	r3, [r5, #112]	@ 0x70
 80058b4:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80058b6:	f023 0304 	bic.w	r3, r3, #4
 80058ba:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 80058bc:	f7fe fa52 	bl	8003d64 <HAL_GetTick>
 80058c0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80058c2:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80058c4:	079b      	lsls	r3, r3, #30
 80058c6:	d5d3      	bpl.n	8005870 <HAL_RCC_OscConfig+0x1f8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80058c8:	f7fe fa4c 	bl	8003d64 <HAL_GetTick>
 80058cc:	1b80      	subs	r0, r0, r6
 80058ce:	4540      	cmp	r0, r8
 80058d0:	d9f7      	bls.n	80058c2 <HAL_RCC_OscConfig+0x24a>
 80058d2:	e715      	b.n	8005700 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80058d4:	2b05      	cmp	r3, #5
 80058d6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80058d8:	d103      	bne.n	80058e2 <HAL_RCC_OscConfig+0x26a>
 80058da:	f043 0304 	orr.w	r3, r3, #4
 80058de:	672b      	str	r3, [r5, #112]	@ 0x70
 80058e0:	e7b9      	b.n	8005856 <HAL_RCC_OscConfig+0x1de>
 80058e2:	f023 0301 	bic.w	r3, r3, #1
 80058e6:	672b      	str	r3, [r5, #112]	@ 0x70
 80058e8:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80058ea:	f023 0304 	bic.w	r3, r3, #4
 80058ee:	e7b5      	b.n	800585c <HAL_RCC_OscConfig+0x1e4>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80058f0:	f7fe fa38 	bl	8003d64 <HAL_GetTick>
 80058f4:	1b40      	subs	r0, r0, r5
 80058f6:	4540      	cmp	r0, r8
 80058f8:	d9b7      	bls.n	800586a <HAL_RCC_OscConfig+0x1f2>
 80058fa:	e701      	b.n	8005700 <HAL_RCC_OscConfig+0x88>
 80058fc:	40023800 	.word	0x40023800
 8005900:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8005904:	4d38      	ldr	r5, [pc, #224]	@ (80059e8 <HAL_RCC_OscConfig+0x370>)
 8005906:	68ab      	ldr	r3, [r5, #8]
 8005908:	f003 030c 	and.w	r3, r3, #12
 800590c:	2b08      	cmp	r3, #8
 800590e:	d041      	beq.n	8005994 <HAL_RCC_OscConfig+0x31c>
        __HAL_RCC_PLL_DISABLE();
 8005910:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005912:	2a02      	cmp	r2, #2
        __HAL_RCC_PLL_DISABLE();
 8005914:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8005918:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800591a:	d12e      	bne.n	800597a <HAL_RCC_OscConfig+0x302>
        tickstart = HAL_GetTick();
 800591c:	f7fe fa22 	bl	8003d64 <HAL_GetTick>
 8005920:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005922:	682b      	ldr	r3, [r5, #0]
 8005924:	0199      	lsls	r1, r3, #6
 8005926:	d422      	bmi.n	800596e <HAL_RCC_OscConfig+0x2f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8005928:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800592a:	085b      	lsrs	r3, r3, #1
 800592c:	1e5a      	subs	r2, r3, #1
 800592e:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 8005932:	430b      	orrs	r3, r1
 8005934:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005938:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800593a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800593e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005940:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8005944:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8005948:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800594a:	682b      	ldr	r3, [r5, #0]
 800594c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8005950:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005952:	f7fe fa07 	bl	8003d64 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005956:	4d24      	ldr	r5, [pc, #144]	@ (80059e8 <HAL_RCC_OscConfig+0x370>)
        tickstart = HAL_GetTick();
 8005958:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800595a:	682b      	ldr	r3, [r5, #0]
 800595c:	019a      	lsls	r2, r3, #6
 800595e:	f53f aea1 	bmi.w	80056a4 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005962:	f7fe f9ff 	bl	8003d64 <HAL_GetTick>
 8005966:	1b00      	subs	r0, r0, r4
 8005968:	2802      	cmp	r0, #2
 800596a:	d9f6      	bls.n	800595a <HAL_RCC_OscConfig+0x2e2>
 800596c:	e6c8      	b.n	8005700 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800596e:	f7fe f9f9 	bl	8003d64 <HAL_GetTick>
 8005972:	1b80      	subs	r0, r0, r6
 8005974:	2802      	cmp	r0, #2
 8005976:	d9d4      	bls.n	8005922 <HAL_RCC_OscConfig+0x2aa>
 8005978:	e6c2      	b.n	8005700 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 800597a:	f7fe f9f3 	bl	8003d64 <HAL_GetTick>
 800597e:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005980:	682b      	ldr	r3, [r5, #0]
 8005982:	019b      	lsls	r3, r3, #6
 8005984:	f57f ae8e 	bpl.w	80056a4 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005988:	f7fe f9ec 	bl	8003d64 <HAL_GetTick>
 800598c:	1b00      	subs	r0, r0, r4
 800598e:	2802      	cmp	r0, #2
 8005990:	d9f6      	bls.n	8005980 <HAL_RCC_OscConfig+0x308>
 8005992:	e6b5      	b.n	8005700 <HAL_RCC_OscConfig+0x88>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005994:	2a01      	cmp	r2, #1
      pll_config = RCC->PLLCFGR;
 8005996:	686b      	ldr	r3, [r5, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005998:	f43f ae9b 	beq.w	80056d2 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800599c:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80059a0:	69e1      	ldr	r1, [r4, #28]
 80059a2:	428a      	cmp	r2, r1
 80059a4:	f47f ae95 	bne.w	80056d2 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80059a8:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80059ac:	6a21      	ldr	r1, [r4, #32]
 80059ae:	428a      	cmp	r2, r1
 80059b0:	f47f ae8f 	bne.w	80056d2 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80059b4:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80059b8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80059ba:	401a      	ands	r2, r3
 80059bc:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 80059c0:	f47f ae87 	bne.w	80056d2 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80059c4:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80059c6:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 80059ca:	0852      	lsrs	r2, r2, #1
 80059cc:	3a01      	subs	r2, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80059ce:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80059d2:	f47f ae7e 	bne.w	80056d2 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80059d6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80059d8:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80059dc:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 80059e0:	bf14      	ite	ne
 80059e2:	2001      	movne	r0, #1
 80059e4:	2000      	moveq	r0, #0
 80059e6:	e68c      	b.n	8005702 <HAL_RCC_OscConfig+0x8a>
 80059e8:	40023800 	.word	0x40023800

080059ec <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80059ec:	4913      	ldr	r1, [pc, #76]	@ (8005a3c <HAL_RCC_GetSysClockFreq+0x50>)
{
 80059ee:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80059f0:	688b      	ldr	r3, [r1, #8]
 80059f2:	f003 030c 	and.w	r3, r3, #12
 80059f6:	2b04      	cmp	r3, #4
 80059f8:	d01b      	beq.n	8005a32 <HAL_RCC_GetSysClockFreq+0x46>
 80059fa:	2b08      	cmp	r3, #8
 80059fc:	d11b      	bne.n	8005a36 <HAL_RCC_GetSysClockFreq+0x4a>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80059fe:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8005a00:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005a02:	6849      	ldr	r1, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005a04:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8005a08:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005a0c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005a10:	bf1a      	itte	ne
 8005a12:	480b      	ldrne	r0, [pc, #44]	@ (8005a40 <HAL_RCC_GetSysClockFreq+0x54>)
 8005a14:	2300      	movne	r3, #0
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005a16:	480b      	ldreq	r0, [pc, #44]	@ (8005a44 <HAL_RCC_GetSysClockFreq+0x58>)
 8005a18:	fba1 0100 	umull	r0, r1, r1, r0
 8005a1c:	f7fa fc48 	bl	80002b0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8005a20:	4b06      	ldr	r3, [pc, #24]	@ (8005a3c <HAL_RCC_GetSysClockFreq+0x50>)
 8005a22:	685b      	ldr	r3, [r3, #4]
 8005a24:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005a28:	3301      	adds	r3, #1
 8005a2a:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8005a2c:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005a30:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005a32:	4803      	ldr	r0, [pc, #12]	@ (8005a40 <HAL_RCC_GetSysClockFreq+0x54>)
 8005a34:	e7fc      	b.n	8005a30 <HAL_RCC_GetSysClockFreq+0x44>
      sysclockfreq = HSI_VALUE;
 8005a36:	4803      	ldr	r0, [pc, #12]	@ (8005a44 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8005a38:	e7fa      	b.n	8005a30 <HAL_RCC_GetSysClockFreq+0x44>
 8005a3a:	bf00      	nop
 8005a3c:	40023800 	.word	0x40023800
 8005a40:	017d7840 	.word	0x017d7840
 8005a44:	00f42400 	.word	0x00f42400

08005a48 <HAL_RCC_ClockConfig>:
{
 8005a48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a4c:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8005a4e:	4604      	mov	r4, r0
 8005a50:	b910      	cbnz	r0, 8005a58 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005a52:	2001      	movs	r0, #1
}
 8005a54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005a58:	4a45      	ldr	r2, [pc, #276]	@ (8005b70 <HAL_RCC_ClockConfig+0x128>)
 8005a5a:	6813      	ldr	r3, [r2, #0]
 8005a5c:	f003 030f 	and.w	r3, r3, #15
 8005a60:	428b      	cmp	r3, r1
 8005a62:	d328      	bcc.n	8005ab6 <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005a64:	6821      	ldr	r1, [r4, #0]
 8005a66:	078f      	lsls	r7, r1, #30
 8005a68:	d430      	bmi.n	8005acc <HAL_RCC_ClockConfig+0x84>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005a6a:	07c8      	lsls	r0, r1, #31
 8005a6c:	d443      	bmi.n	8005af6 <HAL_RCC_ClockConfig+0xae>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8005a6e:	4a40      	ldr	r2, [pc, #256]	@ (8005b70 <HAL_RCC_ClockConfig+0x128>)
 8005a70:	6813      	ldr	r3, [r2, #0]
 8005a72:	f003 030f 	and.w	r3, r3, #15
 8005a76:	42ab      	cmp	r3, r5
 8005a78:	d866      	bhi.n	8005b48 <HAL_RCC_ClockConfig+0x100>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005a7a:	6822      	ldr	r2, [r4, #0]
 8005a7c:	0751      	lsls	r1, r2, #29
 8005a7e:	d46f      	bmi.n	8005b60 <HAL_RCC_ClockConfig+0x118>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005a80:	0713      	lsls	r3, r2, #28
 8005a82:	d507      	bpl.n	8005a94 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8005a84:	4a3b      	ldr	r2, [pc, #236]	@ (8005b74 <HAL_RCC_ClockConfig+0x12c>)
 8005a86:	6921      	ldr	r1, [r4, #16]
 8005a88:	6893      	ldr	r3, [r2, #8]
 8005a8a:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8005a8e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005a92:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8005a94:	f7ff ffaa 	bl	80059ec <HAL_RCC_GetSysClockFreq>
 8005a98:	4b36      	ldr	r3, [pc, #216]	@ (8005b74 <HAL_RCC_ClockConfig+0x12c>)
 8005a9a:	4a37      	ldr	r2, [pc, #220]	@ (8005b78 <HAL_RCC_ClockConfig+0x130>)
 8005a9c:	689b      	ldr	r3, [r3, #8]
 8005a9e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005aa2:	5cd3      	ldrb	r3, [r2, r3]
 8005aa4:	40d8      	lsrs	r0, r3
 8005aa6:	4b35      	ldr	r3, [pc, #212]	@ (8005b7c <HAL_RCC_ClockConfig+0x134>)
 8005aa8:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8005aaa:	4b35      	ldr	r3, [pc, #212]	@ (8005b80 <HAL_RCC_ClockConfig+0x138>)
 8005aac:	6818      	ldr	r0, [r3, #0]
 8005aae:	f7fb fbc9 	bl	8001244 <HAL_InitTick>
  return HAL_OK;
 8005ab2:	2000      	movs	r0, #0
 8005ab4:	e7ce      	b.n	8005a54 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005ab6:	6813      	ldr	r3, [r2, #0]
 8005ab8:	f023 030f 	bic.w	r3, r3, #15
 8005abc:	430b      	orrs	r3, r1
 8005abe:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005ac0:	6813      	ldr	r3, [r2, #0]
 8005ac2:	f003 030f 	and.w	r3, r3, #15
 8005ac6:	428b      	cmp	r3, r1
 8005ac8:	d1c3      	bne.n	8005a52 <HAL_RCC_ClockConfig+0xa>
 8005aca:	e7cb      	b.n	8005a64 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005acc:	f011 0f04 	tst.w	r1, #4
 8005ad0:	4b28      	ldr	r3, [pc, #160]	@ (8005b74 <HAL_RCC_ClockConfig+0x12c>)
 8005ad2:	d003      	beq.n	8005adc <HAL_RCC_ClockConfig+0x94>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005ad4:	689a      	ldr	r2, [r3, #8]
 8005ad6:	f442 52e0 	orr.w	r2, r2, #7168	@ 0x1c00
 8005ada:	609a      	str	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005adc:	070e      	lsls	r6, r1, #28
 8005ade:	d503      	bpl.n	8005ae8 <HAL_RCC_ClockConfig+0xa0>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005ae0:	689a      	ldr	r2, [r3, #8]
 8005ae2:	f442 4260 	orr.w	r2, r2, #57344	@ 0xe000
 8005ae6:	609a      	str	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005ae8:	689a      	ldr	r2, [r3, #8]
 8005aea:	68a0      	ldr	r0, [r4, #8]
 8005aec:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8005af0:	4302      	orrs	r2, r0
 8005af2:	609a      	str	r2, [r3, #8]
 8005af4:	e7b9      	b.n	8005a6a <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005af6:	6861      	ldr	r1, [r4, #4]
 8005af8:	4b1e      	ldr	r3, [pc, #120]	@ (8005b74 <HAL_RCC_ClockConfig+0x12c>)
 8005afa:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005afc:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005afe:	d11b      	bne.n	8005b38 <HAL_RCC_ClockConfig+0xf0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005b00:	f412 3f00 	tst.w	r2, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005b04:	d0a5      	beq.n	8005a52 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005b06:	689a      	ldr	r2, [r3, #8]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005b08:	f241 3888 	movw	r8, #5000	@ 0x1388
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005b0c:	4f19      	ldr	r7, [pc, #100]	@ (8005b74 <HAL_RCC_ClockConfig+0x12c>)
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005b0e:	f022 0203 	bic.w	r2, r2, #3
 8005b12:	430a      	orrs	r2, r1
 8005b14:	609a      	str	r2, [r3, #8]
    tickstart = HAL_GetTick();
 8005b16:	f7fe f925 	bl	8003d64 <HAL_GetTick>
 8005b1a:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005b1c:	68bb      	ldr	r3, [r7, #8]
 8005b1e:	6862      	ldr	r2, [r4, #4]
 8005b20:	f003 030c 	and.w	r3, r3, #12
 8005b24:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005b28:	d0a1      	beq.n	8005a6e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005b2a:	f7fe f91b 	bl	8003d64 <HAL_GetTick>
 8005b2e:	1b80      	subs	r0, r0, r6
 8005b30:	4540      	cmp	r0, r8
 8005b32:	d9f3      	bls.n	8005b1c <HAL_RCC_ClockConfig+0xd4>
        return HAL_TIMEOUT;
 8005b34:	2003      	movs	r0, #3
 8005b36:	e78d      	b.n	8005a54 <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8005b38:	2902      	cmp	r1, #2
 8005b3a:	d102      	bne.n	8005b42 <HAL_RCC_ClockConfig+0xfa>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005b3c:	f012 7f00 	tst.w	r2, #33554432	@ 0x2000000
 8005b40:	e7e0      	b.n	8005b04 <HAL_RCC_ClockConfig+0xbc>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005b42:	f012 0f02 	tst.w	r2, #2
 8005b46:	e7dd      	b.n	8005b04 <HAL_RCC_ClockConfig+0xbc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005b48:	6813      	ldr	r3, [r2, #0]
 8005b4a:	f023 030f 	bic.w	r3, r3, #15
 8005b4e:	432b      	orrs	r3, r5
 8005b50:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005b52:	6813      	ldr	r3, [r2, #0]
 8005b54:	f003 030f 	and.w	r3, r3, #15
 8005b58:	42ab      	cmp	r3, r5
 8005b5a:	f47f af7a 	bne.w	8005a52 <HAL_RCC_ClockConfig+0xa>
 8005b5e:	e78c      	b.n	8005a7a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005b60:	4904      	ldr	r1, [pc, #16]	@ (8005b74 <HAL_RCC_ClockConfig+0x12c>)
 8005b62:	68e0      	ldr	r0, [r4, #12]
 8005b64:	688b      	ldr	r3, [r1, #8]
 8005b66:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8005b6a:	4303      	orrs	r3, r0
 8005b6c:	608b      	str	r3, [r1, #8]
 8005b6e:	e787      	b.n	8005a80 <HAL_RCC_ClockConfig+0x38>
 8005b70:	40023c00 	.word	0x40023c00
 8005b74:	40023800 	.word	0x40023800
 8005b78:	08022f4c 	.word	0x08022f4c
 8005b7c:	2000000c 	.word	0x2000000c
 8005b80:	2000003c 	.word	0x2000003c

08005b84 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8005b84:	4b04      	ldr	r3, [pc, #16]	@ (8005b98 <HAL_RCC_GetPCLK1Freq+0x14>)
 8005b86:	4a05      	ldr	r2, [pc, #20]	@ (8005b9c <HAL_RCC_GetPCLK1Freq+0x18>)
 8005b88:	689b      	ldr	r3, [r3, #8]
 8005b8a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005b8e:	5cd3      	ldrb	r3, [r2, r3]
 8005b90:	4a03      	ldr	r2, [pc, #12]	@ (8005ba0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005b92:	6810      	ldr	r0, [r2, #0]
}
 8005b94:	40d8      	lsrs	r0, r3
 8005b96:	4770      	bx	lr
 8005b98:	40023800 	.word	0x40023800
 8005b9c:	08022f44 	.word	0x08022f44
 8005ba0:	2000000c 	.word	0x2000000c

08005ba4 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8005ba4:	4b04      	ldr	r3, [pc, #16]	@ (8005bb8 <HAL_RCC_GetPCLK2Freq+0x14>)
 8005ba6:	4a05      	ldr	r2, [pc, #20]	@ (8005bbc <HAL_RCC_GetPCLK2Freq+0x18>)
 8005ba8:	689b      	ldr	r3, [r3, #8]
 8005baa:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8005bae:	5cd3      	ldrb	r3, [r2, r3]
 8005bb0:	4a03      	ldr	r2, [pc, #12]	@ (8005bc0 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8005bb2:	6810      	ldr	r0, [r2, #0]
}
 8005bb4:	40d8      	lsrs	r0, r3
 8005bb6:	4770      	bx	lr
 8005bb8:	40023800 	.word	0x40023800
 8005bbc:	08022f44 	.word	0x08022f44
 8005bc0:	2000000c 	.word	0x2000000c

08005bc4 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005bc4:	230f      	movs	r3, #15
 8005bc6:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005bc8:	4b0b      	ldr	r3, [pc, #44]	@ (8005bf8 <HAL_RCC_GetClockConfig+0x34>)
 8005bca:	689a      	ldr	r2, [r3, #8]
 8005bcc:	f002 0203 	and.w	r2, r2, #3
 8005bd0:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8005bd2:	689a      	ldr	r2, [r3, #8]
 8005bd4:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8005bd8:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8005bda:	689a      	ldr	r2, [r3, #8]
 8005bdc:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8005be0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 8005be2:	689b      	ldr	r3, [r3, #8]
 8005be4:	08db      	lsrs	r3, r3, #3
 8005be6:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8005bea:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005bec:	4b03      	ldr	r3, [pc, #12]	@ (8005bfc <HAL_RCC_GetClockConfig+0x38>)
 8005bee:	681b      	ldr	r3, [r3, #0]
 8005bf0:	f003 030f 	and.w	r3, r3, #15
 8005bf4:	600b      	str	r3, [r1, #0]
}
 8005bf6:	4770      	bx	lr
 8005bf8:	40023800 	.word	0x40023800
 8005bfc:	40023c00 	.word	0x40023c00

08005c00 <HAL_RCCEx_PeriphCLKConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005c00:	6803      	ldr	r3, [r0, #0]
{
 8005c02:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005c06:	f013 0601 	ands.w	r6, r3, #1
{
 8005c0a:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005c0c:	d00b      	beq.n	8005c26 <HAL_RCCEx_PeriphCLKConfig+0x26>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8005c0e:	4aad      	ldr	r2, [pc, #692]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005c10:	6891      	ldr	r1, [r2, #8]
 8005c12:	f421 0100 	bic.w	r1, r1, #8388608	@ 0x800000
 8005c16:	6091      	str	r1, [r2, #8]
 8005c18:	6b46      	ldr	r6, [r0, #52]	@ 0x34
 8005c1a:	6891      	ldr	r1, [r2, #8]
 8005c1c:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8005c1e:	fab6 f686 	clz	r6, r6
 8005c22:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8005c24:	6091      	str	r1, [r2, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 8005c26:	f413 2500 	ands.w	r5, r3, #524288	@ 0x80000
 8005c2a:	d012      	beq.n	8005c52 <HAL_RCCEx_PeriphCLKConfig+0x52>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8005c2c:	49a5      	ldr	r1, [pc, #660]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005c2e:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 8005c30:	f8d1 208c 	ldr.w	r2, [r1, #140]	@ 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8005c34:	f5b5 1f80 	cmp.w	r5, #1048576	@ 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8005c38:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
    {
      plli2sused = 1;
 8005c3c:	bf08      	it	eq
 8005c3e:	2601      	moveq	r6, #1
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8005c40:	ea42 0205 	orr.w	r2, r2, r5
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8005c44:	bf16      	itet	ne
 8005c46:	fab5 f585 	clzne	r5, r5
  uint32_t pllsaiused = 0;
 8005c4a:	2500      	moveq	r5, #0
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8005c4c:	096d      	lsrne	r5, r5, #5
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8005c4e:	f8c1 208c 	str.w	r2, [r1, #140]	@ 0x8c
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8005c52:	02d8      	lsls	r0, r3, #11
 8005c54:	d510      	bpl.n	8005c78 <HAL_RCCEx_PeriphCLKConfig+0x78>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8005c56:	489b      	ldr	r0, [pc, #620]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005c58:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8005c5a:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8005c5e:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8005c62:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8005c66:	ea42 0201 	orr.w	r2, r2, r1
 8005c6a:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8005c6e:	f000 8186 	beq.w	8005f7e <HAL_RCCEx_PeriphCLKConfig+0x37e>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
 8005c72:	2900      	cmp	r1, #0
 8005c74:	bf08      	it	eq
 8005c76:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
 8005c78:	f013 7f80 	tst.w	r3, #16777216	@ 0x1000000
 8005c7c:	bf18      	it	ne
 8005c7e:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005c80:	0699      	lsls	r1, r3, #26
 8005c82:	d532      	bpl.n	8005cea <HAL_RCCEx_PeriphCLKConfig+0xea>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8005c84:	4b8f      	ldr	r3, [pc, #572]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8005c86:	4f90      	ldr	r7, [pc, #576]	@ (8005ec8 <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8005c88:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005c8a:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005c8e:	641a      	str	r2, [r3, #64]	@ 0x40
 8005c90:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005c92:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005c96:	9301      	str	r3, [sp, #4]
 8005c98:	9b01      	ldr	r3, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 8005c9a:	683b      	ldr	r3, [r7, #0]
 8005c9c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005ca0:	603b      	str	r3, [r7, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8005ca2:	f7fe f85f 	bl	8003d64 <HAL_GetTick>
 8005ca6:	4680      	mov	r8, r0

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8005ca8:	683b      	ldr	r3, [r7, #0]
 8005caa:	05da      	lsls	r2, r3, #23
 8005cac:	f140 8169 	bpl.w	8005f82 <HAL_RCCEx_PeriphCLKConfig+0x382>
        return HAL_TIMEOUT;
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005cb0:	4f84      	ldr	r7, [pc, #528]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005cb2:	6b22      	ldr	r2, [r4, #48]	@ 0x30
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005cb4:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005cb6:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8005cba:	f040 816d 	bne.w	8005f98 <HAL_RCCEx_PeriphCLKConfig+0x398>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005cbe:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005cc0:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8005cc4:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8005cc8:	4a7e      	ldr	r2, [pc, #504]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005cca:	f040 818a 	bne.w	8005fe2 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8005cce:	6891      	ldr	r1, [r2, #8]
 8005cd0:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8005cd4:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8005cd8:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8005cdc:	4301      	orrs	r1, r0
 8005cde:	6091      	str	r1, [r2, #8]
 8005ce0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005ce4:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8005ce6:	430b      	orrs	r3, r1
 8005ce8:	6713      	str	r3, [r2, #112]	@ 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005cea:	6823      	ldr	r3, [r4, #0]
 8005cec:	06d9      	lsls	r1, r3, #27
 8005cee:	d50c      	bpl.n	8005d0a <HAL_RCCEx_PeriphCLKConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005cf0:	4a74      	ldr	r2, [pc, #464]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005cf2:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
 8005cf6:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
 8005cfa:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
 8005cfe:	f8d2 108c 	ldr.w	r1, [r2, #140]	@ 0x8c
 8005d02:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8005d04:	4301      	orrs	r1, r0
 8005d06:	f8c2 108c 	str.w	r1, [r2, #140]	@ 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8005d0a:	045a      	lsls	r2, r3, #17
 8005d0c:	d508      	bpl.n	8005d20 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8005d0e:	496d      	ldr	r1, [pc, #436]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005d10:	6e60      	ldr	r0, [r4, #100]	@ 0x64
 8005d12:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005d16:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8005d1a:	4302      	orrs	r2, r0
 8005d1c:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8005d20:	041f      	lsls	r7, r3, #16
 8005d22:	d508      	bpl.n	8005d36 <HAL_RCCEx_PeriphCLKConfig+0x136>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8005d24:	4967      	ldr	r1, [pc, #412]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005d26:	6ea0      	ldr	r0, [r4, #104]	@ 0x68
 8005d28:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005d2c:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 8005d30:	4302      	orrs	r2, r0
 8005d32:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8005d36:	03d8      	lsls	r0, r3, #15
 8005d38:	d508      	bpl.n	8005d4c <HAL_RCCEx_PeriphCLKConfig+0x14c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8005d3a:	4962      	ldr	r1, [pc, #392]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005d3c:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
 8005d3e:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005d42:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 8005d46:	4302      	orrs	r2, r0
 8005d48:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8005d4c:	0399      	lsls	r1, r3, #14
 8005d4e:	d508      	bpl.n	8005d62 <HAL_RCCEx_PeriphCLKConfig+0x162>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8005d50:	495c      	ldr	r1, [pc, #368]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005d52:	6f20      	ldr	r0, [r4, #112]	@ 0x70
 8005d54:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005d58:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8005d5c:	4302      	orrs	r2, r0
 8005d5e:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8005d62:	065a      	lsls	r2, r3, #25
 8005d64:	d508      	bpl.n	8005d78 <HAL_RCCEx_PeriphCLKConfig+0x178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8005d66:	4957      	ldr	r1, [pc, #348]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005d68:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8005d6a:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005d6e:	f022 0203 	bic.w	r2, r2, #3
 8005d72:	4302      	orrs	r2, r0
 8005d74:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8005d78:	061f      	lsls	r7, r3, #24
 8005d7a:	d508      	bpl.n	8005d8e <HAL_RCCEx_PeriphCLKConfig+0x18e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8005d7c:	4951      	ldr	r1, [pc, #324]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005d7e:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 8005d80:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005d84:	f022 020c 	bic.w	r2, r2, #12
 8005d88:	4302      	orrs	r2, r0
 8005d8a:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8005d8e:	05d8      	lsls	r0, r3, #23
 8005d90:	d508      	bpl.n	8005da4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8005d92:	494c      	ldr	r1, [pc, #304]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005d94:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8005d96:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005d9a:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 8005d9e:	4302      	orrs	r2, r0
 8005da0:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8005da4:	0599      	lsls	r1, r3, #22
 8005da6:	d508      	bpl.n	8005dba <HAL_RCCEx_PeriphCLKConfig+0x1ba>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8005da8:	4946      	ldr	r1, [pc, #280]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005daa:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 8005dac:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005db0:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 8005db4:	4302      	orrs	r2, r0
 8005db6:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8005dba:	055a      	lsls	r2, r3, #21
 8005dbc:	d508      	bpl.n	8005dd0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8005dbe:	4941      	ldr	r1, [pc, #260]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005dc0:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8005dc2:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005dc6:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8005dca:	4302      	orrs	r2, r0
 8005dcc:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8005dd0:	051f      	lsls	r7, r3, #20
 8005dd2:	d508      	bpl.n	8005de6 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 8005dd4:	493b      	ldr	r1, [pc, #236]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005dd6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005dd8:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005ddc:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 8005de0:	4302      	orrs	r2, r0
 8005de2:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8005de6:	04d8      	lsls	r0, r3, #19
 8005de8:	d508      	bpl.n	8005dfc <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8005dea:	4936      	ldr	r1, [pc, #216]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005dec:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8005dee:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005df2:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8005df6:	4302      	orrs	r2, r0
 8005df8:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8005dfc:	0499      	lsls	r1, r3, #18
 8005dfe:	d508      	bpl.n	8005e12 <HAL_RCCEx_PeriphCLKConfig+0x212>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8005e00:	4930      	ldr	r1, [pc, #192]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005e02:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8005e04:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005e08:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8005e0c:	4302      	orrs	r2, r0
 8005e0e:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8005e12:	025a      	lsls	r2, r3, #9
 8005e14:	d508      	bpl.n	8005e28 <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8005e16:	492b      	ldr	r1, [pc, #172]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005e18:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
 8005e1a:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005e1e:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
 8005e22:	4302      	orrs	r2, r0
 8005e24:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8005e28:	029f      	lsls	r7, r3, #10
 8005e2a:	d50c      	bpl.n	8005e46 <HAL_RCCEx_PeriphCLKConfig+0x246>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8005e2c:	4825      	ldr	r0, [pc, #148]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005e2e:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
 8005e30:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
 8005e34:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8005e38:	f022 6200 	bic.w	r2, r2, #134217728	@ 0x8000000
      pllsaiused = 1;
 8005e3c:	bf08      	it	eq
 8005e3e:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8005e40:	430a      	orrs	r2, r1
 8005e42:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
 8005e46:	f013 0f08 	tst.w	r3, #8
 8005e4a:	bf18      	it	ne
 8005e4c:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8005e4e:	0358      	lsls	r0, r3, #13
 8005e50:	d508      	bpl.n	8005e64 <HAL_RCCEx_PeriphCLKConfig+0x264>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8005e52:	491c      	ldr	r1, [pc, #112]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005e54:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8005e56:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005e5a:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8005e5e:	4302      	orrs	r2, r0
 8005e60:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8005e64:	0219      	lsls	r1, r3, #8
 8005e66:	d509      	bpl.n	8005e7c <HAL_RCCEx_PeriphCLKConfig+0x27c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8005e68:	4916      	ldr	r1, [pc, #88]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005e6a:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 8005e6e:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
 8005e72:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
 8005e76:	4302      	orrs	r2, r0
 8005e78:	f8c1 2090 	str.w	r2, [r1, #144]	@ 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8005e7c:	2e01      	cmp	r6, #1
 8005e7e:	f000 80b4 	beq.w	8005fea <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8005e82:	019a      	lsls	r2, r3, #6
 8005e84:	f100 80b1 	bmi.w	8005fea <HAL_RCCEx_PeriphCLKConfig+0x3ea>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8005e88:	2d01      	cmp	r5, #1
 8005e8a:	d176      	bne.n	8005f7a <HAL_RCCEx_PeriphCLKConfig+0x37a>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005e8c:	4d0d      	ldr	r5, [pc, #52]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005e8e:	682b      	ldr	r3, [r5, #0]
 8005e90:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005e94:	602b      	str	r3, [r5, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8005e96:	f7fd ff65 	bl	8003d64 <HAL_GetTick>
 8005e9a:	4606      	mov	r6, r0

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005e9c:	682b      	ldr	r3, [r5, #0]
 8005e9e:	009f      	lsls	r7, r3, #2
 8005ea0:	f100 8127 	bmi.w	80060f2 <HAL_RCCEx_PeriphCLKConfig+0x4f2>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8005ea4:	6821      	ldr	r1, [r4, #0]
 8005ea6:	030e      	lsls	r6, r1, #12
 8005ea8:	d501      	bpl.n	8005eae <HAL_RCCEx_PeriphCLKConfig+0x2ae>
 8005eaa:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8005eac:	b11b      	cbz	r3, 8005eb6 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8005eae:	02cd      	lsls	r5, r1, #11
 8005eb0:	d523      	bpl.n	8005efa <HAL_RCCEx_PeriphCLKConfig+0x2fa>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8005eb2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005eb4:	bb0b      	cbnz	r3, 8005efa <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8005eb6:	4a03      	ldr	r2, [pc, #12]	@ (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 8005eb8:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005ebc:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88
 8005ec0:	e004      	b.n	8005ecc <HAL_RCCEx_PeriphCLKConfig+0x2cc>
 8005ec2:	bf00      	nop
 8005ec4:	40023800 	.word	0x40023800
 8005ec8:	40007000 	.word	0x40007000
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005ecc:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8005ed0:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8005ed4:	4303      	orrs	r3, r0
 8005ed6:	6960      	ldr	r0, [r4, #20]
 8005ed8:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005edc:	69a0      	ldr	r0, [r4, #24]
 8005ede:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8005ee2:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005ee6:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8005eea:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005eec:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8005ef0:	3801      	subs	r0, #1
 8005ef2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8005ef6:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8005efa:	0288      	lsls	r0, r1, #10
 8005efc:	d515      	bpl.n	8005f2a <HAL_RCCEx_PeriphCLKConfig+0x32a>
 8005efe:	6fe3      	ldr	r3, [r4, #124]	@ 0x7c
 8005f00:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8005f04:	d111      	bne.n	8005f2a <HAL_RCCEx_PeriphCLKConfig+0x32a>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005f06:	4a82      	ldr	r2, [pc, #520]	@ (8006110 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8005f08:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005f0c:	f8d2 0088 	ldr.w	r0, [r2, #136]	@ 0x88

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8005f10:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
 8005f14:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8005f18:	4303      	orrs	r3, r0
 8005f1a:	6960      	ldr	r0, [r4, #20]
 8005f1c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005f20:	6a20      	ldr	r0, [r4, #32]
 8005f22:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8005f26:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005f2a:	070a      	lsls	r2, r1, #28
 8005f2c:	d519      	bpl.n	8005f62 <HAL_RCCEx_PeriphCLKConfig+0x362>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005f2e:	4a78      	ldr	r2, [pc, #480]	@ (8006110 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8005f30:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8005f34:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8005f38:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8005f3c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8005f40:	430b      	orrs	r3, r1
 8005f42:	6961      	ldr	r1, [r4, #20]
 8005f44:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8005f48:	69e1      	ldr	r1, [r4, #28]
 8005f4a:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8005f4e:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005f52:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8005f56:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8005f58:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8005f5c:	430b      	orrs	r3, r1
 8005f5e:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005f62:	4c6b      	ldr	r4, [pc, #428]	@ (8006110 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8005f64:	6823      	ldr	r3, [r4, #0]
 8005f66:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005f6a:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8005f6c:	f7fd fefa 	bl	8003d64 <HAL_GetTick>
 8005f70:	4605      	mov	r5, r0

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005f72:	6823      	ldr	r3, [r4, #0]
 8005f74:	009b      	lsls	r3, r3, #2
 8005f76:	f140 80c3 	bpl.w	8006100 <HAL_RCCEx_PeriphCLKConfig+0x500>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8005f7a:	2000      	movs	r0, #0
 8005f7c:	e009      	b.n	8005f92 <HAL_RCCEx_PeriphCLKConfig+0x392>
      plli2sused = 1;
 8005f7e:	2601      	movs	r6, #1
 8005f80:	e67a      	b.n	8005c78 <HAL_RCCEx_PeriphCLKConfig+0x78>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005f82:	f7fd feef 	bl	8003d64 <HAL_GetTick>
 8005f86:	eba0 0008 	sub.w	r0, r0, r8
 8005f8a:	2864      	cmp	r0, #100	@ 0x64
 8005f8c:	f67f ae8c 	bls.w	8005ca8 <HAL_RCCEx_PeriphCLKConfig+0xa8>
        return HAL_TIMEOUT;
 8005f90:	2003      	movs	r0, #3
}
 8005f92:	b003      	add	sp, #12
 8005f94:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005f98:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8005f9c:	4293      	cmp	r3, r2
 8005f9e:	f43f ae8e 	beq.w	8005cbe <HAL_RCCEx_PeriphCLKConfig+0xbe>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005fa2:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8005fa4:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005fa6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 8005faa:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8005fae:	673a      	str	r2, [r7, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8005fb0:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 8005fb2:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8005fb6:	673a      	str	r2, [r7, #112]	@ 0x70
      RCC->BDCR = tmpreg0;
 8005fb8:	673b      	str	r3, [r7, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8005fba:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8005fbc:	07db      	lsls	r3, r3, #31
 8005fbe:	f57f ae7e 	bpl.w	8005cbe <HAL_RCCEx_PeriphCLKConfig+0xbe>
        tickstart = HAL_GetTick();
 8005fc2:	f7fd fecf 	bl	8003d64 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005fc6:	f241 3988 	movw	r9, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8005fca:	4680      	mov	r8, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005fcc:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8005fce:	0798      	lsls	r0, r3, #30
 8005fd0:	f53f ae75 	bmi.w	8005cbe <HAL_RCCEx_PeriphCLKConfig+0xbe>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005fd4:	f7fd fec6 	bl	8003d64 <HAL_GetTick>
 8005fd8:	eba0 0008 	sub.w	r0, r0, r8
 8005fdc:	4548      	cmp	r0, r9
 8005fde:	d9f5      	bls.n	8005fcc <HAL_RCCEx_PeriphCLKConfig+0x3cc>
 8005fe0:	e7d6      	b.n	8005f90 <HAL_RCCEx_PeriphCLKConfig+0x390>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005fe2:	6891      	ldr	r1, [r2, #8]
 8005fe4:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8005fe8:	e679      	b.n	8005cde <HAL_RCCEx_PeriphCLKConfig+0xde>
    __HAL_RCC_PLLI2S_DISABLE();
 8005fea:	4e49      	ldr	r6, [pc, #292]	@ (8006110 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8005fec:	6833      	ldr	r3, [r6, #0]
 8005fee:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8005ff2:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 8005ff4:	f7fd feb6 	bl	8003d64 <HAL_GetTick>
 8005ff8:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005ffa:	6833      	ldr	r3, [r6, #0]
 8005ffc:	011b      	lsls	r3, r3, #4
 8005ffe:	d472      	bmi.n	80060e6 <HAL_RCCEx_PeriphCLKConfig+0x4e6>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8006000:	6822      	ldr	r2, [r4, #0]
 8006002:	07d7      	lsls	r7, r2, #31
 8006004:	d512      	bpl.n	800602c <HAL_RCCEx_PeriphCLKConfig+0x42c>
 8006006:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8006008:	b983      	cbnz	r3, 800602c <HAL_RCCEx_PeriphCLKConfig+0x42c>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 800600a:	f8d6 3084 	ldr.w	r3, [r6, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 800600e:	f8d6 1084 	ldr.w	r1, [r6, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8006012:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006016:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 800601a:	430b      	orrs	r3, r1
 800601c:	6861      	ldr	r1, [r4, #4]
 800601e:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8006022:	68a1      	ldr	r1, [r4, #8]
 8006024:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8006028:	f8c6 3084 	str.w	r3, [r6, #132]	@ 0x84
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 800602c:	0316      	lsls	r6, r2, #12
 800602e:	d503      	bpl.n	8006038 <HAL_RCCEx_PeriphCLKConfig+0x438>
 8006030:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8006032:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8006036:	d005      	beq.n	8006044 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8006038:	02d0      	lsls	r0, r2, #11
 800603a:	d51e      	bpl.n	800607a <HAL_RCCEx_PeriphCLKConfig+0x47a>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 800603c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800603e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006042:	d11a      	bne.n	800607a <HAL_RCCEx_PeriphCLKConfig+0x47a>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8006044:	4932      	ldr	r1, [pc, #200]	@ (8006110 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006046:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800604a:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800604e:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006052:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006056:	4303      	orrs	r3, r0
 8006058:	6860      	ldr	r0, [r4, #4]
 800605a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800605e:	68e0      	ldr	r0, [r4, #12]
 8006060:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8006064:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006068:	f8d1 008c 	ldr.w	r0, [r1, #140]	@ 0x8c
 800606c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800606e:	f020 001f 	bic.w	r0, r0, #31
 8006072:	3b01      	subs	r3, #1
 8006074:	4303      	orrs	r3, r0
 8006076:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 800607a:	01d1      	lsls	r1, r2, #7
 800607c:	d511      	bpl.n	80060a2 <HAL_RCCEx_PeriphCLKConfig+0x4a2>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 800607e:	4924      	ldr	r1, [pc, #144]	@ (8006110 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 8006080:	f8d1 3084 	ldr.w	r3, [r1, #132]	@ 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006084:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8006088:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
 800608c:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006090:	4303      	orrs	r3, r0
 8006092:	6860      	ldr	r0, [r4, #4]
 8006094:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006098:	6920      	ldr	r0, [r4, #16]
 800609a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800609e:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80060a2:	0192      	lsls	r2, r2, #6
 80060a4:	d50d      	bpl.n	80060c2 <HAL_RCCEx_PeriphCLKConfig+0x4c2>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80060a6:	6923      	ldr	r3, [r4, #16]
 80060a8:	6862      	ldr	r2, [r4, #4]
 80060aa:	041b      	lsls	r3, r3, #16
 80060ac:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80060b0:	68e2      	ldr	r2, [r4, #12]
 80060b2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80060b6:	68a2      	ldr	r2, [r4, #8]
 80060b8:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80060bc:	4a14      	ldr	r2, [pc, #80]	@ (8006110 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 80060be:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80060c2:	4e13      	ldr	r6, [pc, #76]	@ (8006110 <HAL_RCCEx_PeriphCLKConfig+0x510>)
 80060c4:	6833      	ldr	r3, [r6, #0]
 80060c6:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80060ca:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 80060cc:	f7fd fe4a 	bl	8003d64 <HAL_GetTick>
 80060d0:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80060d2:	6833      	ldr	r3, [r6, #0]
 80060d4:	011b      	lsls	r3, r3, #4
 80060d6:	f53f aed7 	bmi.w	8005e88 <HAL_RCCEx_PeriphCLKConfig+0x288>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80060da:	f7fd fe43 	bl	8003d64 <HAL_GetTick>
 80060de:	1bc0      	subs	r0, r0, r7
 80060e0:	2864      	cmp	r0, #100	@ 0x64
 80060e2:	d9f6      	bls.n	80060d2 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 80060e4:	e754      	b.n	8005f90 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80060e6:	f7fd fe3d 	bl	8003d64 <HAL_GetTick>
 80060ea:	1bc0      	subs	r0, r0, r7
 80060ec:	2864      	cmp	r0, #100	@ 0x64
 80060ee:	d984      	bls.n	8005ffa <HAL_RCCEx_PeriphCLKConfig+0x3fa>
 80060f0:	e74e      	b.n	8005f90 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80060f2:	f7fd fe37 	bl	8003d64 <HAL_GetTick>
 80060f6:	1b80      	subs	r0, r0, r6
 80060f8:	2864      	cmp	r0, #100	@ 0x64
 80060fa:	f67f aecf 	bls.w	8005e9c <HAL_RCCEx_PeriphCLKConfig+0x29c>
 80060fe:	e747      	b.n	8005f90 <HAL_RCCEx_PeriphCLKConfig+0x390>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8006100:	f7fd fe30 	bl	8003d64 <HAL_GetTick>
 8006104:	1b40      	subs	r0, r0, r5
 8006106:	2864      	cmp	r0, #100	@ 0x64
 8006108:	f67f af33 	bls.w	8005f72 <HAL_RCCEx_PeriphCLKConfig+0x372>
 800610c:	e740      	b.n	8005f90 <HAL_RCCEx_PeriphCLKConfig+0x390>
 800610e:	bf00      	nop
 8006110:	40023800 	.word	0x40023800

08006114 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8006114:	b538      	push	{r3, r4, r5, lr}
 8006116:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8006118:	4604      	mov	r4, r0
 800611a:	b1c8      	cbz	r0, 8006150 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800611c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8006120:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006124:	b91b      	cbnz	r3, 800612e <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006126:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800612a:	f7fb f823 	bl	8001174 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800612e:	2302      	movs	r3, #2

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006130:	1d21      	adds	r1, r4, #4
 8006132:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006134:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006138:	f000 fdbc 	bl	8006cb4 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800613c:	6862      	ldr	r2, [r4, #4]
 800613e:	4629      	mov	r1, r5
 8006140:	6820      	ldr	r0, [r4, #0]
 8006142:	f000 fdef 	bl	8006d24 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006146:	2301      	movs	r3, #1

  return HAL_OK;
 8006148:	2000      	movs	r0, #0
  hsdram->State = HAL_SDRAM_STATE_READY;
 800614a:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
}
 800614e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006150:	2001      	movs	r0, #1
 8006152:	e7fc      	b.n	800614e <HAL_SDRAM_Init+0x3a>

08006154 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8006154:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006156:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
 800615a:	4605      	mov	r5, r0
 800615c:	460e      	mov	r6, r1

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800615e:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006160:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8006162:	d010      	beq.n	8006186 <HAL_SDRAM_SendCommand+0x32>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8006164:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8006168:	2c01      	cmp	r4, #1
 800616a:	d110      	bne.n	800618e <HAL_SDRAM_SendCommand+0x3a>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800616c:	2302      	movs	r3, #2

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800616e:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006170:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006174:	f000 fe0c 	bl	8006d90 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006178:	6833      	ldr	r3, [r6, #0]
 800617a:	2b02      	cmp	r3, #2
 800617c:	d104      	bne.n	8006188 <HAL_SDRAM_SendCommand+0x34>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800617e:	2305      	movs	r3, #5
 8006180:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006184:	2000      	movs	r0, #0
}
 8006186:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006188:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
 800618c:	e7fa      	b.n	8006184 <HAL_SDRAM_SendCommand+0x30>
    return HAL_ERROR;
 800618e:	2001      	movs	r0, #1
 8006190:	e7f9      	b.n	8006186 <HAL_SDRAM_SendCommand+0x32>

08006192 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006192:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006194:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
 8006198:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800619a:	2b02      	cmp	r3, #2
 800619c:	b2d8      	uxtb	r0, r3
 800619e:	d00d      	beq.n	80061bc <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 80061a0:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 80061a4:	2b01      	cmp	r3, #1
 80061a6:	b2dd      	uxtb	r5, r3
 80061a8:	d109      	bne.n	80061be <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80061aa:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80061ac:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80061ae:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80061b2:	f000 fdff 	bl	8006db4 <FMC_SDRAM_ProgramRefreshRate>
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80061b6:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
 80061b8:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
 80061bc:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80061be:	2001      	movs	r0, #1
 80061c0:	e7fc      	b.n	80061bc <HAL_SDRAM_ProgramRefreshRate+0x2a>

080061c2 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80061c2:	4770      	bx	lr

080061c4 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80061c4:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80061c8:	2b01      	cmp	r3, #1
 80061ca:	d133      	bne.n	8006234 <HAL_TIM_Base_Start_IT+0x70>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80061cc:	2302      	movs	r3, #2
 80061ce:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80061d2:	6803      	ldr	r3, [r0, #0]
 80061d4:	68da      	ldr	r2, [r3, #12]
 80061d6:	f042 0201 	orr.w	r2, r2, #1
 80061da:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80061dc:	4a16      	ldr	r2, [pc, #88]	@ (8006238 <HAL_TIM_Base_Start_IT+0x74>)
 80061de:	4293      	cmp	r3, r2
 80061e0:	d01a      	beq.n	8006218 <HAL_TIM_Base_Start_IT+0x54>
 80061e2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80061e6:	d017      	beq.n	8006218 <HAL_TIM_Base_Start_IT+0x54>
 80061e8:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80061ec:	4293      	cmp	r3, r2
 80061ee:	d013      	beq.n	8006218 <HAL_TIM_Base_Start_IT+0x54>
 80061f0:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80061f4:	4293      	cmp	r3, r2
 80061f6:	d00f      	beq.n	8006218 <HAL_TIM_Base_Start_IT+0x54>
 80061f8:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80061fc:	4293      	cmp	r3, r2
 80061fe:	d00b      	beq.n	8006218 <HAL_TIM_Base_Start_IT+0x54>
 8006200:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006204:	4293      	cmp	r3, r2
 8006206:	d007      	beq.n	8006218 <HAL_TIM_Base_Start_IT+0x54>
 8006208:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 800620c:	4293      	cmp	r3, r2
 800620e:	d003      	beq.n	8006218 <HAL_TIM_Base_Start_IT+0x54>
 8006210:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8006214:	4293      	cmp	r3, r2
 8006216:	d107      	bne.n	8006228 <HAL_TIM_Base_Start_IT+0x64>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006218:	6899      	ldr	r1, [r3, #8]
 800621a:	4a08      	ldr	r2, [pc, #32]	@ (800623c <HAL_TIM_Base_Start_IT+0x78>)
 800621c:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800621e:	2a06      	cmp	r2, #6
 8006220:	d006      	beq.n	8006230 <HAL_TIM_Base_Start_IT+0x6c>
 8006222:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8006226:	d003      	beq.n	8006230 <HAL_TIM_Base_Start_IT+0x6c>
    {
      __HAL_TIM_ENABLE(htim);
 8006228:	681a      	ldr	r2, [r3, #0]
 800622a:	f042 0201 	orr.w	r2, r2, #1
 800622e:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8006230:	2000      	movs	r0, #0
 8006232:	4770      	bx	lr
    return HAL_ERROR;
 8006234:	2001      	movs	r0, #1
}
 8006236:	4770      	bx	lr
 8006238:	40010000 	.word	0x40010000
 800623c:	00010007 	.word	0x00010007

08006240 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8006240:	4770      	bx	lr

08006242 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8006242:	4770      	bx	lr

08006244 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8006244:	4770      	bx	lr

08006246 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8006246:	4770      	bx	lr

08006248 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006248:	6803      	ldr	r3, [r0, #0]
 800624a:	691a      	ldr	r2, [r3, #16]
 800624c:	0791      	lsls	r1, r2, #30
{
 800624e:	b510      	push	{r4, lr}
 8006250:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006252:	d50f      	bpl.n	8006274 <HAL_TIM_IRQHandler+0x2c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006254:	68da      	ldr	r2, [r3, #12]
 8006256:	0792      	lsls	r2, r2, #30
 8006258:	d50c      	bpl.n	8006274 <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800625a:	f06f 0202 	mvn.w	r2, #2
 800625e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006260:	2201      	movs	r2, #1
 8006262:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006264:	699b      	ldr	r3, [r3, #24]
 8006266:	0799      	lsls	r1, r3, #30
 8006268:	f000 8085 	beq.w	8006376 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800626c:	f7ff ffe9 	bl	8006242 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006270:	2300      	movs	r3, #0
 8006272:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006274:	6823      	ldr	r3, [r4, #0]
 8006276:	691a      	ldr	r2, [r3, #16]
 8006278:	0752      	lsls	r2, r2, #29
 800627a:	d510      	bpl.n	800629e <HAL_TIM_IRQHandler+0x56>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800627c:	68da      	ldr	r2, [r3, #12]
 800627e:	0750      	lsls	r0, r2, #29
 8006280:	d50d      	bpl.n	800629e <HAL_TIM_IRQHandler+0x56>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006282:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
 8006286:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006288:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800628a:	2202      	movs	r2, #2
 800628c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800628e:	699b      	ldr	r3, [r3, #24]
 8006290:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8006294:	d075      	beq.n	8006382 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006296:	f7ff ffd4 	bl	8006242 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800629a:	2300      	movs	r3, #0
 800629c:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800629e:	6823      	ldr	r3, [r4, #0]
 80062a0:	691a      	ldr	r2, [r3, #16]
 80062a2:	0711      	lsls	r1, r2, #28
 80062a4:	d50f      	bpl.n	80062c6 <HAL_TIM_IRQHandler+0x7e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80062a6:	68da      	ldr	r2, [r3, #12]
 80062a8:	0712      	lsls	r2, r2, #28
 80062aa:	d50c      	bpl.n	80062c6 <HAL_TIM_IRQHandler+0x7e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80062ac:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
 80062b0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80062b2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80062b4:	2204      	movs	r2, #4
 80062b6:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80062b8:	69db      	ldr	r3, [r3, #28]
 80062ba:	079b      	lsls	r3, r3, #30
 80062bc:	d067      	beq.n	800638e <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 80062be:	f7ff ffc0 	bl	8006242 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80062c2:	2300      	movs	r3, #0
 80062c4:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80062c6:	6823      	ldr	r3, [r4, #0]
 80062c8:	691a      	ldr	r2, [r3, #16]
 80062ca:	06d0      	lsls	r0, r2, #27
 80062cc:	d510      	bpl.n	80062f0 <HAL_TIM_IRQHandler+0xa8>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80062ce:	68da      	ldr	r2, [r3, #12]
 80062d0:	06d1      	lsls	r1, r2, #27
 80062d2:	d50d      	bpl.n	80062f0 <HAL_TIM_IRQHandler+0xa8>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80062d4:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
 80062d8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80062da:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80062dc:	2208      	movs	r2, #8
 80062de:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80062e0:	69db      	ldr	r3, [r3, #28]
 80062e2:	f413 7f40 	tst.w	r3, #768	@ 0x300
 80062e6:	d058      	beq.n	800639a <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 80062e8:	f7ff ffab 	bl	8006242 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80062ec:	2300      	movs	r3, #0
 80062ee:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80062f0:	6823      	ldr	r3, [r4, #0]
 80062f2:	691a      	ldr	r2, [r3, #16]
 80062f4:	07d2      	lsls	r2, r2, #31
 80062f6:	d508      	bpl.n	800630a <HAL_TIM_IRQHandler+0xc2>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80062f8:	68da      	ldr	r2, [r3, #12]
 80062fa:	07d0      	lsls	r0, r2, #31
 80062fc:	d505      	bpl.n	800630a <HAL_TIM_IRQHandler+0xc2>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80062fe:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
 8006302:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006304:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8006306:	f7fa fcf1 	bl	8000cec <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800630a:	6823      	ldr	r3, [r4, #0]
 800630c:	691a      	ldr	r2, [r3, #16]
 800630e:	0611      	lsls	r1, r2, #24
 8006310:	d508      	bpl.n	8006324 <HAL_TIM_IRQHandler+0xdc>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006312:	68da      	ldr	r2, [r3, #12]
 8006314:	0612      	lsls	r2, r2, #24
 8006316:	d505      	bpl.n	8006324 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006318:	f06f 0280 	mvn.w	r2, #128	@ 0x80
      HAL_TIMEx_BreakCallback(htim);
 800631c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800631e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006320:	f000 f8d9 	bl	80064d6 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 8006324:	6823      	ldr	r3, [r4, #0]
 8006326:	691a      	ldr	r2, [r3, #16]
 8006328:	05d0      	lsls	r0, r2, #23
 800632a:	d508      	bpl.n	800633e <HAL_TIM_IRQHandler+0xf6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800632c:	68da      	ldr	r2, [r3, #12]
 800632e:	0611      	lsls	r1, r2, #24
 8006330:	d505      	bpl.n	800633e <HAL_TIM_IRQHandler+0xf6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8006332:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
 8006336:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8006338:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 800633a:	f000 f8cd 	bl	80064d8 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800633e:	6823      	ldr	r3, [r4, #0]
 8006340:	691a      	ldr	r2, [r3, #16]
 8006342:	0652      	lsls	r2, r2, #25
 8006344:	d508      	bpl.n	8006358 <HAL_TIM_IRQHandler+0x110>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006346:	68da      	ldr	r2, [r3, #12]
 8006348:	0650      	lsls	r0, r2, #25
 800634a:	d505      	bpl.n	8006358 <HAL_TIM_IRQHandler+0x110>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800634c:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
 8006350:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006352:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8006354:	f7ff ff77 	bl	8006246 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006358:	6823      	ldr	r3, [r4, #0]
 800635a:	691a      	ldr	r2, [r3, #16]
 800635c:	0691      	lsls	r1, r2, #26
 800635e:	d522      	bpl.n	80063a6 <HAL_TIM_IRQHandler+0x15e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006360:	68da      	ldr	r2, [r3, #12]
 8006362:	0692      	lsls	r2, r2, #26
 8006364:	d51f      	bpl.n	80063a6 <HAL_TIM_IRQHandler+0x15e>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006366:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800636a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800636c:	611a      	str	r2, [r3, #16]
}
 800636e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006372:	f000 b8af 	b.w	80064d4 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006376:	f7ff ff63 	bl	8006240 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800637a:	4620      	mov	r0, r4
 800637c:	f7ff ff62 	bl	8006244 <HAL_TIM_PWM_PulseFinishedCallback>
 8006380:	e776      	b.n	8006270 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006382:	f7ff ff5d 	bl	8006240 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006386:	4620      	mov	r0, r4
 8006388:	f7ff ff5c 	bl	8006244 <HAL_TIM_PWM_PulseFinishedCallback>
 800638c:	e785      	b.n	800629a <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800638e:	f7ff ff57 	bl	8006240 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006392:	4620      	mov	r0, r4
 8006394:	f7ff ff56 	bl	8006244 <HAL_TIM_PWM_PulseFinishedCallback>
 8006398:	e793      	b.n	80062c2 <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800639a:	f7ff ff51 	bl	8006240 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800639e:	4620      	mov	r0, r4
 80063a0:	f7ff ff50 	bl	8006244 <HAL_TIM_PWM_PulseFinishedCallback>
 80063a4:	e7a2      	b.n	80062ec <HAL_TIM_IRQHandler+0xa4>
}
 80063a6:	bd10      	pop	{r4, pc}

080063a8 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80063a8:	4a30      	ldr	r2, [pc, #192]	@ (800646c <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80063aa:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80063ac:	4290      	cmp	r0, r2
 80063ae:	d012      	beq.n	80063d6 <TIM_Base_SetConfig+0x2e>
 80063b0:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 80063b4:	d00f      	beq.n	80063d6 <TIM_Base_SetConfig+0x2e>
 80063b6:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80063ba:	4290      	cmp	r0, r2
 80063bc:	d00b      	beq.n	80063d6 <TIM_Base_SetConfig+0x2e>
 80063be:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80063c2:	4290      	cmp	r0, r2
 80063c4:	d007      	beq.n	80063d6 <TIM_Base_SetConfig+0x2e>
 80063c6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80063ca:	4290      	cmp	r0, r2
 80063cc:	d003      	beq.n	80063d6 <TIM_Base_SetConfig+0x2e>
 80063ce:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80063d2:	4290      	cmp	r0, r2
 80063d4:	d119      	bne.n	800640a <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80063d6:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80063d8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 80063dc:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80063de:	4a23      	ldr	r2, [pc, #140]	@ (800646c <TIM_Base_SetConfig+0xc4>)
 80063e0:	4290      	cmp	r0, r2
 80063e2:	d029      	beq.n	8006438 <TIM_Base_SetConfig+0x90>
 80063e4:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 80063e8:	d026      	beq.n	8006438 <TIM_Base_SetConfig+0x90>
 80063ea:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80063ee:	4290      	cmp	r0, r2
 80063f0:	d022      	beq.n	8006438 <TIM_Base_SetConfig+0x90>
 80063f2:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80063f6:	4290      	cmp	r0, r2
 80063f8:	d01e      	beq.n	8006438 <TIM_Base_SetConfig+0x90>
 80063fa:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80063fe:	4290      	cmp	r0, r2
 8006400:	d01a      	beq.n	8006438 <TIM_Base_SetConfig+0x90>
 8006402:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006406:	4290      	cmp	r0, r2
 8006408:	d016      	beq.n	8006438 <TIM_Base_SetConfig+0x90>
 800640a:	4a19      	ldr	r2, [pc, #100]	@ (8006470 <TIM_Base_SetConfig+0xc8>)
 800640c:	4290      	cmp	r0, r2
 800640e:	d013      	beq.n	8006438 <TIM_Base_SetConfig+0x90>
 8006410:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006414:	4290      	cmp	r0, r2
 8006416:	d00f      	beq.n	8006438 <TIM_Base_SetConfig+0x90>
 8006418:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800641c:	4290      	cmp	r0, r2
 800641e:	d00b      	beq.n	8006438 <TIM_Base_SetConfig+0x90>
 8006420:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 8006424:	4290      	cmp	r0, r2
 8006426:	d007      	beq.n	8006438 <TIM_Base_SetConfig+0x90>
 8006428:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800642c:	4290      	cmp	r0, r2
 800642e:	d003      	beq.n	8006438 <TIM_Base_SetConfig+0x90>
 8006430:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006434:	4290      	cmp	r0, r2
 8006436:	d103      	bne.n	8006440 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8006438:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800643c:	68ca      	ldr	r2, [r1, #12]
 800643e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006440:	694a      	ldr	r2, [r1, #20]
 8006442:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006446:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006448:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800644a:	688b      	ldr	r3, [r1, #8]
 800644c:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800644e:	680b      	ldr	r3, [r1, #0]
 8006450:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006452:	4b06      	ldr	r3, [pc, #24]	@ (800646c <TIM_Base_SetConfig+0xc4>)
 8006454:	4298      	cmp	r0, r3
 8006456:	d003      	beq.n	8006460 <TIM_Base_SetConfig+0xb8>
 8006458:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800645c:	4298      	cmp	r0, r3
 800645e:	d101      	bne.n	8006464 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006460:	690b      	ldr	r3, [r1, #16]
 8006462:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006464:	2301      	movs	r3, #1
 8006466:	6143      	str	r3, [r0, #20]
}
 8006468:	4770      	bx	lr
 800646a:	bf00      	nop
 800646c:	40010000 	.word	0x40010000
 8006470:	40014000 	.word	0x40014000

08006474 <HAL_TIM_Base_Init>:
{
 8006474:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006476:	4604      	mov	r4, r0
 8006478:	b350      	cbz	r0, 80064d0 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 800647a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800647e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006482:	b91b      	cbnz	r3, 800648c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006484:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006488:	f7ff fe9b 	bl	80061c2 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800648c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800648e:	6820      	ldr	r0, [r4, #0]
 8006490:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 8006492:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006496:	f7ff ff87 	bl	80063a8 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800649a:	2301      	movs	r3, #1
  return HAL_OK;
 800649c:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800649e:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80064a2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 80064a6:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 80064aa:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80064ae:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 80064b2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80064b6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80064ba:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 80064be:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 80064c2:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 80064c6:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 80064ca:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 80064ce:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80064d0:	2001      	movs	r0, #1
 80064d2:	e7fc      	b.n	80064ce <HAL_TIM_Base_Init+0x5a>

080064d4 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 80064d4:	4770      	bx	lr

080064d6 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 80064d6:	4770      	bx	lr

080064d8 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 80064d8:	4770      	bx	lr

080064da <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80064da:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80064dc:	e852 3f00 	ldrex	r3, [r2]
 80064e0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80064e4:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 80064e8:	6802      	ldr	r2, [r0, #0]
 80064ea:	2900      	cmp	r1, #0
 80064ec:	d1f5      	bne.n	80064da <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80064ee:	f102 0308 	add.w	r3, r2, #8
 80064f2:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80064f6:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80064fa:	f102 0c08 	add.w	ip, r2, #8
 80064fe:	e84c 3100 	strex	r1, r3, [ip]
 8006502:	2900      	cmp	r1, #0
 8006504:	d1f3      	bne.n	80064ee <UART_EndRxTransfer+0x14>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006506:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8006508:	2b01      	cmp	r3, #1
 800650a:	d107      	bne.n	800651c <UART_EndRxTransfer+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800650c:	e852 3f00 	ldrex	r3, [r2]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006510:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006514:	e842 3100 	strex	r1, r3, [r2]
 8006518:	2900      	cmp	r1, #0
 800651a:	d1f7      	bne.n	800650c <UART_EndRxTransfer+0x32>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800651c:	2320      	movs	r3, #32
 800651e:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006522:	2300      	movs	r3, #0
 8006524:	6603      	str	r3, [r0, #96]	@ 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 8006526:	6683      	str	r3, [r0, #104]	@ 0x68
}
 8006528:	4770      	bx	lr

0800652a <HAL_UART_TxCpltCallback>:
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
 800652a:	4770      	bx	lr

0800652c <HAL_UART_ErrorCallback>:
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
 800652c:	4770      	bx	lr

0800652e <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 800652e:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8006530:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->RxXferCount = 0U;
 8006532:	2300      	movs	r3, #0
 8006534:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
  huart->TxXferCount = 0U;
 8006538:	f8a0 3052 	strh.w	r3, [r0, #82]	@ 0x52
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 800653c:	f7ff fff6 	bl	800652c <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8006540:	bd08      	pop	{r3, pc}

08006542 <HAL_UARTEx_RxEventCallback>:
}
 8006542:	4770      	bx	lr

08006544 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8006544:	6803      	ldr	r3, [r0, #0]
{
 8006546:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8006548:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
 800654a:	f640 060f 	movw	r6, #2063	@ 0x80f
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 800654e:	6819      	ldr	r1, [r3, #0]
{
 8006550:	4604      	mov	r4, r0
  if (errorflags == 0U)
 8006552:	4232      	tst	r2, r6
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8006554:	689d      	ldr	r5, [r3, #8]
  if (errorflags == 0U)
 8006556:	d10b      	bne.n	8006570 <HAL_UART_IRQHandler+0x2c>
    if (((isrflags & USART_ISR_RXNE) != 0U)
 8006558:	0696      	lsls	r6, r2, #26
 800655a:	f140 8088 	bpl.w	800666e <HAL_UART_IRQHandler+0x12a>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 800655e:	068d      	lsls	r5, r1, #26
 8006560:	f140 8085 	bpl.w	800666e <HAL_UART_IRQHandler+0x12a>
      if (huart->RxISR != NULL)
 8006564:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8006566:	2b00      	cmp	r3, #0
 8006568:	d07b      	beq.n	8006662 <HAL_UART_IRQHandler+0x11e>
}
 800656a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
 800656e:	4718      	bx	r3
      && (((cr3its & USART_CR3_EIE) != 0U)
 8006570:	f005 0001 	and.w	r0, r5, #1
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 8006574:	4d93      	ldr	r5, [pc, #588]	@ (80067c4 <HAL_UART_IRQHandler+0x280>)
 8006576:	400d      	ands	r5, r1
 8006578:	4305      	orrs	r5, r0
 800657a:	d078      	beq.n	800666e <HAL_UART_IRQHandler+0x12a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 800657c:	07d6      	lsls	r6, r2, #31
 800657e:	d509      	bpl.n	8006594 <HAL_UART_IRQHandler+0x50>
 8006580:	05cd      	lsls	r5, r1, #23
 8006582:	d507      	bpl.n	8006594 <HAL_UART_IRQHandler+0x50>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8006584:	2501      	movs	r5, #1
 8006586:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8006588:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 800658c:	f045 0501 	orr.w	r5, r5, #1
 8006590:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8006594:	0796      	lsls	r6, r2, #30
 8006596:	d508      	bpl.n	80065aa <HAL_UART_IRQHandler+0x66>
 8006598:	b138      	cbz	r0, 80065aa <HAL_UART_IRQHandler+0x66>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 800659a:	2502      	movs	r5, #2
 800659c:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 800659e:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 80065a2:	f045 0504 	orr.w	r5, r5, #4
 80065a6:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80065aa:	0755      	lsls	r5, r2, #29
 80065ac:	d508      	bpl.n	80065c0 <HAL_UART_IRQHandler+0x7c>
 80065ae:	b138      	cbz	r0, 80065c0 <HAL_UART_IRQHandler+0x7c>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 80065b0:	2504      	movs	r5, #4
 80065b2:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 80065b4:	f8d4 5084 	ldr.w	r5, [r4, #132]	@ 0x84
 80065b8:	f045 0502 	orr.w	r5, r5, #2
 80065bc:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_ORE) != 0U)
 80065c0:	0716      	lsls	r6, r2, #28
 80065c2:	d50b      	bpl.n	80065dc <HAL_UART_IRQHandler+0x98>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 80065c4:	f001 0520 	and.w	r5, r1, #32
 80065c8:	4305      	orrs	r5, r0
 80065ca:	d007      	beq.n	80065dc <HAL_UART_IRQHandler+0x98>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 80065cc:	2008      	movs	r0, #8
 80065ce:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80065d0:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
 80065d4:	f040 0008 	orr.w	r0, r0, #8
 80065d8:	f8c4 0084 	str.w	r0, [r4, #132]	@ 0x84
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 80065dc:	0515      	lsls	r5, r2, #20
 80065de:	d50a      	bpl.n	80065f6 <HAL_UART_IRQHandler+0xb2>
 80065e0:	0148      	lsls	r0, r1, #5
 80065e2:	d508      	bpl.n	80065f6 <HAL_UART_IRQHandler+0xb2>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80065e4:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80065e8:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 80065ea:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 80065ee:	f043 0320 	orr.w	r3, r3, #32
 80065f2:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80065f6:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 80065fa:	2b00      	cmp	r3, #0
 80065fc:	d031      	beq.n	8006662 <HAL_UART_IRQHandler+0x11e>
      if (((isrflags & USART_ISR_RXNE) != 0U)
 80065fe:	0692      	lsls	r2, r2, #26
 8006600:	d505      	bpl.n	800660e <HAL_UART_IRQHandler+0xca>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8006602:	068b      	lsls	r3, r1, #26
 8006604:	d503      	bpl.n	800660e <HAL_UART_IRQHandler+0xca>
        if (huart->RxISR != NULL)
 8006606:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 8006608:	b10b      	cbz	r3, 800660e <HAL_UART_IRQHandler+0xca>
          huart->RxISR(huart);
 800660a:	4620      	mov	r0, r4
 800660c:	4798      	blx	r3
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 800660e:	6826      	ldr	r6, [r4, #0]
        UART_EndRxTransfer(huart);
 8006610:	4620      	mov	r0, r4
      errorcode = huart->ErrorCode;
 8006612:	f8d4 2084 	ldr.w	r2, [r4, #132]	@ 0x84
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8006616:	68b3      	ldr	r3, [r6, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 8006618:	f002 0228 	and.w	r2, r2, #40	@ 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 800661c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006620:	ea53 0502 	orrs.w	r5, r3, r2
 8006624:	d01e      	beq.n	8006664 <HAL_UART_IRQHandler+0x120>
        UART_EndRxTransfer(huart);
 8006626:	f7ff ff58 	bl	80064da <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800662a:	68b3      	ldr	r3, [r6, #8]
 800662c:	065e      	lsls	r6, r3, #25
 800662e:	d515      	bpl.n	800665c <HAL_UART_IRQHandler+0x118>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8006630:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006632:	f102 0308 	add.w	r3, r2, #8
 8006636:	e853 3f00 	ldrex	r3, [r3]
 800663a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800663e:	3208      	adds	r2, #8
 8006640:	e842 3100 	strex	r1, r3, [r2]
 8006644:	2900      	cmp	r1, #0
 8006646:	d1f3      	bne.n	8006630 <HAL_UART_IRQHandler+0xec>
          if (huart->hdmarx != NULL)
 8006648:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 800664a:	b138      	cbz	r0, 800665c <HAL_UART_IRQHandler+0x118>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 800664c:	4b5e      	ldr	r3, [pc, #376]	@ (80067c8 <HAL_UART_IRQHandler+0x284>)
 800664e:	6503      	str	r3, [r0, #80]	@ 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8006650:	f7fd fceb 	bl	800402a <HAL_DMA_Abort_IT>
 8006654:	b128      	cbz	r0, 8006662 <HAL_UART_IRQHandler+0x11e>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8006656:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8006658:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 800665a:	e786      	b.n	800656a <HAL_UART_IRQHandler+0x26>
            HAL_UART_ErrorCallback(huart);
 800665c:	4620      	mov	r0, r4
 800665e:	f7ff ff65 	bl	800652c <HAL_UART_ErrorCallback>
}
 8006662:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_ErrorCallback(huart);
 8006664:	f7ff ff62 	bl	800652c <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006668:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
 800666c:	e7f9      	b.n	8006662 <HAL_UART_IRQHandler+0x11e>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800666e:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8006670:	2801      	cmp	r0, #1
 8006672:	f040 8088 	bne.w	8006786 <HAL_UART_IRQHandler+0x242>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 8006676:	06d5      	lsls	r5, r2, #27
 8006678:	f140 8085 	bpl.w	8006786 <HAL_UART_IRQHandler+0x242>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 800667c:	06c8      	lsls	r0, r1, #27
 800667e:	f140 8082 	bpl.w	8006786 <HAL_UART_IRQHandler+0x242>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8006682:	2210      	movs	r2, #16
 8006684:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8006686:	689a      	ldr	r2, [r3, #8]
 8006688:	0652      	lsls	r2, r2, #25
 800668a:	d54a      	bpl.n	8006722 <HAL_UART_IRQHandler+0x1de>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 800668c:	6f61      	ldr	r1, [r4, #116]	@ 0x74
 800668e:	680a      	ldr	r2, [r1, #0]
 8006690:	6852      	ldr	r2, [r2, #4]
 8006692:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
 8006694:	2a00      	cmp	r2, #0
 8006696:	d0e4      	beq.n	8006662 <HAL_UART_IRQHandler+0x11e>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8006698:	f8b4 0058 	ldrh.w	r0, [r4, #88]	@ 0x58
 800669c:	4290      	cmp	r0, r2
 800669e:	d9e0      	bls.n	8006662 <HAL_UART_IRQHandler+0x11e>
        huart->RxXferCount = nb_remaining_rx_data;
 80066a0:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 80066a4:	69ca      	ldr	r2, [r1, #28]
 80066a6:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 80066aa:	d02e      	beq.n	800670a <HAL_UART_IRQHandler+0x1c6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80066ac:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 80066b0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80066b4:	e843 2100 	strex	r1, r2, [r3]
 80066b8:	2900      	cmp	r1, #0
 80066ba:	d1f7      	bne.n	80066ac <HAL_UART_IRQHandler+0x168>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80066bc:	f103 0208 	add.w	r2, r3, #8
 80066c0:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80066c4:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80066c8:	f103 0008 	add.w	r0, r3, #8
 80066cc:	e840 2100 	strex	r1, r2, [r0]
 80066d0:	2900      	cmp	r1, #0
 80066d2:	d1f3      	bne.n	80066bc <HAL_UART_IRQHandler+0x178>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80066d4:	f103 0208 	add.w	r2, r3, #8
 80066d8:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80066dc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80066e0:	f103 0008 	add.w	r0, r3, #8
 80066e4:	e840 2100 	strex	r1, r2, [r0]
 80066e8:	2900      	cmp	r1, #0
 80066ea:	d1f3      	bne.n	80066d4 <HAL_UART_IRQHandler+0x190>
          huart->RxState = HAL_UART_STATE_READY;
 80066ec:	2220      	movs	r2, #32
 80066ee:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80066f2:	6621      	str	r1, [r4, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80066f4:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80066f8:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80066fc:	e843 2100 	strex	r1, r2, [r3]
 8006700:	2900      	cmp	r1, #0
 8006702:	d1f7      	bne.n	80066f4 <HAL_UART_IRQHandler+0x1b0>
          (void)HAL_DMA_Abort(huart->hdmarx);
 8006704:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 8006706:	f7fd fc52 	bl	8003fae <HAL_DMA_Abort>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 800670a:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 800670c:	f8b4 1058 	ldrh.w	r1, [r4, #88]	@ 0x58
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8006710:	6663      	str	r3, [r4, #100]	@ 0x64
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8006712:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 8006716:	1ac9      	subs	r1, r1, r3
 8006718:	b289      	uxth	r1, r1
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 800671a:	4620      	mov	r0, r4
 800671c:	f7ff ff11 	bl	8006542 <HAL_UARTEx_RxEventCallback>
 8006720:	e79f      	b.n	8006662 <HAL_UART_IRQHandler+0x11e>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8006722:	f8b4 205a 	ldrh.w	r2, [r4, #90]	@ 0x5a
      if ((huart->RxXferCount > 0U)
 8006726:	f8b4 005a 	ldrh.w	r0, [r4, #90]	@ 0x5a
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 800672a:	f8b4 1058 	ldrh.w	r1, [r4, #88]	@ 0x58
 800672e:	b292      	uxth	r2, r2
      if ((huart->RxXferCount > 0U)
 8006730:	b280      	uxth	r0, r0
 8006732:	2800      	cmp	r0, #0
 8006734:	d095      	beq.n	8006662 <HAL_UART_IRQHandler+0x11e>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8006736:	1a89      	subs	r1, r1, r2
 8006738:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
 800673a:	2900      	cmp	r1, #0
 800673c:	d091      	beq.n	8006662 <HAL_UART_IRQHandler+0x11e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800673e:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006742:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006746:	e843 2000 	strex	r0, r2, [r3]
 800674a:	2800      	cmp	r0, #0
 800674c:	d1f7      	bne.n	800673e <HAL_UART_IRQHandler+0x1fa>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800674e:	f103 0208 	add.w	r2, r3, #8
 8006752:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006756:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800675a:	f103 0508 	add.w	r5, r3, #8
 800675e:	e845 2000 	strex	r0, r2, [r5]
 8006762:	2800      	cmp	r0, #0
 8006764:	d1f3      	bne.n	800674e <HAL_UART_IRQHandler+0x20a>
        huart->RxState = HAL_UART_STATE_READY;
 8006766:	2220      	movs	r2, #32
        huart->RxISR = NULL;
 8006768:	66a0      	str	r0, [r4, #104]	@ 0x68
        huart->RxState = HAL_UART_STATE_READY;
 800676a:	f8c4 2080 	str.w	r2, [r4, #128]	@ 0x80
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800676e:	6620      	str	r0, [r4, #96]	@ 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006770:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006774:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006778:	e843 2000 	strex	r0, r2, [r3]
 800677c:	2800      	cmp	r0, #0
 800677e:	d1f7      	bne.n	8006770 <HAL_UART_IRQHandler+0x22c>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8006780:	2302      	movs	r3, #2
 8006782:	6663      	str	r3, [r4, #100]	@ 0x64
 8006784:	e7c9      	b.n	800671a <HAL_UART_IRQHandler+0x1d6>
  if (((isrflags & USART_ISR_TXE) != 0U)
 8006786:	0616      	lsls	r6, r2, #24
 8006788:	d507      	bpl.n	800679a <HAL_UART_IRQHandler+0x256>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 800678a:	060d      	lsls	r5, r1, #24
 800678c:	d505      	bpl.n	800679a <HAL_UART_IRQHandler+0x256>
    if (huart->TxISR != NULL)
 800678e:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 8006790:	2b00      	cmp	r3, #0
 8006792:	f43f af66 	beq.w	8006662 <HAL_UART_IRQHandler+0x11e>
      huart->TxISR(huart);
 8006796:	4620      	mov	r0, r4
 8006798:	e6e7      	b.n	800656a <HAL_UART_IRQHandler+0x26>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 800679a:	0650      	lsls	r0, r2, #25
 800679c:	f57f af61 	bpl.w	8006662 <HAL_UART_IRQHandler+0x11e>
 80067a0:	064a      	lsls	r2, r1, #25
 80067a2:	f57f af5e 	bpl.w	8006662 <HAL_UART_IRQHandler+0x11e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80067a6:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 80067aa:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80067ae:	e843 2100 	strex	r1, r2, [r3]
 80067b2:	2900      	cmp	r1, #0
 80067b4:	d1f7      	bne.n	80067a6 <HAL_UART_IRQHandler+0x262>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 80067b6:	2320      	movs	r3, #32
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 80067b8:	4620      	mov	r0, r4
  huart->TxISR = NULL;
 80067ba:	66e1      	str	r1, [r4, #108]	@ 0x6c
  huart->gState = HAL_UART_STATE_READY;
 80067bc:	67e3      	str	r3, [r4, #124]	@ 0x7c
  HAL_UART_TxCpltCallback(huart);
 80067be:	f7ff feb4 	bl	800652a <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80067c2:	e74e      	b.n	8006662 <HAL_UART_IRQHandler+0x11e>
 80067c4:	04000120 	.word	0x04000120
 80067c8:	0800652f 	.word	0x0800652f

080067cc <UART_SetConfig>:
{
 80067cc:	b538      	push	{r3, r4, r5, lr}
 80067ce:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80067d0:	69c0      	ldr	r0, [r0, #28]
 80067d2:	6921      	ldr	r1, [r4, #16]
 80067d4:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80067d6:	6823      	ldr	r3, [r4, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80067d8:	430a      	orrs	r2, r1
 80067da:	6961      	ldr	r1, [r4, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80067dc:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80067de:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80067e0:	497d      	ldr	r1, [pc, #500]	@ (80069d8 <UART_SetConfig+0x20c>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80067e2:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80067e4:	4029      	ands	r1, r5
  tmpreg |= huart->Init.OneBitSampling;
 80067e6:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80067e8:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80067ea:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80067ec:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80067ee:	685a      	ldr	r2, [r3, #4]
 80067f0:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 80067f4:	430a      	orrs	r2, r1
 80067f6:	605a      	str	r2, [r3, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 80067f8:	69a2      	ldr	r2, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80067fa:	6899      	ldr	r1, [r3, #8]
  tmpreg |= huart->Init.OneBitSampling;
 80067fc:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80067fe:	f421 6130 	bic.w	r1, r1, #2816	@ 0xb00
 8006802:	430a      	orrs	r2, r1
 8006804:	609a      	str	r2, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8006806:	4a75      	ldr	r2, [pc, #468]	@ (80069dc <UART_SetConfig+0x210>)
 8006808:	4293      	cmp	r3, r2
 800680a:	d113      	bne.n	8006834 <UART_SetConfig+0x68>
 800680c:	4b74      	ldr	r3, [pc, #464]	@ (80069e0 <UART_SetConfig+0x214>)
 800680e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006812:	f003 0303 	and.w	r3, r3, #3
 8006816:	2b02      	cmp	r3, #2
 8006818:	f000 80a8 	beq.w	800696c <UART_SetConfig+0x1a0>
 800681c:	2b03      	cmp	r3, #3
 800681e:	d021      	beq.n	8006864 <UART_SetConfig+0x98>
 8006820:	2b01      	cmp	r3, #1
 8006822:	f040 80bd 	bne.w	80069a0 <UART_SetConfig+0x1d4>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006826:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800682a:	f040 809c 	bne.w	8006966 <UART_SetConfig+0x19a>
        pclk = HAL_RCC_GetSysClockFreq();
 800682e:	f7ff f8dd 	bl	80059ec <HAL_RCC_GetSysClockFreq>
        break;
 8006832:	e092      	b.n	800695a <UART_SetConfig+0x18e>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8006834:	4a6b      	ldr	r2, [pc, #428]	@ (80069e4 <UART_SetConfig+0x218>)
 8006836:	4293      	cmp	r3, r2
 8006838:	d11b      	bne.n	8006872 <UART_SetConfig+0xa6>
 800683a:	4b69      	ldr	r3, [pc, #420]	@ (80069e0 <UART_SetConfig+0x214>)
 800683c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006840:	f003 030c 	and.w	r3, r3, #12
 8006844:	2b08      	cmp	r3, #8
 8006846:	f000 8091 	beq.w	800696c <UART_SetConfig+0x1a0>
 800684a:	d809      	bhi.n	8006860 <UART_SetConfig+0x94>
 800684c:	2b00      	cmp	r3, #0
 800684e:	f000 80ad 	beq.w	80069ac <UART_SetConfig+0x1e0>
 8006852:	2b04      	cmp	r3, #4
 8006854:	d0e7      	beq.n	8006826 <UART_SetConfig+0x5a>
        ret = HAL_ERROR;
 8006856:	2001      	movs	r0, #1
  huart->RxISR = NULL;
 8006858:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 800685a:	e9c4 331a 	strd	r3, r3, [r4, #104]	@ 0x68
}
 800685e:	bd38      	pop	{r3, r4, r5, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 8006860:	2b0c      	cmp	r3, #12
 8006862:	d1f8      	bne.n	8006856 <UART_SetConfig+0x8a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006864:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8006868:	f000 8084 	beq.w	8006974 <UART_SetConfig+0x1a8>
        pclk = (uint32_t) LSE_VALUE;
 800686c:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 8006870:	e0a3      	b.n	80069ba <UART_SetConfig+0x1ee>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8006872:	4a5d      	ldr	r2, [pc, #372]	@ (80069e8 <UART_SetConfig+0x21c>)
 8006874:	4293      	cmp	r3, r2
 8006876:	d10e      	bne.n	8006896 <UART_SetConfig+0xca>
 8006878:	4b59      	ldr	r3, [pc, #356]	@ (80069e0 <UART_SetConfig+0x214>)
 800687a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800687e:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8006882:	2b20      	cmp	r3, #32
 8006884:	d072      	beq.n	800696c <UART_SetConfig+0x1a0>
 8006886:	d804      	bhi.n	8006892 <UART_SetConfig+0xc6>
 8006888:	2b00      	cmp	r3, #0
 800688a:	f000 808f 	beq.w	80069ac <UART_SetConfig+0x1e0>
 800688e:	2b10      	cmp	r3, #16
 8006890:	e7e0      	b.n	8006854 <UART_SetConfig+0x88>
 8006892:	2b30      	cmp	r3, #48	@ 0x30
 8006894:	e7e5      	b.n	8006862 <UART_SetConfig+0x96>
 8006896:	4a55      	ldr	r2, [pc, #340]	@ (80069ec <UART_SetConfig+0x220>)
 8006898:	4293      	cmp	r3, r2
 800689a:	d10d      	bne.n	80068b8 <UART_SetConfig+0xec>
 800689c:	4b50      	ldr	r3, [pc, #320]	@ (80069e0 <UART_SetConfig+0x214>)
 800689e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80068a2:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 80068a6:	2b80      	cmp	r3, #128	@ 0x80
 80068a8:	d060      	beq.n	800696c <UART_SetConfig+0x1a0>
 80068aa:	d803      	bhi.n	80068b4 <UART_SetConfig+0xe8>
 80068ac:	2b00      	cmp	r3, #0
 80068ae:	d07d      	beq.n	80069ac <UART_SetConfig+0x1e0>
 80068b0:	2b40      	cmp	r3, #64	@ 0x40
 80068b2:	e7cf      	b.n	8006854 <UART_SetConfig+0x88>
 80068b4:	2bc0      	cmp	r3, #192	@ 0xc0
 80068b6:	e7d4      	b.n	8006862 <UART_SetConfig+0x96>
 80068b8:	4a4d      	ldr	r2, [pc, #308]	@ (80069f0 <UART_SetConfig+0x224>)
 80068ba:	4293      	cmp	r3, r2
 80068bc:	d110      	bne.n	80068e0 <UART_SetConfig+0x114>
 80068be:	4b48      	ldr	r3, [pc, #288]	@ (80069e0 <UART_SetConfig+0x214>)
 80068c0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80068c4:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80068c8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80068cc:	d04e      	beq.n	800696c <UART_SetConfig+0x1a0>
 80068ce:	d804      	bhi.n	80068da <UART_SetConfig+0x10e>
 80068d0:	2b00      	cmp	r3, #0
 80068d2:	d06b      	beq.n	80069ac <UART_SetConfig+0x1e0>
 80068d4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80068d8:	e7bc      	b.n	8006854 <UART_SetConfig+0x88>
 80068da:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80068de:	e7c0      	b.n	8006862 <UART_SetConfig+0x96>
 80068e0:	4a44      	ldr	r2, [pc, #272]	@ (80069f4 <UART_SetConfig+0x228>)
 80068e2:	4293      	cmp	r3, r2
 80068e4:	d110      	bne.n	8006908 <UART_SetConfig+0x13c>
 80068e6:	4b3e      	ldr	r3, [pc, #248]	@ (80069e0 <UART_SetConfig+0x214>)
 80068e8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80068ec:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 80068f0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80068f4:	d03a      	beq.n	800696c <UART_SetConfig+0x1a0>
 80068f6:	d804      	bhi.n	8006902 <UART_SetConfig+0x136>
 80068f8:	2b00      	cmp	r3, #0
 80068fa:	d051      	beq.n	80069a0 <UART_SetConfig+0x1d4>
 80068fc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006900:	e7a8      	b.n	8006854 <UART_SetConfig+0x88>
 8006902:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8006906:	e7ac      	b.n	8006862 <UART_SetConfig+0x96>
 8006908:	4a3b      	ldr	r2, [pc, #236]	@ (80069f8 <UART_SetConfig+0x22c>)
 800690a:	4293      	cmp	r3, r2
 800690c:	d110      	bne.n	8006930 <UART_SetConfig+0x164>
 800690e:	4b34      	ldr	r3, [pc, #208]	@ (80069e0 <UART_SetConfig+0x214>)
 8006910:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006914:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 8006918:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800691c:	d026      	beq.n	800696c <UART_SetConfig+0x1a0>
 800691e:	d804      	bhi.n	800692a <UART_SetConfig+0x15e>
 8006920:	2b00      	cmp	r3, #0
 8006922:	d043      	beq.n	80069ac <UART_SetConfig+0x1e0>
 8006924:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006928:	e794      	b.n	8006854 <UART_SetConfig+0x88>
 800692a:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800692e:	e798      	b.n	8006862 <UART_SetConfig+0x96>
 8006930:	4a32      	ldr	r2, [pc, #200]	@ (80069fc <UART_SetConfig+0x230>)
 8006932:	4293      	cmp	r3, r2
 8006934:	d18f      	bne.n	8006856 <UART_SetConfig+0x8a>
 8006936:	4b2a      	ldr	r3, [pc, #168]	@ (80069e0 <UART_SetConfig+0x214>)
 8006938:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800693c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8006940:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006944:	d012      	beq.n	800696c <UART_SetConfig+0x1a0>
 8006946:	d803      	bhi.n	8006950 <UART_SetConfig+0x184>
 8006948:	b383      	cbz	r3, 80069ac <UART_SetConfig+0x1e0>
 800694a:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800694e:	e781      	b.n	8006854 <UART_SetConfig+0x88>
 8006950:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 8006954:	e785      	b.n	8006862 <UART_SetConfig+0x96>
        pclk = HAL_RCC_GetPCLK1Freq();
 8006956:	f7ff f915 	bl	8005b84 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 800695a:	b958      	cbnz	r0, 8006974 <UART_SetConfig+0x1a8>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800695c:	2000      	movs	r0, #0
 800695e:	e77b      	b.n	8006858 <UART_SetConfig+0x8c>
        pclk = HAL_RCC_GetPCLK2Freq();
 8006960:	f7ff f920 	bl	8005ba4 <HAL_RCC_GetPCLK2Freq>
        break;
 8006964:	e027      	b.n	80069b6 <UART_SetConfig+0x1ea>
        pclk = HAL_RCC_GetSysClockFreq();
 8006966:	f7ff f841 	bl	80059ec <HAL_RCC_GetSysClockFreq>
        break;
 800696a:	e024      	b.n	80069b6 <UART_SetConfig+0x1ea>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800696c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) HSI_VALUE;
 8006970:	4823      	ldr	r0, [pc, #140]	@ (8006a00 <UART_SetConfig+0x234>)
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006972:	d122      	bne.n	80069ba <UART_SetConfig+0x1ee>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8006974:	6862      	ldr	r2, [r4, #4]
 8006976:	0853      	lsrs	r3, r2, #1
 8006978:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 800697c:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8006980:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 8006984:	f1a3 0110 	sub.w	r1, r3, #16
 8006988:	4291      	cmp	r1, r2
 800698a:	f63f af64 	bhi.w	8006856 <UART_SetConfig+0x8a>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 800698e:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8006992:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
 8006996:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8006998:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
 800699a:	4313      	orrs	r3, r2
 800699c:	60cb      	str	r3, [r1, #12]
 800699e:	e7dd      	b.n	800695c <UART_SetConfig+0x190>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80069a0:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 80069a4:	d1dc      	bne.n	8006960 <UART_SetConfig+0x194>
        pclk = HAL_RCC_GetPCLK2Freq();
 80069a6:	f7ff f8fd 	bl	8005ba4 <HAL_RCC_GetPCLK2Freq>
        break;
 80069aa:	e7d6      	b.n	800695a <UART_SetConfig+0x18e>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80069ac:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 80069b0:	d0d1      	beq.n	8006956 <UART_SetConfig+0x18a>
        pclk = HAL_RCC_GetPCLK1Freq();
 80069b2:	f7ff f8e7 	bl	8005b84 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 80069b6:	2800      	cmp	r0, #0
 80069b8:	d0d0      	beq.n	800695c <UART_SetConfig+0x190>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 80069ba:	6862      	ldr	r2, [r4, #4]
 80069bc:	eb00 0352 	add.w	r3, r0, r2, lsr #1
 80069c0:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80069c4:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 80069c8:	f1a3 0110 	sub.w	r1, r3, #16
 80069cc:	4291      	cmp	r1, r2
 80069ce:	f63f af42 	bhi.w	8006856 <UART_SetConfig+0x8a>
        huart->Instance->BRR = (uint16_t)usartdiv;
 80069d2:	6822      	ldr	r2, [r4, #0]
 80069d4:	60d3      	str	r3, [r2, #12]
 80069d6:	e7c1      	b.n	800695c <UART_SetConfig+0x190>
 80069d8:	efff69f3 	.word	0xefff69f3
 80069dc:	40011000 	.word	0x40011000
 80069e0:	40023800 	.word	0x40023800
 80069e4:	40004400 	.word	0x40004400
 80069e8:	40004800 	.word	0x40004800
 80069ec:	40004c00 	.word	0x40004c00
 80069f0:	40005000 	.word	0x40005000
 80069f4:	40011400 	.word	0x40011400
 80069f8:	40007800 	.word	0x40007800
 80069fc:	40007c00 	.word	0x40007c00
 8006a00:	00f42400 	.word	0x00f42400

08006a04 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8006a04:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8006a06:	07da      	lsls	r2, r3, #31
{
 8006a08:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8006a0a:	d506      	bpl.n	8006a1a <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8006a0c:	6801      	ldr	r1, [r0, #0]
 8006a0e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8006a10:	684a      	ldr	r2, [r1, #4]
 8006a12:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
 8006a16:	4322      	orrs	r2, r4
 8006a18:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8006a1a:	079c      	lsls	r4, r3, #30
 8006a1c:	d506      	bpl.n	8006a2c <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8006a1e:	6801      	ldr	r1, [r0, #0]
 8006a20:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 8006a22:	684a      	ldr	r2, [r1, #4]
 8006a24:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8006a28:	4322      	orrs	r2, r4
 8006a2a:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8006a2c:	0759      	lsls	r1, r3, #29
 8006a2e:	d506      	bpl.n	8006a3e <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8006a30:	6801      	ldr	r1, [r0, #0]
 8006a32:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 8006a34:	684a      	ldr	r2, [r1, #4]
 8006a36:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8006a3a:	4322      	orrs	r2, r4
 8006a3c:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8006a3e:	071a      	lsls	r2, r3, #28
 8006a40:	d506      	bpl.n	8006a50 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8006a42:	6801      	ldr	r1, [r0, #0]
 8006a44:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 8006a46:	684a      	ldr	r2, [r1, #4]
 8006a48:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8006a4c:	4322      	orrs	r2, r4
 8006a4e:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8006a50:	06dc      	lsls	r4, r3, #27
 8006a52:	d506      	bpl.n	8006a62 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8006a54:	6801      	ldr	r1, [r0, #0]
 8006a56:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8006a58:	688a      	ldr	r2, [r1, #8]
 8006a5a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8006a5e:	4322      	orrs	r2, r4
 8006a60:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8006a62:	0699      	lsls	r1, r3, #26
 8006a64:	d506      	bpl.n	8006a74 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8006a66:	6801      	ldr	r1, [r0, #0]
 8006a68:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8006a6a:	688a      	ldr	r2, [r1, #8]
 8006a6c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006a70:	4322      	orrs	r2, r4
 8006a72:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8006a74:	065a      	lsls	r2, r3, #25
 8006a76:	d510      	bpl.n	8006a9a <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8006a78:	6801      	ldr	r1, [r0, #0]
 8006a7a:	6c04      	ldr	r4, [r0, #64]	@ 0x40
 8006a7c:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8006a7e:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8006a82:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 8006a86:	ea42 0204 	orr.w	r2, r2, r4
 8006a8a:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8006a8c:	d105      	bne.n	8006a9a <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8006a8e:	684a      	ldr	r2, [r1, #4]
 8006a90:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 8006a92:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
 8006a96:	4322      	orrs	r2, r4
 8006a98:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8006a9a:	061b      	lsls	r3, r3, #24
 8006a9c:	d506      	bpl.n	8006aac <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8006a9e:	6802      	ldr	r2, [r0, #0]
 8006aa0:	6c81      	ldr	r1, [r0, #72]	@ 0x48
 8006aa2:	6853      	ldr	r3, [r2, #4]
 8006aa4:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 8006aa8:	430b      	orrs	r3, r1
 8006aaa:	6053      	str	r3, [r2, #4]
}
 8006aac:	bd10      	pop	{r4, pc}

08006aae <UART_WaitOnFlagUntilTimeout>:
{
 8006aae:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006ab2:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006ab6:	4605      	mov	r5, r0
 8006ab8:	460f      	mov	r7, r1
 8006aba:	4616      	mov	r6, r2
 8006abc:	4698      	mov	r8, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8006abe:	682a      	ldr	r2, [r5, #0]
 8006ac0:	69d3      	ldr	r3, [r2, #28]
 8006ac2:	ea37 0303 	bics.w	r3, r7, r3
 8006ac6:	bf0c      	ite	eq
 8006ac8:	2301      	moveq	r3, #1
 8006aca:	2300      	movne	r3, #0
 8006acc:	42b3      	cmp	r3, r6
 8006ace:	d001      	beq.n	8006ad4 <UART_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
 8006ad0:	2000      	movs	r0, #0
 8006ad2:	e028      	b.n	8006b26 <UART_WaitOnFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
 8006ad4:	f1b9 3fff 	cmp.w	r9, #4294967295
 8006ad8:	d0f2      	beq.n	8006ac0 <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006ada:	f7fd f943 	bl	8003d64 <HAL_GetTick>
 8006ade:	eba0 0008 	sub.w	r0, r0, r8
 8006ae2:	682c      	ldr	r4, [r5, #0]
 8006ae4:	4548      	cmp	r0, r9
 8006ae6:	d802      	bhi.n	8006aee <UART_WaitOnFlagUntilTimeout+0x40>
 8006ae8:	f1b9 0f00 	cmp.w	r9, #0
 8006aec:	d11d      	bne.n	8006b2a <UART_WaitOnFlagUntilTimeout+0x7c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006aee:	e854 3f00 	ldrex	r3, [r4]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8006af2:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006af6:	e844 3200 	strex	r2, r3, [r4]
 8006afa:	2a00      	cmp	r2, #0
 8006afc:	d1f7      	bne.n	8006aee <UART_WaitOnFlagUntilTimeout+0x40>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006afe:	f104 0308 	add.w	r3, r4, #8
 8006b02:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006b06:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006b0a:	f104 0108 	add.w	r1, r4, #8
 8006b0e:	e841 3200 	strex	r2, r3, [r1]
 8006b12:	2a00      	cmp	r2, #0
 8006b14:	d1f3      	bne.n	8006afe <UART_WaitOnFlagUntilTimeout+0x50>
        huart->gState = HAL_UART_STATE_READY;
 8006b16:	2320      	movs	r3, #32
 8006b18:	67eb      	str	r3, [r5, #124]	@ 0x7c
        huart->RxState = HAL_UART_STATE_READY;
 8006b1a:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
          __HAL_UNLOCK(huart);
 8006b1e:	2300      	movs	r3, #0
        return HAL_TIMEOUT;
 8006b20:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 8006b22:	f885 3078 	strb.w	r3, [r5, #120]	@ 0x78
}
 8006b26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8006b2a:	6823      	ldr	r3, [r4, #0]
 8006b2c:	075a      	lsls	r2, r3, #29
 8006b2e:	d5c6      	bpl.n	8006abe <UART_WaitOnFlagUntilTimeout+0x10>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8006b30:	69e3      	ldr	r3, [r4, #28]
 8006b32:	051b      	lsls	r3, r3, #20
 8006b34:	d5c3      	bpl.n	8006abe <UART_WaitOnFlagUntilTimeout+0x10>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8006b36:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8006b3a:	6223      	str	r3, [r4, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006b3c:	e854 3f00 	ldrex	r3, [r4]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8006b40:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006b44:	e844 3200 	strex	r2, r3, [r4]
 8006b48:	2a00      	cmp	r2, #0
 8006b4a:	d1f7      	bne.n	8006b3c <UART_WaitOnFlagUntilTimeout+0x8e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006b4c:	f104 0308 	add.w	r3, r4, #8
 8006b50:	e853 3f00 	ldrex	r3, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006b54:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006b58:	f104 0108 	add.w	r1, r4, #8
 8006b5c:	e841 3200 	strex	r2, r3, [r1]
 8006b60:	2a00      	cmp	r2, #0
 8006b62:	d1f3      	bne.n	8006b4c <UART_WaitOnFlagUntilTimeout+0x9e>
          huart->gState = HAL_UART_STATE_READY;
 8006b64:	2320      	movs	r3, #32
 8006b66:	67eb      	str	r3, [r5, #124]	@ 0x7c
          huart->RxState = HAL_UART_STATE_READY;
 8006b68:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8006b6c:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
          return HAL_TIMEOUT;
 8006b70:	e7d5      	b.n	8006b1e <UART_WaitOnFlagUntilTimeout+0x70>

08006b72 <HAL_UART_Transmit>:
{
 8006b72:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006b76:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8006b78:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
{
 8006b7a:	4604      	mov	r4, r0
 8006b7c:	460e      	mov	r6, r1
  if (huart->gState == HAL_UART_STATE_READY)
 8006b7e:	2b20      	cmp	r3, #32
{
 8006b80:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8006b82:	d141      	bne.n	8006c08 <HAL_UART_Transmit+0x96>
    if ((pData == NULL) || (Size == 0U))
 8006b84:	2900      	cmp	r1, #0
 8006b86:	d041      	beq.n	8006c0c <HAL_UART_Transmit+0x9a>
 8006b88:	2a00      	cmp	r2, #0
 8006b8a:	d03f      	beq.n	8006c0c <HAL_UART_Transmit+0x9a>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006b8c:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006b8e:	2500      	movs	r5, #0
 8006b90:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006b94:	67c3      	str	r3, [r0, #124]	@ 0x7c
    tickstart = HAL_GetTick();
 8006b96:	f7fd f8e5 	bl	8003d64 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006b9a:	68a3      	ldr	r3, [r4, #8]
    tickstart = HAL_GetTick();
 8006b9c:	4681      	mov	r9, r0
    huart->TxXferSize  = Size;
 8006b9e:	f8a4 7050 	strh.w	r7, [r4, #80]	@ 0x50
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006ba2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->TxXferCount = Size;
 8006ba6:	f8a4 7052 	strh.w	r7, [r4, #82]	@ 0x52
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006baa:	d103      	bne.n	8006bb4 <HAL_UART_Transmit+0x42>
 8006bac:	6923      	ldr	r3, [r4, #16]
 8006bae:	b90b      	cbnz	r3, 8006bb4 <HAL_UART_Transmit+0x42>
 8006bb0:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 8006bb2:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 8006bb4:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006bb8:	464b      	mov	r3, r9
 8006bba:	f8cd 8000 	str.w	r8, [sp]
    while (huart->TxXferCount > 0U)
 8006bbe:	b292      	uxth	r2, r2
 8006bc0:	b93a      	cbnz	r2, 8006bd2 <HAL_UART_Transmit+0x60>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8006bc2:	2140      	movs	r1, #64	@ 0x40
 8006bc4:	4620      	mov	r0, r4
 8006bc6:	f7ff ff72 	bl	8006aae <UART_WaitOnFlagUntilTimeout>
 8006bca:	b940      	cbnz	r0, 8006bde <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 8006bcc:	2320      	movs	r3, #32
 8006bce:	67e3      	str	r3, [r4, #124]	@ 0x7c
    return HAL_OK;
 8006bd0:	e006      	b.n	8006be0 <HAL_UART_Transmit+0x6e>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006bd2:	2200      	movs	r2, #0
 8006bd4:	2180      	movs	r1, #128	@ 0x80
 8006bd6:	4620      	mov	r0, r4
 8006bd8:	f7ff ff69 	bl	8006aae <UART_WaitOnFlagUntilTimeout>
 8006bdc:	b118      	cbz	r0, 8006be6 <HAL_UART_Transmit+0x74>
        return HAL_TIMEOUT;
 8006bde:	2003      	movs	r0, #3
}
 8006be0:	b003      	add	sp, #12
 8006be2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8006be6:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 8006be8:	b95e      	cbnz	r6, 8006c02 <HAL_UART_Transmit+0x90>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8006bea:	f835 3b02 	ldrh.w	r3, [r5], #2
 8006bee:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8006bf2:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
 8006bf4:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
 8006bf8:	3a01      	subs	r2, #1
 8006bfa:	b292      	uxth	r2, r2
 8006bfc:	f8a4 2052 	strh.w	r2, [r4, #82]	@ 0x52
 8006c00:	e7d8      	b.n	8006bb4 <HAL_UART_Transmit+0x42>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8006c02:	f816 3b01 	ldrb.w	r3, [r6], #1
 8006c06:	e7f4      	b.n	8006bf2 <HAL_UART_Transmit+0x80>
    return HAL_BUSY;
 8006c08:	2002      	movs	r0, #2
 8006c0a:	e7e9      	b.n	8006be0 <HAL_UART_Transmit+0x6e>
      return  HAL_ERROR;
 8006c0c:	2001      	movs	r0, #1
 8006c0e:	e7e7      	b.n	8006be0 <HAL_UART_Transmit+0x6e>

08006c10 <UART_CheckIdleState>:
{
 8006c10:	b537      	push	{r0, r1, r2, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006c12:	2500      	movs	r5, #0
{
 8006c14:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006c16:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
  tickstart = HAL_GetTick();
 8006c1a:	f7fd f8a3 	bl	8003d64 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8006c1e:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
 8006c20:	4603      	mov	r3, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8006c22:	6812      	ldr	r2, [r2, #0]
 8006c24:	0712      	lsls	r2, r2, #28
 8006c26:	d40a      	bmi.n	8006c3e <UART_CheckIdleState+0x2e>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006c28:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8006c2a:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 8006c2c:	f884 0078 	strb.w	r0, [r4, #120]	@ 0x78
  huart->gState = HAL_UART_STATE_READY;
 8006c30:	67e3      	str	r3, [r4, #124]	@ 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 8006c32:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006c36:	6620      	str	r0, [r4, #96]	@ 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8006c38:	6660      	str	r0, [r4, #100]	@ 0x64
}
 8006c3a:	b003      	add	sp, #12
 8006c3c:	bd30      	pop	{r4, r5, pc}
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8006c3e:	f06f 427e 	mvn.w	r2, #4261412864	@ 0xfe000000
 8006c42:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8006c46:	4620      	mov	r0, r4
 8006c48:	9200      	str	r2, [sp, #0]
 8006c4a:	462a      	mov	r2, r5
 8006c4c:	f7ff ff2f 	bl	8006aae <UART_WaitOnFlagUntilTimeout>
 8006c50:	2800      	cmp	r0, #0
 8006c52:	d0e9      	beq.n	8006c28 <UART_CheckIdleState+0x18>
      return HAL_TIMEOUT;
 8006c54:	2003      	movs	r0, #3
 8006c56:	e7f0      	b.n	8006c3a <UART_CheckIdleState+0x2a>

08006c58 <HAL_UART_Init>:
{
 8006c58:	b510      	push	{r4, lr}
  if (huart == NULL)
 8006c5a:	4604      	mov	r4, r0
 8006c5c:	b340      	cbz	r0, 8006cb0 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8006c5e:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
 8006c60:	b91b      	cbnz	r3, 8006c6a <HAL_UART_Init+0x12>
    huart->Lock = HAL_UNLOCKED;
 8006c62:	f880 3078 	strb.w	r3, [r0, #120]	@ 0x78
    HAL_UART_MspInit(huart);
 8006c66:	f7fa fa41 	bl	80010ec <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8006c6a:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8006c6c:	2324      	movs	r3, #36	@ 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
 8006c6e:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
 8006c70:	67e3      	str	r3, [r4, #124]	@ 0x7c
  __HAL_UART_DISABLE(huart);
 8006c72:	6813      	ldr	r3, [r2, #0]
 8006c74:	f023 0301 	bic.w	r3, r3, #1
 8006c78:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8006c7a:	f7ff fda7 	bl	80067cc <UART_SetConfig>
 8006c7e:	2801      	cmp	r0, #1
 8006c80:	d016      	beq.n	8006cb0 <HAL_UART_Init+0x58>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8006c82:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006c84:	b113      	cbz	r3, 8006c8c <HAL_UART_Init+0x34>
    UART_AdvFeatureConfig(huart);
 8006c86:	4620      	mov	r0, r4
 8006c88:	f7ff febc 	bl	8006a04 <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8006c8c:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
 8006c8e:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8006c90:	685a      	ldr	r2, [r3, #4]
 8006c92:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8006c96:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8006c98:	689a      	ldr	r2, [r3, #8]
 8006c9a:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8006c9e:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8006ca0:	681a      	ldr	r2, [r3, #0]
 8006ca2:	f042 0201 	orr.w	r2, r2, #1
}
 8006ca6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
 8006caa:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 8006cac:	f7ff bfb0 	b.w	8006c10 <UART_CheckIdleState>
}
 8006cb0:	2001      	movs	r0, #1
 8006cb2:	bd10      	pop	{r4, pc}

08006cb4 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8006cb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006cb8:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8006cbc:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8006cc0:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
 8006cc4:	ea43 0308 	orr.w	r3, r3, r8
 8006cc8:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8006ccc:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8006cd0:	6809      	ldr	r1, [r1, #0]
 8006cd2:	b991      	cbnz	r1, 8006cfa <FMC_SDRAM_Init+0x46>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006cd4:	ea43 030e 	orr.w	r3, r3, lr
 8006cd8:	6801      	ldr	r1, [r0, #0]
 8006cda:	4313      	orrs	r3, r2
 8006cdc:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8006ce0:	ea43 030c 	orr.w	r3, r3, ip
 8006ce4:	f021 017f 	bic.w	r1, r1, #127	@ 0x7f
 8006ce8:	433b      	orrs	r3, r7
 8006cea:	4333      	orrs	r3, r6
 8006cec:	432b      	orrs	r3, r5
 8006cee:	4323      	orrs	r3, r4
 8006cf0:	430b      	orrs	r3, r1
 8006cf2:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8006cf4:	2000      	movs	r0, #0
 8006cf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006cfa:	6801      	ldr	r1, [r0, #0]
 8006cfc:	ea43 030e 	orr.w	r3, r3, lr
 8006d00:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8006d04:	430b      	orrs	r3, r1
 8006d06:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8006d08:	ea42 030c 	orr.w	r3, r2, ip
 8006d0c:	6841      	ldr	r1, [r0, #4]
 8006d0e:	433b      	orrs	r3, r7
 8006d10:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8006d14:	4333      	orrs	r3, r6
 8006d16:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8006d1a:	432b      	orrs	r3, r5
 8006d1c:	4323      	orrs	r3, r4
 8006d1e:	4313      	orrs	r3, r2
 8006d20:	6043      	str	r3, [r0, #4]
 8006d22:	e7e7      	b.n	8006cf4 <FMC_SDRAM_Init+0x40>

08006d24 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006d24:	68cb      	ldr	r3, [r1, #12]
 8006d26:	f103 3cff 	add.w	ip, r3, #4294967295
 8006d2a:	694b      	ldr	r3, [r1, #20]
{
 8006d2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006d2e:	3b01      	subs	r3, #1
 8006d30:	680f      	ldr	r7, [r1, #0]
 8006d32:	684c      	ldr	r4, [r1, #4]
 8006d34:	688e      	ldr	r6, [r1, #8]
 8006d36:	051b      	lsls	r3, r3, #20
 8006d38:	690d      	ldr	r5, [r1, #16]
 8006d3a:	3c01      	subs	r4, #1
 8006d3c:	6989      	ldr	r1, [r1, #24]
 8006d3e:	3e01      	subs	r6, #1
 8006d40:	3d01      	subs	r5, #1
 8006d42:	3f01      	subs	r7, #1
 8006d44:	3901      	subs	r1, #1
 8006d46:	0124      	lsls	r4, r4, #4
 8006d48:	0236      	lsls	r6, r6, #8
 8006d4a:	042d      	lsls	r5, r5, #16
 8006d4c:	0609      	lsls	r1, r1, #24
 8006d4e:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8006d52:	b95a      	cbnz	r2, 8006d6c <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006d54:	433b      	orrs	r3, r7
 8006d56:	6882      	ldr	r2, [r0, #8]
 8006d58:	4323      	orrs	r3, r4
 8006d5a:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8006d5e:	4333      	orrs	r3, r6
 8006d60:	432b      	orrs	r3, r5
 8006d62:	430b      	orrs	r3, r1
 8006d64:	4313      	orrs	r3, r2
 8006d66:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8006d68:	2000      	movs	r0, #0
 8006d6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006d6c:	6882      	ldr	r2, [r0, #8]
 8006d6e:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8006d72:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8006d76:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8006d78:	ea44 0306 	orr.w	r3, r4, r6
 8006d7c:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006d7e:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8006d80:	68c2      	ldr	r2, [r0, #12]
 8006d82:	432b      	orrs	r3, r5
 8006d84:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8006d88:	430b      	orrs	r3, r1
 8006d8a:	4313      	orrs	r3, r2
 8006d8c:	60c3      	str	r3, [r0, #12]
 8006d8e:	e7eb      	b.n	8006d68 <FMC_SDRAM_Timing_Init+0x44>

08006d90 <FMC_SDRAM_SendCommand>:
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8006d90:	6902      	ldr	r2, [r0, #16]
{
 8006d92:	b510      	push	{r4, lr}
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8006d94:	e9d1 3400 	ldrd	r3, r4, [r1]
 8006d98:	0d92      	lsrs	r2, r2, #22
 8006d9a:	4323      	orrs	r3, r4
 8006d9c:	68cc      	ldr	r4, [r1, #12]
 8006d9e:	0592      	lsls	r2, r2, #22
 8006da0:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
 8006da4:	4313      	orrs	r3, r2
 8006da6:	688a      	ldr	r2, [r1, #8]
 8006da8:	3a01      	subs	r2, #1
 8006daa:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006dae:	6103      	str	r3, [r0, #16]
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
 8006db0:	2000      	movs	r0, #0
 8006db2:	bd10      	pop	{r4, pc}

08006db4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8006db4:	6943      	ldr	r3, [r0, #20]
 8006db6:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8006dba:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
 8006dbe:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8006dc2:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8006dc4:	2000      	movs	r0, #0
 8006dc6:	4770      	bx	lr

08006dc8 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006dc8:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8006dcc:	b113      	cbz	r3, 8006dd4 <osKernelInitialize+0xc>
    stat = osErrorISR;
 8006dce:	f06f 0005 	mvn.w	r0, #5
 8006dd2:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006dd4:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8006dd8:	4b07      	ldr	r3, [pc, #28]	@ (8006df8 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8006dda:	b912      	cbnz	r2, 8006de2 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006ddc:	f3ef 8211 	mrs	r2, BASEPRI
 8006de0:	b112      	cbz	r2, 8006de8 <osKernelInitialize+0x20>
 8006de2:	681a      	ldr	r2, [r3, #0]
 8006de4:	2a02      	cmp	r2, #2
 8006de6:	d0f2      	beq.n	8006dce <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8006de8:	6818      	ldr	r0, [r3, #0]
 8006dea:	b910      	cbnz	r0, 8006df2 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8006dec:	2201      	movs	r2, #1
 8006dee:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8006df0:	4770      	bx	lr
    } else {
      stat = osError;
 8006df2:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006df6:	4770      	bx	lr
 8006df8:	20003e70 	.word	0x20003e70

08006dfc <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8006dfc:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006dfe:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006e02:	b113      	cbz	r3, 8006e0a <osKernelStart+0xe>
    stat = osErrorISR;
 8006e04:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8006e08:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006e0a:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8006e0e:	4b0a      	ldr	r3, [pc, #40]	@ (8006e38 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8006e10:	b912      	cbnz	r2, 8006e18 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006e12:	f3ef 8211 	mrs	r2, BASEPRI
 8006e16:	b112      	cbz	r2, 8006e1e <osKernelStart+0x22>
 8006e18:	681a      	ldr	r2, [r3, #0]
 8006e1a:	2a02      	cmp	r2, #2
 8006e1c:	d0f2      	beq.n	8006e04 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8006e1e:	681a      	ldr	r2, [r3, #0]
 8006e20:	2a01      	cmp	r2, #1
 8006e22:	d105      	bne.n	8006e30 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8006e24:	2202      	movs	r2, #2
 8006e26:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8006e28:	f001 fd4e 	bl	80088c8 <vTaskStartScheduler>
      stat = osOK;
 8006e2c:	2000      	movs	r0, #0
 8006e2e:	e7eb      	b.n	8006e08 <osKernelStart+0xc>
      stat = osError;
 8006e30:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8006e34:	e7e8      	b.n	8006e08 <osKernelStart+0xc>
 8006e36:	bf00      	nop
 8006e38:	20003e70 	.word	0x20003e70

08006e3c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006e3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006e3e:	4614      	mov	r4, r2
 8006e40:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8006e42:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006e44:	460b      	mov	r3, r1
  hTask = NULL;
 8006e46:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006e48:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8006e4c:	bb1a      	cbnz	r2, 8006e96 <osThreadNew+0x5a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006e4e:	f3ef 8210 	mrs	r2, PRIMASK
 8006e52:	b912      	cbnz	r2, 8006e5a <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006e54:	f3ef 8211 	mrs	r2, BASEPRI
 8006e58:	b11a      	cbz	r2, 8006e62 <osThreadNew+0x26>
 8006e5a:	4a21      	ldr	r2, [pc, #132]	@ (8006ee0 <osThreadNew+0xa4>)
 8006e5c:	6812      	ldr	r2, [r2, #0]
 8006e5e:	2a02      	cmp	r2, #2
 8006e60:	d019      	beq.n	8006e96 <osThreadNew+0x5a>
 8006e62:	b1c0      	cbz	r0, 8006e96 <osThreadNew+0x5a>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006e64:	b36c      	cbz	r4, 8006ec2 <osThreadNew+0x86>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8006e66:	69a5      	ldr	r5, [r4, #24]
 8006e68:	2d00      	cmp	r5, #0
 8006e6a:	bf08      	it	eq
 8006e6c:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006e6e:	1e6a      	subs	r2, r5, #1
 8006e70:	46ac      	mov	ip, r5
 8006e72:	2a37      	cmp	r2, #55	@ 0x37
 8006e74:	d82a      	bhi.n	8006ecc <osThreadNew+0x90>
 8006e76:	6862      	ldr	r2, [r4, #4]
 8006e78:	07d2      	lsls	r2, r2, #31
 8006e7a:	d427      	bmi.n	8006ecc <osThreadNew+0x90>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8006e7c:	6966      	ldr	r6, [r4, #20]
 8006e7e:	b16e      	cbz	r6, 8006e9c <osThreadNew+0x60>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006e80:	08b2      	lsrs	r2, r6, #2
      if (attr->name != NULL) {
 8006e82:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006e84:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
 8006e88:	b157      	cbz	r7, 8006ea0 <osThreadNew+0x64>
 8006e8a:	f1be 0f5f 	cmp.w	lr, #95	@ 0x5f
 8006e8e:	d902      	bls.n	8006e96 <osThreadNew+0x5a>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006e90:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006e92:	b104      	cbz	r4, 8006e96 <osThreadNew+0x5a>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006e94:	b9e6      	cbnz	r6, 8006ed0 <osThreadNew+0x94>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8006e96:	9805      	ldr	r0, [sp, #20]
}
 8006e98:	b007      	add	sp, #28
 8006e9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006e9c:	2280      	movs	r2, #128	@ 0x80
 8006e9e:	e7f0      	b.n	8006e82 <osThreadNew+0x46>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006ea0:	f1be 0f00 	cmp.w	lr, #0
 8006ea4:	d1f7      	bne.n	8006e96 <osThreadNew+0x5a>
      if (mem == 0) {
 8006ea6:	6924      	ldr	r4, [r4, #16]
 8006ea8:	2c00      	cmp	r4, #0
 8006eaa:	d1f4      	bne.n	8006e96 <osThreadNew+0x5a>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006eac:	ac05      	add	r4, sp, #20
 8006eae:	b292      	uxth	r2, r2
 8006eb0:	e9cd c400 	strd	ip, r4, [sp]
 8006eb4:	f001 fb7b 	bl	80085ae <xTaskCreate>
 8006eb8:	2801      	cmp	r0, #1
          hTask = NULL;
 8006eba:	bf1c      	itt	ne
 8006ebc:	2300      	movne	r3, #0
 8006ebe:	9305      	strne	r3, [sp, #20]
 8006ec0:	e7e9      	b.n	8006e96 <osThreadNew+0x5a>
    name = NULL;
 8006ec2:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 8006ec4:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8006ec8:	2280      	movs	r2, #128	@ 0x80
 8006eca:	e7ef      	b.n	8006eac <osThreadNew+0x70>
        return (NULL);
 8006ecc:	2000      	movs	r0, #0
 8006ece:	e7e3      	b.n	8006e98 <osThreadNew+0x5c>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006ed0:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8006ed4:	9500      	str	r5, [sp, #0]
 8006ed6:	f001 fb2c 	bl	8008532 <xTaskCreateStatic>
 8006eda:	9005      	str	r0, [sp, #20]
 8006edc:	e7db      	b.n	8006e96 <osThreadNew+0x5a>
 8006ede:	bf00      	nop
 8006ee0:	20003e70 	.word	0x20003e70

08006ee4 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8006ee4:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006ee6:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006eea:	b113      	cbz	r3, 8006ef2 <osDelay+0xe>
    stat = osErrorISR;
 8006eec:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8006ef0:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006ef2:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8006ef6:	b913      	cbnz	r3, 8006efe <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006ef8:	f3ef 8311 	mrs	r3, BASEPRI
 8006efc:	b11b      	cbz	r3, 8006f06 <osDelay+0x22>
 8006efe:	4b04      	ldr	r3, [pc, #16]	@ (8006f10 <osDelay+0x2c>)
 8006f00:	681b      	ldr	r3, [r3, #0]
 8006f02:	2b02      	cmp	r3, #2
 8006f04:	d0f2      	beq.n	8006eec <osDelay+0x8>
    if (ticks != 0U) {
 8006f06:	b108      	cbz	r0, 8006f0c <osDelay+0x28>
      vTaskDelay(ticks);
 8006f08:	f001 fc9c 	bl	8008844 <vTaskDelay>
    stat = osOK;
 8006f0c:	2000      	movs	r0, #0
  return (stat);
 8006f0e:	e7ef      	b.n	8006ef0 <osDelay+0xc>
 8006f10:	20003e70 	.word	0x20003e70

08006f14 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006f14:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006f16:	460e      	mov	r6, r1
 8006f18:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006f1a:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006f1e:	b993      	cbnz	r3, 8006f46 <osSemaphoreNew+0x32>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006f20:	f3ef 8310 	mrs	r3, PRIMASK
 8006f24:	b913      	cbnz	r3, 8006f2c <osSemaphoreNew+0x18>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006f26:	f3ef 8311 	mrs	r3, BASEPRI
 8006f2a:	b11b      	cbz	r3, 8006f34 <osSemaphoreNew+0x20>
 8006f2c:	4b24      	ldr	r3, [pc, #144]	@ (8006fc0 <osSemaphoreNew+0xac>)
 8006f2e:	681b      	ldr	r3, [r3, #0]
 8006f30:	2b02      	cmp	r3, #2
 8006f32:	d008      	beq.n	8006f46 <osSemaphoreNew+0x32>
 8006f34:	b138      	cbz	r0, 8006f46 <osSemaphoreNew+0x32>
 8006f36:	42b0      	cmp	r0, r6
 8006f38:	d305      	bcc.n	8006f46 <osSemaphoreNew+0x32>
    mem = -1;

    if (attr != NULL) {
 8006f3a:	b155      	cbz	r5, 8006f52 <osSemaphoreNew+0x3e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8006f3c:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8006f40:	b12b      	cbz	r3, 8006f4e <osSemaphoreNew+0x3a>
 8006f42:	2a4f      	cmp	r2, #79	@ 0x4f
 8006f44:	d823      	bhi.n	8006f8e <osSemaphoreNew+0x7a>
  hSemaphore = NULL;
 8006f46:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006f48:	4620      	mov	r0, r4
 8006f4a:	b002      	add	sp, #8
 8006f4c:	bd70      	pop	{r4, r5, r6, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006f4e:	2a00      	cmp	r2, #0
 8006f50:	d1f9      	bne.n	8006f46 <osSemaphoreNew+0x32>
      if (max_count == 1U) {
 8006f52:	2801      	cmp	r0, #1
 8006f54:	d10e      	bne.n	8006f74 <osSemaphoreNew+0x60>
          hSemaphore = xSemaphoreCreateBinary();
 8006f56:	2203      	movs	r2, #3
 8006f58:	2100      	movs	r1, #0
 8006f5a:	2001      	movs	r0, #1
 8006f5c:	f000 fd7c 	bl	8007a58 <xQueueGenericCreate>
 8006f60:	e01d      	b.n	8006f9e <osSemaphoreNew+0x8a>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006f62:	461a      	mov	r2, r3
 8006f64:	4631      	mov	r1, r6
 8006f66:	f000 fda0 	bl	8007aaa <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006f6a:	4604      	mov	r4, r0
 8006f6c:	2800      	cmp	r0, #0
 8006f6e:	d0ea      	beq.n	8006f46 <osSemaphoreNew+0x32>
          name = attr->name;
 8006f70:	682d      	ldr	r5, [r5, #0]
 8006f72:	e007      	b.n	8006f84 <osSemaphoreNew+0x70>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006f74:	4631      	mov	r1, r6
 8006f76:	f000 fdbe 	bl	8007af6 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006f7a:	4604      	mov	r4, r0
 8006f7c:	2800      	cmp	r0, #0
 8006f7e:	d0e2      	beq.n	8006f46 <osSemaphoreNew+0x32>
        if (attr != NULL) {
 8006f80:	2d00      	cmp	r5, #0
 8006f82:	d1f5      	bne.n	8006f70 <osSemaphoreNew+0x5c>
        vQueueAddToRegistry (hSemaphore, name);
 8006f84:	4629      	mov	r1, r5
 8006f86:	4620      	mov	r0, r4
 8006f88:	f001 f90a 	bl	80081a0 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006f8c:	e7dc      	b.n	8006f48 <osSemaphoreNew+0x34>
      if (max_count == 1U) {
 8006f8e:	2801      	cmp	r0, #1
 8006f90:	d1e7      	bne.n	8006f62 <osSemaphoreNew+0x4e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006f92:	2203      	movs	r2, #3
 8006f94:	9200      	str	r2, [sp, #0]
 8006f96:	2200      	movs	r2, #0
 8006f98:	4611      	mov	r1, r2
 8006f9a:	f000 fd49 	bl	8007a30 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8006f9e:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006fa0:	2800      	cmp	r0, #0
 8006fa2:	d0d0      	beq.n	8006f46 <osSemaphoreNew+0x32>
 8006fa4:	2e00      	cmp	r6, #0
 8006fa6:	d0eb      	beq.n	8006f80 <osSemaphoreNew+0x6c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006fa8:	2300      	movs	r3, #0
 8006faa:	461a      	mov	r2, r3
 8006fac:	4619      	mov	r1, r3
 8006fae:	f000 fdc4 	bl	8007b3a <xQueueGenericSend>
 8006fb2:	2801      	cmp	r0, #1
 8006fb4:	d0e4      	beq.n	8006f80 <osSemaphoreNew+0x6c>
            vSemaphoreDelete (hSemaphore);
 8006fb6:	4620      	mov	r0, r4
 8006fb8:	f001 f91c 	bl	80081f4 <vQueueDelete>
      if (hSemaphore != NULL) {
 8006fbc:	e7c3      	b.n	8006f46 <osSemaphoreNew+0x32>
 8006fbe:	bf00      	nop
 8006fc0:	20003e70 	.word	0x20003e70

08006fc4 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006fc4:	b513      	push	{r0, r1, r4, lr}
 8006fc6:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006fc8:	b918      	cbnz	r0, 8006fd2 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8006fca:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006fce:	b002      	add	sp, #8
 8006fd0:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006fd2:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8006fd6:	b15b      	cbz	r3, 8006ff0 <osSemaphoreAcquire+0x2c>
    if (timeout != 0U) {
 8006fd8:	2c00      	cmp	r4, #0
 8006fda:	d1f6      	bne.n	8006fca <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006fdc:	aa01      	add	r2, sp, #4
 8006fde:	4621      	mov	r1, r4
      yield = pdFALSE;
 8006fe0:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006fe2:	f001 f88a 	bl	80080fa <xQueueReceiveFromISR>
 8006fe6:	2801      	cmp	r0, #1
 8006fe8:	d016      	beq.n	8007018 <osSemaphoreAcquire+0x54>
        stat = osErrorResource;
 8006fea:	f06f 0002 	mvn.w	r0, #2
 8006fee:	e7ee      	b.n	8006fce <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006ff0:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8006ff4:	b913      	cbnz	r3, 8006ffc <osSemaphoreAcquire+0x38>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006ff6:	f3ef 8311 	mrs	r3, BASEPRI
 8006ffa:	b11b      	cbz	r3, 8007004 <osSemaphoreAcquire+0x40>
 8006ffc:	4b0e      	ldr	r3, [pc, #56]	@ (8007038 <osSemaphoreAcquire+0x74>)
 8006ffe:	681b      	ldr	r3, [r3, #0]
 8007000:	2b02      	cmp	r3, #2
 8007002:	d0e9      	beq.n	8006fd8 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007004:	4621      	mov	r1, r4
 8007006:	f000 ffb3 	bl	8007f70 <xQueueSemaphoreTake>
 800700a:	2801      	cmp	r0, #1
 800700c:	d006      	beq.n	800701c <osSemaphoreAcquire+0x58>
      if (timeout != 0U) {
 800700e:	2c00      	cmp	r4, #0
 8007010:	d0eb      	beq.n	8006fea <osSemaphoreAcquire+0x26>
        stat = osErrorTimeout;
 8007012:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007016:	e7da      	b.n	8006fce <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8007018:	9b01      	ldr	r3, [sp, #4]
 800701a:	b90b      	cbnz	r3, 8007020 <osSemaphoreAcquire+0x5c>
  stat = osOK;
 800701c:	2000      	movs	r0, #0
 800701e:	e7d6      	b.n	8006fce <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8007020:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007024:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007028:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800702c:	f3bf 8f4f 	dsb	sy
 8007030:	f3bf 8f6f 	isb	sy
 8007034:	e7f2      	b.n	800701c <osSemaphoreAcquire+0x58>
 8007036:	bf00      	nop
 8007038:	20003e70 	.word	0x20003e70

0800703c <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800703c:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800703e:	b370      	cbz	r0, 800709e <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007040:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007044:	b15b      	cbz	r3, 800705e <osSemaphoreRelease+0x22>
    yield = pdFALSE;
 8007046:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007048:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800704a:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800704c:	f000 fe93 	bl	8007d76 <xQueueGiveFromISR>
 8007050:	2801      	cmp	r0, #1
 8007052:	d016      	beq.n	8007082 <osSemaphoreRelease+0x46>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8007054:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8007058:	b003      	add	sp, #12
 800705a:	f85d fb04 	ldr.w	pc, [sp], #4
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800705e:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8007062:	b913      	cbnz	r3, 800706a <osSemaphoreRelease+0x2e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007064:	f3ef 8311 	mrs	r3, BASEPRI
 8007068:	b11b      	cbz	r3, 8007072 <osSemaphoreRelease+0x36>
 800706a:	4b0e      	ldr	r3, [pc, #56]	@ (80070a4 <osSemaphoreRelease+0x68>)
 800706c:	681b      	ldr	r3, [r3, #0]
 800706e:	2b02      	cmp	r3, #2
 8007070:	d0e9      	beq.n	8007046 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007072:	2300      	movs	r3, #0
 8007074:	461a      	mov	r2, r3
 8007076:	4619      	mov	r1, r3
 8007078:	f000 fd5f 	bl	8007b3a <xQueueGenericSend>
 800707c:	2801      	cmp	r0, #1
 800707e:	d00c      	beq.n	800709a <osSemaphoreRelease+0x5e>
 8007080:	e7e8      	b.n	8007054 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8007082:	9b01      	ldr	r3, [sp, #4]
 8007084:	b14b      	cbz	r3, 800709a <osSemaphoreRelease+0x5e>
 8007086:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800708a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800708e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007092:	f3bf 8f4f 	dsb	sy
 8007096:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800709a:	2000      	movs	r0, #0
 800709c:	e7dc      	b.n	8007058 <osSemaphoreRelease+0x1c>
    stat = osErrorParameter;
 800709e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80070a2:	e7d9      	b.n	8007058 <osSemaphoreRelease+0x1c>
 80070a4:	20003e70 	.word	0x20003e70

080070a8 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80070a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80070aa:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80070ac:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80070b0:	b11b      	cbz	r3, 80070ba <osMessageQueueNew+0x12>
  hQueue = NULL;
 80070b2:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80070b4:	4628      	mov	r0, r5
 80070b6:	b002      	add	sp, #8
 80070b8:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80070ba:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80070be:	b913      	cbnz	r3, 80070c6 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80070c0:	f3ef 8311 	mrs	r3, BASEPRI
 80070c4:	b11b      	cbz	r3, 80070ce <osMessageQueueNew+0x26>
 80070c6:	4b1a      	ldr	r3, [pc, #104]	@ (8007130 <osMessageQueueNew+0x88>)
 80070c8:	681b      	ldr	r3, [r3, #0]
 80070ca:	2b02      	cmp	r3, #2
 80070cc:	d0f1      	beq.n	80070b2 <osMessageQueueNew+0xa>
 80070ce:	2800      	cmp	r0, #0
 80070d0:	d0ef      	beq.n	80070b2 <osMessageQueueNew+0xa>
 80070d2:	2900      	cmp	r1, #0
 80070d4:	d0ed      	beq.n	80070b2 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 80070d6:	b1ec      	cbz	r4, 8007114 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80070d8:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 80070dc:	b193      	cbz	r3, 8007104 <osMessageQueueNew+0x5c>
 80070de:	2a4f      	cmp	r2, #79	@ 0x4f
 80070e0:	d9e7      	bls.n	80070b2 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80070e2:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80070e4:	2a00      	cmp	r2, #0
 80070e6:	d0e4      	beq.n	80070b2 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80070e8:	fb01 f500 	mul.w	r5, r1, r0
 80070ec:	6966      	ldr	r6, [r4, #20]
 80070ee:	42ae      	cmp	r6, r5
 80070f0:	d3df      	bcc.n	80070b2 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80070f2:	2500      	movs	r5, #0
 80070f4:	9500      	str	r5, [sp, #0]
 80070f6:	f000 fc9b 	bl	8007a30 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80070fa:	4605      	mov	r5, r0
 80070fc:	2800      	cmp	r0, #0
 80070fe:	d0d8      	beq.n	80070b2 <osMessageQueueNew+0xa>
        name = attr->name;
 8007100:	6824      	ldr	r4, [r4, #0]
 8007102:	e00f      	b.n	8007124 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007104:	2a00      	cmp	r2, #0
 8007106:	d1d4      	bne.n	80070b2 <osMessageQueueNew+0xa>
 8007108:	6923      	ldr	r3, [r4, #16]
 800710a:	2b00      	cmp	r3, #0
 800710c:	d1d1      	bne.n	80070b2 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800710e:	6963      	ldr	r3, [r4, #20]
 8007110:	2b00      	cmp	r3, #0
 8007112:	d1ce      	bne.n	80070b2 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8007114:	2200      	movs	r2, #0
 8007116:	f000 fc9f 	bl	8007a58 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800711a:	4605      	mov	r5, r0
 800711c:	2800      	cmp	r0, #0
 800711e:	d0c8      	beq.n	80070b2 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8007120:	2c00      	cmp	r4, #0
 8007122:	d1ed      	bne.n	8007100 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8007124:	4621      	mov	r1, r4
 8007126:	4628      	mov	r0, r5
 8007128:	f001 f83a 	bl	80081a0 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800712c:	e7c2      	b.n	80070b4 <osMessageQueueNew+0xc>
 800712e:	bf00      	nop
 8007130:	20003e70 	.word	0x20003e70

08007134 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007134:	b513      	push	{r0, r1, r4, lr}
 8007136:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007138:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800713c:	b123      	cbz	r3, 8007148 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800713e:	b9d8      	cbnz	r0, 8007178 <osMessageQueuePut+0x44>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
 8007140:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007144:	b002      	add	sp, #8
 8007146:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007148:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800714c:	b913      	cbnz	r3, 8007154 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800714e:	f3ef 8311 	mrs	r3, BASEPRI
 8007152:	b11b      	cbz	r3, 800715c <osMessageQueuePut+0x28>
 8007154:	4b17      	ldr	r3, [pc, #92]	@ (80071b4 <osMessageQueuePut+0x80>)
 8007156:	681b      	ldr	r3, [r3, #0]
 8007158:	2b02      	cmp	r3, #2
 800715a:	d0f0      	beq.n	800713e <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800715c:	2800      	cmp	r0, #0
 800715e:	d0ef      	beq.n	8007140 <osMessageQueuePut+0xc>
 8007160:	2900      	cmp	r1, #0
 8007162:	d0ed      	beq.n	8007140 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007164:	2300      	movs	r3, #0
 8007166:	4622      	mov	r2, r4
 8007168:	f000 fce7 	bl	8007b3a <xQueueGenericSend>
 800716c:	2801      	cmp	r0, #1
 800716e:	d013      	beq.n	8007198 <osMessageQueuePut+0x64>
        if (timeout != 0U) {
 8007170:	b16c      	cbz	r4, 800718e <osMessageQueuePut+0x5a>
          stat = osErrorTimeout;
 8007172:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007176:	e7e5      	b.n	8007144 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007178:	2900      	cmp	r1, #0
 800717a:	d0e1      	beq.n	8007140 <osMessageQueuePut+0xc>
 800717c:	2c00      	cmp	r4, #0
 800717e:	d1df      	bne.n	8007140 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007180:	4623      	mov	r3, r4
 8007182:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007184:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007186:	f000 fd92 	bl	8007cae <xQueueGenericSendFromISR>
 800718a:	2801      	cmp	r0, #1
 800718c:	d002      	beq.n	8007194 <osMessageQueuePut+0x60>
        stat = osErrorResource;
 800718e:	f06f 0002 	mvn.w	r0, #2
 8007192:	e7d7      	b.n	8007144 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8007194:	9b01      	ldr	r3, [sp, #4]
 8007196:	b90b      	cbnz	r3, 800719c <osMessageQueuePut+0x68>
  stat = osOK;
 8007198:	2000      	movs	r0, #0
 800719a:	e7d3      	b.n	8007144 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 800719c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80071a0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80071a4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80071a8:	f3bf 8f4f 	dsb	sy
 80071ac:	f3bf 8f6f 	isb	sy
 80071b0:	e7f2      	b.n	8007198 <osMessageQueuePut+0x64>
 80071b2:	bf00      	nop
 80071b4:	20003e70 	.word	0x20003e70

080071b8 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80071b8:	b513      	push	{r0, r1, r4, lr}
 80071ba:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80071bc:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80071c0:	b123      	cbz	r3, 80071cc <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80071c2:	b9d0      	cbnz	r0, 80071fa <osMessageQueueGet+0x42>
      }
    }
  }
  else {
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
      stat = osErrorParameter;
 80071c4:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80071c8:	b002      	add	sp, #8
 80071ca:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80071cc:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80071d0:	b913      	cbnz	r3, 80071d8 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80071d2:	f3ef 8311 	mrs	r3, BASEPRI
 80071d6:	b11b      	cbz	r3, 80071e0 <osMessageQueueGet+0x28>
 80071d8:	4b16      	ldr	r3, [pc, #88]	@ (8007234 <osMessageQueueGet+0x7c>)
 80071da:	681b      	ldr	r3, [r3, #0]
 80071dc:	2b02      	cmp	r3, #2
 80071de:	d0f0      	beq.n	80071c2 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80071e0:	2800      	cmp	r0, #0
 80071e2:	d0ef      	beq.n	80071c4 <osMessageQueueGet+0xc>
 80071e4:	2900      	cmp	r1, #0
 80071e6:	d0ed      	beq.n	80071c4 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80071e8:	4622      	mov	r2, r4
 80071ea:	f000 fe1d 	bl	8007e28 <xQueueReceive>
 80071ee:	2801      	cmp	r0, #1
 80071f0:	d012      	beq.n	8007218 <osMessageQueueGet+0x60>
        if (timeout != 0U) {
 80071f2:	b164      	cbz	r4, 800720e <osMessageQueueGet+0x56>
          stat = osErrorTimeout;
 80071f4:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80071f8:	e7e6      	b.n	80071c8 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80071fa:	2900      	cmp	r1, #0
 80071fc:	d0e2      	beq.n	80071c4 <osMessageQueueGet+0xc>
 80071fe:	2c00      	cmp	r4, #0
 8007200:	d1e0      	bne.n	80071c4 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007202:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007204:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007206:	f000 ff78 	bl	80080fa <xQueueReceiveFromISR>
 800720a:	2801      	cmp	r0, #1
 800720c:	d002      	beq.n	8007214 <osMessageQueueGet+0x5c>
        stat = osErrorResource;
 800720e:	f06f 0002 	mvn.w	r0, #2
 8007212:	e7d9      	b.n	80071c8 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8007214:	9b01      	ldr	r3, [sp, #4]
 8007216:	b90b      	cbnz	r3, 800721c <osMessageQueueGet+0x64>
  stat = osOK;
 8007218:	2000      	movs	r0, #0
 800721a:	e7d5      	b.n	80071c8 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 800721c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007220:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007224:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007228:	f3bf 8f4f 	dsb	sy
 800722c:	f3bf 8f6f 	isb	sy
 8007230:	e7f2      	b.n	8007218 <osMessageQueueGet+0x60>
 8007232:	bf00      	nop
 8007234:	20003e70 	.word	0x20003e70

08007238 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8007238:	4b03      	ldr	r3, [pc, #12]	@ (8007248 <vApplicationGetIdleTaskMemory+0x10>)
 800723a:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800723c:	4b03      	ldr	r3, [pc, #12]	@ (800724c <vApplicationGetIdleTaskMemory+0x14>)
 800723e:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007240:	2380      	movs	r3, #128	@ 0x80
 8007242:	6013      	str	r3, [r2, #0]
}
 8007244:	4770      	bx	lr
 8007246:	bf00      	nop
 8007248:	20003e10 	.word	0x20003e10
 800724c:	20003c10 	.word	0x20003c10

08007250 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007250:	4b03      	ldr	r3, [pc, #12]	@ (8007260 <vApplicationGetTimerTaskMemory+0x10>)
 8007252:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8007254:	4b03      	ldr	r3, [pc, #12]	@ (8007264 <vApplicationGetTimerTaskMemory+0x14>)
 8007256:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007258:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800725c:	6013      	str	r3, [r2, #0]
}
 800725e:	4770      	bx	lr
 8007260:	20003bb0 	.word	0x20003bb0
 8007264:	200037b0 	.word	0x200037b0

08007268 <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007268:	4b10      	ldr	r3, [pc, #64]	@ (80072ac <prvInsertBlockIntoFreeList+0x44>)
{
 800726a:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800726c:	461a      	mov	r2, r3
 800726e:	681b      	ldr	r3, [r3, #0]
 8007270:	4283      	cmp	r3, r0
 8007272:	d3fb      	bcc.n	800726c <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007274:	6854      	ldr	r4, [r2, #4]
 8007276:	1911      	adds	r1, r2, r4
 8007278:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800727a:	bf01      	itttt	eq
 800727c:	6841      	ldreq	r1, [r0, #4]
 800727e:	4610      	moveq	r0, r2
 8007280:	1909      	addeq	r1, r1, r4
 8007282:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007284:	6844      	ldr	r4, [r0, #4]
 8007286:	1901      	adds	r1, r0, r4
 8007288:	428b      	cmp	r3, r1
 800728a:	d10c      	bne.n	80072a6 <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800728c:	4908      	ldr	r1, [pc, #32]	@ (80072b0 <prvInsertBlockIntoFreeList+0x48>)
 800728e:	6809      	ldr	r1, [r1, #0]
 8007290:	428b      	cmp	r3, r1
 8007292:	d003      	beq.n	800729c <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007294:	6859      	ldr	r1, [r3, #4]
 8007296:	4421      	add	r1, r4
 8007298:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800729a:	6819      	ldr	r1, [r3, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800729c:	4290      	cmp	r0, r2
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800729e:	6001      	str	r1, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80072a0:	bf18      	it	ne
 80072a2:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80072a4:	bd10      	pop	{r4, pc}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80072a6:	4619      	mov	r1, r3
 80072a8:	e7f8      	b.n	800729c <prvInsertBlockIntoFreeList+0x34>
 80072aa:	bf00      	nop
 80072ac:	20003e84 	.word	0x20003e84
 80072b0:	20003e80 	.word	0x20003e80

080072b4 <pvPortMalloc>:
{
 80072b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072b8:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80072ba:	f001 f9a7 	bl	800860c <vTaskSuspendAll>
		if( pxEnd == NULL )
 80072be:	4940      	ldr	r1, [pc, #256]	@ (80073c0 <pvPortMalloc+0x10c>)
 80072c0:	4d40      	ldr	r5, [pc, #256]	@ (80073c4 <pvPortMalloc+0x110>)
 80072c2:	680b      	ldr	r3, [r1, #0]
 80072c4:	b9f3      	cbnz	r3, 8007304 <pvPortMalloc+0x50>
	uxAddress = ( size_t ) ucHeap;
 80072c6:	4a40      	ldr	r2, [pc, #256]	@ (80073c8 <pvPortMalloc+0x114>)
	xStart.xBlockSize = ( size_t ) 0;
 80072c8:	2000      	movs	r0, #0
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80072ca:	0756      	lsls	r6, r2, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80072cc:	4e3f      	ldr	r6, [pc, #252]	@ (80073cc <pvPortMalloc+0x118>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80072ce:	bf1b      	ittet	ne
 80072d0:	3207      	addne	r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80072d2:	4b3f      	ldrne	r3, [pc, #252]	@ (80073d0 <pvPortMalloc+0x11c>)
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80072d4:	4b3f      	ldreq	r3, [pc, #252]	@ (80073d4 <pvPortMalloc+0x120>)
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80072d6:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 80072da:	6070      	str	r0, [r6, #4]
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80072dc:	bf18      	it	ne
 80072de:	1a9b      	subne	r3, r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80072e0:	6032      	str	r2, [r6, #0]
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80072e2:	4413      	add	r3, r2
	uxAddress -= xHeapStructSize;
 80072e4:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80072e6:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 80072ea:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80072ee:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 80072f0:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80072f2:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80072f6:	4b38      	ldr	r3, [pc, #224]	@ (80073d8 <pvPortMalloc+0x124>)
 80072f8:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80072fa:	4b38      	ldr	r3, [pc, #224]	@ (80073dc <pvPortMalloc+0x128>)
 80072fc:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80072fe:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8007302:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007304:	682e      	ldr	r6, [r5, #0]
 8007306:	4226      	tst	r6, r4
 8007308:	d154      	bne.n	80073b4 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 800730a:	2c00      	cmp	r4, #0
 800730c:	d043      	beq.n	8007396 <pvPortMalloc+0xe2>
				xWantedSize += xHeapStructSize;
 800730e:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007312:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8007314:	bf1c      	itt	ne
 8007316:	f023 0307 	bicne.w	r3, r3, #7
 800731a:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800731c:	2b00      	cmp	r3, #0
 800731e:	d049      	beq.n	80073b4 <pvPortMalloc+0x100>
 8007320:	4f2e      	ldr	r7, [pc, #184]	@ (80073dc <pvPortMalloc+0x128>)
 8007322:	683c      	ldr	r4, [r7, #0]
 8007324:	429c      	cmp	r4, r3
 8007326:	d345      	bcc.n	80073b4 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8007328:	4a28      	ldr	r2, [pc, #160]	@ (80073cc <pvPortMalloc+0x118>)
 800732a:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800732c:	6868      	ldr	r0, [r5, #4]
 800732e:	4298      	cmp	r0, r3
 8007330:	d204      	bcs.n	800733c <pvPortMalloc+0x88>
 8007332:	f8d5 c000 	ldr.w	ip, [r5]
 8007336:	f1bc 0f00 	cmp.w	ip, #0
 800733a:	d117      	bne.n	800736c <pvPortMalloc+0xb8>
				if( pxBlock != pxEnd )
 800733c:	6809      	ldr	r1, [r1, #0]
 800733e:	42a9      	cmp	r1, r5
 8007340:	d038      	beq.n	80073b4 <pvPortMalloc+0x100>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007342:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007344:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007348:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800734a:	1ac2      	subs	r2, r0, r3
 800734c:	2a10      	cmp	r2, #16
 800734e:	d914      	bls.n	800737a <pvPortMalloc+0xc6>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8007350:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007352:	0741      	lsls	r1, r0, #29
 8007354:	d00d      	beq.n	8007372 <pvPortMalloc+0xbe>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007356:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800735a:	b672      	cpsid	i
 800735c:	f383 8811 	msr	BASEPRI, r3
 8007360:	f3bf 8f6f 	isb	sy
 8007364:	f3bf 8f4f 	dsb	sy
 8007368:	b662      	cpsie	i
 800736a:	e7fe      	b.n	800736a <pvPortMalloc+0xb6>
 800736c:	462a      	mov	r2, r5
 800736e:	4665      	mov	r5, ip
 8007370:	e7dc      	b.n	800732c <pvPortMalloc+0x78>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007372:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007374:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007376:	f7ff ff77 	bl	8007268 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800737a:	686a      	ldr	r2, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 800737c:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800737e:	4916      	ldr	r1, [pc, #88]	@ (80073d8 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007380:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007382:	4316      	orrs	r6, r2
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007384:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007386:	603c      	str	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007388:	4284      	cmp	r4, r0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800738a:	606e      	str	r6, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 800738c:	602b      	str	r3, [r5, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800738e:	bf38      	it	cc
 8007390:	600c      	strcc	r4, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007392:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 8007396:	f001 f9df 	bl	8008758 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800739a:	0763      	lsls	r3, r4, #29
 800739c:	d00c      	beq.n	80073b8 <pvPortMalloc+0x104>
 800739e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80073a2:	b672      	cpsid	i
 80073a4:	f383 8811 	msr	BASEPRI, r3
 80073a8:	f3bf 8f6f 	isb	sy
 80073ac:	f3bf 8f4f 	dsb	sy
 80073b0:	b662      	cpsie	i
 80073b2:	e7fe      	b.n	80073b2 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 80073b4:	2400      	movs	r4, #0
 80073b6:	e7ee      	b.n	8007396 <pvPortMalloc+0xe2>
}
 80073b8:	4620      	mov	r0, r4
 80073ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80073be:	bf00      	nop
 80073c0:	20003e80 	.word	0x20003e80
 80073c4:	20003e74 	.word	0x20003e74
 80073c8:	20003e8c 	.word	0x20003e8c
 80073cc:	20003e84 	.word	0x20003e84
 80073d0:	20016384 	.word	0x20016384
 80073d4:	000124f8 	.word	0x000124f8
 80073d8:	20003e78 	.word	0x20003e78
 80073dc:	20003e7c 	.word	0x20003e7c

080073e0 <vPortFree>:
{
 80073e0:	b510      	push	{r4, lr}
	if( pv != NULL )
 80073e2:	4604      	mov	r4, r0
 80073e4:	2800      	cmp	r0, #0
 80073e6:	d032      	beq.n	800744e <vPortFree+0x6e>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80073e8:	4a19      	ldr	r2, [pc, #100]	@ (8007450 <vPortFree+0x70>)
 80073ea:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80073ee:	6812      	ldr	r2, [r2, #0]
 80073f0:	4213      	tst	r3, r2
 80073f2:	d10a      	bne.n	800740a <vPortFree+0x2a>
 80073f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80073f8:	b672      	cpsid	i
 80073fa:	f383 8811 	msr	BASEPRI, r3
 80073fe:	f3bf 8f6f 	isb	sy
 8007402:	f3bf 8f4f 	dsb	sy
 8007406:	b662      	cpsie	i
 8007408:	e7fe      	b.n	8007408 <vPortFree+0x28>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800740a:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800740e:	b151      	cbz	r1, 8007426 <vPortFree+0x46>
 8007410:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007414:	b672      	cpsid	i
 8007416:	f383 8811 	msr	BASEPRI, r3
 800741a:	f3bf 8f6f 	isb	sy
 800741e:	f3bf 8f4f 	dsb	sy
 8007422:	b662      	cpsie	i
 8007424:	e7fe      	b.n	8007424 <vPortFree+0x44>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007426:	ea23 0302 	bic.w	r3, r3, r2
 800742a:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800742e:	f001 f8ed 	bl	800860c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007432:	4a08      	ldr	r2, [pc, #32]	@ (8007454 <vPortFree+0x74>)
 8007434:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007438:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800743c:	6811      	ldr	r1, [r2, #0]
 800743e:	440b      	add	r3, r1
 8007440:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007442:	f7ff ff11 	bl	8007268 <prvInsertBlockIntoFreeList>
}
 8007446:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800744a:	f001 b985 	b.w	8008758 <xTaskResumeAll>
}
 800744e:	bd10      	pop	{r4, pc}
 8007450:	20003e74 	.word	0x20003e74
 8007454:	20003e7c 	.word	0x20003e7c

08007458 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007458:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800745c:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007460:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007462:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007464:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007468:	2300      	movs	r3, #0
 800746a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800746c:	4770      	bx	lr

0800746e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800746e:	2300      	movs	r3, #0
 8007470:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8007472:	4770      	bx	lr

08007474 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007474:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007476:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 8007478:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800747a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800747c:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800747e:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007480:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007482:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007484:	3301      	adds	r3, #1
 8007486:	6003      	str	r3, [r0, #0]
}
 8007488:	4770      	bx	lr

0800748a <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800748a:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800748c:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800748e:	1c63      	adds	r3, r4, #1
 8007490:	d10a      	bne.n	80074a8 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007492:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007494:	685a      	ldr	r2, [r3, #4]
 8007496:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007498:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800749a:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800749c:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800749e:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80074a0:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80074a2:	3301      	adds	r3, #1
 80074a4:	6003      	str	r3, [r0, #0]
}
 80074a6:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80074a8:	f100 0208 	add.w	r2, r0, #8
 80074ac:	4613      	mov	r3, r2
 80074ae:	6852      	ldr	r2, [r2, #4]
 80074b0:	6815      	ldr	r5, [r2, #0]
 80074b2:	42a5      	cmp	r5, r4
 80074b4:	d9fa      	bls.n	80074ac <vListInsert+0x22>
 80074b6:	e7ed      	b.n	8007494 <vListInsert+0xa>

080074b8 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 80074b8:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80074ba:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 80074be:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80074c0:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80074c2:	6859      	ldr	r1, [r3, #4]
 80074c4:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80074c6:	bf08      	it	eq
 80074c8:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 80074ca:	2200      	movs	r2, #0
 80074cc:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 80074ce:	681a      	ldr	r2, [r3, #0]
 80074d0:	3a01      	subs	r2, #1
 80074d2:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80074d4:	6818      	ldr	r0, [r3, #0]
}
 80074d6:	4770      	bx	lr

080074d8 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 80074d8:	4808      	ldr	r0, [pc, #32]	@ (80074fc <prvPortStartFirstTask+0x24>)
 80074da:	6800      	ldr	r0, [r0, #0]
 80074dc:	6800      	ldr	r0, [r0, #0]
 80074de:	f380 8808 	msr	MSP, r0
 80074e2:	f04f 0000 	mov.w	r0, #0
 80074e6:	f380 8814 	msr	CONTROL, r0
 80074ea:	b662      	cpsie	i
 80074ec:	b661      	cpsie	f
 80074ee:	f3bf 8f4f 	dsb	sy
 80074f2:	f3bf 8f6f 	isb	sy
 80074f6:	df00      	svc	0
 80074f8:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80074fa:	0000      	.short	0x0000
 80074fc:	e000ed08 	.word	0xe000ed08

08007500 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007500:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8007510 <vPortEnableVFP+0x10>
 8007504:	6801      	ldr	r1, [r0, #0]
 8007506:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800750a:	6001      	str	r1, [r0, #0]
 800750c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800750e:	0000      	.short	0x0000
 8007510:	e000ed88 	.word	0xe000ed88

08007514 <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
 8007514:	2300      	movs	r3, #0
{
 8007516:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007518:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800751a:	4b0f      	ldr	r3, [pc, #60]	@ (8007558 <prvTaskExitError+0x44>)
 800751c:	681b      	ldr	r3, [r3, #0]
 800751e:	3301      	adds	r3, #1
 8007520:	d00a      	beq.n	8007538 <prvTaskExitError+0x24>
 8007522:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007526:	b672      	cpsid	i
 8007528:	f383 8811 	msr	BASEPRI, r3
 800752c:	f3bf 8f6f 	isb	sy
 8007530:	f3bf 8f4f 	dsb	sy
 8007534:	b662      	cpsie	i
 8007536:	e7fe      	b.n	8007536 <prvTaskExitError+0x22>
 8007538:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800753c:	b672      	cpsid	i
 800753e:	f383 8811 	msr	BASEPRI, r3
 8007542:	f3bf 8f6f 	isb	sy
 8007546:	f3bf 8f4f 	dsb	sy
 800754a:	b662      	cpsie	i
	while( ulDummy == 0 )
 800754c:	9b01      	ldr	r3, [sp, #4]
 800754e:	2b00      	cmp	r3, #0
 8007550:	d0fc      	beq.n	800754c <prvTaskExitError+0x38>
}
 8007552:	b002      	add	sp, #8
 8007554:	4770      	bx	lr
 8007556:	bf00      	nop
 8007558:	20000040 	.word	0x20000040

0800755c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800755c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007560:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8007564:	f840 2c20 	str.w	r2, [r0, #-32]
}
 8007568:	3844      	subs	r0, #68	@ 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800756a:	6403      	str	r3, [r0, #64]	@ 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800756c:	4b03      	ldr	r3, [pc, #12]	@ (800757c <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800756e:	63c1      	str	r1, [r0, #60]	@ 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007570:	6383      	str	r3, [r0, #56]	@ 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007572:	f06f 0302 	mvn.w	r3, #2
 8007576:	6203      	str	r3, [r0, #32]
}
 8007578:	4770      	bx	lr
 800757a:	bf00      	nop
 800757c:	08007515 	.word	0x08007515

08007580 <SVC_Handler>:
	__asm volatile (
 8007580:	4b07      	ldr	r3, [pc, #28]	@ (80075a0 <pxCurrentTCBConst2>)
 8007582:	6819      	ldr	r1, [r3, #0]
 8007584:	6808      	ldr	r0, [r1, #0]
 8007586:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800758a:	f380 8809 	msr	PSP, r0
 800758e:	f3bf 8f6f 	isb	sy
 8007592:	f04f 0000 	mov.w	r0, #0
 8007596:	f380 8811 	msr	BASEPRI, r0
 800759a:	4770      	bx	lr
 800759c:	f3af 8000 	nop.w

080075a0 <pxCurrentTCBConst2>:
 80075a0:	200168c4 	.word	0x200168c4

080075a4 <vPortEnterCritical>:
 80075a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80075a8:	b672      	cpsid	i
 80075aa:	f383 8811 	msr	BASEPRI, r3
 80075ae:	f3bf 8f6f 	isb	sy
 80075b2:	f3bf 8f4f 	dsb	sy
 80075b6:	b662      	cpsie	i
	uxCriticalNesting++;
 80075b8:	4a0b      	ldr	r2, [pc, #44]	@ (80075e8 <vPortEnterCritical+0x44>)
 80075ba:	6813      	ldr	r3, [r2, #0]
 80075bc:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 80075be:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 80075c0:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 80075c2:	d110      	bne.n	80075e6 <vPortEnterCritical+0x42>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 80075c4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80075c8:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 80075cc:	b2db      	uxtb	r3, r3
 80075ce:	b153      	cbz	r3, 80075e6 <vPortEnterCritical+0x42>
 80075d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80075d4:	b672      	cpsid	i
 80075d6:	f383 8811 	msr	BASEPRI, r3
 80075da:	f3bf 8f6f 	isb	sy
 80075de:	f3bf 8f4f 	dsb	sy
 80075e2:	b662      	cpsie	i
 80075e4:	e7fe      	b.n	80075e4 <vPortEnterCritical+0x40>
}
 80075e6:	4770      	bx	lr
 80075e8:	20000040 	.word	0x20000040

080075ec <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 80075ec:	4a09      	ldr	r2, [pc, #36]	@ (8007614 <vPortExitCritical+0x28>)
 80075ee:	6813      	ldr	r3, [r2, #0]
 80075f0:	b953      	cbnz	r3, 8007608 <vPortExitCritical+0x1c>
 80075f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80075f6:	b672      	cpsid	i
 80075f8:	f383 8811 	msr	BASEPRI, r3
 80075fc:	f3bf 8f6f 	isb	sy
 8007600:	f3bf 8f4f 	dsb	sy
 8007604:	b662      	cpsie	i
 8007606:	e7fe      	b.n	8007606 <vPortExitCritical+0x1a>
	uxCriticalNesting--;
 8007608:	3b01      	subs	r3, #1
 800760a:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800760c:	b90b      	cbnz	r3, 8007612 <vPortExitCritical+0x26>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800760e:	f383 8811 	msr	BASEPRI, r3
}
 8007612:	4770      	bx	lr
 8007614:	20000040 	.word	0x20000040
	...

08007620 <PendSV_Handler>:
	__asm volatile
 8007620:	f3ef 8009 	mrs	r0, PSP
 8007624:	f3bf 8f6f 	isb	sy
 8007628:	4b15      	ldr	r3, [pc, #84]	@ (8007680 <pxCurrentTCBConst>)
 800762a:	681a      	ldr	r2, [r3, #0]
 800762c:	f01e 0f10 	tst.w	lr, #16
 8007630:	bf08      	it	eq
 8007632:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007636:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800763a:	6010      	str	r0, [r2, #0]
 800763c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007640:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8007644:	b672      	cpsid	i
 8007646:	f380 8811 	msr	BASEPRI, r0
 800764a:	f3bf 8f4f 	dsb	sy
 800764e:	f3bf 8f6f 	isb	sy
 8007652:	b662      	cpsie	i
 8007654:	f001 f98a 	bl	800896c <vTaskSwitchContext>
 8007658:	f04f 0000 	mov.w	r0, #0
 800765c:	f380 8811 	msr	BASEPRI, r0
 8007660:	bc09      	pop	{r0, r3}
 8007662:	6819      	ldr	r1, [r3, #0]
 8007664:	6808      	ldr	r0, [r1, #0]
 8007666:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800766a:	f01e 0f10 	tst.w	lr, #16
 800766e:	bf08      	it	eq
 8007670:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007674:	f380 8809 	msr	PSP, r0
 8007678:	f3bf 8f6f 	isb	sy
 800767c:	4770      	bx	lr
 800767e:	bf00      	nop

08007680 <pxCurrentTCBConst>:
 8007680:	200168c4 	.word	0x200168c4

08007684 <SysTick_Handler>:
{
 8007684:	b508      	push	{r3, lr}
	__asm volatile
 8007686:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800768a:	b672      	cpsid	i
 800768c:	f383 8811 	msr	BASEPRI, r3
 8007690:	f3bf 8f6f 	isb	sy
 8007694:	f3bf 8f4f 	dsb	sy
 8007698:	b662      	cpsie	i
		if( xTaskIncrementTick() != pdFALSE )
 800769a:	f000 ffc5 	bl	8008628 <xTaskIncrementTick>
 800769e:	b128      	cbz	r0, 80076ac <SysTick_Handler+0x28>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80076a0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80076a4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80076a8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 80076ac:	2300      	movs	r3, #0
 80076ae:	f383 8811 	msr	BASEPRI, r3
}
 80076b2:	bd08      	pop	{r3, pc}

080076b4 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80076b4:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 80076b8:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80076ba:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80076be:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80076c0:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80076c2:	4b04      	ldr	r3, [pc, #16]	@ (80076d4 <vPortSetupTimerInterrupt+0x20>)
 80076c4:	681b      	ldr	r3, [r3, #0]
 80076c6:	fbb3 f3f1 	udiv	r3, r3, r1
 80076ca:	3b01      	subs	r3, #1
 80076cc:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80076ce:	2307      	movs	r3, #7
 80076d0:	6113      	str	r3, [r2, #16]
}
 80076d2:	4770      	bx	lr
 80076d4:	2000000c 	.word	0x2000000c

080076d8 <xPortStartScheduler>:
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80076d8:	4b2c      	ldr	r3, [pc, #176]	@ (800778c <xPortStartScheduler+0xb4>)
{
 80076da:	b537      	push	{r0, r1, r2, r4, r5, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80076dc:	781a      	ldrb	r2, [r3, #0]
 80076de:	b2d2      	uxtb	r2, r2
 80076e0:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80076e2:	22ff      	movs	r2, #255	@ 0xff
 80076e4:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80076e6:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80076e8:	4a29      	ldr	r2, [pc, #164]	@ (8007790 <xPortStartScheduler+0xb8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80076ea:	b2db      	uxtb	r3, r3
 80076ec:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80076f0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80076f4:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 80076f8:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80076fa:	2307      	movs	r3, #7
 80076fc:	4a25      	ldr	r2, [pc, #148]	@ (8007794 <xPortStartScheduler+0xbc>)
 80076fe:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007700:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 8007704:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007706:	0609      	lsls	r1, r1, #24
 8007708:	d40c      	bmi.n	8007724 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800770a:	2b03      	cmp	r3, #3
 800770c:	d013      	beq.n	8007736 <xPortStartScheduler+0x5e>
	__asm volatile
 800770e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007712:	b672      	cpsid	i
 8007714:	f383 8811 	msr	BASEPRI, r3
 8007718:	f3bf 8f6f 	isb	sy
 800771c:	f3bf 8f4f 	dsb	sy
 8007720:	b662      	cpsie	i
 8007722:	e7fe      	b.n	8007722 <xPortStartScheduler+0x4a>
			ulMaxPRIGROUPValue--;
 8007724:	3b01      	subs	r3, #1
 8007726:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007728:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800772c:	005b      	lsls	r3, r3, #1
 800772e:	b2db      	uxtb	r3, r3
 8007730:	f88d 3003 	strb.w	r3, [sp, #3]
 8007734:	e7e4      	b.n	8007700 <xPortStartScheduler+0x28>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007736:	f44f 7340 	mov.w	r3, #768	@ 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800773a:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
	uxCriticalNesting = 0;
 800773e:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007740:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007742:	9b01      	ldr	r3, [sp, #4]
 8007744:	4a11      	ldr	r2, [pc, #68]	@ (800778c <xPortStartScheduler+0xb4>)
 8007746:	b2db      	uxtb	r3, r3
 8007748:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800774a:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800774e:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8007752:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007756:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800775a:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800775e:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8007762:	f7ff ffa7 	bl	80076b4 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007766:	4b0c      	ldr	r3, [pc, #48]	@ (8007798 <xPortStartScheduler+0xc0>)
 8007768:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800776a:	f7ff fec9 	bl	8007500 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800776e:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8007772:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8007776:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 800777a:	f7ff fead 	bl	80074d8 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800777e:	f001 f8f5 	bl	800896c <vTaskSwitchContext>
}
 8007782:	4628      	mov	r0, r5
	prvTaskExitError();
 8007784:	f7ff fec6 	bl	8007514 <prvTaskExitError>
}
 8007788:	b003      	add	sp, #12
 800778a:	bd30      	pop	{r4, r5, pc}
 800778c:	e000e400 	.word	0xe000e400
 8007790:	20016388 	.word	0x20016388
 8007794:	20016384 	.word	0x20016384
 8007798:	20000040 	.word	0x20000040

0800779c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800779c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80077a0:	2b0f      	cmp	r3, #15
 80077a2:	d910      	bls.n	80077c6 <vPortValidateInterruptPriority+0x2a>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80077a4:	4a13      	ldr	r2, [pc, #76]	@ (80077f4 <vPortValidateInterruptPriority+0x58>)
 80077a6:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80077a8:	4a13      	ldr	r2, [pc, #76]	@ (80077f8 <vPortValidateInterruptPriority+0x5c>)
 80077aa:	7812      	ldrb	r2, [r2, #0]
 80077ac:	429a      	cmp	r2, r3
 80077ae:	d90a      	bls.n	80077c6 <vPortValidateInterruptPriority+0x2a>
 80077b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80077b4:	b672      	cpsid	i
 80077b6:	f383 8811 	msr	BASEPRI, r3
 80077ba:	f3bf 8f6f 	isb	sy
 80077be:	f3bf 8f4f 	dsb	sy
 80077c2:	b662      	cpsie	i
 80077c4:	e7fe      	b.n	80077c4 <vPortValidateInterruptPriority+0x28>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80077c6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80077ca:	4a0c      	ldr	r2, [pc, #48]	@ (80077fc <vPortValidateInterruptPriority+0x60>)
 80077cc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 80077d0:	6812      	ldr	r2, [r2, #0]
 80077d2:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 80077d6:	4293      	cmp	r3, r2
 80077d8:	d90a      	bls.n	80077f0 <vPortValidateInterruptPriority+0x54>
 80077da:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80077de:	b672      	cpsid	i
 80077e0:	f383 8811 	msr	BASEPRI, r3
 80077e4:	f3bf 8f6f 	isb	sy
 80077e8:	f3bf 8f4f 	dsb	sy
 80077ec:	b662      	cpsie	i
 80077ee:	e7fe      	b.n	80077ee <vPortValidateInterruptPriority+0x52>
	}
 80077f0:	4770      	bx	lr
 80077f2:	bf00      	nop
 80077f4:	e000e3f0 	.word	0xe000e3f0
 80077f8:	20016388 	.word	0x20016388
 80077fc:	20016384 	.word	0x20016384

08007800 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007800:	b510      	push	{r4, lr}
 8007802:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007804:	f7ff fece 	bl	80075a4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007808:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800780a:	f7ff feef 	bl	80075ec <vPortExitCritical>

	return xReturn;
}
 800780e:	fab4 f084 	clz	r0, r4
 8007812:	0940      	lsrs	r0, r0, #5
 8007814:	bd10      	pop	{r4, pc}

08007816 <prvCopyDataToQueue>:
{
 8007816:	b570      	push	{r4, r5, r6, lr}
 8007818:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800781a:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
 800781c:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800781e:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007820:	b942      	cbnz	r2, 8007834 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007822:	6806      	ldr	r6, [r0, #0]
 8007824:	b99e      	cbnz	r6, 800784e <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007826:	6880      	ldr	r0, [r0, #8]
 8007828:	f001 fa06 	bl	8008c38 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800782c:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800782e:	3501      	adds	r5, #1
 8007830:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8007832:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007834:	b96e      	cbnz	r6, 8007852 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007836:	6840      	ldr	r0, [r0, #4]
 8007838:	f019 fd5f 	bl	80212fa <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800783c:	6863      	ldr	r3, [r4, #4]
 800783e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007840:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007842:	68a2      	ldr	r2, [r4, #8]
 8007844:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007846:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007848:	bf24      	itt	cs
 800784a:	6823      	ldrcs	r3, [r4, #0]
 800784c:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 800784e:	2000      	movs	r0, #0
 8007850:	e7ed      	b.n	800782e <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007852:	68c0      	ldr	r0, [r0, #12]
 8007854:	f019 fd51 	bl	80212fa <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007858:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800785a:	68e3      	ldr	r3, [r4, #12]
 800785c:	4251      	negs	r1, r2
 800785e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007860:	6822      	ldr	r2, [r4, #0]
 8007862:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007864:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007866:	bf3e      	ittt	cc
 8007868:	68a3      	ldrcc	r3, [r4, #8]
 800786a:	185b      	addcc	r3, r3, r1
 800786c:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800786e:	2e02      	cmp	r6, #2
 8007870:	d1ed      	bne.n	800784e <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007872:	b10d      	cbz	r5, 8007878 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007874:	3d01      	subs	r5, #1
 8007876:	e7ea      	b.n	800784e <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8007878:	4628      	mov	r0, r5
 800787a:	e7d8      	b.n	800782e <prvCopyDataToQueue+0x18>

0800787c <prvCopyDataFromQueue>:
{
 800787c:	4603      	mov	r3, r0
 800787e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007880:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8007882:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007884:	b162      	cbz	r2, 80078a0 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007886:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007888:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800788a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800788c:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800788e:	60dc      	str	r4, [r3, #12]
}
 8007890:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007894:	bf24      	itt	cs
 8007896:	6819      	ldrcs	r1, [r3, #0]
 8007898:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800789a:	68d9      	ldr	r1, [r3, #12]
 800789c:	f019 bd2d 	b.w	80212fa <memcpy>
}
 80078a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80078a4:	4770      	bx	lr

080078a6 <prvUnlockQueue>:
{
 80078a6:	b570      	push	{r4, r5, r6, lr}
 80078a8:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80078aa:	f7ff fe7b 	bl	80075a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80078ae:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80078b2:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80078b6:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80078b8:	2d00      	cmp	r5, #0
 80078ba:	dc14      	bgt.n	80078e6 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80078bc:	23ff      	movs	r3, #255	@ 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80078be:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 80078c2:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 80078c6:	f7ff fe91 	bl	80075ec <vPortExitCritical>
	taskENTER_CRITICAL();
 80078ca:	f7ff fe6b 	bl	80075a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80078ce:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
 80078d2:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80078d4:	2d00      	cmp	r5, #0
 80078d6:	dc12      	bgt.n	80078fe <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80078d8:	23ff      	movs	r3, #255	@ 0xff
 80078da:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 80078de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80078e2:	f7ff be83 	b.w	80075ec <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80078e6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80078e8:	2b00      	cmp	r3, #0
 80078ea:	d0e7      	beq.n	80078bc <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80078ec:	4630      	mov	r0, r6
 80078ee:	f001 f8bf 	bl	8008a70 <xTaskRemoveFromEventList>
 80078f2:	b108      	cbz	r0, 80078f8 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80078f4:	f001 f94c 	bl	8008b90 <vTaskMissedYield>
			--cTxLock;
 80078f8:	3d01      	subs	r5, #1
 80078fa:	b26d      	sxtb	r5, r5
 80078fc:	e7dc      	b.n	80078b8 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80078fe:	6923      	ldr	r3, [r4, #16]
 8007900:	2b00      	cmp	r3, #0
 8007902:	d0e9      	beq.n	80078d8 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007904:	4630      	mov	r0, r6
 8007906:	f001 f8b3 	bl	8008a70 <xTaskRemoveFromEventList>
 800790a:	b108      	cbz	r0, 8007910 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800790c:	f001 f940 	bl	8008b90 <vTaskMissedYield>
				--cRxLock;
 8007910:	3d01      	subs	r5, #1
 8007912:	b26d      	sxtb	r5, r5
 8007914:	e7de      	b.n	80078d4 <prvUnlockQueue+0x2e>

08007916 <xQueueGenericReset>:
{
 8007916:	b538      	push	{r3, r4, r5, lr}
 8007918:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800791a:	4604      	mov	r4, r0
 800791c:	b950      	cbnz	r0, 8007934 <xQueueGenericReset+0x1e>
 800791e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007922:	b672      	cpsid	i
 8007924:	f383 8811 	msr	BASEPRI, r3
 8007928:	f3bf 8f6f 	isb	sy
 800792c:	f3bf 8f4f 	dsb	sy
 8007930:	b662      	cpsie	i
 8007932:	e7fe      	b.n	8007932 <xQueueGenericReset+0x1c>
	taskENTER_CRITICAL();
 8007934:	f7ff fe36 	bl	80075a4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007938:	6822      	ldr	r2, [r4, #0]
 800793a:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800793e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007940:	434b      	muls	r3, r1
 8007942:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007944:	1a5b      	subs	r3, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007946:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007948:	441a      	add	r2, r3
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800794a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800794c:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800794e:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007950:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8007952:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007956:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 800795a:	b9a5      	cbnz	r5, 8007986 <xQueueGenericReset+0x70>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800795c:	6923      	ldr	r3, [r4, #16]
 800795e:	b173      	cbz	r3, 800797e <xQueueGenericReset+0x68>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007960:	f104 0010 	add.w	r0, r4, #16
 8007964:	f001 f884 	bl	8008a70 <xTaskRemoveFromEventList>
 8007968:	b148      	cbz	r0, 800797e <xQueueGenericReset+0x68>
					queueYIELD_IF_USING_PREEMPTION();
 800796a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800796e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007972:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007976:	f3bf 8f4f 	dsb	sy
 800797a:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800797e:	f7ff fe35 	bl	80075ec <vPortExitCritical>
}
 8007982:	2001      	movs	r0, #1
 8007984:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007986:	f104 0010 	add.w	r0, r4, #16
 800798a:	f7ff fd65 	bl	8007458 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800798e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007992:	f7ff fd61 	bl	8007458 <vListInitialise>
 8007996:	e7f2      	b.n	800797e <xQueueGenericReset+0x68>

08007998 <xQueueGenericCreateStatic.part.0>:
	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType )
 8007998:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800799a:	460d      	mov	r5, r1
		configASSERT( pxStaticQueue != NULL );
 800799c:	461c      	mov	r4, r3
 800799e:	b953      	cbnz	r3, 80079b6 <xQueueGenericCreateStatic.part.0+0x1e>
 80079a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079a4:	b672      	cpsid	i
 80079a6:	f383 8811 	msr	BASEPRI, r3
 80079aa:	f3bf 8f6f 	isb	sy
 80079ae:	f3bf 8f4f 	dsb	sy
 80079b2:	b662      	cpsie	i
 80079b4:	e7fe      	b.n	80079b4 <xQueueGenericCreateStatic.part.0+0x1c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80079b6:	b15a      	cbz	r2, 80079d0 <xQueueGenericCreateStatic.part.0+0x38>
 80079b8:	b9b1      	cbnz	r1, 80079e8 <xQueueGenericCreateStatic.part.0+0x50>
 80079ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079be:	b672      	cpsid	i
 80079c0:	f383 8811 	msr	BASEPRI, r3
 80079c4:	f3bf 8f6f 	isb	sy
 80079c8:	f3bf 8f4f 	dsb	sy
 80079cc:	b662      	cpsie	i
 80079ce:	e7fe      	b.n	80079ce <xQueueGenericCreateStatic.part.0+0x36>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80079d0:	b151      	cbz	r1, 80079e8 <xQueueGenericCreateStatic.part.0+0x50>
 80079d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079d6:	b672      	cpsid	i
 80079d8:	f383 8811 	msr	BASEPRI, r3
 80079dc:	f3bf 8f6f 	isb	sy
 80079e0:	f3bf 8f4f 	dsb	sy
 80079e4:	b662      	cpsie	i
 80079e6:	e7fe      	b.n	80079e6 <xQueueGenericCreateStatic.part.0+0x4e>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80079e8:	2350      	movs	r3, #80	@ 0x50
 80079ea:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80079ec:	9b01      	ldr	r3, [sp, #4]
 80079ee:	2b50      	cmp	r3, #80	@ 0x50
 80079f0:	d00a      	beq.n	8007a08 <xQueueGenericCreateStatic.part.0+0x70>
 80079f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079f6:	b672      	cpsid	i
 80079f8:	f383 8811 	msr	BASEPRI, r3
 80079fc:	f3bf 8f6f 	isb	sy
 8007a00:	f3bf 8f4f 	dsb	sy
 8007a04:	b662      	cpsie	i
 8007a06:	e7fe      	b.n	8007a06 <xQueueGenericCreateStatic.part.0+0x6e>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007a08:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007a0a:	2d00      	cmp	r5, #0
 8007a0c:	bf08      	it	eq
 8007a0e:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8007a10:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007a12:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007a16:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8007a18:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007a1c:	4620      	mov	r0, r4
 8007a1e:	f7ff ff7a 	bl	8007916 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007a22:	f89d 3018 	ldrb.w	r3, [sp, #24]
	}
 8007a26:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8007a28:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8007a2c:	b003      	add	sp, #12
 8007a2e:	bd30      	pop	{r4, r5, pc}

08007a30 <xQueueGenericCreateStatic>:
	{
 8007a30:	b410      	push	{r4}
 8007a32:	f89d 4004 	ldrb.w	r4, [sp, #4]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007a36:	b950      	cbnz	r0, 8007a4e <xQueueGenericCreateStatic+0x1e>
 8007a38:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a3c:	b672      	cpsid	i
 8007a3e:	f383 8811 	msr	BASEPRI, r3
 8007a42:	f3bf 8f6f 	isb	sy
 8007a46:	f3bf 8f4f 	dsb	sy
 8007a4a:	b662      	cpsie	i
 8007a4c:	e7fe      	b.n	8007a4c <xQueueGenericCreateStatic+0x1c>
 8007a4e:	9401      	str	r4, [sp, #4]
	}
 8007a50:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007a54:	f7ff bfa0 	b.w	8007998 <xQueueGenericCreateStatic.part.0>

08007a58 <xQueueGenericCreate>:
	{
 8007a58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a5a:	460d      	mov	r5, r1
 8007a5c:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007a5e:	4606      	mov	r6, r0
 8007a60:	b950      	cbnz	r0, 8007a78 <xQueueGenericCreate+0x20>
 8007a62:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a66:	b672      	cpsid	i
 8007a68:	f383 8811 	msr	BASEPRI, r3
 8007a6c:	f3bf 8f6f 	isb	sy
 8007a70:	f3bf 8f4f 	dsb	sy
 8007a74:	b662      	cpsie	i
 8007a76:	e7fe      	b.n	8007a76 <xQueueGenericCreate+0x1e>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007a78:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007a7a:	3050      	adds	r0, #80	@ 0x50
 8007a7c:	f7ff fc1a 	bl	80072b4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007a80:	4604      	mov	r4, r0
 8007a82:	b170      	cbz	r0, 8007aa2 <xQueueGenericCreate+0x4a>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007a84:	2300      	movs	r3, #0
 8007a86:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007a8a:	b165      	cbz	r5, 8007aa6 <xQueueGenericCreate+0x4e>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007a8c:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007a90:	2101      	movs	r1, #1
 8007a92:	4620      	mov	r0, r4
 8007a94:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8007a96:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007a9a:	f7ff ff3c 	bl	8007916 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007a9e:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8007aa2:	4620      	mov	r0, r4
 8007aa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007aa6:	4603      	mov	r3, r0
 8007aa8:	e7f2      	b.n	8007a90 <xQueueGenericCreate+0x38>

08007aaa <xQueueCreateCountingSemaphoreStatic>:
	{
 8007aaa:	b513      	push	{r0, r1, r4, lr}
 8007aac:	4613      	mov	r3, r2
 8007aae:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007ab0:	b950      	cbnz	r0, 8007ac8 <xQueueCreateCountingSemaphoreStatic+0x1e>
 8007ab2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ab6:	b672      	cpsid	i
 8007ab8:	f383 8811 	msr	BASEPRI, r3
 8007abc:	f3bf 8f6f 	isb	sy
 8007ac0:	f3bf 8f4f 	dsb	sy
 8007ac4:	b662      	cpsie	i
 8007ac6:	e7fe      	b.n	8007ac6 <xQueueCreateCountingSemaphoreStatic+0x1c>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007ac8:	4288      	cmp	r0, r1
 8007aca:	d20a      	bcs.n	8007ae2 <xQueueCreateCountingSemaphoreStatic+0x38>
 8007acc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ad0:	b672      	cpsid	i
 8007ad2:	f383 8811 	msr	BASEPRI, r3
 8007ad6:	f3bf 8f6f 	isb	sy
 8007ada:	f3bf 8f4f 	dsb	sy
 8007ade:	b662      	cpsie	i
 8007ae0:	e7fe      	b.n	8007ae0 <xQueueCreateCountingSemaphoreStatic+0x36>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007ae2:	2202      	movs	r2, #2
 8007ae4:	9200      	str	r2, [sp, #0]
 8007ae6:	2200      	movs	r2, #0
 8007ae8:	4611      	mov	r1, r2
 8007aea:	f7ff ffa1 	bl	8007a30 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8007aee:	b100      	cbz	r0, 8007af2 <xQueueCreateCountingSemaphoreStatic+0x48>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007af0:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8007af2:	b002      	add	sp, #8
 8007af4:	bd10      	pop	{r4, pc}

08007af6 <xQueueCreateCountingSemaphore>:
	{
 8007af6:	b510      	push	{r4, lr}
 8007af8:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007afa:	b950      	cbnz	r0, 8007b12 <xQueueCreateCountingSemaphore+0x1c>
 8007afc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b00:	b672      	cpsid	i
 8007b02:	f383 8811 	msr	BASEPRI, r3
 8007b06:	f3bf 8f6f 	isb	sy
 8007b0a:	f3bf 8f4f 	dsb	sy
 8007b0e:	b662      	cpsie	i
 8007b10:	e7fe      	b.n	8007b10 <xQueueCreateCountingSemaphore+0x1a>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007b12:	4288      	cmp	r0, r1
 8007b14:	d20a      	bcs.n	8007b2c <xQueueCreateCountingSemaphore+0x36>
 8007b16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b1a:	b672      	cpsid	i
 8007b1c:	f383 8811 	msr	BASEPRI, r3
 8007b20:	f3bf 8f6f 	isb	sy
 8007b24:	f3bf 8f4f 	dsb	sy
 8007b28:	b662      	cpsie	i
 8007b2a:	e7fe      	b.n	8007b2a <xQueueCreateCountingSemaphore+0x34>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007b2c:	2202      	movs	r2, #2
 8007b2e:	2100      	movs	r1, #0
 8007b30:	f7ff ff92 	bl	8007a58 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007b34:	b100      	cbz	r0, 8007b38 <xQueueCreateCountingSemaphore+0x42>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007b36:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8007b38:	bd10      	pop	{r4, pc}

08007b3a <xQueueGenericSend>:
{
 8007b3a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007b3e:	460f      	mov	r7, r1
 8007b40:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8007b42:	4604      	mov	r4, r0
{
 8007b44:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 8007b46:	b950      	cbnz	r0, 8007b5e <xQueueGenericSend+0x24>
 8007b48:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b4c:	b672      	cpsid	i
 8007b4e:	f383 8811 	msr	BASEPRI, r3
 8007b52:	f3bf 8f6f 	isb	sy
 8007b56:	f3bf 8f4f 	dsb	sy
 8007b5a:	b662      	cpsie	i
 8007b5c:	e7fe      	b.n	8007b5c <xQueueGenericSend+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007b5e:	b961      	cbnz	r1, 8007b7a <xQueueGenericSend+0x40>
 8007b60:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007b62:	b153      	cbz	r3, 8007b7a <xQueueGenericSend+0x40>
 8007b64:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b68:	b672      	cpsid	i
 8007b6a:	f383 8811 	msr	BASEPRI, r3
 8007b6e:	f3bf 8f6f 	isb	sy
 8007b72:	f3bf 8f4f 	dsb	sy
 8007b76:	b662      	cpsie	i
 8007b78:	e7fe      	b.n	8007b78 <xQueueGenericSend+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007b7a:	2e02      	cmp	r6, #2
 8007b7c:	d10d      	bne.n	8007b9a <xQueueGenericSend+0x60>
 8007b7e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007b80:	2b01      	cmp	r3, #1
 8007b82:	d00a      	beq.n	8007b9a <xQueueGenericSend+0x60>
 8007b84:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b88:	b672      	cpsid	i
 8007b8a:	f383 8811 	msr	BASEPRI, r3
 8007b8e:	f3bf 8f6f 	isb	sy
 8007b92:	f3bf 8f4f 	dsb	sy
 8007b96:	b662      	cpsie	i
 8007b98:	e7fe      	b.n	8007b98 <xQueueGenericSend+0x5e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007b9a:	f000 ffff 	bl	8008b9c <xTaskGetSchedulerState>
 8007b9e:	4605      	mov	r5, r0
 8007ba0:	b330      	cbz	r0, 8007bf0 <xQueueGenericSend+0xb6>
 8007ba2:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8007ba4:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8007ba8:	f7ff fcfc 	bl	80075a4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007bac:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8007bae:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007bb0:	429a      	cmp	r2, r3
 8007bb2:	d301      	bcc.n	8007bb8 <xQueueGenericSend+0x7e>
 8007bb4:	2e02      	cmp	r6, #2
 8007bb6:	d129      	bne.n	8007c0c <xQueueGenericSend+0xd2>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007bb8:	4632      	mov	r2, r6
 8007bba:	4639      	mov	r1, r7
 8007bbc:	4620      	mov	r0, r4
 8007bbe:	f7ff fe2a 	bl	8007816 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007bc2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007bc4:	b11b      	cbz	r3, 8007bce <xQueueGenericSend+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007bc6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007bca:	f000 ff51 	bl	8008a70 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007bce:	b148      	cbz	r0, 8007be4 <xQueueGenericSend+0xaa>
						queueYIELD_IF_USING_PREEMPTION();
 8007bd0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007bd4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007bd8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007bdc:	f3bf 8f4f 	dsb	sy
 8007be0:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007be4:	f7ff fd02 	bl	80075ec <vPortExitCritical>
				return pdPASS;
 8007be8:	2001      	movs	r0, #1
}
 8007bea:	b004      	add	sp, #16
 8007bec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007bf0:	9b01      	ldr	r3, [sp, #4]
 8007bf2:	2b00      	cmp	r3, #0
 8007bf4:	d0d6      	beq.n	8007ba4 <xQueueGenericSend+0x6a>
 8007bf6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bfa:	b672      	cpsid	i
 8007bfc:	f383 8811 	msr	BASEPRI, r3
 8007c00:	f3bf 8f6f 	isb	sy
 8007c04:	f3bf 8f4f 	dsb	sy
 8007c08:	b662      	cpsie	i
 8007c0a:	e7fe      	b.n	8007c0a <xQueueGenericSend+0xd0>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007c0c:	9b01      	ldr	r3, [sp, #4]
 8007c0e:	b91b      	cbnz	r3, 8007c18 <xQueueGenericSend+0xde>
					taskEXIT_CRITICAL();
 8007c10:	f7ff fcec 	bl	80075ec <vPortExitCritical>
					return errQUEUE_FULL;
 8007c14:	2000      	movs	r0, #0
 8007c16:	e7e8      	b.n	8007bea <xQueueGenericSend+0xb0>
				else if( xEntryTimeSet == pdFALSE )
 8007c18:	b915      	cbnz	r5, 8007c20 <xQueueGenericSend+0xe6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007c1a:	a802      	add	r0, sp, #8
 8007c1c:	f000 ff6c 	bl	8008af8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007c20:	f7ff fce4 	bl	80075ec <vPortExitCritical>
		vTaskSuspendAll();
 8007c24:	f000 fcf2 	bl	800860c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007c28:	f7ff fcbc 	bl	80075a4 <vPortEnterCritical>
 8007c2c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8007c30:	2bff      	cmp	r3, #255	@ 0xff
 8007c32:	d101      	bne.n	8007c38 <xQueueGenericSend+0xfe>
 8007c34:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
 8007c38:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8007c3c:	2bff      	cmp	r3, #255	@ 0xff
 8007c3e:	d101      	bne.n	8007c44 <xQueueGenericSend+0x10a>
 8007c40:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
 8007c44:	f7ff fcd2 	bl	80075ec <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007c48:	a901      	add	r1, sp, #4
 8007c4a:	a802      	add	r0, sp, #8
 8007c4c:	f000 ff60 	bl	8008b10 <xTaskCheckForTimeOut>
 8007c50:	bb38      	cbnz	r0, 8007ca2 <xQueueGenericSend+0x168>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007c52:	f7ff fca7 	bl	80075a4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007c56:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8007c58:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007c5a:	429a      	cmp	r2, r3
 8007c5c:	d10e      	bne.n	8007c7c <xQueueGenericSend+0x142>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007c5e:	f7ff fcc5 	bl	80075ec <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007c62:	9901      	ldr	r1, [sp, #4]
 8007c64:	f104 0010 	add.w	r0, r4, #16
 8007c68:	f000 fec6 	bl	80089f8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007c6c:	4620      	mov	r0, r4
 8007c6e:	f7ff fe1a 	bl	80078a6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007c72:	f000 fd71 	bl	8008758 <xTaskResumeAll>
 8007c76:	b148      	cbz	r0, 8007c8c <xQueueGenericSend+0x152>
 8007c78:	2501      	movs	r5, #1
 8007c7a:	e795      	b.n	8007ba8 <xQueueGenericSend+0x6e>
	taskEXIT_CRITICAL();
 8007c7c:	f7ff fcb6 	bl	80075ec <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007c80:	4620      	mov	r0, r4
 8007c82:	f7ff fe10 	bl	80078a6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007c86:	f000 fd67 	bl	8008758 <xTaskResumeAll>
 8007c8a:	e7f5      	b.n	8007c78 <xQueueGenericSend+0x13e>
					portYIELD_WITHIN_API();
 8007c8c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007c90:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007c94:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007c98:	f3bf 8f4f 	dsb	sy
 8007c9c:	f3bf 8f6f 	isb	sy
 8007ca0:	e7ea      	b.n	8007c78 <xQueueGenericSend+0x13e>
			prvUnlockQueue( pxQueue );
 8007ca2:	4620      	mov	r0, r4
 8007ca4:	f7ff fdff 	bl	80078a6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007ca8:	f000 fd56 	bl	8008758 <xTaskResumeAll>
			return errQUEUE_FULL;
 8007cac:	e7b2      	b.n	8007c14 <xQueueGenericSend+0xda>

08007cae <xQueueGenericSendFromISR>:
{
 8007cae:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007cb2:	4689      	mov	r9, r1
 8007cb4:	4617      	mov	r7, r2
 8007cb6:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8007cb8:	4604      	mov	r4, r0
 8007cba:	b950      	cbnz	r0, 8007cd2 <xQueueGenericSendFromISR+0x24>
 8007cbc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007cc0:	b672      	cpsid	i
 8007cc2:	f383 8811 	msr	BASEPRI, r3
 8007cc6:	f3bf 8f6f 	isb	sy
 8007cca:	f3bf 8f4f 	dsb	sy
 8007cce:	b662      	cpsie	i
 8007cd0:	e7fe      	b.n	8007cd0 <xQueueGenericSendFromISR+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007cd2:	b961      	cbnz	r1, 8007cee <xQueueGenericSendFromISR+0x40>
 8007cd4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007cd6:	b153      	cbz	r3, 8007cee <xQueueGenericSendFromISR+0x40>
 8007cd8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007cdc:	b672      	cpsid	i
 8007cde:	f383 8811 	msr	BASEPRI, r3
 8007ce2:	f3bf 8f6f 	isb	sy
 8007ce6:	f3bf 8f4f 	dsb	sy
 8007cea:	b662      	cpsie	i
 8007cec:	e7fe      	b.n	8007cec <xQueueGenericSendFromISR+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007cee:	2e02      	cmp	r6, #2
 8007cf0:	d10d      	bne.n	8007d0e <xQueueGenericSendFromISR+0x60>
 8007cf2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007cf4:	2b01      	cmp	r3, #1
 8007cf6:	d00a      	beq.n	8007d0e <xQueueGenericSendFromISR+0x60>
 8007cf8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007cfc:	b672      	cpsid	i
 8007cfe:	f383 8811 	msr	BASEPRI, r3
 8007d02:	f3bf 8f6f 	isb	sy
 8007d06:	f3bf 8f4f 	dsb	sy
 8007d0a:	b662      	cpsie	i
 8007d0c:	e7fe      	b.n	8007d0c <xQueueGenericSendFromISR+0x5e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007d0e:	f7ff fd45 	bl	800779c <vPortValidateInterruptPriority>
	__asm volatile
 8007d12:	f3ef 8811 	mrs	r8, BASEPRI
 8007d16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d1a:	b672      	cpsid	i
 8007d1c:	f383 8811 	msr	BASEPRI, r3
 8007d20:	f3bf 8f6f 	isb	sy
 8007d24:	f3bf 8f4f 	dsb	sy
 8007d28:	b662      	cpsie	i
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007d2a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8007d2c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007d2e:	429a      	cmp	r2, r3
 8007d30:	d301      	bcc.n	8007d36 <xQueueGenericSendFromISR+0x88>
 8007d32:	2e02      	cmp	r6, #2
 8007d34:	d11d      	bne.n	8007d72 <xQueueGenericSendFromISR+0xc4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007d36:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007d3a:	4632      	mov	r2, r6
 8007d3c:	4649      	mov	r1, r9
 8007d3e:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 8007d40:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007d42:	f7ff fd68 	bl	8007816 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8007d46:	1c6b      	adds	r3, r5, #1
 8007d48:	d10e      	bne.n	8007d68 <xQueueGenericSendFromISR+0xba>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007d4a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007d4c:	b13b      	cbz	r3, 8007d5e <xQueueGenericSendFromISR+0xb0>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007d4e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007d52:	f000 fe8d 	bl	8008a70 <xTaskRemoveFromEventList>
 8007d56:	b110      	cbz	r0, 8007d5e <xQueueGenericSendFromISR+0xb0>
							if( pxHigherPriorityTaskWoken != NULL )
 8007d58:	b10f      	cbz	r7, 8007d5e <xQueueGenericSendFromISR+0xb0>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007d5a:	2301      	movs	r3, #1
 8007d5c:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8007d5e:	2001      	movs	r0, #1
	__asm volatile
 8007d60:	f388 8811 	msr	BASEPRI, r8
}
 8007d64:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007d68:	3501      	adds	r5, #1
 8007d6a:	b26d      	sxtb	r5, r5
 8007d6c:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8007d70:	e7f5      	b.n	8007d5e <xQueueGenericSendFromISR+0xb0>
			xReturn = errQUEUE_FULL;
 8007d72:	2000      	movs	r0, #0
 8007d74:	e7f4      	b.n	8007d60 <xQueueGenericSendFromISR+0xb2>

08007d76 <xQueueGiveFromISR>:
{
 8007d76:	b570      	push	{r4, r5, r6, lr}
 8007d78:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007d7a:	4604      	mov	r4, r0
 8007d7c:	b950      	cbnz	r0, 8007d94 <xQueueGiveFromISR+0x1e>
	__asm volatile
 8007d7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d82:	b672      	cpsid	i
 8007d84:	f383 8811 	msr	BASEPRI, r3
 8007d88:	f3bf 8f6f 	isb	sy
 8007d8c:	f3bf 8f4f 	dsb	sy
 8007d90:	b662      	cpsie	i
 8007d92:	e7fe      	b.n	8007d92 <xQueueGiveFromISR+0x1c>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007d94:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007d96:	b153      	cbz	r3, 8007dae <xQueueGiveFromISR+0x38>
 8007d98:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d9c:	b672      	cpsid	i
 8007d9e:	f383 8811 	msr	BASEPRI, r3
 8007da2:	f3bf 8f6f 	isb	sy
 8007da6:	f3bf 8f4f 	dsb	sy
 8007daa:	b662      	cpsie	i
 8007dac:	e7fe      	b.n	8007dac <xQueueGiveFromISR+0x36>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007dae:	6803      	ldr	r3, [r0, #0]
 8007db0:	b963      	cbnz	r3, 8007dcc <xQueueGiveFromISR+0x56>
 8007db2:	6883      	ldr	r3, [r0, #8]
 8007db4:	b153      	cbz	r3, 8007dcc <xQueueGiveFromISR+0x56>
 8007db6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007dba:	b672      	cpsid	i
 8007dbc:	f383 8811 	msr	BASEPRI, r3
 8007dc0:	f3bf 8f6f 	isb	sy
 8007dc4:	f3bf 8f4f 	dsb	sy
 8007dc8:	b662      	cpsie	i
 8007dca:	e7fe      	b.n	8007dca <xQueueGiveFromISR+0x54>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007dcc:	f7ff fce6 	bl	800779c <vPortValidateInterruptPriority>
	__asm volatile
 8007dd0:	f3ef 8611 	mrs	r6, BASEPRI
 8007dd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007dd8:	b672      	cpsid	i
 8007dda:	f383 8811 	msr	BASEPRI, r3
 8007dde:	f3bf 8f6f 	isb	sy
 8007de2:	f3bf 8f4f 	dsb	sy
 8007de6:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007de8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8007dea:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007dec:	4293      	cmp	r3, r2
 8007dee:	d919      	bls.n	8007e24 <xQueueGiveFromISR+0xae>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007df0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007df4:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8007df6:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8007df8:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007dfa:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8007dfc:	d10d      	bne.n	8007e1a <xQueueGiveFromISR+0xa4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007dfe:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007e00:	b13b      	cbz	r3, 8007e12 <xQueueGiveFromISR+0x9c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007e02:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007e06:	f000 fe33 	bl	8008a70 <xTaskRemoveFromEventList>
 8007e0a:	b110      	cbz	r0, 8007e12 <xQueueGiveFromISR+0x9c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007e0c:	b10d      	cbz	r5, 8007e12 <xQueueGiveFromISR+0x9c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007e0e:	2301      	movs	r3, #1
 8007e10:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 8007e12:	2001      	movs	r0, #1
	__asm volatile
 8007e14:	f386 8811 	msr	BASEPRI, r6
}
 8007e18:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007e1a:	3301      	adds	r3, #1
 8007e1c:	b25b      	sxtb	r3, r3
 8007e1e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8007e22:	e7f6      	b.n	8007e12 <xQueueGiveFromISR+0x9c>
			xReturn = errQUEUE_FULL;
 8007e24:	2000      	movs	r0, #0
 8007e26:	e7f5      	b.n	8007e14 <xQueueGiveFromISR+0x9e>

08007e28 <xQueueReceive>:
{
 8007e28:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007e2c:	460e      	mov	r6, r1
	configASSERT( ( pxQueue ) );
 8007e2e:	4604      	mov	r4, r0
{
 8007e30:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007e32:	b950      	cbnz	r0, 8007e4a <xQueueReceive+0x22>
	__asm volatile
 8007e34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e38:	b672      	cpsid	i
 8007e3a:	f383 8811 	msr	BASEPRI, r3
 8007e3e:	f3bf 8f6f 	isb	sy
 8007e42:	f3bf 8f4f 	dsb	sy
 8007e46:	b662      	cpsie	i
 8007e48:	e7fe      	b.n	8007e48 <xQueueReceive+0x20>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007e4a:	b961      	cbnz	r1, 8007e66 <xQueueReceive+0x3e>
 8007e4c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007e4e:	b153      	cbz	r3, 8007e66 <xQueueReceive+0x3e>
 8007e50:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e54:	b672      	cpsid	i
 8007e56:	f383 8811 	msr	BASEPRI, r3
 8007e5a:	f3bf 8f6f 	isb	sy
 8007e5e:	f3bf 8f4f 	dsb	sy
 8007e62:	b662      	cpsie	i
 8007e64:	e7fe      	b.n	8007e64 <xQueueReceive+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007e66:	f000 fe99 	bl	8008b9c <xTaskGetSchedulerState>
 8007e6a:	4605      	mov	r5, r0
 8007e6c:	b318      	cbz	r0, 8007eb6 <xQueueReceive+0x8e>
 8007e6e:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8007e70:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8007e74:	f7ff fb96 	bl	80075a4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007e78:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007e7a:	b357      	cbz	r7, 8007ed2 <xQueueReceive+0xaa>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007e7c:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007e7e:	4631      	mov	r1, r6
 8007e80:	4620      	mov	r0, r4
 8007e82:	f7ff fcfb 	bl	800787c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007e86:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007e88:	6923      	ldr	r3, [r4, #16]
 8007e8a:	b173      	cbz	r3, 8007eaa <xQueueReceive+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007e8c:	f104 0010 	add.w	r0, r4, #16
 8007e90:	f000 fdee 	bl	8008a70 <xTaskRemoveFromEventList>
 8007e94:	b148      	cbz	r0, 8007eaa <xQueueReceive+0x82>
						queueYIELD_IF_USING_PREEMPTION();
 8007e96:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007e9a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007e9e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007ea2:	f3bf 8f4f 	dsb	sy
 8007ea6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007eaa:	f7ff fb9f 	bl	80075ec <vPortExitCritical>
				return pdPASS;
 8007eae:	2001      	movs	r0, #1
}
 8007eb0:	b004      	add	sp, #16
 8007eb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007eb6:	9b01      	ldr	r3, [sp, #4]
 8007eb8:	2b00      	cmp	r3, #0
 8007eba:	d0d9      	beq.n	8007e70 <xQueueReceive+0x48>
 8007ebc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ec0:	b672      	cpsid	i
 8007ec2:	f383 8811 	msr	BASEPRI, r3
 8007ec6:	f3bf 8f6f 	isb	sy
 8007eca:	f3bf 8f4f 	dsb	sy
 8007ece:	b662      	cpsie	i
 8007ed0:	e7fe      	b.n	8007ed0 <xQueueReceive+0xa8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007ed2:	9b01      	ldr	r3, [sp, #4]
 8007ed4:	b91b      	cbnz	r3, 8007ede <xQueueReceive+0xb6>
					taskEXIT_CRITICAL();
 8007ed6:	f7ff fb89 	bl	80075ec <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007eda:	2000      	movs	r0, #0
 8007edc:	e7e8      	b.n	8007eb0 <xQueueReceive+0x88>
				else if( xEntryTimeSet == pdFALSE )
 8007ede:	b915      	cbnz	r5, 8007ee6 <xQueueReceive+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007ee0:	a802      	add	r0, sp, #8
 8007ee2:	f000 fe09 	bl	8008af8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007ee6:	f7ff fb81 	bl	80075ec <vPortExitCritical>
		vTaskSuspendAll();
 8007eea:	f000 fb8f 	bl	800860c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007eee:	f7ff fb59 	bl	80075a4 <vPortEnterCritical>
 8007ef2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8007ef6:	2bff      	cmp	r3, #255	@ 0xff
 8007ef8:	d101      	bne.n	8007efe <xQueueReceive+0xd6>
 8007efa:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
 8007efe:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8007f02:	2bff      	cmp	r3, #255	@ 0xff
 8007f04:	d101      	bne.n	8007f0a <xQueueReceive+0xe2>
 8007f06:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
 8007f0a:	f7ff fb6f 	bl	80075ec <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007f0e:	a901      	add	r1, sp, #4
 8007f10:	a802      	add	r0, sp, #8
 8007f12:	f000 fdfd 	bl	8008b10 <xTaskCheckForTimeOut>
 8007f16:	bb00      	cbnz	r0, 8007f5a <xQueueReceive+0x132>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007f18:	4620      	mov	r0, r4
 8007f1a:	f7ff fc71 	bl	8007800 <prvIsQueueEmpty>
 8007f1e:	b1b0      	cbz	r0, 8007f4e <xQueueReceive+0x126>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007f20:	9901      	ldr	r1, [sp, #4]
 8007f22:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007f26:	f000 fd67 	bl	80089f8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007f2a:	4620      	mov	r0, r4
 8007f2c:	f7ff fcbb 	bl	80078a6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007f30:	f000 fc12 	bl	8008758 <xTaskResumeAll>
 8007f34:	b948      	cbnz	r0, 8007f4a <xQueueReceive+0x122>
					portYIELD_WITHIN_API();
 8007f36:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007f3a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007f3e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007f42:	f3bf 8f4f 	dsb	sy
 8007f46:	f3bf 8f6f 	isb	sy
 8007f4a:	2501      	movs	r5, #1
 8007f4c:	e792      	b.n	8007e74 <xQueueReceive+0x4c>
				prvUnlockQueue( pxQueue );
 8007f4e:	4620      	mov	r0, r4
 8007f50:	f7ff fca9 	bl	80078a6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007f54:	f000 fc00 	bl	8008758 <xTaskResumeAll>
 8007f58:	e7f7      	b.n	8007f4a <xQueueReceive+0x122>
			prvUnlockQueue( pxQueue );
 8007f5a:	4620      	mov	r0, r4
 8007f5c:	f7ff fca3 	bl	80078a6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007f60:	f000 fbfa 	bl	8008758 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007f64:	4620      	mov	r0, r4
 8007f66:	f7ff fc4b 	bl	8007800 <prvIsQueueEmpty>
 8007f6a:	2800      	cmp	r0, #0
 8007f6c:	d0ed      	beq.n	8007f4a <xQueueReceive+0x122>
 8007f6e:	e7b4      	b.n	8007eda <xQueueReceive+0xb2>

08007f70 <xQueueSemaphoreTake>:
{
 8007f70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007f72:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8007f74:	4604      	mov	r4, r0
{
 8007f76:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007f78:	b950      	cbnz	r0, 8007f90 <xQueueSemaphoreTake+0x20>
 8007f7a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f7e:	b672      	cpsid	i
 8007f80:	f383 8811 	msr	BASEPRI, r3
 8007f84:	f3bf 8f6f 	isb	sy
 8007f88:	f3bf 8f4f 	dsb	sy
 8007f8c:	b662      	cpsie	i
 8007f8e:	e7fe      	b.n	8007f8e <xQueueSemaphoreTake+0x1e>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007f90:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8007f92:	b155      	cbz	r5, 8007faa <xQueueSemaphoreTake+0x3a>
 8007f94:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f98:	b672      	cpsid	i
 8007f9a:	f383 8811 	msr	BASEPRI, r3
 8007f9e:	f3bf 8f6f 	isb	sy
 8007fa2:	f3bf 8f4f 	dsb	sy
 8007fa6:	b662      	cpsie	i
 8007fa8:	e7fe      	b.n	8007fa8 <xQueueSemaphoreTake+0x38>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007faa:	f000 fdf7 	bl	8008b9c <xTaskGetSchedulerState>
 8007fae:	4606      	mov	r6, r0
 8007fb0:	b320      	cbz	r0, 8007ffc <xQueueSemaphoreTake+0x8c>
 8007fb2:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8007fb4:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 8007fb6:	f7ff faf5 	bl	80075a4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007fba:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007fbc:	b363      	cbz	r3, 8008018 <xQueueSemaphoreTake+0xa8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007fbe:	3b01      	subs	r3, #1
 8007fc0:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007fc2:	6823      	ldr	r3, [r4, #0]
 8007fc4:	b913      	cbnz	r3, 8007fcc <xQueueSemaphoreTake+0x5c>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007fc6:	f000 fecf 	bl	8008d68 <pvTaskIncrementMutexHeldCount>
 8007fca:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007fcc:	6923      	ldr	r3, [r4, #16]
 8007fce:	b173      	cbz	r3, 8007fee <xQueueSemaphoreTake+0x7e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007fd0:	f104 0010 	add.w	r0, r4, #16
 8007fd4:	f000 fd4c 	bl	8008a70 <xTaskRemoveFromEventList>
 8007fd8:	b148      	cbz	r0, 8007fee <xQueueSemaphoreTake+0x7e>
						queueYIELD_IF_USING_PREEMPTION();
 8007fda:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007fde:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007fe2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007fe6:	f3bf 8f4f 	dsb	sy
 8007fea:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007fee:	f7ff fafd 	bl	80075ec <vPortExitCritical>
				return pdPASS;
 8007ff2:	2001      	movs	r0, #1
}
 8007ff4:	b005      	add	sp, #20
 8007ff6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007ff8:	4635      	mov	r5, r6
 8007ffa:	e7db      	b.n	8007fb4 <xQueueSemaphoreTake+0x44>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007ffc:	9b01      	ldr	r3, [sp, #4]
 8007ffe:	2b00      	cmp	r3, #0
 8008000:	d0fa      	beq.n	8007ff8 <xQueueSemaphoreTake+0x88>
 8008002:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008006:	b672      	cpsid	i
 8008008:	f383 8811 	msr	BASEPRI, r3
 800800c:	f3bf 8f6f 	isb	sy
 8008010:	f3bf 8f4f 	dsb	sy
 8008014:	b662      	cpsie	i
 8008016:	e7fe      	b.n	8008016 <xQueueSemaphoreTake+0xa6>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008018:	9b01      	ldr	r3, [sp, #4]
 800801a:	b963      	cbnz	r3, 8008036 <xQueueSemaphoreTake+0xc6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800801c:	2d00      	cmp	r5, #0
 800801e:	d068      	beq.n	80080f2 <xQueueSemaphoreTake+0x182>
 8008020:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008024:	b672      	cpsid	i
 8008026:	f383 8811 	msr	BASEPRI, r3
 800802a:	f3bf 8f6f 	isb	sy
 800802e:	f3bf 8f4f 	dsb	sy
 8008032:	b662      	cpsie	i
 8008034:	e7fe      	b.n	8008034 <xQueueSemaphoreTake+0xc4>
				else if( xEntryTimeSet == pdFALSE )
 8008036:	b916      	cbnz	r6, 800803e <xQueueSemaphoreTake+0xce>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008038:	a802      	add	r0, sp, #8
 800803a:	f000 fd5d 	bl	8008af8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800803e:	f7ff fad5 	bl	80075ec <vPortExitCritical>
		vTaskSuspendAll();
 8008042:	f000 fae3 	bl	800860c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008046:	f7ff faad 	bl	80075a4 <vPortEnterCritical>
 800804a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800804e:	2bff      	cmp	r3, #255	@ 0xff
 8008050:	d101      	bne.n	8008056 <xQueueSemaphoreTake+0xe6>
 8008052:	f884 7044 	strb.w	r7, [r4, #68]	@ 0x44
 8008056:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800805a:	2bff      	cmp	r3, #255	@ 0xff
 800805c:	d101      	bne.n	8008062 <xQueueSemaphoreTake+0xf2>
 800805e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8008062:	f7ff fac3 	bl	80075ec <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008066:	a901      	add	r1, sp, #4
 8008068:	a802      	add	r0, sp, #8
 800806a:	f000 fd51 	bl	8008b10 <xTaskCheckForTimeOut>
 800806e:	bb50      	cbnz	r0, 80080c6 <xQueueSemaphoreTake+0x156>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008070:	4620      	mov	r0, r4
 8008072:	f7ff fbc5 	bl	8007800 <prvIsQueueEmpty>
 8008076:	b300      	cbz	r0, 80080ba <xQueueSemaphoreTake+0x14a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008078:	6823      	ldr	r3, [r4, #0]
 800807a:	b93b      	cbnz	r3, 800808c <xQueueSemaphoreTake+0x11c>
						taskENTER_CRITICAL();
 800807c:	f7ff fa92 	bl	80075a4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008080:	68a0      	ldr	r0, [r4, #8]
 8008082:	f000 fd9b 	bl	8008bbc <xTaskPriorityInherit>
 8008086:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8008088:	f7ff fab0 	bl	80075ec <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800808c:	9901      	ldr	r1, [sp, #4]
 800808e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008092:	f000 fcb1 	bl	80089f8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008096:	4620      	mov	r0, r4
 8008098:	f7ff fc05 	bl	80078a6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800809c:	f000 fb5c 	bl	8008758 <xTaskResumeAll>
 80080a0:	b948      	cbnz	r0, 80080b6 <xQueueSemaphoreTake+0x146>
					portYIELD_WITHIN_API();
 80080a2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80080a6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80080aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80080ae:	f3bf 8f4f 	dsb	sy
 80080b2:	f3bf 8f6f 	isb	sy
 80080b6:	2601      	movs	r6, #1
 80080b8:	e77d      	b.n	8007fb6 <xQueueSemaphoreTake+0x46>
				prvUnlockQueue( pxQueue );
 80080ba:	4620      	mov	r0, r4
 80080bc:	f7ff fbf3 	bl	80078a6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80080c0:	f000 fb4a 	bl	8008758 <xTaskResumeAll>
 80080c4:	e7f7      	b.n	80080b6 <xQueueSemaphoreTake+0x146>
			prvUnlockQueue( pxQueue );
 80080c6:	4620      	mov	r0, r4
 80080c8:	f7ff fbed 	bl	80078a6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80080cc:	f000 fb44 	bl	8008758 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80080d0:	4620      	mov	r0, r4
 80080d2:	f7ff fb95 	bl	8007800 <prvIsQueueEmpty>
 80080d6:	2800      	cmp	r0, #0
 80080d8:	d0ed      	beq.n	80080b6 <xQueueSemaphoreTake+0x146>
					if( xInheritanceOccurred != pdFALSE )
 80080da:	b165      	cbz	r5, 80080f6 <xQueueSemaphoreTake+0x186>
						taskENTER_CRITICAL();
 80080dc:	f7ff fa62 	bl	80075a4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80080e0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80080e2:	b119      	cbz	r1, 80080ec <xQueueSemaphoreTake+0x17c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80080e4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80080e6:	6819      	ldr	r1, [r3, #0]
 80080e8:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80080ec:	68a0      	ldr	r0, [r4, #8]
 80080ee:	f000 fde9 	bl	8008cc4 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 80080f2:	f7ff fa7b 	bl	80075ec <vPortExitCritical>
					return errQUEUE_EMPTY;
 80080f6:	2000      	movs	r0, #0
 80080f8:	e77c      	b.n	8007ff4 <xQueueSemaphoreTake+0x84>

080080fa <xQueueReceiveFromISR>:
{
 80080fa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80080fe:	4689      	mov	r9, r1
 8008100:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8008102:	4604      	mov	r4, r0
 8008104:	b950      	cbnz	r0, 800811c <xQueueReceiveFromISR+0x22>
 8008106:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800810a:	b672      	cpsid	i
 800810c:	f383 8811 	msr	BASEPRI, r3
 8008110:	f3bf 8f6f 	isb	sy
 8008114:	f3bf 8f4f 	dsb	sy
 8008118:	b662      	cpsie	i
 800811a:	e7fe      	b.n	800811a <xQueueReceiveFromISR+0x20>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800811c:	b961      	cbnz	r1, 8008138 <xQueueReceiveFromISR+0x3e>
 800811e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008120:	b153      	cbz	r3, 8008138 <xQueueReceiveFromISR+0x3e>
 8008122:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008126:	b672      	cpsid	i
 8008128:	f383 8811 	msr	BASEPRI, r3
 800812c:	f3bf 8f6f 	isb	sy
 8008130:	f3bf 8f4f 	dsb	sy
 8008134:	b662      	cpsie	i
 8008136:	e7fe      	b.n	8008136 <xQueueReceiveFromISR+0x3c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008138:	f7ff fb30 	bl	800779c <vPortValidateInterruptPriority>
	__asm volatile
 800813c:	f3ef 8711 	mrs	r7, BASEPRI
 8008140:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008144:	b672      	cpsid	i
 8008146:	f383 8811 	msr	BASEPRI, r3
 800814a:	f3bf 8f6f 	isb	sy
 800814e:	f3bf 8f4f 	dsb	sy
 8008152:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008154:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008156:	b30d      	cbz	r5, 800819c <xQueueReceiveFromISR+0xa2>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008158:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800815c:	4649      	mov	r1, r9
 800815e:	4620      	mov	r0, r4
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008160:	3d01      	subs	r5, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 8008162:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008164:	f7ff fb8a 	bl	800787c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008168:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 800816a:	1c73      	adds	r3, r6, #1
 800816c:	d111      	bne.n	8008192 <xQueueReceiveFromISR+0x98>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800816e:	6923      	ldr	r3, [r4, #16]
 8008170:	b153      	cbz	r3, 8008188 <xQueueReceiveFromISR+0x8e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008172:	f104 0010 	add.w	r0, r4, #16
 8008176:	f000 fc7b 	bl	8008a70 <xTaskRemoveFromEventList>
 800817a:	b128      	cbz	r0, 8008188 <xQueueReceiveFromISR+0x8e>
						if( pxHigherPriorityTaskWoken != NULL )
 800817c:	f1b8 0f00 	cmp.w	r8, #0
 8008180:	d002      	beq.n	8008188 <xQueueReceiveFromISR+0x8e>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008182:	2301      	movs	r3, #1
 8008184:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 8008188:	2001      	movs	r0, #1
	__asm volatile
 800818a:	f387 8811 	msr	BASEPRI, r7
}
 800818e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008192:	3601      	adds	r6, #1
 8008194:	b276      	sxtb	r6, r6
 8008196:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 800819a:	e7f5      	b.n	8008188 <xQueueReceiveFromISR+0x8e>
			xReturn = pdFAIL;
 800819c:	4628      	mov	r0, r5
 800819e:	e7f4      	b.n	800818a <xQueueReceiveFromISR+0x90>

080081a0 <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80081a0:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80081a2:	4a07      	ldr	r2, [pc, #28]	@ (80081c0 <vQueueAddToRegistry+0x20>)
	{
 80081a4:	b530      	push	{r4, r5, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80081a6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80081aa:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80081ae:	b91d      	cbnz	r5, 80081b8 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80081b0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80081b4:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80081b6:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80081b8:	3301      	adds	r3, #1
 80081ba:	2b08      	cmp	r3, #8
 80081bc:	d1f3      	bne.n	80081a6 <vQueueAddToRegistry+0x6>
 80081be:	e7fa      	b.n	80081b6 <vQueueAddToRegistry+0x16>
 80081c0:	2001638c 	.word	0x2001638c

080081c4 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80081c4:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80081c6:	4a09      	ldr	r2, [pc, #36]	@ (80081ec <vQueueUnregisterQueue+0x28>)
	{
 80081c8:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80081ca:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 80081ce:	00dc      	lsls	r4, r3, #3
 80081d0:	4281      	cmp	r1, r0
 80081d2:	d106      	bne.n	80081e2 <vQueueUnregisterQueue+0x1e>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80081d4:	4a06      	ldr	r2, [pc, #24]	@ (80081f0 <vQueueUnregisterQueue+0x2c>)
 80081d6:	2100      	movs	r1, #0
 80081d8:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80081dc:	4422      	add	r2, r4
 80081de:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80081e0:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80081e2:	3301      	adds	r3, #1
 80081e4:	2b08      	cmp	r3, #8
 80081e6:	d1f0      	bne.n	80081ca <vQueueUnregisterQueue+0x6>
 80081e8:	e7fa      	b.n	80081e0 <vQueueUnregisterQueue+0x1c>
 80081ea:	bf00      	nop
 80081ec:	20016390 	.word	0x20016390
 80081f0:	2001638c 	.word	0x2001638c

080081f4 <vQueueDelete>:
{
 80081f4:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 80081f6:	b950      	cbnz	r0, 800820e <vQueueDelete+0x1a>
	__asm volatile
 80081f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081fc:	b672      	cpsid	i
 80081fe:	f383 8811 	msr	BASEPRI, r3
 8008202:	f3bf 8f6f 	isb	sy
 8008206:	f3bf 8f4f 	dsb	sy
 800820a:	b662      	cpsie	i
 800820c:	e7fe      	b.n	800820c <vQueueDelete+0x18>
		vQueueUnregisterQueue( pxQueue );
 800820e:	f7ff ffd9 	bl	80081c4 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008212:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8008216:	b91b      	cbnz	r3, 8008220 <vQueueDelete+0x2c>
}
 8008218:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800821c:	f7ff b8e0 	b.w	80073e0 <vPortFree>
}
 8008220:	bd10      	pop	{r4, pc}

08008222 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008222:	b570      	push	{r4, r5, r6, lr}
 8008224:	4604      	mov	r4, r0
 8008226:	460d      	mov	r5, r1
 8008228:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800822a:	f7ff f9bb 	bl	80075a4 <vPortEnterCritical>
 800822e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008232:	2bff      	cmp	r3, #255	@ 0xff
 8008234:	d102      	bne.n	800823c <vQueueWaitForMessageRestricted+0x1a>
 8008236:	2300      	movs	r3, #0
 8008238:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800823c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008240:	2bff      	cmp	r3, #255	@ 0xff
 8008242:	d102      	bne.n	800824a <vQueueWaitForMessageRestricted+0x28>
 8008244:	2300      	movs	r3, #0
 8008246:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800824a:	f7ff f9cf 	bl	80075ec <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800824e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8008250:	b92b      	cbnz	r3, 800825e <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008252:	4632      	mov	r2, r6
 8008254:	4629      	mov	r1, r5
 8008256:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800825a:	f000 fbe9 	bl	8008a30 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800825e:	4620      	mov	r0, r4
	}
 8008260:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008264:	f7ff bb1f 	b.w	80078a6 <prvUnlockQueue>

08008268 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800826c:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800826e:	f7ff f999 	bl	80075a4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8008272:	4b2f      	ldr	r3, [pc, #188]	@ (8008330 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8008274:	4e2f      	ldr	r6, [pc, #188]	@ (8008334 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8008276:	681a      	ldr	r2, [r3, #0]
 8008278:	4f2f      	ldr	r7, [pc, #188]	@ (8008338 <prvAddNewTaskToReadyList+0xd0>)
 800827a:	3201      	adds	r2, #1
 800827c:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800827e:	6835      	ldr	r5, [r6, #0]
 8008280:	2d00      	cmp	r5, #0
 8008282:	d14a      	bne.n	800831a <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008284:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008286:	681b      	ldr	r3, [r3, #0]
 8008288:	2b01      	cmp	r3, #1
 800828a:	d11f      	bne.n	80082cc <prvAddNewTaskToReadyList+0x64>
 800828c:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800828e:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008290:	4640      	mov	r0, r8
 8008292:	f7ff f8e1 	bl	8007458 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008296:	f108 0814 	add.w	r8, r8, #20
 800829a:	2d38      	cmp	r5, #56	@ 0x38
 800829c:	d1f7      	bne.n	800828e <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800829e:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8008360 <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 80082a2:	4d26      	ldr	r5, [pc, #152]	@ (800833c <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 80082a4:	4640      	mov	r0, r8
 80082a6:	f7ff f8d7 	bl	8007458 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80082aa:	4628      	mov	r0, r5
 80082ac:	f7ff f8d4 	bl	8007458 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80082b0:	4823      	ldr	r0, [pc, #140]	@ (8008340 <prvAddNewTaskToReadyList+0xd8>)
 80082b2:	f7ff f8d1 	bl	8007458 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80082b6:	4823      	ldr	r0, [pc, #140]	@ (8008344 <prvAddNewTaskToReadyList+0xdc>)
 80082b8:	f7ff f8ce 	bl	8007458 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80082bc:	4822      	ldr	r0, [pc, #136]	@ (8008348 <prvAddNewTaskToReadyList+0xe0>)
 80082be:	f7ff f8cb 	bl	8007458 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80082c2:	4b22      	ldr	r3, [pc, #136]	@ (800834c <prvAddNewTaskToReadyList+0xe4>)
 80082c4:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80082c8:	4b21      	ldr	r3, [pc, #132]	@ (8008350 <prvAddNewTaskToReadyList+0xe8>)
 80082ca:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80082cc:	4a21      	ldr	r2, [pc, #132]	@ (8008354 <prvAddNewTaskToReadyList+0xec>)
 80082ce:	6813      	ldr	r3, [r2, #0]
 80082d0:	3301      	adds	r3, #1
 80082d2:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80082d4:	4a20      	ldr	r2, [pc, #128]	@ (8008358 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80082d6:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80082d8:	6811      	ldr	r1, [r2, #0]
 80082da:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80082dc:	428b      	cmp	r3, r1
 80082de:	d900      	bls.n	80082e2 <prvAddNewTaskToReadyList+0x7a>
 80082e0:	6013      	str	r3, [r2, #0]
 80082e2:	2014      	movs	r0, #20
 80082e4:	1d21      	adds	r1, r4, #4
 80082e6:	fb00 7003 	mla	r0, r0, r3, r7
 80082ea:	f7ff f8c3 	bl	8007474 <vListInsertEnd>
	taskEXIT_CRITICAL();
 80082ee:	f7ff f97d 	bl	80075ec <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80082f2:	4b1a      	ldr	r3, [pc, #104]	@ (800835c <prvAddNewTaskToReadyList+0xf4>)
 80082f4:	681b      	ldr	r3, [r3, #0]
 80082f6:	b173      	cbz	r3, 8008316 <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80082f8:	6833      	ldr	r3, [r6, #0]
 80082fa:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80082fc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80082fe:	429a      	cmp	r2, r3
 8008300:	d209      	bcs.n	8008316 <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
 8008302:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008306:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800830a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800830e:	f3bf 8f4f 	dsb	sy
 8008312:	f3bf 8f6f 	isb	sy
}
 8008316:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800831a:	4b10      	ldr	r3, [pc, #64]	@ (800835c <prvAddNewTaskToReadyList+0xf4>)
 800831c:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800831e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 8008320:	2a00      	cmp	r2, #0
 8008322:	d1d3      	bne.n	80082cc <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008324:	6832      	ldr	r2, [r6, #0]
 8008326:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008328:	429a      	cmp	r2, r3
 800832a:	d8cf      	bhi.n	80082cc <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 800832c:	6034      	str	r4, [r6, #0]
 800832e:	e7cd      	b.n	80082cc <prvAddNewTaskToReadyList+0x64>
 8008330:	200163f0 	.word	0x200163f0
 8008334:	200168c4 	.word	0x200168c4
 8008338:	20016464 	.word	0x20016464
 800833c:	2001643c 	.word	0x2001643c
 8008340:	20016420 	.word	0x20016420
 8008344:	2001640c 	.word	0x2001640c
 8008348:	200163f4 	.word	0x200163f4
 800834c:	20016438 	.word	0x20016438
 8008350:	20016434 	.word	0x20016434
 8008354:	200163d4 	.word	0x200163d4
 8008358:	200163e8 	.word	0x200163e8
 800835c:	200163e4 	.word	0x200163e4
 8008360:	20016450 	.word	0x20016450

08008364 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008366:	4b15      	ldr	r3, [pc, #84]	@ (80083bc <prvAddCurrentTaskToDelayedList+0x58>)
{
 8008368:	4606      	mov	r6, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800836a:	4d15      	ldr	r5, [pc, #84]	@ (80083c0 <prvAddCurrentTaskToDelayedList+0x5c>)
{
 800836c:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 800836e:	681c      	ldr	r4, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008370:	6828      	ldr	r0, [r5, #0]
 8008372:	3004      	adds	r0, #4
 8008374:	f7ff f8a0 	bl	80074b8 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008378:	1c73      	adds	r3, r6, #1
 800837a:	d107      	bne.n	800838c <prvAddCurrentTaskToDelayedList+0x28>
 800837c:	b137      	cbz	r7, 800838c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800837e:	6829      	ldr	r1, [r5, #0]
 8008380:	4810      	ldr	r0, [pc, #64]	@ (80083c4 <prvAddCurrentTaskToDelayedList+0x60>)
 8008382:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008384:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008388:	f7ff b874 	b.w	8007474 <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
 800838c:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800838e:	682b      	ldr	r3, [r5, #0]
 8008390:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8008392:	d307      	bcc.n	80083a4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008394:	4b0c      	ldr	r3, [pc, #48]	@ (80083c8 <prvAddCurrentTaskToDelayedList+0x64>)
 8008396:	6818      	ldr	r0, [r3, #0]
 8008398:	6829      	ldr	r1, [r5, #0]
}
 800839a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800839e:	3104      	adds	r1, #4
 80083a0:	f7ff b873 	b.w	800748a <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80083a4:	4b09      	ldr	r3, [pc, #36]	@ (80083cc <prvAddCurrentTaskToDelayedList+0x68>)
 80083a6:	6818      	ldr	r0, [r3, #0]
 80083a8:	6829      	ldr	r1, [r5, #0]
 80083aa:	3104      	adds	r1, #4
 80083ac:	f7ff f86d 	bl	800748a <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80083b0:	4b07      	ldr	r3, [pc, #28]	@ (80083d0 <prvAddCurrentTaskToDelayedList+0x6c>)
 80083b2:	681a      	ldr	r2, [r3, #0]
 80083b4:	42a2      	cmp	r2, r4
 80083b6:	d900      	bls.n	80083ba <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
 80083b8:	601c      	str	r4, [r3, #0]
}
 80083ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80083bc:	200163ec 	.word	0x200163ec
 80083c0:	200168c4 	.word	0x200168c4
 80083c4:	200163f4 	.word	0x200163f4
 80083c8:	20016434 	.word	0x20016434
 80083cc:	20016438 	.word	0x20016438
 80083d0:	200163d0 	.word	0x200163d0

080083d4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80083d4:	4a06      	ldr	r2, [pc, #24]	@ (80083f0 <prvResetNextTaskUnblockTime+0x1c>)
 80083d6:	6813      	ldr	r3, [r2, #0]
 80083d8:	6819      	ldr	r1, [r3, #0]
 80083da:	4b06      	ldr	r3, [pc, #24]	@ (80083f4 <prvResetNextTaskUnblockTime+0x20>)
 80083dc:	b919      	cbnz	r1, 80083e6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80083de:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80083e2:	601a      	str	r2, [r3, #0]
}
 80083e4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80083e6:	6812      	ldr	r2, [r2, #0]
 80083e8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80083ea:	68d2      	ldr	r2, [r2, #12]
 80083ec:	6852      	ldr	r2, [r2, #4]
 80083ee:	e7f8      	b.n	80083e2 <prvResetNextTaskUnblockTime+0xe>
 80083f0:	20016438 	.word	0x20016438
 80083f4:	200163d0 	.word	0x200163d0

080083f8 <prvDeleteTCB>:
	{
 80083f8:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80083fa:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 80083fe:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008400:	b93b      	cbnz	r3, 8008412 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8008402:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8008404:	f7fe ffec 	bl	80073e0 <vPortFree>
				vPortFree( pxTCB );
 8008408:	4620      	mov	r0, r4
	}
 800840a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800840e:	f7fe bfe7 	b.w	80073e0 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008412:	2b01      	cmp	r3, #1
 8008414:	d0f9      	beq.n	800840a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008416:	2b02      	cmp	r3, #2
 8008418:	d00a      	beq.n	8008430 <prvDeleteTCB+0x38>
 800841a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800841e:	b672      	cpsid	i
 8008420:	f383 8811 	msr	BASEPRI, r3
 8008424:	f3bf 8f6f 	isb	sy
 8008428:	f3bf 8f4f 	dsb	sy
 800842c:	b662      	cpsie	i
 800842e:	e7fe      	b.n	800842e <prvDeleteTCB+0x36>
	}
 8008430:	bd10      	pop	{r4, pc}
	...

08008434 <prvIdleTask>:
{
 8008434:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008436:	4c14      	ldr	r4, [pc, #80]	@ (8008488 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008438:	4f14      	ldr	r7, [pc, #80]	@ (800848c <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 800843a:	4d15      	ldr	r5, [pc, #84]	@ (8008490 <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800843c:	6823      	ldr	r3, [r4, #0]
 800843e:	b983      	cbnz	r3, 8008462 <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8008440:	4b14      	ldr	r3, [pc, #80]	@ (8008494 <prvIdleTask+0x60>)
 8008442:	681b      	ldr	r3, [r3, #0]
 8008444:	2b01      	cmp	r3, #1
 8008446:	d909      	bls.n	800845c <prvIdleTask+0x28>
				taskYIELD();
 8008448:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800844c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008450:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008454:	f3bf 8f4f 	dsb	sy
 8008458:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800845c:	f7f8 f8a0 	bl	80005a0 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8008460:	e7eb      	b.n	800843a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8008462:	f7ff f89f 	bl	80075a4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008466:	68fb      	ldr	r3, [r7, #12]
 8008468:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800846a:	1d30      	adds	r0, r6, #4
 800846c:	f7ff f824 	bl	80074b8 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008470:	682b      	ldr	r3, [r5, #0]
 8008472:	3b01      	subs	r3, #1
 8008474:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008476:	6823      	ldr	r3, [r4, #0]
 8008478:	3b01      	subs	r3, #1
 800847a:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800847c:	f7ff f8b6 	bl	80075ec <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008480:	4630      	mov	r0, r6
 8008482:	f7ff ffb9 	bl	80083f8 <prvDeleteTCB>
 8008486:	e7d9      	b.n	800843c <prvIdleTask+0x8>
 8008488:	20016408 	.word	0x20016408
 800848c:	2001640c 	.word	0x2001640c
 8008490:	200163f0 	.word	0x200163f0
 8008494:	20016464 	.word	0x20016464

08008498 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008498:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800849c:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800849e:	4607      	mov	r7, r0
 80084a0:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80084a2:	21a5      	movs	r1, #165	@ 0xa5
 80084a4:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80084a6:	4698      	mov	r8, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80084a8:	3e04      	subs	r6, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80084aa:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80084ae:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80084b0:	f018 fe54 	bl	802115c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80084b4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80084b6:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80084b8:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 80084bc:	b3b5      	cbz	r5, 800852c <prvInitialiseNewTask.constprop.0+0x94>
 80084be:	1e6b      	subs	r3, r5, #1
 80084c0:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 80084c4:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80084c6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80084ca:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 80084ce:	b109      	cbz	r1, 80084d4 <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80084d0:	42ab      	cmp	r3, r5
 80084d2:	d1f8      	bne.n	80084c6 <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80084d4:	2300      	movs	r3, #0
 80084d6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80084da:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 80084dc:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80084e0:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80084e2:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80084e4:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80084e8:	bf28      	it	cs
 80084ea:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
 80084ec:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80084ee:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80084f0:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80084f4:	f7fe ffbb 	bl	800746e <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80084f8:	f104 0018 	add.w	r0, r4, #24
 80084fc:	f7fe ffb7 	bl	800746e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008500:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008504:	4642      	mov	r2, r8
 8008506:	4639      	mov	r1, r7
 8008508:	4630      	mov	r0, r6
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800850a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800850c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800850e:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 8008510:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008514:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008518:	f7ff f820 	bl	800755c <pxPortInitialiseStack>
 800851c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800851e:	f1b9 0f00 	cmp.w	r9, #0
 8008522:	d001      	beq.n	8008528 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008524:	f8c9 4000 	str.w	r4, [r9]
}
 8008528:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800852c:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8008530:	e7d3      	b.n	80084da <prvInitialiseNewTask.constprop.0+0x42>

08008532 <xTaskCreateStatic>:
	{
 8008532:	b570      	push	{r4, r5, r6, lr}
 8008534:	b086      	sub	sp, #24
 8008536:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 800853a:	b955      	cbnz	r5, 8008552 <xTaskCreateStatic+0x20>
 800853c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008540:	b672      	cpsid	i
 8008542:	f383 8811 	msr	BASEPRI, r3
 8008546:	f3bf 8f6f 	isb	sy
 800854a:	f3bf 8f4f 	dsb	sy
 800854e:	b662      	cpsie	i
 8008550:	e7fe      	b.n	8008550 <xTaskCreateStatic+0x1e>
		configASSERT( pxTaskBuffer != NULL );
 8008552:	b954      	cbnz	r4, 800856a <xTaskCreateStatic+0x38>
 8008554:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008558:	b672      	cpsid	i
 800855a:	f383 8811 	msr	BASEPRI, r3
 800855e:	f3bf 8f6f 	isb	sy
 8008562:	f3bf 8f4f 	dsb	sy
 8008566:	b662      	cpsie	i
 8008568:	e7fe      	b.n	8008568 <xTaskCreateStatic+0x36>
			volatile size_t xSize = sizeof( StaticTask_t );
 800856a:	2660      	movs	r6, #96	@ 0x60
 800856c:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800856e:	9e05      	ldr	r6, [sp, #20]
 8008570:	2e60      	cmp	r6, #96	@ 0x60
 8008572:	d00a      	beq.n	800858a <xTaskCreateStatic+0x58>
 8008574:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008578:	b672      	cpsid	i
 800857a:	f383 8811 	msr	BASEPRI, r3
 800857e:	f3bf 8f6f 	isb	sy
 8008582:	f3bf 8f4f 	dsb	sy
 8008586:	b662      	cpsie	i
 8008588:	e7fe      	b.n	8008588 <xTaskCreateStatic+0x56>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800858a:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800858c:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800858e:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008590:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008594:	ad04      	add	r5, sp, #16
 8008596:	9402      	str	r4, [sp, #8]
 8008598:	9501      	str	r5, [sp, #4]
 800859a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800859c:	9500      	str	r5, [sp, #0]
 800859e:	f7ff ff7b 	bl	8008498 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80085a2:	4620      	mov	r0, r4
 80085a4:	f7ff fe60 	bl	8008268 <prvAddNewTaskToReadyList>
	}
 80085a8:	9804      	ldr	r0, [sp, #16]
 80085aa:	b006      	add	sp, #24
 80085ac:	bd70      	pop	{r4, r5, r6, pc}

080085ae <xTaskCreate>:
	{
 80085ae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80085b2:	4607      	mov	r7, r0
 80085b4:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80085b6:	0090      	lsls	r0, r2, #2
	{
 80085b8:	4688      	mov	r8, r1
 80085ba:	4616      	mov	r6, r2
 80085bc:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80085be:	f7fe fe79 	bl	80072b4 <pvPortMalloc>
			if( pxStack != NULL )
 80085c2:	4605      	mov	r5, r0
 80085c4:	b920      	cbnz	r0, 80085d0 <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80085c6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 80085ca:	b005      	add	sp, #20
 80085cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80085d0:	2060      	movs	r0, #96	@ 0x60
 80085d2:	f7fe fe6f 	bl	80072b4 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80085d6:	4604      	mov	r4, r0
 80085d8:	b198      	cbz	r0, 8008602 <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80085da:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 80085dc:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80085de:	4632      	mov	r2, r6
 80085e0:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80085e2:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80085e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80085e8:	9002      	str	r0, [sp, #8]
 80085ea:	4638      	mov	r0, r7
 80085ec:	9301      	str	r3, [sp, #4]
 80085ee:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80085f0:	9300      	str	r3, [sp, #0]
 80085f2:	464b      	mov	r3, r9
 80085f4:	f7ff ff50 	bl	8008498 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80085f8:	4620      	mov	r0, r4
 80085fa:	f7ff fe35 	bl	8008268 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80085fe:	2001      	movs	r0, #1
 8008600:	e7e3      	b.n	80085ca <xTaskCreate+0x1c>
					vPortFree( pxStack );
 8008602:	4628      	mov	r0, r5
 8008604:	f7fe feec 	bl	80073e0 <vPortFree>
		if( pxNewTCB != NULL )
 8008608:	e7dd      	b.n	80085c6 <xTaskCreate+0x18>
	...

0800860c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800860c:	4a02      	ldr	r2, [pc, #8]	@ (8008618 <vTaskSuspendAll+0xc>)
 800860e:	6813      	ldr	r3, [r2, #0]
 8008610:	3301      	adds	r3, #1
 8008612:	6013      	str	r3, [r2, #0]
}
 8008614:	4770      	bx	lr
 8008616:	bf00      	nop
 8008618:	200163cc 	.word	0x200163cc

0800861c <xTaskGetTickCount>:
		xTicks = xTickCount;
 800861c:	4b01      	ldr	r3, [pc, #4]	@ (8008624 <xTaskGetTickCount+0x8>)
 800861e:	6818      	ldr	r0, [r3, #0]
}
 8008620:	4770      	bx	lr
 8008622:	bf00      	nop
 8008624:	200163ec 	.word	0x200163ec

08008628 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008628:	4b40      	ldr	r3, [pc, #256]	@ (800872c <xTaskIncrementTick+0x104>)
 800862a:	681b      	ldr	r3, [r3, #0]
{
 800862c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008630:	2b00      	cmp	r3, #0
 8008632:	d173      	bne.n	800871c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008634:	4b3e      	ldr	r3, [pc, #248]	@ (8008730 <xTaskIncrementTick+0x108>)
 8008636:	681c      	ldr	r4, [r3, #0]
 8008638:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 800863a:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800863c:	b9cc      	cbnz	r4, 8008672 <xTaskIncrementTick+0x4a>
			taskSWITCH_DELAYED_LISTS();
 800863e:	4b3d      	ldr	r3, [pc, #244]	@ (8008734 <xTaskIncrementTick+0x10c>)
 8008640:	681a      	ldr	r2, [r3, #0]
 8008642:	6812      	ldr	r2, [r2, #0]
 8008644:	b152      	cbz	r2, 800865c <xTaskIncrementTick+0x34>
 8008646:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800864a:	b672      	cpsid	i
 800864c:	f383 8811 	msr	BASEPRI, r3
 8008650:	f3bf 8f6f 	isb	sy
 8008654:	f3bf 8f4f 	dsb	sy
 8008658:	b662      	cpsie	i
 800865a:	e7fe      	b.n	800865a <xTaskIncrementTick+0x32>
 800865c:	4a36      	ldr	r2, [pc, #216]	@ (8008738 <xTaskIncrementTick+0x110>)
 800865e:	6819      	ldr	r1, [r3, #0]
 8008660:	6810      	ldr	r0, [r2, #0]
 8008662:	6018      	str	r0, [r3, #0]
 8008664:	6011      	str	r1, [r2, #0]
 8008666:	4a35      	ldr	r2, [pc, #212]	@ (800873c <xTaskIncrementTick+0x114>)
 8008668:	6813      	ldr	r3, [r2, #0]
 800866a:	3301      	adds	r3, #1
 800866c:	6013      	str	r3, [r2, #0]
 800866e:	f7ff feb1 	bl	80083d4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008672:	4d33      	ldr	r5, [pc, #204]	@ (8008740 <xTaskIncrementTick+0x118>)
BaseType_t xSwitchRequired = pdFALSE;
 8008674:	f04f 0b00 	mov.w	fp, #0
 8008678:	4e32      	ldr	r6, [pc, #200]	@ (8008744 <xTaskIncrementTick+0x11c>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 800867a:	682b      	ldr	r3, [r5, #0]
 800867c:	4f32      	ldr	r7, [pc, #200]	@ (8008748 <xTaskIncrementTick+0x120>)
 800867e:	42a3      	cmp	r3, r4
 8008680:	d911      	bls.n	80086a6 <xTaskIncrementTick+0x7e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008682:	683a      	ldr	r2, [r7, #0]
 8008684:	2114      	movs	r1, #20
 8008686:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008688:	434a      	muls	r2, r1
 800868a:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 800868c:	2a02      	cmp	r2, #2
 800868e:	bf28      	it	cs
 8008690:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 8008694:	4a2d      	ldr	r2, [pc, #180]	@ (800874c <xTaskIncrementTick+0x124>)
 8008696:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 8008698:	2a00      	cmp	r2, #0
}
 800869a:	bf0c      	ite	eq
 800869c:	4658      	moveq	r0, fp
 800869e:	2001      	movne	r0, #1
 80086a0:	b003      	add	sp, #12
 80086a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80086a6:	f8df 908c 	ldr.w	r9, [pc, #140]	@ 8008734 <xTaskIncrementTick+0x10c>
					prvAddTaskToReadyList( pxTCB );
 80086aa:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 8008754 <xTaskIncrementTick+0x12c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80086ae:	f8d9 2000 	ldr.w	r2, [r9]
 80086b2:	6812      	ldr	r2, [r2, #0]
 80086b4:	b91a      	cbnz	r2, 80086be <xTaskIncrementTick+0x96>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80086b6:	f04f 32ff 	mov.w	r2, #4294967295
 80086ba:	602a      	str	r2, [r5, #0]
					break;
 80086bc:	e7e1      	b.n	8008682 <xTaskIncrementTick+0x5a>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80086be:	f8d9 2000 	ldr.w	r2, [r9]
 80086c2:	68d2      	ldr	r2, [r2, #12]
 80086c4:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80086c8:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 80086cc:	428c      	cmp	r4, r1
 80086ce:	d201      	bcs.n	80086d4 <xTaskIncrementTick+0xac>
						xNextTaskUnblockTime = xItemValue;
 80086d0:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80086d2:	e7d6      	b.n	8008682 <xTaskIncrementTick+0x5a>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80086d4:	f108 0304 	add.w	r3, r8, #4
 80086d8:	4618      	mov	r0, r3
 80086da:	9301      	str	r3, [sp, #4]
 80086dc:	f7fe feec 	bl	80074b8 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80086e0:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 80086e4:	b119      	cbz	r1, 80086ee <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80086e6:	f108 0018 	add.w	r0, r8, #24
 80086ea:	f7fe fee5 	bl	80074b8 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80086ee:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 80086f2:	f8da 1000 	ldr.w	r1, [sl]
 80086f6:	4288      	cmp	r0, r1
 80086f8:	d901      	bls.n	80086fe <xTaskIncrementTick+0xd6>
 80086fa:	f8ca 0000 	str.w	r0, [sl]
 80086fe:	2314      	movs	r3, #20
 8008700:	9901      	ldr	r1, [sp, #4]
 8008702:	fb03 6000 	mla	r0, r3, r0, r6
 8008706:	f7fe feb5 	bl	8007474 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800870a:	6838      	ldr	r0, [r7, #0]
 800870c:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8008710:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8008712:	4291      	cmp	r1, r2
 8008714:	bf28      	it	cs
 8008716:	f04f 0b01 	movcs.w	fp, #1
 800871a:	e7c8      	b.n	80086ae <xTaskIncrementTick+0x86>
		++uxPendedTicks;
 800871c:	4a0c      	ldr	r2, [pc, #48]	@ (8008750 <xTaskIncrementTick+0x128>)
BaseType_t xSwitchRequired = pdFALSE;
 800871e:	f04f 0b00 	mov.w	fp, #0
		++uxPendedTicks;
 8008722:	6813      	ldr	r3, [r2, #0]
 8008724:	3301      	adds	r3, #1
 8008726:	6013      	str	r3, [r2, #0]
 8008728:	e7b4      	b.n	8008694 <xTaskIncrementTick+0x6c>
 800872a:	bf00      	nop
 800872c:	200163cc 	.word	0x200163cc
 8008730:	200163ec 	.word	0x200163ec
 8008734:	20016438 	.word	0x20016438
 8008738:	20016434 	.word	0x20016434
 800873c:	200163d8 	.word	0x200163d8
 8008740:	200163d0 	.word	0x200163d0
 8008744:	20016464 	.word	0x20016464
 8008748:	200168c4 	.word	0x200168c4
 800874c:	200163dc 	.word	0x200163dc
 8008750:	200163e0 	.word	0x200163e0
 8008754:	200163e8 	.word	0x200163e8

08008758 <xTaskResumeAll>:
{
 8008758:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800875c:	4c31      	ldr	r4, [pc, #196]	@ (8008824 <xTaskResumeAll+0xcc>)
 800875e:	6823      	ldr	r3, [r4, #0]
 8008760:	b953      	cbnz	r3, 8008778 <xTaskResumeAll+0x20>
 8008762:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008766:	b672      	cpsid	i
 8008768:	f383 8811 	msr	BASEPRI, r3
 800876c:	f3bf 8f6f 	isb	sy
 8008770:	f3bf 8f4f 	dsb	sy
 8008774:	b662      	cpsie	i
 8008776:	e7fe      	b.n	8008776 <xTaskResumeAll+0x1e>
	taskENTER_CRITICAL();
 8008778:	f7fe ff14 	bl	80075a4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800877c:	6823      	ldr	r3, [r4, #0]
 800877e:	3b01      	subs	r3, #1
 8008780:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008782:	6824      	ldr	r4, [r4, #0]
 8008784:	b12c      	cbz	r4, 8008792 <xTaskResumeAll+0x3a>
BaseType_t xAlreadyYielded = pdFALSE;
 8008786:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008788:	f7fe ff30 	bl	80075ec <vPortExitCritical>
}
 800878c:	4620      	mov	r0, r4
 800878e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008792:	4b25      	ldr	r3, [pc, #148]	@ (8008828 <xTaskResumeAll+0xd0>)
 8008794:	681b      	ldr	r3, [r3, #0]
 8008796:	2b00      	cmp	r3, #0
 8008798:	d0f5      	beq.n	8008786 <xTaskResumeAll+0x2e>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800879a:	4d24      	ldr	r5, [pc, #144]	@ (800882c <xTaskResumeAll+0xd4>)
					prvAddTaskToReadyList( pxTCB );
 800879c:	4e24      	ldr	r6, [pc, #144]	@ (8008830 <xTaskResumeAll+0xd8>)
 800879e:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8008840 <xTaskResumeAll+0xe8>
 80087a2:	e01d      	b.n	80087e0 <xTaskResumeAll+0x88>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80087a4:	68eb      	ldr	r3, [r5, #12]
 80087a6:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80087a8:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80087aa:	f104 0018 	add.w	r0, r4, #24
 80087ae:	f7fe fe83 	bl	80074b8 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80087b2:	4638      	mov	r0, r7
 80087b4:	f7fe fe80 	bl	80074b8 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80087b8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80087ba:	6832      	ldr	r2, [r6, #0]
 80087bc:	4293      	cmp	r3, r2
 80087be:	d900      	bls.n	80087c2 <xTaskResumeAll+0x6a>
 80087c0:	6033      	str	r3, [r6, #0]
 80087c2:	2014      	movs	r0, #20
 80087c4:	4639      	mov	r1, r7
 80087c6:	fb00 8003 	mla	r0, r0, r3, r8
 80087ca:	f7fe fe53 	bl	8007474 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80087ce:	4b19      	ldr	r3, [pc, #100]	@ (8008834 <xTaskResumeAll+0xdc>)
 80087d0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80087d2:	681b      	ldr	r3, [r3, #0]
 80087d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80087d6:	429a      	cmp	r2, r3
 80087d8:	d302      	bcc.n	80087e0 <xTaskResumeAll+0x88>
						xYieldPending = pdTRUE;
 80087da:	4b17      	ldr	r3, [pc, #92]	@ (8008838 <xTaskResumeAll+0xe0>)
 80087dc:	2201      	movs	r2, #1
 80087de:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80087e0:	682b      	ldr	r3, [r5, #0]
 80087e2:	2b00      	cmp	r3, #0
 80087e4:	d1de      	bne.n	80087a4 <xTaskResumeAll+0x4c>
				if( pxTCB != NULL )
 80087e6:	b10c      	cbz	r4, 80087ec <xTaskResumeAll+0x94>
					prvResetNextTaskUnblockTime();
 80087e8:	f7ff fdf4 	bl	80083d4 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 80087ec:	4d13      	ldr	r5, [pc, #76]	@ (800883c <xTaskResumeAll+0xe4>)
 80087ee:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 80087f0:	b144      	cbz	r4, 8008804 <xTaskResumeAll+0xac>
								xYieldPending = pdTRUE;
 80087f2:	4e11      	ldr	r6, [pc, #68]	@ (8008838 <xTaskResumeAll+0xe0>)
 80087f4:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 80087f6:	f7ff ff17 	bl	8008628 <xTaskIncrementTick>
 80087fa:	b100      	cbz	r0, 80087fe <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 80087fc:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 80087fe:	3c01      	subs	r4, #1
 8008800:	d1f9      	bne.n	80087f6 <xTaskResumeAll+0x9e>
						uxPendedTicks = 0;
 8008802:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008804:	4b0c      	ldr	r3, [pc, #48]	@ (8008838 <xTaskResumeAll+0xe0>)
 8008806:	681b      	ldr	r3, [r3, #0]
 8008808:	2b00      	cmp	r3, #0
 800880a:	d0bc      	beq.n	8008786 <xTaskResumeAll+0x2e>
					taskYIELD_IF_USING_PREEMPTION();
 800880c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008810:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008814:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008818:	f3bf 8f4f 	dsb	sy
 800881c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008820:	2401      	movs	r4, #1
 8008822:	e7b1      	b.n	8008788 <xTaskResumeAll+0x30>
 8008824:	200163cc 	.word	0x200163cc
 8008828:	200163f0 	.word	0x200163f0
 800882c:	20016420 	.word	0x20016420
 8008830:	200163e8 	.word	0x200163e8
 8008834:	200168c4 	.word	0x200168c4
 8008838:	200163dc 	.word	0x200163dc
 800883c:	200163e0 	.word	0x200163e0
 8008840:	20016464 	.word	0x20016464

08008844 <vTaskDelay>:
	{
 8008844:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008846:	b950      	cbnz	r0, 800885e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008848:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800884c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008850:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008854:	f3bf 8f4f 	dsb	sy
 8008858:	f3bf 8f6f 	isb	sy
	}
 800885c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800885e:	4b0b      	ldr	r3, [pc, #44]	@ (800888c <vTaskDelay+0x48>)
 8008860:	6819      	ldr	r1, [r3, #0]
 8008862:	b151      	cbz	r1, 800887a <vTaskDelay+0x36>
 8008864:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008868:	b672      	cpsid	i
 800886a:	f383 8811 	msr	BASEPRI, r3
 800886e:	f3bf 8f6f 	isb	sy
 8008872:	f3bf 8f4f 	dsb	sy
 8008876:	b662      	cpsie	i
 8008878:	e7fe      	b.n	8008878 <vTaskDelay+0x34>
			vTaskSuspendAll();
 800887a:	f7ff fec7 	bl	800860c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800887e:	f7ff fd71 	bl	8008364 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008882:	f7ff ff69 	bl	8008758 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008886:	2800      	cmp	r0, #0
 8008888:	d0de      	beq.n	8008848 <vTaskDelay+0x4>
 800888a:	e7e7      	b.n	800885c <vTaskDelay+0x18>
 800888c:	200163cc 	.word	0x200163cc

08008890 <vTaskSetApplicationTaskTag>:
	{
 8008890:	b538      	push	{r3, r4, r5, lr}
 8008892:	460d      	mov	r5, r1
		if( xTask == NULL )
 8008894:	4604      	mov	r4, r0
 8008896:	b908      	cbnz	r0, 800889c <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8008898:	4b04      	ldr	r3, [pc, #16]	@ (80088ac <vTaskSetApplicationTaskTag+0x1c>)
 800889a:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800889c:	f7fe fe82 	bl	80075a4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 80088a0:	6565      	str	r5, [r4, #84]	@ 0x54
	}
 80088a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 80088a6:	f7fe bea1 	b.w	80075ec <vPortExitCritical>
 80088aa:	bf00      	nop
 80088ac:	200168c4 	.word	0x200168c4

080088b0 <xTaskCallApplicationTaskHook>:
	{
 80088b0:	4603      	mov	r3, r0
 80088b2:	4608      	mov	r0, r1
		if( xTask == NULL )
 80088b4:	b90b      	cbnz	r3, 80088ba <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 80088b6:	4b03      	ldr	r3, [pc, #12]	@ (80088c4 <xTaskCallApplicationTaskHook+0x14>)
 80088b8:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 80088ba:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80088bc:	b103      	cbz	r3, 80088c0 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 80088be:	4718      	bx	r3
	}
 80088c0:	4618      	mov	r0, r3
 80088c2:	4770      	bx	lr
 80088c4:	200168c4 	.word	0x200168c4

080088c8 <vTaskStartScheduler>:
{
 80088c8:	b510      	push	{r4, lr}
 80088ca:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80088cc:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80088ce:	aa07      	add	r2, sp, #28
 80088d0:	a906      	add	r1, sp, #24
 80088d2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80088d4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80088d8:	f7fe fcae 	bl	8007238 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80088dc:	9b05      	ldr	r3, [sp, #20]
 80088de:	9a07      	ldr	r2, [sp, #28]
 80088e0:	9302      	str	r3, [sp, #8]
 80088e2:	9b06      	ldr	r3, [sp, #24]
 80088e4:	491b      	ldr	r1, [pc, #108]	@ (8008954 <vTaskStartScheduler+0x8c>)
 80088e6:	481c      	ldr	r0, [pc, #112]	@ (8008958 <vTaskStartScheduler+0x90>)
 80088e8:	e9cd 4300 	strd	r4, r3, [sp]
 80088ec:	4623      	mov	r3, r4
 80088ee:	f7ff fe20 	bl	8008532 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80088f2:	b360      	cbz	r0, 800894e <vTaskStartScheduler+0x86>
			xReturn = xTimerCreateTimerTask();
 80088f4:	f000 fa96 	bl	8008e24 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 80088f8:	2801      	cmp	r0, #1
 80088fa:	d11b      	bne.n	8008934 <vTaskStartScheduler+0x6c>
 80088fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008900:	b672      	cpsid	i
 8008902:	f383 8811 	msr	BASEPRI, r3
 8008906:	f3bf 8f6f 	isb	sy
 800890a:	f3bf 8f4f 	dsb	sy
 800890e:	b662      	cpsie	i
		xNextTaskUnblockTime = portMAX_DELAY;
 8008910:	f04f 32ff 	mov.w	r2, #4294967295
 8008914:	4b11      	ldr	r3, [pc, #68]	@ (800895c <vTaskStartScheduler+0x94>)
		traceTASK_SWITCHED_IN();
 8008916:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
 8008918:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800891a:	4b11      	ldr	r3, [pc, #68]	@ (8008960 <vTaskStartScheduler+0x98>)
 800891c:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800891e:	4b11      	ldr	r3, [pc, #68]	@ (8008964 <vTaskStartScheduler+0x9c>)
 8008920:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8008922:	4b11      	ldr	r3, [pc, #68]	@ (8008968 <vTaskStartScheduler+0xa0>)
 8008924:	6818      	ldr	r0, [r3, #0]
 8008926:	f7ff ffc3 	bl	80088b0 <xTaskCallApplicationTaskHook>
}
 800892a:	b008      	add	sp, #32
 800892c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008930:	f7fe bed2 	b.w	80076d8 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008934:	3001      	adds	r0, #1
 8008936:	d10a      	bne.n	800894e <vTaskStartScheduler+0x86>
 8008938:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800893c:	b672      	cpsid	i
 800893e:	f383 8811 	msr	BASEPRI, r3
 8008942:	f3bf 8f6f 	isb	sy
 8008946:	f3bf 8f4f 	dsb	sy
 800894a:	b662      	cpsie	i
 800894c:	e7fe      	b.n	800894c <vTaskStartScheduler+0x84>
}
 800894e:	b008      	add	sp, #32
 8008950:	bd10      	pop	{r4, pc}
 8008952:	bf00      	nop
 8008954:	08022f5c 	.word	0x08022f5c
 8008958:	08008435 	.word	0x08008435
 800895c:	200163d0 	.word	0x200163d0
 8008960:	200163e4 	.word	0x200163e4
 8008964:	200163ec 	.word	0x200163ec
 8008968:	200168c4 	.word	0x200168c4

0800896c <vTaskSwitchContext>:
{
 800896c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800896e:	4b1d      	ldr	r3, [pc, #116]	@ (80089e4 <vTaskSwitchContext+0x78>)
 8008970:	681a      	ldr	r2, [r3, #0]
 8008972:	4b1d      	ldr	r3, [pc, #116]	@ (80089e8 <vTaskSwitchContext+0x7c>)
 8008974:	b112      	cbz	r2, 800897c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008976:	2201      	movs	r2, #1
 8008978:	601a      	str	r2, [r3, #0]
}
 800897a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800897c:	4c1b      	ldr	r4, [pc, #108]	@ (80089ec <vTaskSwitchContext+0x80>)
 800897e:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008980:	4e1b      	ldr	r6, [pc, #108]	@ (80089f0 <vTaskSwitchContext+0x84>)
 8008982:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
 8008984:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 8008986:	6820      	ldr	r0, [r4, #0]
 8008988:	f7ff ff92 	bl	80088b0 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800898c:	6832      	ldr	r2, [r6, #0]
 800898e:	4919      	ldr	r1, [pc, #100]	@ (80089f4 <vTaskSwitchContext+0x88>)
 8008990:	fb07 f302 	mul.w	r3, r7, r2
 8008994:	58cd      	ldr	r5, [r1, r3]
 8008996:	18c8      	adds	r0, r1, r3
 8008998:	b1ad      	cbz	r5, 80089c6 <vTaskSwitchContext+0x5a>
 800899a:	6845      	ldr	r5, [r0, #4]
 800899c:	3308      	adds	r3, #8
 800899e:	686d      	ldr	r5, [r5, #4]
 80089a0:	440b      	add	r3, r1
 80089a2:	429d      	cmp	r5, r3
 80089a4:	6045      	str	r5, [r0, #4]
 80089a6:	bf04      	itt	eq
 80089a8:	686b      	ldreq	r3, [r5, #4]
 80089aa:	6043      	streq	r3, [r0, #4]
 80089ac:	2314      	movs	r3, #20
 80089ae:	fb03 1102 	mla	r1, r3, r2, r1
 80089b2:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
 80089b4:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80089b6:	68db      	ldr	r3, [r3, #12]
 80089b8:	6023      	str	r3, [r4, #0]
 80089ba:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 80089bc:	6820      	ldr	r0, [r4, #0]
}
 80089be:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 80089c2:	f7ff bf75 	b.w	80088b0 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80089c6:	b952      	cbnz	r2, 80089de <vTaskSwitchContext+0x72>
 80089c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089cc:	b672      	cpsid	i
 80089ce:	f383 8811 	msr	BASEPRI, r3
 80089d2:	f3bf 8f6f 	isb	sy
 80089d6:	f3bf 8f4f 	dsb	sy
 80089da:	b662      	cpsie	i
 80089dc:	e7fe      	b.n	80089dc <vTaskSwitchContext+0x70>
 80089de:	3a01      	subs	r2, #1
 80089e0:	e7d6      	b.n	8008990 <vTaskSwitchContext+0x24>
 80089e2:	bf00      	nop
 80089e4:	200163cc 	.word	0x200163cc
 80089e8:	200163dc 	.word	0x200163dc
 80089ec:	200168c4 	.word	0x200168c4
 80089f0:	200163e8 	.word	0x200163e8
 80089f4:	20016464 	.word	0x20016464

080089f8 <vTaskPlaceOnEventList>:
{
 80089f8:	b510      	push	{r4, lr}
 80089fa:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 80089fc:	b950      	cbnz	r0, 8008a14 <vTaskPlaceOnEventList+0x1c>
 80089fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a02:	b672      	cpsid	i
 8008a04:	f383 8811 	msr	BASEPRI, r3
 8008a08:	f3bf 8f6f 	isb	sy
 8008a0c:	f3bf 8f4f 	dsb	sy
 8008a10:	b662      	cpsie	i
 8008a12:	e7fe      	b.n	8008a12 <vTaskPlaceOnEventList+0x1a>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008a14:	4b05      	ldr	r3, [pc, #20]	@ (8008a2c <vTaskPlaceOnEventList+0x34>)
 8008a16:	6819      	ldr	r1, [r3, #0]
 8008a18:	3118      	adds	r1, #24
 8008a1a:	f7fe fd36 	bl	800748a <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008a1e:	4620      	mov	r0, r4
 8008a20:	2101      	movs	r1, #1
}
 8008a22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008a26:	f7ff bc9d 	b.w	8008364 <prvAddCurrentTaskToDelayedList>
 8008a2a:	bf00      	nop
 8008a2c:	200168c4 	.word	0x200168c4

08008a30 <vTaskPlaceOnEventListRestricted>:
	{
 8008a30:	b538      	push	{r3, r4, r5, lr}
 8008a32:	460d      	mov	r5, r1
 8008a34:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008a36:	b950      	cbnz	r0, 8008a4e <vTaskPlaceOnEventListRestricted+0x1e>
 8008a38:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a3c:	b672      	cpsid	i
 8008a3e:	f383 8811 	msr	BASEPRI, r3
 8008a42:	f3bf 8f6f 	isb	sy
 8008a46:	f3bf 8f4f 	dsb	sy
 8008a4a:	b662      	cpsie	i
 8008a4c:	e7fe      	b.n	8008a4c <vTaskPlaceOnEventListRestricted+0x1c>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008a4e:	4b07      	ldr	r3, [pc, #28]	@ (8008a6c <vTaskPlaceOnEventListRestricted+0x3c>)
 8008a50:	6819      	ldr	r1, [r3, #0]
 8008a52:	3118      	adds	r1, #24
 8008a54:	f7fe fd0e 	bl	8007474 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008a58:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008a5a:	4621      	mov	r1, r4
 8008a5c:	bf0c      	ite	eq
 8008a5e:	4628      	moveq	r0, r5
 8008a60:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008a64:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008a68:	f7ff bc7c 	b.w	8008364 <prvAddCurrentTaskToDelayedList>
 8008a6c:	200168c4 	.word	0x200168c4

08008a70 <xTaskRemoveFromEventList>:
{
 8008a70:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a72:	68c3      	ldr	r3, [r0, #12]
 8008a74:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008a76:	b954      	cbnz	r4, 8008a8e <xTaskRemoveFromEventList+0x1e>
 8008a78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a7c:	b672      	cpsid	i
 8008a7e:	f383 8811 	msr	BASEPRI, r3
 8008a82:	f3bf 8f6f 	isb	sy
 8008a86:	f3bf 8f4f 	dsb	sy
 8008a8a:	b662      	cpsie	i
 8008a8c:	e7fe      	b.n	8008a8c <xTaskRemoveFromEventList+0x1c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008a8e:	f104 0518 	add.w	r5, r4, #24
 8008a92:	4628      	mov	r0, r5
 8008a94:	f7fe fd10 	bl	80074b8 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008a98:	4b11      	ldr	r3, [pc, #68]	@ (8008ae0 <xTaskRemoveFromEventList+0x70>)
 8008a9a:	681b      	ldr	r3, [r3, #0]
 8008a9c:	b9d3      	cbnz	r3, 8008ad4 <xTaskRemoveFromEventList+0x64>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008a9e:	1d25      	adds	r5, r4, #4
 8008aa0:	4628      	mov	r0, r5
 8008aa2:	f7fe fd09 	bl	80074b8 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008aa6:	4a0f      	ldr	r2, [pc, #60]	@ (8008ae4 <xTaskRemoveFromEventList+0x74>)
 8008aa8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008aaa:	6811      	ldr	r1, [r2, #0]
 8008aac:	428b      	cmp	r3, r1
 8008aae:	d900      	bls.n	8008ab2 <xTaskRemoveFromEventList+0x42>
 8008ab0:	6013      	str	r3, [r2, #0]
 8008ab2:	2014      	movs	r0, #20
 8008ab4:	4a0c      	ldr	r2, [pc, #48]	@ (8008ae8 <xTaskRemoveFromEventList+0x78>)
 8008ab6:	4629      	mov	r1, r5
 8008ab8:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008abc:	f7fe fcda 	bl	8007474 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008ac0:	4b0a      	ldr	r3, [pc, #40]	@ (8008aec <xTaskRemoveFromEventList+0x7c>)
 8008ac2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008ac4:	681b      	ldr	r3, [r3, #0]
 8008ac6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008ac8:	429a      	cmp	r2, r3
 8008aca:	d906      	bls.n	8008ada <xTaskRemoveFromEventList+0x6a>
		xYieldPending = pdTRUE;
 8008acc:	2001      	movs	r0, #1
 8008ace:	4b08      	ldr	r3, [pc, #32]	@ (8008af0 <xTaskRemoveFromEventList+0x80>)
 8008ad0:	6018      	str	r0, [r3, #0]
}
 8008ad2:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008ad4:	4629      	mov	r1, r5
 8008ad6:	4807      	ldr	r0, [pc, #28]	@ (8008af4 <xTaskRemoveFromEventList+0x84>)
 8008ad8:	e7f0      	b.n	8008abc <xTaskRemoveFromEventList+0x4c>
		xReturn = pdFALSE;
 8008ada:	2000      	movs	r0, #0
	return xReturn;
 8008adc:	e7f9      	b.n	8008ad2 <xTaskRemoveFromEventList+0x62>
 8008ade:	bf00      	nop
 8008ae0:	200163cc 	.word	0x200163cc
 8008ae4:	200163e8 	.word	0x200163e8
 8008ae8:	20016464 	.word	0x20016464
 8008aec:	200168c4 	.word	0x200168c4
 8008af0:	200163dc 	.word	0x200163dc
 8008af4:	20016420 	.word	0x20016420

08008af8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008af8:	4b03      	ldr	r3, [pc, #12]	@ (8008b08 <vTaskInternalSetTimeOutState+0x10>)
 8008afa:	681b      	ldr	r3, [r3, #0]
 8008afc:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8008afe:	4b03      	ldr	r3, [pc, #12]	@ (8008b0c <vTaskInternalSetTimeOutState+0x14>)
 8008b00:	681b      	ldr	r3, [r3, #0]
 8008b02:	6043      	str	r3, [r0, #4]
}
 8008b04:	4770      	bx	lr
 8008b06:	bf00      	nop
 8008b08:	200163d8 	.word	0x200163d8
 8008b0c:	200163ec 	.word	0x200163ec

08008b10 <xTaskCheckForTimeOut>:
{
 8008b10:	b570      	push	{r4, r5, r6, lr}
 8008b12:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008b14:	4605      	mov	r5, r0
 8008b16:	b950      	cbnz	r0, 8008b2e <xTaskCheckForTimeOut+0x1e>
 8008b18:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b1c:	b672      	cpsid	i
 8008b1e:	f383 8811 	msr	BASEPRI, r3
 8008b22:	f3bf 8f6f 	isb	sy
 8008b26:	f3bf 8f4f 	dsb	sy
 8008b2a:	b662      	cpsie	i
 8008b2c:	e7fe      	b.n	8008b2c <xTaskCheckForTimeOut+0x1c>
	configASSERT( pxTicksToWait );
 8008b2e:	b951      	cbnz	r1, 8008b46 <xTaskCheckForTimeOut+0x36>
 8008b30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b34:	b672      	cpsid	i
 8008b36:	f383 8811 	msr	BASEPRI, r3
 8008b3a:	f3bf 8f6f 	isb	sy
 8008b3e:	f3bf 8f4f 	dsb	sy
 8008b42:	b662      	cpsie	i
 8008b44:	e7fe      	b.n	8008b44 <xTaskCheckForTimeOut+0x34>
	taskENTER_CRITICAL();
 8008b46:	f7fe fd2d 	bl	80075a4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008b4a:	4b0f      	ldr	r3, [pc, #60]	@ (8008b88 <xTaskCheckForTimeOut+0x78>)
 8008b4c:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008b4e:	6823      	ldr	r3, [r4, #0]
 8008b50:	1c5a      	adds	r2, r3, #1
 8008b52:	d010      	beq.n	8008b76 <xTaskCheckForTimeOut+0x66>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008b54:	480d      	ldr	r0, [pc, #52]	@ (8008b8c <xTaskCheckForTimeOut+0x7c>)
 8008b56:	682e      	ldr	r6, [r5, #0]
 8008b58:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008b5a:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008b5c:	4286      	cmp	r6, r0
 8008b5e:	d001      	beq.n	8008b64 <xTaskCheckForTimeOut+0x54>
 8008b60:	428a      	cmp	r2, r1
 8008b62:	d90f      	bls.n	8008b84 <xTaskCheckForTimeOut+0x74>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008b64:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008b66:	4283      	cmp	r3, r0
 8008b68:	d90a      	bls.n	8008b80 <xTaskCheckForTimeOut+0x70>
			*pxTicksToWait -= xElapsedTime;
 8008b6a:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008b6c:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 8008b6e:	4413      	add	r3, r2
 8008b70:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008b72:	f7ff ffc1 	bl	8008af8 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008b76:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008b78:	f7fe fd38 	bl	80075ec <vPortExitCritical>
}
 8008b7c:	4620      	mov	r0, r4
 8008b7e:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008b80:	2300      	movs	r3, #0
 8008b82:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008b84:	2401      	movs	r4, #1
 8008b86:	e7f7      	b.n	8008b78 <xTaskCheckForTimeOut+0x68>
 8008b88:	200163ec 	.word	0x200163ec
 8008b8c:	200163d8 	.word	0x200163d8

08008b90 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008b90:	4b01      	ldr	r3, [pc, #4]	@ (8008b98 <vTaskMissedYield+0x8>)
 8008b92:	2201      	movs	r2, #1
 8008b94:	601a      	str	r2, [r3, #0]
}
 8008b96:	4770      	bx	lr
 8008b98:	200163dc 	.word	0x200163dc

08008b9c <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008b9c:	4b05      	ldr	r3, [pc, #20]	@ (8008bb4 <xTaskGetSchedulerState+0x18>)
 8008b9e:	681b      	ldr	r3, [r3, #0]
 8008ba0:	b133      	cbz	r3, 8008bb0 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008ba2:	4b05      	ldr	r3, [pc, #20]	@ (8008bb8 <xTaskGetSchedulerState+0x1c>)
 8008ba4:	6818      	ldr	r0, [r3, #0]
 8008ba6:	fab0 f080 	clz	r0, r0
 8008baa:	0940      	lsrs	r0, r0, #5
 8008bac:	0040      	lsls	r0, r0, #1
 8008bae:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008bb0:	2001      	movs	r0, #1
	}
 8008bb2:	4770      	bx	lr
 8008bb4:	200163e4 	.word	0x200163e4
 8008bb8:	200163cc 	.word	0x200163cc

08008bbc <xTaskPriorityInherit>:
	{
 8008bbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8008bbe:	4604      	mov	r4, r0
 8008bc0:	b338      	cbz	r0, 8008c12 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008bc2:	4d1a      	ldr	r5, [pc, #104]	@ (8008c2c <xTaskPriorityInherit+0x70>)
 8008bc4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008bc6:	682a      	ldr	r2, [r5, #0]
 8008bc8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008bca:	4293      	cmp	r3, r2
 8008bcc:	d226      	bcs.n	8008c1c <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008bce:	6982      	ldr	r2, [r0, #24]
 8008bd0:	2a00      	cmp	r2, #0
 8008bd2:	db04      	blt.n	8008bde <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008bd4:	682a      	ldr	r2, [r5, #0]
 8008bd6:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008bd8:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
 8008bdc:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008bde:	2214      	movs	r2, #20
 8008be0:	4e13      	ldr	r6, [pc, #76]	@ (8008c30 <xTaskPriorityInherit+0x74>)
 8008be2:	fb02 6303 	mla	r3, r2, r3, r6
 8008be6:	6962      	ldr	r2, [r4, #20]
 8008be8:	429a      	cmp	r2, r3
 8008bea:	d113      	bne.n	8008c14 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008bec:	1d27      	adds	r7, r4, #4
 8008bee:	4638      	mov	r0, r7
 8008bf0:	f7fe fc62 	bl	80074b8 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008bf4:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008bf6:	4a0f      	ldr	r2, [pc, #60]	@ (8008c34 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008bf8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008bfa:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008bfc:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008bfe:	428b      	cmp	r3, r1
 8008c00:	d900      	bls.n	8008c04 <xTaskPriorityInherit+0x48>
 8008c02:	6013      	str	r3, [r2, #0]
 8008c04:	2014      	movs	r0, #20
 8008c06:	4639      	mov	r1, r7
 8008c08:	fb00 6003 	mla	r0, r0, r3, r6
 8008c0c:	f7fe fc32 	bl	8007474 <vListInsertEnd>
				xReturn = pdTRUE;
 8008c10:	2001      	movs	r0, #1
	}
 8008c12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008c14:	682b      	ldr	r3, [r5, #0]
 8008c16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008c18:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8008c1a:	e7f9      	b.n	8008c10 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008c1c:	682b      	ldr	r3, [r5, #0]
 8008c1e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8008c20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008c22:	4298      	cmp	r0, r3
 8008c24:	bf2c      	ite	cs
 8008c26:	2000      	movcs	r0, #0
 8008c28:	2001      	movcc	r0, #1
 8008c2a:	e7f2      	b.n	8008c12 <xTaskPriorityInherit+0x56>
 8008c2c:	200168c4 	.word	0x200168c4
 8008c30:	20016464 	.word	0x20016464
 8008c34:	200163e8 	.word	0x200163e8

08008c38 <xTaskPriorityDisinherit>:
	{
 8008c38:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008c3a:	b908      	cbnz	r0, 8008c40 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8008c3c:	2000      	movs	r0, #0
	}
 8008c3e:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008c40:	4b1d      	ldr	r3, [pc, #116]	@ (8008cb8 <xTaskPriorityDisinherit+0x80>)
 8008c42:	681c      	ldr	r4, [r3, #0]
 8008c44:	4284      	cmp	r4, r0
 8008c46:	d00a      	beq.n	8008c5e <xTaskPriorityDisinherit+0x26>
 8008c48:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c4c:	b672      	cpsid	i
 8008c4e:	f383 8811 	msr	BASEPRI, r3
 8008c52:	f3bf 8f6f 	isb	sy
 8008c56:	f3bf 8f4f 	dsb	sy
 8008c5a:	b662      	cpsie	i
 8008c5c:	e7fe      	b.n	8008c5c <xTaskPriorityDisinherit+0x24>
			configASSERT( pxTCB->uxMutexesHeld );
 8008c5e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8008c60:	b953      	cbnz	r3, 8008c78 <xTaskPriorityDisinherit+0x40>
 8008c62:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c66:	b672      	cpsid	i
 8008c68:	f383 8811 	msr	BASEPRI, r3
 8008c6c:	f3bf 8f6f 	isb	sy
 8008c70:	f3bf 8f4f 	dsb	sy
 8008c74:	b662      	cpsie	i
 8008c76:	e7fe      	b.n	8008c76 <xTaskPriorityDisinherit+0x3e>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008c78:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
 8008c7a:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008c7c:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008c7e:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008c80:	4291      	cmp	r1, r2
 8008c82:	d0db      	beq.n	8008c3c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008c84:	2b00      	cmp	r3, #0
 8008c86:	d1d9      	bne.n	8008c3c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008c88:	1d25      	adds	r5, r4, #4
 8008c8a:	4628      	mov	r0, r5
 8008c8c:	f7fe fc14 	bl	80074b8 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008c90:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008c92:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008c96:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008c98:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008c9a:	4a08      	ldr	r2, [pc, #32]	@ (8008cbc <xTaskPriorityDisinherit+0x84>)
 8008c9c:	6811      	ldr	r1, [r2, #0]
 8008c9e:	428b      	cmp	r3, r1
 8008ca0:	d900      	bls.n	8008ca4 <xTaskPriorityDisinherit+0x6c>
 8008ca2:	6013      	str	r3, [r2, #0]
 8008ca4:	4a06      	ldr	r2, [pc, #24]	@ (8008cc0 <xTaskPriorityDisinherit+0x88>)
 8008ca6:	2014      	movs	r0, #20
 8008ca8:	4629      	mov	r1, r5
 8008caa:	fb00 2003 	mla	r0, r0, r3, r2
 8008cae:	f7fe fbe1 	bl	8007474 <vListInsertEnd>
					xReturn = pdTRUE;
 8008cb2:	2001      	movs	r0, #1
		return xReturn;
 8008cb4:	e7c3      	b.n	8008c3e <xTaskPriorityDisinherit+0x6>
 8008cb6:	bf00      	nop
 8008cb8:	200168c4 	.word	0x200168c4
 8008cbc:	200163e8 	.word	0x200163e8
 8008cc0:	20016464 	.word	0x20016464

08008cc4 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008cc4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008cc6:	4604      	mov	r4, r0
 8008cc8:	2800      	cmp	r0, #0
 8008cca:	d046      	beq.n	8008d5a <vTaskPriorityDisinheritAfterTimeout+0x96>
			configASSERT( pxTCB->uxMutexesHeld );
 8008ccc:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8008cce:	b952      	cbnz	r2, 8008ce6 <vTaskPriorityDisinheritAfterTimeout+0x22>
 8008cd0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008cd4:	b672      	cpsid	i
 8008cd6:	f383 8811 	msr	BASEPRI, r3
 8008cda:	f3bf 8f6f 	isb	sy
 8008cde:	f3bf 8f4f 	dsb	sy
 8008ce2:	b662      	cpsie	i
 8008ce4:	e7fe      	b.n	8008ce4 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8008ce6:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8008ce8:	4299      	cmp	r1, r3
 8008cea:	bf38      	it	cc
 8008cec:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008cee:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008cf0:	428b      	cmp	r3, r1
 8008cf2:	d032      	beq.n	8008d5a <vTaskPriorityDisinheritAfterTimeout+0x96>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008cf4:	2a01      	cmp	r2, #1
 8008cf6:	d130      	bne.n	8008d5a <vTaskPriorityDisinheritAfterTimeout+0x96>
					configASSERT( pxTCB != pxCurrentTCB );
 8008cf8:	4a18      	ldr	r2, [pc, #96]	@ (8008d5c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008cfa:	6812      	ldr	r2, [r2, #0]
 8008cfc:	4282      	cmp	r2, r0
 8008cfe:	d10a      	bne.n	8008d16 <vTaskPriorityDisinheritAfterTimeout+0x52>
 8008d00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d04:	b672      	cpsid	i
 8008d06:	f383 8811 	msr	BASEPRI, r3
 8008d0a:	f3bf 8f6f 	isb	sy
 8008d0e:	f3bf 8f4f 	dsb	sy
 8008d12:	b662      	cpsie	i
 8008d14:	e7fe      	b.n	8008d14 <vTaskPriorityDisinheritAfterTimeout+0x50>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008d16:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008d18:	4d11      	ldr	r5, [pc, #68]	@ (8008d60 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008d1a:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008d1c:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 8008d20:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008d22:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d26:	bfa8      	it	ge
 8008d28:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008d2c:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d2e:	bfa8      	it	ge
 8008d30:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008d32:	429a      	cmp	r2, r3
 8008d34:	d111      	bne.n	8008d5a <vTaskPriorityDisinheritAfterTimeout+0x96>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008d36:	1d06      	adds	r6, r0, #4
 8008d38:	4630      	mov	r0, r6
 8008d3a:	f7fe fbbd 	bl	80074b8 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008d3e:	4a09      	ldr	r2, [pc, #36]	@ (8008d64 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8008d40:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008d42:	6811      	ldr	r1, [r2, #0]
 8008d44:	428b      	cmp	r3, r1
 8008d46:	d900      	bls.n	8008d4a <vTaskPriorityDisinheritAfterTimeout+0x86>
 8008d48:	6013      	str	r3, [r2, #0]
 8008d4a:	2014      	movs	r0, #20
 8008d4c:	4631      	mov	r1, r6
 8008d4e:	fb00 5003 	mla	r0, r0, r3, r5
	}
 8008d52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8008d56:	f7fe bb8d 	b.w	8007474 <vListInsertEnd>
	}
 8008d5a:	bd70      	pop	{r4, r5, r6, pc}
 8008d5c:	200168c4 	.word	0x200168c4
 8008d60:	20016464 	.word	0x20016464
 8008d64:	200163e8 	.word	0x200163e8

08008d68 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008d68:	4b04      	ldr	r3, [pc, #16]	@ (8008d7c <pvTaskIncrementMutexHeldCount+0x14>)
 8008d6a:	681a      	ldr	r2, [r3, #0]
 8008d6c:	b11a      	cbz	r2, 8008d76 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8008d6e:	6819      	ldr	r1, [r3, #0]
 8008d70:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8008d72:	3201      	adds	r2, #1
 8008d74:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 8008d76:	6818      	ldr	r0, [r3, #0]
	}
 8008d78:	4770      	bx	lr
 8008d7a:	bf00      	nop
 8008d7c:	200168c4 	.word	0x200168c4

08008d80 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8008d80:	4291      	cmp	r1, r2
{
 8008d82:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008d84:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008d86:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8008d88:	d80a      	bhi.n	8008da0 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d8a:	1ad2      	subs	r2, r2, r3
 8008d8c:	6983      	ldr	r3, [r0, #24]
 8008d8e:	429a      	cmp	r2, r3
 8008d90:	d20d      	bcs.n	8008dae <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008d92:	1d01      	adds	r1, r0, #4
 8008d94:	4b07      	ldr	r3, [pc, #28]	@ (8008db4 <prvInsertTimerInActiveList+0x34>)
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008d96:	6818      	ldr	r0, [r3, #0]
 8008d98:	f7fe fb77 	bl	800748a <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008d9c:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8008d9e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008da0:	429a      	cmp	r2, r3
 8008da2:	d201      	bcs.n	8008da8 <prvInsertTimerInActiveList+0x28>
 8008da4:	4299      	cmp	r1, r3
 8008da6:	d202      	bcs.n	8008dae <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008da8:	1d01      	adds	r1, r0, #4
 8008daa:	4b03      	ldr	r3, [pc, #12]	@ (8008db8 <prvInsertTimerInActiveList+0x38>)
 8008dac:	e7f3      	b.n	8008d96 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008dae:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008db0:	e7f5      	b.n	8008d9e <prvInsertTimerInActiveList+0x1e>
 8008db2:	bf00      	nop
 8008db4:	200169c4 	.word	0x200169c4
 8008db8:	200169c8 	.word	0x200169c8

08008dbc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8008dbc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8008dbe:	4c11      	ldr	r4, [pc, #68]	@ (8008e04 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8008dc0:	f7fe fbf0 	bl	80075a4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008dc4:	6825      	ldr	r5, [r4, #0]
 8008dc6:	b9bd      	cbnz	r5, 8008df8 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8008dc8:	4f0f      	ldr	r7, [pc, #60]	@ (8008e08 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8008dca:	4e10      	ldr	r6, [pc, #64]	@ (8008e0c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8008dcc:	4638      	mov	r0, r7
 8008dce:	f7fe fb43 	bl	8007458 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8008dd2:	4630      	mov	r0, r6
 8008dd4:	f7fe fb40 	bl	8007458 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008dd8:	4b0d      	ldr	r3, [pc, #52]	@ (8008e10 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008dda:	4a0e      	ldr	r2, [pc, #56]	@ (8008e14 <prvCheckForValidListAndQueue+0x58>)
 8008ddc:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 8008dde:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008de0:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 8008de2:	4b0d      	ldr	r3, [pc, #52]	@ (8008e18 <prvCheckForValidListAndQueue+0x5c>)
 8008de4:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008de6:	4b0d      	ldr	r3, [pc, #52]	@ (8008e1c <prvCheckForValidListAndQueue+0x60>)
 8008de8:	9500      	str	r5, [sp, #0]
 8008dea:	f7fe fe21 	bl	8007a30 <xQueueGenericCreateStatic>
 8008dee:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008df0:	b110      	cbz	r0, 8008df8 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008df2:	490b      	ldr	r1, [pc, #44]	@ (8008e20 <prvCheckForValidListAndQueue+0x64>)
 8008df4:	f7ff f9d4 	bl	80081a0 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008df8:	b003      	add	sp, #12
 8008dfa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8008dfe:	f7fe bbf5 	b.w	80075ec <vPortExitCritical>
 8008e02:	bf00      	nop
 8008e04:	200169c0 	.word	0x200169c0
 8008e08:	200169e0 	.word	0x200169e0
 8008e0c:	200169cc 	.word	0x200169cc
 8008e10:	200169c8 	.word	0x200169c8
 8008e14:	20016918 	.word	0x20016918
 8008e18:	200169c4 	.word	0x200169c4
 8008e1c:	200168c8 	.word	0x200168c8
 8008e20:	08022f61 	.word	0x08022f61

08008e24 <xTimerCreateTimerTask>:
{
 8008e24:	b510      	push	{r4, lr}
 8008e26:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008e28:	f7ff ffc8 	bl	8008dbc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008e2c:	4b13      	ldr	r3, [pc, #76]	@ (8008e7c <xTimerCreateTimerTask+0x58>)
 8008e2e:	681b      	ldr	r3, [r3, #0]
 8008e30:	b1b3      	cbz	r3, 8008e60 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8008e32:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008e34:	aa07      	add	r2, sp, #28
 8008e36:	a906      	add	r1, sp, #24
 8008e38:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008e3a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008e3e:	f7fe fa07 	bl	8007250 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8008e42:	9b05      	ldr	r3, [sp, #20]
 8008e44:	9a07      	ldr	r2, [sp, #28]
 8008e46:	9302      	str	r3, [sp, #8]
 8008e48:	9b06      	ldr	r3, [sp, #24]
 8008e4a:	490d      	ldr	r1, [pc, #52]	@ (8008e80 <xTimerCreateTimerTask+0x5c>)
 8008e4c:	9301      	str	r3, [sp, #4]
 8008e4e:	2302      	movs	r3, #2
 8008e50:	480c      	ldr	r0, [pc, #48]	@ (8008e84 <xTimerCreateTimerTask+0x60>)
 8008e52:	9300      	str	r3, [sp, #0]
 8008e54:	4623      	mov	r3, r4
 8008e56:	f7ff fb6c 	bl	8008532 <xTaskCreateStatic>
 8008e5a:	4b0b      	ldr	r3, [pc, #44]	@ (8008e88 <xTimerCreateTimerTask+0x64>)
 8008e5c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8008e5e:	b950      	cbnz	r0, 8008e76 <xTimerCreateTimerTask+0x52>
 8008e60:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e64:	b672      	cpsid	i
 8008e66:	f383 8811 	msr	BASEPRI, r3
 8008e6a:	f3bf 8f6f 	isb	sy
 8008e6e:	f3bf 8f4f 	dsb	sy
 8008e72:	b662      	cpsie	i
	configASSERT( xReturn );
 8008e74:	e7fe      	b.n	8008e74 <xTimerCreateTimerTask+0x50>
}
 8008e76:	2001      	movs	r0, #1
 8008e78:	b008      	add	sp, #32
 8008e7a:	bd10      	pop	{r4, pc}
 8008e7c:	200169c0 	.word	0x200169c0
 8008e80:	08022f66 	.word	0x08022f66
 8008e84:	08008f8d 	.word	0x08008f8d
 8008e88:	200169bc 	.word	0x200169bc

08008e8c <xTimerGenericCommand>:
{
 8008e8c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008e8e:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8008e90:	4604      	mov	r4, r0
{
 8008e92:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8008e94:	b950      	cbnz	r0, 8008eac <xTimerGenericCommand+0x20>
 8008e96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e9a:	b672      	cpsid	i
 8008e9c:	f383 8811 	msr	BASEPRI, r3
 8008ea0:	f3bf 8f6f 	isb	sy
 8008ea4:	f3bf 8f4f 	dsb	sy
 8008ea8:	b662      	cpsie	i
 8008eaa:	e7fe      	b.n	8008eaa <xTimerGenericCommand+0x1e>
	if( xTimerQueue != NULL )
 8008eac:	4d0c      	ldr	r5, [pc, #48]	@ (8008ee0 <xTimerGenericCommand+0x54>)
 8008eae:	6828      	ldr	r0, [r5, #0]
 8008eb0:	b178      	cbz	r0, 8008ed2 <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008eb2:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8008eb4:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8008eb6:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008eba:	dc0c      	bgt.n	8008ed6 <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008ebc:	f7ff fe6e 	bl	8008b9c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008ec0:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008ec2:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8008ec4:	4669      	mov	r1, sp
 8008ec6:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008ec8:	bf0c      	ite	eq
 8008eca:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8008ecc:	461a      	movne	r2, r3
 8008ece:	f7fe fe34 	bl	8007b3a <xQueueGenericSend>
}
 8008ed2:	b004      	add	sp, #16
 8008ed4:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8008ed6:	2300      	movs	r3, #0
 8008ed8:	4669      	mov	r1, sp
 8008eda:	f7fe fee8 	bl	8007cae <xQueueGenericSendFromISR>
 8008ede:	e7f8      	b.n	8008ed2 <xTimerGenericCommand+0x46>
 8008ee0:	200169c0 	.word	0x200169c0

08008ee4 <prvSampleTimeNow>:
{
 8008ee4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8008ee8:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 8008f88 <prvSampleTimeNow+0xa4>
{
 8008eec:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8008eee:	f7ff fb95 	bl	800861c <xTaskGetTickCount>
 8008ef2:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8008ef4:	f8d8 3000 	ldr.w	r3, [r8]
 8008ef8:	4283      	cmp	r3, r0
 8008efa:	d909      	bls.n	8008f10 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008efc:	4f20      	ldr	r7, [pc, #128]	@ (8008f80 <prvSampleTimeNow+0x9c>)
 8008efe:	683b      	ldr	r3, [r7, #0]
 8008f00:	681a      	ldr	r2, [r3, #0]
 8008f02:	b96a      	cbnz	r2, 8008f20 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8008f04:	4a1f      	ldr	r2, [pc, #124]	@ (8008f84 <prvSampleTimeNow+0xa0>)
 8008f06:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 8008f08:	6013      	str	r3, [r2, #0]
 8008f0a:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
 8008f0c:	6039      	str	r1, [r7, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8008f0e:	e000      	b.n	8008f12 <prvSampleTimeNow+0x2e>
 8008f10:	2300      	movs	r3, #0
}
 8008f12:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8008f14:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8008f16:	f8c8 5000 	str.w	r5, [r8]
}
 8008f1a:	b002      	add	sp, #8
 8008f1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008f20:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f22:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008f24:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008f28:	f104 0a04 	add.w	sl, r4, #4
 8008f2c:	4650      	mov	r0, sl
 8008f2e:	f7fe fac3 	bl	80074b8 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008f32:	6a23      	ldr	r3, [r4, #32]
 8008f34:	4620      	mov	r0, r4
 8008f36:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008f38:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8008f3c:	075b      	lsls	r3, r3, #29
 8008f3e:	d5de      	bpl.n	8008efe <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008f40:	69a3      	ldr	r3, [r4, #24]
 8008f42:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 8008f44:	4599      	cmp	r9, r3
 8008f46:	d206      	bcs.n	8008f56 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008f48:	4651      	mov	r1, sl
 8008f4a:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8008f4c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008f4e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008f50:	f7fe fa9b 	bl	800748a <vListInsert>
 8008f54:	e7d3      	b.n	8008efe <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008f56:	2300      	movs	r3, #0
 8008f58:	464a      	mov	r2, r9
 8008f5a:	4620      	mov	r0, r4
 8008f5c:	4619      	mov	r1, r3
 8008f5e:	9300      	str	r3, [sp, #0]
 8008f60:	f7ff ff94 	bl	8008e8c <xTimerGenericCommand>
				configASSERT( xResult );
 8008f64:	2800      	cmp	r0, #0
 8008f66:	d1ca      	bne.n	8008efe <prvSampleTimeNow+0x1a>
 8008f68:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f6c:	b672      	cpsid	i
 8008f6e:	f383 8811 	msr	BASEPRI, r3
 8008f72:	f3bf 8f6f 	isb	sy
 8008f76:	f3bf 8f4f 	dsb	sy
 8008f7a:	b662      	cpsie	i
 8008f7c:	e7fe      	b.n	8008f7c <prvSampleTimeNow+0x98>
 8008f7e:	bf00      	nop
 8008f80:	200169c8 	.word	0x200169c8
 8008f84:	200169c4 	.word	0x200169c4
 8008f88:	200169b8 	.word	0x200169b8

08008f8c <prvTimerTask>:
{
 8008f8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008f90:	4d71      	ldr	r5, [pc, #452]	@ (8009158 <prvTimerTask+0x1cc>)
{
 8008f92:	b089      	sub	sp, #36	@ 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008f94:	4e71      	ldr	r6, [pc, #452]	@ (800915c <prvTimerTask+0x1d0>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008f96:	682b      	ldr	r3, [r5, #0]
 8008f98:	f8d3 8000 	ldr.w	r8, [r3]
 8008f9c:	f1b8 0f00 	cmp.w	r8, #0
 8008fa0:	d037      	beq.n	8009012 <prvTimerTask+0x86>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008fa2:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008fa4:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008fa6:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
 8008faa:	f7ff fb2f 	bl	800860c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008fae:	a804      	add	r0, sp, #16
 8008fb0:	f7ff ff98 	bl	8008ee4 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8008fb4:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008fb6:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8008fb8:	2b00      	cmp	r3, #0
 8008fba:	d16b      	bne.n	8009094 <prvTimerTask+0x108>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008fbc:	2c00      	cmp	r4, #0
 8008fbe:	d14e      	bne.n	800905e <prvTimerTask+0xd2>
 8008fc0:	4540      	cmp	r0, r8
 8008fc2:	d352      	bcc.n	800906a <prvTimerTask+0xde>
				( void ) xTaskResumeAll();
 8008fc4:	f7ff fbc8 	bl	8008758 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008fc8:	682b      	ldr	r3, [r5, #0]
 8008fca:	68db      	ldr	r3, [r3, #12]
 8008fcc:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008fce:	1d38      	adds	r0, r7, #4
 8008fd0:	f7fe fa72 	bl	80074b8 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008fd4:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8008fd8:	0758      	lsls	r0, r3, #29
 8008fda:	d51c      	bpl.n	8009016 <prvTimerTask+0x8a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008fdc:	69b9      	ldr	r1, [r7, #24]
 8008fde:	4643      	mov	r3, r8
 8008fe0:	464a      	mov	r2, r9
 8008fe2:	4638      	mov	r0, r7
 8008fe4:	4441      	add	r1, r8
 8008fe6:	f7ff fecb 	bl	8008d80 <prvInsertTimerInActiveList>
 8008fea:	b1c0      	cbz	r0, 800901e <prvTimerTask+0x92>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008fec:	4623      	mov	r3, r4
 8008fee:	4642      	mov	r2, r8
 8008ff0:	4621      	mov	r1, r4
 8008ff2:	4638      	mov	r0, r7
 8008ff4:	9400      	str	r4, [sp, #0]
 8008ff6:	f7ff ff49 	bl	8008e8c <xTimerGenericCommand>
			configASSERT( xResult );
 8008ffa:	b980      	cbnz	r0, 800901e <prvTimerTask+0x92>
 8008ffc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009000:	b672      	cpsid	i
 8009002:	f383 8811 	msr	BASEPRI, r3
 8009006:	f3bf 8f6f 	isb	sy
 800900a:	f3bf 8f4f 	dsb	sy
 800900e:	b662      	cpsie	i
 8009010:	e7fe      	b.n	8009010 <prvTimerTask+0x84>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009012:	2401      	movs	r4, #1
 8009014:	e7c9      	b.n	8008faa <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009016:	f023 0301 	bic.w	r3, r3, #1
 800901a:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800901e:	6a3b      	ldr	r3, [r7, #32]
 8009020:	4638      	mov	r0, r7
 8009022:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009024:	2200      	movs	r2, #0
 8009026:	a904      	add	r1, sp, #16
 8009028:	6830      	ldr	r0, [r6, #0]
 800902a:	f7fe fefd 	bl	8007e28 <xQueueReceive>
 800902e:	2800      	cmp	r0, #0
 8009030:	d0b1      	beq.n	8008f96 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009032:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009034:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009036:	2b00      	cmp	r3, #0
 8009038:	db2f      	blt.n	800909a <prvTimerTask+0x10e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800903a:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800903c:	6963      	ldr	r3, [r4, #20]
 800903e:	2b00      	cmp	r3, #0
 8009040:	d132      	bne.n	80090a8 <prvTimerTask+0x11c>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009042:	a803      	add	r0, sp, #12
 8009044:	f7ff ff4e 	bl	8008ee4 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009048:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800904a:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800904c:	2b09      	cmp	r3, #9
 800904e:	d8e9      	bhi.n	8009024 <prvTimerTask+0x98>
 8009050:	e8df f003 	tbb	[pc, r3]
 8009054:	592e2e2e 	.word	0x592e2e2e
 8009058:	2e2e7a60 	.word	0x2e2e7a60
 800905c:	6059      	.short	0x6059
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800905e:	4b40      	ldr	r3, [pc, #256]	@ (8009160 <prvTimerTask+0x1d4>)
 8009060:	681b      	ldr	r3, [r3, #0]
 8009062:	681c      	ldr	r4, [r3, #0]
 8009064:	fab4 f484 	clz	r4, r4
 8009068:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800906a:	4622      	mov	r2, r4
 800906c:	eba8 0109 	sub.w	r1, r8, r9
 8009070:	6830      	ldr	r0, [r6, #0]
 8009072:	f7ff f8d6 	bl	8008222 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009076:	f7ff fb6f 	bl	8008758 <xTaskResumeAll>
 800907a:	2800      	cmp	r0, #0
 800907c:	d1d2      	bne.n	8009024 <prvTimerTask+0x98>
					portYIELD_WITHIN_API();
 800907e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009082:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009086:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800908a:	f3bf 8f4f 	dsb	sy
 800908e:	f3bf 8f6f 	isb	sy
 8009092:	e7c7      	b.n	8009024 <prvTimerTask+0x98>
			( void ) xTaskResumeAll();
 8009094:	f7ff fb60 	bl	8008758 <xTaskResumeAll>
}
 8009098:	e7c4      	b.n	8009024 <prvTimerTask+0x98>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800909a:	9b05      	ldr	r3, [sp, #20]
 800909c:	9907      	ldr	r1, [sp, #28]
 800909e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80090a0:	9b04      	ldr	r3, [sp, #16]
 80090a2:	2b00      	cmp	r3, #0
 80090a4:	dbbe      	blt.n	8009024 <prvTimerTask+0x98>
 80090a6:	e7c8      	b.n	800903a <prvTimerTask+0xae>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80090a8:	1d20      	adds	r0, r4, #4
 80090aa:	f7fe fa05 	bl	80074b8 <uxListRemove>
 80090ae:	e7c8      	b.n	8009042 <prvTimerTask+0xb6>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80090b0:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80090b4:	4620      	mov	r0, r4
 80090b6:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80090b8:	f043 0301 	orr.w	r3, r3, #1
 80090bc:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80090c0:	9b05      	ldr	r3, [sp, #20]
 80090c2:	4419      	add	r1, r3
 80090c4:	f7ff fe5c 	bl	8008d80 <prvInsertTimerInActiveList>
 80090c8:	2800      	cmp	r0, #0
 80090ca:	d0ab      	beq.n	8009024 <prvTimerTask+0x98>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80090cc:	6a23      	ldr	r3, [r4, #32]
 80090ce:	4620      	mov	r0, r4
 80090d0:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80090d2:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80090d6:	0759      	lsls	r1, r3, #29
 80090d8:	d5a4      	bpl.n	8009024 <prvTimerTask+0x98>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80090da:	69a2      	ldr	r2, [r4, #24]
 80090dc:	2300      	movs	r3, #0
 80090de:	9905      	ldr	r1, [sp, #20]
 80090e0:	4620      	mov	r0, r4
 80090e2:	9300      	str	r3, [sp, #0]
 80090e4:	440a      	add	r2, r1
 80090e6:	4619      	mov	r1, r3
 80090e8:	f7ff fed0 	bl	8008e8c <xTimerGenericCommand>
							configASSERT( xResult );
 80090ec:	2800      	cmp	r0, #0
 80090ee:	d199      	bne.n	8009024 <prvTimerTask+0x98>
 80090f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090f4:	b672      	cpsid	i
 80090f6:	f383 8811 	msr	BASEPRI, r3
 80090fa:	f3bf 8f6f 	isb	sy
 80090fe:	f3bf 8f4f 	dsb	sy
 8009102:	b662      	cpsie	i
 8009104:	e7fe      	b.n	8009104 <prvTimerTask+0x178>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009106:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800910a:	f023 0301 	bic.w	r3, r3, #1
 800910e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 8009112:	e787      	b.n	8009024 <prvTimerTask+0x98>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009114:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009118:	f043 0301 	orr.w	r3, r3, #1
 800911c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009120:	9905      	ldr	r1, [sp, #20]
 8009122:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009124:	b951      	cbnz	r1, 800913c <prvTimerTask+0x1b0>
 8009126:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800912a:	b672      	cpsid	i
 800912c:	f383 8811 	msr	BASEPRI, r3
 8009130:	f3bf 8f6f 	isb	sy
 8009134:	f3bf 8f4f 	dsb	sy
 8009138:	b662      	cpsie	i
 800913a:	e7fe      	b.n	800913a <prvTimerTask+0x1ae>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800913c:	4603      	mov	r3, r0
 800913e:	4401      	add	r1, r0
 8009140:	4620      	mov	r0, r4
 8009142:	f7ff fe1d 	bl	8008d80 <prvInsertTimerInActiveList>
					break;
 8009146:	e76d      	b.n	8009024 <prvTimerTask+0x98>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009148:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800914c:	079a      	lsls	r2, r3, #30
 800914e:	d4dc      	bmi.n	800910a <prvTimerTask+0x17e>
							vPortFree( pxTimer );
 8009150:	4620      	mov	r0, r4
 8009152:	f7fe f945 	bl	80073e0 <vPortFree>
 8009156:	e765      	b.n	8009024 <prvTimerTask+0x98>
 8009158:	200169c8 	.word	0x200169c8
 800915c:	200169c0 	.word	0x200169c0
 8009160:	200169c4 	.word	0x200169c4

08009164 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009164:	8880      	ldrh	r0, [r0, #4]
 8009166:	4770      	bx	lr

08009168 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009168:	b570      	push	{r4, r5, r6, lr}
 800916a:	6803      	ldr	r3, [r0, #0]
 800916c:	460c      	mov	r4, r1
 800916e:	2100      	movs	r1, #0
 8009170:	4605      	mov	r5, r0
 8009172:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009174:	4798      	blx	r3
 8009176:	4606      	mov	r6, r0
 8009178:	682b      	ldr	r3, [r5, #0]
 800917a:	4628      	mov	r0, r5
 800917c:	1ba4      	subs	r4, r4, r6
 800917e:	6a1b      	ldr	r3, [r3, #32]
 8009180:	b2a4      	uxth	r4, r4
 8009182:	4798      	blx	r3
 8009184:	fbb4 f0f0 	udiv	r0, r4, r0
 8009188:	bd70      	pop	{r4, r5, r6, pc}

0800918a <_ZN8touchgfx17AbstractPartition5clearEv>:
 800918a:	2300      	movs	r3, #0
 800918c:	8083      	strh	r3, [r0, #4]
 800918e:	4770      	bx	lr

08009190 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009190:	b510      	push	{r4, lr}
 8009192:	6803      	ldr	r3, [r0, #0]
 8009194:	4604      	mov	r4, r0
 8009196:	8881      	ldrh	r1, [r0, #4]
 8009198:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800919a:	4798      	blx	r3
 800919c:	88a3      	ldrh	r3, [r4, #4]
 800919e:	3301      	adds	r3, #1
 80091a0:	80a3      	strh	r3, [r4, #4]
 80091a2:	bd10      	pop	{r4, pc}

080091a4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80091a4:	6803      	ldr	r3, [r0, #0]
 80091a6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80091a8:	4718      	bx	r3

080091aa <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80091aa:	4770      	bx	lr

080091ac <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80091ac:	4a02      	ldr	r2, [pc, #8]	@ (80091b8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80091ae:	6002      	str	r2, [r0, #0]
 80091b0:	2200      	movs	r2, #0
 80091b2:	8082      	strh	r2, [r0, #4]
 80091b4:	4770      	bx	lr
 80091b6:	bf00      	nop
 80091b8:	08022f78 	.word	0x08022f78

080091bc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80091bc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80091be:	2000      	movs	r0, #0
 80091c0:	b12b      	cbz	r3, 80091ce <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80091c2:	b920      	cbnz	r0, 80091ce <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80091c4:	1a5a      	subs	r2, r3, r1
 80091c6:	699b      	ldr	r3, [r3, #24]
 80091c8:	4250      	negs	r0, r2
 80091ca:	4150      	adcs	r0, r2
 80091cc:	e7f8      	b.n	80091c0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80091ce:	4770      	bx	lr

080091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80091d0:	2300      	movs	r3, #0
 80091d2:	6148      	str	r0, [r1, #20]
 80091d4:	618b      	str	r3, [r1, #24]
 80091d6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80091d8:	b913      	cbnz	r3, 80091e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80091da:	6281      	str	r1, [r0, #40]	@ 0x28
 80091dc:	4770      	bx	lr
 80091de:	4613      	mov	r3, r2
 80091e0:	699a      	ldr	r2, [r3, #24]
 80091e2:	2a00      	cmp	r2, #0
 80091e4:	d1fb      	bne.n	80091de <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80091e6:	6199      	str	r1, [r3, #24]
 80091e8:	4770      	bx	lr

080091ea <_ZN8touchgfx9Container9removeAllEv>:
 80091ea:	2200      	movs	r2, #0
 80091ec:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80091ee:	b123      	cbz	r3, 80091fa <_ZN8touchgfx9Container9removeAllEv+0x10>
 80091f0:	6999      	ldr	r1, [r3, #24]
 80091f2:	6281      	str	r1, [r0, #40]	@ 0x28
 80091f4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80091f8:	e7f8      	b.n	80091ec <_ZN8touchgfx9Container9removeAllEv+0x2>
 80091fa:	4770      	bx	lr

080091fc <_ZN8touchgfx9Container6unlinkEv>:
 80091fc:	2300      	movs	r3, #0
 80091fe:	6283      	str	r3, [r0, #40]	@ 0x28
 8009200:	4770      	bx	lr

08009202 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8009202:	2200      	movs	r2, #0
 8009204:	8002      	strh	r2, [r0, #0]
 8009206:	8042      	strh	r2, [r0, #2]
 8009208:	8082      	strh	r2, [r0, #4]
 800920a:	80c2      	strh	r2, [r0, #6]
 800920c:	4770      	bx	lr

0800920e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800920e:	b570      	push	{r4, r5, r6, lr}
 8009210:	460d      	mov	r5, r1
 8009212:	4616      	mov	r6, r2
 8009214:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009216:	b13c      	cbz	r4, 8009228 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8009218:	6823      	ldr	r3, [r4, #0]
 800921a:	4620      	mov	r0, r4
 800921c:	4632      	mov	r2, r6
 800921e:	4629      	mov	r1, r5
 8009220:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009222:	4798      	blx	r3
 8009224:	69a4      	ldr	r4, [r4, #24]
 8009226:	e7f6      	b.n	8009216 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8009228:	bd70      	pop	{r4, r5, r6, pc}

0800922a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800922a:	b538      	push	{r3, r4, r5, lr}
 800922c:	460d      	mov	r5, r1
 800922e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009230:	b134      	cbz	r4, 8009240 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8009232:	682b      	ldr	r3, [r5, #0]
 8009234:	4621      	mov	r1, r4
 8009236:	4628      	mov	r0, r5
 8009238:	689b      	ldr	r3, [r3, #8]
 800923a:	4798      	blx	r3
 800923c:	69a4      	ldr	r4, [r4, #24]
 800923e:	e7f7      	b.n	8009230 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8009240:	bd38      	pop	{r3, r4, r5, pc}

08009242 <_ZN8touchgfx9ContainerD1Ev>:
 8009242:	4770      	bx	lr

08009244 <_ZN8touchgfx9ContainerD0Ev>:
 8009244:	b510      	push	{r4, lr}
 8009246:	4604      	mov	r4, r0
 8009248:	212c      	movs	r1, #44	@ 0x2c
 800924a:	f016 ff80 	bl	802014e <_ZdlPvj>
 800924e:	4620      	mov	r0, r4
 8009250:	bd10      	pop	{r4, pc}

08009252 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8009252:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009254:	b19b      	cbz	r3, 800927e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009256:	428b      	cmp	r3, r1
 8009258:	d109      	bne.n	800926e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800925a:	699a      	ldr	r2, [r3, #24]
 800925c:	2100      	movs	r1, #0
 800925e:	6159      	str	r1, [r3, #20]
 8009260:	6282      	str	r2, [r0, #40]	@ 0x28
 8009262:	b902      	cbnz	r2, 8009266 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8009264:	4770      	bx	lr
 8009266:	6199      	str	r1, [r3, #24]
 8009268:	4770      	bx	lr
 800926a:	4613      	mov	r3, r2
 800926c:	b13a      	cbz	r2, 800927e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800926e:	699a      	ldr	r2, [r3, #24]
 8009270:	428a      	cmp	r2, r1
 8009272:	d1fa      	bne.n	800926a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009274:	698a      	ldr	r2, [r1, #24]
 8009276:	619a      	str	r2, [r3, #24]
 8009278:	2300      	movs	r3, #0
 800927a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800927e:	4770      	bx	lr

08009280 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009280:	b410      	push	{r4}
 8009282:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009284:	4604      	mov	r4, r0
 8009286:	b92b      	cbnz	r3, 8009294 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009288:	6803      	ldr	r3, [r0, #0]
 800928a:	4611      	mov	r1, r2
 800928c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009290:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8009292:	4718      	bx	r3
 8009294:	b941      	cbnz	r1, 80092a8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009296:	6193      	str	r3, [r2, #24]
 8009298:	6282      	str	r2, [r0, #40]	@ 0x28
 800929a:	6154      	str	r4, [r2, #20]
 800929c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80092a0:	4770      	bx	lr
 80092a2:	4603      	mov	r3, r0
 80092a4:	2800      	cmp	r0, #0
 80092a6:	d0f9      	beq.n	800929c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80092a8:	4299      	cmp	r1, r3
 80092aa:	6998      	ldr	r0, [r3, #24]
 80092ac:	d1f9      	bne.n	80092a2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80092ae:	6190      	str	r0, [r2, #24]
 80092b0:	618a      	str	r2, [r1, #24]
 80092b2:	e7f2      	b.n	800929a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080092b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80092b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80092b8:	461f      	mov	r7, r3
 80092ba:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 80092be:	460d      	mov	r5, r1
 80092c0:	4616      	mov	r6, r2
 80092c2:	b103      	cbz	r3, 80092c6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80092c4:	6038      	str	r0, [r7, #0]
 80092c6:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80092c8:	b314      	cbz	r4, 8009310 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80092ca:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 80092ce:	b1eb      	cbz	r3, 800930c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80092d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80092d4:	428d      	cmp	r5, r1
 80092d6:	db19      	blt.n	800930c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80092d8:	b289      	uxth	r1, r1
 80092da:	8923      	ldrh	r3, [r4, #8]
 80092dc:	440b      	add	r3, r1
 80092de:	b21b      	sxth	r3, r3
 80092e0:	429d      	cmp	r5, r3
 80092e2:	da13      	bge.n	800930c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80092e4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80092e8:	4296      	cmp	r6, r2
 80092ea:	db0f      	blt.n	800930c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80092ec:	b292      	uxth	r2, r2
 80092ee:	8963      	ldrh	r3, [r4, #10]
 80092f0:	4413      	add	r3, r2
 80092f2:	b21b      	sxth	r3, r3
 80092f4:	429e      	cmp	r6, r3
 80092f6:	da09      	bge.n	800930c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80092f8:	6823      	ldr	r3, [r4, #0]
 80092fa:	1ab2      	subs	r2, r6, r2
 80092fc:	1a69      	subs	r1, r5, r1
 80092fe:	4620      	mov	r0, r4
 8009300:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 8009304:	b212      	sxth	r2, r2
 8009306:	463b      	mov	r3, r7
 8009308:	b209      	sxth	r1, r1
 800930a:	47c0      	blx	r8
 800930c:	69a4      	ldr	r4, [r4, #24]
 800930e:	e7db      	b.n	80092c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8009310:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009314 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8009314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009318:	4c6d      	ldr	r4, [pc, #436]	@ (80094d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800931a:	b0a1      	sub	sp, #132	@ 0x84
 800931c:	4606      	mov	r6, r0
 800931e:	6824      	ldr	r4, [r4, #0]
 8009320:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8009322:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 8009326:	2400      	movs	r4, #0
 8009328:	9303      	str	r3, [sp, #12]
 800932a:	802c      	strh	r4, [r5, #0]
 800932c:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800932e:	802c      	strh	r4, [r5, #0]
 8009330:	601c      	str	r4, [r3, #0]
 8009332:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8009336:	f7ff ffbd 	bl	80092b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800933a:	f1b9 0f03 	cmp.w	r9, #3
 800933e:	f340 80c1 	ble.w	80094c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 8009342:	4631      	mov	r1, r6
 8009344:	a80c      	add	r0, sp, #48	@ 0x30
 8009346:	f006 ffbd 	bl	80102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800934a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800934e:	9306      	str	r3, [sp, #24]
 8009350:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8009354:	9307      	str	r3, [sp, #28]
 8009356:	9b03      	ldr	r3, [sp, #12]
 8009358:	f8d3 a000 	ldr.w	sl, [r3]
 800935c:	f1ba 0f00 	cmp.w	sl, #0
 8009360:	f000 80b3 	beq.w	80094ca <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 8009364:	4651      	mov	r1, sl
 8009366:	a810      	add	r0, sp, #64	@ 0x40
 8009368:	f006 ffac 	bl	80102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800936c:	2002      	movs	r0, #2
 800936e:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8009372:	9b01      	ldr	r3, [sp, #4]
 8009374:	9a06      	ldr	r2, [sp, #24]
 8009376:	fb91 f1f0 	sdiv	r1, r1, r0
 800937a:	189d      	adds	r5, r3, r2
 800937c:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 8009380:	9a07      	ldr	r2, [sp, #28]
 8009382:	4419      	add	r1, r3
 8009384:	9b02      	ldr	r3, [sp, #8]
 8009386:	4413      	add	r3, r2
 8009388:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800938c:	1a6d      	subs	r5, r5, r1
 800938e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8009392:	fb92 f2f0 	sdiv	r2, r2, r0
 8009396:	440a      	add	r2, r1
 8009398:	1a9b      	subs	r3, r3, r2
 800939a:	435b      	muls	r3, r3
 800939c:	fb05 3505 	mla	r5, r5, r5, r3
 80093a0:	4f4c      	ldr	r7, [pc, #304]	@ (80094d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80093a2:	ac10      	add	r4, sp, #64	@ 0x40
 80093a4:	f1b9 0f0c 	cmp.w	r9, #12
 80093a8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80093aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80093ac:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80093ae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80093b0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80093b2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80093b4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80093b8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80093bc:	f04f 0303 	mov.w	r3, #3
 80093c0:	bfd8      	it	le
 80093c2:	f109 32ff 	addle.w	r2, r9, #4294967295
 80093c6:	f04f 0400 	mov.w	r4, #0
 80093ca:	f8cd 9000 	str.w	r9, [sp]
 80093ce:	bfcc      	ite	gt
 80093d0:	4698      	movgt	r8, r3
 80093d2:	fb92 f8f3 	sdivle	r8, r2, r3
 80093d6:	1c63      	adds	r3, r4, #1
 80093d8:	aa10      	add	r2, sp, #64	@ 0x40
 80093da:	f004 0401 	and.w	r4, r4, #1
 80093de:	f04f 0b00 	mov.w	fp, #0
 80093e2:	9308      	str	r3, [sp, #32]
 80093e4:	9b00      	ldr	r3, [sp, #0]
 80093e6:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80093ea:	fb93 f3f8 	sdiv	r3, r3, r8
 80093ee:	3404      	adds	r4, #4
 80093f0:	b29b      	uxth	r3, r3
 80093f2:	9304      	str	r3, [sp, #16]
 80093f4:	9a04      	ldr	r2, [sp, #16]
 80093f6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80093fa:	fb13 f302 	smulbb	r3, r3, r2
 80093fe:	9a01      	ldr	r2, [sp, #4]
 8009400:	b29b      	uxth	r3, r3
 8009402:	1899      	adds	r1, r3, r2
 8009404:	9305      	str	r3, [sp, #20]
 8009406:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800940a:	b209      	sxth	r1, r1
 800940c:	4299      	cmp	r1, r3
 800940e:	db4d      	blt.n	80094ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009410:	8932      	ldrh	r2, [r6, #8]
 8009412:	4413      	add	r3, r2
 8009414:	b21b      	sxth	r3, r3
 8009416:	4299      	cmp	r1, r3
 8009418:	da48      	bge.n	80094ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800941a:	9b04      	ldr	r3, [sp, #16]
 800941c:	6827      	ldr	r7, [r4, #0]
 800941e:	fb17 f703 	smulbb	r7, r7, r3
 8009422:	9b02      	ldr	r3, [sp, #8]
 8009424:	b2bf      	uxth	r7, r7
 8009426:	18fa      	adds	r2, r7, r3
 8009428:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800942c:	b212      	sxth	r2, r2
 800942e:	429a      	cmp	r2, r3
 8009430:	db3c      	blt.n	80094ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009432:	8970      	ldrh	r0, [r6, #10]
 8009434:	4403      	add	r3, r0
 8009436:	b21b      	sxth	r3, r3
 8009438:	429a      	cmp	r2, r3
 800943a:	da37      	bge.n	80094ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800943c:	2300      	movs	r3, #0
 800943e:	4630      	mov	r0, r6
 8009440:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009442:	ab0b      	add	r3, sp, #44	@ 0x2c
 8009444:	f7ff ff36 	bl	80092b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009448:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800944a:	b37a      	cbz	r2, 80094ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800944c:	4552      	cmp	r2, sl
 800944e:	d02d      	beq.n	80094ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009450:	4611      	mov	r1, r2
 8009452:	a80e      	add	r0, sp, #56	@ 0x38
 8009454:	9209      	str	r2, [sp, #36]	@ 0x24
 8009456:	f006 ff35 	bl	80102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800945a:	f04f 0e02 	mov.w	lr, #2
 800945e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8009462:	9a06      	ldr	r2, [sp, #24]
 8009464:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8009468:	9b01      	ldr	r3, [sp, #4]
 800946a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800946e:	4413      	add	r3, r2
 8009470:	9a07      	ldr	r2, [sp, #28]
 8009472:	fb91 f1fe 	sdiv	r1, r1, lr
 8009476:	fb9c fcfe 	sdiv	ip, ip, lr
 800947a:	4401      	add	r1, r0
 800947c:	1a58      	subs	r0, r3, r1
 800947e:	9b02      	ldr	r3, [sp, #8]
 8009480:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8009484:	4413      	add	r3, r2
 8009486:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009488:	448c      	add	ip, r1
 800948a:	eba3 030c 	sub.w	r3, r3, ip
 800948e:	435b      	muls	r3, r3
 8009490:	fb00 3300 	mla	r3, r0, r0, r3
 8009494:	42ab      	cmp	r3, r5
 8009496:	d208      	bcs.n	80094aa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8009498:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800949a:	461d      	mov	r5, r3
 800949c:	9803      	ldr	r0, [sp, #12]
 800949e:	6001      	str	r1, [r0, #0]
 80094a0:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80094a2:	9805      	ldr	r0, [sp, #20]
 80094a4:	8008      	strh	r0, [r1, #0]
 80094a6:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80094a8:	800f      	strh	r7, [r1, #0]
 80094aa:	4692      	mov	sl, r2
 80094ac:	f10b 0b01 	add.w	fp, fp, #1
 80094b0:	3408      	adds	r4, #8
 80094b2:	f1bb 0f04 	cmp.w	fp, #4
 80094b6:	d19d      	bne.n	80093f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80094b8:	9b00      	ldr	r3, [sp, #0]
 80094ba:	9c08      	ldr	r4, [sp, #32]
 80094bc:	444b      	add	r3, r9
 80094be:	4544      	cmp	r4, r8
 80094c0:	9300      	str	r3, [sp, #0]
 80094c2:	d188      	bne.n	80093d6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80094c4:	b021      	add	sp, #132	@ 0x84
 80094c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80094ca:	f04f 35ff 	mov.w	r5, #4294967295
 80094ce:	e767      	b.n	80093a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80094d0:	20016a00 	.word	0x20016a00
 80094d4:	08021c7c 	.word	0x08021c7c

080094d8 <_ZN8touchgfx4RectaNERKS0_>:
 80094d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80094dc:	f9b1 7000 	ldrsh.w	r7, [r1]
 80094e0:	888c      	ldrh	r4, [r1, #4]
 80094e2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80094e6:	443c      	add	r4, r7
 80094e8:	b2a4      	uxth	r4, r4
 80094ea:	fa0f f884 	sxth.w	r8, r4
 80094ee:	45c1      	cmp	r9, r8
 80094f0:	da2f      	bge.n	8009552 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80094f2:	8882      	ldrh	r2, [r0, #4]
 80094f4:	444a      	add	r2, r9
 80094f6:	b292      	uxth	r2, r2
 80094f8:	fa0f fe82 	sxth.w	lr, r2
 80094fc:	4577      	cmp	r7, lr
 80094fe:	da28      	bge.n	8009552 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009500:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009504:	88cb      	ldrh	r3, [r1, #6]
 8009506:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800950a:	442b      	add	r3, r5
 800950c:	b21b      	sxth	r3, r3
 800950e:	429e      	cmp	r6, r3
 8009510:	da1f      	bge.n	8009552 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009512:	88c3      	ldrh	r3, [r0, #6]
 8009514:	4433      	add	r3, r6
 8009516:	b29b      	uxth	r3, r3
 8009518:	fa0f fc83 	sxth.w	ip, r3
 800951c:	4565      	cmp	r5, ip
 800951e:	da18      	bge.n	8009552 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009520:	454f      	cmp	r7, r9
 8009522:	bfb8      	it	lt
 8009524:	464f      	movlt	r7, r9
 8009526:	42b5      	cmp	r5, r6
 8009528:	bfb8      	it	lt
 800952a:	4635      	movlt	r5, r6
 800952c:	45f0      	cmp	r8, lr
 800952e:	bfd8      	it	le
 8009530:	4622      	movle	r2, r4
 8009532:	1bd2      	subs	r2, r2, r7
 8009534:	8082      	strh	r2, [r0, #4]
 8009536:	884a      	ldrh	r2, [r1, #2]
 8009538:	88c9      	ldrh	r1, [r1, #6]
 800953a:	8007      	strh	r7, [r0, #0]
 800953c:	440a      	add	r2, r1
 800953e:	8045      	strh	r5, [r0, #2]
 8009540:	b292      	uxth	r2, r2
 8009542:	b211      	sxth	r1, r2
 8009544:	458c      	cmp	ip, r1
 8009546:	bfa8      	it	ge
 8009548:	4613      	movge	r3, r2
 800954a:	1b5b      	subs	r3, r3, r5
 800954c:	80c3      	strh	r3, [r0, #6]
 800954e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009552:	2300      	movs	r3, #0
 8009554:	8003      	strh	r3, [r0, #0]
 8009556:	8043      	strh	r3, [r0, #2]
 8009558:	8083      	strh	r3, [r0, #4]
 800955a:	80c3      	strh	r3, [r0, #6]
 800955c:	e7f7      	b.n	800954e <_ZN8touchgfx4RectaNERKS0_+0x76>

0800955e <_ZNK8touchgfx4Rect7isEmptyEv>:
 800955e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009562:	2b00      	cmp	r3, #0
 8009564:	dd06      	ble.n	8009574 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009566:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800956a:	2800      	cmp	r0, #0
 800956c:	bfcc      	ite	gt
 800956e:	2000      	movgt	r0, #0
 8009570:	2001      	movle	r0, #1
 8009572:	4770      	bx	lr
 8009574:	2001      	movs	r0, #1
 8009576:	4770      	bx	lr

08009578 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009578:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800957c:	2300      	movs	r3, #0
 800957e:	4604      	mov	r4, r0
 8009580:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8009582:	8003      	strh	r3, [r0, #0]
 8009584:	8043      	strh	r3, [r0, #2]
 8009586:	8083      	strh	r3, [r0, #4]
 8009588:	80c3      	strh	r3, [r0, #6]
 800958a:	2d00      	cmp	r5, #0
 800958c:	d040      	beq.n	8009610 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800958e:	1d28      	adds	r0, r5, #4
 8009590:	f7ff ffe5 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009594:	b988      	cbnz	r0, 80095ba <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009596:	4620      	mov	r0, r4
 8009598:	f7ff ffe1 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 800959c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80095a0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80095a4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80095a8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80095ac:	b138      	cbz	r0, 80095be <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80095ae:	8022      	strh	r2, [r4, #0]
 80095b0:	8063      	strh	r3, [r4, #2]
 80095b2:	f8a4 e004 	strh.w	lr, [r4, #4]
 80095b6:	f8a4 c006 	strh.w	ip, [r4, #6]
 80095ba:	69ad      	ldr	r5, [r5, #24]
 80095bc:	e7e5      	b.n	800958a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80095be:	f9b4 0000 	ldrsh.w	r0, [r4]
 80095c2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80095c6:	4290      	cmp	r0, r2
 80095c8:	4607      	mov	r7, r0
 80095ca:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80095ce:	460e      	mov	r6, r1
 80095d0:	bfa8      	it	ge
 80095d2:	4617      	movge	r7, r2
 80095d4:	4299      	cmp	r1, r3
 80095d6:	4472      	add	r2, lr
 80095d8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80095dc:	bfa8      	it	ge
 80095de:	461e      	movge	r6, r3
 80095e0:	4440      	add	r0, r8
 80095e2:	4471      	add	r1, lr
 80095e4:	4463      	add	r3, ip
 80095e6:	b200      	sxth	r0, r0
 80095e8:	8027      	strh	r7, [r4, #0]
 80095ea:	b212      	sxth	r2, r2
 80095ec:	8066      	strh	r6, [r4, #2]
 80095ee:	b209      	sxth	r1, r1
 80095f0:	b21b      	sxth	r3, r3
 80095f2:	4290      	cmp	r0, r2
 80095f4:	bfac      	ite	ge
 80095f6:	ebc7 0200 	rsbge	r2, r7, r0
 80095fa:	ebc7 0202 	rsblt	r2, r7, r2
 80095fe:	4299      	cmp	r1, r3
 8009600:	bfac      	ite	ge
 8009602:	ebc6 0301 	rsbge	r3, r6, r1
 8009606:	ebc6 0303 	rsblt	r3, r6, r3
 800960a:	80a2      	strh	r2, [r4, #4]
 800960c:	80e3      	strh	r3, [r4, #6]
 800960e:	e7d4      	b.n	80095ba <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009610:	4620      	mov	r0, r4
 8009612:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009616 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8009616:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800961a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800961e:	b383      	cbz	r3, 8009682 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009620:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009622:	b374      	cbz	r4, 8009682 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009624:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009628:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800962c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009630:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009634:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009638:	b303      	cbz	r3, 800967c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800963a:	4668      	mov	r0, sp
 800963c:	1d21      	adds	r1, r4, #4
 800963e:	f8ad 5000 	strh.w	r5, [sp]
 8009642:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009646:	f8ad 7004 	strh.w	r7, [sp, #4]
 800964a:	f8ad 8006 	strh.w	r8, [sp, #6]
 800964e:	f7ff ff43 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 8009652:	4668      	mov	r0, sp
 8009654:	f7ff ff83 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009658:	b980      	cbnz	r0, 800967c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800965a:	f8bd 3000 	ldrh.w	r3, [sp]
 800965e:	4669      	mov	r1, sp
 8009660:	88a2      	ldrh	r2, [r4, #4]
 8009662:	4620      	mov	r0, r4
 8009664:	1a9b      	subs	r3, r3, r2
 8009666:	88e2      	ldrh	r2, [r4, #6]
 8009668:	f8ad 3000 	strh.w	r3, [sp]
 800966c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009670:	1a9b      	subs	r3, r3, r2
 8009672:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009676:	6823      	ldr	r3, [r4, #0]
 8009678:	689b      	ldr	r3, [r3, #8]
 800967a:	4798      	blx	r3
 800967c:	69a4      	ldr	r4, [r4, #24]
 800967e:	2c00      	cmp	r4, #0
 8009680:	d1d8      	bne.n	8009634 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8009682:	b002      	add	sp, #8
 8009684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009688 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009688:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800968a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800968e:	460d      	mov	r5, r1
 8009690:	4616      	mov	r6, r2
 8009692:	b323      	cbz	r3, 80096de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009694:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009696:	b314      	cbz	r4, 80096de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009698:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800969c:	b1eb      	cbz	r3, 80096da <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800969e:	6828      	ldr	r0, [r5, #0]
 80096a0:	466b      	mov	r3, sp
 80096a2:	6869      	ldr	r1, [r5, #4]
 80096a4:	c303      	stmia	r3!, {r0, r1}
 80096a6:	4668      	mov	r0, sp
 80096a8:	1d21      	adds	r1, r4, #4
 80096aa:	f7ff ff15 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 80096ae:	4668      	mov	r0, sp
 80096b0:	f7ff ff55 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 80096b4:	b988      	cbnz	r0, 80096da <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80096b6:	f8bd 3000 	ldrh.w	r3, [sp]
 80096ba:	4669      	mov	r1, sp
 80096bc:	88a2      	ldrh	r2, [r4, #4]
 80096be:	4620      	mov	r0, r4
 80096c0:	1a9b      	subs	r3, r3, r2
 80096c2:	88e2      	ldrh	r2, [r4, #6]
 80096c4:	f8ad 3000 	strh.w	r3, [sp]
 80096c8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80096cc:	1a9b      	subs	r3, r3, r2
 80096ce:	4632      	mov	r2, r6
 80096d0:	f8ad 3002 	strh.w	r3, [sp, #2]
 80096d4:	6823      	ldr	r3, [r4, #0]
 80096d6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80096d8:	4798      	blx	r3
 80096da:	69a4      	ldr	r4, [r4, #24]
 80096dc:	e7db      	b.n	8009696 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80096de:	b002      	add	sp, #8
 80096e0:	bd70      	pop	{r4, r5, r6, pc}

080096e2 <_ZNK8touchgfx6Slider15getIndicatorMinEv>:
 80096e2:	f9b0 00e4 	ldrsh.w	r0, [r0, #228]	@ 0xe4
 80096e6:	4770      	bx	lr

080096e8 <_ZNK8touchgfx6Slider15getIndicatorMaxEv>:
 80096e8:	f9b0 00e6 	ldrsh.w	r0, [r0, #230]	@ 0xe6
 80096ec:	4770      	bx	lr

080096ee <_ZNK8touchgfx6Slider11getMinValueEv>:
 80096ee:	f9b0 0030 	ldrsh.w	r0, [r0, #48]	@ 0x30
 80096f2:	4770      	bx	lr

080096f4 <_ZNK8touchgfx6Slider11getMaxValueEv>:
 80096f4:	f9b0 0032 	ldrsh.w	r0, [r0, #50]	@ 0x32
 80096f8:	4770      	bx	lr

080096fa <_ZN8touchgfx6Slider8setValueEs>:
 80096fa:	b570      	push	{r4, r5, r6, lr}
 80096fc:	6803      	ldr	r3, [r0, #0]
 80096fe:	4604      	mov	r4, r0
 8009700:	e9d3 532b 	ldrd	r5, r3, [r3, #172]	@ 0xac
 8009704:	4798      	blx	r3
 8009706:	4601      	mov	r1, r0
 8009708:	462b      	mov	r3, r5
 800970a:	4620      	mov	r0, r4
 800970c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009710:	4718      	bx	r3

08009712 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE>:
 8009712:	b570      	push	{r4, r5, r6, lr}
 8009714:	6803      	ldr	r3, [r0, #0]
 8009716:	4604      	mov	r4, r0
 8009718:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
 800971c:	f8d3 60ac 	ldr.w	r6, [r3, #172]	@ 0xac
 8009720:	b95a      	cbnz	r2, 800973a <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x28>
 8009722:	894d      	ldrh	r5, [r1, #10]
 8009724:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8009728:	4620      	mov	r0, r4
 800972a:	4798      	blx	r3
 800972c:	1a29      	subs	r1, r5, r0
 800972e:	4633      	mov	r3, r6
 8009730:	4620      	mov	r0, r4
 8009732:	b209      	sxth	r1, r1
 8009734:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009738:	4718      	bx	r3
 800973a:	898d      	ldrh	r5, [r1, #12]
 800973c:	e7f2      	b.n	8009724 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x12>

0800973e <_ZNK8touchgfx6Slider18getIndicatorRadiusEv>:
 800973e:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
 8009742:	2302      	movs	r3, #2
 8009744:	b922      	cbnz	r2, 8009750 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0x12>
 8009746:	f9b0 0094 	ldrsh.w	r0, [r0, #148]	@ 0x94
 800974a:	fb90 f0f3 	sdiv	r0, r0, r3
 800974e:	4770      	bx	lr
 8009750:	f9b0 0096 	ldrsh.w	r0, [r0, #150]	@ 0x96
 8009754:	e7f9      	b.n	800974a <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0xc>

08009756 <_ZN8touchgfx6Slider13setValueRangeEsss>:
 8009756:	8642      	strh	r2, [r0, #50]	@ 0x32
 8009758:	6802      	ldr	r2, [r0, #0]
 800975a:	8601      	strh	r1, [r0, #48]	@ 0x30
 800975c:	4619      	mov	r1, r3
 800975e:	b410      	push	{r4}
 8009760:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009764:	f8d2 20a8 	ldr.w	r2, [r2, #168]	@ 0xa8
 8009768:	4710      	bx	r2

0800976a <_ZN8touchgfx6Slider13setValueRangeEss>:
 800976a:	f9b0 302e 	ldrsh.w	r3, [r0, #46]	@ 0x2e
 800976e:	428b      	cmp	r3, r1
 8009770:	b410      	push	{r4}
 8009772:	db09      	blt.n	8009788 <_ZN8touchgfx6Slider13setValueRangeEss+0x1e>
 8009774:	4293      	cmp	r3, r2
 8009776:	bfa8      	it	ge
 8009778:	4613      	movge	r3, r2
 800977a:	6804      	ldr	r4, [r0, #0]
 800977c:	f8d4 4098 	ldr.w	r4, [r4, #152]	@ 0x98
 8009780:	46a4      	mov	ip, r4
 8009782:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009786:	4760      	bx	ip
 8009788:	460b      	mov	r3, r1
 800978a:	e7f6      	b.n	800977a <_ZN8touchgfx6Slider13setValueRangeEss+0x10>

0800978c <_ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv>:
 800978c:	f9b0 20e6 	ldrsh.w	r2, [r0, #230]	@ 0xe6
 8009790:	f9b0 00e4 	ldrsh.w	r0, [r0, #228]	@ 0xe4
 8009794:	1a10      	subs	r0, r2, r0
 8009796:	4770      	bx	lr

08009798 <_ZNK8touchgfx6Slider17getValueRangeSizeEv>:
 8009798:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	@ 0x32
 800979c:	f9b0 0030 	ldrsh.w	r0, [r0, #48]	@ 0x30
 80097a0:	1a10      	subs	r0, r2, r0
 80097a2:	4770      	bx	lr

080097a4 <_ZN8touchgfx6SliderD1Ev>:
 80097a4:	4770      	bx	lr

080097a6 <_ZN8touchgfx6SliderD0Ev>:
 80097a6:	b510      	push	{r4, lr}
 80097a8:	4604      	mov	r4, r0
 80097aa:	21f4      	movs	r1, #244	@ 0xf4
 80097ac:	f016 fccf 	bl	802014e <_ZdlPvj>
 80097b0:	4620      	mov	r0, r4
 80097b2:	bd10      	pop	{r4, pc}

080097b4 <_ZNK8touchgfx6Slider15valueToPositionEi>:
 80097b4:	b570      	push	{r4, r5, r6, lr}
 80097b6:	f9b0 5032 	ldrsh.w	r5, [r0, #50]	@ 0x32
 80097ba:	4604      	mov	r4, r0
 80097bc:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	@ 0x30
 80097c0:	428d      	cmp	r5, r1
 80097c2:	bfa8      	it	ge
 80097c4:	460d      	movge	r5, r1
 80097c6:	429d      	cmp	r5, r3
 80097c8:	bfac      	ite	ge
 80097ca:	ebc3 0505 	rsbge	r5, r3, r5
 80097ce:	ebc3 0503 	rsblt	r5, r3, r3
 80097d2:	6803      	ldr	r3, [r0, #0]
 80097d4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 80097d8:	4798      	blx	r3
 80097da:	6823      	ldr	r3, [r4, #0]
 80097dc:	4606      	mov	r6, r0
 80097de:	4620      	mov	r0, r4
 80097e0:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 80097e4:	4798      	blx	r3
 80097e6:	4631      	mov	r1, r6
 80097e8:	4602      	mov	r2, r0
 80097ea:	4628      	mov	r0, r5
 80097ec:	f006 fe99 	bl	8010522 <_ZN8touchgfx6muldivElll>
 80097f0:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 80097f4:	2b01      	cmp	r3, #1
 80097f6:	bf0b      	itete	eq
 80097f8:	f8b4 30e6 	ldrheq.w	r3, [r4, #230]	@ 0xe6
 80097fc:	f8b4 30e4 	ldrhne.w	r3, [r4, #228]	@ 0xe4
 8009800:	1a18      	subeq	r0, r3, r0
 8009802:	18c0      	addne	r0, r0, r3
 8009804:	b200      	sxth	r0, r0
 8009806:	bd70      	pop	{r4, r5, r6, pc}

08009808 <_ZNK8touchgfx6Slider15positionToValueEs>:
 8009808:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800980a:	f9b0 30e6 	ldrsh.w	r3, [r0, #230]	@ 0xe6
 800980e:	4605      	mov	r5, r0
 8009810:	f9b0 40e4 	ldrsh.w	r4, [r0, #228]	@ 0xe4
 8009814:	4299      	cmp	r1, r3
 8009816:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
 800981a:	f9b0 6030 	ldrsh.w	r6, [r0, #48]	@ 0x30
 800981e:	bfa8      	it	ge
 8009820:	4619      	movge	r1, r3
 8009822:	42a1      	cmp	r1, r4
 8009824:	bfb8      	it	lt
 8009826:	4621      	movlt	r1, r4
 8009828:	2a01      	cmp	r2, #1
 800982a:	b289      	uxth	r1, r1
 800982c:	bf08      	it	eq
 800982e:	1a5c      	subeq	r4, r3, r1
 8009830:	6803      	ldr	r3, [r0, #0]
 8009832:	bf18      	it	ne
 8009834:	1b0c      	subne	r4, r1, r4
 8009836:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800983a:	4798      	blx	r3
 800983c:	682b      	ldr	r3, [r5, #0]
 800983e:	4607      	mov	r7, r0
 8009840:	b224      	sxth	r4, r4
 8009842:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8009846:	4628      	mov	r0, r5
 8009848:	4798      	blx	r3
 800984a:	4639      	mov	r1, r7
 800984c:	4602      	mov	r2, r0
 800984e:	4620      	mov	r0, r4
 8009850:	f006 fe67 	bl	8010522 <_ZN8touchgfx6muldivElll>
 8009854:	4430      	add	r0, r6
 8009856:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08009858 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE>:
 8009858:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800985c:	790b      	ldrb	r3, [r1, #4]
 800985e:	4604      	mov	r4, r0
 8009860:	460d      	mov	r5, r1
 8009862:	b32b      	cbz	r3, 80098b0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x58>
 8009864:	2b01      	cmp	r3, #1
 8009866:	d137      	bne.n	80098d8 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
 8009868:	6823      	ldr	r3, [r4, #0]
 800986a:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 800986e:	f8d3 70ac 	ldr.w	r7, [r3, #172]	@ 0xac
 8009872:	2a00      	cmp	r2, #0
 8009874:	d12e      	bne.n	80098d4 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8009876:	88ee      	ldrh	r6, [r5, #6]
 8009878:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 800987c:	4620      	mov	r0, r4
 800987e:	4798      	blx	r3
 8009880:	1a31      	subs	r1, r6, r0
 8009882:	4620      	mov	r0, r4
 8009884:	b209      	sxth	r1, r1
 8009886:	47b8      	blx	r7
 8009888:	792b      	ldrb	r3, [r5, #4]
 800988a:	2b01      	cmp	r3, #1
 800988c:	d124      	bne.n	80098d8 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
 800988e:	f8d4 00ec 	ldr.w	r0, [r4, #236]	@ 0xec
 8009892:	b308      	cbz	r0, 80098d8 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
 8009894:	6803      	ldr	r3, [r0, #0]
 8009896:	68db      	ldr	r3, [r3, #12]
 8009898:	4798      	blx	r3
 800989a:	b1e8      	cbz	r0, 80098d8 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
 800989c:	f8d4 00ec 	ldr.w	r0, [r4, #236]	@ 0xec
 80098a0:	4621      	mov	r1, r4
 80098a2:	f9b4 202e 	ldrsh.w	r2, [r4, #46]	@ 0x2e
 80098a6:	6803      	ldr	r3, [r0, #0]
 80098a8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80098ac:	689b      	ldr	r3, [r3, #8]
 80098ae:	4718      	bx	r3
 80098b0:	f8d0 00e8 	ldr.w	r0, [r0, #232]	@ 0xe8
 80098b4:	2800      	cmp	r0, #0
 80098b6:	d0d7      	beq.n	8009868 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 80098b8:	6803      	ldr	r3, [r0, #0]
 80098ba:	68db      	ldr	r3, [r3, #12]
 80098bc:	4798      	blx	r3
 80098be:	2800      	cmp	r0, #0
 80098c0:	d0d2      	beq.n	8009868 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 80098c2:	f8d4 00e8 	ldr.w	r0, [r4, #232]	@ 0xe8
 80098c6:	4621      	mov	r1, r4
 80098c8:	f9b4 202e 	ldrsh.w	r2, [r4, #46]	@ 0x2e
 80098cc:	6803      	ldr	r3, [r0, #0]
 80098ce:	689b      	ldr	r3, [r3, #8]
 80098d0:	4798      	blx	r3
 80098d2:	e7c9      	b.n	8009868 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 80098d4:	892e      	ldrh	r6, [r5, #8]
 80098d6:	e7cf      	b.n	8009878 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x20>
 80098d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080098dc <_ZN8touchgfx8DrawableC1Ev>:
 80098dc:	4a0a      	ldr	r2, [pc, #40]	@ (8009908 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 80098de:	6002      	str	r2, [r0, #0]
 80098e0:	2200      	movs	r2, #0
 80098e2:	8082      	strh	r2, [r0, #4]
 80098e4:	80c2      	strh	r2, [r0, #6]
 80098e6:	8102      	strh	r2, [r0, #8]
 80098e8:	8142      	strh	r2, [r0, #10]
 80098ea:	8182      	strh	r2, [r0, #12]
 80098ec:	81c2      	strh	r2, [r0, #14]
 80098ee:	8202      	strh	r2, [r0, #16]
 80098f0:	8242      	strh	r2, [r0, #18]
 80098f2:	61c2      	str	r2, [r0, #28]
 80098f4:	8402      	strh	r2, [r0, #32]
 80098f6:	8442      	strh	r2, [r0, #34]	@ 0x22
 80098f8:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 80098fc:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8009900:	2201      	movs	r2, #1
 8009902:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 8009906:	4770      	bx	lr
 8009908:	080238b0 	.word	0x080238b0

0800990c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800990c:	b570      	push	{r4, r5, r6, lr}
 800990e:	6803      	ldr	r3, [r0, #0]
 8009910:	4604      	mov	r4, r0
 8009912:	4615      	mov	r5, r2
 8009914:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009916:	4798      	blx	r3
 8009918:	6823      	ldr	r3, [r4, #0]
 800991a:	4629      	mov	r1, r5
 800991c:	4620      	mov	r0, r4
 800991e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009920:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009924:	4718      	bx	r3

08009926 <_ZN8touchgfx6Slider23updateIndicatorPositionEs>:
 8009926:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800992a:	f9b0 80e4 	ldrsh.w	r8, [r0, #228]	@ 0xe4
 800992e:	4604      	mov	r4, r0
 8009930:	308c      	adds	r0, #140	@ 0x8c
 8009932:	4588      	cmp	r8, r1
 8009934:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8009938:	f104 06b8 	add.w	r6, r4, #184	@ 0xb8
 800993c:	bfb8      	it	lt
 800993e:	4688      	movlt	r8, r1
 8009940:	f9b0 105a 	ldrsh.w	r1, [r0, #90]	@ 0x5a
 8009944:	4588      	cmp	r8, r1
 8009946:	bfa8      	it	ge
 8009948:	4688      	movge	r8, r1
 800994a:	fa1f f788 	uxth.w	r7, r8
 800994e:	2b00      	cmp	r3, #0
 8009950:	d130      	bne.n	80099b4 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x8e>
 8009952:	f9b4 2092 	ldrsh.w	r2, [r4, #146]	@ 0x92
 8009956:	4641      	mov	r1, r8
 8009958:	f7f8 fe4d 	bl	80025f6 <_ZN8touchgfx8Drawable6moveToEss>
 800995c:	4630      	mov	r0, r6
 800995e:	f006 fc16 	bl	801018e <_ZNK8touchgfx8Drawable10invalidateEv>
 8009962:	f8b4 20bc 	ldrh.w	r2, [r4, #188]	@ 0xbc
 8009966:	6823      	ldr	r3, [r4, #0]
 8009968:	4620      	mov	r0, r4
 800996a:	1abf      	subs	r7, r7, r2
 800996c:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8009970:	b2bf      	uxth	r7, r7
 8009972:	4798      	blx	r3
 8009974:	4407      	add	r7, r0
 8009976:	f8a4 70c0 	strh.w	r7, [r4, #192]	@ 0xc0
 800997a:	4630      	mov	r0, r6
 800997c:	f006 fc07 	bl	801018e <_ZNK8touchgfx8Drawable10invalidateEv>
 8009980:	6823      	ldr	r3, [r4, #0]
 8009982:	4641      	mov	r1, r8
 8009984:	4620      	mov	r0, r4
 8009986:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800998a:	4798      	blx	r3
 800998c:	85e0      	strh	r0, [r4, #46]	@ 0x2e
 800998e:	f8d4 00f0 	ldr.w	r0, [r4, #240]	@ 0xf0
 8009992:	2800      	cmp	r0, #0
 8009994:	d03c      	beq.n	8009a10 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xea>
 8009996:	6803      	ldr	r3, [r0, #0]
 8009998:	68db      	ldr	r3, [r3, #12]
 800999a:	4798      	blx	r3
 800999c:	2800      	cmp	r0, #0
 800999e:	d037      	beq.n	8009a10 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xea>
 80099a0:	f8d4 00f0 	ldr.w	r0, [r4, #240]	@ 0xf0
 80099a4:	4621      	mov	r1, r4
 80099a6:	f9b4 202e 	ldrsh.w	r2, [r4, #46]	@ 0x2e
 80099aa:	6803      	ldr	r3, [r0, #0]
 80099ac:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80099b0:	689b      	ldr	r3, [r3, #8]
 80099b2:	4718      	bx	r3
 80099b4:	4642      	mov	r2, r8
 80099b6:	f9b4 1090 	ldrsh.w	r1, [r4, #144]	@ 0x90
 80099ba:	f7f8 fe1c 	bl	80025f6 <_ZN8touchgfx8Drawable6moveToEss>
 80099be:	4630      	mov	r0, r6
 80099c0:	f006 fbe5 	bl	801018e <_ZNK8touchgfx8Drawable10invalidateEv>
 80099c4:	8f60      	ldrh	r0, [r4, #58]	@ 0x3a
 80099c6:	8fe5      	ldrh	r5, [r4, #62]	@ 0x3e
 80099c8:	6823      	ldr	r3, [r4, #0]
 80099ca:	4405      	add	r5, r0
 80099cc:	4620      	mov	r0, r4
 80099ce:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 80099d2:	b2ad      	uxth	r5, r5
 80099d4:	4798      	blx	r3
 80099d6:	6823      	ldr	r3, [r4, #0]
 80099d8:	1bed      	subs	r5, r5, r7
 80099da:	f9b4 a0bc 	ldrsh.w	sl, [r4, #188]	@ 0xbc
 80099de:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 80099e2:	1a2d      	subs	r5, r5, r0
 80099e4:	4620      	mov	r0, r4
 80099e6:	4798      	blx	r3
 80099e8:	4438      	add	r0, r7
 80099ea:	b2ad      	uxth	r5, r5
 80099ec:	f9b4 90c0 	ldrsh.w	r9, [r4, #192]	@ 0xc0
 80099f0:	b202      	sxth	r2, r0
 80099f2:	4651      	mov	r1, sl
 80099f4:	4630      	mov	r0, r6
 80099f6:	f7f9 fa71 	bl	8002edc <_ZN8touchgfx8Drawable5setXYEss>
 80099fa:	4630      	mov	r0, r6
 80099fc:	b22a      	sxth	r2, r5
 80099fe:	4649      	mov	r1, r9
 8009a00:	f7ff ff84 	bl	800990c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8009a04:	f8b4 006a 	ldrh.w	r0, [r4, #106]	@ 0x6a
 8009a08:	1a2d      	subs	r5, r5, r0
 8009a0a:	f8a4 5066 	strh.w	r5, [r4, #102]	@ 0x66
 8009a0e:	e7b4      	b.n	800997a <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x54>
 8009a10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08009a14 <_ZN8touchgfx8Drawable11setPositionERKS0_>:
 8009a14:	b570      	push	{r4, r5, r6, lr}
 8009a16:	4604      	mov	r4, r0
 8009a18:	f9b1 5008 	ldrsh.w	r5, [r1, #8]
 8009a1c:	f9b1 600a 	ldrsh.w	r6, [r1, #10]
 8009a20:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
 8009a24:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 8009a28:	f7f9 fa58 	bl	8002edc <_ZN8touchgfx8Drawable5setXYEss>
 8009a2c:	4632      	mov	r2, r6
 8009a2e:	4629      	mov	r1, r5
 8009a30:	4620      	mov	r0, r4
 8009a32:	f7ff ff6b 	bl	800990c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8009a36:	bd70      	pop	{r4, r5, r6, pc}

08009a38 <_ZN8touchgfx6Slider21setupHorizontalSliderEsssss>:
 8009a38:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009a3c:	f04f 0a00 	mov.w	sl, #0
 8009a40:	f100 0b34 	add.w	fp, r0, #52	@ 0x34
 8009a44:	4604      	mov	r4, r0
 8009a46:	461d      	mov	r5, r3
 8009a48:	f880 a02c 	strb.w	sl, [r0, #44]	@ 0x2c
 8009a4c:	4658      	mov	r0, fp
 8009a4e:	4690      	mov	r8, r2
 8009a50:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8009a54:	4689      	mov	r9, r1
 8009a56:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	@ 0x28
 8009a5a:	f7f9 fa3f 	bl	8002edc <_ZN8touchgfx8Drawable5setXYEss>
 8009a5e:	4659      	mov	r1, fp
 8009a60:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
 8009a64:	f7ff ffd6 	bl	8009a14 <_ZN8touchgfx8Drawable11setPositionERKS0_>
 8009a68:	4652      	mov	r2, sl
 8009a6a:	4651      	mov	r1, sl
 8009a6c:	f104 0060 	add.w	r0, r4, #96	@ 0x60
 8009a70:	f7f9 fa34 	bl	8002edc <_ZN8touchgfx8Drawable5setXYEss>
 8009a74:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8009a76:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 8009a78:	4620      	mov	r0, r4
 8009a7a:	4490      	add	r8, r2
 8009a7c:	f8b4 2096 	ldrh.w	r2, [r4, #150]	@ 0x96
 8009a80:	f8a4 5092 	strh.w	r5, [r4, #146]	@ 0x92
 8009a84:	4489      	add	r9, r1
 8009a86:	4415      	add	r5, r2
 8009a88:	f8b4 1094 	ldrh.w	r1, [r4, #148]	@ 0x94
 8009a8c:	fa0f f288 	sxth.w	r2, r8
 8009a90:	f8a4 70e4 	strh.w	r7, [r4, #228]	@ 0xe4
 8009a94:	1873      	adds	r3, r6, r1
 8009a96:	b22d      	sxth	r5, r5
 8009a98:	fa0f f989 	sxth.w	r9, r9
 8009a9c:	f8a4 60e6 	strh.w	r6, [r4, #230]	@ 0xe6
 8009aa0:	b219      	sxth	r1, r3
 8009aa2:	42aa      	cmp	r2, r5
 8009aa4:	bfb8      	it	lt
 8009aa6:	462a      	movlt	r2, r5
 8009aa8:	4549      	cmp	r1, r9
 8009aaa:	bfb8      	it	lt
 8009aac:	4649      	movlt	r1, r9
 8009aae:	f7ff ff2d 	bl	800990c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8009ab2:	6823      	ldr	r3, [r4, #0]
 8009ab4:	f9b4 102e 	ldrsh.w	r1, [r4, #46]	@ 0x2e
 8009ab8:	4620      	mov	r0, r4
 8009aba:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8009abe:	b001      	add	sp, #4
 8009ac0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ac4:	4718      	bx	r3

08009ac6 <_ZN8touchgfx6Slider19setupVerticalSliderEsssss>:
 8009ac6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009aca:	461d      	mov	r5, r3
 8009acc:	f100 0a34 	add.w	sl, r0, #52	@ 0x34
 8009ad0:	2301      	movs	r3, #1
 8009ad2:	4604      	mov	r4, r0
 8009ad4:	4617      	mov	r7, r2
 8009ad6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8009ada:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8009ade:	4650      	mov	r0, sl
 8009ae0:	460e      	mov	r6, r1
 8009ae2:	f9bd 9020 	ldrsh.w	r9, [sp, #32]
 8009ae6:	f7f9 f9f9 	bl	8002edc <_ZN8touchgfx8Drawable5setXYEss>
 8009aea:	4651      	mov	r1, sl
 8009aec:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
 8009af0:	f7ff ff90 	bl	8009a14 <_ZN8touchgfx8Drawable11setPositionERKS0_>
 8009af4:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 8009af6:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8009af8:	4620      	mov	r0, r4
 8009afa:	f8b4 3096 	ldrh.w	r3, [r4, #150]	@ 0x96
 8009afe:	440e      	add	r6, r1
 8009b00:	443a      	add	r2, r7
 8009b02:	f8b4 1094 	ldrh.w	r1, [r4, #148]	@ 0x94
 8009b06:	4443      	add	r3, r8
 8009b08:	f8a4 5090 	strh.w	r5, [r4, #144]	@ 0x90
 8009b0c:	b212      	sxth	r2, r2
 8009b0e:	440d      	add	r5, r1
 8009b10:	b21b      	sxth	r3, r3
 8009b12:	f8a4 90e4 	strh.w	r9, [r4, #228]	@ 0xe4
 8009b16:	b231      	sxth	r1, r6
 8009b18:	f8a4 80e6 	strh.w	r8, [r4, #230]	@ 0xe6
 8009b1c:	429a      	cmp	r2, r3
 8009b1e:	b22d      	sxth	r5, r5
 8009b20:	bfb8      	it	lt
 8009b22:	461a      	movlt	r2, r3
 8009b24:	42a9      	cmp	r1, r5
 8009b26:	bfb8      	it	lt
 8009b28:	4629      	movlt	r1, r5
 8009b2a:	f7ff feef 	bl	800990c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8009b2e:	6823      	ldr	r3, [r4, #0]
 8009b30:	f9b4 102e 	ldrsh.w	r1, [r4, #46]	@ 0x2e
 8009b34:	4620      	mov	r0, r4
 8009b36:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8009b3a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009b3e:	4718      	bx	r3

08009b40 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8009b40:	b538      	push	{r3, r4, r5, lr}
 8009b42:	4604      	mov	r4, r0
 8009b44:	460d      	mov	r5, r1
 8009b46:	2226      	movs	r2, #38	@ 0x26
 8009b48:	2100      	movs	r1, #0
 8009b4a:	f017 fb07 	bl	802115c <memset>
 8009b4e:	4620      	mov	r0, r4
 8009b50:	f7ff fec4 	bl	80098dc <_ZN8touchgfx8DrawableC1Ev>
 8009b54:	4b06      	ldr	r3, [pc, #24]	@ (8009b70 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8009b56:	4620      	mov	r0, r4
 8009b58:	4629      	mov	r1, r5
 8009b5a:	6023      	str	r3, [r4, #0]
 8009b5c:	882b      	ldrh	r3, [r5, #0]
 8009b5e:	84e3      	strh	r3, [r4, #38]	@ 0x26
 8009b60:	23ff      	movs	r3, #255	@ 0xff
 8009b62:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 8009b66:	f002 ff11 	bl	800c98c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009b6a:	4620      	mov	r0, r4
 8009b6c:	bd38      	pop	{r3, r4, r5, pc}
 8009b6e:	bf00      	nop
 8009b70:	080237e0 	.word	0x080237e0

08009b74 <_ZN8touchgfx6SliderC1Ev>:
 8009b74:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8009b78:	4604      	mov	r4, r0
 8009b7a:	f7ff feaf 	bl	80098dc <_ZN8touchgfx8DrawableC1Ev>
 8009b7e:	4b28      	ldr	r3, [pc, #160]	@ (8009c20 <_ZN8touchgfx6SliderC1Ev+0xac>)
 8009b80:	2500      	movs	r5, #0
 8009b82:	ae02      	add	r6, sp, #8
 8009b84:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8009b88:	6023      	str	r3, [r4, #0]
 8009b8a:	f104 0934 	add.w	r9, r4, #52	@ 0x34
 8009b8e:	2364      	movs	r3, #100	@ 0x64
 8009b90:	f104 0a60 	add.w	sl, r4, #96	@ 0x60
 8009b94:	f826 7d04 	strh.w	r7, [r6, #-4]!
 8009b98:	4648      	mov	r0, r9
 8009b9a:	8663      	strh	r3, [r4, #50]	@ 0x32
 8009b9c:	4631      	mov	r1, r6
 8009b9e:	62a5      	str	r5, [r4, #40]	@ 0x28
 8009ba0:	f104 088c 	add.w	r8, r4, #140	@ 0x8c
 8009ba4:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
 8009ba8:	85e5      	strh	r5, [r4, #46]	@ 0x2e
 8009baa:	8625      	strh	r5, [r4, #48]	@ 0x30
 8009bac:	f7ff ffc8 	bl	8009b40 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8009bb0:	4631      	mov	r1, r6
 8009bb2:	4650      	mov	r0, sl
 8009bb4:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009bb8:	f7ff ffc2 	bl	8009b40 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8009bbc:	4631      	mov	r1, r6
 8009bbe:	f104 06b8 	add.w	r6, r4, #184	@ 0xb8
 8009bc2:	4640      	mov	r0, r8
 8009bc4:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009bc8:	f7ff ffba 	bl	8009b40 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8009bcc:	4630      	mov	r0, r6
 8009bce:	f7ff fe85 	bl	80098dc <_ZN8touchgfx8DrawableC1Ev>
 8009bd2:	4b14      	ldr	r3, [pc, #80]	@ (8009c24 <_ZN8touchgfx6SliderC1Ev+0xb0>)
 8009bd4:	4651      	mov	r1, sl
 8009bd6:	4630      	mov	r0, r6
 8009bd8:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 8009bdc:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8009be0:	f8c4 50e0 	str.w	r5, [r4, #224]	@ 0xe0
 8009be4:	e9c4 3539 	strd	r3, r5, [r4, #228]	@ 0xe4
 8009be8:	2301      	movs	r3, #1
 8009bea:	e9c4 553b 	strd	r5, r5, [r4, #236]	@ 0xec
 8009bee:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 8009bf2:	f7ff faed 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009bf6:	4649      	mov	r1, r9
 8009bf8:	4620      	mov	r0, r4
 8009bfa:	f7ff fae9 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009bfe:	4631      	mov	r1, r6
 8009c00:	4620      	mov	r0, r4
 8009c02:	f7ff fae5 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009c06:	4641      	mov	r1, r8
 8009c08:	4620      	mov	r0, r4
 8009c0a:	f7ff fae1 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009c0e:	4620      	mov	r0, r4
 8009c10:	f9b4 10e4 	ldrsh.w	r1, [r4, #228]	@ 0xe4
 8009c14:	f7ff fe87 	bl	8009926 <_ZN8touchgfx6Slider23updateIndicatorPositionEs>
 8009c18:	4620      	mov	r0, r4
 8009c1a:	b002      	add	sp, #8
 8009c1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009c20:	0802303c 	.word	0x0802303c
 8009c24:	08022fac 	.word	0x08022fac

08009c28 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>:
 8009c28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009c2c:	4604      	mov	r4, r0
 8009c2e:	f100 0634 	add.w	r6, r0, #52	@ 0x34
 8009c32:	4689      	mov	r9, r1
 8009c34:	461f      	mov	r7, r3
 8009c36:	f104 058c 	add.w	r5, r4, #140	@ 0x8c
 8009c3a:	4630      	mov	r0, r6
 8009c3c:	4690      	mov	r8, r2
 8009c3e:	f006 faa6 	bl	801018e <_ZNK8touchgfx8Drawable10invalidateEv>
 8009c42:	4628      	mov	r0, r5
 8009c44:	f006 faa3 	bl	801018e <_ZNK8touchgfx8Drawable10invalidateEv>
 8009c48:	4649      	mov	r1, r9
 8009c4a:	4630      	mov	r0, r6
 8009c4c:	f002 fe9e 	bl	800c98c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009c50:	4641      	mov	r1, r8
 8009c52:	f104 0060 	add.w	r0, r4, #96	@ 0x60
 8009c56:	f002 fe99 	bl	800c98c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009c5a:	4639      	mov	r1, r7
 8009c5c:	4628      	mov	r0, r5
 8009c5e:	f002 fe95 	bl	800c98c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009c62:	f9b4 206a 	ldrsh.w	r2, [r4, #106]	@ 0x6a
 8009c66:	f9b4 1068 	ldrsh.w	r1, [r4, #104]	@ 0x68
 8009c6a:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
 8009c6e:	f7ff fe4d 	bl	800990c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8009c72:	6823      	ldr	r3, [r4, #0]
 8009c74:	f9b4 102e 	ldrsh.w	r1, [r4, #46]	@ 0x2e
 8009c78:	4620      	mov	r0, r4
 8009c7a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8009c7e:	4798      	blx	r3
 8009c80:	4630      	mov	r0, r6
 8009c82:	f006 fa84 	bl	801018e <_ZNK8touchgfx8Drawable10invalidateEv>
 8009c86:	4628      	mov	r0, r5
 8009c88:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009c8c:	f006 ba7f 	b.w	801018e <_ZNK8touchgfx8Drawable10invalidateEv>

08009c90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8009c90:	6803      	ldr	r3, [r0, #0]
 8009c92:	b513      	push	{r0, r1, r4, lr}
 8009c94:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 8009c98:	2300      	movs	r3, #0
 8009c9a:	e9cd 3300 	strd	r3, r3, [sp]
 8009c9e:	466b      	mov	r3, sp
 8009ca0:	47a0      	blx	r4
 8009ca2:	b002      	add	sp, #8
 8009ca4:	bd10      	pop	{r4, pc}

08009ca6 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009ca6:	2301      	movs	r3, #1
 8009ca8:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8009cac:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8009cb0:	4770      	bx	lr

08009cb2 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8009cb2:	2301      	movs	r3, #1
 8009cb4:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8009cb8:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8009cbc:	4770      	bx	lr

08009cbe <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009cbe:	6843      	ldr	r3, [r0, #4]
 8009cc0:	2201      	movs	r2, #1
 8009cc2:	725a      	strb	r2, [r3, #9]
 8009cc4:	6840      	ldr	r0, [r0, #4]
 8009cc6:	6803      	ldr	r3, [r0, #0]
 8009cc8:	691b      	ldr	r3, [r3, #16]
 8009cca:	4718      	bx	r3

08009ccc <_ZN8touchgfx3HAL8flushDMAEv>:
 8009ccc:	6840      	ldr	r0, [r0, #4]
 8009cce:	6803      	ldr	r3, [r0, #0]
 8009cd0:	689b      	ldr	r3, [r3, #8]
 8009cd2:	4718      	bx	r3

08009cd4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8009cd4:	b530      	push	{r4, r5, lr}
 8009cd6:	b08b      	sub	sp, #44	@ 0x2c
 8009cd8:	6804      	ldr	r4, [r0, #0]
 8009cda:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8009cde:	9509      	str	r5, [sp, #36]	@ 0x24
 8009ce0:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8009ce4:	9508      	str	r5, [sp, #32]
 8009ce6:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8009cea:	9507      	str	r5, [sp, #28]
 8009cec:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 8009cf0:	9506      	str	r5, [sp, #24]
 8009cf2:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8009cf6:	9505      	str	r5, [sp, #20]
 8009cf8:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8009cfc:	9504      	str	r5, [sp, #16]
 8009cfe:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8009d02:	9503      	str	r5, [sp, #12]
 8009d04:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8009d08:	9502      	str	r5, [sp, #8]
 8009d0a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8009d0e:	e9cd 3500 	strd	r3, r5, [sp]
 8009d12:	4613      	mov	r3, r2
 8009d14:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 8009d16:	2200      	movs	r2, #0
 8009d18:	47a0      	blx	r4
 8009d1a:	b00b      	add	sp, #44	@ 0x2c
 8009d1c:	bd30      	pop	{r4, r5, pc}
	...

08009d20 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009d20:	4b04      	ldr	r3, [pc, #16]	@ (8009d34 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009d22:	781b      	ldrb	r3, [r3, #0]
 8009d24:	b123      	cbz	r3, 8009d30 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009d26:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 8009d2a:	f080 0001 	eor.w	r0, r0, #1
 8009d2e:	4770      	bx	lr
 8009d30:	2001      	movs	r0, #1
 8009d32:	4770      	bx	lr
 8009d34:	200169fe 	.word	0x200169fe

08009d38 <_ZN8touchgfx3HAL8endFrameEv>:
 8009d38:	b510      	push	{r4, lr}
 8009d3a:	4604      	mov	r4, r0
 8009d3c:	6840      	ldr	r0, [r0, #4]
 8009d3e:	6803      	ldr	r3, [r0, #0]
 8009d40:	689b      	ldr	r3, [r3, #8]
 8009d42:	4798      	blx	r3
 8009d44:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 8009d48:	b113      	cbz	r3, 8009d50 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009d4a:	2301      	movs	r3, #1
 8009d4c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8009d50:	bd10      	pop	{r4, pc}

08009d52 <_ZN8touchgfx3HAL10initializeEv>:
 8009d52:	b510      	push	{r4, lr}
 8009d54:	4604      	mov	r4, r0
 8009d56:	f7f7 fdcb 	bl	80018f0 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009d5a:	f7f7 fca9 	bl	80016b0 <_ZN8touchgfx4GPIO4initEv>
 8009d5e:	6860      	ldr	r0, [r4, #4]
 8009d60:	6803      	ldr	r3, [r0, #0]
 8009d62:	68db      	ldr	r3, [r3, #12]
 8009d64:	4798      	blx	r3
 8009d66:	68e0      	ldr	r0, [r4, #12]
 8009d68:	6803      	ldr	r3, [r0, #0]
 8009d6a:	689b      	ldr	r3, [r3, #8]
 8009d6c:	4798      	blx	r3
 8009d6e:	6823      	ldr	r3, [r4, #0]
 8009d70:	4620      	mov	r0, r4
 8009d72:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8009d74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009d78:	4718      	bx	r3

08009d7a <_ZN8touchgfx3HAL9taskEntryEv>:
 8009d7a:	b508      	push	{r3, lr}
 8009d7c:	6803      	ldr	r3, [r0, #0]
 8009d7e:	4604      	mov	r4, r0
 8009d80:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8009d84:	4798      	blx	r3
 8009d86:	6823      	ldr	r3, [r4, #0]
 8009d88:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8009d8a:	4620      	mov	r0, r4
 8009d8c:	4798      	blx	r3
 8009d8e:	f7f7 fdfb 	bl	8001988 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 8009d92:	6823      	ldr	r3, [r4, #0]
 8009d94:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8009d96:	e7f8      	b.n	8009d8a <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08009d98 <_ZN8touchgfx3HAL4tickEv>:
 8009d98:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009d9a:	6803      	ldr	r3, [r0, #0]
 8009d9c:	4604      	mov	r4, r0
 8009d9e:	4d5b      	ldr	r5, [pc, #364]	@ (8009f0c <_ZN8touchgfx3HAL4tickEv+0x174>)
 8009da0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8009da4:	4798      	blx	r3
 8009da6:	2800      	cmp	r0, #0
 8009da8:	f000 8095 	beq.w	8009ed6 <_ZN8touchgfx3HAL4tickEv+0x13e>
 8009dac:	2001      	movs	r0, #1
 8009dae:	2600      	movs	r6, #0
 8009db0:	f7f7 fbe4 	bl	800157c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009db4:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8009db8:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8009dbc:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8009dc0:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 8009dc4:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8009dc8:	b133      	cbz	r3, 8009dd8 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009dca:	6823      	ldr	r3, [r4, #0]
 8009dcc:	4620      	mov	r0, r4
 8009dce:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8009dd2:	4798      	blx	r3
 8009dd4:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8009dd8:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8009ddc:	2601      	movs	r6, #1
 8009dde:	6862      	ldr	r2, [r4, #4]
 8009de0:	f083 0301 	eor.w	r3, r3, #1
 8009de4:	702e      	strb	r6, [r5, #0]
 8009de6:	7253      	strb	r3, [r2, #9]
 8009de8:	f005 f958 	bl	800f09c <_ZN8touchgfx11Application11getInstanceEv>
 8009dec:	6803      	ldr	r3, [r0, #0]
 8009dee:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009df0:	4798      	blx	r3
 8009df2:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8009df6:	b90b      	cbnz	r3, 8009dfc <_ZN8touchgfx3HAL4tickEv+0x64>
 8009df8:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8009dfc:	f005 f94e 	bl	800f09c <_ZN8touchgfx11Application11getInstanceEv>
 8009e00:	6803      	ldr	r3, [r0, #0]
 8009e02:	695b      	ldr	r3, [r3, #20]
 8009e04:	4798      	blx	r3
 8009e06:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8009e08:	6803      	ldr	r3, [r0, #0]
 8009e0a:	691b      	ldr	r3, [r3, #16]
 8009e0c:	4798      	blx	r3
 8009e0e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8009e12:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8009e16:	3b01      	subs	r3, #1
 8009e18:	b2db      	uxtb	r3, r3
 8009e1a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8009e1e:	b10a      	cbz	r2, 8009e24 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8009e20:	2b00      	cmp	r3, #0
 8009e22:	d1eb      	bne.n	8009dfc <_ZN8touchgfx3HAL4tickEv+0x64>
 8009e24:	4a3a      	ldr	r2, [pc, #232]	@ (8009f10 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009e26:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8009e2a:	7813      	ldrb	r3, [r2, #0]
 8009e2c:	3301      	adds	r3, #1
 8009e2e:	b25b      	sxtb	r3, r3
 8009e30:	4299      	cmp	r1, r3
 8009e32:	7013      	strb	r3, [r2, #0]
 8009e34:	dc10      	bgt.n	8009e58 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009e36:	2300      	movs	r3, #0
 8009e38:	68e0      	ldr	r0, [r4, #12]
 8009e3a:	a902      	add	r1, sp, #8
 8009e3c:	7013      	strb	r3, [r2, #0]
 8009e3e:	aa03      	add	r2, sp, #12
 8009e40:	6803      	ldr	r3, [r0, #0]
 8009e42:	68db      	ldr	r3, [r3, #12]
 8009e44:	4798      	blx	r3
 8009e46:	6823      	ldr	r3, [r4, #0]
 8009e48:	2800      	cmp	r0, #0
 8009e4a:	d050      	beq.n	8009eee <_ZN8touchgfx3HAL4tickEv+0x156>
 8009e4c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8009e50:	4620      	mov	r0, r4
 8009e52:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009e56:	4798      	blx	r3
 8009e58:	2300      	movs	r3, #0
 8009e5a:	6960      	ldr	r0, [r4, #20]
 8009e5c:	f88d 3007 	strb.w	r3, [sp, #7]
 8009e60:	b158      	cbz	r0, 8009e7a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009e62:	6803      	ldr	r3, [r0, #0]
 8009e64:	f10d 0107 	add.w	r1, sp, #7
 8009e68:	68db      	ldr	r3, [r3, #12]
 8009e6a:	4798      	blx	r3
 8009e6c:	b128      	cbz	r0, 8009e7a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009e6e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8009e70:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009e74:	6803      	ldr	r3, [r0, #0]
 8009e76:	68db      	ldr	r3, [r3, #12]
 8009e78:	4798      	blx	r3
 8009e7a:	f104 001c 	add.w	r0, r4, #28
 8009e7e:	f015 fdbd 	bl	801f9fc <_ZN8touchgfx8Gestures4tickEv>
 8009e82:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 8009e86:	b30b      	cbz	r3, 8009ecc <_ZN8touchgfx3HAL4tickEv+0x134>
 8009e88:	6920      	ldr	r0, [r4, #16]
 8009e8a:	6803      	ldr	r3, [r0, #0]
 8009e8c:	691b      	ldr	r3, [r3, #16]
 8009e8e:	4798      	blx	r3
 8009e90:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8009e92:	4606      	mov	r6, r0
 8009e94:	b903      	cbnz	r3, 8009e98 <_ZN8touchgfx3HAL4tickEv+0x100>
 8009e96:	6760      	str	r0, [r4, #116]	@ 0x74
 8009e98:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8009e9a:	4a1e      	ldr	r2, [pc, #120]	@ (8009f14 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009e9c:	1af3      	subs	r3, r6, r3
 8009e9e:	4293      	cmp	r3, r2
 8009ea0:	d914      	bls.n	8009ecc <_ZN8touchgfx3HAL4tickEv+0x134>
 8009ea2:	6920      	ldr	r0, [r4, #16]
 8009ea4:	6803      	ldr	r3, [r0, #0]
 8009ea6:	699b      	ldr	r3, [r3, #24]
 8009ea8:	4798      	blx	r3
 8009eaa:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8009eac:	2264      	movs	r2, #100	@ 0x64
 8009eae:	1af3      	subs	r3, r6, r3
 8009eb0:	fbb3 f3f2 	udiv	r3, r3, r2
 8009eb4:	fbb0 f0f3 	udiv	r0, r0, r3
 8009eb8:	2800      	cmp	r0, #0
 8009eba:	dc1d      	bgt.n	8009ef8 <_ZN8touchgfx3HAL4tickEv+0x160>
 8009ebc:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 8009ec0:	6920      	ldr	r0, [r4, #16]
 8009ec2:	2100      	movs	r1, #0
 8009ec4:	6803      	ldr	r3, [r0, #0]
 8009ec6:	69db      	ldr	r3, [r3, #28]
 8009ec8:	4798      	blx	r3
 8009eca:	6766      	str	r6, [r4, #116]	@ 0x74
 8009ecc:	f005 f8e6 	bl	800f09c <_ZN8touchgfx11Application11getInstanceEv>
 8009ed0:	6803      	ldr	r3, [r0, #0]
 8009ed2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009ed4:	4798      	blx	r3
 8009ed6:	6823      	ldr	r3, [r4, #0]
 8009ed8:	4620      	mov	r0, r4
 8009eda:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8009ede:	4798      	blx	r3
 8009ee0:	2001      	movs	r0, #1
 8009ee2:	f7f7 fb7b 	bl	80015dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009ee6:	2300      	movs	r3, #0
 8009ee8:	702b      	strb	r3, [r5, #0]
 8009eea:	b004      	add	sp, #16
 8009eec:	bd70      	pop	{r4, r5, r6, pc}
 8009eee:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8009ef2:	4620      	mov	r0, r4
 8009ef4:	4798      	blx	r3
 8009ef6:	e7af      	b.n	8009e58 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009ef8:	2863      	cmp	r0, #99	@ 0x63
 8009efa:	bfcb      	itete	gt
 8009efc:	2300      	movgt	r3, #0
 8009efe:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 8009f02:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 8009f06:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 8009f0a:	e7d9      	b.n	8009ec0 <_ZN8touchgfx3HAL4tickEv+0x128>
 8009f0c:	20016a04 	.word	0x20016a04
 8009f10:	20016a05 	.word	0x20016a05
 8009f14:	05f5e100 	.word	0x05f5e100

08009f18 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009f18:	b510      	push	{r4, lr}
 8009f1a:	4604      	mov	r4, r0
 8009f1c:	f7f7 fd18 	bl	8001950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8009f20:	2200      	movs	r2, #0
 8009f22:	6863      	ldr	r3, [r4, #4]
 8009f24:	729a      	strb	r2, [r3, #10]
 8009f26:	bd10      	pop	{r4, pc}

08009f28 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009f28:	65c1      	str	r1, [r0, #92]	@ 0x5c
 8009f2a:	301c      	adds	r0, #28
 8009f2c:	f015 bd64 	b.w	801f9f8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009f30 <_ZN8touchgfx3HAL5touchEll>:
 8009f30:	b530      	push	{r4, r5, lr}
 8009f32:	b087      	sub	sp, #28
 8009f34:	4604      	mov	r4, r0
 8009f36:	a804      	add	r0, sp, #16
 8009f38:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009f3c:	f004 fedc 	bl	800ecf8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009f40:	9b04      	ldr	r3, [sp, #16]
 8009f42:	a906      	add	r1, sp, #24
 8009f44:	a803      	add	r0, sp, #12
 8009f46:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009f4a:	9b05      	ldr	r3, [sp, #20]
 8009f4c:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009f50:	f004 ff24 	bl	800ed9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009f54:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 8009f58:	f104 001c 	add.w	r0, r4, #28
 8009f5c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009f60:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009f64:	b189      	cbz	r1, 8009f8a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009f66:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 8009f6a:	9300      	str	r3, [sp, #0]
 8009f6c:	4613      	mov	r3, r2
 8009f6e:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 8009f72:	462a      	mov	r2, r5
 8009f74:	f015 fd50 	bl	801fa18 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009f78:	b128      	cbz	r0, 8009f86 <_ZN8touchgfx3HAL5touchEll+0x56>
 8009f7a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009f7e:	6623      	str	r3, [r4, #96]	@ 0x60
 8009f80:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009f84:	6663      	str	r3, [r4, #100]	@ 0x64
 8009f86:	b007      	add	sp, #28
 8009f88:	bd30      	pop	{r4, r5, pc}
 8009f8a:	f015 fd85 	bl	801fa98 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009f8e:	2301      	movs	r3, #1
 8009f90:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8009f94:	e7f1      	b.n	8009f7a <_ZN8touchgfx3HAL5touchEll+0x4a>

08009f96 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009f96:	b510      	push	{r4, lr}
 8009f98:	2b00      	cmp	r3, #0
 8009f9a:	d046      	beq.n	800a02a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009f9c:	ea81 0002 	eor.w	r0, r1, r2
 8009fa0:	07c4      	lsls	r4, r0, #31
 8009fa2:	d508      	bpl.n	8009fb6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009fa4:	440b      	add	r3, r1
 8009fa6:	3a01      	subs	r2, #1
 8009fa8:	428b      	cmp	r3, r1
 8009faa:	d93e      	bls.n	800a02a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009fac:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009fb0:	f801 0b01 	strb.w	r0, [r1], #1
 8009fb4:	e7f8      	b.n	8009fa8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009fb6:	07d0      	lsls	r0, r2, #31
 8009fb8:	bf42      	ittt	mi
 8009fba:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009fbe:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009fc2:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009fc6:	2b01      	cmp	r3, #1
 8009fc8:	d911      	bls.n	8009fee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009fca:	ea81 0402 	eor.w	r4, r1, r2
 8009fce:	4610      	mov	r0, r2
 8009fd0:	07a4      	lsls	r4, r4, #30
 8009fd2:	d022      	beq.n	800a01a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009fd4:	f023 0401 	bic.w	r4, r3, #1
 8009fd8:	440c      	add	r4, r1
 8009fda:	428c      	cmp	r4, r1
 8009fdc:	4602      	mov	r2, r0
 8009fde:	d904      	bls.n	8009fea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8009fe0:	8812      	ldrh	r2, [r2, #0]
 8009fe2:	3002      	adds	r0, #2
 8009fe4:	f821 2b02 	strh.w	r2, [r1], #2
 8009fe8:	e7f7      	b.n	8009fda <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8009fea:	f003 0301 	and.w	r3, r3, #1
 8009fee:	f023 0003 	bic.w	r0, r3, #3
 8009ff2:	4408      	add	r0, r1
 8009ff4:	4288      	cmp	r0, r1
 8009ff6:	4614      	mov	r4, r2
 8009ff8:	d904      	bls.n	800a004 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8009ffa:	6824      	ldr	r4, [r4, #0]
 8009ffc:	3204      	adds	r2, #4
 8009ffe:	f841 4b04 	str.w	r4, [r1], #4
 800a002:	e7f7      	b.n	8009ff4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800a004:	f003 0303 	and.w	r3, r3, #3
 800a008:	3a01      	subs	r2, #1
 800a00a:	440b      	add	r3, r1
 800a00c:	428b      	cmp	r3, r1
 800a00e:	d90c      	bls.n	800a02a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a010:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a014:	f801 0b01 	strb.w	r0, [r1], #1
 800a018:	e7f8      	b.n	800a00c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800a01a:	0790      	lsls	r0, r2, #30
 800a01c:	d0e7      	beq.n	8009fee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a01e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a022:	3b02      	subs	r3, #2
 800a024:	f821 0b02 	strh.w	r0, [r1], #2
 800a028:	e7e1      	b.n	8009fee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a02a:	2001      	movs	r0, #1
 800a02c:	bd10      	pop	{r4, pc}

0800a02e <_ZN8touchgfx3HAL7noTouchEv>:
 800a02e:	b510      	push	{r4, lr}
 800a030:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800a034:	4604      	mov	r4, r0
 800a036:	b153      	cbz	r3, 800a04e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a038:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800a03c:	2101      	movs	r1, #1
 800a03e:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800a042:	301c      	adds	r0, #28
 800a044:	f015 fd28 	bl	801fa98 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a048:	2300      	movs	r3, #0
 800a04a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800a04e:	bd10      	pop	{r4, pc}

0800a050 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a050:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a054:	b085      	sub	sp, #20
 800a056:	4604      	mov	r4, r0
 800a058:	2000      	movs	r0, #0
 800a05a:	4699      	mov	r9, r3
 800a05c:	ad04      	add	r5, sp, #16
 800a05e:	460f      	mov	r7, r1
 800a060:	4690      	mov	r8, r2
 800a062:	f845 0d04 	str.w	r0, [r5, #-4]!
 800a066:	69a0      	ldr	r0, [r4, #24]
 800a068:	6806      	ldr	r6, [r0, #0]
 800a06a:	9501      	str	r5, [sp, #4]
 800a06c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800a070:	9500      	str	r5, [sp, #0]
 800a072:	6835      	ldr	r5, [r6, #0]
 800a074:	47a8      	blx	r5
 800a076:	4d10      	ldr	r5, [pc, #64]	@ (800a0b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800a078:	4606      	mov	r6, r0
 800a07a:	f8a5 9000 	strh.w	r9, [r5]
 800a07e:	f7f8 f9fd 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800a082:	6803      	ldr	r3, [r0, #0]
 800a084:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a086:	4798      	blx	r3
 800a088:	b128      	cbz	r0, 800a096 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800a08a:	2801      	cmp	r0, #1
 800a08c:	d00b      	beq.n	800a0a6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800a08e:	4630      	mov	r0, r6
 800a090:	b005      	add	sp, #20
 800a092:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a096:	882b      	ldrh	r3, [r5, #0]
 800a098:	fb08 7203 	mla	r2, r8, r3, r7
 800a09c:	9b03      	ldr	r3, [sp, #12]
 800a09e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a0a2:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800a0a4:	e7f3      	b.n	800a08e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a0a6:	882a      	ldrh	r2, [r5, #0]
 800a0a8:	9b03      	ldr	r3, [sp, #12]
 800a0aa:	fb08 7202 	mla	r2, r8, r2, r7
 800a0ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a0b2:	1a9a      	subs	r2, r3, r2
 800a0b4:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800a0b6:	e7ea      	b.n	800a08e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a0b8:	200169fa 	.word	0x200169fa

0800a0bc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800a0bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a0be:	b08b      	sub	sp, #44	@ 0x2c
 800a0c0:	4617      	mov	r7, r2
 800a0c2:	4604      	mov	r4, r0
 800a0c4:	460e      	mov	r6, r1
 800a0c6:	461d      	mov	r5, r3
 800a0c8:	f7f8 f9d8 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800a0cc:	6803      	ldr	r3, [r0, #0]
 800a0ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a0d0:	4798      	blx	r3
 800a0d2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800a0d6:	9007      	str	r0, [sp, #28]
 800a0d8:	4631      	mov	r1, r6
 800a0da:	6822      	ldr	r2, [r4, #0]
 800a0dc:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a0e0:	4b0c      	ldr	r3, [pc, #48]	@ (800a114 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800a0e2:	4620      	mov	r0, r4
 800a0e4:	881b      	ldrh	r3, [r3, #0]
 800a0e6:	9306      	str	r3, [sp, #24]
 800a0e8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800a0ec:	9305      	str	r3, [sp, #20]
 800a0ee:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800a0f2:	9304      	str	r3, [sp, #16]
 800a0f4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a0f8:	9303      	str	r3, [sp, #12]
 800a0fa:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a0fe:	9302      	str	r3, [sp, #8]
 800a100:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a104:	e9cd 5300 	strd	r5, r3, [sp]
 800a108:	463b      	mov	r3, r7
 800a10a:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800a10c:	2200      	movs	r2, #0
 800a10e:	47a8      	blx	r5
 800a110:	b00b      	add	sp, #44	@ 0x2c
 800a112:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a114:	200169fa 	.word	0x200169fa

0800a118 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800a118:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a11c:	4698      	mov	r8, r3
 800a11e:	6803      	ldr	r3, [r0, #0]
 800a120:	b08b      	sub	sp, #44	@ 0x2c
 800a122:	4617      	mov	r7, r2
 800a124:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800a126:	460e      	mov	r6, r1
 800a128:	4b13      	ldr	r3, [pc, #76]	@ (800a178 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800a12a:	4604      	mov	r4, r0
 800a12c:	f8b3 9000 	ldrh.w	r9, [r3]
 800a130:	f7f8 f9a4 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800a134:	6803      	ldr	r3, [r0, #0]
 800a136:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a138:	4798      	blx	r3
 800a13a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800a13e:	2200      	movs	r2, #0
 800a140:	4631      	mov	r1, r6
 800a142:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a146:	2302      	movs	r3, #2
 800a148:	4620      	mov	r0, r4
 800a14a:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800a14e:	2301      	movs	r3, #1
 800a150:	9305      	str	r3, [sp, #20]
 800a152:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800a156:	9304      	str	r3, [sp, #16]
 800a158:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800a15c:	9303      	str	r3, [sp, #12]
 800a15e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a162:	9302      	str	r3, [sp, #8]
 800a164:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a168:	e9cd 8300 	strd	r8, r3, [sp]
 800a16c:	463b      	mov	r3, r7
 800a16e:	47a8      	blx	r5
 800a170:	b00b      	add	sp, #44	@ 0x2c
 800a172:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a176:	bf00      	nop
 800a178:	200169fa 	.word	0x200169fa

0800a17c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800a17c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a180:	4698      	mov	r8, r3
 800a182:	6803      	ldr	r3, [r0, #0]
 800a184:	b087      	sub	sp, #28
 800a186:	460e      	mov	r6, r1
 800a188:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800a18a:	4617      	mov	r7, r2
 800a18c:	4b0f      	ldr	r3, [pc, #60]	@ (800a1cc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800a18e:	4604      	mov	r4, r0
 800a190:	f8b3 9000 	ldrh.w	r9, [r3]
 800a194:	f7f8 f972 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800a198:	6803      	ldr	r3, [r0, #0]
 800a19a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a19c:	4798      	blx	r3
 800a19e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800a1a2:	463a      	mov	r2, r7
 800a1a4:	4631      	mov	r1, r6
 800a1a6:	f8cd 900c 	str.w	r9, [sp, #12]
 800a1aa:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800a1ae:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800a1b2:	4620      	mov	r0, r4
 800a1b4:	9302      	str	r3, [sp, #8]
 800a1b6:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800a1ba:	9301      	str	r3, [sp, #4]
 800a1bc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800a1c0:	9300      	str	r3, [sp, #0]
 800a1c2:	4643      	mov	r3, r8
 800a1c4:	47a8      	blx	r5
 800a1c6:	b007      	add	sp, #28
 800a1c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a1cc:	200169fa 	.word	0x200169fa

0800a1d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800a1d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1d4:	4604      	mov	r4, r0
 800a1d6:	b08f      	sub	sp, #60	@ 0x3c
 800a1d8:	4610      	mov	r0, r2
 800a1da:	460d      	mov	r5, r1
 800a1dc:	4691      	mov	r9, r2
 800a1de:	461e      	mov	r6, r3
 800a1e0:	f007 ffdc 	bl	801219c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a1e4:	2800      	cmp	r0, #0
 800a1e6:	f000 809d 	beq.w	800a324 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800a1ea:	6823      	ldr	r3, [r4, #0]
 800a1ec:	4620      	mov	r0, r4
 800a1ee:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800a388 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800a1f2:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800a1f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a1f8:	4798      	blx	r3
 800a1fa:	6823      	ldr	r3, [r4, #0]
 800a1fc:	4620      	mov	r0, r4
 800a1fe:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800a38c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800a202:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a204:	4798      	blx	r3
 800a206:	f8bb 3000 	ldrh.w	r3, [fp]
 800a20a:	4f5c      	ldr	r7, [pc, #368]	@ (800a37c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a20c:	9301      	str	r3, [sp, #4]
 800a20e:	f8ba 3000 	ldrh.w	r3, [sl]
 800a212:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800a216:	4640      	mov	r0, r8
 800a218:	9302      	str	r3, [sp, #8]
 800a21a:	883b      	ldrh	r3, [r7, #0]
 800a21c:	9303      	str	r3, [sp, #12]
 800a21e:	4b58      	ldr	r3, [pc, #352]	@ (800a380 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a220:	881a      	ldrh	r2, [r3, #0]
 800a222:	9305      	str	r3, [sp, #20]
 800a224:	9204      	str	r2, [sp, #16]
 800a226:	f008 f84d 	bl	80122c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a22a:	8038      	strh	r0, [r7, #0]
 800a22c:	4640      	mov	r0, r8
 800a22e:	f008 f87d 	bl	801232c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a232:	9b05      	ldr	r3, [sp, #20]
 800a234:	b280      	uxth	r0, r0
 800a236:	8018      	strh	r0, [r3, #0]
 800a238:	4b52      	ldr	r3, [pc, #328]	@ (800a384 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800a23a:	781b      	ldrb	r3, [r3, #0]
 800a23c:	2b00      	cmp	r3, #0
 800a23e:	d174      	bne.n	800a32a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800a240:	883b      	ldrh	r3, [r7, #0]
 800a242:	f8aa 0000 	strh.w	r0, [sl]
 800a246:	f8ab 3000 	strh.w	r3, [fp]
 800a24a:	4648      	mov	r0, r9
 800a24c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800a250:	f007 ffa4 	bl	801219c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a254:	2200      	movs	r2, #0
 800a256:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800a25a:	4611      	mov	r1, r2
 800a25c:	4628      	mov	r0, r5
 800a25e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800a262:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800a266:	f7f8 fe39 	bl	8002edc <_ZN8touchgfx8Drawable5setXYEss>
 800a26a:	2301      	movs	r3, #1
 800a26c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800a270:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800a274:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a278:	2b00      	cmp	r3, #0
 800a27a:	dd5c      	ble.n	800a336 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800a27c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a280:	2b00      	cmp	r3, #0
 800a282:	dd58      	ble.n	800a336 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800a284:	462a      	mov	r2, r5
 800a286:	ab0a      	add	r3, sp, #40	@ 0x28
 800a288:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a28c:	6851      	ldr	r1, [r2, #4]
 800a28e:	c303      	stmia	r3!, {r0, r1}
 800a290:	4631      	mov	r1, r6
 800a292:	a80a      	add	r0, sp, #40	@ 0x28
 800a294:	f7ff f920 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 800a298:	4b38      	ldr	r3, [pc, #224]	@ (800a37c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a29a:	2100      	movs	r1, #0
 800a29c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a2a0:	4b37      	ldr	r3, [pc, #220]	@ (800a380 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a2a2:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800a2a6:	aa0a      	add	r2, sp, #40	@ 0x28
 800a2a8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a2ac:	910c      	str	r1, [sp, #48]	@ 0x30
 800a2ae:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800a2b2:	ab08      	add	r3, sp, #32
 800a2b4:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a2b8:	e883 0003 	stmia.w	r3, {r0, r1}
 800a2bc:	4618      	mov	r0, r3
 800a2be:	a90c      	add	r1, sp, #48	@ 0x30
 800a2c0:	f7ff f90a 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 800a2c4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800a2c6:	2b00      	cmp	r3, #0
 800a2c8:	d13c      	bne.n	800a344 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800a2ca:	2000      	movs	r0, #0
 800a2cc:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800a2d0:	2600      	movs	r6, #0
 800a2d2:	696b      	ldr	r3, [r5, #20]
 800a2d4:	a908      	add	r1, sp, #32
 800a2d6:	682a      	ldr	r2, [r5, #0]
 800a2d8:	4628      	mov	r0, r5
 800a2da:	9305      	str	r3, [sp, #20]
 800a2dc:	616e      	str	r6, [r5, #20]
 800a2de:	6892      	ldr	r2, [r2, #8]
 800a2e0:	4790      	blx	r2
 800a2e2:	9b05      	ldr	r3, [sp, #20]
 800a2e4:	4652      	mov	r2, sl
 800a2e6:	4649      	mov	r1, r9
 800a2e8:	616b      	str	r3, [r5, #20]
 800a2ea:	4628      	mov	r0, r5
 800a2ec:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800a2f0:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800a2f4:	f7f8 fdf2 	bl	8002edc <_ZN8touchgfx8Drawable5setXYEss>
 800a2f8:	9a01      	ldr	r2, [sp, #4]
 800a2fa:	4b23      	ldr	r3, [pc, #140]	@ (800a388 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800a2fc:	4620      	mov	r0, r4
 800a2fe:	801a      	strh	r2, [r3, #0]
 800a300:	9a02      	ldr	r2, [sp, #8]
 800a302:	4b22      	ldr	r3, [pc, #136]	@ (800a38c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800a304:	801a      	strh	r2, [r3, #0]
 800a306:	9a03      	ldr	r2, [sp, #12]
 800a308:	4b1c      	ldr	r3, [pc, #112]	@ (800a37c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a30a:	801a      	strh	r2, [r3, #0]
 800a30c:	4b1c      	ldr	r3, [pc, #112]	@ (800a380 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a30e:	9a04      	ldr	r2, [sp, #16]
 800a310:	801a      	strh	r2, [r3, #0]
 800a312:	6823      	ldr	r3, [r4, #0]
 800a314:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800a318:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a31a:	4798      	blx	r3
 800a31c:	6823      	ldr	r3, [r4, #0]
 800a31e:	4620      	mov	r0, r4
 800a320:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a322:	4798      	blx	r3
 800a324:	b00f      	add	sp, #60	@ 0x3c
 800a326:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a32a:	883b      	ldrh	r3, [r7, #0]
 800a32c:	f8ab 0000 	strh.w	r0, [fp]
 800a330:	f8aa 3000 	strh.w	r3, [sl]
 800a334:	e789      	b.n	800a24a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800a336:	462a      	mov	r2, r5
 800a338:	ab0a      	add	r3, sp, #40	@ 0x28
 800a33a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a33e:	6851      	ldr	r1, [r2, #4]
 800a340:	c303      	stmia	r3!, {r0, r1}
 800a342:	e7a9      	b.n	800a298 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800a344:	a807      	add	r0, sp, #28
 800a346:	f008 f92d 	bl	80125a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a34a:	4606      	mov	r6, r0
 800a34c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800a34e:	6803      	ldr	r3, [r0, #0]
 800a350:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a352:	4798      	blx	r3
 800a354:	4286      	cmp	r6, r0
 800a356:	d1b8      	bne.n	800a2ca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800a358:	f7f8 f890 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800a35c:	6803      	ldr	r3, [r0, #0]
 800a35e:	4606      	mov	r6, r0
 800a360:	a807      	add	r0, sp, #28
 800a362:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a364:	9305      	str	r3, [sp, #20]
 800a366:	f008 f91d 	bl	80125a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a36a:	9b05      	ldr	r3, [sp, #20]
 800a36c:	4601      	mov	r1, r0
 800a36e:	4630      	mov	r0, r6
 800a370:	4798      	blx	r3
 800a372:	f080 0001 	eor.w	r0, r0, #1
 800a376:	b2c0      	uxtb	r0, r0
 800a378:	e7a8      	b.n	800a2cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800a37a:	bf00      	nop
 800a37c:	200169f4 	.word	0x200169f4
 800a380:	200169f6 	.word	0x200169f6
 800a384:	200169f8 	.word	0x200169f8
 800a388:	200169fa 	.word	0x200169fa
 800a38c:	200169fc 	.word	0x200169fc

0800a390 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800a390:	4b07      	ldr	r3, [pc, #28]	@ (800a3b0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800a392:	b510      	push	{r4, lr}
 800a394:	781b      	ldrb	r3, [r3, #0]
 800a396:	4604      	mov	r4, r0
 800a398:	b13b      	cbz	r3, 800a3aa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a39a:	6803      	ldr	r3, [r0, #0]
 800a39c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a39e:	4798      	blx	r3
 800a3a0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a3a2:	4283      	cmp	r3, r0
 800a3a4:	d101      	bne.n	800a3aa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a3a6:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800a3a8:	bd10      	pop	{r4, pc}
 800a3aa:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800a3ac:	e7fc      	b.n	800a3a8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800a3ae:	bf00      	nop
 800a3b0:	200169fe 	.word	0x200169fe

0800a3b4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800a3b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3b8:	461d      	mov	r5, r3
 800a3ba:	b08a      	sub	sp, #40	@ 0x28
 800a3bc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800a3c0:	4690      	mov	r8, r2
 800a3c2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800a3c6:	2400      	movs	r4, #0
 800a3c8:	4607      	mov	r7, r0
 800a3ca:	fb06 8505 	mla	r5, r6, r5, r8
 800a3ce:	9404      	str	r4, [sp, #16]
 800a3d0:	f88d 4020 	strb.w	r4, [sp, #32]
 800a3d4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a3d8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a3dc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a3e0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a3e4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a3e8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a3ec:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a3f0:	f7ff ffce 	bl	800a390 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a3f4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a3f8:	6878      	ldr	r0, [r7, #4]
 800a3fa:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a3fe:	a901      	add	r1, sp, #4
 800a400:	9505      	str	r5, [sp, #20]
 800a402:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a406:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800a40a:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800a40e:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800a412:	6803      	ldr	r3, [r0, #0]
 800a414:	685b      	ldr	r3, [r3, #4]
 800a416:	4798      	blx	r3
 800a418:	b00a      	add	sp, #40	@ 0x28
 800a41a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a41e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800a41e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a422:	b08b      	sub	sp, #44	@ 0x2c
 800a424:	2400      	movs	r4, #0
 800a426:	4691      	mov	r9, r2
 800a428:	461d      	mov	r5, r3
 800a42a:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800a42e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800a432:	4688      	mov	r8, r1
 800a434:	4607      	mov	r7, r0
 800a436:	9404      	str	r4, [sp, #16]
 800a438:	fb06 9505 	mla	r5, r6, r5, r9
 800a43c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a440:	f7ff ffa6 	bl	800a390 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a444:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a448:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a44c:	6878      	ldr	r0, [r7, #4]
 800a44e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a452:	a901      	add	r1, sp, #4
 800a454:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a458:	9505      	str	r5, [sp, #20]
 800a45a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a45e:	f8ad 401c 	strh.w	r4, [sp, #28]
 800a462:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a466:	f8cd 8010 	str.w	r8, [sp, #16]
 800a46a:	f8ad 4020 	strh.w	r4, [sp, #32]
 800a46e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a472:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800a476:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800a47a:	6803      	ldr	r3, [r0, #0]
 800a47c:	685b      	ldr	r3, [r3, #4]
 800a47e:	4798      	blx	r3
 800a480:	b00b      	add	sp, #44	@ 0x2c
 800a482:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800a488 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800a488:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a48c:	b08a      	sub	sp, #40	@ 0x28
 800a48e:	4698      	mov	r8, r3
 800a490:	2300      	movs	r3, #0
 800a492:	4606      	mov	r6, r0
 800a494:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800a498:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800a49c:	2d0b      	cmp	r5, #11
 800a49e:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800a4a2:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800a4a6:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800a4aa:	9304      	str	r3, [sp, #16]
 800a4ac:	d137      	bne.n	800a51e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800a4ae:	2380      	movs	r3, #128	@ 0x80
 800a4b0:	f88d 0020 	strb.w	r0, [sp, #32]
 800a4b4:	4630      	mov	r0, r6
 800a4b6:	9203      	str	r2, [sp, #12]
 800a4b8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a4bc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a4c0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a4c4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a4c8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a4cc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a4d0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a4d4:	f7ff ff5c 	bl	800a390 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a4d8:	2c0b      	cmp	r4, #11
 800a4da:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800a4de:	f8ad 701e 	strh.w	r7, [sp, #30]
 800a4e2:	bf94      	ite	ls
 800a4e4:	4b19      	ldrls	r3, [pc, #100]	@ (800a54c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800a4e6:	2100      	movhi	r1, #0
 800a4e8:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800a4ec:	bf98      	it	ls
 800a4ee:	5d19      	ldrbls	r1, [r3, r4]
 800a4f0:	fb02 8307 	mla	r3, r2, r7, r8
 800a4f4:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a4f8:	10c9      	asrs	r1, r1, #3
 800a4fa:	fb01 0003 	mla	r0, r1, r3, r0
 800a4fe:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800a502:	a901      	add	r1, sp, #4
 800a504:	9005      	str	r0, [sp, #20]
 800a506:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800a50a:	2300      	movs	r3, #0
 800a50c:	6870      	ldr	r0, [r6, #4]
 800a50e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800a512:	6803      	ldr	r3, [r0, #0]
 800a514:	685b      	ldr	r3, [r3, #4]
 800a516:	4798      	blx	r3
 800a518:	b00a      	add	sp, #40	@ 0x28
 800a51a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a51e:	2d02      	cmp	r5, #2
 800a520:	d109      	bne.n	800a536 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800a522:	28ff      	cmp	r0, #255	@ 0xff
 800a524:	d105      	bne.n	800a532 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800a526:	f1bc 0f00 	cmp.w	ip, #0
 800a52a:	bf14      	ite	ne
 800a52c:	2340      	movne	r3, #64	@ 0x40
 800a52e:	2320      	moveq	r3, #32
 800a530:	e7be      	b.n	800a4b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a532:	2340      	movs	r3, #64	@ 0x40
 800a534:	e7bc      	b.n	800a4b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a536:	28ff      	cmp	r0, #255	@ 0xff
 800a538:	d105      	bne.n	800a546 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800a53a:	f1bc 0f00 	cmp.w	ip, #0
 800a53e:	bf14      	ite	ne
 800a540:	2304      	movne	r3, #4
 800a542:	2301      	moveq	r3, #1
 800a544:	e7b4      	b.n	800a4b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a546:	2304      	movs	r3, #4
 800a548:	e7b2      	b.n	800a4b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a54a:	bf00      	nop
 800a54c:	08023100 	.word	0x08023100

0800a550 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800a550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a554:	b08b      	sub	sp, #44	@ 0x2c
 800a556:	461d      	mov	r5, r3
 800a558:	2400      	movs	r4, #0
 800a55a:	4688      	mov	r8, r1
 800a55c:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800a560:	4693      	mov	fp, r2
 800a562:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800a566:	4607      	mov	r7, r0
 800a568:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800a56c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800a570:	9404      	str	r4, [sp, #16]
 800a572:	bf14      	ite	ne
 800a574:	2308      	movne	r3, #8
 800a576:	2302      	moveq	r3, #2
 800a578:	fb05 b50a 	mla	r5, r5, sl, fp
 800a57c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a580:	f7ff ff06 	bl	800a390 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a584:	2e0b      	cmp	r6, #11
 800a586:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800a58a:	a901      	add	r1, sp, #4
 800a58c:	bf98      	it	ls
 800a58e:	4b13      	ldrls	r3, [pc, #76]	@ (800a5dc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800a590:	f8ad a01e 	strh.w	sl, [sp, #30]
 800a594:	bf98      	it	ls
 800a596:	5d9c      	ldrbls	r4, [r3, r6]
 800a598:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800a59c:	10e4      	asrs	r4, r4, #3
 800a59e:	f8cd 8010 	str.w	r8, [sp, #16]
 800a5a2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a5a6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800a5aa:	fb04 0405 	mla	r4, r4, r5, r0
 800a5ae:	6878      	ldr	r0, [r7, #4]
 800a5b0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a5b4:	2300      	movs	r3, #0
 800a5b6:	9405      	str	r4, [sp, #20]
 800a5b8:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a5bc:	f88d 9020 	strb.w	r9, [sp, #32]
 800a5c0:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800a5c4:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800a5c8:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800a5cc:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800a5d0:	6803      	ldr	r3, [r0, #0]
 800a5d2:	685b      	ldr	r3, [r3, #4]
 800a5d4:	4798      	blx	r3
 800a5d6:	b00b      	add	sp, #44	@ 0x2c
 800a5d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a5dc:	08023100 	.word	0x08023100

0800a5e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a5e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a5e4:	461e      	mov	r6, r3
 800a5e6:	4b0a      	ldr	r3, [pc, #40]	@ (800a610 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800a5e8:	460f      	mov	r7, r1
 800a5ea:	4690      	mov	r8, r2
 800a5ec:	881d      	ldrh	r5, [r3, #0]
 800a5ee:	f7f7 ff45 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800a5f2:	6803      	ldr	r3, [r0, #0]
 800a5f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a5f6:	4798      	blx	r3
 800a5f8:	280b      	cmp	r0, #11
 800a5fa:	bf96      	itet	ls
 800a5fc:	4b05      	ldrls	r3, [pc, #20]	@ (800a614 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a5fe:	2400      	movhi	r4, #0
 800a600:	5c1c      	ldrbls	r4, [r3, r0]
 800a602:	fb08 7005 	mla	r0, r8, r5, r7
 800a606:	10e4      	asrs	r4, r4, #3
 800a608:	fb04 6000 	mla	r0, r4, r0, r6
 800a60c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a610:	200169fa 	.word	0x200169fa
 800a614:	08023100 	.word	0x08023100

0800a618 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800a618:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a61a:	b08b      	sub	sp, #44	@ 0x2c
 800a61c:	461f      	mov	r7, r3
 800a61e:	4604      	mov	r4, r0
 800a620:	4616      	mov	r6, r2
 800a622:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800a626:	2500      	movs	r5, #0
 800a628:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a62c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a630:	9504      	str	r5, [sp, #16]
 800a632:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a636:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a63a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a63e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a642:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a646:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800a64a:	f88d 3020 	strb.w	r3, [sp, #32]
 800a64e:	f7ff fe9f 	bl	800a390 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a652:	463a      	mov	r2, r7
 800a654:	4631      	mov	r1, r6
 800a656:	4603      	mov	r3, r0
 800a658:	4620      	mov	r0, r4
 800a65a:	f7ff ffc1 	bl	800a5e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a65e:	4b0e      	ldr	r3, [pc, #56]	@ (800a698 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800a660:	9005      	str	r0, [sp, #20]
 800a662:	881b      	ldrh	r3, [r3, #0]
 800a664:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a668:	f7f7 ff08 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800a66c:	6803      	ldr	r3, [r0, #0]
 800a66e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a670:	4798      	blx	r3
 800a672:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800a674:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800a678:	a901      	add	r1, sp, #4
 800a67a:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800a67e:	9304      	str	r3, [sp, #16]
 800a680:	6860      	ldr	r0, [r4, #4]
 800a682:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800a686:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800a68a:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800a68e:	6803      	ldr	r3, [r0, #0]
 800a690:	685b      	ldr	r3, [r3, #4]
 800a692:	4798      	blx	r3
 800a694:	b00b      	add	sp, #44	@ 0x2c
 800a696:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a698:	200169fa 	.word	0x200169fa

0800a69c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a69c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a69e:	b08d      	sub	sp, #52	@ 0x34
 800a6a0:	2501      	movs	r5, #1
 800a6a2:	4604      	mov	r4, r0
 800a6a4:	466b      	mov	r3, sp
 800a6a6:	9503      	str	r5, [sp, #12]
 800a6a8:	e883 0006 	stmia.w	r3, {r1, r2}
 800a6ac:	2300      	movs	r3, #0
 800a6ae:	f8bd 6000 	ldrh.w	r6, [sp]
 800a6b2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a6b6:	9306      	str	r3, [sp, #24]
 800a6b8:	6803      	ldr	r3, [r0, #0]
 800a6ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a6bc:	4798      	blx	r3
 800a6be:	463a      	mov	r2, r7
 800a6c0:	4631      	mov	r1, r6
 800a6c2:	4603      	mov	r3, r0
 800a6c4:	4620      	mov	r0, r4
 800a6c6:	f7ff ff8b 	bl	800a5e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a6ca:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800a6cc:	9004      	str	r0, [sp, #16]
 800a6ce:	9307      	str	r3, [sp, #28]
 800a6d0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a6d4:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a6d8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a6dc:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800a6e0:	4b0e      	ldr	r3, [pc, #56]	@ (800a71c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800a6e2:	881b      	ldrh	r3, [r3, #0]
 800a6e4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800a6e8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800a6ec:	f7f7 fec6 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800a6f0:	6803      	ldr	r3, [r0, #0]
 800a6f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a6f4:	4798      	blx	r3
 800a6f6:	23ff      	movs	r3, #255	@ 0xff
 800a6f8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800a6fc:	a903      	add	r1, sp, #12
 800a6fe:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800a702:	6860      	ldr	r0, [r4, #4]
 800a704:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800a708:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800a70c:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800a710:	6803      	ldr	r3, [r0, #0]
 800a712:	685b      	ldr	r3, [r3, #4]
 800a714:	4798      	blx	r3
 800a716:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800a718:	b00d      	add	sp, #52	@ 0x34
 800a71a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a71c:	200169fa 	.word	0x200169fa

0800a720 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a720:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a724:	b08c      	sub	sp, #48	@ 0x30
 800a726:	461e      	mov	r6, r3
 800a728:	2300      	movs	r3, #0
 800a72a:	4604      	mov	r4, r0
 800a72c:	466d      	mov	r5, sp
 800a72e:	9306      	str	r3, [sp, #24]
 800a730:	6803      	ldr	r3, [r0, #0]
 800a732:	e885 0006 	stmia.w	r5, {r1, r2}
 800a736:	2501      	movs	r5, #1
 800a738:	f8bd 7000 	ldrh.w	r7, [sp]
 800a73c:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a740:	9503      	str	r5, [sp, #12]
 800a742:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a744:	4798      	blx	r3
 800a746:	4642      	mov	r2, r8
 800a748:	4639      	mov	r1, r7
 800a74a:	4603      	mov	r3, r0
 800a74c:	4620      	mov	r0, r4
 800a74e:	f7ff ff47 	bl	800a5e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a752:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a756:	9004      	str	r0, [sp, #16]
 800a758:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a75c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a760:	9607      	str	r6, [sp, #28]
 800a762:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800a766:	4b10      	ldr	r3, [pc, #64]	@ (800a7a8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800a768:	881b      	ldrh	r3, [r3, #0]
 800a76a:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800a76e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800a770:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800a774:	f7f7 fe82 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800a778:	6803      	ldr	r3, [r0, #0]
 800a77a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a77c:	4798      	blx	r3
 800a77e:	23ff      	movs	r3, #255	@ 0xff
 800a780:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800a784:	a903      	add	r1, sp, #12
 800a786:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800a78a:	6860      	ldr	r0, [r4, #4]
 800a78c:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800a790:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800a794:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800a798:	6803      	ldr	r3, [r0, #0]
 800a79a:	685b      	ldr	r3, [r3, #4]
 800a79c:	4798      	blx	r3
 800a79e:	4630      	mov	r0, r6
 800a7a0:	b00c      	add	sp, #48	@ 0x30
 800a7a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a7a6:	bf00      	nop
 800a7a8:	200169fa 	.word	0x200169fa

0800a7ac <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800a7ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a7ae:	b085      	sub	sp, #20
 800a7b0:	4605      	mov	r5, r0
 800a7b2:	ac02      	add	r4, sp, #8
 800a7b4:	e884 0006 	stmia.w	r4, {r1, r2}
 800a7b8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800a7bc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800a7c0:	f7ff fde6 	bl	800a390 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a7c4:	4631      	mov	r1, r6
 800a7c6:	4603      	mov	r3, r0
 800a7c8:	463a      	mov	r2, r7
 800a7ca:	4628      	mov	r0, r5
 800a7cc:	f7ff ff08 	bl	800a5e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a7d0:	4a05      	ldr	r2, [pc, #20]	@ (800a7e8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800a7d2:	682b      	ldr	r3, [r5, #0]
 800a7d4:	8812      	ldrh	r2, [r2, #0]
 800a7d6:	9200      	str	r2, [sp, #0]
 800a7d8:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800a7da:	4603      	mov	r3, r0
 800a7dc:	4628      	mov	r0, r5
 800a7de:	e894 0006 	ldmia.w	r4, {r1, r2}
 800a7e2:	47b0      	blx	r6
 800a7e4:	b005      	add	sp, #20
 800a7e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a7e8:	200169fa 	.word	0x200169fa

0800a7ec <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a7ec:	b570      	push	{r4, r5, r6, lr}
 800a7ee:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800a7f2:	4604      	mov	r4, r0
 800a7f4:	b19b      	cbz	r3, 800a81e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a7f6:	2002      	movs	r0, #2
 800a7f8:	f7f6 ff20 	bl	800163c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a7fc:	2300      	movs	r3, #0
 800a7fe:	4620      	mov	r0, r4
 800a800:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800a804:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800a808:	6823      	ldr	r3, [r4, #0]
 800a80a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800a80e:	f7ff fdbf 	bl	800a390 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a812:	4601      	mov	r1, r0
 800a814:	4620      	mov	r0, r4
 800a816:	462b      	mov	r3, r5
 800a818:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a81c:	4718      	bx	r3
 800a81e:	bd70      	pop	{r4, r5, r6, pc}

0800a820 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800a820:	b570      	push	{r4, r5, r6, lr}
 800a822:	4605      	mov	r5, r0
 800a824:	460c      	mov	r4, r1
 800a826:	2003      	movs	r0, #3
 800a828:	b149      	cbz	r1, 800a83e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800a82a:	f7f6 fea7 	bl	800157c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a82e:	6928      	ldr	r0, [r5, #16]
 800a830:	b168      	cbz	r0, 800a84e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a832:	6803      	ldr	r3, [r0, #0]
 800a834:	2101      	movs	r1, #1
 800a836:	695b      	ldr	r3, [r3, #20]
 800a838:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a83c:	4718      	bx	r3
 800a83e:	f7f6 fecd 	bl	80015dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a842:	6928      	ldr	r0, [r5, #16]
 800a844:	b118      	cbz	r0, 800a84e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a846:	6803      	ldr	r3, [r0, #0]
 800a848:	4621      	mov	r1, r4
 800a84a:	695b      	ldr	r3, [r3, #20]
 800a84c:	e7f4      	b.n	800a838 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800a84e:	bd70      	pop	{r4, r5, r6, pc}

0800a850 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a850:	b538      	push	{r3, r4, r5, lr}
 800a852:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800a856:	4604      	mov	r4, r0
 800a858:	460d      	mov	r5, r1
 800a85a:	428b      	cmp	r3, r1
 800a85c:	d006      	beq.n	800a86c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800a85e:	6803      	ldr	r3, [r0, #0]
 800a860:	b929      	cbnz	r1, 800a86e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800a862:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800a866:	4798      	blx	r3
 800a868:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800a86c:	bd38      	pop	{r3, r4, r5, pc}
 800a86e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800a872:	e7f8      	b.n	800a866 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800a874 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a874:	4b0d      	ldr	r3, [pc, #52]	@ (800a8ac <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800a876:	b510      	push	{r4, lr}
 800a878:	781b      	ldrb	r3, [r3, #0]
 800a87a:	4604      	mov	r4, r0
 800a87c:	b95b      	cbnz	r3, 800a896 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a87e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800a882:	2b02      	cmp	r3, #2
 800a884:	d007      	beq.n	800a896 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a886:	6840      	ldr	r0, [r0, #4]
 800a888:	f000 f92c 	bl	800aae4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a88c:	b118      	cbz	r0, 800a896 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a88e:	6862      	ldr	r2, [r4, #4]
 800a890:	7a53      	ldrb	r3, [r2, #9]
 800a892:	2b00      	cmp	r3, #0
 800a894:	d0fc      	beq.n	800a890 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a896:	f7f7 f853 	bl	8001940 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a89a:	4620      	mov	r0, r4
 800a89c:	2100      	movs	r1, #0
 800a89e:	f7ff ffd7 	bl	800a850 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a8a2:	4620      	mov	r0, r4
 800a8a4:	f7ff fd74 	bl	800a390 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a8a8:	bd10      	pop	{r4, pc}
 800a8aa:	bf00      	nop
 800a8ac:	200169fe 	.word	0x200169fe

0800a8b0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800a8b0:	b570      	push	{r4, r5, r6, lr}
 800a8b2:	4604      	mov	r4, r0
 800a8b4:	6803      	ldr	r3, [r0, #0]
 800a8b6:	b919      	cbnz	r1, 800a8c0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800a8b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a8ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a8be:	4718      	bx	r3
 800a8c0:	2200      	movs	r2, #0
 800a8c2:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800a8c6:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800a8ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a8cc:	4798      	blx	r3
 800a8ce:	6863      	ldr	r3, [r4, #4]
 800a8d0:	2101      	movs	r1, #1
 800a8d2:	4605      	mov	r5, r0
 800a8d4:	4620      	mov	r0, r4
 800a8d6:	7299      	strb	r1, [r3, #10]
 800a8d8:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800a8dc:	f7ff ffb8 	bl	800a850 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a8e0:	4628      	mov	r0, r5
 800a8e2:	bd70      	pop	{r4, r5, r6, pc}

0800a8e4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a8e4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a8e8:	1a13      	subs	r3, r2, r0
 800a8ea:	4258      	negs	r0, r3
 800a8ec:	4158      	adcs	r0, r3
 800a8ee:	4770      	bx	lr

0800a8f0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a8f0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a8f4:	1a9b      	subs	r3, r3, r2
 800a8f6:	2b00      	cmp	r3, #0
 800a8f8:	bfdc      	itt	le
 800a8fa:	6882      	ldrle	r2, [r0, #8]
 800a8fc:	189b      	addle	r3, r3, r2
 800a8fe:	2b01      	cmp	r3, #1
 800a900:	bfcc      	ite	gt
 800a902:	2000      	movgt	r0, #0
 800a904:	2001      	movle	r0, #1
 800a906:	4770      	bx	lr

0800a908 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a908:	6902      	ldr	r2, [r0, #16]
 800a90a:	6843      	ldr	r3, [r0, #4]
 800a90c:	2024      	movs	r0, #36	@ 0x24
 800a90e:	fb00 3002 	mla	r0, r0, r2, r3
 800a912:	4770      	bx	lr

0800a914 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a914:	6803      	ldr	r3, [r0, #0]
 800a916:	691b      	ldr	r3, [r3, #16]
 800a918:	4718      	bx	r3

0800a91a <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a91a:	2301      	movs	r3, #1
 800a91c:	b570      	push	{r4, r5, r6, lr}
 800a91e:	7203      	strb	r3, [r0, #8]
 800a920:	4604      	mov	r4, r0
 800a922:	6840      	ldr	r0, [r0, #4]
 800a924:	6803      	ldr	r3, [r0, #0]
 800a926:	699b      	ldr	r3, [r3, #24]
 800a928:	4798      	blx	r3
 800a92a:	6803      	ldr	r3, [r0, #0]
 800a92c:	4605      	mov	r5, r0
 800a92e:	2b40      	cmp	r3, #64	@ 0x40
 800a930:	d00c      	beq.n	800a94c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a932:	d810      	bhi.n	800a956 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800a934:	2b04      	cmp	r3, #4
 800a936:	d01d      	beq.n	800a974 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800a938:	d804      	bhi.n	800a944 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800a93a:	2b01      	cmp	r3, #1
 800a93c:	d006      	beq.n	800a94c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a93e:	2b02      	cmp	r3, #2
 800a940:	d02c      	beq.n	800a99c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a942:	bd70      	pop	{r4, r5, r6, pc}
 800a944:	2b08      	cmp	r3, #8
 800a946:	d01d      	beq.n	800a984 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800a948:	2b20      	cmp	r3, #32
 800a94a:	d1fa      	bne.n	800a942 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800a94c:	6823      	ldr	r3, [r4, #0]
 800a94e:	4620      	mov	r0, r4
 800a950:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a952:	4798      	blx	r3
 800a954:	e013      	b.n	800a97e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a956:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a95a:	d0f7      	beq.n	800a94c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a95c:	d804      	bhi.n	800a968 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800a95e:	2b80      	cmp	r3, #128	@ 0x80
 800a960:	d0f4      	beq.n	800a94c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a962:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800a966:	e7f0      	b.n	800a94a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800a968:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a96c:	d0ee      	beq.n	800a94c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a96e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a972:	e7e5      	b.n	800a940 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a974:	6823      	ldr	r3, [r4, #0]
 800a976:	7f01      	ldrb	r1, [r0, #28]
 800a978:	4620      	mov	r0, r4
 800a97a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a97c:	4798      	blx	r3
 800a97e:	6823      	ldr	r3, [r4, #0]
 800a980:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a982:	e006      	b.n	800a992 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a984:	6823      	ldr	r3, [r4, #0]
 800a986:	7f01      	ldrb	r1, [r0, #28]
 800a988:	4620      	mov	r0, r4
 800a98a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a98c:	4798      	blx	r3
 800a98e:	6823      	ldr	r3, [r4, #0]
 800a990:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a992:	4629      	mov	r1, r5
 800a994:	4620      	mov	r0, r4
 800a996:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a99a:	4718      	bx	r3
 800a99c:	6823      	ldr	r3, [r4, #0]
 800a99e:	4620      	mov	r0, r4
 800a9a0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a9a2:	4798      	blx	r3
 800a9a4:	e7f3      	b.n	800a98e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800a9a6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a9a6:	4770      	bx	lr

0800a9a8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a9a8:	4770      	bx	lr

0800a9aa <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a9aa:	4770      	bx	lr

0800a9ac <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a9ac:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800a9b0:	b510      	push	{r4, lr}
 800a9b2:	1ad2      	subs	r2, r2, r3
 800a9b4:	2a00      	cmp	r2, #0
 800a9b6:	bfdc      	itt	le
 800a9b8:	6884      	ldrle	r4, [r0, #8]
 800a9ba:	1912      	addle	r2, r2, r4
 800a9bc:	2a01      	cmp	r2, #1
 800a9be:	dd16      	ble.n	800a9ee <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800a9c0:	6842      	ldr	r2, [r0, #4]
 800a9c2:	2424      	movs	r4, #36	@ 0x24
 800a9c4:	fb04 2303 	mla	r3, r4, r3, r2
 800a9c8:	f101 0220 	add.w	r2, r1, #32
 800a9cc:	f851 4b04 	ldr.w	r4, [r1], #4
 800a9d0:	4291      	cmp	r1, r2
 800a9d2:	f843 4b04 	str.w	r4, [r3], #4
 800a9d6:	d1f9      	bne.n	800a9cc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800a9d8:	780a      	ldrb	r2, [r1, #0]
 800a9da:	701a      	strb	r2, [r3, #0]
 800a9dc:	68c3      	ldr	r3, [r0, #12]
 800a9de:	6882      	ldr	r2, [r0, #8]
 800a9e0:	f3bf 8f5b 	dmb	ish
 800a9e4:	3301      	adds	r3, #1
 800a9e6:	429a      	cmp	r2, r3
 800a9e8:	bfd8      	it	le
 800a9ea:	1a9b      	suble	r3, r3, r2
 800a9ec:	60c3      	str	r3, [r0, #12]
 800a9ee:	bd10      	pop	{r4, pc}

0800a9f0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a9f0:	6903      	ldr	r3, [r0, #16]
 800a9f2:	6882      	ldr	r2, [r0, #8]
 800a9f4:	f3bf 8f5b 	dmb	ish
 800a9f8:	3301      	adds	r3, #1
 800a9fa:	429a      	cmp	r2, r3
 800a9fc:	bfd8      	it	le
 800a9fe:	1a9b      	suble	r3, r3, r2
 800aa00:	6103      	str	r3, [r0, #16]
 800aa02:	4770      	bx	lr

0800aa04 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800aa04:	b570      	push	{r4, r5, r6, lr}
 800aa06:	4604      	mov	r4, r0
 800aa08:	460e      	mov	r6, r1
 800aa0a:	6860      	ldr	r0, [r4, #4]
 800aa0c:	6803      	ldr	r3, [r0, #0]
 800aa0e:	685b      	ldr	r3, [r3, #4]
 800aa10:	4798      	blx	r3
 800aa12:	2800      	cmp	r0, #0
 800aa14:	d1f9      	bne.n	800aa0a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800aa16:	4d0d      	ldr	r5, [pc, #52]	@ (800aa4c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800aa18:	6828      	ldr	r0, [r5, #0]
 800aa1a:	6803      	ldr	r3, [r0, #0]
 800aa1c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800aa1e:	4798      	blx	r3
 800aa20:	f7f6 ff9c 	bl	800195c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800aa24:	6828      	ldr	r0, [r5, #0]
 800aa26:	2101      	movs	r1, #1
 800aa28:	f7ff ff12 	bl	800a850 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800aa2c:	6860      	ldr	r0, [r4, #4]
 800aa2e:	4631      	mov	r1, r6
 800aa30:	6803      	ldr	r3, [r0, #0]
 800aa32:	689b      	ldr	r3, [r3, #8]
 800aa34:	4798      	blx	r3
 800aa36:	6823      	ldr	r3, [r4, #0]
 800aa38:	4620      	mov	r0, r4
 800aa3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aa3c:	4798      	blx	r3
 800aa3e:	6828      	ldr	r0, [r5, #0]
 800aa40:	6803      	ldr	r3, [r0, #0]
 800aa42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa46:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800aa48:	4718      	bx	r3
 800aa4a:	bf00      	nop
 800aa4c:	20016a00 	.word	0x20016a00

0800aa50 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800aa50:	b508      	push	{r3, lr}
 800aa52:	f7f6 ff75 	bl	8001940 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800aa56:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800aa5a:	f7f6 bf79 	b.w	8001950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800aa5e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800aa5e:	b510      	push	{r4, lr}
 800aa60:	4604      	mov	r4, r0
 800aa62:	2114      	movs	r1, #20
 800aa64:	f015 fb73 	bl	802014e <_ZdlPvj>
 800aa68:	4620      	mov	r0, r4
 800aa6a:	bd10      	pop	{r4, pc}

0800aa6c <_ZN8touchgfx13DMA_Interface5startEv>:
 800aa6c:	b510      	push	{r4, lr}
 800aa6e:	4604      	mov	r4, r0
 800aa70:	6840      	ldr	r0, [r0, #4]
 800aa72:	6803      	ldr	r3, [r0, #0]
 800aa74:	681b      	ldr	r3, [r3, #0]
 800aa76:	4798      	blx	r3
 800aa78:	b948      	cbnz	r0, 800aa8e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800aa7a:	7a63      	ldrb	r3, [r4, #9]
 800aa7c:	b13b      	cbz	r3, 800aa8e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800aa7e:	7a23      	ldrb	r3, [r4, #8]
 800aa80:	b92b      	cbnz	r3, 800aa8e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800aa82:	6823      	ldr	r3, [r4, #0]
 800aa84:	4620      	mov	r0, r4
 800aa86:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800aa88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800aa8c:	4718      	bx	r3
 800aa8e:	bd10      	pop	{r4, pc}

0800aa90 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800aa90:	b570      	push	{r4, r5, r6, lr}
 800aa92:	4604      	mov	r4, r0
 800aa94:	6840      	ldr	r0, [r0, #4]
 800aa96:	6803      	ldr	r3, [r0, #0]
 800aa98:	681b      	ldr	r3, [r3, #0]
 800aa9a:	4798      	blx	r3
 800aa9c:	4605      	mov	r5, r0
 800aa9e:	b930      	cbnz	r0, 800aaae <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800aaa0:	7a23      	ldrb	r3, [r4, #8]
 800aaa2:	b123      	cbz	r3, 800aaae <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800aaa4:	6860      	ldr	r0, [r4, #4]
 800aaa6:	6803      	ldr	r3, [r0, #0]
 800aaa8:	695b      	ldr	r3, [r3, #20]
 800aaaa:	4798      	blx	r3
 800aaac:	7225      	strb	r5, [r4, #8]
 800aaae:	6860      	ldr	r0, [r4, #4]
 800aab0:	6803      	ldr	r3, [r0, #0]
 800aab2:	681b      	ldr	r3, [r3, #0]
 800aab4:	4798      	blx	r3
 800aab6:	b928      	cbnz	r0, 800aac4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800aab8:	6823      	ldr	r3, [r4, #0]
 800aaba:	4620      	mov	r0, r4
 800aabc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800aabe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aac2:	4718      	bx	r3
 800aac4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aac8:	f7f6 bf50 	b.w	800196c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800aacc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800aacc:	b510      	push	{r4, lr}
 800aace:	6082      	str	r2, [r0, #8]
 800aad0:	2200      	movs	r2, #0
 800aad2:	4c03      	ldr	r4, [pc, #12]	@ (800aae0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800aad4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800aad8:	e9c0 4100 	strd	r4, r1, [r0]
 800aadc:	bd10      	pop	{r4, pc}
 800aade:	bf00      	nop
 800aae0:	08023114 	.word	0x08023114

0800aae4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800aae4:	6840      	ldr	r0, [r0, #4]
 800aae6:	6803      	ldr	r3, [r0, #0]
 800aae8:	681b      	ldr	r3, [r3, #0]
 800aaea:	4718      	bx	r3

0800aaec <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800aaec:	094a      	lsrs	r2, r1, #5
 800aaee:	4b06      	ldr	r3, [pc, #24]	@ (800ab08 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800aaf0:	60c1      	str	r1, [r0, #12]
 800aaf2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800aaf6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800aafa:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800aafe:	4313      	orrs	r3, r2
 800ab00:	4319      	orrs	r1, r3
 800ab02:	8201      	strh	r1, [r0, #16]
 800ab04:	4770      	bx	lr
 800ab06:	bf00      	nop
 800ab08:	fffff800 	.word	0xfffff800

0800ab0c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800ab0c:	f1a0 0008 	sub.w	r0, r0, #8
 800ab10:	e7ec      	b.n	800aaec <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800ab12:	bf00      	nop

0800ab14 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800ab14:	b508      	push	{r3, lr}
 800ab16:	4b05      	ldr	r3, [pc, #20]	@ (800ab2c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800ab18:	6818      	ldr	r0, [r3, #0]
 800ab1a:	6803      	ldr	r3, [r0, #0]
 800ab1c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800ab20:	4798      	blx	r3
 800ab22:	1e43      	subs	r3, r0, #1
 800ab24:	4258      	negs	r0, r3
 800ab26:	4158      	adcs	r0, r3
 800ab28:	bd08      	pop	{r3, pc}
 800ab2a:	bf00      	nop
 800ab2c:	20016a00 	.word	0x20016a00

0800ab30 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800ab30:	4770      	bx	lr

0800ab32 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800ab32:	3808      	subs	r0, #8
 800ab34:	4770      	bx	lr

0800ab36 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800ab36:	b430      	push	{r4, r5}
 800ab38:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800ab3c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800ab40:	8a02      	ldrh	r2, [r0, #16]
 800ab42:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800ab46:	4629      	mov	r1, r5
 800ab48:	9202      	str	r2, [sp, #8]
 800ab4a:	68c2      	ldr	r2, [r0, #12]
 800ab4c:	4620      	mov	r0, r4
 800ab4e:	bc30      	pop	{r4, r5}
 800ab50:	f7f7 b8ca 	b.w	8001ce8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800ab54 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800ab54:	f7f7 b8be 	b.w	8001cd4 <_ZN8touchgfx5paint8tearDownEv>

0800ab58 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800ab58:	b510      	push	{r4, lr}
 800ab5a:	4604      	mov	r4, r0
 800ab5c:	2114      	movs	r1, #20
 800ab5e:	f015 faf6 	bl	802014e <_ZdlPvj>
 800ab62:	4620      	mov	r0, r4
 800ab64:	bd10      	pop	{r4, pc}

0800ab66 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800ab66:	f1a0 0008 	sub.w	r0, r0, #8
 800ab6a:	e7f5      	b.n	800ab58 <_ZN8touchgfx13PainterRGB565D0Ev>

0800ab6c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800ab6c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ab6e:	6803      	ldr	r3, [r0, #0]
 800ab70:	460d      	mov	r5, r1
 800ab72:	4604      	mov	r4, r0
 800ab74:	4601      	mov	r1, r0
 800ab76:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800ab78:	a802      	add	r0, sp, #8
 800ab7a:	4798      	blx	r3
 800ab7c:	6828      	ldr	r0, [r5, #0]
 800ab7e:	6869      	ldr	r1, [r5, #4]
 800ab80:	466b      	mov	r3, sp
 800ab82:	c303      	stmia	r3!, {r0, r1}
 800ab84:	4668      	mov	r0, sp
 800ab86:	4619      	mov	r1, r3
 800ab88:	f7fe fca6 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 800ab8c:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800ab8e:	b188      	cbz	r0, 800abb4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800ab90:	6803      	ldr	r3, [r0, #0]
 800ab92:	1d21      	adds	r1, r4, #4
 800ab94:	68db      	ldr	r3, [r3, #12]
 800ab96:	4798      	blx	r3
 800ab98:	b160      	cbz	r0, 800abb4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800ab9a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800ab9e:	2b00      	cmp	r3, #0
 800aba0:	dd08      	ble.n	800abb4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800aba2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800aba6:	2d00      	cmp	r5, #0
 800aba8:	dd04      	ble.n	800abb4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800abaa:	4a2b      	ldr	r2, [pc, #172]	@ (800ac58 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800abac:	7812      	ldrb	r2, [r2, #0]
 800abae:	b11a      	cbz	r2, 800abb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800abb0:	2a01      	cmp	r2, #1
 800abb2:	d029      	beq.n	800ac08 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800abb4:	b004      	add	sp, #16
 800abb6:	bd70      	pop	{r4, r5, r6, pc}
 800abb8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800abbc:	441d      	add	r5, r3
 800abbe:	b2ad      	uxth	r5, r5
 800abc0:	b22e      	sxth	r6, r5
 800abc2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800abc6:	42b3      	cmp	r3, r6
 800abc8:	daf4      	bge.n	800abb4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800abca:	6823      	ldr	r3, [r4, #0]
 800abcc:	4669      	mov	r1, sp
 800abce:	4620      	mov	r0, r4
 800abd0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800abd2:	4798      	blx	r3
 800abd4:	b940      	cbnz	r0, 800abe8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800abd6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800abda:	2b01      	cmp	r3, #1
 800abdc:	d004      	beq.n	800abe8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800abde:	3301      	adds	r3, #1
 800abe0:	105b      	asrs	r3, r3, #1
 800abe2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800abe6:	e7f0      	b.n	800abca <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800abe8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800abec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800abf0:	4413      	add	r3, r2
 800abf2:	b29b      	uxth	r3, r3
 800abf4:	441a      	add	r2, r3
 800abf6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800abfa:	b212      	sxth	r2, r2
 800abfc:	4296      	cmp	r6, r2
 800abfe:	dae0      	bge.n	800abc2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800ac00:	1aeb      	subs	r3, r5, r3
 800ac02:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ac06:	e7dc      	b.n	800abc2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800ac08:	f8bd 5000 	ldrh.w	r5, [sp]
 800ac0c:	441d      	add	r5, r3
 800ac0e:	b2ad      	uxth	r5, r5
 800ac10:	b22e      	sxth	r6, r5
 800ac12:	f9bd 3000 	ldrsh.w	r3, [sp]
 800ac16:	42b3      	cmp	r3, r6
 800ac18:	dacc      	bge.n	800abb4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800ac1a:	6823      	ldr	r3, [r4, #0]
 800ac1c:	4669      	mov	r1, sp
 800ac1e:	4620      	mov	r0, r4
 800ac20:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800ac22:	4798      	blx	r3
 800ac24:	b940      	cbnz	r0, 800ac38 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800ac26:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800ac2a:	2b01      	cmp	r3, #1
 800ac2c:	d004      	beq.n	800ac38 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800ac2e:	3301      	adds	r3, #1
 800ac30:	105b      	asrs	r3, r3, #1
 800ac32:	f8ad 3004 	strh.w	r3, [sp, #4]
 800ac36:	e7f0      	b.n	800ac1a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800ac38:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800ac3c:	f8bd 3000 	ldrh.w	r3, [sp]
 800ac40:	4413      	add	r3, r2
 800ac42:	b29b      	uxth	r3, r3
 800ac44:	441a      	add	r2, r3
 800ac46:	f8ad 3000 	strh.w	r3, [sp]
 800ac4a:	b212      	sxth	r2, r2
 800ac4c:	4296      	cmp	r6, r2
 800ac4e:	dae0      	bge.n	800ac12 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800ac50:	1aeb      	subs	r3, r5, r3
 800ac52:	f8ad 3004 	strh.w	r3, [sp, #4]
 800ac56:	e7dc      	b.n	800ac12 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800ac58:	200169f8 	.word	0x200169f8

0800ac5c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800ac5c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ac5e:	6803      	ldr	r3, [r0, #0]
 800ac60:	4604      	mov	r4, r0
 800ac62:	4601      	mov	r1, r0
 800ac64:	4668      	mov	r0, sp
 800ac66:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800ac68:	4798      	blx	r3
 800ac6a:	2100      	movs	r1, #0
 800ac6c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800ac70:	4668      	mov	r0, sp
 800ac72:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ac76:	9102      	str	r1, [sp, #8]
 800ac78:	a902      	add	r1, sp, #8
 800ac7a:	f8ad 200c 	strh.w	r2, [sp, #12]
 800ac7e:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ac82:	f7fe fc29 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 800ac86:	6823      	ldr	r3, [r4, #0]
 800ac88:	4669      	mov	r1, sp
 800ac8a:	4620      	mov	r0, r4
 800ac8c:	691b      	ldr	r3, [r3, #16]
 800ac8e:	4798      	blx	r3
 800ac90:	b004      	add	sp, #16
 800ac92:	bd10      	pop	{r4, pc}

0800ac94 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800ac94:	2101      	movs	r1, #1
 800ac96:	2200      	movs	r2, #0
 800ac98:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800ac9c:	490a      	ldr	r1, [pc, #40]	@ (800acc8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800ac9e:	8082      	strh	r2, [r0, #4]
 800aca0:	6001      	str	r1, [r0, #0]
 800aca2:	21ff      	movs	r1, #255	@ 0xff
 800aca4:	80c2      	strh	r2, [r0, #6]
 800aca6:	8102      	strh	r2, [r0, #8]
 800aca8:	8142      	strh	r2, [r0, #10]
 800acaa:	8182      	strh	r2, [r0, #12]
 800acac:	81c2      	strh	r2, [r0, #14]
 800acae:	8202      	strh	r2, [r0, #16]
 800acb0:	8242      	strh	r2, [r0, #18]
 800acb2:	61c2      	str	r2, [r0, #28]
 800acb4:	8402      	strh	r2, [r0, #32]
 800acb6:	8442      	strh	r2, [r0, #34]	@ 0x22
 800acb8:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800acbc:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800acc0:	6282      	str	r2, [r0, #40]	@ 0x28
 800acc2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800acc6:	4770      	bx	lr
 800acc8:	08023170 	.word	0x08023170

0800accc <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800accc:	6301      	str	r1, [r0, #48]	@ 0x30
 800acce:	4770      	bx	lr

0800acd0 <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800acd0:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800acd2:	4770      	bx	lr

0800acd4 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800acd4:	6341      	str	r1, [r0, #52]	@ 0x34
 800acd6:	4770      	bx	lr

0800acd8 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800acd8:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 800acda:	4770      	bx	lr

0800acdc <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800acdc:	4770      	bx	lr

0800acde <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800acde:	4608      	mov	r0, r1
 800ace0:	4770      	bx	lr

0800ace2 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800ace2:	b530      	push	{r4, r5, lr}
 800ace4:	460d      	mov	r5, r1
 800ace6:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 800ace8:	8949      	ldrh	r1, [r1, #10]
 800acea:	b085      	sub	sp, #20
 800acec:	4604      	mov	r4, r0
 800acee:	1ac9      	subs	r1, r1, r3
 800acf0:	6803      	ldr	r3, [r0, #0]
 800acf2:	f10d 0206 	add.w	r2, sp, #6
 800acf6:	f8d3 3104 	ldr.w	r3, [r3, #260]	@ 0x104
 800acfa:	b209      	sxth	r1, r1
 800acfc:	4798      	blx	r3
 800acfe:	b1a0      	cbz	r0, 800ad2a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800ad00:	792b      	ldrb	r3, [r5, #4]
 800ad02:	b993      	cbnz	r3, 800ad2a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800ad04:	f8d4 0128 	ldr.w	r0, [r4, #296]	@ 0x128
 800ad08:	b178      	cbz	r0, 800ad2a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800ad0a:	6803      	ldr	r3, [r0, #0]
 800ad0c:	68db      	ldr	r3, [r3, #12]
 800ad0e:	4798      	blx	r3
 800ad10:	b158      	cbz	r0, 800ad2a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800ad12:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800ad16:	aa02      	add	r2, sp, #8
 800ad18:	f8d4 0128 	ldr.w	r0, [r4, #296]	@ 0x128
 800ad1c:	4621      	mov	r1, r4
 800ad1e:	f8ad 3008 	strh.w	r3, [sp, #8]
 800ad22:	9503      	str	r5, [sp, #12]
 800ad24:	6803      	ldr	r3, [r0, #0]
 800ad26:	689b      	ldr	r3, [r3, #8]
 800ad28:	4798      	blx	r3
 800ad2a:	b005      	add	sp, #20
 800ad2c:	bd30      	pop	{r4, r5, pc}

0800ad2e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800ad2e:	428a      	cmp	r2, r1
 800ad30:	bfbc      	itt	lt
 800ad32:	460b      	movlt	r3, r1
 800ad34:	4611      	movlt	r1, r2
 800ad36:	b510      	push	{r4, lr}
 800ad38:	bfb8      	it	lt
 800ad3a:	461a      	movlt	r2, r3
 800ad3c:	f8d0 312c 	ldr.w	r3, [r0, #300]	@ 0x12c
 800ad40:	4604      	mov	r4, r0
 800ad42:	428b      	cmp	r3, r1
 800ad44:	d103      	bne.n	800ad4e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x20>
 800ad46:	f8d0 3130 	ldr.w	r3, [r0, #304]	@ 0x130
 800ad4a:	4293      	cmp	r3, r2
 800ad4c:	d011      	beq.n	800ad72 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x44>
 800ad4e:	f8c4 112c 	str.w	r1, [r4, #300]	@ 0x12c
 800ad52:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 800ad56:	f8c4 2130 	str.w	r2, [r4, #304]	@ 0x130
 800ad5a:	f005 fa18 	bl	801018e <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad5e:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 800ad62:	f005 fa14 	bl	801018e <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad66:	f104 00e8 	add.w	r0, r4, #232	@ 0xe8
 800ad6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ad6e:	f005 ba0e 	b.w	801018e <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad72:	bd10      	pop	{r4, pc}

0800ad74 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800ad74:	428a      	cmp	r2, r1
 800ad76:	bfbc      	itt	lt
 800ad78:	460b      	movlt	r3, r1
 800ad7a:	4611      	movlt	r1, r2
 800ad7c:	b510      	push	{r4, lr}
 800ad7e:	bfb8      	it	lt
 800ad80:	461a      	movlt	r2, r3
 800ad82:	f8d0 3134 	ldr.w	r3, [r0, #308]	@ 0x134
 800ad86:	4604      	mov	r4, r0
 800ad88:	428b      	cmp	r3, r1
 800ad8a:	d103      	bne.n	800ad94 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x20>
 800ad8c:	f8d0 3138 	ldr.w	r3, [r0, #312]	@ 0x138
 800ad90:	4293      	cmp	r3, r2
 800ad92:	d011      	beq.n	800adb8 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x44>
 800ad94:	f8c4 1134 	str.w	r1, [r4, #308]	@ 0x134
 800ad98:	f104 0064 	add.w	r0, r4, #100	@ 0x64
 800ad9c:	f8c4 2138 	str.w	r2, [r4, #312]	@ 0x138
 800ada0:	f005 f9f5 	bl	801018e <_ZNK8touchgfx8Drawable10invalidateEv>
 800ada4:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 800ada8:	f005 f9f1 	bl	801018e <_ZNK8touchgfx8Drawable10invalidateEv>
 800adac:	f104 0090 	add.w	r0, r4, #144	@ 0x90
 800adb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800adb4:	f005 b9eb 	b.w	801018e <_ZNK8touchgfx8Drawable10invalidateEv>
 800adb8:	bd10      	pop	{r4, pc}

0800adba <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800adba:	2300      	movs	r3, #0
 800adbc:	3038      	adds	r0, #56	@ 0x38
 800adbe:	f8a0 30e6 	strh.w	r3, [r0, #230]	@ 0xe6
 800adc2:	f005 b9e4 	b.w	801018e <_ZNK8touchgfx8Drawable10invalidateEv>

0800adc6 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800adc6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800adca:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 800adce:	4605      	mov	r5, r0
 800add0:	460f      	mov	r7, r1
 800add2:	4616      	mov	r6, r2
 800add4:	2b00      	cmp	r3, #0
 800add6:	d03d      	beq.n	800ae54 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8e>
 800add8:	6803      	ldr	r3, [r0, #0]
 800adda:	f8d3 3130 	ldr.w	r3, [r3, #304]	@ 0x130
 800adde:	4798      	blx	r3
 800ade0:	682b      	ldr	r3, [r5, #0]
 800ade2:	b204      	sxth	r4, r0
 800ade4:	4628      	mov	r0, r5
 800ade6:	f8d3 3134 	ldr.w	r3, [r3, #308]	@ 0x134
 800adea:	4798      	blx	r3
 800adec:	b203      	sxth	r3, r0
 800adee:	f9b5 011e 	ldrsh.w	r0, [r5, #286]	@ 0x11e
 800adf2:	429c      	cmp	r4, r3
 800adf4:	bfc4      	itt	gt
 800adf6:	4622      	movgt	r2, r4
 800adf8:	461c      	movgt	r4, r3
 800adfa:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 800adfe:	bfc8      	it	gt
 800ae00:	4613      	movgt	r3, r2
 800ae02:	4284      	cmp	r4, r0
 800ae04:	da26      	bge.n	800ae54 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8e>
 800ae06:	4298      	cmp	r0, r3
 800ae08:	bfa8      	it	ge
 800ae0a:	4618      	movge	r0, r3
 800ae0c:	2800      	cmp	r0, #0
 800ae0e:	db21      	blt.n	800ae54 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8e>
 800ae10:	b9ef      	cbnz	r7, 800ae4e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x88>
 800ae12:	f8d5 3144 	ldr.w	r3, [r5, #324]	@ 0x144
 800ae16:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800ae1a:	4619      	mov	r1, r3
 800ae1c:	42a0      	cmp	r0, r4
 800ae1e:	dd0b      	ble.n	800ae38 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x72>
 800ae20:	f8d5 2144 	ldr.w	r2, [r5, #324]	@ 0x144
 800ae24:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
 800ae28:	3401      	adds	r4, #1
 800ae2a:	4291      	cmp	r1, r2
 800ae2c:	bfa8      	it	ge
 800ae2e:	4611      	movge	r1, r2
 800ae30:	4293      	cmp	r3, r2
 800ae32:	bfb8      	it	lt
 800ae34:	4613      	movlt	r3, r2
 800ae36:	e7f1      	b.n	800ae1c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x56>
 800ae38:	1b89      	subs	r1, r1, r6
 800ae3a:	18f2      	adds	r2, r6, r3
 800ae3c:	4291      	cmp	r1, r2
 800ae3e:	d009      	beq.n	800ae54 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8e>
 800ae40:	682b      	ldr	r3, [r5, #0]
 800ae42:	4628      	mov	r0, r5
 800ae44:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800ae48:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ae4c:	4718      	bx	r3
 800ae4e:	4273      	negs	r3, r6
 800ae50:	4631      	mov	r1, r6
 800ae52:	e7e3      	b.n	800ae1c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x56>
 800ae54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ae58 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800ae58:	b530      	push	{r4, r5, lr}
 800ae5a:	790b      	ldrb	r3, [r1, #4]
 800ae5c:	b085      	sub	sp, #20
 800ae5e:	4604      	mov	r4, r0
 800ae60:	460d      	mov	r5, r1
 800ae62:	2b02      	cmp	r3, #2
 800ae64:	d020      	beq.n	800aea8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800ae66:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 800ae68:	f10d 0206 	add.w	r2, sp, #6
 800ae6c:	88c9      	ldrh	r1, [r1, #6]
 800ae6e:	1ac9      	subs	r1, r1, r3
 800ae70:	6803      	ldr	r3, [r0, #0]
 800ae72:	b209      	sxth	r1, r1
 800ae74:	f8d3 3104 	ldr.w	r3, [r3, #260]	@ 0x104
 800ae78:	4798      	blx	r3
 800ae7a:	b1a8      	cbz	r0, 800aea8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800ae7c:	792b      	ldrb	r3, [r5, #4]
 800ae7e:	2b01      	cmp	r3, #1
 800ae80:	d812      	bhi.n	800aea8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800ae82:	f8d4 0124 	ldr.w	r0, [r4, #292]	@ 0x124
 800ae86:	b178      	cbz	r0, 800aea8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800ae88:	6803      	ldr	r3, [r0, #0]
 800ae8a:	68db      	ldr	r3, [r3, #12]
 800ae8c:	4798      	blx	r3
 800ae8e:	b158      	cbz	r0, 800aea8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800ae90:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800ae94:	aa02      	add	r2, sp, #8
 800ae96:	f8d4 0124 	ldr.w	r0, [r4, #292]	@ 0x124
 800ae9a:	4621      	mov	r1, r4
 800ae9c:	f8ad 3008 	strh.w	r3, [sp, #8]
 800aea0:	9503      	str	r5, [sp, #12]
 800aea2:	6803      	ldr	r3, [r0, #0]
 800aea4:	689b      	ldr	r3, [r3, #8]
 800aea6:	4798      	blx	r3
 800aea8:	b005      	add	sp, #20
 800aeaa:	bd30      	pop	{r4, r5, pc}

0800aeac <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800aeac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aeb0:	4604      	mov	r4, r0
 800aeb2:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	@ 0x11e
 800aeb6:	4690      	mov	r8, r2
 800aeb8:	461f      	mov	r7, r3
 800aeba:	9e06      	ldr	r6, [sp, #24]
 800aebc:	b928      	cbnz	r0, 800aeca <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800aebe:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800aec2:	8033      	strh	r3, [r6, #0]
 800aec4:	803b      	strh	r3, [r7, #0]
 800aec6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aeca:	f8b4 2118 	ldrh.w	r2, [r4, #280]	@ 0x118
 800aece:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	@ 0x116
 800aed2:	1883      	adds	r3, r0, r2
 800aed4:	f8b4 2040 	ldrh.w	r2, [r4, #64]	@ 0x40
 800aed8:	1ad2      	subs	r2, r2, r3
 800aeda:	b212      	sxth	r2, r2
 800aedc:	2a01      	cmp	r2, #1
 800aede:	dc07      	bgt.n	800aef0 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800aee0:	2300      	movs	r3, #0
 800aee2:	803b      	strh	r3, [r7, #0]
 800aee4:	f8b4 311e 	ldrh.w	r3, [r4, #286]	@ 0x11e
 800aee8:	3b01      	subs	r3, #1
 800aeea:	8033      	strh	r3, [r6, #0]
 800aeec:	2001      	movs	r0, #1
 800aeee:	e7ea      	b.n	800aec6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800aef0:	1a08      	subs	r0, r1, r0
 800aef2:	f8d4 3130 	ldr.w	r3, [r4, #304]	@ 0x130
 800aef6:	f8d4 112c 	ldr.w	r1, [r4, #300]	@ 0x12c
 800aefa:	0140      	lsls	r0, r0, #5
 800aefc:	6b25      	ldr	r5, [r4, #48]	@ 0x30
 800aefe:	1a5b      	subs	r3, r3, r1
 800af00:	d459      	bmi.n	800afb6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x10a>
 800af02:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800af06:	fb93 f1f5 	sdiv	r1, r3, r5
 800af0a:	2302      	movs	r3, #2
 800af0c:	fb91 f1f3 	sdiv	r1, r1, r3
 800af10:	3a01      	subs	r2, #1
 800af12:	f005 fb06 	bl	8010522 <_ZN8touchgfx6muldivElll>
 800af16:	f8d4 112c 	ldr.w	r1, [r4, #300]	@ 0x12c
 800af1a:	f8d4 c030 	ldr.w	ip, [r4, #48]	@ 0x30
 800af1e:	2900      	cmp	r1, #0
 800af20:	db55      	blt.n	800afce <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x122>
 800af22:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800af26:	2502      	movs	r5, #2
 800af28:	fb93 f3fc 	sdiv	r3, r3, ip
 800af2c:	fb93 f3f5 	sdiv	r3, r3, r5
 800af30:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800af34:	f8d4 2130 	ldr.w	r2, [r4, #304]	@ 0x130
 800af38:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	@ 0x116
 800af3c:	1a52      	subs	r2, r2, r1
 800af3e:	eba8 0003 	sub.w	r0, r8, r3
 800af42:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800af46:	d44e      	bmi.n	800afe6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x13a>
 800af48:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800af4c:	fb92 f1fc 	sdiv	r1, r2, ip
 800af50:	2202      	movs	r2, #2
 800af52:	fb91 f1f2 	sdiv	r1, r1, r2
 800af56:	f8b4 2118 	ldrh.w	r2, [r4, #280]	@ 0x118
 800af5a:	4413      	add	r3, r2
 800af5c:	f8b4 2040 	ldrh.w	r2, [r4, #64]	@ 0x40
 800af60:	1ad2      	subs	r2, r2, r3
 800af62:	b212      	sxth	r2, r2
 800af64:	3a01      	subs	r2, #1
 800af66:	f005 fadc 	bl	8010522 <_ZN8touchgfx6muldivElll>
 800af6a:	f8d4 312c 	ldr.w	r3, [r4, #300]	@ 0x12c
 800af6e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800af70:	2b00      	cmp	r3, #0
 800af72:	db44      	blt.n	800affe <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x152>
 800af74:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800af78:	fb93 f3f2 	sdiv	r3, r3, r2
 800af7c:	2202      	movs	r2, #2
 800af7e:	fb93 f3f2 	sdiv	r3, r3, r2
 800af82:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800af86:	2020      	movs	r0, #32
 800af88:	429d      	cmp	r5, r3
 800af8a:	bfde      	ittt	le
 800af8c:	461a      	movle	r2, r3
 800af8e:	462b      	movle	r3, r5
 800af90:	4615      	movle	r5, r2
 800af92:	b21b      	sxth	r3, r3
 800af94:	2d00      	cmp	r5, #0
 800af96:	bfaa      	itet	ge
 800af98:	351f      	addge	r5, #31
 800af9a:	fb95 f5f0 	sdivlt	r5, r5, r0
 800af9e:	116d      	asrge	r5, r5, #5
 800afa0:	fb93 f3f0 	sdiv	r3, r3, r0
 800afa4:	b22d      	sxth	r5, r5
 800afa6:	803b      	strh	r3, [r7, #0]
 800afa8:	2d00      	cmp	r5, #0
 800afaa:	8035      	strh	r5, [r6, #0]
 800afac:	da33      	bge.n	800b016 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x16a>
 800afae:	2000      	movs	r0, #0
 800afb0:	8030      	strh	r0, [r6, #0]
 800afb2:	8038      	strh	r0, [r7, #0]
 800afb4:	e787      	b.n	800aec6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800afb6:	f06f 0101 	mvn.w	r1, #1
 800afba:	fb01 5303 	mla	r3, r1, r3, r5
 800afbe:	1e59      	subs	r1, r3, #1
 800afc0:	2302      	movs	r3, #2
 800afc2:	fb91 f1f5 	sdiv	r1, r1, r5
 800afc6:	fb91 f1f3 	sdiv	r1, r1, r3
 800afca:	4249      	negs	r1, r1
 800afcc:	e7a0      	b.n	800af10 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x64>
 800afce:	f06f 0301 	mvn.w	r3, #1
 800afd2:	2502      	movs	r5, #2
 800afd4:	fb03 c301 	mla	r3, r3, r1, ip
 800afd8:	3b01      	subs	r3, #1
 800afda:	fb93 f3fc 	sdiv	r3, r3, ip
 800afde:	fb93 f3f5 	sdiv	r3, r3, r5
 800afe2:	425b      	negs	r3, r3
 800afe4:	e7a4      	b.n	800af30 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x84>
 800afe6:	f06f 0101 	mvn.w	r1, #1
 800afea:	fb01 c202 	mla	r2, r1, r2, ip
 800afee:	1e51      	subs	r1, r2, #1
 800aff0:	2202      	movs	r2, #2
 800aff2:	fb91 f1fc 	sdiv	r1, r1, ip
 800aff6:	fb91 f1f2 	sdiv	r1, r1, r2
 800affa:	4249      	negs	r1, r1
 800affc:	e7ab      	b.n	800af56 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xaa>
 800affe:	f06f 0101 	mvn.w	r1, #1
 800b002:	fb01 2303 	mla	r3, r1, r3, r2
 800b006:	3b01      	subs	r3, #1
 800b008:	fb93 f3f2 	sdiv	r3, r3, r2
 800b00c:	2202      	movs	r2, #2
 800b00e:	fb93 f3f2 	sdiv	r3, r3, r2
 800b012:	425b      	negs	r3, r3
 800b014:	e7b5      	b.n	800af82 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd6>
 800b016:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800b01a:	f9b7 2000 	ldrsh.w	r2, [r7]
 800b01e:	4293      	cmp	r3, r2
 800b020:	dc05      	bgt.n	800b02e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x182>
 800b022:	3b01      	subs	r3, #1
 800b024:	2000      	movs	r0, #0
 800b026:	b21b      	sxth	r3, r3
 800b028:	8033      	strh	r3, [r6, #0]
 800b02a:	803b      	strh	r3, [r7, #0]
 800b02c:	e74b      	b.n	800aec6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800b02e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800b032:	803a      	strh	r2, [r7, #0]
 800b034:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800b038:	f9b6 2000 	ldrsh.w	r2, [r6]
 800b03c:	4293      	cmp	r3, r2
 800b03e:	bfdc      	itt	le
 800b040:	f103 33ff 	addle.w	r3, r3, #4294967295
 800b044:	b21a      	sxthle	r2, r3
 800b046:	8032      	strh	r2, [r6, #0]
 800b048:	e750      	b.n	800aeec <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>
	...

0800b04c <_ZN8touchgfx9ContainerC1Ev>:
 800b04c:	2101      	movs	r1, #1
 800b04e:	2200      	movs	r2, #0
 800b050:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800b054:	4909      	ldr	r1, [pc, #36]	@ (800b07c <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800b056:	8082      	strh	r2, [r0, #4]
 800b058:	80c2      	strh	r2, [r0, #6]
 800b05a:	8102      	strh	r2, [r0, #8]
 800b05c:	8142      	strh	r2, [r0, #10]
 800b05e:	8182      	strh	r2, [r0, #12]
 800b060:	81c2      	strh	r2, [r0, #14]
 800b062:	8202      	strh	r2, [r0, #16]
 800b064:	8242      	strh	r2, [r0, #18]
 800b066:	61c2      	str	r2, [r0, #28]
 800b068:	8402      	strh	r2, [r0, #32]
 800b06a:	8442      	strh	r2, [r0, #34]	@ 0x22
 800b06c:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800b070:	6001      	str	r1, [r0, #0]
 800b072:	6282      	str	r2, [r0, #40]	@ 0x28
 800b074:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b078:	4770      	bx	lr
 800b07a:	bf00      	nop
 800b07c:	08022fac 	.word	0x08022fac

0800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800b080:	6800      	ldr	r0, [r0, #0]
 800b082:	2800      	cmp	r0, #0
 800b084:	bfbd      	ittte	lt
 800b086:	380f      	sublt	r0, #15
 800b088:	2320      	movlt	r3, #32
 800b08a:	fb90 f0f3 	sdivlt	r0, r0, r3
 800b08e:	3010      	addge	r0, #16
 800b090:	bfa8      	it	ge
 800b092:	1140      	asrge	r0, r0, #5
 800b094:	4770      	bx	lr

0800b096 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800b096:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b09a:	4605      	mov	r5, r0
 800b09c:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	@ 0x11e
 800b0a0:	4688      	mov	r8, r1
 800b0a2:	4691      	mov	r9, r2
 800b0a4:	469a      	mov	sl, r3
 800b0a6:	b360      	cbz	r0, 800b102 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800b0a8:	2700      	movs	r7, #0
 800b0aa:	f04f 3bff 	mov.w	fp, #4294967295
 800b0ae:	b23e      	sxth	r6, r7
 800b0b0:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	@ 0x11e
 800b0b4:	42b3      	cmp	r3, r6
 800b0b6:	dd23      	ble.n	800b100 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800b0b8:	682b      	ldr	r3, [r5, #0]
 800b0ba:	4631      	mov	r1, r6
 800b0bc:	4628      	mov	r0, r5
 800b0be:	3701      	adds	r7, #1
 800b0c0:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800b0c4:	4798      	blx	r3
 800b0c6:	9001      	str	r0, [sp, #4]
 800b0c8:	a801      	add	r0, sp, #4
 800b0ca:	f7ff ffd9 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b0ce:	682b      	ldr	r3, [r5, #0]
 800b0d0:	eba0 0008 	sub.w	r0, r0, r8
 800b0d4:	4631      	mov	r1, r6
 800b0d6:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800b0da:	b204      	sxth	r4, r0
 800b0dc:	4628      	mov	r0, r5
 800b0de:	4798      	blx	r3
 800b0e0:	9001      	str	r0, [sp, #4]
 800b0e2:	a801      	add	r0, sp, #4
 800b0e4:	f7ff ffcc 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b0e8:	eba0 0009 	sub.w	r0, r0, r9
 800b0ec:	fb10 f000 	smulbb	r0, r0, r0
 800b0f0:	fb04 0404 	mla	r4, r4, r4, r0
 800b0f4:	455c      	cmp	r4, fp
 800b0f6:	bf3c      	itt	cc
 800b0f8:	f8aa 6000 	strhcc.w	r6, [sl]
 800b0fc:	46a3      	movcc	fp, r4
 800b0fe:	e7d6      	b.n	800b0ae <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800b100:	2001      	movs	r0, #1
 800b102:	b003      	add	sp, #12
 800b104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b108 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800b108:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b10c:	460e      	mov	r6, r1
 800b10e:	2100      	movs	r1, #0
 800b110:	4605      	mov	r5, r0
 800b112:	4617      	mov	r7, r2
 800b114:	8011      	strh	r1, [r2, #0]
 800b116:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 800b11a:	b36b      	cbz	r3, 800b178 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x70>
 800b11c:	6803      	ldr	r3, [r0, #0]
 800b11e:	f10d 0808 	add.w	r8, sp, #8
 800b122:	2401      	movs	r4, #1
 800b124:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800b128:	4798      	blx	r3
 800b12a:	f848 0d04 	str.w	r0, [r8, #-4]!
 800b12e:	4640      	mov	r0, r8
 800b130:	f7ff ffa6 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b134:	b200      	sxth	r0, r0
 800b136:	1b80      	subs	r0, r0, r6
 800b138:	ea80 79e0 	eor.w	r9, r0, r0, asr #31
 800b13c:	eba9 79e0 	sub.w	r9, r9, r0, asr #31
 800b140:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	@ 0x11e
 800b144:	42a3      	cmp	r3, r4
 800b146:	dd1b      	ble.n	800b180 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x78>
 800b148:	682b      	ldr	r3, [r5, #0]
 800b14a:	4621      	mov	r1, r4
 800b14c:	4628      	mov	r0, r5
 800b14e:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800b152:	4798      	blx	r3
 800b154:	9001      	str	r0, [sp, #4]
 800b156:	4640      	mov	r0, r8
 800b158:	f7ff ff92 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b15c:	b200      	sxth	r0, r0
 800b15e:	1b80      	subs	r0, r0, r6
 800b160:	2800      	cmp	r0, #0
 800b162:	bfb8      	it	lt
 800b164:	4240      	neglt	r0, r0
 800b166:	4548      	cmp	r0, r9
 800b168:	bf38      	it	cc
 800b16a:	803c      	strhcc	r4, [r7, #0]
 800b16c:	f104 0401 	add.w	r4, r4, #1
 800b170:	bf38      	it	cc
 800b172:	4681      	movcc	r9, r0
 800b174:	b224      	sxth	r4, r4
 800b176:	e7e3      	b.n	800b140 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x38>
 800b178:	4618      	mov	r0, r3
 800b17a:	b003      	add	sp, #12
 800b17c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b180:	2001      	movs	r0, #1
 800b182:	e7fa      	b.n	800b17a <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x72>

0800b184 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800b184:	f8a0 3118 	strh.w	r3, [r0, #280]	@ 0x118
 800b188:	f9bd 3000 	ldrsh.w	r3, [sp]
 800b18c:	f8a0 1114 	strh.w	r1, [r0, #276]	@ 0x114
 800b190:	f8a0 2116 	strh.w	r2, [r0, #278]	@ 0x116
 800b194:	f8a0 311a 	strh.w	r3, [r0, #282]	@ 0x11a
 800b198:	4770      	bx	lr

0800b19a <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800b19a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b19c:	4604      	mov	r4, r0
 800b19e:	3038      	adds	r0, #56	@ 0x38
 800b1a0:	460d      	mov	r5, r1
 800b1a2:	f7fe f815 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b1a6:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	@ 0x42
 800b1aa:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800b1ae:	4628      	mov	r0, r5
 800b1b0:	9200      	str	r2, [sp, #0]
 800b1b2:	2200      	movs	r2, #0
 800b1b4:	4611      	mov	r1, r2
 800b1b6:	f7f7 fe9e 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b1ba:	b003      	add	sp, #12
 800b1bc:	bd30      	pop	{r4, r5, pc}

0800b1be <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800b1be:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b1c0:	4604      	mov	r4, r0
 800b1c2:	3064      	adds	r0, #100	@ 0x64
 800b1c4:	460d      	mov	r5, r1
 800b1c6:	f7fe f803 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b1ca:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	@ 0x6e
 800b1ce:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	@ 0x6c
 800b1d2:	4628      	mov	r0, r5
 800b1d4:	9200      	str	r2, [sp, #0]
 800b1d6:	2200      	movs	r2, #0
 800b1d8:	4611      	mov	r1, r2
 800b1da:	f7f7 fe8c 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b1de:	b003      	add	sp, #12
 800b1e0:	bd30      	pop	{r4, r5, pc}

0800b1e2 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800b1e2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b1e4:	4604      	mov	r4, r0
 800b1e6:	30e8      	adds	r0, #232	@ 0xe8
 800b1e8:	460d      	mov	r5, r1
 800b1ea:	f7fd fff1 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b1ee:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	@ 0xf2
 800b1f2:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	@ 0xf0
 800b1f6:	4628      	mov	r0, r5
 800b1f8:	9200      	str	r2, [sp, #0]
 800b1fa:	2200      	movs	r2, #0
 800b1fc:	4611      	mov	r1, r2
 800b1fe:	f7f7 fe7a 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b202:	b003      	add	sp, #12
 800b204:	bd30      	pop	{r4, r5, pc}

0800b206 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800b206:	b538      	push	{r3, r4, r5, lr}
 800b208:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 800b20c:	460d      	mov	r5, r1
 800b20e:	428b      	cmp	r3, r1
 800b210:	dd08      	ble.n	800b224 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800b212:	6e04      	ldr	r4, [r0, #96]	@ 0x60
 800b214:	b134      	cbz	r4, 800b224 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800b216:	6823      	ldr	r3, [r4, #0]
 800b218:	4620      	mov	r0, r4
 800b21a:	4629      	mov	r1, r5
 800b21c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b21e:	4798      	blx	r3
 800b220:	69a4      	ldr	r4, [r4, #24]
 800b222:	e7f7      	b.n	800b214 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800b224:	bd38      	pop	{r3, r4, r5, pc}

0800b226 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800b226:	b570      	push	{r4, r5, r6, lr}
 800b228:	4606      	mov	r6, r0
 800b22a:	460d      	mov	r5, r1
 800b22c:	f8d0 40e4 	ldr.w	r4, [r0, #228]	@ 0xe4
 800b230:	b134      	cbz	r4, 800b240 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800b232:	6823      	ldr	r3, [r4, #0]
 800b234:	4620      	mov	r0, r4
 800b236:	4629      	mov	r1, r5
 800b238:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b23a:	4798      	blx	r3
 800b23c:	69a4      	ldr	r4, [r4, #24]
 800b23e:	e7f7      	b.n	800b230 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800b240:	f8d6 4110 	ldr.w	r4, [r6, #272]	@ 0x110
 800b244:	b134      	cbz	r4, 800b254 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800b246:	6823      	ldr	r3, [r4, #0]
 800b248:	4620      	mov	r0, r4
 800b24a:	4629      	mov	r1, r5
 800b24c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b24e:	4798      	blx	r3
 800b250:	69a4      	ldr	r4, [r4, #24]
 800b252:	e7f7      	b.n	800b244 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800b254:	bd70      	pop	{r4, r5, r6, pc}

0800b256 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800b256:	b538      	push	{r3, r4, r5, lr}
 800b258:	4604      	mov	r4, r0
 800b25a:	2500      	movs	r5, #0
 800b25c:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800b260:	42ab      	cmp	r3, r5
 800b262:	db05      	blt.n	800b270 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800b264:	b229      	sxth	r1, r5
 800b266:	4620      	mov	r0, r4
 800b268:	f7ff ffdd 	bl	800b226 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800b26c:	3501      	adds	r5, #1
 800b26e:	e7f5      	b.n	800b25c <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800b270:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 800b274:	f004 ff8b 	bl	801018e <_ZNK8touchgfx8Drawable10invalidateEv>
 800b278:	f104 00e8 	add.w	r0, r4, #232	@ 0xe8
 800b27c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b280:	f004 bf85 	b.w	801018e <_ZNK8touchgfx8Drawable10invalidateEv>

0800b284 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800b284:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b286:	4604      	mov	r4, r0
 800b288:	6e05      	ldr	r5, [r0, #96]	@ 0x60
 800b28a:	b15d      	cbz	r5, 800b2a4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800b28c:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	@ 0x42
 800b290:	4628      	mov	r0, r5
 800b292:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800b296:	9200      	str	r2, [sp, #0]
 800b298:	2200      	movs	r2, #0
 800b29a:	4611      	mov	r1, r2
 800b29c:	f7f7 fe2b 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b2a0:	69ad      	ldr	r5, [r5, #24]
 800b2a2:	e7f2      	b.n	800b28a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800b2a4:	f8d4 50e4 	ldr.w	r5, [r4, #228]	@ 0xe4
 800b2a8:	b15d      	cbz	r5, 800b2c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800b2aa:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	@ 0xc6
 800b2ae:	4628      	mov	r0, r5
 800b2b0:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	@ 0xc4
 800b2b4:	9200      	str	r2, [sp, #0]
 800b2b6:	2200      	movs	r2, #0
 800b2b8:	4611      	mov	r1, r2
 800b2ba:	f7f7 fe1c 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b2be:	69ad      	ldr	r5, [r5, #24]
 800b2c0:	e7f2      	b.n	800b2a8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800b2c2:	f8d4 508c 	ldr.w	r5, [r4, #140]	@ 0x8c
 800b2c6:	b15d      	cbz	r5, 800b2e0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800b2c8:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	@ 0x6e
 800b2cc:	4628      	mov	r0, r5
 800b2ce:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	@ 0x6c
 800b2d2:	9200      	str	r2, [sp, #0]
 800b2d4:	2200      	movs	r2, #0
 800b2d6:	4611      	mov	r1, r2
 800b2d8:	f7f7 fe0d 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b2dc:	69ad      	ldr	r5, [r5, #24]
 800b2de:	e7f2      	b.n	800b2c6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800b2e0:	f8d4 50b8 	ldr.w	r5, [r4, #184]	@ 0xb8
 800b2e4:	b15d      	cbz	r5, 800b2fe <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800b2e6:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	@ 0x9a
 800b2ea:	4628      	mov	r0, r5
 800b2ec:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	@ 0x98
 800b2f0:	9200      	str	r2, [sp, #0]
 800b2f2:	2200      	movs	r2, #0
 800b2f4:	4611      	mov	r1, r2
 800b2f6:	f7f7 fdfe 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b2fa:	69ad      	ldr	r5, [r5, #24]
 800b2fc:	e7f2      	b.n	800b2e4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800b2fe:	f8d4 5110 	ldr.w	r5, [r4, #272]	@ 0x110
 800b302:	b15d      	cbz	r5, 800b31c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800b304:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	@ 0xf2
 800b308:	4628      	mov	r0, r5
 800b30a:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	@ 0xf0
 800b30e:	9200      	str	r2, [sp, #0]
 800b310:	2200      	movs	r2, #0
 800b312:	4611      	mov	r1, r2
 800b314:	f7f7 fdef 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b318:	69ad      	ldr	r5, [r5, #24]
 800b31a:	e7f2      	b.n	800b302 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800b31c:	6823      	ldr	r3, [r4, #0]
 800b31e:	4620      	mov	r0, r4
 800b320:	695b      	ldr	r3, [r3, #20]
 800b322:	b003      	add	sp, #12
 800b324:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b328:	4718      	bx	r3

0800b32a <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800b32a:	b430      	push	{r4, r5}
 800b32c:	b28a      	uxth	r2, r1
 800b32e:	f8b0 4098 	ldrh.w	r4, [r0, #152]	@ 0x98
 800b332:	f8a0 10c4 	strh.w	r1, [r0, #196]	@ 0xc4
 800b336:	1b15      	subs	r5, r2, r4
 800b338:	f8a0 10f0 	strh.w	r1, [r0, #240]	@ 0xf0
 800b33c:	8101      	strh	r1, [r0, #8]
 800b33e:	f8a0 5094 	strh.w	r5, [r0, #148]	@ 0x94
 800b342:	f8b0 506c 	ldrh.w	r5, [r0, #108]	@ 0x6c
 800b346:	442c      	add	r4, r5
 800b348:	1b12      	subs	r2, r2, r4
 800b34a:	bc30      	pop	{r4, r5}
 800b34c:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800b350:	f7ff bf98 	b.w	800b284 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800b354 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800b354:	b430      	push	{r4, r5}
 800b356:	b28a      	uxth	r2, r1
 800b358:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	@ 0xf2
 800b35c:	f8a0 106e 	strh.w	r1, [r0, #110]	@ 0x6e
 800b360:	1b15      	subs	r5, r2, r4
 800b362:	f8a0 109a 	strh.w	r1, [r0, #154]	@ 0x9a
 800b366:	8141      	strh	r1, [r0, #10]
 800b368:	f8a0 50ee 	strh.w	r5, [r0, #238]	@ 0xee
 800b36c:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	@ 0xc6
 800b370:	442c      	add	r4, r5
 800b372:	1b12      	subs	r2, r2, r4
 800b374:	bc30      	pop	{r4, r5}
 800b376:	f8a0 2042 	strh.w	r2, [r0, #66]	@ 0x42
 800b37a:	f7ff bf83 	b.w	800b284 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800b37e <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800b37e:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800b382:	fa1f fa83 	uxth.w	sl, r3
 800b386:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	@ 0x28
 800b38a:	4615      	mov	r5, r2
 800b38c:	4699      	mov	r9, r3
 800b38e:	fa1f f887 	uxth.w	r8, r7
 800b392:	8903      	ldrh	r3, [r0, #8]
 800b394:	4452      	add	r2, sl
 800b396:	4604      	mov	r4, r0
 800b398:	8940      	ldrh	r0, [r0, #10]
 800b39a:	460e      	mov	r6, r1
 800b39c:	1a9b      	subs	r3, r3, r2
 800b39e:	eb08 0201 	add.w	r2, r8, r1
 800b3a2:	1a80      	subs	r0, r0, r2
 800b3a4:	b21b      	sxth	r3, r3
 800b3a6:	460a      	mov	r2, r1
 800b3a8:	4629      	mov	r1, r5
 800b3aa:	b200      	sxth	r0, r0
 800b3ac:	9000      	str	r0, [sp, #0]
 800b3ae:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 800b3b2:	f7f7 fda0 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b3b6:	2200      	movs	r2, #0
 800b3b8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800b3bc:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 800b3c0:	4611      	mov	r1, r2
 800b3c2:	9600      	str	r6, [sp, #0]
 800b3c4:	f7f7 fd97 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b3c8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b3cc:	2200      	movs	r2, #0
 800b3ce:	f104 0064 	add.w	r0, r4, #100	@ 0x64
 800b3d2:	9300      	str	r3, [sp, #0]
 800b3d4:	462b      	mov	r3, r5
 800b3d6:	4611      	mov	r1, r2
 800b3d8:	f7f7 fd8d 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b3dc:	8921      	ldrh	r1, [r4, #8]
 800b3de:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b3e2:	f104 0090 	add.w	r0, r4, #144	@ 0x90
 800b3e6:	eba1 010a 	sub.w	r1, r1, sl
 800b3ea:	2200      	movs	r2, #0
 800b3ec:	9300      	str	r3, [sp, #0]
 800b3ee:	464b      	mov	r3, r9
 800b3f0:	b209      	sxth	r1, r1
 800b3f2:	f7f7 fd80 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b3f6:	8962      	ldrh	r2, [r4, #10]
 800b3f8:	f104 00e8 	add.w	r0, r4, #232	@ 0xe8
 800b3fc:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800b400:	eba2 0208 	sub.w	r2, r2, r8
 800b404:	9700      	str	r7, [sp, #0]
 800b406:	2100      	movs	r1, #0
 800b408:	b212      	sxth	r2, r2
 800b40a:	f7f7 fd74 	bl	8002ef6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b40e:	4620      	mov	r0, r4
 800b410:	b002      	add	sp, #8
 800b412:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b416:	f7ff bf35 	b.w	800b284 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>
	...

0800b41c <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800b41c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b420:	b085      	sub	sp, #20
 800b422:	4604      	mov	r4, r0
 800b424:	2601      	movs	r6, #1
 800b426:	2500      	movs	r5, #0
 800b428:	9103      	str	r1, [sp, #12]
 800b42a:	f7ff fe0f 	bl	800b04c <_ZN8touchgfx9ContainerC1Ev>
 800b42e:	4b2c      	ldr	r3, [pc, #176]	@ (800b4e0 <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800b430:	f104 0b38 	add.w	fp, r4, #56	@ 0x38
 800b434:	f104 0964 	add.w	r9, r4, #100	@ 0x64
 800b438:	f104 0890 	add.w	r8, r4, #144	@ 0x90
 800b43c:	6023      	str	r3, [r4, #0]
 800b43e:	23ff      	movs	r3, #255	@ 0xff
 800b440:	4658      	mov	r0, fp
 800b442:	f104 0abc 	add.w	sl, r4, #188	@ 0xbc
 800b446:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
 800b44a:	f104 07e8 	add.w	r7, r4, #232	@ 0xe8
 800b44e:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800b452:	f7ff fdfb 	bl	800b04c <_ZN8touchgfx9ContainerC1Ev>
 800b456:	4648      	mov	r0, r9
 800b458:	f7ff fdf8 	bl	800b04c <_ZN8touchgfx9ContainerC1Ev>
 800b45c:	4640      	mov	r0, r8
 800b45e:	f7ff fdf5 	bl	800b04c <_ZN8touchgfx9ContainerC1Ev>
 800b462:	4650      	mov	r0, sl
 800b464:	f7ff fdf2 	bl	800b04c <_ZN8touchgfx9ContainerC1Ev>
 800b468:	4638      	mov	r0, r7
 800b46a:	f7ff fdef 	bl	800b04c <_ZN8touchgfx9ContainerC1Ev>
 800b46e:	9903      	ldr	r1, [sp, #12]
 800b470:	4620      	mov	r0, r4
 800b472:	f8c4 5114 	str.w	r5, [r4, #276]	@ 0x114
 800b476:	f8a4 111c 	strh.w	r1, [r4, #284]	@ 0x11c
 800b47a:	4659      	mov	r1, fp
 800b47c:	f8c4 5118 	str.w	r5, [r4, #280]	@ 0x118
 800b480:	f8a4 511e 	strh.w	r5, [r4, #286]	@ 0x11e
 800b484:	f8a4 5120 	strh.w	r5, [r4, #288]	@ 0x120
 800b488:	f8c4 5124 	str.w	r5, [r4, #292]	@ 0x124
 800b48c:	f8c4 5128 	str.w	r5, [r4, #296]	@ 0x128
 800b490:	f8c4 512c 	str.w	r5, [r4, #300]	@ 0x12c
 800b494:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800b498:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800b49c:	f8c4 5138 	str.w	r5, [r4, #312]	@ 0x138
 800b4a0:	f7fd fe96 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b4a4:	4651      	mov	r1, sl
 800b4a6:	4620      	mov	r0, r4
 800b4a8:	f7fd fe92 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b4ac:	4649      	mov	r1, r9
 800b4ae:	4620      	mov	r0, r4
 800b4b0:	f7fd fe8e 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b4b4:	4641      	mov	r1, r8
 800b4b6:	4620      	mov	r0, r4
 800b4b8:	f7fd fe8a 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b4bc:	4639      	mov	r1, r7
 800b4be:	4620      	mov	r0, r4
 800b4c0:	f7fd fe86 	bl	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b4c4:	4620      	mov	r0, r4
 800b4c6:	9500      	str	r5, [sp, #0]
 800b4c8:	462b      	mov	r3, r5
 800b4ca:	462a      	mov	r2, r5
 800b4cc:	4629      	mov	r1, r5
 800b4ce:	f7ff ff56 	bl	800b37e <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800b4d2:	4620      	mov	r0, r4
 800b4d4:	f884 6024 	strb.w	r6, [r4, #36]	@ 0x24
 800b4d8:	b005      	add	sp, #20
 800b4da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b4de:	bf00      	nop
 800b4e0:	08023380 	.word	0x08023380

0800b4e4 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800b4e4:	4291      	cmp	r1, r2
 800b4e6:	4613      	mov	r3, r2
 800b4e8:	d003      	beq.n	800b4f2 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800b4ea:	460a      	mov	r2, r1
 800b4ec:	4619      	mov	r1, r3
 800b4ee:	f005 b818 	b.w	8010522 <_ZN8touchgfx6muldivElll>
 800b4f2:	4770      	bx	lr

0800b4f4 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800b4f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b4f8:	6803      	ldr	r3, [r0, #0]
 800b4fa:	460d      	mov	r5, r1
 800b4fc:	4604      	mov	r4, r0
 800b4fe:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800b502:	4798      	blx	r3
 800b504:	42a8      	cmp	r0, r5
 800b506:	4606      	mov	r6, r0
 800b508:	d024      	beq.n	800b554 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800b50a:	6823      	ldr	r3, [r4, #0]
 800b50c:	4601      	mov	r1, r0
 800b50e:	462a      	mov	r2, r5
 800b510:	f8d4 012c 	ldr.w	r0, [r4, #300]	@ 0x12c
 800b514:	f8d3 70a4 	ldr.w	r7, [r3, #164]	@ 0xa4
 800b518:	f7ff ffe4 	bl	800b4e4 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800b51c:	4680      	mov	r8, r0
 800b51e:	462a      	mov	r2, r5
 800b520:	4631      	mov	r1, r6
 800b522:	f8d4 0130 	ldr.w	r0, [r4, #304]	@ 0x130
 800b526:	f7ff ffdd 	bl	800b4e4 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800b52a:	4641      	mov	r1, r8
 800b52c:	4602      	mov	r2, r0
 800b52e:	4620      	mov	r0, r4
 800b530:	47b8      	blx	r7
 800b532:	462a      	mov	r2, r5
 800b534:	4631      	mov	r1, r6
 800b536:	f8d4 013c 	ldr.w	r0, [r4, #316]	@ 0x13c
 800b53a:	f7ff ffd3 	bl	800b4e4 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800b53e:	462a      	mov	r2, r5
 800b540:	f8c4 013c 	str.w	r0, [r4, #316]	@ 0x13c
 800b544:	4631      	mov	r1, r6
 800b546:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 800b54a:	f7ff ffcb 	bl	800b4e4 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800b54e:	6325      	str	r5, [r4, #48]	@ 0x30
 800b550:	f8c4 0140 	str.w	r0, [r4, #320]	@ 0x140
 800b554:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b558 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800b558:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b55c:	4604      	mov	r4, r0
 800b55e:	460f      	mov	r7, r1
 800b560:	b1b2      	cbz	r2, 800b590 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x38>
 800b562:	6803      	ldr	r3, [r0, #0]
 800b564:	2600      	movs	r6, #0
 800b566:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800b56a:	4798      	blx	r3
 800b56c:	4681      	mov	r9, r0
 800b56e:	b235      	sxth	r5, r6
 800b570:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800b574:	3601      	adds	r6, #1
 800b576:	42ab      	cmp	r3, r5
 800b578:	dd0a      	ble.n	800b590 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x38>
 800b57a:	f8d4 8144 	ldr.w	r8, [r4, #324]	@ 0x144
 800b57e:	463a      	mov	r2, r7
 800b580:	4649      	mov	r1, r9
 800b582:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800b586:	f7ff ffad 	bl	800b4e4 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800b58a:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800b58e:	e7ee      	b.n	800b56e <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800b590:	6367      	str	r7, [r4, #52]	@ 0x34
 800b592:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800b596 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800b596:	b570      	push	{r4, r5, r6, lr}
 800b598:	6803      	ldr	r3, [r0, #0]
 800b59a:	4604      	mov	r4, r0
 800b59c:	460d      	mov	r5, r1
 800b59e:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 800b5a2:	4798      	blx	r3
 800b5a4:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 800b5a8:	4629      	mov	r1, r5
 800b5aa:	4620      	mov	r0, r4
 800b5ac:	3301      	adds	r3, #1
 800b5ae:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
 800b5b2:	6823      	ldr	r3, [r4, #0]
 800b5b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b5b8:	f8d3 317c 	ldr.w	r3, [r3, #380]	@ 0x17c
 800b5bc:	4718      	bx	r3

0800b5be <_ZN8touchgfx16GraphElementLineD1Ev>:
 800b5be:	4770      	bx	lr

0800b5c0 <_ZN8touchgfx16GraphElementLineD0Ev>:
 800b5c0:	b510      	push	{r4, lr}
 800b5c2:	4604      	mov	r4, r0
 800b5c4:	2130      	movs	r1, #48	@ 0x30
 800b5c6:	f014 fdc2 	bl	802014e <_ZdlPvj>
 800b5ca:	4620      	mov	r0, r4
 800b5cc:	bd10      	pop	{r4, pc}

0800b5ce <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800b5ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b5d0:	4604      	mov	r4, r0
 800b5d2:	4608      	mov	r0, r1
 800b5d4:	460d      	mov	r5, r1
 800b5d6:	f7fd ffc2 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 800b5da:	b978      	cbnz	r0, 800b5fc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800b5dc:	4620      	mov	r0, r4
 800b5de:	f7fd ffbe 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 800b5e2:	f9b5 6000 	ldrsh.w	r6, [r5]
 800b5e6:	b150      	cbz	r0, 800b5fe <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800b5e8:	8026      	strh	r6, [r4, #0]
 800b5ea:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800b5ee:	8063      	strh	r3, [r4, #2]
 800b5f0:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800b5f4:	80a3      	strh	r3, [r4, #4]
 800b5f6:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b5fa:	80e3      	strh	r3, [r4, #6]
 800b5fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b5fe:	f9b4 1000 	ldrsh.w	r1, [r4]
 800b602:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800b606:	42b1      	cmp	r1, r6
 800b608:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800b60c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800b610:	460f      	mov	r7, r1
 800b612:	88ed      	ldrh	r5, [r5, #6]
 800b614:	bfa8      	it	ge
 800b616:	4637      	movge	r7, r6
 800b618:	4293      	cmp	r3, r2
 800b61a:	4618      	mov	r0, r3
 800b61c:	4466      	add	r6, ip
 800b61e:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800b622:	bfa8      	it	ge
 800b624:	4610      	movge	r0, r2
 800b626:	442a      	add	r2, r5
 800b628:	88e5      	ldrh	r5, [r4, #6]
 800b62a:	4461      	add	r1, ip
 800b62c:	b236      	sxth	r6, r6
 800b62e:	8027      	strh	r7, [r4, #0]
 800b630:	442b      	add	r3, r5
 800b632:	b209      	sxth	r1, r1
 800b634:	b212      	sxth	r2, r2
 800b636:	8060      	strh	r0, [r4, #2]
 800b638:	b21b      	sxth	r3, r3
 800b63a:	428e      	cmp	r6, r1
 800b63c:	bfac      	ite	ge
 800b63e:	ebc7 0106 	rsbge	r1, r7, r6
 800b642:	ebc7 0101 	rsblt	r1, r7, r1
 800b646:	429a      	cmp	r2, r3
 800b648:	bfac      	ite	ge
 800b64a:	ebc0 0202 	rsbge	r2, r0, r2
 800b64e:	ebc0 0203 	rsblt	r2, r0, r3
 800b652:	80a1      	strh	r1, [r4, #4]
 800b654:	80e2      	strh	r2, [r4, #6]
 800b656:	e7d1      	b.n	800b5fc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800b658 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800b658:	6800      	ldr	r0, [r0, #0]
 800b65a:	2800      	cmp	r0, #0
 800b65c:	bfb9      	ittee	lt
 800b65e:	2320      	movlt	r3, #32
 800b660:	fb90 f0f3 	sdivlt	r0, r0, r3
 800b664:	301f      	addge	r0, #31
 800b666:	1140      	asrge	r0, r0, #5
 800b668:	4770      	bx	lr

0800b66a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800b66a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b66e:	6803      	ldr	r3, [r0, #0]
 800b670:	b093      	sub	sp, #76	@ 0x4c
 800b672:	6945      	ldr	r5, [r0, #20]
 800b674:	4604      	mov	r4, r0
 800b676:	460f      	mov	r7, r1
 800b678:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b67a:	2d00      	cmp	r5, #0
 800b67c:	f000 81ad 	beq.w	800b9da <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800b680:	696d      	ldr	r5, [r5, #20]
 800b682:	4798      	blx	r3
 800b684:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800b688:	2b00      	cmp	r3, #0
 800b68a:	d077      	beq.n	800b77c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b68c:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 800b690:	fb13 f000 	smulbb	r0, r3, r0
 800b694:	b283      	uxth	r3, r0
 800b696:	1c58      	adds	r0, r3, #1
 800b698:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800b69c:	1200      	asrs	r0, r0, #8
 800b69e:	d06d      	beq.n	800b77c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b6a0:	b2c3      	uxtb	r3, r0
 800b6a2:	f10d 0840 	add.w	r8, sp, #64	@ 0x40
 800b6a6:	462a      	mov	r2, r5
 800b6a8:	4621      	mov	r1, r4
 800b6aa:	9308      	str	r3, [sp, #32]
 800b6ac:	4640      	mov	r0, r8
 800b6ae:	6823      	ldr	r3, [r4, #0]
 800b6b0:	ae0e      	add	r6, sp, #56	@ 0x38
 800b6b2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800b6b6:	4798      	blx	r3
 800b6b8:	e898 0003 	ldmia.w	r8, {r0, r1}
 800b6bc:	e886 0003 	stmia.w	r6, {r0, r1}
 800b6c0:	4639      	mov	r1, r7
 800b6c2:	4630      	mov	r0, r6
 800b6c4:	f7fd ff08 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 800b6c8:	6823      	ldr	r3, [r4, #0]
 800b6ca:	4629      	mov	r1, r5
 800b6cc:	4620      	mov	r0, r4
 800b6ce:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800b6d2:	4798      	blx	r3
 800b6d4:	6823      	ldr	r3, [r4, #0]
 800b6d6:	4607      	mov	r7, r0
 800b6d8:	4629      	mov	r1, r5
 800b6da:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800b6de:	4620      	mov	r0, r4
 800b6e0:	4798      	blx	r3
 800b6e2:	4681      	mov	r9, r0
 800b6e4:	f894 0038 	ldrb.w	r0, [r4, #56]	@ 0x38
 800b6e8:	4629      	mov	r1, r5
 800b6ea:	0103      	lsls	r3, r0, #4
 800b6ec:	4620      	mov	r0, r4
 800b6ee:	9309      	str	r3, [sp, #36]	@ 0x24
 800b6f0:	6823      	ldr	r3, [r4, #0]
 800b6f2:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800b6f6:	4798      	blx	r3
 800b6f8:	4629      	mov	r1, r5
 800b6fa:	b203      	sxth	r3, r0
 800b6fc:	4620      	mov	r0, r4
 800b6fe:	9306      	str	r3, [sp, #24]
 800b700:	6823      	ldr	r3, [r4, #0]
 800b702:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800b706:	4798      	blx	r3
 800b708:	2f00      	cmp	r7, #0
 800b70a:	b203      	sxth	r3, r0
 800b70c:	9307      	str	r3, [sp, #28]
 800b70e:	d138      	bne.n	800b782 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800b710:	f1b9 0f00 	cmp.w	r9, #0
 800b714:	d132      	bne.n	800b77c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b716:	6823      	ldr	r3, [r4, #0]
 800b718:	464a      	mov	r2, r9
 800b71a:	4629      	mov	r1, r5
 800b71c:	4620      	mov	r0, r4
 800b71e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800b722:	4798      	blx	r3
 800b724:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b726:	1ac0      	subs	r0, r0, r3
 800b728:	9010      	str	r0, [sp, #64]	@ 0x40
 800b72a:	4640      	mov	r0, r8
 800b72c:	f7ff fca8 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b730:	6823      	ldr	r3, [r4, #0]
 800b732:	4607      	mov	r7, r0
 800b734:	4629      	mov	r1, r5
 800b736:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800b73a:	4620      	mov	r0, r4
 800b73c:	4798      	blx	r3
 800b73e:	1a38      	subs	r0, r7, r0
 800b740:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800b744:	fa0f f880 	sxth.w	r8, r0
 800b748:	eb13 0f08 	cmn.w	r3, r8
 800b74c:	d416      	bmi.n	800b77c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b74e:	6823      	ldr	r3, [r4, #0]
 800b750:	4629      	mov	r1, r5
 800b752:	4620      	mov	r0, r4
 800b754:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800b758:	4798      	blx	r3
 800b75a:	4580      	cmp	r8, r0
 800b75c:	da0e      	bge.n	800b77c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b75e:	9a08      	ldr	r2, [sp, #32]
 800b760:	b23f      	sxth	r7, r7
 800b762:	6823      	ldr	r3, [r4, #0]
 800b764:	4631      	mov	r1, r6
 800b766:	9202      	str	r2, [sp, #8]
 800b768:	4620      	mov	r0, r4
 800b76a:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800b76e:	9700      	str	r7, [sp, #0]
 800b770:	9201      	str	r2, [sp, #4]
 800b772:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 800b776:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b77a:	47a8      	blx	r5
 800b77c:	b013      	add	sp, #76	@ 0x4c
 800b77e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b782:	ddfb      	ble.n	800b77c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b784:	6823      	ldr	r3, [r4, #0]
 800b786:	4629      	mov	r1, r5
 800b788:	4620      	mov	r0, r4
 800b78a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800b78e:	4798      	blx	r3
 800b790:	6823      	ldr	r3, [r4, #0]
 800b792:	4683      	mov	fp, r0
 800b794:	4629      	mov	r1, r5
 800b796:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800b79a:	4620      	mov	r0, r4
 800b79c:	4798      	blx	r3
 800b79e:	eba0 030b 	sub.w	r3, r0, fp
 800b7a2:	4680      	mov	r8, r0
 800b7a4:	2b00      	cmp	r3, #0
 800b7a6:	bfb8      	it	lt
 800b7a8:	425b      	neglt	r3, r3
 800b7aa:	fb93 f3f7 	sdiv	r3, r3, r7
 800b7ae:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800b7b2:	dce3      	bgt.n	800b77c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b7b4:	6823      	ldr	r3, [r4, #0]
 800b7b6:	465a      	mov	r2, fp
 800b7b8:	4629      	mov	r1, r5
 800b7ba:	4620      	mov	r0, r4
 800b7bc:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800b7c0:	4798      	blx	r3
 800b7c2:	6823      	ldr	r3, [r4, #0]
 800b7c4:	4606      	mov	r6, r0
 800b7c6:	4642      	mov	r2, r8
 800b7c8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800b7cc:	4629      	mov	r1, r5
 800b7ce:	4620      	mov	r0, r4
 800b7d0:	4798      	blx	r3
 800b7d2:	42b0      	cmp	r0, r6
 800b7d4:	bfa2      	ittt	ge
 800b7d6:	4643      	movge	r3, r8
 800b7d8:	46d8      	movge	r8, fp
 800b7da:	469b      	movge	fp, r3
 800b7dc:	fb98 f6f7 	sdiv	r6, r8, r7
 800b7e0:	fb9b f2f7 	sdiv	r2, fp, r7
 800b7e4:	45d8      	cmp	r8, fp
 800b7e6:	bfac      	ite	ge
 800b7e8:	f04f 33ff 	movge.w	r3, #4294967295
 800b7ec:	2301      	movlt	r3, #1
 800b7ee:	1af6      	subs	r6, r6, r3
 800b7f0:	441a      	add	r2, r3
 800b7f2:	4296      	cmp	r6, r2
 800b7f4:	bfac      	ite	ge
 800b7f6:	f04f 3aff 	movge.w	sl, #4294967295
 800b7fa:	f04f 0a01 	movlt.w	sl, #1
 800b7fe:	f1b9 0f00 	cmp.w	r9, #0
 800b802:	d13e      	bne.n	800b882 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800b804:	fb07 fb0a 	mul.w	fp, r7, sl
 800b808:	eb0a 0802 	add.w	r8, sl, r2
 800b80c:	4377      	muls	r7, r6
 800b80e:	45b0      	cmp	r8, r6
 800b810:	d0b4      	beq.n	800b77c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b812:	6823      	ldr	r3, [r4, #0]
 800b814:	463a      	mov	r2, r7
 800b816:	4629      	mov	r1, r5
 800b818:	4620      	mov	r0, r4
 800b81a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800b81e:	4798      	blx	r3
 800b820:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b822:	1ac0      	subs	r0, r0, r3
 800b824:	9010      	str	r0, [sp, #64]	@ 0x40
 800b826:	a810      	add	r0, sp, #64	@ 0x40
 800b828:	f7ff fc2a 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b82c:	6823      	ldr	r3, [r4, #0]
 800b82e:	4681      	mov	r9, r0
 800b830:	4629      	mov	r1, r5
 800b832:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800b836:	4620      	mov	r0, r4
 800b838:	4798      	blx	r3
 800b83a:	eba9 0000 	sub.w	r0, r9, r0
 800b83e:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800b842:	b203      	sxth	r3, r0
 800b844:	42da      	cmn	r2, r3
 800b846:	9304      	str	r3, [sp, #16]
 800b848:	d418      	bmi.n	800b87c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800b84a:	6822      	ldr	r2, [r4, #0]
 800b84c:	4629      	mov	r1, r5
 800b84e:	4620      	mov	r0, r4
 800b850:	f8d2 20a8 	ldr.w	r2, [r2, #168]	@ 0xa8
 800b854:	4790      	blx	r2
 800b856:	9b04      	ldr	r3, [sp, #16]
 800b858:	4283      	cmp	r3, r0
 800b85a:	da0f      	bge.n	800b87c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800b85c:	9b08      	ldr	r3, [sp, #32]
 800b85e:	a90e      	add	r1, sp, #56	@ 0x38
 800b860:	6822      	ldr	r2, [r4, #0]
 800b862:	4620      	mov	r0, r4
 800b864:	9302      	str	r3, [sp, #8]
 800b866:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800b86a:	9301      	str	r3, [sp, #4]
 800b86c:	fa0f f389 	sxth.w	r3, r9
 800b870:	9300      	str	r3, [sp, #0]
 800b872:	f8d2 9088 	ldr.w	r9, [r2, #136]	@ 0x88
 800b876:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b87a:	47c8      	blx	r9
 800b87c:	4456      	add	r6, sl
 800b87e:	445f      	add	r7, fp
 800b880:	e7c5      	b.n	800b80e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800b882:	fb98 f8f9 	sdiv	r8, r8, r9
 800b886:	eba8 0203 	sub.w	r2, r8, r3
 800b88a:	4629      	mov	r1, r5
 800b88c:	4620      	mov	r0, r4
 800b88e:	9204      	str	r2, [sp, #16]
 800b890:	fb9b f8f9 	sdiv	r8, fp, r9
 800b894:	4498      	add	r8, r3
 800b896:	f10d 0b48 	add.w	fp, sp, #72	@ 0x48
 800b89a:	4542      	cmp	r2, r8
 800b89c:	bfac      	ite	ge
 800b89e:	f04f 33ff 	movge.w	r3, #4294967295
 800b8a2:	2301      	movlt	r3, #1
 800b8a4:	fb02 f209 	mul.w	r2, r2, r9
 800b8a8:	930a      	str	r3, [sp, #40]	@ 0x28
 800b8aa:	6823      	ldr	r3, [r4, #0]
 800b8ac:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800b8b0:	4798      	blx	r3
 800b8b2:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800b8b6:	4658      	mov	r0, fp
 800b8b8:	f7ff fbe2 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b8bc:	fb06 f207 	mul.w	r2, r6, r7
 800b8c0:	b203      	sxth	r3, r0
 800b8c2:	4629      	mov	r1, r5
 800b8c4:	4620      	mov	r0, r4
 800b8c6:	9305      	str	r3, [sp, #20]
 800b8c8:	6823      	ldr	r3, [r4, #0]
 800b8ca:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800b8ce:	4798      	blx	r3
 800b8d0:	9010      	str	r0, [sp, #64]	@ 0x40
 800b8d2:	4658      	mov	r0, fp
 800b8d4:	f7ff fbd4 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b8d8:	fb07 f20a 	mul.w	r2, r7, sl
 800b8dc:	b203      	sxth	r3, r0
 800b8de:	920b      	str	r2, [sp, #44]	@ 0x2c
 800b8e0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800b8e2:	4442      	add	r2, r8
 800b8e4:	920c      	str	r2, [sp, #48]	@ 0x30
 800b8e6:	9a05      	ldr	r2, [sp, #20]
 800b8e8:	429a      	cmp	r2, r3
 800b8ea:	dc16      	bgt.n	800b91a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800b8ec:	eb06 080a 	add.w	r8, r6, sl
 800b8f0:	fb07 f808 	mul.w	r8, r7, r8
 800b8f4:	9a05      	ldr	r2, [sp, #20]
 800b8f6:	429a      	cmp	r2, r3
 800b8f8:	db54      	blt.n	800b9a4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800b8fa:	6823      	ldr	r3, [r4, #0]
 800b8fc:	4642      	mov	r2, r8
 800b8fe:	4629      	mov	r1, r5
 800b900:	4620      	mov	r0, r4
 800b902:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800b906:	4456      	add	r6, sl
 800b908:	4798      	blx	r3
 800b90a:	9010      	str	r0, [sp, #64]	@ 0x40
 800b90c:	4658      	mov	r0, fp
 800b90e:	f7ff fbb7 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b912:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800b914:	b203      	sxth	r3, r0
 800b916:	4490      	add	r8, r2
 800b918:	e7ec      	b.n	800b8f4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800b91a:	6823      	ldr	r3, [r4, #0]
 800b91c:	fb07 f206 	mul.w	r2, r7, r6
 800b920:	4629      	mov	r1, r5
 800b922:	4620      	mov	r0, r4
 800b924:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800b928:	4798      	blx	r3
 800b92a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b92c:	1ac0      	subs	r0, r0, r3
 800b92e:	9010      	str	r0, [sp, #64]	@ 0x40
 800b930:	4658      	mov	r0, fp
 800b932:	f7ff fba5 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b936:	6823      	ldr	r3, [r4, #0]
 800b938:	4680      	mov	r8, r0
 800b93a:	4629      	mov	r1, r5
 800b93c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800b940:	4620      	mov	r0, r4
 800b942:	4798      	blx	r3
 800b944:	eba8 0000 	sub.w	r0, r8, r0
 800b948:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800b94c:	b203      	sxth	r3, r0
 800b94e:	42da      	cmn	r2, r3
 800b950:	930d      	str	r3, [sp, #52]	@ 0x34
 800b952:	d418      	bmi.n	800b986 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800b954:	6822      	ldr	r2, [r4, #0]
 800b956:	4629      	mov	r1, r5
 800b958:	4620      	mov	r0, r4
 800b95a:	f8d2 20a8 	ldr.w	r2, [r2, #168]	@ 0xa8
 800b95e:	4790      	blx	r2
 800b960:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800b962:	4283      	cmp	r3, r0
 800b964:	da0f      	bge.n	800b986 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800b966:	9b08      	ldr	r3, [sp, #32]
 800b968:	a90e      	add	r1, sp, #56	@ 0x38
 800b96a:	6822      	ldr	r2, [r4, #0]
 800b96c:	4620      	mov	r0, r4
 800b96e:	9302      	str	r3, [sp, #8]
 800b970:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800b974:	9301      	str	r3, [sp, #4]
 800b976:	fa0f f388 	sxth.w	r3, r8
 800b97a:	9300      	str	r3, [sp, #0]
 800b97c:	f8d2 8088 	ldr.w	r8, [r2, #136]	@ 0x88
 800b980:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b984:	47c0      	blx	r8
 800b986:	6823      	ldr	r3, [r4, #0]
 800b988:	4456      	add	r6, sl
 800b98a:	4629      	mov	r1, r5
 800b98c:	4620      	mov	r0, r4
 800b98e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800b992:	fb06 f207 	mul.w	r2, r6, r7
 800b996:	4798      	blx	r3
 800b998:	9010      	str	r0, [sp, #64]	@ 0x40
 800b99a:	4658      	mov	r0, fp
 800b99c:	f7ff fb70 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b9a0:	b203      	sxth	r3, r0
 800b9a2:	e7a0      	b.n	800b8e6 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800b9a4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800b9a6:	930d      	str	r3, [sp, #52]	@ 0x34
 800b9a8:	9b04      	ldr	r3, [sp, #16]
 800b9aa:	4413      	add	r3, r2
 800b9ac:	9304      	str	r3, [sp, #16]
 800b9ae:	9a04      	ldr	r2, [sp, #16]
 800b9b0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800b9b2:	4293      	cmp	r3, r2
 800b9b4:	f43f aee2 	beq.w	800b77c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b9b8:	9b04      	ldr	r3, [sp, #16]
 800b9ba:	4629      	mov	r1, r5
 800b9bc:	6822      	ldr	r2, [r4, #0]
 800b9be:	4620      	mov	r0, r4
 800b9c0:	f8d2 80ac 	ldr.w	r8, [r2, #172]	@ 0xac
 800b9c4:	fb03 f209 	mul.w	r2, r3, r9
 800b9c8:	47c0      	blx	r8
 800b9ca:	9010      	str	r0, [sp, #64]	@ 0x40
 800b9cc:	4658      	mov	r0, fp
 800b9ce:	f7ff fb57 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b9d2:	b203      	sxth	r3, r0
 800b9d4:	9305      	str	r3, [sp, #20]
 800b9d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800b9d8:	e785      	b.n	800b8e6 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800b9da:	4798      	blx	r3
 800b9dc:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 800b9e0:	deff      	udf	#255	@ 0xff

0800b9e2 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800b9e2:	b510      	push	{r4, lr}
 800b9e4:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800b9e8:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800b9ec:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800b9f0:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800b9f4:	139b      	asrs	r3, r3, #14
 800b9f6:	13a4      	asrs	r4, r4, #14
 800b9f8:	429c      	cmp	r4, r3
 800b9fa:	bfb8      	it	lt
 800b9fc:	461c      	movlt	r4, r3
 800b9fe:	2c01      	cmp	r4, #1
 800ba00:	dd07      	ble.n	800ba12 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800ba02:	fb91 f1f4 	sdiv	r1, r1, r4
 800ba06:	fb90 f0f4 	sdiv	r0, r0, r4
 800ba0a:	f7ff ffea 	bl	800b9e2 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800ba0e:	4360      	muls	r0, r4
 800ba10:	bd10      	pop	{r4, pc}
 800ba12:	4340      	muls	r0, r0
 800ba14:	fb01 0101 	mla	r1, r1, r1, r0
 800ba18:	2000      	movs	r0, #0
 800ba1a:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
 800ba1e:	bfb4      	ite	lt
 800ba20:	f44f 4380 	movlt.w	r3, #16384	@ 0x4000
 800ba24:	f04f 4380 	movge.w	r3, #1073741824	@ 0x40000000
 800ba28:	18c2      	adds	r2, r0, r3
 800ba2a:	428a      	cmp	r2, r1
 800ba2c:	bf9c      	itt	ls
 800ba2e:	1898      	addls	r0, r3, r2
 800ba30:	1a89      	subls	r1, r1, r2
 800ba32:	089b      	lsrs	r3, r3, #2
 800ba34:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800ba38:	d1f6      	bne.n	800ba28 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800ba3a:	e7e9      	b.n	800ba10 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800ba3c <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800ba3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ba3e:	9906      	ldr	r1, [sp, #24]
 800ba40:	4606      	mov	r6, r0
 800ba42:	461c      	mov	r4, r3
 800ba44:	2020      	movs	r0, #32
 800ba46:	4291      	cmp	r1, r2
 800ba48:	bfbc      	itt	lt
 800ba4a:	9206      	strlt	r2, [sp, #24]
 800ba4c:	460a      	movlt	r2, r1
 800ba4e:	9907      	ldr	r1, [sp, #28]
 800ba50:	428b      	cmp	r3, r1
 800ba52:	bfc4      	itt	gt
 800ba54:	460c      	movgt	r4, r1
 800ba56:	9307      	strgt	r3, [sp, #28]
 800ba58:	fb92 f5f0 	sdiv	r5, r2, r0
 800ba5c:	fb94 f4f0 	sdiv	r4, r4, r0
 800ba60:	a806      	add	r0, sp, #24
 800ba62:	f7ff fdf9 	bl	800b658 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800ba66:	4607      	mov	r7, r0
 800ba68:	a807      	add	r0, sp, #28
 800ba6a:	f7ff fdf5 	bl	800b658 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800ba6e:	1b7a      	subs	r2, r7, r5
 800ba70:	1b00      	subs	r0, r0, r4
 800ba72:	8035      	strh	r5, [r6, #0]
 800ba74:	8074      	strh	r4, [r6, #2]
 800ba76:	80f0      	strh	r0, [r6, #6]
 800ba78:	4630      	mov	r0, r6
 800ba7a:	80b2      	strh	r2, [r6, #4]
 800ba7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ba7e <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800ba7e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ba80:	9c08      	ldr	r4, [sp, #32]
 800ba82:	2602      	movs	r6, #2
 800ba84:	4605      	mov	r5, r0
 800ba86:	3401      	adds	r4, #1
 800ba88:	fb94 f4f6 	sdiv	r4, r4, r6
 800ba8c:	18a6      	adds	r6, r4, r2
 800ba8e:	191f      	adds	r7, r3, r4
 800ba90:	1b12      	subs	r2, r2, r4
 800ba92:	1b1b      	subs	r3, r3, r4
 800ba94:	e9cd 6700 	strd	r6, r7, [sp]
 800ba98:	f7ff ffd0 	bl	800ba3c <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800ba9c:	4628      	mov	r0, r5
 800ba9e:	b003      	add	sp, #12
 800baa0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800baa2 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800baa2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800baa6:	6943      	ldr	r3, [r0, #20]
 800baa8:	b087      	sub	sp, #28
 800baaa:	4606      	mov	r6, r0
 800baac:	460d      	mov	r5, r1
 800baae:	2b00      	cmp	r3, #0
 800bab0:	d072      	beq.n	800bb98 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800bab2:	695c      	ldr	r4, [r3, #20]
 800bab4:	f890 702c 	ldrb.w	r7, [r0, #44]	@ 0x2c
 800bab8:	6823      	ldr	r3, [r4, #0]
 800baba:	4620      	mov	r0, r4
 800babc:	017f      	lsls	r7, r7, #5
 800babe:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800bac2:	4798      	blx	r3
 800bac4:	6823      	ldr	r3, [r4, #0]
 800bac6:	4680      	mov	r8, r0
 800bac8:	4629      	mov	r1, r5
 800baca:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800bace:	4620      	mov	r0, r4
 800bad0:	4798      	blx	r3
 800bad2:	9700      	str	r7, [sp, #0]
 800bad4:	4603      	mov	r3, r0
 800bad6:	4642      	mov	r2, r8
 800bad8:	4631      	mov	r1, r6
 800bada:	a802      	add	r0, sp, #8
 800badc:	f7ff ffcf 	bl	800ba7e <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800bae0:	2d00      	cmp	r5, #0
 800bae2:	dd1b      	ble.n	800bb1c <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800bae4:	f105 38ff 	add.w	r8, r5, #4294967295
 800bae8:	6823      	ldr	r3, [r4, #0]
 800baea:	4620      	mov	r0, r4
 800baec:	fa0f f888 	sxth.w	r8, r8
 800baf0:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800baf4:	4641      	mov	r1, r8
 800baf6:	4798      	blx	r3
 800baf8:	6823      	ldr	r3, [r4, #0]
 800bafa:	4681      	mov	r9, r0
 800bafc:	4641      	mov	r1, r8
 800bafe:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800bb02:	4620      	mov	r0, r4
 800bb04:	4798      	blx	r3
 800bb06:	4631      	mov	r1, r6
 800bb08:	4603      	mov	r3, r0
 800bb0a:	9700      	str	r7, [sp, #0]
 800bb0c:	a804      	add	r0, sp, #16
 800bb0e:	464a      	mov	r2, r9
 800bb10:	f7ff ffb5 	bl	800ba7e <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800bb14:	a904      	add	r1, sp, #16
 800bb16:	a802      	add	r0, sp, #8
 800bb18:	f7ff fd59 	bl	800b5ce <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bb1c:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800bb20:	3b01      	subs	r3, #1
 800bb22:	429d      	cmp	r5, r3
 800bb24:	da19      	bge.n	800bb5a <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800bb26:	3501      	adds	r5, #1
 800bb28:	6823      	ldr	r3, [r4, #0]
 800bb2a:	4620      	mov	r0, r4
 800bb2c:	b22d      	sxth	r5, r5
 800bb2e:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800bb32:	4629      	mov	r1, r5
 800bb34:	4798      	blx	r3
 800bb36:	6823      	ldr	r3, [r4, #0]
 800bb38:	4680      	mov	r8, r0
 800bb3a:	4629      	mov	r1, r5
 800bb3c:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800bb40:	4620      	mov	r0, r4
 800bb42:	4798      	blx	r3
 800bb44:	4631      	mov	r1, r6
 800bb46:	4603      	mov	r3, r0
 800bb48:	9700      	str	r7, [sp, #0]
 800bb4a:	a804      	add	r0, sp, #16
 800bb4c:	4642      	mov	r2, r8
 800bb4e:	f7ff ff96 	bl	800ba7e <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800bb52:	a904      	add	r1, sp, #16
 800bb54:	a802      	add	r0, sp, #8
 800bb56:	f7ff fd3a 	bl	800b5ce <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bb5a:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	@ 0x114
 800bb5e:	f8b4 311a 	ldrh.w	r3, [r4, #282]	@ 0x11a
 800bb62:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	@ 0x40
 800bb66:	18ca      	adds	r2, r1, r3
 800bb68:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 800bb6c:	f8ad 1012 	strh.w	r1, [sp, #18]
 800bb70:	a904      	add	r1, sp, #16
 800bb72:	1a9b      	subs	r3, r3, r2
 800bb74:	2200      	movs	r2, #0
 800bb76:	f8ad 0014 	strh.w	r0, [sp, #20]
 800bb7a:	a802      	add	r0, sp, #8
 800bb7c:	f8ad 2010 	strh.w	r2, [sp, #16]
 800bb80:	f8ad 3016 	strh.w	r3, [sp, #22]
 800bb84:	f7fd fca8 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 800bb88:	6833      	ldr	r3, [r6, #0]
 800bb8a:	a902      	add	r1, sp, #8
 800bb8c:	4630      	mov	r0, r6
 800bb8e:	691b      	ldr	r3, [r3, #16]
 800bb90:	4798      	blx	r3
 800bb92:	b007      	add	sp, #28
 800bb94:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bb98:	681b      	ldr	r3, [r3, #0]
 800bb9a:	deff      	udf	#255	@ 0xff

0800bb9c <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800bb9c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800bba0:	2b00      	cmp	r3, #0
 800bba2:	da05      	bge.n	800bbb0 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800bba4:	b29b      	uxth	r3, r3
 800bba6:	880a      	ldrh	r2, [r1, #0]
 800bba8:	441a      	add	r2, r3
 800bbaa:	425b      	negs	r3, r3
 800bbac:	800a      	strh	r2, [r1, #0]
 800bbae:	808b      	strh	r3, [r1, #4]
 800bbb0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800bbb4:	2b00      	cmp	r3, #0
 800bbb6:	da05      	bge.n	800bbc4 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800bbb8:	b29b      	uxth	r3, r3
 800bbba:	884a      	ldrh	r2, [r1, #2]
 800bbbc:	441a      	add	r2, r3
 800bbbe:	425b      	negs	r3, r3
 800bbc0:	804a      	strh	r2, [r1, #2]
 800bbc2:	80cb      	strh	r3, [r1, #6]
 800bbc4:	4770      	bx	lr

0800bbc6 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800bbc6:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bbc8:	4604      	mov	r4, r0
 800bbca:	460d      	mov	r5, r1
 800bbcc:	6801      	ldr	r1, [r0, #0]
 800bbce:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	@ 0x24
 800bbd2:	9001      	str	r0, [sp, #4]
 800bbd4:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800bbd8:	9000      	str	r0, [sp, #0]
 800bbda:	a802      	add	r0, sp, #8
 800bbdc:	f8d1 6090 	ldr.w	r6, [r1, #144]	@ 0x90
 800bbe0:	4621      	mov	r1, r4
 800bbe2:	47b0      	blx	r6
 800bbe4:	a902      	add	r1, sp, #8
 800bbe6:	4620      	mov	r0, r4
 800bbe8:	f7ff ffd8 	bl	800bb9c <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800bbec:	a802      	add	r0, sp, #8
 800bbee:	4629      	mov	r1, r5
 800bbf0:	f7fd fc72 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 800bbf4:	a802      	add	r0, sp, #8
 800bbf6:	f7fd fcb2 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 800bbfa:	b968      	cbnz	r0, 800bc18 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800bbfc:	6823      	ldr	r3, [r4, #0]
 800bbfe:	a902      	add	r1, sp, #8
 800bc00:	4620      	mov	r0, r4
 800bc02:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bc04:	4798      	blx	r3
 800bc06:	f7f6 fc39 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800bc0a:	6803      	ldr	r3, [r0, #0]
 800bc0c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800bc0e:	a902      	add	r1, sp, #8
 800bc10:	6a1d      	ldr	r5, [r3, #32]
 800bc12:	f89d 3028 	ldrb.w	r3, [sp, #40]	@ 0x28
 800bc16:	47a8      	blx	r5
 800bc18:	b004      	add	sp, #16
 800bc1a:	bd70      	pop	{r4, r5, r6, pc}

0800bc1c <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800bc1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc20:	b08b      	sub	sp, #44	@ 0x2c
 800bc22:	461e      	mov	r6, r3
 800bc24:	460f      	mov	r7, r1
 800bc26:	4615      	mov	r5, r2
 800bc28:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	@ 0x50
 800bc2c:	429e      	cmp	r6, r3
 800bc2e:	9304      	str	r3, [sp, #16]
 800bc30:	d074      	beq.n	800bd1c <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x100>
 800bc32:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800bc36:	4631      	mov	r1, r6
 800bc38:	4610      	mov	r0, r2
 800bc3a:	4634      	mov	r4, r6
 800bc3c:	015b      	lsls	r3, r3, #5
 800bc3e:	9303      	str	r3, [sp, #12]
 800bc40:	6813      	ldr	r3, [r2, #0]
 800bc42:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800bc46:	4798      	blx	r3
 800bc48:	ab0a      	add	r3, sp, #40	@ 0x28
 800bc4a:	f843 0d10 	str.w	r0, [r3, #-16]!
 800bc4e:	4618      	mov	r0, r3
 800bc50:	f7ff fa16 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bc54:	682b      	ldr	r3, [r5, #0]
 800bc56:	4631      	mov	r1, r6
 800bc58:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800bc5c:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800bc60:	4628      	mov	r0, r5
 800bc62:	4798      	blx	r3
 800bc64:	ab0a      	add	r3, sp, #40	@ 0x28
 800bc66:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800bc6a:	4618      	mov	r0, r3
 800bc6c:	f7ff fa08 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bc70:	4641      	mov	r1, r8
 800bc72:	ea4f 1940 	mov.w	r9, r0, lsl #5
 800bc76:	4638      	mov	r0, r7
 800bc78:	464a      	mov	r2, r9
 800bc7a:	f014 f9a7 	bl	801ffcc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800bc7e:	2301      	movs	r3, #1
 800bc80:	9300      	str	r3, [sp, #0]
 800bc82:	4628      	mov	r0, r5
 800bc84:	9b00      	ldr	r3, [sp, #0]
 800bc86:	441c      	add	r4, r3
 800bc88:	682b      	ldr	r3, [r5, #0]
 800bc8a:	b224      	sxth	r4, r4
 800bc8c:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 800bc90:	4621      	mov	r1, r4
 800bc92:	4798      	blx	r3
 800bc94:	9008      	str	r0, [sp, #32]
 800bc96:	a808      	add	r0, sp, #32
 800bc98:	f7ff f9f2 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bc9c:	4621      	mov	r1, r4
 800bc9e:	0143      	lsls	r3, r0, #5
 800bca0:	4628      	mov	r0, r5
 800bca2:	9301      	str	r3, [sp, #4]
 800bca4:	682b      	ldr	r3, [r5, #0]
 800bca6:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 800bcaa:	4798      	blx	r3
 800bcac:	9009      	str	r0, [sp, #36]	@ 0x24
 800bcae:	a809      	add	r0, sp, #36	@ 0x24
 800bcb0:	f7ff f9e6 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bcb4:	0143      	lsls	r3, r0, #5
 800bcb6:	9302      	str	r3, [sp, #8]
 800bcb8:	9b01      	ldr	r3, [sp, #4]
 800bcba:	eba3 0b08 	sub.w	fp, r3, r8
 800bcbe:	9b02      	ldr	r3, [sp, #8]
 800bcc0:	eba3 0a09 	sub.w	sl, r3, r9
 800bcc4:	4658      	mov	r0, fp
 800bcc6:	4651      	mov	r1, sl
 800bcc8:	f7ff fe8b 	bl	800b9e2 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800bccc:	b320      	cbz	r0, 800bd18 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800bcce:	4602      	mov	r2, r0
 800bcd0:	4651      	mov	r1, sl
 800bcd2:	9005      	str	r0, [sp, #20]
 800bcd4:	9803      	ldr	r0, [sp, #12]
 800bcd6:	f004 fc24 	bl	8010522 <_ZN8touchgfx6muldivElll>
 800bcda:	2302      	movs	r3, #2
 800bcdc:	4659      	mov	r1, fp
 800bcde:	fb90 faf3 	sdiv	sl, r0, r3
 800bce2:	9b05      	ldr	r3, [sp, #20]
 800bce4:	9803      	ldr	r0, [sp, #12]
 800bce6:	461a      	mov	r2, r3
 800bce8:	f004 fc1b 	bl	8010522 <_ZN8touchgfx6muldivElll>
 800bcec:	2302      	movs	r3, #2
 800bcee:	eba8 010a 	sub.w	r1, r8, sl
 800bcf2:	fb90 fbf3 	sdiv	fp, r0, r3
 800bcf6:	683b      	ldr	r3, [r7, #0]
 800bcf8:	eb0b 0209 	add.w	r2, fp, r9
 800bcfc:	4638      	mov	r0, r7
 800bcfe:	689b      	ldr	r3, [r3, #8]
 800bd00:	4798      	blx	r3
 800bd02:	683b      	ldr	r3, [r7, #0]
 800bd04:	9a02      	ldr	r2, [sp, #8]
 800bd06:	4638      	mov	r0, r7
 800bd08:	9901      	ldr	r1, [sp, #4]
 800bd0a:	689b      	ldr	r3, [r3, #8]
 800bd0c:	445a      	add	r2, fp
 800bd0e:	eba1 010a 	sub.w	r1, r1, sl
 800bd12:	4798      	blx	r3
 800bd14:	e9dd 8901 	ldrd	r8, r9, [sp, #4]
 800bd18:	42a6      	cmp	r6, r4
 800bd1a:	db02      	blt.n	800bd22 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x106>
 800bd1c:	b00b      	add	sp, #44	@ 0x2c
 800bd1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd22:	9b00      	ldr	r3, [sp, #0]
 800bd24:	9a04      	ldr	r2, [sp, #16]
 800bd26:	42a2      	cmp	r2, r4
 800bd28:	bf08      	it	eq
 800bd2a:	f04f 33ff 	moveq.w	r3, #4294967295
 800bd2e:	e7a7      	b.n	800bc80 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x64>

0800bd30 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800bd30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd34:	6943      	ldr	r3, [r0, #20]
 800bd36:	b0a4      	sub	sp, #144	@ 0x90
 800bd38:	4605      	mov	r5, r0
 800bd3a:	460f      	mov	r7, r1
 800bd3c:	2b00      	cmp	r3, #0
 800bd3e:	d077      	beq.n	800be30 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x100>
 800bd40:	695c      	ldr	r4, [r3, #20]
 800bd42:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 800bd46:	2b01      	cmp	r3, #1
 800bd48:	dc04      	bgt.n	800bd54 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800bd4a:	2401      	movs	r4, #1
 800bd4c:	4620      	mov	r0, r4
 800bd4e:	b024      	add	sp, #144	@ 0x90
 800bd50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bd54:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800bd58:	ae24      	add	r6, sp, #144	@ 0x90
 800bd5a:	011b      	lsls	r3, r3, #4
 800bd5c:	f846 3d74 	str.w	r3, [r6, #-116]!
 800bd60:	4630      	mov	r0, r6
 800bd62:	f7ff fc79 	bl	800b658 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800bd66:	8839      	ldrh	r1, [r7, #0]
 800bd68:	88ba      	ldrh	r2, [r7, #4]
 800bd6a:	b280      	uxth	r0, r0
 800bd6c:	6823      	ldr	r3, [r4, #0]
 800bd6e:	440a      	add	r2, r1
 800bd70:	1a09      	subs	r1, r1, r0
 800bd72:	4402      	add	r2, r0
 800bd74:	f10d 000a 	add.w	r0, sp, #10
 800bd78:	b209      	sxth	r1, r1
 800bd7a:	9000      	str	r0, [sp, #0]
 800bd7c:	b212      	sxth	r2, r2
 800bd7e:	f8d3 8124 	ldr.w	r8, [r3, #292]	@ 0x124
 800bd82:	4620      	mov	r0, r4
 800bd84:	ab02      	add	r3, sp, #8
 800bd86:	47c0      	blx	r8
 800bd88:	2800      	cmp	r0, #0
 800bd8a:	d0de      	beq.n	800bd4a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800bd8c:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	@ 0x114
 800bd90:	f8b4 311a 	ldrh.w	r3, [r4, #282]	@ 0x11a
 800bd94:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	@ 0x40
 800bd98:	18ca      	adds	r2, r1, r3
 800bd9a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 800bd9e:	f8ad 100e 	strh.w	r1, [sp, #14]
 800bda2:	4639      	mov	r1, r7
 800bda4:	1a9b      	subs	r3, r3, r2
 800bda6:	2200      	movs	r2, #0
 800bda8:	f8ad 0010 	strh.w	r0, [sp, #16]
 800bdac:	a803      	add	r0, sp, #12
 800bdae:	f8ad 200c 	strh.w	r2, [sp, #12]
 800bdb2:	f8ad 3012 	strh.w	r3, [sp, #18]
 800bdb6:	f7fd fb8f 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 800bdba:	4629      	mov	r1, r5
 800bdbc:	a805      	add	r0, sp, #20
 800bdbe:	6aaf      	ldr	r7, [r5, #40]	@ 0x28
 800bdc0:	f004 fa80 	bl	80102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bdc4:	682b      	ldr	r3, [r5, #0]
 800bdc6:	4628      	mov	r0, r5
 800bdc8:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800bdca:	4798      	blx	r3
 800bdcc:	ab03      	add	r3, sp, #12
 800bdce:	9000      	str	r0, [sp, #0]
 800bdd0:	aa05      	add	r2, sp, #20
 800bdd2:	4639      	mov	r1, r7
 800bdd4:	4630      	mov	r0, r6
 800bdd6:	f013 ffad 	bl	801fd34 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800bdda:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	@ 0x120
 800bdde:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800bde2:	2f00      	cmp	r7, #0
 800bde4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800bde8:	dd03      	ble.n	800bdf2 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xc2>
 800bdea:	42bb      	cmp	r3, r7
 800bdec:	da01      	bge.n	800bdf2 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xc2>
 800bdee:	42ba      	cmp	r2, r7
 800bdf0:	da11      	bge.n	800be16 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800bdf2:	9200      	str	r2, [sp, #0]
 800bdf4:	4622      	mov	r2, r4
 800bdf6:	4631      	mov	r1, r6
 800bdf8:	4628      	mov	r0, r5
 800bdfa:	f7ff ff0f 	bl	800bc1c <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800bdfe:	f894 102c 	ldrb.w	r1, [r4, #44]	@ 0x2c
 800be02:	4630      	mov	r0, r6
 800be04:	f014 f82a 	bl	801fe5c <_ZN8touchgfx6Canvas6renderEh>
 800be08:	4b0b      	ldr	r3, [pc, #44]	@ (800be38 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x108>)
 800be0a:	4604      	mov	r4, r0
 800be0c:	a80c      	add	r0, sp, #48	@ 0x30
 800be0e:	9307      	str	r3, [sp, #28]
 800be10:	f000 fe3a 	bl	800ca88 <_ZN8touchgfx7OutlineD1Ev>
 800be14:	e79a      	b.n	800bd4c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800be16:	1e7a      	subs	r2, r7, #1
 800be18:	4631      	mov	r1, r6
 800be1a:	4628      	mov	r0, r5
 800be1c:	b212      	sxth	r2, r2
 800be1e:	9200      	str	r2, [sp, #0]
 800be20:	4622      	mov	r2, r4
 800be22:	f7ff fefb 	bl	800bc1c <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800be26:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800be2a:	9300      	str	r3, [sp, #0]
 800be2c:	463b      	mov	r3, r7
 800be2e:	e7e1      	b.n	800bdf4 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xc4>
 800be30:	f8b3 311e 	ldrh.w	r3, [r3, #286]	@ 0x11e
 800be34:	deff      	udf	#255	@ 0xff
 800be36:	bf00      	nop
 800be38:	08023ccc 	.word	0x08023ccc

0800be3c <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800be3c:	4770      	bx	lr

0800be3e <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800be3e:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 800be40:	b118      	cbz	r0, 800be4a <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800be42:	6803      	ldr	r3, [r0, #0]
 800be44:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800be48:	4718      	bx	r3
 800be4a:	4770      	bx	lr

0800be4c <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800be4c:	680b      	ldr	r3, [r1, #0]
 800be4e:	4608      	mov	r0, r1
 800be50:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800be54:	4718      	bx	r3

0800be56 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800be56:	680b      	ldr	r3, [r1, #0]
 800be58:	4608      	mov	r0, r1
 800be5a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800be5e:	4718      	bx	r3

0800be60 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800be60:	680b      	ldr	r3, [r1, #0]
 800be62:	4608      	mov	r0, r1
 800be64:	f8d3 30ec 	ldr.w	r3, [r3, #236]	@ 0xec
 800be68:	4718      	bx	r3

0800be6a <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800be6a:	680b      	ldr	r3, [r1, #0]
 800be6c:	4608      	mov	r0, r1
 800be6e:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 800be72:	4718      	bx	r3

0800be74 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800be74:	4a38      	ldr	r2, [pc, #224]	@ (800bf58 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800be76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be7a:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 800be7c:	b087      	sub	sp, #28
 800be7e:	8812      	ldrh	r2, [r2, #0]
 800be80:	4604      	mov	r4, r0
 800be82:	4689      	mov	r9, r1
 800be84:	429a      	cmp	r2, r3
 800be86:	d937      	bls.n	800bef8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800be88:	4a34      	ldr	r2, [pc, #208]	@ (800bf5c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800be8a:	6812      	ldr	r2, [r2, #0]
 800be8c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800be90:	4b33      	ldr	r3, [pc, #204]	@ (800bf60 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800be92:	681b      	ldr	r3, [r3, #0]
 800be94:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800be98:	f1b8 0f00 	cmp.w	r8, #0
 800be9c:	d02c      	beq.n	800bef8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800be9e:	6803      	ldr	r3, [r0, #0]
 800bea0:	6945      	ldr	r5, [r0, #20]
 800bea2:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800bea4:	2d00      	cmp	r5, #0
 800bea6:	d052      	beq.n	800bf4e <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800bea8:	696f      	ldr	r7, [r5, #20]
 800beaa:	4798      	blx	r3
 800beac:	f897 502c 	ldrb.w	r5, [r7, #44]	@ 0x2c
 800beb0:	fb15 f000 	smulbb	r0, r5, r0
 800beb4:	b280      	uxth	r0, r0
 800beb6:	1c45      	adds	r5, r0, #1
 800beb8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800bebc:	122d      	asrs	r5, r5, #8
 800bebe:	d01b      	beq.n	800bef8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800bec0:	6823      	ldr	r3, [r4, #0]
 800bec2:	4639      	mov	r1, r7
 800bec4:	4620      	mov	r0, r4
 800bec6:	b2ed      	uxtb	r5, r5
 800bec8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800becc:	4798      	blx	r3
 800bece:	6823      	ldr	r3, [r4, #0]
 800bed0:	4606      	mov	r6, r0
 800bed2:	4639      	mov	r1, r7
 800bed4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800bed8:	4620      	mov	r0, r4
 800beda:	4798      	blx	r3
 800bedc:	4683      	mov	fp, r0
 800bede:	b970      	cbnz	r0, 800befe <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800bee0:	b96e      	cbnz	r6, 800befe <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800bee2:	6823      	ldr	r3, [r4, #0]
 800bee4:	4642      	mov	r2, r8
 800bee6:	9600      	str	r6, [sp, #0]
 800bee8:	4649      	mov	r1, r9
 800beea:	4620      	mov	r0, r4
 800beec:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800bef0:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 800bef4:	463b      	mov	r3, r7
 800bef6:	47a8      	blx	r5
 800bef8:	b007      	add	sp, #28
 800befa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800befe:	2e00      	cmp	r6, #0
 800bf00:	ddfa      	ble.n	800bef8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800bf02:	6823      	ldr	r3, [r4, #0]
 800bf04:	4639      	mov	r1, r7
 800bf06:	4620      	mov	r0, r4
 800bf08:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800bf0c:	4798      	blx	r3
 800bf0e:	6823      	ldr	r3, [r4, #0]
 800bf10:	4682      	mov	sl, r0
 800bf12:	4639      	mov	r1, r7
 800bf14:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800bf18:	4620      	mov	r0, r4
 800bf1a:	4798      	blx	r3
 800bf1c:	4582      	cmp	sl, r0
 800bf1e:	bfde      	ittt	le
 800bf20:	4603      	movle	r3, r0
 800bf22:	4650      	movle	r0, sl
 800bf24:	469a      	movle	sl, r3
 800bf26:	ebaa 0300 	sub.w	r3, sl, r0
 800bf2a:	fb93 f3f6 	sdiv	r3, r3, r6
 800bf2e:	2b64      	cmp	r3, #100	@ 0x64
 800bf30:	dce2      	bgt.n	800bef8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800bf32:	6823      	ldr	r3, [r4, #0]
 800bf34:	4642      	mov	r2, r8
 800bf36:	9000      	str	r0, [sp, #0]
 800bf38:	4649      	mov	r1, r9
 800bf3a:	4620      	mov	r0, r4
 800bf3c:	e9cd b503 	strd	fp, r5, [sp, #12]
 800bf40:	e9cd a601 	strd	sl, r6, [sp, #4]
 800bf44:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 800bf48:	463b      	mov	r3, r7
 800bf4a:	47a8      	blx	r5
 800bf4c:	e7d4      	b.n	800bef8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800bf4e:	4798      	blx	r3
 800bf50:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 800bf54:	deff      	udf	#255	@ 0xff
 800bf56:	bf00      	nop
 800bf58:	20016a5c 	.word	0x20016a5c
 800bf5c:	20016a58 	.word	0x20016a58
 800bf60:	20016a60 	.word	0x20016a60

0800bf64 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800bf64:	4770      	bx	lr

0800bf66 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800bf66:	4770      	bx	lr

0800bf68 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800bf68:	b538      	push	{r3, r4, r5, lr}
 800bf6a:	680a      	ldr	r2, [r1, #0]
 800bf6c:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	@ 0x30
 800bf70:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
 800bf74:	4608      	mov	r0, r1
 800bf76:	4790      	blx	r2
 800bf78:	4629      	mov	r1, r5
 800bf7a:	4602      	mov	r2, r0
 800bf7c:	4620      	mov	r0, r4
 800bf7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bf82:	f7ff baaf 	b.w	800b4e4 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800bf86 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800bf86:	b538      	push	{r3, r4, r5, lr}
 800bf88:	680a      	ldr	r2, [r1, #0]
 800bf8a:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	@ 0x30
 800bf8e:	f8d2 2094 	ldr.w	r2, [r2, #148]	@ 0x94
 800bf92:	4608      	mov	r0, r1
 800bf94:	4790      	blx	r2
 800bf96:	4629      	mov	r1, r5
 800bf98:	4602      	mov	r2, r0
 800bf9a:	4620      	mov	r0, r4
 800bf9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bfa0:	f7ff baa0 	b.w	800b4e4 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800bfa4 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800bfa4:	b510      	push	{r4, lr}
 800bfa6:	4604      	mov	r4, r0
 800bfa8:	214c      	movs	r1, #76	@ 0x4c
 800bfaa:	f014 f8d0 	bl	802014e <_ZdlPvj>
 800bfae:	4620      	mov	r0, r4
 800bfb0:	bd10      	pop	{r4, pc}

0800bfb2 <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800bfb2:	b510      	push	{r4, lr}
 800bfb4:	4604      	mov	r4, r0
 800bfb6:	214c      	movs	r1, #76	@ 0x4c
 800bfb8:	f014 f8c9 	bl	802014e <_ZdlPvj>
 800bfbc:	4620      	mov	r0, r4
 800bfbe:	bd10      	pop	{r4, pc}

0800bfc0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800bfc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bfc4:	b08d      	sub	sp, #52	@ 0x34
 800bfc6:	4606      	mov	r6, r0
 800bfc8:	9309      	str	r3, [sp, #36]	@ 0x24
 800bfca:	f89d 3068 	ldrb.w	r3, [sp, #104]	@ 0x68
 800bfce:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	@ 0x60
 800bfd2:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800bfd6:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	@ 0x58
 800bfda:	930a      	str	r3, [sp, #40]	@ 0x28
 800bfdc:	f1b9 0f00 	cmp.w	r9, #0
 800bfe0:	d117      	bne.n	800c012 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800bfe2:	2f00      	cmp	r7, #0
 800bfe4:	dc7c      	bgt.n	800c0e0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800bfe6:	f1b8 0f00 	cmp.w	r8, #0
 800bfea:	da01      	bge.n	800bff0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800bfec:	2f00      	cmp	r7, #0
 800bfee:	d17a      	bne.n	800c0e6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800bff0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800bff2:	4630      	mov	r0, r6
 800bff4:	6832      	ldr	r2, [r6, #0]
 800bff6:	9318      	str	r3, [sp, #96]	@ 0x60
 800bff8:	2300      	movs	r3, #0
 800bffa:	9907      	ldr	r1, [sp, #28]
 800bffc:	e9cd 3316 	strd	r3, r3, [sp, #88]	@ 0x58
 800c000:	f8d2 408c 	ldr.w	r4, [r2, #140]	@ 0x8c
 800c004:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c008:	46a4      	mov	ip, r4
 800c00a:	b00d      	add	sp, #52	@ 0x34
 800c00c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c010:	4760      	bx	ip
 800c012:	fb97 f4f9 	sdiv	r4, r7, r9
 800c016:	1e63      	subs	r3, r4, #1
 800c018:	9305      	str	r3, [sp, #20]
 800c01a:	f1ba 0f00 	cmp.w	sl, #0
 800c01e:	d122      	bne.n	800c066 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800c020:	fb03 f509 	mul.w	r5, r3, r9
 800c024:	fb98 faf9 	sdiv	sl, r8, r9
 800c028:	f10a 0a02 	add.w	sl, sl, #2
 800c02c:	9b05      	ldr	r3, [sp, #20]
 800c02e:	459a      	cmp	sl, r3
 800c030:	d059      	beq.n	800c0e6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c032:	42af      	cmp	r7, r5
 800c034:	dc5a      	bgt.n	800c0ec <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800c036:	45a8      	cmp	r8, r5
 800c038:	da01      	bge.n	800c03e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800c03a:	42af      	cmp	r7, r5
 800c03c:	db0e      	blt.n	800c05c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800c03e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c040:	4630      	mov	r0, r6
 800c042:	9905      	ldr	r1, [sp, #20]
 800c044:	9302      	str	r3, [sp, #8]
 800c046:	6b73      	ldr	r3, [r6, #52]	@ 0x34
 800c048:	6832      	ldr	r2, [r6, #0]
 800c04a:	434b      	muls	r3, r1
 800c04c:	9907      	ldr	r1, [sp, #28]
 800c04e:	e9cd 5300 	strd	r5, r3, [sp]
 800c052:	f8d2 b08c 	ldr.w	fp, [r2, #140]	@ 0x8c
 800c056:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c05a:	47d8      	blx	fp
 800c05c:	9b05      	ldr	r3, [sp, #20]
 800c05e:	444d      	add	r5, r9
 800c060:	3301      	adds	r3, #1
 800c062:	9305      	str	r3, [sp, #20]
 800c064:	e7e2      	b.n	800c02c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800c066:	fb97 f3fa 	sdiv	r3, r7, sl
 800c06a:	3b01      	subs	r3, #1
 800c06c:	9306      	str	r3, [sp, #24]
 800c06e:	9a06      	ldr	r2, [sp, #24]
 800c070:	fb98 f3fa 	sdiv	r3, r8, sl
 800c074:	fb02 fb0a 	mul.w	fp, r2, sl
 800c078:	9a05      	ldr	r2, [sp, #20]
 800c07a:	3302      	adds	r3, #2
 800c07c:	fb02 f509 	mul.w	r5, r2, r9
 800c080:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c082:	45ab      	cmp	fp, r5
 800c084:	dd1d      	ble.n	800c0c2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800c086:	42af      	cmp	r7, r5
 800c088:	dc08      	bgt.n	800c09c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800c08a:	45a8      	cmp	r8, r5
 800c08c:	da08      	bge.n	800c0a0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800c08e:	42af      	cmp	r7, r5
 800c090:	da06      	bge.n	800c0a0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800c092:	9b05      	ldr	r3, [sp, #20]
 800c094:	444d      	add	r5, r9
 800c096:	3301      	adds	r3, #1
 800c098:	9305      	str	r3, [sp, #20]
 800c09a:	e7f2      	b.n	800c082 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800c09c:	45a8      	cmp	r8, r5
 800c09e:	dcf8      	bgt.n	800c092 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800c0a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c0a2:	4630      	mov	r0, r6
 800c0a4:	9905      	ldr	r1, [sp, #20]
 800c0a6:	9302      	str	r3, [sp, #8]
 800c0a8:	6b73      	ldr	r3, [r6, #52]	@ 0x34
 800c0aa:	6832      	ldr	r2, [r6, #0]
 800c0ac:	434b      	muls	r3, r1
 800c0ae:	9907      	ldr	r1, [sp, #28]
 800c0b0:	e9cd 5300 	strd	r5, r3, [sp]
 800c0b4:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 800c0b8:	461c      	mov	r4, r3
 800c0ba:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c0be:	47a0      	blx	r4
 800c0c0:	e7e7      	b.n	800c092 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800c0c2:	45ab      	cmp	fp, r5
 800c0c4:	db04      	blt.n	800c0d0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800c0c6:	9b05      	ldr	r3, [sp, #20]
 800c0c8:	444d      	add	r5, r9
 800c0ca:	3301      	adds	r3, #1
 800c0cc:	9305      	str	r3, [sp, #20]
 800c0ce:	e7f8      	b.n	800c0c2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800c0d0:	9b06      	ldr	r3, [sp, #24]
 800c0d2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c0d4:	3301      	adds	r3, #1
 800c0d6:	4293      	cmp	r3, r2
 800c0d8:	9306      	str	r3, [sp, #24]
 800c0da:	d004      	beq.n	800c0e6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c0dc:	44d3      	add	fp, sl
 800c0de:	e7d0      	b.n	800c082 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800c0e0:	f1b8 0f00 	cmp.w	r8, #0
 800c0e4:	dd84      	ble.n	800bff0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800c0e6:	b00d      	add	sp, #52	@ 0x34
 800c0e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c0ec:	45a8      	cmp	r8, r5
 800c0ee:	dcb5      	bgt.n	800c05c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800c0f0:	e7a5      	b.n	800c03e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800c0f2 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800c0f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0f6:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	@ 0x120
 800c0fa:	b089      	sub	sp, #36	@ 0x24
 800c0fc:	468a      	mov	sl, r1
 800c0fe:	4693      	mov	fp, r2
 800c100:	2c00      	cmp	r4, #0
 800c102:	9007      	str	r0, [sp, #28]
 800c104:	461d      	mov	r5, r3
 800c106:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800c10a:	e9dd c612 	ldrd	ip, r6, [sp, #72]	@ 0x48
 800c10e:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	@ 0x50
 800c112:	dd03      	ble.n	800c11c <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800c114:	4564      	cmp	r4, ip
 800c116:	dd01      	ble.n	800c11c <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800c118:	42b4      	cmp	r4, r6
 800c11a:	dd0e      	ble.n	800c13a <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800c11c:	f8cd c048 	str.w	ip, [sp, #72]	@ 0x48
 800c120:	e9cd 8915 	strd	r8, r9, [sp, #84]	@ 0x54
 800c124:	e9cd 6713 	strd	r6, r7, [sp, #76]	@ 0x4c
 800c128:	462b      	mov	r3, r5
 800c12a:	465a      	mov	r2, fp
 800c12c:	4651      	mov	r1, sl
 800c12e:	9807      	ldr	r0, [sp, #28]
 800c130:	b009      	add	sp, #36	@ 0x24
 800c132:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c136:	f7ff bf43 	b.w	800bfc0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800c13a:	f104 3eff 	add.w	lr, r4, #4294967295
 800c13e:	9702      	str	r7, [sp, #8]
 800c140:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800c144:	e9cd ce00 	strd	ip, lr, [sp]
 800c148:	f7ff ff3a 	bl	800bfc0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800c14c:	9412      	str	r4, [sp, #72]	@ 0x48
 800c14e:	e9cd 8915 	strd	r8, r9, [sp, #84]	@ 0x54
 800c152:	e9cd 6713 	strd	r6, r7, [sp, #76]	@ 0x4c
 800c156:	e7e7      	b.n	800c128 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800c158 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800c158:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c15c:	f1b3 0900 	subs.w	r9, r3, #0
 800c160:	460d      	mov	r5, r1
 800c162:	4690      	mov	r8, r2
 800c164:	9f08      	ldr	r7, [sp, #32]
 800c166:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 800c16a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800c16c:	da18      	bge.n	800c1a0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800c16e:	2a01      	cmp	r2, #1
 800c170:	dd16      	ble.n	800c1a0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800c172:	232d      	movs	r3, #45	@ 0x2d
 800c174:	f1c9 0900 	rsb	r9, r9, #0
 800c178:	2001      	movs	r0, #1
 800c17a:	800b      	strh	r3, [r1, #0]
 800c17c:	2f00      	cmp	r7, #0
 800c17e:	d111      	bne.n	800c1a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800c180:	2302      	movs	r3, #2
 800c182:	eba8 0100 	sub.w	r1, r8, r0
 800c186:	4a26      	ldr	r2, [pc, #152]	@ (800c220 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800c188:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800c18c:	b289      	uxth	r1, r1
 800c18e:	fb96 f3f3 	sdiv	r3, r6, r3
 800c192:	444b      	add	r3, r9
 800c194:	fb93 f3f6 	sdiv	r3, r3, r6
 800c198:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c19c:	f005 bfd8 	b.w	8012150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800c1a0:	2000      	movs	r0, #0
 800c1a2:	e7eb      	b.n	800c17c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800c1a4:	dd39      	ble.n	800c21a <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800c1a6:	eba8 0100 	sub.w	r1, r8, r0
 800c1aa:	4a1d      	ldr	r2, [pc, #116]	@ (800c220 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800c1ac:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800c1b0:	f108 38ff 	add.w	r8, r8, #4294967295
 800c1b4:	b289      	uxth	r1, r1
 800c1b6:	fb99 f4f6 	sdiv	r4, r9, r6
 800c1ba:	4623      	mov	r3, r4
 800c1bc:	f005 ffc8 	bl	8012150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800c1c0:	4628      	mov	r0, r5
 800c1c2:	f005 fc59 	bl	8011a78 <_ZN8touchgfx7Unicode6strlenEPKt>
 800c1c6:	4580      	cmp	r8, r0
 800c1c8:	dd27      	ble.n	800c21a <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800c1ca:	f04f 0e02 	mov.w	lr, #2
 800c1ce:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800c1d2:	fb06 9314 	mls	r3, r6, r4, r9
 800c1d6:	3001      	adds	r0, #1
 800c1d8:	2200      	movs	r2, #0
 800c1da:	f04f 090a 	mov.w	r9, #10
 800c1de:	f107 3aff 	add.w	sl, r7, #4294967295
 800c1e2:	fb96 fefe 	sdiv	lr, r6, lr
 800c1e6:	4580      	cmp	r8, r0
 800c1e8:	4684      	mov	ip, r0
 800c1ea:	dd13      	ble.n	800c214 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800c1ec:	fb09 f303 	mul.w	r3, r9, r3
 800c1f0:	4592      	cmp	sl, r2
 800c1f2:	f102 0201 	add.w	r2, r2, #1
 800c1f6:	f100 0c01 	add.w	ip, r0, #1
 800c1fa:	bf08      	it	eq
 800c1fc:	4473      	addeq	r3, lr
 800c1fe:	4297      	cmp	r7, r2
 800c200:	fb93 f4f6 	sdiv	r4, r3, r6
 800c204:	f104 0130 	add.w	r1, r4, #48	@ 0x30
 800c208:	fb06 3314 	mls	r3, r6, r4, r3
 800c20c:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800c210:	4660      	mov	r0, ip
 800c212:	d1e8      	bne.n	800c1e6 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800c214:	2300      	movs	r3, #0
 800c216:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800c21a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c21e:	bf00      	nop
 800c220:	08023524 	.word	0x08023524

0800c224 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800c224:	4a69      	ldr	r2, [pc, #420]	@ (800c3cc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a8>)
 800c226:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c22a:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 800c22c:	b093      	sub	sp, #76	@ 0x4c
 800c22e:	8812      	ldrh	r2, [r2, #0]
 800c230:	4604      	mov	r4, r0
 800c232:	460e      	mov	r6, r1
 800c234:	429a      	cmp	r2, r3
 800c236:	d93a      	bls.n	800c2ae <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c238:	4a65      	ldr	r2, [pc, #404]	@ (800c3d0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1ac>)
 800c23a:	6812      	ldr	r2, [r2, #0]
 800c23c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c240:	4b64      	ldr	r3, [pc, #400]	@ (800c3d4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b0>)
 800c242:	681b      	ldr	r3, [r3, #0]
 800c244:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800c248:	f1b8 0f00 	cmp.w	r8, #0
 800c24c:	d02f      	beq.n	800c2ae <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c24e:	6803      	ldr	r3, [r0, #0]
 800c250:	6945      	ldr	r5, [r0, #20]
 800c252:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800c254:	2d00      	cmp	r5, #0
 800c256:	f000 80b5 	beq.w	800c3c4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a0>
 800c25a:	696f      	ldr	r7, [r5, #20]
 800c25c:	4798      	blx	r3
 800c25e:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 800c262:	fb13 f000 	smulbb	r0, r3, r0
 800c266:	b280      	uxth	r0, r0
 800c268:	1c43      	adds	r3, r0, #1
 800c26a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800c26e:	0a03      	lsrs	r3, r0, #8
 800c270:	d01d      	beq.n	800c2ae <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c272:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800c274:	4620      	mov	r0, r4
 800c276:	6823      	ldr	r3, [r4, #0]
 800c278:	434e      	muls	r6, r1
 800c27a:	4639      	mov	r1, r7
 800c27c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800c280:	4798      	blx	r3
 800c282:	6823      	ldr	r3, [r4, #0]
 800c284:	4605      	mov	r5, r0
 800c286:	4639      	mov	r1, r7
 800c288:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800c28c:	4620      	mov	r0, r4
 800c28e:	4798      	blx	r3
 800c290:	2d00      	cmp	r5, #0
 800c292:	dd0f      	ble.n	800c2b4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800c294:	fb96 f3f5 	sdiv	r3, r6, r5
 800c298:	436b      	muls	r3, r5
 800c29a:	1b9a      	subs	r2, r3, r6
 800c29c:	4253      	negs	r3, r2
 800c29e:	4153      	adcs	r3, r2
 800c2a0:	2800      	cmp	r0, #0
 800c2a2:	dd09      	ble.n	800c2b8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800c2a4:	fb96 f2f0 	sdiv	r2, r6, r0
 800c2a8:	4350      	muls	r0, r2
 800c2aa:	42b0      	cmp	r0, r6
 800c2ac:	d10d      	bne.n	800c2ca <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa6>
 800c2ae:	b013      	add	sp, #76	@ 0x4c
 800c2b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c2b4:	2300      	movs	r3, #0
 800c2b6:	e7f3      	b.n	800c2a0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800c2b8:	d107      	bne.n	800c2ca <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa6>
 800c2ba:	2d00      	cmp	r5, #0
 800c2bc:	d17f      	bne.n	800c3be <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x19a>
 800c2be:	2e00      	cmp	r6, #0
 800c2c0:	d063      	beq.n	800c38a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x166>
 800c2c2:	2b00      	cmp	r3, #0
 800c2c4:	d0f3      	beq.n	800c2ae <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c2c6:	462a      	mov	r2, r5
 800c2c8:	e007      	b.n	800c2da <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb6>
 800c2ca:	2b00      	cmp	r3, #0
 800c2cc:	d0ef      	beq.n	800c2ae <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c2ce:	2d00      	cmp	r5, #0
 800c2d0:	d0f9      	beq.n	800c2c6 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa2>
 800c2d2:	fb96 f2f5 	sdiv	r2, r6, r5
 800c2d6:	6b65      	ldr	r5, [r4, #52]	@ 0x34
 800c2d8:	436a      	muls	r2, r5
 800c2da:	683b      	ldr	r3, [r7, #0]
 800c2dc:	4631      	mov	r1, r6
 800c2de:	4638      	mov	r0, r7
 800c2e0:	f8d3 3110 	ldr.w	r3, [r3, #272]	@ 0x110
 800c2e4:	4798      	blx	r3
 800c2e6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800c2e8:	2214      	movs	r2, #20
 800c2ea:	a908      	add	r1, sp, #32
 800c2ec:	9302      	str	r3, [sp, #8]
 800c2ee:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 800c2f2:	9301      	str	r3, [sp, #4]
 800c2f4:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 800c2f8:	9300      	str	r3, [sp, #0]
 800c2fa:	4603      	mov	r3, r0
 800c2fc:	4620      	mov	r0, r4
 800c2fe:	f7ff ff2b 	bl	800c158 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800c302:	4b35      	ldr	r3, [pc, #212]	@ (800c3d8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800c304:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800c306:	6818      	ldr	r0, [r3, #0]
 800c308:	f7f7 f95a 	bl	80035c0 <_ZNK8touchgfx5Texts7getTextEt>
 800c30c:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800c310:	4681      	mov	r9, r0
 800c312:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800c316:	f8d8 3000 	ldr.w	r3, [r8]
 800c31a:	d138      	bne.n	800c38e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x16a>
 800c31c:	4601      	mov	r1, r0
 800c31e:	699b      	ldr	r3, [r3, #24]
 800c320:	aa08      	add	r2, sp, #32
 800c322:	4640      	mov	r0, r8
 800c324:	4798      	blx	r3
 800c326:	b205      	sxth	r5, r0
 800c328:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800c32c:	2002      	movs	r0, #2
 800c32e:	4631      	mov	r1, r6
 800c330:	f8b7 906c 	ldrh.w	r9, [r7, #108]	@ 0x6c
 800c334:	2b01      	cmp	r3, #1
 800c336:	683b      	ldr	r3, [r7, #0]
 800c338:	bf88      	it	hi
 800c33a:	f105 0801 	addhi.w	r8, r5, #1
 800c33e:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 800c342:	bf8c      	ite	hi
 800c344:	fb98 f8f0 	sdivhi	r8, r8, r0
 800c348:	fb95 f8f0 	sdivls	r8, r5, r0
 800c34c:	4638      	mov	r0, r7
 800c34e:	bf88      	it	hi
 800c350:	fa0f f888 	sxthhi.w	r8, r8
 800c354:	4798      	blx	r3
 800c356:	ab12      	add	r3, sp, #72	@ 0x48
 800c358:	f843 0d34 	str.w	r0, [r3, #-52]!
 800c35c:	4618      	mov	r0, r3
 800c35e:	f7fe fe8f 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c362:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c366:	4448      	add	r0, r9
 800c368:	2200      	movs	r2, #0
 800c36a:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c36e:	a906      	add	r1, sp, #24
 800c370:	eba0 0808 	sub.w	r8, r0, r8
 800c374:	6823      	ldr	r3, [r4, #0]
 800c376:	f8ad 201a 	strh.w	r2, [sp, #26]
 800c37a:	4620      	mov	r0, r4
 800c37c:	f8ad 8018 	strh.w	r8, [sp, #24]
 800c380:	f8ad 501c 	strh.w	r5, [sp, #28]
 800c384:	691b      	ldr	r3, [r3, #16]
 800c386:	4798      	blx	r3
 800c388:	e791      	b.n	800c2ae <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c38a:	4632      	mov	r2, r6
 800c38c:	e7a5      	b.n	800c2da <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb6>
 800c38e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c390:	4640      	mov	r0, r8
 800c392:	4798      	blx	r3
 800c394:	f8d8 3000 	ldr.w	r3, [r8]
 800c398:	4605      	mov	r5, r0
 800c39a:	aa08      	add	r2, sp, #32
 800c39c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c39e:	4649      	mov	r1, r9
 800c3a0:	4640      	mov	r0, r8
 800c3a2:	4798      	blx	r3
 800c3a4:	fb15 f500 	smulbb	r5, r5, r0
 800c3a8:	f8d8 3000 	ldr.w	r3, [r8]
 800c3ac:	aa08      	add	r2, sp, #32
 800c3ae:	b2ad      	uxth	r5, r5
 800c3b0:	4649      	mov	r1, r9
 800c3b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c3b4:	4640      	mov	r0, r8
 800c3b6:	4798      	blx	r3
 800c3b8:	4405      	add	r5, r0
 800c3ba:	b22d      	sxth	r5, r5
 800c3bc:	e7b4      	b.n	800c328 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x104>
 800c3be:	2b00      	cmp	r3, #0
 800c3c0:	d187      	bne.n	800c2d2 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xae>
 800c3c2:	e774      	b.n	800c2ae <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c3c4:	4798      	blx	r3
 800c3c6:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 800c3ca:	deff      	udf	#255	@ 0xff
 800c3cc:	20016a5c 	.word	0x20016a5c
 800c3d0:	20016a58 	.word	0x20016a58
 800c3d4:	20016a60 	.word	0x20016a60
 800c3d8:	20016a64 	.word	0x20016a64

0800c3dc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800c3dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3e0:	b09b      	sub	sp, #108	@ 0x6c
 800c3e2:	461e      	mov	r6, r3
 800c3e4:	681b      	ldr	r3, [r3, #0]
 800c3e6:	4604      	mov	r4, r0
 800c3e8:	af1a      	add	r7, sp, #104	@ 0x68
 800c3ea:	9104      	str	r1, [sp, #16]
 800c3ec:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 800c3f0:	4630      	mov	r0, r6
 800c3f2:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800c3f4:	4690      	mov	r8, r2
 800c3f6:	4798      	blx	r3
 800c3f8:	f847 0d28 	str.w	r0, [r7, #-40]!
 800c3fc:	4638      	mov	r0, r7
 800c3fe:	f7fe fe3f 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c402:	f8b6 3116 	ldrh.w	r3, [r6, #278]	@ 0x116
 800c406:	1ac0      	subs	r0, r0, r3
 800c408:	b200      	sxth	r0, r0
 800c40a:	2800      	cmp	r0, #0
 800c40c:	f2c0 80b8 	blt.w	800c580 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a4>
 800c410:	f8b6 2118 	ldrh.w	r2, [r6, #280]	@ 0x118
 800c414:	441a      	add	r2, r3
 800c416:	f8b6 3040 	ldrh.w	r3, [r6, #64]	@ 0x40
 800c41a:	1a9b      	subs	r3, r3, r2
 800c41c:	b21b      	sxth	r3, r3
 800c41e:	4298      	cmp	r0, r3
 800c420:	f280 80ae 	bge.w	800c580 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a4>
 800c424:	6833      	ldr	r3, [r6, #0]
 800c426:	4630      	mov	r0, r6
 800c428:	e9dd 1224 	ldrd	r1, r2, [sp, #144]	@ 0x90
 800c42c:	f8d3 3110 	ldr.w	r3, [r3, #272]	@ 0x110
 800c430:	4798      	blx	r3
 800c432:	6833      	ldr	r3, [r6, #0]
 800c434:	f8b4 9042 	ldrh.w	r9, [r4, #66]	@ 0x42
 800c438:	4605      	mov	r5, r0
 800c43a:	f8b4 b044 	ldrh.w	fp, [r4, #68]	@ 0x44
 800c43e:	4630      	mov	r0, r6
 800c440:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800c444:	4798      	blx	r3
 800c446:	f8cd 9000 	str.w	r9, [sp]
 800c44a:	462b      	mov	r3, r5
 800c44c:	2214      	movs	r2, #20
 800c44e:	4639      	mov	r1, r7
 800c450:	e9cd b001 	strd	fp, r0, [sp, #4]
 800c454:	4620      	mov	r0, r4
 800c456:	f7ff fe7f 	bl	800c158 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800c45a:	4b57      	ldr	r3, [pc, #348]	@ (800c5b8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1dc>)
 800c45c:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800c45e:	6818      	ldr	r0, [r3, #0]
 800c460:	f7f7 f8ae 	bl	80035c0 <_ZNK8touchgfx5Texts7getTextEt>
 800c464:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800c468:	4681      	mov	r9, r0
 800c46a:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800c46e:	f8d8 3000 	ldr.w	r3, [r8]
 800c472:	f040 8088 	bne.w	800c586 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1aa>
 800c476:	4601      	mov	r1, r0
 800c478:	699b      	ldr	r3, [r3, #24]
 800c47a:	463a      	mov	r2, r7
 800c47c:	4640      	mov	r0, r8
 800c47e:	4798      	blx	r3
 800c480:	b205      	sxth	r5, r0
 800c482:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800c486:	2002      	movs	r0, #2
 800c488:	6832      	ldr	r2, [r6, #0]
 800c48a:	f10d 0a68 	add.w	sl, sp, #104	@ 0x68
 800c48e:	2b01      	cmp	r3, #1
 800c490:	f8b6 306c 	ldrh.w	r3, [r6, #108]	@ 0x6c
 800c494:	f8d2 2114 	ldr.w	r2, [r2, #276]	@ 0x114
 800c498:	bf88      	it	hi
 800c49a:	f105 0b01 	addhi.w	fp, r5, #1
 800c49e:	9305      	str	r3, [sp, #20]
 800c4a0:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800c4a2:	bf8c      	ite	hi
 800c4a4:	fb9b fbf0 	sdivhi	fp, fp, r0
 800c4a8:	fb95 fbf0 	sdivls	fp, r5, r0
 800c4ac:	4630      	mov	r0, r6
 800c4ae:	bf88      	it	hi
 800c4b0:	fa0f fb8b 	sxthhi.w	fp, fp
 800c4b4:	4790      	blx	r2
 800c4b6:	f84a 0d3c 	str.w	r0, [sl, #-60]!
 800c4ba:	4650      	mov	r0, sl
 800c4bc:	2600      	movs	r6, #0
 800c4be:	f7fe fddf 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c4c2:	9b05      	ldr	r3, [sp, #20]
 800c4c4:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800c4c8:	4418      	add	r0, r3
 800c4ca:	f8ad 5020 	strh.w	r5, [sp, #32]
 800c4ce:	ad07      	add	r5, sp, #28
 800c4d0:	f8ad 601e 	strh.w	r6, [sp, #30]
 800c4d4:	eba0 0b0b 	sub.w	fp, r0, fp
 800c4d8:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 800c4dc:	f8ad b01c 	strh.w	fp, [sp, #28]
 800c4e0:	f10d 0b24 	add.w	fp, sp, #36	@ 0x24
 800c4e4:	e895 0003 	ldmia.w	r5, {r0, r1}
 800c4e8:	e88b 0003 	stmia.w	fp, {r0, r1}
 800c4ec:	9904      	ldr	r1, [sp, #16]
 800c4ee:	4658      	mov	r0, fp
 800c4f0:	f7fc fff2 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 800c4f4:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 800c4f8:	42b3      	cmp	r3, r6
 800c4fa:	dd41      	ble.n	800c580 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a4>
 800c4fc:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 800c500:	42b3      	cmp	r3, r6
 800c502:	dd3d      	ble.n	800c580 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a4>
 800c504:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 800c508:	4620      	mov	r0, r4
 800c50a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800c50e:	1a5b      	subs	r3, r3, r1
 800c510:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 800c514:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800c518:	f8bd 3026 	ldrh.w	r3, [sp, #38]	@ 0x26
 800c51c:	1a5b      	subs	r3, r3, r1
 800c51e:	4629      	mov	r1, r5
 800c520:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800c524:	6823      	ldr	r3, [r4, #0]
 800c526:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c528:	4798      	blx	r3
 800c52a:	4b24      	ldr	r3, [pc, #144]	@ (800c5bc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1e0>)
 800c52c:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800c52e:	681b      	ldr	r3, [r3, #0]
 800c530:	f894 0040 	ldrb.w	r0, [r4, #64]	@ 0x40
 800c534:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800c538:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800c53a:	785b      	ldrb	r3, [r3, #1]
 800c53c:	910d      	str	r1, [sp, #52]	@ 0x34
 800c53e:	f3c3 0c01 	ubfx	ip, r3, #0, #2
 800c542:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c546:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 800c54a:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 800c54e:	f89d 3098 	ldrb.w	r3, [sp, #152]	@ 0x98
 800c552:	f88d c030 	strb.w	ip, [sp, #48]	@ 0x30
 800c556:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800c55a:	f88d 0032 	strb.w	r0, [sp, #50]	@ 0x32
 800c55e:	f8ad 6038 	strh.w	r6, [sp, #56]	@ 0x38
 800c562:	f88d 603b 	strb.w	r6, [sp, #59]	@ 0x3b
 800c566:	f88d 603c 	strb.w	r6, [sp, #60]	@ 0x3c
 800c56a:	f7f5 ff87 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800c56e:	465b      	mov	r3, fp
 800c570:	e9cd 7602 	strd	r7, r6, [sp, #8]
 800c574:	e9cd a900 	strd	sl, r9, [sp]
 800c578:	e895 0006 	ldmia.w	r5, {r1, r2}
 800c57c:	f7f6 ffd2 	bl	8003524 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c580:	b01b      	add	sp, #108	@ 0x6c
 800c582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c586:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c588:	4640      	mov	r0, r8
 800c58a:	4798      	blx	r3
 800c58c:	f8d8 3000 	ldr.w	r3, [r8]
 800c590:	4605      	mov	r5, r0
 800c592:	463a      	mov	r2, r7
 800c594:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c596:	4649      	mov	r1, r9
 800c598:	4640      	mov	r0, r8
 800c59a:	4798      	blx	r3
 800c59c:	fb15 f500 	smulbb	r5, r5, r0
 800c5a0:	f8d8 3000 	ldr.w	r3, [r8]
 800c5a4:	463a      	mov	r2, r7
 800c5a6:	b2ad      	uxth	r5, r5
 800c5a8:	4649      	mov	r1, r9
 800c5aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c5ac:	4640      	mov	r0, r8
 800c5ae:	4798      	blx	r3
 800c5b0:	4405      	add	r5, r0
 800c5b2:	b22d      	sxth	r5, r5
 800c5b4:	e765      	b.n	800c482 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa6>
 800c5b6:	bf00      	nop
 800c5b8:	20016a64 	.word	0x20016a64
 800c5bc:	20016a58 	.word	0x20016a58

0800c5c0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800c5c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5c4:	b09b      	sub	sp, #108	@ 0x6c
 800c5c6:	4698      	mov	r8, r3
 800c5c8:	681b      	ldr	r3, [r3, #0]
 800c5ca:	4604      	mov	r4, r0
 800c5cc:	ae1a      	add	r6, sp, #104	@ 0x68
 800c5ce:	9104      	str	r1, [sp, #16]
 800c5d0:	f8d3 3118 	ldr.w	r3, [r3, #280]	@ 0x118
 800c5d4:	4640      	mov	r0, r8
 800c5d6:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800c5d8:	4617      	mov	r7, r2
 800c5da:	4798      	blx	r3
 800c5dc:	f846 0d28 	str.w	r0, [r6, #-40]!
 800c5e0:	4630      	mov	r0, r6
 800c5e2:	f7fe fd4d 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c5e6:	f8b8 3114 	ldrh.w	r3, [r8, #276]	@ 0x114
 800c5ea:	1ac0      	subs	r0, r0, r3
 800c5ec:	b200      	sxth	r0, r0
 800c5ee:	2800      	cmp	r0, #0
 800c5f0:	f2c0 80ba 	blt.w	800c768 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a8>
 800c5f4:	f8b8 211a 	ldrh.w	r2, [r8, #282]	@ 0x11a
 800c5f8:	441a      	add	r2, r3
 800c5fa:	f8b8 3042 	ldrh.w	r3, [r8, #66]	@ 0x42
 800c5fe:	1a9b      	subs	r3, r3, r2
 800c600:	b21b      	sxth	r3, r3
 800c602:	4298      	cmp	r0, r3
 800c604:	f280 80b0 	bge.w	800c768 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a8>
 800c608:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800c60a:	2214      	movs	r2, #20
 800c60c:	4631      	mov	r1, r6
 800c60e:	4620      	mov	r0, r4
 800c610:	9302      	str	r3, [sp, #8]
 800c612:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 800c616:	9301      	str	r3, [sp, #4]
 800c618:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 800c61c:	9300      	str	r3, [sp, #0]
 800c61e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 800c620:	f7ff fd9a 	bl	800c158 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800c624:	4b55      	ldr	r3, [pc, #340]	@ (800c77c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1bc>)
 800c626:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800c628:	6818      	ldr	r0, [r3, #0]
 800c62a:	f7f6 ffc9 	bl	80035c0 <_ZNK8touchgfx5Texts7getTextEt>
 800c62e:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800c632:	4681      	mov	r9, r0
 800c634:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800c638:	683b      	ldr	r3, [r7, #0]
 800c63a:	f040 8098 	bne.w	800c76e <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ae>
 800c63e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c640:	4638      	mov	r0, r7
 800c642:	4798      	blx	r3
 800c644:	683b      	ldr	r3, [r7, #0]
 800c646:	4605      	mov	r5, r0
 800c648:	4632      	mov	r2, r6
 800c64a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c64c:	4649      	mov	r1, r9
 800c64e:	4638      	mov	r0, r7
 800c650:	4798      	blx	r3
 800c652:	fb15 f500 	smulbb	r5, r5, r0
 800c656:	683b      	ldr	r3, [r7, #0]
 800c658:	4632      	mov	r2, r6
 800c65a:	b2ad      	uxth	r5, r5
 800c65c:	4649      	mov	r1, r9
 800c65e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c660:	4638      	mov	r0, r7
 800c662:	4798      	blx	r3
 800c664:	4405      	add	r5, r0
 800c666:	b22d      	sxth	r5, r5
 800c668:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800c66c:	2002      	movs	r0, #2
 800c66e:	f8d8 2000 	ldr.w	r2, [r8]
 800c672:	f10d 0a68 	add.w	sl, sp, #104	@ 0x68
 800c676:	2b01      	cmp	r3, #1
 800c678:	f8b8 30c6 	ldrh.w	r3, [r8, #198]	@ 0xc6
 800c67c:	f8d2 2118 	ldr.w	r2, [r2, #280]	@ 0x118
 800c680:	bf88      	it	hi
 800c682:	f105 0b01 	addhi.w	fp, r5, #1
 800c686:	9305      	str	r3, [sp, #20]
 800c688:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800c68a:	bf8c      	ite	hi
 800c68c:	fb9b fbf0 	sdivhi	fp, fp, r0
 800c690:	fb95 fbf0 	sdivls	fp, r5, r0
 800c694:	4640      	mov	r0, r8
 800c696:	bf88      	it	hi
 800c698:	fa0f fb8b 	sxthhi.w	fp, fp
 800c69c:	4790      	blx	r2
 800c69e:	f84a 0d3c 	str.w	r0, [sl, #-60]!
 800c6a2:	4650      	mov	r0, sl
 800c6a4:	f04f 0800 	mov.w	r8, #0
 800c6a8:	f7fe fcea 	bl	800b080 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c6ac:	9b05      	ldr	r3, [sp, #20]
 800c6ae:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c6b2:	4418      	add	r0, r3
 800c6b4:	f8ad 5022 	strh.w	r5, [sp, #34]	@ 0x22
 800c6b8:	ad07      	add	r5, sp, #28
 800c6ba:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c6be:	eba0 0b0b 	sub.w	fp, r0, fp
 800c6c2:	f8ad 1020 	strh.w	r1, [sp, #32]
 800c6c6:	f8ad b01e 	strh.w	fp, [sp, #30]
 800c6ca:	f10d 0b24 	add.w	fp, sp, #36	@ 0x24
 800c6ce:	e895 0003 	ldmia.w	r5, {r0, r1}
 800c6d2:	e88b 0003 	stmia.w	fp, {r0, r1}
 800c6d6:	9904      	ldr	r1, [sp, #16]
 800c6d8:	4658      	mov	r0, fp
 800c6da:	f7fc fefd 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 800c6de:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 800c6e2:	4543      	cmp	r3, r8
 800c6e4:	dd40      	ble.n	800c768 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a8>
 800c6e6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 800c6ea:	4543      	cmp	r3, r8
 800c6ec:	dd3c      	ble.n	800c768 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a8>
 800c6ee:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 800c6f2:	4620      	mov	r0, r4
 800c6f4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800c6f8:	1a5b      	subs	r3, r3, r1
 800c6fa:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 800c6fe:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800c702:	f8bd 3026 	ldrh.w	r3, [sp, #38]	@ 0x26
 800c706:	1a5b      	subs	r3, r3, r1
 800c708:	4629      	mov	r1, r5
 800c70a:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800c70e:	6823      	ldr	r3, [r4, #0]
 800c710:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c712:	4798      	blx	r3
 800c714:	4b1a      	ldr	r3, [pc, #104]	@ (800c780 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1c0>)
 800c716:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 800c718:	681b      	ldr	r3, [r3, #0]
 800c71a:	f894 0040 	ldrb.w	r0, [r4, #64]	@ 0x40
 800c71e:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800c722:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800c724:	785b      	ldrb	r3, [r3, #1]
 800c726:	910d      	str	r1, [sp, #52]	@ 0x34
 800c728:	f3c3 0c01 	ubfx	ip, r3, #0, #2
 800c72c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c730:	970b      	str	r7, [sp, #44]	@ 0x2c
 800c732:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 800c736:	f89d 3098 	ldrb.w	r3, [sp, #152]	@ 0x98
 800c73a:	f88d c030 	strb.w	ip, [sp, #48]	@ 0x30
 800c73e:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800c742:	f88d 0032 	strb.w	r0, [sp, #50]	@ 0x32
 800c746:	f8ad 8038 	strh.w	r8, [sp, #56]	@ 0x38
 800c74a:	f88d 803b 	strb.w	r8, [sp, #59]	@ 0x3b
 800c74e:	f88d 803c 	strb.w	r8, [sp, #60]	@ 0x3c
 800c752:	f7f5 fe93 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800c756:	465b      	mov	r3, fp
 800c758:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800c75c:	e9cd a900 	strd	sl, r9, [sp]
 800c760:	e895 0006 	ldmia.w	r5, {r1, r2}
 800c764:	f7f6 fede 	bl	8003524 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c768:	b01b      	add	sp, #108	@ 0x6c
 800c76a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c76e:	4601      	mov	r1, r0
 800c770:	699b      	ldr	r3, [r3, #24]
 800c772:	4632      	mov	r2, r6
 800c774:	4638      	mov	r0, r7
 800c776:	4798      	blx	r3
 800c778:	b205      	sxth	r5, r0
 800c77a:	e775      	b.n	800c668 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800c77c:	20016a64 	.word	0x20016a64
 800c780:	20016a58 	.word	0x20016a58

0800c784 <_ZN8touchgfx21GraphWrapAndClearData5clearEv>:
 800c784:	b510      	push	{r4, lr}
 800c786:	4604      	mov	r4, r0
 800c788:	f7fe fd65 	bl	800b256 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800c78c:	4620      	mov	r0, r4
 800c78e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c792:	f7fe bb12 	b.w	800adba <_ZN8touchgfx17AbstractDataGraph5clearEv>

0800c796 <_ZN8touchgfx21GraphWrapAndClearData8addValueEi>:
 800c796:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c798:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	@ 0x11e
 800c79c:	460f      	mov	r7, r1
 800c79e:	f8d0 6144 	ldr.w	r6, [r0, #324]	@ 0x144
 800c7a2:	4604      	mov	r4, r0
 800c7a4:	1c6b      	adds	r3, r5, #1
 800c7a6:	4629      	mov	r1, r5
 800c7a8:	f8a0 311e 	strh.w	r3, [r0, #286]	@ 0x11e
 800c7ac:	6803      	ldr	r3, [r0, #0]
 800c7ae:	f8d3 3180 	ldr.w	r3, [r3, #384]	@ 0x180
 800c7b2:	4798      	blx	r3
 800c7b4:	f846 7020 	str.w	r7, [r6, r0, lsl #2]
 800c7b8:	b915      	cbnz	r5, 800c7c0 <_ZN8touchgfx21GraphWrapAndClearData8addValueEi+0x2a>
 800c7ba:	4620      	mov	r0, r4
 800c7bc:	f7fe fd4b 	bl	800b256 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800c7c0:	4620      	mov	r0, r4
 800c7c2:	4629      	mov	r1, r5
 800c7c4:	f7fe fd1f 	bl	800b206 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800c7c8:	4628      	mov	r0, r5
 800c7ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c7cc <_ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv>:
 800c7cc:	f9b0 111e 	ldrsh.w	r1, [r0, #286]	@ 0x11e
 800c7d0:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	@ 0x11c
 800c7d4:	4291      	cmp	r1, r2
 800c7d6:	db03      	blt.n	800c7e0 <_ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv+0x14>
 800c7d8:	6803      	ldr	r3, [r0, #0]
 800c7da:	f8d3 30fc 	ldr.w	r3, [r3, #252]	@ 0xfc
 800c7de:	4718      	bx	r3
 800c7e0:	4770      	bx	lr

0800c7e2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800c7e2:	2300      	movs	r3, #0
 800c7e4:	8083      	strh	r3, [r0, #4]
 800c7e6:	80c3      	strh	r3, [r0, #6]
 800c7e8:	8003      	strh	r3, [r0, #0]
 800c7ea:	8043      	strh	r3, [r0, #2]
 800c7ec:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800c7f0:	2bff      	cmp	r3, #255	@ 0xff
 800c7f2:	bf01      	itttt	eq
 800c7f4:	890b      	ldrheq	r3, [r1, #8]
 800c7f6:	8083      	strheq	r3, [r0, #4]
 800c7f8:	894b      	ldrheq	r3, [r1, #10]
 800c7fa:	80c3      	strheq	r3, [r0, #6]
 800c7fc:	4770      	bx	lr
	...

0800c800 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800c800:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c802:	4604      	mov	r4, r0
 800c804:	466b      	mov	r3, sp
 800c806:	6808      	ldr	r0, [r1, #0]
 800c808:	6849      	ldr	r1, [r1, #4]
 800c80a:	c303      	stmia	r3!, {r0, r1}
 800c80c:	6823      	ldr	r3, [r4, #0]
 800c80e:	4669      	mov	r1, sp
 800c810:	4620      	mov	r0, r4
 800c812:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c814:	4798      	blx	r3
 800c816:	4b08      	ldr	r3, [pc, #32]	@ (800c838 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800c818:	681b      	ldr	r3, [r3, #0]
 800c81a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c81e:	b10a      	cbz	r2, 800c824 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800c820:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800c822:	b900      	cbnz	r0, 800c826 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800c824:	6898      	ldr	r0, [r3, #8]
 800c826:	6803      	ldr	r3, [r0, #0]
 800c828:	4669      	mov	r1, sp
 800c82a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800c82c:	6a1d      	ldr	r5, [r3, #32]
 800c82e:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800c832:	47a8      	blx	r5
 800c834:	b003      	add	sp, #12
 800c836:	bd30      	pop	{r4, r5, pc}
 800c838:	20016a00 	.word	0x20016a00

0800c83c <_ZN8touchgfx3BoxD1Ev>:
 800c83c:	4770      	bx	lr

0800c83e <_ZN8touchgfx3BoxD0Ev>:
 800c83e:	b510      	push	{r4, lr}
 800c840:	4604      	mov	r4, r0
 800c842:	212c      	movs	r1, #44	@ 0x2c
 800c844:	f013 fc83 	bl	802014e <_ZdlPvj>
 800c848:	4620      	mov	r0, r4
 800c84a:	bd10      	pop	{r4, pc}

0800c84c <_ZNK8touchgfx3Box17invalidateContentEv>:
 800c84c:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800c850:	b12a      	cbz	r2, 800c85e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c852:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800c856:	b112      	cbz	r2, 800c85e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c858:	6803      	ldr	r3, [r0, #0]
 800c85a:	695b      	ldr	r3, [r3, #20]
 800c85c:	4718      	bx	r3
 800c85e:	4770      	bx	lr

0800c860 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800c860:	4770      	bx	lr

0800c862 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800c862:	b510      	push	{r4, lr}
 800c864:	4604      	mov	r4, r0
 800c866:	2134      	movs	r1, #52	@ 0x34
 800c868:	f013 fc71 	bl	802014e <_ZdlPvj>
 800c86c:	4620      	mov	r0, r4
 800c86e:	bd10      	pop	{r4, pc}

0800c870 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800c870:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c874:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800c876:	4604      	mov	r4, r0
 800c878:	460e      	mov	r6, r1
 800c87a:	b08e      	sub	sp, #56	@ 0x38
 800c87c:	b218      	sxth	r0, r3
 800c87e:	8921      	ldrh	r1, [r4, #8]
 800c880:	005b      	lsls	r3, r3, #1
 800c882:	8962      	ldrh	r2, [r4, #10]
 800c884:	f8ad 0000 	strh.w	r0, [sp]
 800c888:	b29b      	uxth	r3, r3
 800c88a:	f8ad 0002 	strh.w	r0, [sp, #2]
 800c88e:	1ac9      	subs	r1, r1, r3
 800c890:	1ad3      	subs	r3, r2, r3
 800c892:	b209      	sxth	r1, r1
 800c894:	b21b      	sxth	r3, r3
 800c896:	2900      	cmp	r1, #0
 800c898:	f8ad 1004 	strh.w	r1, [sp, #4]
 800c89c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c8a0:	dd5e      	ble.n	800c960 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800c8a2:	2b00      	cmp	r3, #0
 800c8a4:	dd5c      	ble.n	800c960 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800c8a6:	6830      	ldr	r0, [r6, #0]
 800c8a8:	ab02      	add	r3, sp, #8
 800c8aa:	6871      	ldr	r1, [r6, #4]
 800c8ac:	c303      	stmia	r3!, {r0, r1}
 800c8ae:	4669      	mov	r1, sp
 800c8b0:	a802      	add	r0, sp, #8
 800c8b2:	f7fc fe11 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 800c8b6:	4620      	mov	r0, r4
 800c8b8:	a902      	add	r1, sp, #8
 800c8ba:	f7ff ffa1 	bl	800c800 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800c8be:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 800c8c0:	2800      	cmp	r0, #0
 800c8c2:	d05f      	beq.n	800c984 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800c8c4:	8963      	ldrh	r3, [r4, #10]
 800c8c6:	b202      	sxth	r2, r0
 800c8c8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c8cc:	2500      	movs	r5, #0
 800c8ce:	1a1f      	subs	r7, r3, r0
 800c8d0:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800c8d4:	f8ad 101c 	strh.w	r1, [sp, #28]
 800c8d8:	b21b      	sxth	r3, r3
 800c8da:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800c8de:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 800c8e2:	af04      	add	r7, sp, #16
 800c8e4:	1a09      	subs	r1, r1, r0
 800c8e6:	9506      	str	r5, [sp, #24]
 800c8e8:	f8ad 201e 	strh.w	r2, [sp, #30]
 800c8ec:	f8ad 5020 	strh.w	r5, [sp, #32]
 800c8f0:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 800c8f4:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 800c8f8:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800c8fc:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800c900:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800c904:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 800c908:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800c90c:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800c910:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800c914:	ab06      	add	r3, sp, #24
 800c916:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800c91a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c91e:	e887 0003 	stmia.w	r7, {r0, r1}
 800c922:	4631      	mov	r1, r6
 800c924:	4638      	mov	r0, r7
 800c926:	f7fc fdd7 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 800c92a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800c92e:	2b00      	cmp	r3, #0
 800c930:	dd12      	ble.n	800c958 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800c932:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800c936:	2b00      	cmp	r3, #0
 800c938:	dd0e      	ble.n	800c958 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800c93a:	6823      	ldr	r3, [r4, #0]
 800c93c:	4639      	mov	r1, r7
 800c93e:	4620      	mov	r0, r4
 800c940:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c942:	4798      	blx	r3
 800c944:	f7f5 fd9a 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800c948:	6803      	ldr	r3, [r0, #0]
 800c94a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800c94c:	4639      	mov	r1, r7
 800c94e:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800c952:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800c956:	47c0      	blx	r8
 800c958:	3501      	adds	r5, #1
 800c95a:	2d04      	cmp	r5, #4
 800c95c:	d1da      	bne.n	800c914 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800c95e:	e011      	b.n	800c984 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800c960:	6830      	ldr	r0, [r6, #0]
 800c962:	ab06      	add	r3, sp, #24
 800c964:	6871      	ldr	r1, [r6, #4]
 800c966:	c303      	stmia	r3!, {r0, r1}
 800c968:	6823      	ldr	r3, [r4, #0]
 800c96a:	a906      	add	r1, sp, #24
 800c96c:	4620      	mov	r0, r4
 800c96e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c970:	4798      	blx	r3
 800c972:	f7f5 fd83 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 800c976:	6803      	ldr	r3, [r0, #0]
 800c978:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800c97a:	a906      	add	r1, sp, #24
 800c97c:	6a1d      	ldr	r5, [r3, #32]
 800c97e:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800c982:	47a8      	blx	r5
 800c984:	b00e      	add	sp, #56	@ 0x38
 800c986:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c98a <_ZN8touchgfx5ImageD1Ev>:
 800c98a:	4770      	bx	lr

0800c98c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800c98c:	b570      	push	{r4, r5, r6, lr}
 800c98e:	880b      	ldrh	r3, [r1, #0]
 800c990:	460d      	mov	r5, r1
 800c992:	4604      	mov	r4, r0
 800c994:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800c996:	4608      	mov	r0, r1
 800c998:	f005 fc94 	bl	80122c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c99c:	4606      	mov	r6, r0
 800c99e:	4628      	mov	r0, r5
 800c9a0:	f005 fcc4 	bl	801232c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c9a4:	6823      	ldr	r3, [r4, #0]
 800c9a6:	4605      	mov	r5, r0
 800c9a8:	4631      	mov	r1, r6
 800c9aa:	4620      	mov	r0, r4
 800c9ac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c9ae:	4798      	blx	r3
 800c9b0:	6823      	ldr	r3, [r4, #0]
 800c9b2:	4629      	mov	r1, r5
 800c9b4:	4620      	mov	r0, r4
 800c9b6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c9b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c9bc:	4718      	bx	r3

0800c9be <_ZN8touchgfx5ImageD0Ev>:
 800c9be:	b510      	push	{r4, lr}
 800c9c0:	4604      	mov	r4, r0
 800c9c2:	212c      	movs	r1, #44	@ 0x2c
 800c9c4:	f013 fbc3 	bl	802014e <_ZdlPvj>
 800c9c8:	4620      	mov	r0, r4
 800c9ca:	bd10      	pop	{r4, pc}

0800c9cc <_ZNK8touchgfx5Image12getSolidRectEv>:
 800c9cc:	b510      	push	{r4, lr}
 800c9ce:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800c9d2:	4604      	mov	r4, r0
 800c9d4:	2bff      	cmp	r3, #255	@ 0xff
 800c9d6:	d006      	beq.n	800c9e6 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800c9d8:	2300      	movs	r3, #0
 800c9da:	8003      	strh	r3, [r0, #0]
 800c9dc:	8043      	strh	r3, [r0, #2]
 800c9de:	8083      	strh	r3, [r0, #4]
 800c9e0:	80c3      	strh	r3, [r0, #6]
 800c9e2:	4620      	mov	r0, r4
 800c9e4:	bd10      	pop	{r4, pc}
 800c9e6:	3126      	adds	r1, #38	@ 0x26
 800c9e8:	f005 fcd4 	bl	8012394 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c9ec:	e7f9      	b.n	800c9e2 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800c9ee <_ZNK8touchgfx5Image17invalidateContentEv>:
 800c9ee:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800c9f2:	b12a      	cbz	r2, 800ca00 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c9f4:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800c9f8:	b112      	cbz	r2, 800ca00 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c9fa:	6803      	ldr	r3, [r0, #0]
 800c9fc:	695b      	ldr	r3, [r3, #20]
 800c9fe:	4718      	bx	r3
 800ca00:	4770      	bx	lr
	...

0800ca04 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800ca04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca08:	4604      	mov	r4, r0
 800ca0a:	b088      	sub	sp, #32
 800ca0c:	2500      	movs	r5, #0
 800ca0e:	460f      	mov	r7, r1
 800ca10:	f854 3b26 	ldr.w	r3, [r4], #38
 800ca14:	a904      	add	r1, sp, #16
 800ca16:	4606      	mov	r6, r0
 800ca18:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ca1a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800ca1e:	4798      	blx	r3
 800ca20:	4620      	mov	r0, r4
 800ca22:	f005 fc4f 	bl	80122c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ca26:	4680      	mov	r8, r0
 800ca28:	4620      	mov	r0, r4
 800ca2a:	f005 fc7f 	bl	801232c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ca2e:	9506      	str	r5, [sp, #24]
 800ca30:	ad06      	add	r5, sp, #24
 800ca32:	f8ad 001e 	strh.w	r0, [sp, #30]
 800ca36:	4639      	mov	r1, r7
 800ca38:	f8ad 801c 	strh.w	r8, [sp, #28]
 800ca3c:	4628      	mov	r0, r5
 800ca3e:	f7fc fd4b 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 800ca42:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ca46:	2b00      	cmp	r3, #0
 800ca48:	dd19      	ble.n	800ca7e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ca4a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ca4e:	2b00      	cmp	r3, #0
 800ca50:	dd15      	ble.n	800ca7e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ca52:	4b0c      	ldr	r3, [pc, #48]	@ (800ca84 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800ca54:	681b      	ldr	r3, [r3, #0]
 800ca56:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800ca5a:	b10a      	cbz	r2, 800ca60 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800ca5c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800ca5e:	b900      	cbnz	r0, 800ca62 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800ca60:	6898      	ldr	r0, [r3, #8]
 800ca62:	2701      	movs	r7, #1
 800ca64:	6801      	ldr	r1, [r0, #0]
 800ca66:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800ca6a:	9702      	str	r7, [sp, #8]
 800ca6c:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800ca70:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800ca74:	e9cd 5600 	strd	r5, r6, [sp]
 800ca78:	688d      	ldr	r5, [r1, #8]
 800ca7a:	4621      	mov	r1, r4
 800ca7c:	47a8      	blx	r5
 800ca7e:	b008      	add	sp, #32
 800ca80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ca84:	20016a00 	.word	0x20016a00

0800ca88 <_ZN8touchgfx7OutlineD1Ev>:
 800ca88:	4770      	bx	lr

0800ca8a <_ZN8touchgfx7OutlineD0Ev>:
 800ca8a:	b510      	push	{r4, lr}
 800ca8c:	4604      	mov	r4, r0
 800ca8e:	2130      	movs	r1, #48	@ 0x30
 800ca90:	f013 fb5d 	bl	802014e <_ZdlPvj>
 800ca94:	4620      	mov	r0, r4
 800ca96:	bd10      	pop	{r4, pc}

0800ca98 <_ZN8touchgfx7Outline5resetEv>:
 800ca98:	b510      	push	{r4, lr}
 800ca9a:	4604      	mov	r4, r0
 800ca9c:	f000 fe86 	bl	800d7ac <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800caa0:	60e0      	str	r0, [r4, #12]
 800caa2:	f000 fe89 	bl	800d7b8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800caa6:	68e3      	ldr	r3, [r4, #12]
 800caa8:	08c0      	lsrs	r0, r0, #3
 800caaa:	2200      	movs	r2, #0
 800caac:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800cab0:	6123      	str	r3, [r4, #16]
 800cab2:	3801      	subs	r0, #1
 800cab4:	60a2      	str	r2, [r4, #8]
 800cab6:	6060      	str	r0, [r4, #4]
 800cab8:	8019      	strh	r1, [r3, #0]
 800caba:	8059      	strh	r1, [r3, #2]
 800cabc:	809a      	strh	r2, [r3, #4]
 800cabe:	80da      	strh	r2, [r3, #6]
 800cac0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800cac2:	f023 0301 	bic.w	r3, r3, #1
 800cac6:	f043 0302 	orr.w	r3, r3, #2
 800caca:	6263      	str	r3, [r4, #36]	@ 0x24
 800cacc:	bd10      	pop	{r4, pc}
	...

0800cad0 <_ZN8touchgfx7OutlineC1Ev>:
 800cad0:	4b0a      	ldr	r3, [pc, #40]	@ (800cafc <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800cad2:	b510      	push	{r4, lr}
 800cad4:	6003      	str	r3, [r0, #0]
 800cad6:	2300      	movs	r3, #0
 800cad8:	4604      	mov	r4, r0
 800cada:	6243      	str	r3, [r0, #36]	@ 0x24
 800cadc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800cae0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800cae4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800cae8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800caec:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800caf0:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800caf4:	f7ff ffd0 	bl	800ca98 <_ZN8touchgfx7Outline5resetEv>
 800caf8:	4620      	mov	r0, r4
 800cafa:	bd10      	pop	{r4, pc}
 800cafc:	0802384c 	.word	0x0802384c

0800cb00 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800cb00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb04:	b093      	sub	sp, #76	@ 0x4c
 800cb06:	1156      	asrs	r6, r2, #5
 800cb08:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800cb0a:	9305      	str	r3, [sp, #20]
 800cb0c:	1153      	asrs	r3, r2, #5
 800cb0e:	f004 051f 	and.w	r5, r4, #31
 800cb12:	9303      	str	r3, [sp, #12]
 800cb14:	1163      	asrs	r3, r4, #5
 800cb16:	9504      	str	r5, [sp, #16]
 800cb18:	1165      	asrs	r5, r4, #5
 800cb1a:	9306      	str	r3, [sp, #24]
 800cb1c:	f002 031f 	and.w	r3, r2, #31
 800cb20:	42ae      	cmp	r6, r5
 800cb22:	f040 80f4 	bne.w	800cd0e <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
 800cb26:	9c04      	ldr	r4, [sp, #16]
 800cb28:	9a05      	ldr	r2, [sp, #20]
 800cb2a:	42a3      	cmp	r3, r4
 800cb2c:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800cb30:	6902      	ldr	r2, [r0, #16]
 800cb32:	d125      	bne.n	800cb80 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
 800cb34:	f9b2 3000 	ldrsh.w	r3, [r2]
 800cb38:	459e      	cmp	lr, r3
 800cb3a:	d103      	bne.n	800cb44 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
 800cb3c:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800cb40:	429e      	cmp	r6, r3
 800cb42:	d035      	beq.n	800cbb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800cb44:	88d1      	ldrh	r1, [r2, #6]
 800cb46:	8893      	ldrh	r3, [r2, #4]
 800cb48:	430b      	orrs	r3, r1
 800cb4a:	d010      	beq.n	800cb6e <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800cb4c:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800cb50:	2b00      	cmp	r3, #0
 800cb52:	db0c      	blt.n	800cb6e <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800cb54:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800cb56:	428b      	cmp	r3, r1
 800cb58:	da09      	bge.n	800cb6e <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800cb5a:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800cb5e:	428b      	cmp	r3, r1
 800cb60:	f103 0301 	add.w	r3, r3, #1
 800cb64:	bf38      	it	cc
 800cb66:	3208      	addcc	r2, #8
 800cb68:	6083      	str	r3, [r0, #8]
 800cb6a:	bf38      	it	cc
 800cb6c:	6102      	strcc	r2, [r0, #16]
 800cb6e:	6903      	ldr	r3, [r0, #16]
 800cb70:	9a03      	ldr	r2, [sp, #12]
 800cb72:	f8a3 e000 	strh.w	lr, [r3]
 800cb76:	805a      	strh	r2, [r3, #2]
 800cb78:	2200      	movs	r2, #0
 800cb7a:	809a      	strh	r2, [r3, #4]
 800cb7c:	80da      	strh	r2, [r3, #6]
 800cb7e:	e017      	b.n	800cbb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800cb80:	9c05      	ldr	r4, [sp, #20]
 800cb82:	114e      	asrs	r6, r1, #5
 800cb84:	f001 0c1f 	and.w	ip, r1, #31
 800cb88:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800cb8c:	f004 041f 	and.w	r4, r4, #31
 800cb90:	4576      	cmp	r6, lr
 800cb92:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800cb96:	9402      	str	r4, [sp, #8]
 800cb98:	9c04      	ldr	r4, [sp, #16]
 800cb9a:	eba4 0403 	sub.w	r4, r4, r3
 800cb9e:	d10a      	bne.n	800cbb6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
 800cba0:	9b02      	ldr	r3, [sp, #8]
 800cba2:	44a0      	add	r8, r4
 800cba4:	449c      	add	ip, r3
 800cba6:	f8a2 8004 	strh.w	r8, [r2, #4]
 800cbaa:	fb04 a40c 	mla	r4, r4, ip, sl
 800cbae:	80d4      	strh	r4, [r2, #6]
 800cbb0:	b013      	add	sp, #76	@ 0x4c
 800cbb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cbb6:	9d05      	ldr	r5, [sp, #20]
 800cbb8:	1a69      	subs	r1, r5, r1
 800cbba:	bf51      	iteee	pl
 800cbbc:	f1cc 0520 	rsbpl	r5, ip, #32
 800cbc0:	fb04 f40c 	mulmi.w	r4, r4, ip
 800cbc4:	4249      	negmi	r1, r1
 800cbc6:	2500      	movmi	r5, #0
 800cbc8:	bf5d      	ittte	pl
 800cbca:	436c      	mulpl	r4, r5
 800cbcc:	2520      	movpl	r5, #32
 800cbce:	f04f 0901 	movpl.w	r9, #1
 800cbd2:	f04f 39ff 	movmi.w	r9, #4294967295
 800cbd6:	9501      	str	r5, [sp, #4]
 800cbd8:	9f01      	ldr	r7, [sp, #4]
 800cbda:	444e      	add	r6, r9
 800cbdc:	fb94 f5f1 	sdiv	r5, r4, r1
 800cbe0:	fb01 4415 	mls	r4, r1, r5, r4
 800cbe4:	44bc      	add	ip, r7
 800cbe6:	2c00      	cmp	r4, #0
 800cbe8:	bfbc      	itt	lt
 800cbea:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800cbee:	1864      	addlt	r4, r4, r1
 800cbf0:	44a8      	add	r8, r5
 800cbf2:	fb05 ac0c 	mla	ip, r5, ip, sl
 800cbf6:	f8a2 8004 	strh.w	r8, [r2, #4]
 800cbfa:	f8a2 c006 	strh.w	ip, [r2, #6]
 800cbfe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800cc02:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800cc06:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800cc0a:	ea58 0202 	orrs.w	r2, r8, r2
 800cc0e:	d011      	beq.n	800cc34 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800cc10:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800cc14:	f1b8 0f00 	cmp.w	r8, #0
 800cc18:	db0c      	blt.n	800cc34 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800cc1a:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800cc1c:	4590      	cmp	r8, r2
 800cc1e:	da09      	bge.n	800cc34 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800cc20:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800cc24:	4590      	cmp	r8, r2
 800cc26:	bf3c      	itt	cc
 800cc28:	f10c 0208 	addcc.w	r2, ip, #8
 800cc2c:	6102      	strcc	r2, [r0, #16]
 800cc2e:	f108 0201 	add.w	r2, r8, #1
 800cc32:	6082      	str	r2, [r0, #8]
 800cc34:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800cc38:	2700      	movs	r7, #0
 800cc3a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800cc3e:	45b6      	cmp	lr, r6
 800cc40:	f8ac 6000 	strh.w	r6, [ip]
 800cc44:	442b      	add	r3, r5
 800cc46:	f8ac 2002 	strh.w	r2, [ip, #2]
 800cc4a:	f8ac 7004 	strh.w	r7, [ip, #4]
 800cc4e:	f8ac 7006 	strh.w	r7, [ip, #6]
 800cc52:	d04b      	beq.n	800ccec <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
 800cc54:	9f04      	ldr	r7, [sp, #16]
 800cc56:	1a64      	subs	r4, r4, r1
 800cc58:	f04f 0a00 	mov.w	sl, #0
 800cc5c:	1aff      	subs	r7, r7, r3
 800cc5e:	443d      	add	r5, r7
 800cc60:	016d      	lsls	r5, r5, #5
 800cc62:	fb95 f8f1 	sdiv	r8, r5, r1
 800cc66:	fb01 5518 	mls	r5, r1, r8, r5
 800cc6a:	2d00      	cmp	r5, #0
 800cc6c:	bfbc      	itt	lt
 800cc6e:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800cc72:	186d      	addlt	r5, r5, r1
 800cc74:	f108 0701 	add.w	r7, r8, #1
 800cc78:	9703      	str	r7, [sp, #12]
 800cc7a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800cc7e:	1964      	adds	r4, r4, r5
 800cc80:	444e      	add	r6, r9
 800cc82:	bf54      	ite	pl
 800cc84:	9f03      	ldrpl	r7, [sp, #12]
 800cc86:	4647      	movmi	r7, r8
 800cc88:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800cc8c:	bf58      	it	pl
 800cc8e:	1a64      	subpl	r4, r4, r1
 800cc90:	443b      	add	r3, r7
 800cc92:	44bb      	add	fp, r7
 800cc94:	f8ac b004 	strh.w	fp, [ip, #4]
 800cc98:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800cc9c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800cca0:	f8ac b006 	strh.w	fp, [ip, #6]
 800cca4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800cca8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ccac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ccb0:	ea5b 0707 	orrs.w	r7, fp, r7
 800ccb4:	d011      	beq.n	800ccda <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800ccb6:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800ccba:	f1bb 0f00 	cmp.w	fp, #0
 800ccbe:	db0c      	blt.n	800ccda <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800ccc0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ccc2:	45bb      	cmp	fp, r7
 800ccc4:	da09      	bge.n	800ccda <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800ccc6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ccca:	45bb      	cmp	fp, r7
 800cccc:	bf3c      	itt	cc
 800ccce:	f10c 0708 	addcc.w	r7, ip, #8
 800ccd2:	6107      	strcc	r7, [r0, #16]
 800ccd4:	f10b 0701 	add.w	r7, fp, #1
 800ccd8:	6087      	str	r7, [r0, #8]
 800ccda:	6907      	ldr	r7, [r0, #16]
 800ccdc:	45b6      	cmp	lr, r6
 800ccde:	803e      	strh	r6, [r7, #0]
 800cce0:	807a      	strh	r2, [r7, #2]
 800cce2:	f8a7 a004 	strh.w	sl, [r7, #4]
 800cce6:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ccea:	d1c6      	bne.n	800cc7a <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
 800ccec:	9a04      	ldr	r2, [sp, #16]
 800ccee:	1ad3      	subs	r3, r2, r3
 800ccf0:	6902      	ldr	r2, [r0, #16]
 800ccf2:	8891      	ldrh	r1, [r2, #4]
 800ccf4:	88d6      	ldrh	r6, [r2, #6]
 800ccf6:	4419      	add	r1, r3
 800ccf8:	8091      	strh	r1, [r2, #4]
 800ccfa:	9902      	ldr	r1, [sp, #8]
 800ccfc:	f101 0c20 	add.w	ip, r1, #32
 800cd00:	9901      	ldr	r1, [sp, #4]
 800cd02:	ebac 0c01 	sub.w	ip, ip, r1
 800cd06:	fb03 630c 	mla	r3, r3, ip, r6
 800cd0a:	80d3      	strh	r3, [r2, #6]
 800cd0c:	e750      	b.n	800cbb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800cd0e:	9d05      	ldr	r5, [sp, #20]
 800cd10:	1aa2      	subs	r2, r4, r2
 800cd12:	eba5 0501 	sub.w	r5, r5, r1
 800cd16:	9202      	str	r2, [sp, #8]
 800cd18:	9508      	str	r5, [sp, #32]
 800cd1a:	f140 8128 	bpl.w	800cf6e <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
 800cd1e:	9a03      	ldr	r2, [sp, #12]
 800cd20:	2a00      	cmp	r2, #0
 800cd22:	f6ff af45 	blt.w	800cbb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800cd26:	9a02      	ldr	r2, [sp, #8]
 800cd28:	f04f 34ff 	mov.w	r4, #4294967295
 800cd2c:	4252      	negs	r2, r2
 800cd2e:	940b      	str	r4, [sp, #44]	@ 0x2c
 800cd30:	2400      	movs	r4, #0
 800cd32:	9202      	str	r2, [sp, #8]
 800cd34:	9a06      	ldr	r2, [sp, #24]
 800cd36:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800cd3a:	9206      	str	r2, [sp, #24]
 800cd3c:	462a      	mov	r2, r5
 800cd3e:	435a      	muls	r2, r3
 800cd40:	9401      	str	r4, [sp, #4]
 800cd42:	9c02      	ldr	r4, [sp, #8]
 800cd44:	9d02      	ldr	r5, [sp, #8]
 800cd46:	fb92 f4f4 	sdiv	r4, r2, r4
 800cd4a:	fb05 2214 	mls	r2, r5, r4, r2
 800cd4e:	2a00      	cmp	r2, #0
 800cd50:	9207      	str	r2, [sp, #28]
 800cd52:	bfbc      	itt	lt
 800cd54:	1952      	addlt	r2, r2, r5
 800cd56:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800cd5a:	6905      	ldr	r5, [r0, #16]
 800cd5c:	bfb8      	it	lt
 800cd5e:	9207      	strlt	r2, [sp, #28]
 800cd60:	eb04 0901 	add.w	r9, r4, r1
 800cd64:	9a01      	ldr	r2, [sp, #4]
 800cd66:	ea4f 1669 	mov.w	r6, r9, asr #5
 800cd6a:	429a      	cmp	r2, r3
 800cd6c:	f040 8111 	bne.w	800cf92 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
 800cd70:	f9b5 3000 	ldrsh.w	r3, [r5]
 800cd74:	429e      	cmp	r6, r3
 800cd76:	d104      	bne.n	800cd82 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
 800cd78:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800cd7c:	9a03      	ldr	r2, [sp, #12]
 800cd7e:	429a      	cmp	r2, r3
 800cd80:	d01b      	beq.n	800cdba <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800cd82:	88ea      	ldrh	r2, [r5, #6]
 800cd84:	88ab      	ldrh	r3, [r5, #4]
 800cd86:	4313      	orrs	r3, r2
 800cd88:	d010      	beq.n	800cdac <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800cd8a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800cd8e:	2a00      	cmp	r2, #0
 800cd90:	db0c      	blt.n	800cdac <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800cd92:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800cd94:	429a      	cmp	r2, r3
 800cd96:	da09      	bge.n	800cdac <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800cd98:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800cd9c:	429a      	cmp	r2, r3
 800cd9e:	f102 0201 	add.w	r2, r2, #1
 800cda2:	bf38      	it	cc
 800cda4:	3508      	addcc	r5, #8
 800cda6:	6082      	str	r2, [r0, #8]
 800cda8:	bf38      	it	cc
 800cdaa:	6105      	strcc	r5, [r0, #16]
 800cdac:	6903      	ldr	r3, [r0, #16]
 800cdae:	9a03      	ldr	r2, [sp, #12]
 800cdb0:	801e      	strh	r6, [r3, #0]
 800cdb2:	805a      	strh	r2, [r3, #2]
 800cdb4:	2200      	movs	r2, #0
 800cdb6:	809a      	strh	r2, [r3, #4]
 800cdb8:	80da      	strh	r2, [r3, #6]
 800cdba:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800cdbc:	9a03      	ldr	r2, [sp, #12]
 800cdbe:	6901      	ldr	r1, [r0, #16]
 800cdc0:	441a      	add	r2, r3
 800cdc2:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cdc6:	42b3      	cmp	r3, r6
 800cdc8:	d103      	bne.n	800cdd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
 800cdca:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800cdce:	429a      	cmp	r2, r3
 800cdd0:	d01a      	beq.n	800ce08 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
 800cdd2:	88cc      	ldrh	r4, [r1, #6]
 800cdd4:	888b      	ldrh	r3, [r1, #4]
 800cdd6:	4323      	orrs	r3, r4
 800cdd8:	d010      	beq.n	800cdfc <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800cdda:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800cdde:	2c00      	cmp	r4, #0
 800cde0:	db0c      	blt.n	800cdfc <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800cde2:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800cde4:	429c      	cmp	r4, r3
 800cde6:	da09      	bge.n	800cdfc <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800cde8:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800cdec:	429c      	cmp	r4, r3
 800cdee:	f104 0401 	add.w	r4, r4, #1
 800cdf2:	bf38      	it	cc
 800cdf4:	3108      	addcc	r1, #8
 800cdf6:	6084      	str	r4, [r0, #8]
 800cdf8:	bf38      	it	cc
 800cdfa:	6101      	strcc	r1, [r0, #16]
 800cdfc:	6903      	ldr	r3, [r0, #16]
 800cdfe:	2100      	movs	r1, #0
 800ce00:	801e      	strh	r6, [r3, #0]
 800ce02:	805a      	strh	r2, [r3, #2]
 800ce04:	8099      	strh	r1, [r3, #4]
 800ce06:	80d9      	strh	r1, [r3, #6]
 800ce08:	9b06      	ldr	r3, [sp, #24]
 800ce0a:	4293      	cmp	r3, r2
 800ce0c:	f000 8082 	beq.w	800cf14 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
 800ce10:	9b08      	ldr	r3, [sp, #32]
 800ce12:	9902      	ldr	r1, [sp, #8]
 800ce14:	015b      	lsls	r3, r3, #5
 800ce16:	9c02      	ldr	r4, [sp, #8]
 800ce18:	fb93 f1f1 	sdiv	r1, r3, r1
 800ce1c:	fb04 3311 	mls	r3, r4, r1, r3
 800ce20:	9103      	str	r1, [sp, #12]
 800ce22:	2b00      	cmp	r3, #0
 800ce24:	9308      	str	r3, [sp, #32]
 800ce26:	da04      	bge.n	800ce32 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
 800ce28:	1e4b      	subs	r3, r1, #1
 800ce2a:	9303      	str	r3, [sp, #12]
 800ce2c:	9b08      	ldr	r3, [sp, #32]
 800ce2e:	4423      	add	r3, r4
 800ce30:	9308      	str	r3, [sp, #32]
 800ce32:	9b07      	ldr	r3, [sp, #28]
 800ce34:	464f      	mov	r7, r9
 800ce36:	9902      	ldr	r1, [sp, #8]
 800ce38:	2600      	movs	r6, #0
 800ce3a:	1a5b      	subs	r3, r3, r1
 800ce3c:	9307      	str	r3, [sp, #28]
 800ce3e:	9b01      	ldr	r3, [sp, #4]
 800ce40:	f1c3 0320 	rsb	r3, r3, #32
 800ce44:	930e      	str	r3, [sp, #56]	@ 0x38
 800ce46:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800ce48:	9b01      	ldr	r3, [sp, #4]
 800ce4a:	1a5b      	subs	r3, r3, r1
 800ce4c:	930a      	str	r3, [sp, #40]	@ 0x28
 800ce4e:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800ce52:	185b      	adds	r3, r3, r1
 800ce54:	bf58      	it	pl
 800ce56:	9902      	ldrpl	r1, [sp, #8]
 800ce58:	9307      	str	r3, [sp, #28]
 800ce5a:	bf57      	itett	pl
 800ce5c:	1a5b      	subpl	r3, r3, r1
 800ce5e:	9903      	ldrmi	r1, [sp, #12]
 800ce60:	9307      	strpl	r3, [sp, #28]
 800ce62:	9b03      	ldrpl	r3, [sp, #12]
 800ce64:	bf58      	it	pl
 800ce66:	1c59      	addpl	r1, r3, #1
 800ce68:	2a00      	cmp	r2, #0
 800ce6a:	4489      	add	r9, r1
 800ce6c:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800ce70:	db2e      	blt.n	800ced0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800ce72:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800ce74:	4293      	cmp	r3, r2
 800ce76:	dd2b      	ble.n	800ced0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800ce78:	9c01      	ldr	r4, [sp, #4]
 800ce7a:	6905      	ldr	r5, [r0, #16]
 800ce7c:	46a0      	mov	r8, r4
 800ce7e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800ce80:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800ce84:	45a0      	cmp	r8, r4
 800ce86:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800ce8a:	f040 814c 	bne.w	800d126 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
 800ce8e:	f9b5 1000 	ldrsh.w	r1, [r5]
 800ce92:	4551      	cmp	r1, sl
 800ce94:	d103      	bne.n	800ce9e <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
 800ce96:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800ce9a:	4291      	cmp	r1, r2
 800ce9c:	d018      	beq.n	800ced0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800ce9e:	ea5c 010e 	orrs.w	r1, ip, lr
 800cea2:	d00f      	beq.n	800cec4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800cea4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800cea8:	2900      	cmp	r1, #0
 800ceaa:	db0b      	blt.n	800cec4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800ceac:	428b      	cmp	r3, r1
 800ceae:	dd09      	ble.n	800cec4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800ceb0:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800ceb4:	4299      	cmp	r1, r3
 800ceb6:	f101 0101 	add.w	r1, r1, #1
 800ceba:	bf38      	it	cc
 800cebc:	3508      	addcc	r5, #8
 800cebe:	6081      	str	r1, [r0, #8]
 800cec0:	bf38      	it	cc
 800cec2:	6105      	strcc	r5, [r0, #16]
 800cec4:	6903      	ldr	r3, [r0, #16]
 800cec6:	f8a3 a000 	strh.w	sl, [r3]
 800ceca:	805a      	strh	r2, [r3, #2]
 800cecc:	809e      	strh	r6, [r3, #4]
 800cece:	80de      	strh	r6, [r3, #6]
 800ced0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800ced2:	6901      	ldr	r1, [r0, #16]
 800ced4:	441a      	add	r2, r3
 800ced6:	88cc      	ldrh	r4, [r1, #6]
 800ced8:	888b      	ldrh	r3, [r1, #4]
 800ceda:	4323      	orrs	r3, r4
 800cedc:	d010      	beq.n	800cf00 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800cede:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800cee2:	2c00      	cmp	r4, #0
 800cee4:	db0c      	blt.n	800cf00 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800cee6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800cee8:	429c      	cmp	r4, r3
 800ceea:	da09      	bge.n	800cf00 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800ceec:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800cef0:	429c      	cmp	r4, r3
 800cef2:	f104 0401 	add.w	r4, r4, #1
 800cef6:	bf38      	it	cc
 800cef8:	3108      	addcc	r1, #8
 800cefa:	6084      	str	r4, [r0, #8]
 800cefc:	bf38      	it	cc
 800cefe:	6101      	strcc	r1, [r0, #16]
 800cf00:	6903      	ldr	r3, [r0, #16]
 800cf02:	464f      	mov	r7, r9
 800cf04:	f8a3 a000 	strh.w	sl, [r3]
 800cf08:	805a      	strh	r2, [r3, #2]
 800cf0a:	809e      	strh	r6, [r3, #4]
 800cf0c:	80de      	strh	r6, [r3, #6]
 800cf0e:	9b06      	ldr	r3, [sp, #24]
 800cf10:	4293      	cmp	r3, r2
 800cf12:	d19c      	bne.n	800ce4e <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
 800cf14:	9b01      	ldr	r3, [sp, #4]
 800cf16:	6907      	ldr	r7, [r0, #16]
 800cf18:	f1c3 0620 	rsb	r6, r3, #32
 800cf1c:	9b05      	ldr	r3, [sp, #20]
 800cf1e:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800cf22:	9b04      	ldr	r3, [sp, #16]
 800cf24:	429e      	cmp	r6, r3
 800cf26:	f040 81c7 	bne.w	800d2b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
 800cf2a:	f9b7 3000 	ldrsh.w	r3, [r7]
 800cf2e:	459e      	cmp	lr, r3
 800cf30:	d104      	bne.n	800cf3c <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
 800cf32:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800cf36:	429a      	cmp	r2, r3
 800cf38:	f43f ae3a 	beq.w	800cbb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800cf3c:	88f9      	ldrh	r1, [r7, #6]
 800cf3e:	88bb      	ldrh	r3, [r7, #4]
 800cf40:	430b      	orrs	r3, r1
 800cf42:	d010      	beq.n	800cf66 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800cf44:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800cf48:	2b00      	cmp	r3, #0
 800cf4a:	db0c      	blt.n	800cf66 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800cf4c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800cf4e:	428b      	cmp	r3, r1
 800cf50:	da09      	bge.n	800cf66 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800cf52:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800cf56:	428b      	cmp	r3, r1
 800cf58:	f103 0301 	add.w	r3, r3, #1
 800cf5c:	bf38      	it	cc
 800cf5e:	3708      	addcc	r7, #8
 800cf60:	6083      	str	r3, [r0, #8]
 800cf62:	bf38      	it	cc
 800cf64:	6107      	strcc	r7, [r0, #16]
 800cf66:	6903      	ldr	r3, [r0, #16]
 800cf68:	f8a3 e000 	strh.w	lr, [r3]
 800cf6c:	e603      	b.n	800cb76 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
 800cf6e:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800cf70:	9c03      	ldr	r4, [sp, #12]
 800cf72:	42a2      	cmp	r2, r4
 800cf74:	f6ff ae1c 	blt.w	800cbb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800cf78:	9c06      	ldr	r4, [sp, #24]
 800cf7a:	42a2      	cmp	r2, r4
 800cf7c:	9c08      	ldr	r4, [sp, #32]
 800cf7e:	bfbc      	itt	lt
 800cf80:	3201      	addlt	r2, #1
 800cf82:	9206      	strlt	r2, [sp, #24]
 800cf84:	f1c3 0220 	rsb	r2, r3, #32
 800cf88:	4362      	muls	r2, r4
 800cf8a:	2401      	movs	r4, #1
 800cf8c:	940b      	str	r4, [sp, #44]	@ 0x2c
 800cf8e:	2420      	movs	r4, #32
 800cf90:	e6d6      	b.n	800cd40 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 800cf92:	ea4f 1861 	mov.w	r8, r1, asr #5
 800cf96:	f009 021f 	and.w	r2, r9, #31
 800cf9a:	f001 011f 	and.w	r1, r1, #31
 800cf9e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800cfa2:	920c      	str	r2, [sp, #48]	@ 0x30
 800cfa4:	45b0      	cmp	r8, r6
 800cfa6:	9a01      	ldr	r2, [sp, #4]
 800cfa8:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800cfac:	eba2 0203 	sub.w	r2, r2, r3
 800cfb0:	d108      	bne.n	800cfc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
 800cfb2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800cfb4:	4496      	add	lr, r2
 800cfb6:	4419      	add	r1, r3
 800cfb8:	f8a5 e004 	strh.w	lr, [r5, #4]
 800cfbc:	fb02 a101 	mla	r1, r2, r1, sl
 800cfc0:	80e9      	strh	r1, [r5, #6]
 800cfc2:	e6fa      	b.n	800cdba <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800cfc4:	2c00      	cmp	r4, #0
 800cfc6:	f2c0 80a7 	blt.w	800d118 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
 800cfca:	2701      	movs	r7, #1
 800cfcc:	f1c1 0c20 	rsb	ip, r1, #32
 800cfd0:	970a      	str	r7, [sp, #40]	@ 0x28
 800cfd2:	2720      	movs	r7, #32
 800cfd4:	fb02 f20c 	mul.w	r2, r2, ip
 800cfd8:	9709      	str	r7, [sp, #36]	@ 0x24
 800cfda:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800cfdc:	fb92 fcf4 	sdiv	ip, r2, r4
 800cfe0:	fb04 221c 	mls	r2, r4, ip, r2
 800cfe4:	4439      	add	r1, r7
 800cfe6:	2a00      	cmp	r2, #0
 800cfe8:	bfbc      	itt	lt
 800cfea:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800cfee:	1912      	addlt	r2, r2, r4
 800cff0:	fb0c a101 	mla	r1, ip, r1, sl
 800cff4:	44e6      	add	lr, ip
 800cff6:	80e9      	strh	r1, [r5, #6]
 800cff8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800cffa:	f8a5 e004 	strh.w	lr, [r5, #4]
 800cffe:	eb08 0501 	add.w	r5, r8, r1
 800d002:	6901      	ldr	r1, [r0, #16]
 800d004:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800d008:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800d00c:	ea58 070e 	orrs.w	r7, r8, lr
 800d010:	d010      	beq.n	800d034 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800d012:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800d016:	f1be 0f00 	cmp.w	lr, #0
 800d01a:	db0b      	blt.n	800d034 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800d01c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800d01e:	45be      	cmp	lr, r7
 800d020:	da08      	bge.n	800d034 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800d022:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800d026:	45be      	cmp	lr, r7
 800d028:	bf3c      	itt	cc
 800d02a:	3108      	addcc	r1, #8
 800d02c:	6101      	strcc	r1, [r0, #16]
 800d02e:	f10e 0101 	add.w	r1, lr, #1
 800d032:	6081      	str	r1, [r0, #8]
 800d034:	6901      	ldr	r1, [r0, #16]
 800d036:	f04f 0e00 	mov.w	lr, #0
 800d03a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800d03e:	42ae      	cmp	r6, r5
 800d040:	800d      	strh	r5, [r1, #0]
 800d042:	4463      	add	r3, ip
 800d044:	f8a1 8002 	strh.w	r8, [r1, #2]
 800d048:	f8a1 e004 	strh.w	lr, [r1, #4]
 800d04c:	f8a1 e006 	strh.w	lr, [r1, #6]
 800d050:	d053      	beq.n	800d0fa <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
 800d052:	9901      	ldr	r1, [sp, #4]
 800d054:	1b12      	subs	r2, r2, r4
 800d056:	1ac9      	subs	r1, r1, r3
 800d058:	4461      	add	r1, ip
 800d05a:	0149      	lsls	r1, r1, #5
 800d05c:	fb91 fef4 	sdiv	lr, r1, r4
 800d060:	fb04 111e 	mls	r1, r4, lr, r1
 800d064:	2900      	cmp	r1, #0
 800d066:	bfbc      	itt	lt
 800d068:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800d06c:	1909      	addlt	r1, r1, r4
 800d06e:	f10e 0701 	add.w	r7, lr, #1
 800d072:	970d      	str	r7, [sp, #52]	@ 0x34
 800d074:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800d078:	1852      	adds	r2, r2, r1
 800d07a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800d07c:	bf54      	ite	pl
 800d07e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800d082:	46f4      	movmi	ip, lr
 800d084:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800d088:	bf58      	it	pl
 800d08a:	1b12      	subpl	r2, r2, r4
 800d08c:	4463      	add	r3, ip
 800d08e:	443d      	add	r5, r7
 800d090:	44e3      	add	fp, ip
 800d092:	f8aa b004 	strh.w	fp, [sl, #4]
 800d096:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800d09a:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800d09e:	f8aa b006 	strh.w	fp, [sl, #6]
 800d0a2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d0a6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d0aa:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800d0ae:	ea5b 070a 	orrs.w	r7, fp, sl
 800d0b2:	d014      	beq.n	800d0de <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800d0b4:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800d0b8:	f1ba 0f00 	cmp.w	sl, #0
 800d0bc:	db0f      	blt.n	800d0de <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800d0be:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800d0c0:	45ba      	cmp	sl, r7
 800d0c2:	da0c      	bge.n	800d0de <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800d0c4:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800d0c8:	45ba      	cmp	sl, r7
 800d0ca:	f10a 0a01 	add.w	sl, sl, #1
 800d0ce:	bf38      	it	cc
 800d0d0:	f10c 0c08 	addcc.w	ip, ip, #8
 800d0d4:	f8c0 a008 	str.w	sl, [r0, #8]
 800d0d8:	bf38      	it	cc
 800d0da:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800d0de:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d0e2:	f04f 0700 	mov.w	r7, #0
 800d0e6:	42ae      	cmp	r6, r5
 800d0e8:	f8ac 5000 	strh.w	r5, [ip]
 800d0ec:	f8ac 8002 	strh.w	r8, [ip, #2]
 800d0f0:	f8ac 7004 	strh.w	r7, [ip, #4]
 800d0f4:	f8ac 7006 	strh.w	r7, [ip, #6]
 800d0f8:	d1bc      	bne.n	800d074 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
 800d0fa:	6904      	ldr	r4, [r0, #16]
 800d0fc:	9a01      	ldr	r2, [sp, #4]
 800d0fe:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800d100:	1ad3      	subs	r3, r2, r3
 800d102:	88a2      	ldrh	r2, [r4, #4]
 800d104:	3120      	adds	r1, #32
 800d106:	441a      	add	r2, r3
 800d108:	80a2      	strh	r2, [r4, #4]
 800d10a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d10c:	1a89      	subs	r1, r1, r2
 800d10e:	88e2      	ldrh	r2, [r4, #6]
 800d110:	fb03 2301 	mla	r3, r3, r1, r2
 800d114:	80e3      	strh	r3, [r4, #6]
 800d116:	e650      	b.n	800cdba <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800d118:	f04f 37ff 	mov.w	r7, #4294967295
 800d11c:	434a      	muls	r2, r1
 800d11e:	4264      	negs	r4, r4
 800d120:	970a      	str	r7, [sp, #40]	@ 0x28
 800d122:	2700      	movs	r7, #0
 800d124:	e758      	b.n	800cfd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
 800d126:	ea4f 1867 	mov.w	r8, r7, asr #5
 800d12a:	f009 031f 	and.w	r3, r9, #31
 800d12e:	f007 071f 	and.w	r7, r7, #31
 800d132:	fa1f fc8c 	uxth.w	ip, ip
 800d136:	45d0      	cmp	r8, sl
 800d138:	930f      	str	r3, [sp, #60]	@ 0x3c
 800d13a:	fa1f fe8e 	uxth.w	lr, lr
 800d13e:	d10a      	bne.n	800d156 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
 800d140:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800d142:	449c      	add	ip, r3
 800d144:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d146:	441f      	add	r7, r3
 800d148:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800d14a:	f8a5 c004 	strh.w	ip, [r5, #4]
 800d14e:	fb03 e707 	mla	r7, r3, r7, lr
 800d152:	80ef      	strh	r7, [r5, #6]
 800d154:	e6bc      	b.n	800ced0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800d156:	2900      	cmp	r1, #0
 800d158:	f2c0 80a6 	blt.w	800d2a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
 800d15c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800d15e:	f1c7 0320 	rsb	r3, r7, #32
 800d162:	4363      	muls	r3, r4
 800d164:	2401      	movs	r4, #1
 800d166:	940d      	str	r4, [sp, #52]	@ 0x34
 800d168:	2420      	movs	r4, #32
 800d16a:	940c      	str	r4, [sp, #48]	@ 0x30
 800d16c:	fb93 f4f1 	sdiv	r4, r3, r1
 800d170:	fb01 3b14 	mls	fp, r1, r4, r3
 800d174:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d176:	f1bb 0f00 	cmp.w	fp, #0
 800d17a:	441f      	add	r7, r3
 800d17c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800d17e:	bfbc      	itt	lt
 800d180:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800d184:	448b      	addlt	fp, r1
 800d186:	fb04 e707 	mla	r7, r4, r7, lr
 800d18a:	44a4      	add	ip, r4
 800d18c:	80ef      	strh	r7, [r5, #6]
 800d18e:	f8a5 c004 	strh.w	ip, [r5, #4]
 800d192:	eb08 0503 	add.w	r5, r8, r3
 800d196:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d19a:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800d19e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800d1a2:	ea5e 0307 	orrs.w	r3, lr, r7
 800d1a6:	d011      	beq.n	800d1cc <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800d1a8:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800d1ac:	f1be 0f00 	cmp.w	lr, #0
 800d1b0:	db0c      	blt.n	800d1cc <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800d1b2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800d1b4:	45be      	cmp	lr, r7
 800d1b6:	da09      	bge.n	800d1cc <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800d1b8:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800d1bc:	45be      	cmp	lr, r7
 800d1be:	bf3c      	itt	cc
 800d1c0:	f10c 0708 	addcc.w	r7, ip, #8
 800d1c4:	6107      	strcc	r7, [r0, #16]
 800d1c6:	f10e 0701 	add.w	r7, lr, #1
 800d1ca:	6087      	str	r7, [r0, #8]
 800d1cc:	6907      	ldr	r7, [r0, #16]
 800d1ce:	b213      	sxth	r3, r2
 800d1d0:	4555      	cmp	r5, sl
 800d1d2:	9310      	str	r3, [sp, #64]	@ 0x40
 800d1d4:	807b      	strh	r3, [r7, #2]
 800d1d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800d1d8:	803d      	strh	r5, [r7, #0]
 800d1da:	80be      	strh	r6, [r7, #4]
 800d1dc:	eb04 0c03 	add.w	ip, r4, r3
 800d1e0:	80fe      	strh	r6, [r7, #6]
 800d1e2:	d050      	beq.n	800d286 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
 800d1e4:	9b01      	ldr	r3, [sp, #4]
 800d1e6:	eba3 070c 	sub.w	r7, r3, ip
 800d1ea:	ebab 0301 	sub.w	r3, fp, r1
 800d1ee:	443c      	add	r4, r7
 800d1f0:	9309      	str	r3, [sp, #36]	@ 0x24
 800d1f2:	0164      	lsls	r4, r4, #5
 800d1f4:	fb94 f8f1 	sdiv	r8, r4, r1
 800d1f8:	fb01 4418 	mls	r4, r1, r8, r4
 800d1fc:	2c00      	cmp	r4, #0
 800d1fe:	bfbc      	itt	lt
 800d200:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800d204:	1864      	addlt	r4, r4, r1
 800d206:	f108 0701 	add.w	r7, r8, #1
 800d20a:	9711      	str	r7, [sp, #68]	@ 0x44
 800d20c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d20e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800d212:	191b      	adds	r3, r3, r4
 800d214:	f8be b004 	ldrh.w	fp, [lr, #4]
 800d218:	bf54      	ite	pl
 800d21a:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800d21c:	4647      	movmi	r7, r8
 800d21e:	9309      	str	r3, [sp, #36]	@ 0x24
 800d220:	bf58      	it	pl
 800d222:	1a5b      	subpl	r3, r3, r1
 800d224:	44bb      	add	fp, r7
 800d226:	44bc      	add	ip, r7
 800d228:	bf58      	it	pl
 800d22a:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800d22c:	f8ae b004 	strh.w	fp, [lr, #4]
 800d230:	f8be b006 	ldrh.w	fp, [lr, #6]
 800d234:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800d238:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800d23a:	f8ae b006 	strh.w	fp, [lr, #6]
 800d23e:	443d      	add	r5, r7
 800d240:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800d244:	f8be b006 	ldrh.w	fp, [lr, #6]
 800d248:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800d24c:	ea5b 0307 	orrs.w	r3, fp, r7
 800d250:	d011      	beq.n	800d276 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800d252:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800d256:	f1bb 0f00 	cmp.w	fp, #0
 800d25a:	db0c      	blt.n	800d276 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800d25c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800d25e:	45bb      	cmp	fp, r7
 800d260:	da09      	bge.n	800d276 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800d262:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800d266:	45bb      	cmp	fp, r7
 800d268:	bf3c      	itt	cc
 800d26a:	f10e 0708 	addcc.w	r7, lr, #8
 800d26e:	6107      	strcc	r7, [r0, #16]
 800d270:	f10b 0701 	add.w	r7, fp, #1
 800d274:	6087      	str	r7, [r0, #8]
 800d276:	6907      	ldr	r7, [r0, #16]
 800d278:	4555      	cmp	r5, sl
 800d27a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800d27c:	803d      	strh	r5, [r7, #0]
 800d27e:	807b      	strh	r3, [r7, #2]
 800d280:	80be      	strh	r6, [r7, #4]
 800d282:	80fe      	strh	r6, [r7, #6]
 800d284:	d1c2      	bne.n	800d20c <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
 800d286:	9b01      	ldr	r3, [sp, #4]
 800d288:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800d28a:	eba3 0c0c 	sub.w	ip, r3, ip
 800d28e:	6903      	ldr	r3, [r0, #16]
 800d290:	3720      	adds	r7, #32
 800d292:	8899      	ldrh	r1, [r3, #4]
 800d294:	4461      	add	r1, ip
 800d296:	8099      	strh	r1, [r3, #4]
 800d298:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800d29a:	1a7f      	subs	r7, r7, r1
 800d29c:	88d9      	ldrh	r1, [r3, #6]
 800d29e:	fb0c 1c07 	mla	ip, ip, r7, r1
 800d2a2:	f8a3 c006 	strh.w	ip, [r3, #6]
 800d2a6:	e613      	b.n	800ced0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800d2a8:	f04f 34ff 	mov.w	r4, #4294967295
 800d2ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800d2ae:	4249      	negs	r1, r1
 800d2b0:	940d      	str	r4, [sp, #52]	@ 0x34
 800d2b2:	2400      	movs	r4, #0
 800d2b4:	437b      	muls	r3, r7
 800d2b6:	e758      	b.n	800d16a <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
 800d2b8:	9905      	ldr	r1, [sp, #20]
 800d2ba:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800d2be:	f009 0c1f 	and.w	ip, r9, #31
 800d2c2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800d2c6:	f001 011f 	and.w	r1, r1, #31
 800d2ca:	45f3      	cmp	fp, lr
 800d2cc:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800d2d0:	9102      	str	r1, [sp, #8]
 800d2d2:	9904      	ldr	r1, [sp, #16]
 800d2d4:	eba1 0406 	sub.w	r4, r1, r6
 800d2d8:	d108      	bne.n	800d2ec <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
 800d2da:	9b02      	ldr	r3, [sp, #8]
 800d2dc:	44a0      	add	r8, r4
 800d2de:	449c      	add	ip, r3
 800d2e0:	f8a7 8004 	strh.w	r8, [r7, #4]
 800d2e4:	fb04 a40c 	mla	r4, r4, ip, sl
 800d2e8:	80fc      	strh	r4, [r7, #6]
 800d2ea:	e461      	b.n	800cbb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800d2ec:	9905      	ldr	r1, [sp, #20]
 800d2ee:	ebb1 0109 	subs.w	r1, r1, r9
 800d2f2:	bf51      	iteee	pl
 800d2f4:	f1cc 0520 	rsbpl	r5, ip, #32
 800d2f8:	fb04 f40c 	mulmi.w	r4, r4, ip
 800d2fc:	4249      	negmi	r1, r1
 800d2fe:	2500      	movmi	r5, #0
 800d300:	bf5d      	ittte	pl
 800d302:	436c      	mulpl	r4, r5
 800d304:	2520      	movpl	r5, #32
 800d306:	f04f 0901 	movpl.w	r9, #1
 800d30a:	f04f 39ff 	movmi.w	r9, #4294967295
 800d30e:	9501      	str	r5, [sp, #4]
 800d310:	9b01      	ldr	r3, [sp, #4]
 800d312:	fb94 f5f1 	sdiv	r5, r4, r1
 800d316:	fb01 4415 	mls	r4, r1, r5, r4
 800d31a:	449c      	add	ip, r3
 800d31c:	eb0b 0309 	add.w	r3, fp, r9
 800d320:	2c00      	cmp	r4, #0
 800d322:	bfbc      	itt	lt
 800d324:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800d328:	1864      	addlt	r4, r4, r1
 800d32a:	44a8      	add	r8, r5
 800d32c:	fb05 ac0c 	mla	ip, r5, ip, sl
 800d330:	f8a7 8004 	strh.w	r8, [r7, #4]
 800d334:	f8a7 c006 	strh.w	ip, [r7, #6]
 800d338:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d33c:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800d340:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800d344:	ea58 0707 	orrs.w	r7, r8, r7
 800d348:	d011      	beq.n	800d36e <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800d34a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800d34e:	f1b8 0f00 	cmp.w	r8, #0
 800d352:	db0c      	blt.n	800d36e <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800d354:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800d356:	45b8      	cmp	r8, r7
 800d358:	da09      	bge.n	800d36e <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800d35a:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800d35e:	45b8      	cmp	r8, r7
 800d360:	bf3c      	itt	cc
 800d362:	f10c 0708 	addcc.w	r7, ip, #8
 800d366:	6107      	strcc	r7, [r0, #16]
 800d368:	f108 0701 	add.w	r7, r8, #1
 800d36c:	6087      	str	r7, [r0, #8]
 800d36e:	6907      	ldr	r7, [r0, #16]
 800d370:	f04f 0c00 	mov.w	ip, #0
 800d374:	b212      	sxth	r2, r2
 800d376:	459e      	cmp	lr, r3
 800d378:	803b      	strh	r3, [r7, #0]
 800d37a:	442e      	add	r6, r5
 800d37c:	807a      	strh	r2, [r7, #2]
 800d37e:	f8a7 c004 	strh.w	ip, [r7, #4]
 800d382:	f8a7 c006 	strh.w	ip, [r7, #6]
 800d386:	d04b      	beq.n	800d420 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
 800d388:	9f04      	ldr	r7, [sp, #16]
 800d38a:	1a64      	subs	r4, r4, r1
 800d38c:	f04f 0a00 	mov.w	sl, #0
 800d390:	1bbf      	subs	r7, r7, r6
 800d392:	443d      	add	r5, r7
 800d394:	016d      	lsls	r5, r5, #5
 800d396:	fb95 f8f1 	sdiv	r8, r5, r1
 800d39a:	fb01 5518 	mls	r5, r1, r8, r5
 800d39e:	4565      	cmp	r5, ip
 800d3a0:	bfbc      	itt	lt
 800d3a2:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800d3a6:	186d      	addlt	r5, r5, r1
 800d3a8:	f108 0701 	add.w	r7, r8, #1
 800d3ac:	9703      	str	r7, [sp, #12]
 800d3ae:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d3b2:	1964      	adds	r4, r4, r5
 800d3b4:	444b      	add	r3, r9
 800d3b6:	bf54      	ite	pl
 800d3b8:	9f03      	ldrpl	r7, [sp, #12]
 800d3ba:	4647      	movmi	r7, r8
 800d3bc:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800d3c0:	bf58      	it	pl
 800d3c2:	1a64      	subpl	r4, r4, r1
 800d3c4:	443e      	add	r6, r7
 800d3c6:	44bb      	add	fp, r7
 800d3c8:	f8ac b004 	strh.w	fp, [ip, #4]
 800d3cc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d3d0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800d3d4:	f8ac b006 	strh.w	fp, [ip, #6]
 800d3d8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d3dc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d3e0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800d3e4:	ea5b 0707 	orrs.w	r7, fp, r7
 800d3e8:	d011      	beq.n	800d40e <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800d3ea:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800d3ee:	f1bb 0f00 	cmp.w	fp, #0
 800d3f2:	db0c      	blt.n	800d40e <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800d3f4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800d3f6:	45bb      	cmp	fp, r7
 800d3f8:	da09      	bge.n	800d40e <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800d3fa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800d3fe:	45bb      	cmp	fp, r7
 800d400:	bf3c      	itt	cc
 800d402:	f10c 0708 	addcc.w	r7, ip, #8
 800d406:	6107      	strcc	r7, [r0, #16]
 800d408:	f10b 0701 	add.w	r7, fp, #1
 800d40c:	6087      	str	r7, [r0, #8]
 800d40e:	6907      	ldr	r7, [r0, #16]
 800d410:	459e      	cmp	lr, r3
 800d412:	803b      	strh	r3, [r7, #0]
 800d414:	807a      	strh	r2, [r7, #2]
 800d416:	f8a7 a004 	strh.w	sl, [r7, #4]
 800d41a:	f8a7 a006 	strh.w	sl, [r7, #6]
 800d41e:	d1c6      	bne.n	800d3ae <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
 800d420:	9b04      	ldr	r3, [sp, #16]
 800d422:	1b9e      	subs	r6, r3, r6
 800d424:	6903      	ldr	r3, [r0, #16]
 800d426:	889a      	ldrh	r2, [r3, #4]
 800d428:	4432      	add	r2, r6
 800d42a:	809a      	strh	r2, [r3, #4]
 800d42c:	9a02      	ldr	r2, [sp, #8]
 800d42e:	f102 0c20 	add.w	ip, r2, #32
 800d432:	9a01      	ldr	r2, [sp, #4]
 800d434:	ebac 0c02 	sub.w	ip, ip, r2
 800d438:	88da      	ldrh	r2, [r3, #6]
 800d43a:	fb06 260c 	mla	r6, r6, ip, r2
 800d43e:	80de      	strh	r6, [r3, #6]
 800d440:	f7ff bbb6 	b.w	800cbb0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

0800d444 <_ZN8touchgfx7Outline6lineToEii>:
 800d444:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800d446:	079b      	lsls	r3, r3, #30
 800d448:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d44a:	460e      	mov	r6, r1
 800d44c:	4615      	mov	r5, r2
 800d44e:	d511      	bpl.n	800d474 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800d450:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800d454:	ea86 0701 	eor.w	r7, r6, r1
 800d458:	ea85 0302 	eor.w	r3, r5, r2
 800d45c:	433b      	orrs	r3, r7
 800d45e:	d009      	beq.n	800d474 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800d460:	4633      	mov	r3, r6
 800d462:	9500      	str	r5, [sp, #0]
 800d464:	f7ff fb4c 	bl	800cb00 <_ZN8touchgfx7Outline10renderLineEiiii>
 800d468:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800d46a:	f043 0301 	orr.w	r3, r3, #1
 800d46e:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800d472:	6243      	str	r3, [r0, #36]	@ 0x24
 800d474:	b003      	add	sp, #12
 800d476:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d478 <_ZN8touchgfx7Outline6moveToEii>:
 800d478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d47a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800d47c:	4615      	mov	r5, r2
 800d47e:	4604      	mov	r4, r0
 800d480:	460e      	mov	r6, r1
 800d482:	079a      	lsls	r2, r3, #30
 800d484:	d401      	bmi.n	800d48a <_ZN8touchgfx7Outline6moveToEii+0x12>
 800d486:	f7ff fb07 	bl	800ca98 <_ZN8touchgfx7Outline5resetEv>
 800d48a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800d48c:	07db      	lsls	r3, r3, #31
 800d48e:	d504      	bpl.n	800d49a <_ZN8touchgfx7Outline6moveToEii+0x22>
 800d490:	4620      	mov	r0, r4
 800d492:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800d496:	f7ff ffd5 	bl	800d444 <_ZN8touchgfx7Outline6lineToEii>
 800d49a:	6923      	ldr	r3, [r4, #16]
 800d49c:	1170      	asrs	r0, r6, #5
 800d49e:	1169      	asrs	r1, r5, #5
 800d4a0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d4a4:	4290      	cmp	r0, r2
 800d4a6:	d103      	bne.n	800d4b0 <_ZN8touchgfx7Outline6moveToEii+0x38>
 800d4a8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800d4ac:	4291      	cmp	r1, r2
 800d4ae:	d01a      	beq.n	800d4e6 <_ZN8touchgfx7Outline6moveToEii+0x6e>
 800d4b0:	88df      	ldrh	r7, [r3, #6]
 800d4b2:	889a      	ldrh	r2, [r3, #4]
 800d4b4:	433a      	orrs	r2, r7
 800d4b6:	d010      	beq.n	800d4da <_ZN8touchgfx7Outline6moveToEii+0x62>
 800d4b8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800d4bc:	2a00      	cmp	r2, #0
 800d4be:	db0c      	blt.n	800d4da <_ZN8touchgfx7Outline6moveToEii+0x62>
 800d4c0:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800d4c2:	42ba      	cmp	r2, r7
 800d4c4:	da09      	bge.n	800d4da <_ZN8touchgfx7Outline6moveToEii+0x62>
 800d4c6:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800d4ca:	42ba      	cmp	r2, r7
 800d4cc:	f102 0201 	add.w	r2, r2, #1
 800d4d0:	bf38      	it	cc
 800d4d2:	3308      	addcc	r3, #8
 800d4d4:	60a2      	str	r2, [r4, #8]
 800d4d6:	bf38      	it	cc
 800d4d8:	6123      	strcc	r3, [r4, #16]
 800d4da:	6923      	ldr	r3, [r4, #16]
 800d4dc:	2200      	movs	r2, #0
 800d4de:	8018      	strh	r0, [r3, #0]
 800d4e0:	8059      	strh	r1, [r3, #2]
 800d4e2:	809a      	strh	r2, [r3, #4]
 800d4e4:	80da      	strh	r2, [r3, #6]
 800d4e6:	6166      	str	r6, [r4, #20]
 800d4e8:	6225      	str	r5, [r4, #32]
 800d4ea:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800d4ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d4f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800d4f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d4f4:	b0d0      	sub	sp, #320	@ 0x140
 800d4f6:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800d4fa:	466c      	mov	r4, sp
 800d4fc:	4627      	mov	r7, r4
 800d4fe:	1a0d      	subs	r5, r1, r0
 800d500:	f100 0308 	add.w	r3, r0, #8
 800d504:	2d48      	cmp	r5, #72	@ 0x48
 800d506:	f340 80d5 	ble.w	800d6b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800d50a:	112d      	asrs	r5, r5, #4
 800d50c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800d510:	f9b0 9000 	ldrsh.w	r9, [r0]
 800d514:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800d518:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800d51c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800d520:	6816      	ldr	r6, [r2, #0]
 800d522:	6006      	str	r6, [r0, #0]
 800d524:	6856      	ldr	r6, [r2, #4]
 800d526:	6046      	str	r6, [r0, #4]
 800d528:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800d52c:	f8a2 8002 	strh.w	r8, [r2, #2]
 800d530:	f8a2 e004 	strh.w	lr, [r2, #4]
 800d534:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d538:	f1a1 0208 	sub.w	r2, r1, #8
 800d53c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800d540:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800d544:	4565      	cmp	r5, ip
 800d546:	db06      	blt.n	800d556 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800d548:	d119      	bne.n	800d57e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800d54a:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800d54e:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800d552:	42ae      	cmp	r6, r5
 800d554:	dd13      	ble.n	800d57e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800d556:	460e      	mov	r6, r1
 800d558:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800d55c:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800d560:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800d564:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800d568:	601d      	str	r5, [r3, #0]
 800d56a:	6875      	ldr	r5, [r6, #4]
 800d56c:	605d      	str	r5, [r3, #4]
 800d56e:	f821 9c08 	strh.w	r9, [r1, #-8]
 800d572:	f821 cc06 	strh.w	ip, [r1, #-6]
 800d576:	f821 8c04 	strh.w	r8, [r1, #-4]
 800d57a:	f821 ec02 	strh.w	lr, [r1, #-2]
 800d57e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800d582:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800d586:	42ae      	cmp	r6, r5
 800d588:	db06      	blt.n	800d598 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800d58a:	d116      	bne.n	800d5ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800d58c:	f9b0 c000 	ldrsh.w	ip, [r0]
 800d590:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800d594:	45ac      	cmp	ip, r5
 800d596:	da10      	bge.n	800d5ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800d598:	681d      	ldr	r5, [r3, #0]
 800d59a:	f9b0 8000 	ldrsh.w	r8, [r0]
 800d59e:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800d5a2:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800d5a6:	6005      	str	r5, [r0, #0]
 800d5a8:	685d      	ldr	r5, [r3, #4]
 800d5aa:	f8a0 8008 	strh.w	r8, [r0, #8]
 800d5ae:	6045      	str	r5, [r0, #4]
 800d5b0:	8146      	strh	r6, [r0, #10]
 800d5b2:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800d5b6:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800d5ba:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800d5be:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800d5c2:	4565      	cmp	r5, ip
 800d5c4:	db06      	blt.n	800d5d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800d5c6:	d119      	bne.n	800d5fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800d5c8:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800d5cc:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d5d0:	42ae      	cmp	r6, r5
 800d5d2:	da13      	bge.n	800d5fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800d5d4:	460e      	mov	r6, r1
 800d5d6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800d5da:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800d5de:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800d5e2:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800d5e6:	6005      	str	r5, [r0, #0]
 800d5e8:	6875      	ldr	r5, [r6, #4]
 800d5ea:	6045      	str	r5, [r0, #4]
 800d5ec:	f821 9c08 	strh.w	r9, [r1, #-8]
 800d5f0:	f821 cc06 	strh.w	ip, [r1, #-6]
 800d5f4:	f821 8c04 	strh.w	r8, [r1, #-4]
 800d5f8:	f821 ec02 	strh.w	lr, [r1, #-2]
 800d5fc:	3308      	adds	r3, #8
 800d5fe:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800d602:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800d606:	45e6      	cmp	lr, ip
 800d608:	dbf8      	blt.n	800d5fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800d60a:	d105      	bne.n	800d618 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800d60c:	f9b3 6000 	ldrsh.w	r6, [r3]
 800d610:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d614:	42ae      	cmp	r6, r5
 800d616:	dbf1      	blt.n	800d5fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800d618:	4615      	mov	r5, r2
 800d61a:	3a08      	subs	r2, #8
 800d61c:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800d620:	45b4      	cmp	ip, r6
 800d622:	dbf9      	blt.n	800d618 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800d624:	d105      	bne.n	800d632 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800d626:	f9b0 8000 	ldrsh.w	r8, [r0]
 800d62a:	f9b2 6000 	ldrsh.w	r6, [r2]
 800d62e:	45b0      	cmp	r8, r6
 800d630:	dbf2      	blt.n	800d618 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800d632:	4293      	cmp	r3, r2
 800d634:	f1a5 0608 	sub.w	r6, r5, #8
 800d638:	d816      	bhi.n	800d668 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800d63a:	f8d6 c000 	ldr.w	ip, [r6]
 800d63e:	f9b3 a000 	ldrsh.w	sl, [r3]
 800d642:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800d646:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800d64a:	f8c3 c000 	str.w	ip, [r3]
 800d64e:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800d652:	f8c3 c004 	str.w	ip, [r3, #4]
 800d656:	f825 ac08 	strh.w	sl, [r5, #-8]
 800d65a:	f825 ec06 	strh.w	lr, [r5, #-6]
 800d65e:	f825 9c04 	strh.w	r9, [r5, #-4]
 800d662:	f825 8c02 	strh.w	r8, [r5, #-2]
 800d666:	e7c9      	b.n	800d5fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800d668:	f8d6 e000 	ldr.w	lr, [r6]
 800d66c:	f9b0 a000 	ldrsh.w	sl, [r0]
 800d670:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800d674:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800d678:	f8c0 e000 	str.w	lr, [r0]
 800d67c:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800d680:	1a16      	subs	r6, r2, r0
 800d682:	f8c0 e004 	str.w	lr, [r0, #4]
 800d686:	f825 ac08 	strh.w	sl, [r5, #-8]
 800d68a:	f825 cc06 	strh.w	ip, [r5, #-6]
 800d68e:	f825 9c04 	strh.w	r9, [r5, #-4]
 800d692:	f825 8c02 	strh.w	r8, [r5, #-2]
 800d696:	1acd      	subs	r5, r1, r3
 800d698:	10ed      	asrs	r5, r5, #3
 800d69a:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800d69e:	bfb5      	itete	lt
 800d6a0:	e9c4 0200 	strdlt	r0, r2, [r4]
 800d6a4:	e9c4 3100 	strdge	r3, r1, [r4]
 800d6a8:	460a      	movlt	r2, r1
 800d6aa:	4603      	movge	r3, r0
 800d6ac:	3408      	adds	r4, #8
 800d6ae:	4618      	mov	r0, r3
 800d6b0:	4611      	mov	r1, r2
 800d6b2:	e724      	b.n	800d4fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800d6b4:	4299      	cmp	r1, r3
 800d6b6:	d927      	bls.n	800d708 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
 800d6b8:	f1a3 0210 	sub.w	r2, r3, #16
 800d6bc:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800d6c0:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800d6c4:	45ac      	cmp	ip, r5
 800d6c6:	db06      	blt.n	800d6d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800d6c8:	d11c      	bne.n	800d704 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 800d6ca:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800d6ce:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800d6d2:	42ae      	cmp	r6, r5
 800d6d4:	da16      	bge.n	800d704 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 800d6d6:	4615      	mov	r5, r2
 800d6d8:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800d6dc:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800d6e0:	3a08      	subs	r2, #8
 800d6e2:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800d6e6:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
 800d6ea:	6196      	str	r6, [r2, #24]
 800d6ec:	42a8      	cmp	r0, r5
 800d6ee:	686e      	ldr	r6, [r5, #4]
 800d6f0:	f8a2 9010 	strh.w	r9, [r2, #16]
 800d6f4:	61d6      	str	r6, [r2, #28]
 800d6f6:	f8a2 c012 	strh.w	ip, [r2, #18]
 800d6fa:	f8a2 8014 	strh.w	r8, [r2, #20]
 800d6fe:	f8a2 e016 	strh.w	lr, [r2, #22]
 800d702:	d1db      	bne.n	800d6bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800d704:	3308      	adds	r3, #8
 800d706:	e7d5      	b.n	800d6b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800d708:	42bc      	cmp	r4, r7
 800d70a:	d903      	bls.n	800d714 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
 800d70c:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800d710:	3c08      	subs	r4, #8
 800d712:	e6f4      	b.n	800d4fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800d714:	b050      	add	sp, #320	@ 0x140
 800d716:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800d71a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800d71a:	b510      	push	{r4, lr}
 800d71c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800d71e:	4604      	mov	r4, r0
 800d720:	07da      	lsls	r2, r3, #31
 800d722:	d507      	bpl.n	800d734 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800d724:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800d728:	f7ff fe8c 	bl	800d444 <_ZN8touchgfx7Outline6lineToEii>
 800d72c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800d72e:	f023 0301 	bic.w	r3, r3, #1
 800d732:	6243      	str	r3, [r0, #36]	@ 0x24
 800d734:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800d736:	079b      	lsls	r3, r3, #30
 800d738:	d521      	bpl.n	800d77e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800d73a:	6923      	ldr	r3, [r4, #16]
 800d73c:	88d9      	ldrh	r1, [r3, #6]
 800d73e:	889a      	ldrh	r2, [r3, #4]
 800d740:	430a      	orrs	r2, r1
 800d742:	d010      	beq.n	800d766 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800d744:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800d748:	2a00      	cmp	r2, #0
 800d74a:	db0c      	blt.n	800d766 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800d74c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800d74e:	428a      	cmp	r2, r1
 800d750:	da09      	bge.n	800d766 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800d752:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800d756:	4291      	cmp	r1, r2
 800d758:	f102 0201 	add.w	r2, r2, #1
 800d75c:	bf88      	it	hi
 800d75e:	3308      	addhi	r3, #8
 800d760:	60a2      	str	r2, [r4, #8]
 800d762:	bf88      	it	hi
 800d764:	6123      	strhi	r3, [r4, #16]
 800d766:	68a1      	ldr	r1, [r4, #8]
 800d768:	b129      	cbz	r1, 800d776 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800d76a:	6863      	ldr	r3, [r4, #4]
 800d76c:	4299      	cmp	r1, r3
 800d76e:	d802      	bhi.n	800d776 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800d770:	68e0      	ldr	r0, [r4, #12]
 800d772:	f7ff febd 	bl	800d4f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800d776:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800d778:	f023 0302 	bic.w	r3, r3, #2
 800d77c:	6263      	str	r3, [r4, #36]	@ 0x24
 800d77e:	68e0      	ldr	r0, [r4, #12]
 800d780:	bd10      	pop	{r4, pc}
	...

0800d784 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800d784:	4b02      	ldr	r3, [pc, #8]	@ (800d790 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800d786:	6018      	str	r0, [r3, #0]
 800d788:	4b02      	ldr	r3, [pc, #8]	@ (800d794 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800d78a:	6019      	str	r1, [r3, #0]
 800d78c:	4770      	bx	lr
 800d78e:	bf00      	nop
 800d790:	20016a08 	.word	0x20016a08
 800d794:	20016a0c 	.word	0x20016a0c

0800d798 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 800d798:	2300      	movs	r3, #0
 800d79a:	4a02      	ldr	r2, [pc, #8]	@ (800d7a4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 800d79c:	6013      	str	r3, [r2, #0]
 800d79e:	4a02      	ldr	r2, [pc, #8]	@ (800d7a8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 800d7a0:	6013      	str	r3, [r2, #0]
 800d7a2:	4770      	bx	lr
 800d7a4:	20016a08 	.word	0x20016a08
 800d7a8:	20016a0c 	.word	0x20016a0c

0800d7ac <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800d7ac:	4b01      	ldr	r3, [pc, #4]	@ (800d7b4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800d7ae:	6818      	ldr	r0, [r3, #0]
 800d7b0:	4770      	bx	lr
 800d7b2:	bf00      	nop
 800d7b4:	20016a08 	.word	0x20016a08

0800d7b8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800d7b8:	4b01      	ldr	r3, [pc, #4]	@ (800d7c0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800d7ba:	6818      	ldr	r0, [r3, #0]
 800d7bc:	4770      	bx	lr
 800d7be:	bf00      	nop
 800d7c0:	20016a0c 	.word	0x20016a0c

0800d7c4 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800d7c4:	b510      	push	{r4, lr}
 800d7c6:	6803      	ldr	r3, [r0, #0]
 800d7c8:	460c      	mov	r4, r1
 800d7ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d7cc:	4798      	blx	r3
 800d7ce:	1b03      	subs	r3, r0, r4
 800d7d0:	4258      	negs	r0, r3
 800d7d2:	4158      	adcs	r0, r3
 800d7d4:	bd10      	pop	{r4, pc}
	...

0800d7d8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800d7d8:	4b01      	ldr	r3, [pc, #4]	@ (800d7e0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800d7da:	6019      	str	r1, [r3, #0]
 800d7dc:	4770      	bx	lr
 800d7de:	bf00      	nop
 800d7e0:	20016a10 	.word	0x20016a10

0800d7e4 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800d7e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7e8:	4696      	mov	lr, r2
 800d7ea:	b097      	sub	sp, #92	@ 0x5c
 800d7ec:	4605      	mov	r5, r0
 800d7ee:	4614      	mov	r4, r2
 800d7f0:	460e      	mov	r6, r1
 800d7f2:	461f      	mov	r7, r3
 800d7f4:	f10d 0c1c 	add.w	ip, sp, #28
 800d7f8:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800d7fc:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800d800:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800d804:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d808:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d80c:	f8de 3000 	ldr.w	r3, [lr]
 800d810:	f104 0e14 	add.w	lr, r4, #20
 800d814:	f8cc 3000 	str.w	r3, [ip]
 800d818:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800d81c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d820:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d824:	f8de 3000 	ldr.w	r3, [lr]
 800d828:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800d82c:	f8cc 3000 	str.w	r3, [ip]
 800d830:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800d834:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d838:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d83c:	f8de 3000 	ldr.w	r3, [lr]
 800d840:	4631      	mov	r1, r6
 800d842:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800d844:	4628      	mov	r0, r5
 800d846:	f8cc 3000 	str.w	r3, [ip]
 800d84a:	682b      	ldr	r3, [r5, #0]
 800d84c:	9201      	str	r2, [sp, #4]
 800d84e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800d850:	f8cd 8008 	str.w	r8, [sp, #8]
 800d854:	9200      	str	r2, [sp, #0]
 800d856:	aa07      	add	r2, sp, #28
 800d858:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800d85c:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800d860:	463b      	mov	r3, r7
 800d862:	47d8      	blx	fp
 800d864:	46a6      	mov	lr, r4
 800d866:	f10d 0c1c 	add.w	ip, sp, #28
 800d86a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d86e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d872:	f8de 3000 	ldr.w	r3, [lr]
 800d876:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800d87a:	343c      	adds	r4, #60	@ 0x3c
 800d87c:	f8cc 3000 	str.w	r3, [ip]
 800d880:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800d884:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d888:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d88c:	f8de 3000 	ldr.w	r3, [lr]
 800d890:	f8cc 3000 	str.w	r3, [ip]
 800d894:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800d898:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d89a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d89e:	6823      	ldr	r3, [r4, #0]
 800d8a0:	4631      	mov	r1, r6
 800d8a2:	4628      	mov	r0, r5
 800d8a4:	f8cc 3000 	str.w	r3, [ip]
 800d8a8:	682b      	ldr	r3, [r5, #0]
 800d8aa:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800d8ae:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800d8b0:	f8cd 8008 	str.w	r8, [sp, #8]
 800d8b4:	9201      	str	r2, [sp, #4]
 800d8b6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800d8b8:	9200      	str	r2, [sp, #0]
 800d8ba:	aa07      	add	r2, sp, #28
 800d8bc:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800d8be:	463b      	mov	r3, r7
 800d8c0:	47a0      	blx	r4
 800d8c2:	b017      	add	sp, #92	@ 0x5c
 800d8c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d8c8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800d8c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d8cc:	b08d      	sub	sp, #52	@ 0x34
 800d8ce:	4688      	mov	r8, r1
 800d8d0:	f8d3 c000 	ldr.w	ip, [r3]
 800d8d4:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800d8d6:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800d8da:	680f      	ldr	r7, [r1, #0]
 800d8dc:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800d8e0:	eba7 070c 	sub.w	r7, r7, ip
 800d8e4:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800d8e8:	edd3 6a07 	vldr	s13, [r3, #28]
 800d8ec:	42bc      	cmp	r4, r7
 800d8ee:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800d8f0:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800d8f4:	bfa8      	it	ge
 800d8f6:	463c      	movge	r4, r7
 800d8f8:	f9b1 9000 	ldrsh.w	r9, [r1]
 800d8fc:	f9ba 1000 	ldrsh.w	r1, [sl]
 800d900:	ee07 4a90 	vmov	s15, r4
 800d904:	eb09 0e0c 	add.w	lr, r9, ip
 800d908:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800d90c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800d910:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800d914:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800d918:	4571      	cmp	r1, lr
 800d91a:	ee25 4a04 	vmul.f32	s8, s10, s8
 800d91e:	ee65 4a24 	vmul.f32	s9, s10, s9
 800d922:	ee25 5a27 	vmul.f32	s10, s10, s15
 800d926:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800d92a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800d92e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800d932:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800d936:	ee36 0a84 	vadd.f32	s0, s13, s8
 800d93a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d93e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d942:	f340 808c 	ble.w	800da5e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800d946:	eba1 060e 	sub.w	r6, r1, lr
 800d94a:	fb96 f5f4 	sdiv	r5, r6, r4
 800d94e:	ee07 5a10 	vmov	s14, r5
 800d952:	2d00      	cmp	r5, #0
 800d954:	fb04 6615 	mls	r6, r4, r5, r6
 800d958:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d95c:	eea7 0a04 	vfma.f32	s0, s14, s8
 800d960:	eee7 0a24 	vfma.f32	s1, s14, s9
 800d964:	eea7 1a05 	vfma.f32	s2, s14, s10
 800d968:	dd12      	ble.n	800d990 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800d96a:	ee70 6a44 	vsub.f32	s13, s0, s8
 800d96e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800d972:	ee31 2a45 	vsub.f32	s4, s2, s10
 800d976:	eef5 6a40 	vcmp.f32	s13, #0.0
 800d97a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d97e:	bf14      	ite	ne
 800d980:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800d984:	eeb0 7a67 	vmoveq.f32	s14, s15
 800d988:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d98c:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d990:	fb05 f204 	mul.w	r2, r5, r4
 800d994:	1abf      	subs	r7, r7, r2
 800d996:	4494      	add	ip, r2
 800d998:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800d99c:	4411      	add	r1, r2
 800d99e:	eb09 020c 	add.w	r2, r9, ip
 800d9a2:	b209      	sxth	r1, r1
 800d9a4:	443a      	add	r2, r7
 800d9a6:	428a      	cmp	r2, r1
 800d9a8:	bfc4      	itt	gt
 800d9aa:	eba1 0209 	subgt.w	r2, r1, r9
 800d9ae:	eba2 070c 	subgt.w	r7, r2, ip
 800d9b2:	2f00      	cmp	r7, #0
 800d9b4:	dd50      	ble.n	800da58 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800d9b6:	fb97 f1f4 	sdiv	r1, r7, r4
 800d9ba:	fb04 7211 	mls	r2, r4, r1, r7
 800d9be:	b90a      	cbnz	r2, 800d9c4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800d9c0:	3901      	subs	r1, #1
 800d9c2:	4622      	mov	r2, r4
 800d9c4:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800d9c8:	6840      	ldr	r0, [r0, #4]
 800d9ca:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800d9ce:	44b6      	add	lr, r6
 800d9d0:	f8d0 a000 	ldr.w	sl, [r0]
 800d9d4:	2900      	cmp	r1, #0
 800d9d6:	bfcc      	ite	gt
 800d9d8:	46a1      	movgt	r9, r4
 800d9da:	4691      	movle	r9, r2
 800d9dc:	900b      	str	r0, [sp, #44]	@ 0x2c
 800d9de:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800d9e0:	fb04 e505 	mla	r5, r4, r5, lr
 800d9e4:	eef0 6a42 	vmov.f32	s13, s4
 800d9e8:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800d9ec:	9008      	str	r0, [sp, #32]
 800d9ee:	eeb0 7a61 	vmov.f32	s14, s3
 800d9f2:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800d9f4:	695b      	ldr	r3, [r3, #20]
 800d9f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800d9fa:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800d9fe:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800da02:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800da04:	445b      	add	r3, fp
 800da06:	9307      	str	r3, [sp, #28]
 800da08:	ee16 3a90 	vmov	r3, s13
 800da0c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800da10:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800da14:	ee21 3a23 	vmul.f32	s6, s2, s7
 800da18:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800da1c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800da20:	ee17 7a90 	vmov	r7, s15
 800da24:	ee73 7a42 	vsub.f32	s15, s6, s4
 800da28:	fb97 f7f4 	sdiv	r7, r7, r4
 800da2c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800da30:	ee17 ca90 	vmov	ip, s15
 800da34:	fb9c fcf4 	sdiv	ip, ip, r4
 800da38:	fb0c 3306 	mla	r3, ip, r6, r3
 800da3c:	9302      	str	r3, [sp, #8]
 800da3e:	ee17 3a10 	vmov	r3, s14
 800da42:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800da46:	fb07 3706 	mla	r7, r7, r6, r3
 800da4a:	eba9 0306 	sub.w	r3, r9, r6
 800da4e:	e9cd 4700 	strd	r4, r7, [sp]
 800da52:	f8da 4008 	ldr.w	r4, [sl, #8]
 800da56:	47a0      	blx	r4
 800da58:	b00d      	add	sp, #52	@ 0x34
 800da5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da5e:	2500      	movs	r5, #0
 800da60:	462e      	mov	r6, r5
 800da62:	e799      	b.n	800d998 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800da64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800da64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da68:	b0db      	sub	sp, #364	@ 0x16c
 800da6a:	461d      	mov	r5, r3
 800da6c:	4614      	mov	r4, r2
 800da6e:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800da72:	910f      	str	r1, [sp, #60]	@ 0x3c
 800da74:	4629      	mov	r1, r5
 800da76:	930a      	str	r3, [sp, #40]	@ 0x28
 800da78:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800da7c:	9009      	str	r0, [sp, #36]	@ 0x24
 800da7e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800da80:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800da84:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800da88:	9310      	str	r3, [sp, #64]	@ 0x40
 800da8a:	6803      	ldr	r3, [r0, #0]
 800da8c:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800da8e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800da92:	47b8      	blx	r7
 800da94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800da96:	6058      	str	r0, [r3, #4]
 800da98:	2800      	cmp	r0, #0
 800da9a:	f000 83a1 	beq.w	800e1e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800da9e:	682b      	ldr	r3, [r5, #0]
 800daa0:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800daa4:	ed94 7a02 	vldr	s14, [r4, #8]
 800daa8:	9314      	str	r3, [sp, #80]	@ 0x50
 800daaa:	686b      	ldr	r3, [r5, #4]
 800daac:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800dab0:	9315      	str	r3, [sp, #84]	@ 0x54
 800dab2:	4bc1      	ldr	r3, [pc, #772]	@ (800ddb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800dab4:	7819      	ldrb	r1, [r3, #0]
 800dab6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800daba:	2900      	cmp	r1, #0
 800dabc:	bf16      	itet	ne
 800dabe:	4619      	movne	r1, r3
 800dac0:	4611      	moveq	r1, r2
 800dac2:	4613      	movne	r3, r2
 800dac4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dac8:	9116      	str	r1, [sp, #88]	@ 0x58
 800daca:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800dace:	f240 8387 	bls.w	800e1e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dad2:	ed94 7a07 	vldr	s14, [r4, #28]
 800dad6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800dada:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dade:	f240 837f 	bls.w	800e1e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dae2:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800dae6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800daea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800daee:	f240 8377 	bls.w	800e1e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800daf2:	6822      	ldr	r2, [r4, #0]
 800daf4:	4bb1      	ldr	r3, [pc, #708]	@ (800ddbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800daf6:	429a      	cmp	r2, r3
 800daf8:	f2c0 8372 	blt.w	800e1e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dafc:	49b0      	ldr	r1, [pc, #704]	@ (800ddc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800dafe:	6963      	ldr	r3, [r4, #20]
 800db00:	428a      	cmp	r2, r1
 800db02:	f300 836d 	bgt.w	800e1e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800db06:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800db0a:	48ae      	ldr	r0, [pc, #696]	@ (800ddc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800db0c:	33ff      	adds	r3, #255	@ 0xff
 800db0e:	4283      	cmp	r3, r0
 800db10:	f200 8366 	bhi.w	800e1e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800db14:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800db16:	4dac      	ldr	r5, [pc, #688]	@ (800ddc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800db18:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800db1c:	33ff      	adds	r3, #255	@ 0xff
 800db1e:	42ab      	cmp	r3, r5
 800db20:	f200 835e 	bhi.w	800e1e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800db24:	6862      	ldr	r2, [r4, #4]
 800db26:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800db2a:	33ff      	adds	r3, #255	@ 0xff
 800db2c:	4283      	cmp	r3, r0
 800db2e:	f200 8357 	bhi.w	800e1e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800db32:	69a1      	ldr	r1, [r4, #24]
 800db34:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800db38:	33ff      	adds	r3, #255	@ 0xff
 800db3a:	4283      	cmp	r3, r0
 800db3c:	f200 8350 	bhi.w	800e1e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800db40:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800db42:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800db46:	30ff      	adds	r0, #255	@ 0xff
 800db48:	42a8      	cmp	r0, r5
 800db4a:	f200 8349 	bhi.w	800e1e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800db4e:	428a      	cmp	r2, r1
 800db50:	f280 8110 	bge.w	800dd74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800db54:	429a      	cmp	r2, r3
 800db56:	f300 8119 	bgt.w	800dd8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800db5a:	4299      	cmp	r1, r3
 800db5c:	f280 811d 	bge.w	800dd9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800db60:	2502      	movs	r5, #2
 800db62:	2701      	movs	r7, #1
 800db64:	46a9      	mov	r9, r5
 800db66:	46b8      	mov	r8, r7
 800db68:	f04f 0a00 	mov.w	sl, #0
 800db6c:	4621      	mov	r1, r4
 800db6e:	a849      	add	r0, sp, #292	@ 0x124
 800db70:	f003 fd66 	bl	8011640 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800db74:	4622      	mov	r2, r4
 800db76:	4653      	mov	r3, sl
 800db78:	a949      	add	r1, sp, #292	@ 0x124
 800db7a:	f8cd 9000 	str.w	r9, [sp]
 800db7e:	a819      	add	r0, sp, #100	@ 0x64
 800db80:	f003 fe8e 	bl	80118a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800db84:	4622      	mov	r2, r4
 800db86:	4653      	mov	r3, sl
 800db88:	a949      	add	r1, sp, #292	@ 0x124
 800db8a:	f8cd 8000 	str.w	r8, [sp]
 800db8e:	a829      	add	r0, sp, #164	@ 0xa4
 800db90:	f003 fe86 	bl	80118a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800db94:	4643      	mov	r3, r8
 800db96:	4622      	mov	r2, r4
 800db98:	a949      	add	r1, sp, #292	@ 0x124
 800db9a:	f8cd 9000 	str.w	r9, [sp]
 800db9e:	a839      	add	r0, sp, #228	@ 0xe4
 800dba0:	f003 fe7e 	bl	80118a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800dba4:	42af      	cmp	r7, r5
 800dba6:	af12      	add	r7, sp, #72	@ 0x48
 800dba8:	bfb7      	itett	lt
 800dbaa:	2300      	movlt	r3, #0
 800dbac:	2301      	movge	r3, #1
 800dbae:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800dbb0:	ac19      	addlt	r4, sp, #100	@ 0x64
 800dbb2:	bfb1      	iteee	lt
 800dbb4:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800dbb6:	ad19      	addge	r5, sp, #100	@ 0x64
 800dbb8:	930e      	strge	r3, [sp, #56]	@ 0x38
 800dbba:	ac29      	addge	r4, sp, #164	@ 0xa4
 800dbbc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800dbbe:	e893 0003 	ldmia.w	r3, {r0, r1}
 800dbc2:	e887 0003 	stmia.w	r7, {r0, r1}
 800dbc6:	b928      	cbnz	r0, 800dbd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800dbc8:	4b80      	ldr	r3, [pc, #512]	@ (800ddcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800dbca:	6818      	ldr	r0, [r3, #0]
 800dbcc:	6803      	ldr	r3, [r0, #0]
 800dbce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dbd0:	4798      	blx	r3
 800dbd2:	6038      	str	r0, [r7, #0]
 800dbd4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800dbd6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800dbda:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800dbde:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800dbe0:	930c      	str	r3, [sp, #48]	@ 0x30
 800dbe2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800dbe4:	6963      	ldr	r3, [r4, #20]
 800dbe6:	440b      	add	r3, r1
 800dbe8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800dbec:	4408      	add	r0, r1
 800dbee:	b200      	sxth	r0, r0
 800dbf0:	4283      	cmp	r3, r0
 800dbf2:	900d      	str	r0, [sp, #52]	@ 0x34
 800dbf4:	f280 80dd 	bge.w	800ddb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800dbf8:	428b      	cmp	r3, r1
 800dbfa:	da08      	bge.n	800dc0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800dbfc:	2a00      	cmp	r2, #0
 800dbfe:	dd06      	ble.n	800dc0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800dc00:	1acb      	subs	r3, r1, r3
 800dc02:	429a      	cmp	r2, r3
 800dc04:	f2c0 80e4 	blt.w	800ddd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800dc08:	2b00      	cmp	r3, #0
 800dc0a:	f300 80e2 	bgt.w	800ddd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800dc0e:	6967      	ldr	r7, [r4, #20]
 800dc10:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800dc14:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800dc16:	443b      	add	r3, r7
 800dc18:	461f      	mov	r7, r3
 800dc1a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800dc1c:	1bdf      	subs	r7, r3, r7
 800dc1e:	4297      	cmp	r7, r2
 800dc20:	bfa8      	it	ge
 800dc22:	4617      	movge	r7, r2
 800dc24:	2f00      	cmp	r7, #0
 800dc26:	f340 8166 	ble.w	800def6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800dc2a:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800dc2c:	6829      	ldr	r1, [r5, #0]
 800dc2e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dc32:	f9bb 3000 	ldrsh.w	r3, [fp]
 800dc36:	4411      	add	r1, r2
 800dc38:	6820      	ldr	r0, [r4, #0]
 800dc3a:	4299      	cmp	r1, r3
 800dc3c:	dd1a      	ble.n	800dc74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800dc3e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800dc42:	4402      	add	r2, r0
 800dc44:	440b      	add	r3, r1
 800dc46:	b21b      	sxth	r3, r3
 800dc48:	429a      	cmp	r2, r3
 800dc4a:	dc13      	bgt.n	800dc74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800dc4c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800dc4e:	a912      	add	r1, sp, #72	@ 0x48
 800dc50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800dc52:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800dc54:	681b      	ldr	r3, [r3, #0]
 800dc56:	9206      	str	r2, [sp, #24]
 800dc58:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800dc5a:	9500      	str	r5, [sp, #0]
 800dc5c:	9205      	str	r2, [sp, #20]
 800dc5e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800dc60:	e9cd b203 	strd	fp, r2, [sp, #12]
 800dc64:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800dc66:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800dc6a:	aa49      	add	r2, sp, #292	@ 0x124
 800dc6c:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800dc70:	4623      	mov	r3, r4
 800dc72:	47c8      	blx	r9
 800dc74:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800dc78:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800dc7c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800dc80:	ee37 7a27 	vadd.f32	s14, s14, s15
 800dc84:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800dc88:	68a1      	ldr	r1, [r4, #8]
 800dc8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dc8e:	ed94 6a08 	vldr	s12, [r4, #32]
 800dc92:	edd4 6a07 	vldr	s13, [r4, #28]
 800dc96:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800dc9a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800dc9e:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800dca2:	e9d4 2300 	ldrd	r2, r3, [r4]
 800dca6:	edc4 6a07 	vstr	s13, [r4, #28]
 800dcaa:	441a      	add	r2, r3
 800dcac:	6963      	ldr	r3, [r4, #20]
 800dcae:	3301      	adds	r3, #1
 800dcb0:	6022      	str	r2, [r4, #0]
 800dcb2:	6163      	str	r3, [r4, #20]
 800dcb4:	69a3      	ldr	r3, [r4, #24]
 800dcb6:	3b01      	subs	r3, #1
 800dcb8:	61a3      	str	r3, [r4, #24]
 800dcba:	6923      	ldr	r3, [r4, #16]
 800dcbc:	440b      	add	r3, r1
 800dcbe:	68e1      	ldr	r1, [r4, #12]
 800dcc0:	428b      	cmp	r3, r1
 800dcc2:	6123      	str	r3, [r4, #16]
 800dcc4:	db15      	blt.n	800dcf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800dcc6:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800dcca:	3201      	adds	r2, #1
 800dccc:	1a5b      	subs	r3, r3, r1
 800dcce:	ee76 6a26 	vadd.f32	s13, s12, s13
 800dcd2:	6022      	str	r2, [r4, #0]
 800dcd4:	6123      	str	r3, [r4, #16]
 800dcd6:	edc4 6a07 	vstr	s13, [r4, #28]
 800dcda:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800dcde:	ee36 7a87 	vadd.f32	s14, s13, s14
 800dce2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800dce6:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800dcea:	ee77 7a27 	vadd.f32	s15, s14, s15
 800dcee:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800dcf2:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800dcf6:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800dcfa:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800dcfe:	ee37 7a27 	vadd.f32	s14, s14, s15
 800dd02:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800dd06:	68a9      	ldr	r1, [r5, #8]
 800dd08:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dd0c:	ed95 6a08 	vldr	s12, [r5, #32]
 800dd10:	edd5 6a07 	vldr	s13, [r5, #28]
 800dd14:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800dd18:	ee76 6a86 	vadd.f32	s13, s13, s12
 800dd1c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800dd20:	e9d5 2300 	ldrd	r2, r3, [r5]
 800dd24:	edc5 6a07 	vstr	s13, [r5, #28]
 800dd28:	441a      	add	r2, r3
 800dd2a:	696b      	ldr	r3, [r5, #20]
 800dd2c:	3301      	adds	r3, #1
 800dd2e:	602a      	str	r2, [r5, #0]
 800dd30:	616b      	str	r3, [r5, #20]
 800dd32:	69ab      	ldr	r3, [r5, #24]
 800dd34:	3b01      	subs	r3, #1
 800dd36:	61ab      	str	r3, [r5, #24]
 800dd38:	692b      	ldr	r3, [r5, #16]
 800dd3a:	440b      	add	r3, r1
 800dd3c:	68e9      	ldr	r1, [r5, #12]
 800dd3e:	428b      	cmp	r3, r1
 800dd40:	612b      	str	r3, [r5, #16]
 800dd42:	db15      	blt.n	800dd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800dd44:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800dd48:	3201      	adds	r2, #1
 800dd4a:	1a5b      	subs	r3, r3, r1
 800dd4c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800dd50:	602a      	str	r2, [r5, #0]
 800dd52:	612b      	str	r3, [r5, #16]
 800dd54:	edc5 6a07 	vstr	s13, [r5, #28]
 800dd58:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800dd5c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800dd60:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800dd64:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800dd68:	ee77 7a27 	vadd.f32	s15, s14, s15
 800dd6c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800dd70:	3f01      	subs	r7, #1
 800dd72:	e757      	b.n	800dc24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800dd74:	4299      	cmp	r1, r3
 800dd76:	dc13      	bgt.n	800dda0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800dd78:	429a      	cmp	r2, r3
 800dd7a:	da14      	bge.n	800dda6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800dd7c:	2502      	movs	r5, #2
 800dd7e:	2703      	movs	r7, #3
 800dd80:	f04f 0800 	mov.w	r8, #0
 800dd84:	46a9      	mov	r9, r5
 800dd86:	f04f 0a01 	mov.w	sl, #1
 800dd8a:	e6ef      	b.n	800db6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800dd8c:	2501      	movs	r5, #1
 800dd8e:	2700      	movs	r7, #0
 800dd90:	46a9      	mov	r9, r5
 800dd92:	46b8      	mov	r8, r7
 800dd94:	f04f 0a02 	mov.w	sl, #2
 800dd98:	e6e8      	b.n	800db6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800dd9a:	2501      	movs	r5, #1
 800dd9c:	2702      	movs	r7, #2
 800dd9e:	e6e1      	b.n	800db64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800dda0:	2500      	movs	r5, #0
 800dda2:	2701      	movs	r7, #1
 800dda4:	e7f4      	b.n	800dd90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800dda6:	2702      	movs	r7, #2
 800dda8:	2503      	movs	r5, #3
 800ddaa:	f04f 0900 	mov.w	r9, #0
 800ddae:	46b8      	mov	r8, r7
 800ddb0:	e7e9      	b.n	800dd86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800ddb2:	4613      	mov	r3, r2
 800ddb4:	e728      	b.n	800dc08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800ddb6:	bf00      	nop
 800ddb8:	200169f8 	.word	0x200169f8
 800ddbc:	fffd8f01 	.word	0xfffd8f01
 800ddc0:	00027100 	.word	0x00027100
 800ddc4:	0004e1ff 	.word	0x0004e1ff
 800ddc8:	0004e1fe 	.word	0x0004e1fe
 800ddcc:	20016a00 	.word	0x20016a00
 800ddd0:	4613      	mov	r3, r2
 800ddd2:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800ddd4:	469e      	mov	lr, r3
 800ddd6:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800ddd8:	469c      	mov	ip, r3
 800ddda:	9111      	str	r1, [sp, #68]	@ 0x44
 800dddc:	f04f 0900 	mov.w	r9, #0
 800dde0:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800dde4:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800dde8:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800ddec:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800ddf0:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800ddf4:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800ddf8:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800ddfc:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800de00:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800de04:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800de08:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800de0c:	f1bc 0f00 	cmp.w	ip, #0
 800de10:	d147      	bne.n	800dea2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800de12:	eb03 0c07 	add.w	ip, r3, r7
 800de16:	1ad7      	subs	r7, r2, r3
 800de18:	f1b9 0f00 	cmp.w	r9, #0
 800de1c:	d009      	beq.n	800de32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800de1e:	9029      	str	r0, [sp, #164]	@ 0xa4
 800de20:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800de24:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800de28:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800de2c:	912d      	str	r1, [sp, #180]	@ 0xb4
 800de2e:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800de32:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800de34:	f04f 0800 	mov.w	r8, #0
 800de38:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800de3c:	9111      	str	r1, [sp, #68]	@ 0x44
 800de3e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800de42:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800de46:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800de4a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800de4e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800de52:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800de56:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800de5a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800de5e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800de62:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800de66:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800de6a:	f1be 0f00 	cmp.w	lr, #0
 800de6e:	d031      	beq.n	800ded4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800de70:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800de72:	4450      	add	r0, sl
 800de74:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800de78:	4431      	add	r1, r6
 800de7a:	ee37 7a04 	vadd.f32	s14, s14, s8
 800de7e:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800de82:	4549      	cmp	r1, r9
 800de84:	db08      	blt.n	800de98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800de86:	ee77 7a85 	vadd.f32	s15, s15, s10
 800de8a:	3001      	adds	r0, #1
 800de8c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800de90:	eba1 0109 	sub.w	r1, r1, r9
 800de94:	ee37 7a06 	vadd.f32	s14, s14, s12
 800de98:	f10e 3eff 	add.w	lr, lr, #4294967295
 800de9c:	f04f 0801 	mov.w	r8, #1
 800dea0:	e7e3      	b.n	800de6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800dea2:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800dea4:	4450      	add	r0, sl
 800dea6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800deaa:	4431      	add	r1, r6
 800deac:	ee77 7a84 	vadd.f32	s15, s15, s8
 800deb0:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800deb4:	4541      	cmp	r1, r8
 800deb6:	db08      	blt.n	800deca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800deb8:	ee76 6a85 	vadd.f32	s13, s13, s10
 800debc:	3001      	adds	r0, #1
 800debe:	ee37 7a25 	vadd.f32	s14, s14, s11
 800dec2:	eba1 0108 	sub.w	r1, r1, r8
 800dec6:	ee77 7a86 	vadd.f32	s15, s15, s12
 800deca:	f10c 3cff 	add.w	ip, ip, #4294967295
 800dece:	f04f 0901 	mov.w	r9, #1
 800ded2:	e79b      	b.n	800de0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ded4:	449c      	add	ip, r3
 800ded6:	1aff      	subs	r7, r7, r3
 800ded8:	f1b8 0f00 	cmp.w	r8, #0
 800dedc:	d009      	beq.n	800def2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800dede:	9019      	str	r0, [sp, #100]	@ 0x64
 800dee0:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800dee4:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800dee8:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800deec:	911d      	str	r1, [sp, #116]	@ 0x74
 800deee:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800def2:	1ad2      	subs	r2, r2, r3
 800def4:	e68b      	b.n	800dc0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800def6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800def8:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800defa:	2b00      	cmp	r3, #0
 800defc:	f000 80d1 	beq.w	800e0a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800df00:	ad19      	add	r5, sp, #100	@ 0x64
 800df02:	ac39      	add	r4, sp, #228	@ 0xe4
 800df04:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800df06:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800df0a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800df0e:	930c      	str	r3, [sp, #48]	@ 0x30
 800df10:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800df12:	6963      	ldr	r3, [r4, #20]
 800df14:	440b      	add	r3, r1
 800df16:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800df1a:	4408      	add	r0, r1
 800df1c:	b200      	sxth	r0, r0
 800df1e:	4283      	cmp	r3, r0
 800df20:	900d      	str	r0, [sp, #52]	@ 0x34
 800df22:	f280 80c1 	bge.w	800e0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800df26:	428b      	cmp	r3, r1
 800df28:	da08      	bge.n	800df3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800df2a:	2a00      	cmp	r2, #0
 800df2c:	dd06      	ble.n	800df3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800df2e:	1acb      	subs	r3, r1, r3
 800df30:	429a      	cmp	r2, r3
 800df32:	f2c0 80bb 	blt.w	800e0ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800df36:	2b00      	cmp	r3, #0
 800df38:	f300 80b9 	bgt.w	800e0ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800df3c:	6967      	ldr	r7, [r4, #20]
 800df3e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800df42:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800df44:	443b      	add	r3, r7
 800df46:	461f      	mov	r7, r3
 800df48:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800df4a:	1bdf      	subs	r7, r3, r7
 800df4c:	4297      	cmp	r7, r2
 800df4e:	bfa8      	it	ge
 800df50:	4617      	movge	r7, r2
 800df52:	2f00      	cmp	r7, #0
 800df54:	f340 813c 	ble.w	800e1d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800df58:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800df5a:	6829      	ldr	r1, [r5, #0]
 800df5c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800df60:	f9bb 3000 	ldrsh.w	r3, [fp]
 800df64:	4411      	add	r1, r2
 800df66:	6820      	ldr	r0, [r4, #0]
 800df68:	4299      	cmp	r1, r3
 800df6a:	dd1a      	ble.n	800dfa2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800df6c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800df70:	4402      	add	r2, r0
 800df72:	440b      	add	r3, r1
 800df74:	b21b      	sxth	r3, r3
 800df76:	429a      	cmp	r2, r3
 800df78:	dc13      	bgt.n	800dfa2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800df7a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800df7c:	a912      	add	r1, sp, #72	@ 0x48
 800df7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800df80:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800df82:	681b      	ldr	r3, [r3, #0]
 800df84:	9206      	str	r2, [sp, #24]
 800df86:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800df88:	9500      	str	r5, [sp, #0]
 800df8a:	9205      	str	r2, [sp, #20]
 800df8c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800df8e:	e9cd b203 	strd	fp, r2, [sp, #12]
 800df92:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800df94:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800df98:	aa49      	add	r2, sp, #292	@ 0x124
 800df9a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800df9e:	4623      	mov	r3, r4
 800dfa0:	47c8      	blx	r9
 800dfa2:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800dfa6:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800dfaa:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800dfae:	ee37 7a27 	vadd.f32	s14, s14, s15
 800dfb2:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800dfb6:	68a1      	ldr	r1, [r4, #8]
 800dfb8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dfbc:	ed94 6a08 	vldr	s12, [r4, #32]
 800dfc0:	edd4 6a07 	vldr	s13, [r4, #28]
 800dfc4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800dfc8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800dfcc:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800dfd0:	e9d4 2300 	ldrd	r2, r3, [r4]
 800dfd4:	edc4 6a07 	vstr	s13, [r4, #28]
 800dfd8:	441a      	add	r2, r3
 800dfda:	6963      	ldr	r3, [r4, #20]
 800dfdc:	3301      	adds	r3, #1
 800dfde:	6022      	str	r2, [r4, #0]
 800dfe0:	6163      	str	r3, [r4, #20]
 800dfe2:	69a3      	ldr	r3, [r4, #24]
 800dfe4:	3b01      	subs	r3, #1
 800dfe6:	61a3      	str	r3, [r4, #24]
 800dfe8:	6923      	ldr	r3, [r4, #16]
 800dfea:	440b      	add	r3, r1
 800dfec:	68e1      	ldr	r1, [r4, #12]
 800dfee:	428b      	cmp	r3, r1
 800dff0:	6123      	str	r3, [r4, #16]
 800dff2:	db15      	blt.n	800e020 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800dff4:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800dff8:	3201      	adds	r2, #1
 800dffa:	1a5b      	subs	r3, r3, r1
 800dffc:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e000:	6022      	str	r2, [r4, #0]
 800e002:	6123      	str	r3, [r4, #16]
 800e004:	edc4 6a07 	vstr	s13, [r4, #28]
 800e008:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800e00c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e010:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800e014:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800e018:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e01c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800e020:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800e024:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800e028:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800e02c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e030:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800e034:	68a9      	ldr	r1, [r5, #8]
 800e036:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e03a:	ed95 6a08 	vldr	s12, [r5, #32]
 800e03e:	edd5 6a07 	vldr	s13, [r5, #28]
 800e042:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800e046:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e04a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800e04e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800e052:	edc5 6a07 	vstr	s13, [r5, #28]
 800e056:	441a      	add	r2, r3
 800e058:	696b      	ldr	r3, [r5, #20]
 800e05a:	3301      	adds	r3, #1
 800e05c:	602a      	str	r2, [r5, #0]
 800e05e:	616b      	str	r3, [r5, #20]
 800e060:	69ab      	ldr	r3, [r5, #24]
 800e062:	3b01      	subs	r3, #1
 800e064:	61ab      	str	r3, [r5, #24]
 800e066:	692b      	ldr	r3, [r5, #16]
 800e068:	440b      	add	r3, r1
 800e06a:	68e9      	ldr	r1, [r5, #12]
 800e06c:	428b      	cmp	r3, r1
 800e06e:	612b      	str	r3, [r5, #16]
 800e070:	db15      	blt.n	800e09e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800e072:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800e076:	3201      	adds	r2, #1
 800e078:	1a5b      	subs	r3, r3, r1
 800e07a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e07e:	602a      	str	r2, [r5, #0]
 800e080:	612b      	str	r3, [r5, #16]
 800e082:	edc5 6a07 	vstr	s13, [r5, #28]
 800e086:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800e08a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e08e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800e092:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800e096:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e09a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800e09e:	3f01      	subs	r7, #1
 800e0a0:	e757      	b.n	800df52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800e0a2:	ad39      	add	r5, sp, #228	@ 0xe4
 800e0a4:	ac19      	add	r4, sp, #100	@ 0x64
 800e0a6:	e72d      	b.n	800df04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800e0a8:	4613      	mov	r3, r2
 800e0aa:	e744      	b.n	800df36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800e0ac:	4613      	mov	r3, r2
 800e0ae:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800e0b0:	469e      	mov	lr, r3
 800e0b2:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800e0b6:	461f      	mov	r7, r3
 800e0b8:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800e0bc:	f04f 0900 	mov.w	r9, #0
 800e0c0:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800e0c4:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800e0c8:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800e0cc:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800e0d0:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800e0d4:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800e0d6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800e0da:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800e0de:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800e0e2:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800e0e6:	960e      	str	r6, [sp, #56]	@ 0x38
 800e0e8:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800e0ec:	2f00      	cmp	r7, #0
 800e0ee:	d146      	bne.n	800e17e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800e0f0:	449c      	add	ip, r3
 800e0f2:	1ad7      	subs	r7, r2, r3
 800e0f4:	f1b9 0f00 	cmp.w	r9, #0
 800e0f8:	d009      	beq.n	800e10e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800e0fa:	9039      	str	r0, [sp, #228]	@ 0xe4
 800e0fc:	913d      	str	r1, [sp, #244]	@ 0xf4
 800e0fe:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800e102:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800e106:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800e10a:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800e10e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800e110:	f04f 0800 	mov.w	r8, #0
 800e114:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800e118:	910e      	str	r1, [sp, #56]	@ 0x38
 800e11a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800e11e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800e122:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800e126:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800e12a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800e12e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800e132:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800e136:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800e13a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800e13e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800e142:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800e146:	f1be 0f00 	cmp.w	lr, #0
 800e14a:	d030      	beq.n	800e1ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800e14c:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800e14e:	4450      	add	r0, sl
 800e150:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800e154:	4431      	add	r1, r6
 800e156:	ee37 7a04 	vadd.f32	s14, s14, s8
 800e15a:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800e15e:	4549      	cmp	r1, r9
 800e160:	db08      	blt.n	800e174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800e162:	ee77 7a85 	vadd.f32	s15, s15, s10
 800e166:	3001      	adds	r0, #1
 800e168:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800e16c:	eba1 0109 	sub.w	r1, r1, r9
 800e170:	ee37 7a06 	vadd.f32	s14, s14, s12
 800e174:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e178:	f04f 0801 	mov.w	r8, #1
 800e17c:	e7e3      	b.n	800e146 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800e17e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800e180:	4450      	add	r0, sl
 800e182:	ee37 7a24 	vadd.f32	s14, s14, s9
 800e186:	4431      	add	r1, r6
 800e188:	ee77 7a84 	vadd.f32	s15, s15, s8
 800e18c:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800e190:	4541      	cmp	r1, r8
 800e192:	db08      	blt.n	800e1a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800e194:	ee76 6a85 	vadd.f32	s13, s13, s10
 800e198:	3001      	adds	r0, #1
 800e19a:	ee37 7a25 	vadd.f32	s14, s14, s11
 800e19e:	eba1 0108 	sub.w	r1, r1, r8
 800e1a2:	ee77 7a86 	vadd.f32	s15, s15, s12
 800e1a6:	3f01      	subs	r7, #1
 800e1a8:	f04f 0901 	mov.w	r9, #1
 800e1ac:	e79e      	b.n	800e0ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800e1ae:	449c      	add	ip, r3
 800e1b0:	1aff      	subs	r7, r7, r3
 800e1b2:	f1b8 0f00 	cmp.w	r8, #0
 800e1b6:	d009      	beq.n	800e1cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800e1b8:	9019      	str	r0, [sp, #100]	@ 0x64
 800e1ba:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800e1be:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800e1c2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800e1c6:	911d      	str	r1, [sp, #116]	@ 0x74
 800e1c8:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800e1cc:	1ad2      	subs	r2, r2, r3
 800e1ce:	e6b5      	b.n	800df3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800e1d0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e1d2:	681b      	ldr	r3, [r3, #0]
 800e1d4:	b923      	cbnz	r3, 800e1e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e1d6:	4b04      	ldr	r3, [pc, #16]	@ (800e1e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800e1d8:	6818      	ldr	r0, [r3, #0]
 800e1da:	6803      	ldr	r3, [r0, #0]
 800e1dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e1de:	4798      	blx	r3
 800e1e0:	b05b      	add	sp, #364	@ 0x16c
 800e1e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e1e6:	bf00      	nop
 800e1e8:	20016a00 	.word	0x20016a00

0800e1ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800e1ec:	b570      	push	{r4, r5, r6, lr}
 800e1ee:	4604      	mov	r4, r0
 800e1f0:	2500      	movs	r5, #0
 800e1f2:	9805      	ldr	r0, [sp, #20]
 800e1f4:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800e1f8:	6061      	str	r1, [r4, #4]
 800e1fa:	8263      	strh	r3, [r4, #18]
 800e1fc:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800e200:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e204:	8025      	strh	r5, [r4, #0]
 800e206:	7221      	strb	r1, [r4, #8]
 800e208:	7266      	strb	r6, [r4, #9]
 800e20a:	60e0      	str	r0, [r4, #12]
 800e20c:	8222      	strh	r2, [r4, #16]
 800e20e:	82a3      	strh	r3, [r4, #20]
 800e210:	82e5      	strh	r5, [r4, #22]
 800e212:	8325      	strh	r5, [r4, #24]
 800e214:	8365      	strh	r5, [r4, #26]
 800e216:	83a5      	strh	r5, [r4, #28]
 800e218:	83e5      	strh	r5, [r4, #30]
 800e21a:	8425      	strh	r5, [r4, #32]
 800e21c:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800e220:	b32e      	cbz	r6, 800e26e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800e222:	6803      	ldr	r3, [r0, #0]
 800e224:	695b      	ldr	r3, [r3, #20]
 800e226:	4798      	blx	r3
 800e228:	4606      	mov	r6, r0
 800e22a:	b300      	cbz	r0, 800e26e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800e22c:	68e0      	ldr	r0, [r4, #12]
 800e22e:	4631      	mov	r1, r6
 800e230:	6803      	ldr	r3, [r0, #0]
 800e232:	68db      	ldr	r3, [r3, #12]
 800e234:	4798      	blx	r3
 800e236:	4605      	mov	r5, r0
 800e238:	b1c8      	cbz	r0, 800e26e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800e23a:	7b43      	ldrb	r3, [r0, #13]
 800e23c:	7a82      	ldrb	r2, [r0, #10]
 800e23e:	005b      	lsls	r3, r3, #1
 800e240:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e244:	4313      	orrs	r3, r2
 800e246:	8423      	strh	r3, [r4, #32]
 800e248:	7a63      	ldrb	r3, [r4, #9]
 800e24a:	2b06      	cmp	r3, #6
 800e24c:	d10f      	bne.n	800e26e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800e24e:	68e0      	ldr	r0, [r4, #12]
 800e250:	462a      	mov	r2, r5
 800e252:	4631      	mov	r1, r6
 800e254:	6803      	ldr	r3, [r0, #0]
 800e256:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e258:	4798      	blx	r3
 800e25a:	7b6b      	ldrb	r3, [r5, #13]
 800e25c:	005b      	lsls	r3, r3, #1
 800e25e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e262:	7aab      	ldrb	r3, [r5, #10]
 800e264:	4313      	orrs	r3, r2
 800e266:	4418      	add	r0, r3
 800e268:	8c23      	ldrh	r3, [r4, #32]
 800e26a:	4418      	add	r0, r3
 800e26c:	8420      	strh	r0, [r4, #32]
 800e26e:	4620      	mov	r0, r4
 800e270:	bd70      	pop	{r4, r5, r6, pc}

0800e272 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800e272:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e276:	2400      	movs	r4, #0
 800e278:	b085      	sub	sp, #20
 800e27a:	4681      	mov	r9, r0
 800e27c:	4688      	mov	r8, r1
 800e27e:	4692      	mov	sl, r2
 800e280:	469b      	mov	fp, r3
 800e282:	4627      	mov	r7, r4
 800e284:	4625      	mov	r5, r4
 800e286:	4626      	mov	r6, r4
 800e288:	4554      	cmp	r4, sl
 800e28a:	da2a      	bge.n	800e2e2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e28c:	2300      	movs	r3, #0
 800e28e:	9303      	str	r3, [sp, #12]
 800e290:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e294:	429d      	cmp	r5, r3
 800e296:	d004      	beq.n	800e2a2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800e298:	f242 030b 	movw	r3, #8203	@ 0x200b
 800e29c:	429d      	cmp	r5, r3
 800e29e:	bf18      	it	ne
 800e2a0:	462f      	movne	r7, r5
 800e2a2:	ab03      	add	r3, sp, #12
 800e2a4:	4642      	mov	r2, r8
 800e2a6:	4659      	mov	r1, fp
 800e2a8:	4648      	mov	r0, r9
 800e2aa:	f002 ffdf 	bl	801126c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e2ae:	4605      	mov	r5, r0
 800e2b0:	b1b8      	cbz	r0, 800e2e2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e2b2:	280a      	cmp	r0, #10
 800e2b4:	d015      	beq.n	800e2e2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e2b6:	9a03      	ldr	r2, [sp, #12]
 800e2b8:	b18a      	cbz	r2, 800e2de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800e2ba:	7b50      	ldrb	r0, [r2, #13]
 800e2bc:	4639      	mov	r1, r7
 800e2be:	7a93      	ldrb	r3, [r2, #10]
 800e2c0:	0040      	lsls	r0, r0, #1
 800e2c2:	8895      	ldrh	r5, [r2, #4]
 800e2c4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800e2c8:	4303      	orrs	r3, r0
 800e2ca:	4640      	mov	r0, r8
 800e2cc:	9301      	str	r3, [sp, #4]
 800e2ce:	f8d8 3000 	ldr.w	r3, [r8]
 800e2d2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e2d4:	4798      	blx	r3
 800e2d6:	9b01      	ldr	r3, [sp, #4]
 800e2d8:	4418      	add	r0, r3
 800e2da:	4406      	add	r6, r0
 800e2dc:	b2b6      	uxth	r6, r6
 800e2de:	3401      	adds	r4, #1
 800e2e0:	e7d2      	b.n	800e288 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800e2e2:	4630      	mov	r0, r6
 800e2e4:	b005      	add	sp, #20
 800e2e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e2ea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800e2ea:	2a02      	cmp	r2, #2
 800e2ec:	b530      	push	{r4, r5, lr}
 800e2ee:	d011      	beq.n	800e314 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800e2f0:	2a03      	cmp	r2, #3
 800e2f2:	d01c      	beq.n	800e32e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800e2f4:	2a01      	cmp	r2, #1
 800e2f6:	d10c      	bne.n	800e312 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800e2f8:	888b      	ldrh	r3, [r1, #4]
 800e2fa:	8801      	ldrh	r1, [r0, #0]
 800e2fc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800e300:	1a5b      	subs	r3, r3, r1
 800e302:	8844      	ldrh	r4, [r0, #2]
 800e304:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800e308:	1a9b      	subs	r3, r3, r2
 800e30a:	8004      	strh	r4, [r0, #0]
 800e30c:	8081      	strh	r1, [r0, #4]
 800e30e:	8043      	strh	r3, [r0, #2]
 800e310:	80c2      	strh	r2, [r0, #6]
 800e312:	bd30      	pop	{r4, r5, pc}
 800e314:	88cb      	ldrh	r3, [r1, #6]
 800e316:	8842      	ldrh	r2, [r0, #2]
 800e318:	1a9b      	subs	r3, r3, r2
 800e31a:	88c2      	ldrh	r2, [r0, #6]
 800e31c:	1a9b      	subs	r3, r3, r2
 800e31e:	888a      	ldrh	r2, [r1, #4]
 800e320:	8801      	ldrh	r1, [r0, #0]
 800e322:	8043      	strh	r3, [r0, #2]
 800e324:	1a52      	subs	r2, r2, r1
 800e326:	8881      	ldrh	r1, [r0, #4]
 800e328:	1a52      	subs	r2, r2, r1
 800e32a:	8002      	strh	r2, [r0, #0]
 800e32c:	e7f1      	b.n	800e312 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800e32e:	88cb      	ldrh	r3, [r1, #6]
 800e330:	8841      	ldrh	r1, [r0, #2]
 800e332:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800e336:	1a5b      	subs	r3, r3, r1
 800e338:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e33c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800e340:	1a9b      	subs	r3, r3, r2
 800e342:	8045      	strh	r5, [r0, #2]
 800e344:	8082      	strh	r2, [r0, #4]
 800e346:	8003      	strh	r3, [r0, #0]
 800e348:	80c4      	strh	r4, [r0, #6]
 800e34a:	e7e2      	b.n	800e312 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800e34c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800e34c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e350:	b09f      	sub	sp, #124	@ 0x7c
 800e352:	920f      	str	r2, [sp, #60]	@ 0x3c
 800e354:	9312      	str	r3, [sp, #72]	@ 0x48
 800e356:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800e358:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800e35a:	8812      	ldrh	r2, [r2, #0]
 800e35c:	889b      	ldrh	r3, [r3, #4]
 800e35e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800e360:	4413      	add	r3, r2
 800e362:	900e      	str	r0, [sp, #56]	@ 0x38
 800e364:	6828      	ldr	r0, [r5, #0]
 800e366:	b21b      	sxth	r3, r3
 800e368:	9117      	str	r1, [sp, #92]	@ 0x5c
 800e36a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800e36e:	9311      	str	r3, [sp, #68]	@ 0x44
 800e370:	6803      	ldr	r3, [r0, #0]
 800e372:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800e376:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800e378:	4798      	blx	r3
 800e37a:	682b      	ldr	r3, [r5, #0]
 800e37c:	9013      	str	r0, [sp, #76]	@ 0x4c
 800e37e:	7b1a      	ldrb	r2, [r3, #12]
 800e380:	7adb      	ldrb	r3, [r3, #11]
 800e382:	9215      	str	r2, [sp, #84]	@ 0x54
 800e384:	9316      	str	r3, [sp, #88]	@ 0x58
 800e386:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800e38a:	2c00      	cmp	r4, #0
 800e38c:	d067      	beq.n	800e45e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800e38e:	7c2b      	ldrb	r3, [r5, #16]
 800e390:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800e392:	2b06      	cmp	r3, #6
 800e394:	bf14      	ite	ne
 800e396:	2301      	movne	r3, #1
 800e398:	2302      	moveq	r3, #2
 800e39a:	4413      	add	r3, r2
 800e39c:	f04f 0900 	mov.w	r9, #0
 800e3a0:	9310      	str	r3, [sp, #64]	@ 0x40
 800e3a2:	464c      	mov	r4, r9
 800e3a4:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800e3a8:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800e3ac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e3ae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800e3b0:	4293      	cmp	r3, r2
 800e3b2:	f280 808b 	bge.w	800e4cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800e3b6:	2300      	movs	r3, #0
 800e3b8:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800e3bc:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800e3c0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e3c4:	429c      	cmp	r4, r3
 800e3c6:	d006      	beq.n	800e3d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800e3c8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e3ca:	f242 020b 	movw	r2, #8203	@ 0x200b
 800e3ce:	4294      	cmp	r4, r2
 800e3d0:	bf18      	it	ne
 800e3d2:	4623      	movne	r3, r4
 800e3d4:	930c      	str	r3, [sp, #48]	@ 0x30
 800e3d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e3d8:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800e3da:	682a      	ldr	r2, [r5, #0]
 800e3dc:	428b      	cmp	r3, r1
 800e3de:	db40      	blt.n	800e462 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800e3e0:	6813      	ldr	r3, [r2, #0]
 800e3e2:	4610      	mov	r0, r2
 800e3e4:	695b      	ldr	r3, [r3, #20]
 800e3e6:	4798      	blx	r3
 800e3e8:	4604      	mov	r4, r0
 800e3ea:	6828      	ldr	r0, [r5, #0]
 800e3ec:	aa1d      	add	r2, sp, #116	@ 0x74
 800e3ee:	4621      	mov	r1, r4
 800e3f0:	6803      	ldr	r3, [r0, #0]
 800e3f2:	689f      	ldr	r7, [r3, #8]
 800e3f4:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800e3f8:	47b8      	blx	r7
 800e3fa:	901c      	str	r0, [sp, #112]	@ 0x70
 800e3fc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e400:	429c      	cmp	r4, r3
 800e402:	f000 80eb 	beq.w	800e5dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800e406:	f242 030b 	movw	r3, #8203	@ 0x200b
 800e40a:	429c      	cmp	r4, r3
 800e40c:	f000 80e6 	beq.w	800e5dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800e410:	2c00      	cmp	r4, #0
 800e412:	f000 810d 	beq.w	800e630 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800e416:	2c0a      	cmp	r4, #10
 800e418:	d05e      	beq.n	800e4d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800e41a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800e41c:	b36a      	cbz	r2, 800e47a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800e41e:	8894      	ldrh	r4, [r2, #4]
 800e420:	f1bb 0f00 	cmp.w	fp, #0
 800e424:	d03a      	beq.n	800e49c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800e426:	f892 900d 	ldrb.w	r9, [r2, #13]
 800e42a:	f1bb 0f01 	cmp.w	fp, #1
 800e42e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800e432:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800e436:	f892 900a 	ldrb.w	r9, [r2, #10]
 800e43a:	ea49 0903 	orr.w	r9, r9, r3
 800e43e:	d133      	bne.n	800e4a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800e440:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e442:	eba6 0609 	sub.w	r6, r6, r9
 800e446:	2b00      	cmp	r3, #0
 800e448:	d14d      	bne.n	800e4e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800e44a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800e44c:	eb09 0306 	add.w	r3, r9, r6
 800e450:	4413      	add	r3, r2
 800e452:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800e454:	f9b2 2000 	ldrsh.w	r2, [r2]
 800e458:	4293      	cmp	r3, r2
 800e45a:	da4e      	bge.n	800e4fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800e45c:	e036      	b.n	800e4cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800e45e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800e460:	e79c      	b.n	800e39c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800e462:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800e466:	4659      	mov	r1, fp
 800e468:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800e46a:	9301      	str	r3, [sp, #4]
 800e46c:	ab1d      	add	r3, sp, #116	@ 0x74
 800e46e:	9300      	str	r3, [sp, #0]
 800e470:	ab1c      	add	r3, sp, #112	@ 0x70
 800e472:	f002 ff44 	bl	80112fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800e476:	4604      	mov	r4, r0
 800e478:	e7c0      	b.n	800e3fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800e47a:	6828      	ldr	r0, [r5, #0]
 800e47c:	6803      	ldr	r3, [r0, #0]
 800e47e:	691b      	ldr	r3, [r3, #16]
 800e480:	4798      	blx	r3
 800e482:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e486:	4298      	cmp	r0, r3
 800e488:	f000 80a8 	beq.w	800e5dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800e48c:	f242 030b 	movw	r3, #8203	@ 0x200b
 800e490:	4298      	cmp	r0, r3
 800e492:	f000 80a3 	beq.w	800e5dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800e496:	f1bb 0f00 	cmp.w	fp, #0
 800e49a:	d100      	bne.n	800e49e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800e49c:	444e      	add	r6, r9
 800e49e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800e4a0:	2a00      	cmp	r2, #0
 800e4a2:	d1c0      	bne.n	800e426 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800e4a4:	4691      	mov	r9, r2
 800e4a6:	e099      	b.n	800e5dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800e4a8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e4aa:	2b00      	cmp	r3, #0
 800e4ac:	f000 80c2 	beq.w	800e634 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
 800e4b0:	f1bb 0f00 	cmp.w	fp, #0
 800e4b4:	d117      	bne.n	800e4e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800e4b6:	6828      	ldr	r0, [r5, #0]
 800e4b8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e4ba:	6803      	ldr	r3, [r0, #0]
 800e4bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e4be:	4798      	blx	r3
 800e4c0:	4406      	add	r6, r0
 800e4c2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800e4c4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800e4c6:	1af3      	subs	r3, r6, r3
 800e4c8:	4293      	cmp	r3, r2
 800e4ca:	dd16      	ble.n	800e4fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800e4cc:	2c00      	cmp	r4, #0
 800e4ce:	f000 80af 	beq.w	800e630 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800e4d2:	2c0a      	cmp	r4, #10
 800e4d4:	f040 809d 	bne.w	800e612 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800e4d8:	240a      	movs	r4, #10
 800e4da:	fab4 f084 	clz	r0, r4
 800e4de:	0940      	lsrs	r0, r0, #5
 800e4e0:	b01f      	add	sp, #124	@ 0x7c
 800e4e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e4e6:	6828      	ldr	r0, [r5, #0]
 800e4e8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e4ea:	6803      	ldr	r3, [r0, #0]
 800e4ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e4ee:	4798      	blx	r3
 800e4f0:	f1bb 0f01 	cmp.w	fp, #1
 800e4f4:	eba6 0600 	sub.w	r6, r6, r0
 800e4f8:	d0a7      	beq.n	800e44a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800e4fa:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800e4fc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800e4fe:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800e502:	f9b3 8000 	ldrsh.w	r8, [r3]
 800e506:	7b43      	ldrb	r3, [r0, #13]
 800e508:	4431      	add	r1, r6
 800e50a:	015b      	lsls	r3, r3, #5
 800e50c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e510:	7983      	ldrb	r3, [r0, #6]
 800e512:	4313      	orrs	r3, r2
 800e514:	440b      	add	r3, r1
 800e516:	4543      	cmp	r3, r8
 800e518:	db60      	blt.n	800e5dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800e51a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800e51c:	4299      	cmp	r1, r3
 800e51e:	da5d      	bge.n	800e5dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800e520:	6828      	ldr	r0, [r5, #0]
 800e522:	45b0      	cmp	r8, r6
 800e524:	6803      	ldr	r3, [r0, #0]
 800e526:	bfcc      	ite	gt
 800e528:	eba8 0806 	subgt.w	r8, r8, r6
 800e52c:	f04f 0800 	movle.w	r8, #0
 800e530:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e532:	bfc8      	it	gt
 800e534:	fa1f f888 	uxthgt.w	r8, r8
 800e538:	4798      	blx	r3
 800e53a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800e53c:	7b53      	ldrb	r3, [r2, #13]
 800e53e:	00d9      	lsls	r1, r3, #3
 800e540:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800e544:	7a11      	ldrb	r1, [r2, #8]
 800e546:	4339      	orrs	r1, r7
 800e548:	065f      	lsls	r7, r3, #25
 800e54a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800e54c:	bf48      	it	mi
 800e54e:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800e552:	4407      	add	r7, r0
 800e554:	bf48      	it	mi
 800e556:	b209      	sxthmi	r1, r1
 800e558:	1a7f      	subs	r7, r7, r1
 800e55a:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800e55c:	b2bf      	uxth	r7, r7
 800e55e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800e562:	fa0f fa87 	sxth.w	sl, r7
 800e566:	4551      	cmp	r1, sl
 800e568:	dd3c      	ble.n	800e5e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800e56a:	011b      	lsls	r3, r3, #4
 800e56c:	79d0      	ldrb	r0, [r2, #7]
 800e56e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e572:	4303      	orrs	r3, r0
 800e574:	449a      	add	sl, r3
 800e576:	4551      	cmp	r1, sl
 800e578:	dc30      	bgt.n	800e5dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800e57a:	1bcf      	subs	r7, r1, r7
 800e57c:	468a      	mov	sl, r1
 800e57e:	b23f      	sxth	r7, r7
 800e580:	9219      	str	r2, [sp, #100]	@ 0x64
 800e582:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800e584:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800e586:	6828      	ldr	r0, [r5, #0]
 800e588:	2a00      	cmp	r2, #0
 800e58a:	d12d      	bne.n	800e5e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 800e58c:	9318      	str	r3, [sp, #96]	@ 0x60
 800e58e:	b2bf      	uxth	r7, r7
 800e590:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e592:	6819      	ldr	r1, [r3, #0]
 800e594:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800e596:	6801      	ldr	r1, [r0, #0]
 800e598:	9314      	str	r3, [sp, #80]	@ 0x50
 800e59a:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800e59c:	4788      	blx	r1
 800e59e:	79a9      	ldrb	r1, [r5, #6]
 800e5a0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800e5a2:	910b      	str	r1, [sp, #44]	@ 0x2c
 800e5a4:	7ba9      	ldrb	r1, [r5, #14]
 800e5a6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800e5a8:	910a      	str	r1, [sp, #40]	@ 0x28
 800e5aa:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800e5ae:	9109      	str	r1, [sp, #36]	@ 0x24
 800e5b0:	68a9      	ldr	r1, [r5, #8]
 800e5b2:	9306      	str	r3, [sp, #24]
 800e5b4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800e5b6:	9205      	str	r2, [sp, #20]
 800e5b8:	9304      	str	r3, [sp, #16]
 800e5ba:	f8cd a004 	str.w	sl, [sp, #4]
 800e5be:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800e5c2:	44b0      	add	r8, r6
 800e5c4:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800e5c6:	fa0f f388 	sxth.w	r3, r8
 800e5ca:	9300      	str	r3, [sp, #0]
 800e5cc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e5ce:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800e5d2:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800e5d4:	681a      	ldr	r2, [r3, #0]
 800e5d6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800e5d8:	685b      	ldr	r3, [r3, #4]
 800e5da:	47b8      	blx	r7
 800e5dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e5de:	3301      	adds	r3, #1
 800e5e0:	930d      	str	r3, [sp, #52]	@ 0x34
 800e5e2:	e6e3      	b.n	800e3ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800e5e4:	2700      	movs	r7, #0
 800e5e6:	e7cb      	b.n	800e580 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800e5e8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800e5ea:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800e5ee:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800e5f0:	f8dc 1000 	ldr.w	r1, [ip]
 800e5f4:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800e5f8:	79aa      	ldrb	r2, [r5, #6]
 800e5fa:	9203      	str	r2, [sp, #12]
 800e5fc:	7baa      	ldrb	r2, [r5, #14]
 800e5fe:	9202      	str	r2, [sp, #8]
 800e600:	68aa      	ldr	r2, [r5, #8]
 800e602:	e9cd 0200 	strd	r0, r2, [sp]
 800e606:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800e608:	4660      	mov	r0, ip
 800e60a:	688f      	ldr	r7, [r1, #8]
 800e60c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800e60e:	47b8      	blx	r7
 800e610:	e7e4      	b.n	800e5dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800e612:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800e614:	3501      	adds	r5, #1
 800e616:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800e618:	429d      	cmp	r5, r3
 800e61a:	f6bf af5e 	bge.w	800e4da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800e61e:	4659      	mov	r1, fp
 800e620:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800e622:	f7f4 ff3b 	bl	800349c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e626:	4604      	mov	r4, r0
 800e628:	b110      	cbz	r0, 800e630 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 800e62a:	280a      	cmp	r0, #10
 800e62c:	d1f2      	bne.n	800e614 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
 800e62e:	e753      	b.n	800e4d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800e630:	2400      	movs	r4, #0
 800e632:	e752      	b.n	800e4da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800e634:	f1bb 0f00 	cmp.w	fp, #0
 800e638:	f43f af43 	beq.w	800e4c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800e63c:	e75d      	b.n	800e4fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800e63e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800e63e:	b530      	push	{r4, r5, lr}
 800e640:	8ac4      	ldrh	r4, [r0, #22]
 800e642:	8b45      	ldrh	r5, [r0, #26]
 800e644:	8343      	strh	r3, [r0, #26]
 800e646:	442c      	add	r4, r5
 800e648:	1ae4      	subs	r4, r4, r3
 800e64a:	8b83      	ldrh	r3, [r0, #28]
 800e64c:	82c4      	strh	r4, [r0, #22]
 800e64e:	8b04      	ldrh	r4, [r0, #24]
 800e650:	4422      	add	r2, r4
 800e652:	440c      	add	r4, r1
 800e654:	1a59      	subs	r1, r3, r1
 800e656:	83c2      	strh	r2, [r0, #30]
 800e658:	8304      	strh	r4, [r0, #24]
 800e65a:	8381      	strh	r1, [r0, #28]
 800e65c:	bd30      	pop	{r4, r5, pc}

0800e65e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800e65e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e662:	4604      	mov	r4, r0
 800e664:	8a47      	ldrh	r7, [r0, #18]
 800e666:	68c0      	ldr	r0, [r0, #12]
 800e668:	b085      	sub	sp, #20
 800e66a:	6803      	ldr	r3, [r0, #0]
 800e66c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e66e:	4798      	blx	r3
 800e670:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800e674:	7a63      	ldrb	r3, [r4, #9]
 800e676:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800e67a:	3b01      	subs	r3, #1
 800e67c:	42b7      	cmp	r7, r6
 800e67e:	bfac      	ite	ge
 800e680:	f04f 0900 	movge.w	r9, #0
 800e684:	f04f 0901 	movlt.w	r9, #1
 800e688:	2b05      	cmp	r3, #5
 800e68a:	d804      	bhi.n	800e696 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 800e68c:	e8df f003 	tbb	[pc, r3]
 800e690:	470f0854 	.word	0x470f0854
 800e694:	4c4c      	.short	0x4c4c
 800e696:	2500      	movs	r5, #0
 800e698:	46a9      	mov	r9, r5
 800e69a:	462e      	mov	r6, r5
 800e69c:	462f      	mov	r7, r5
 800e69e:	e00e      	b.n	800e6be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800e6a0:	42b7      	cmp	r7, r6
 800e6a2:	f04f 0500 	mov.w	r5, #0
 800e6a6:	bfb4      	ite	lt
 800e6a8:	2600      	movlt	r6, #0
 800e6aa:	2601      	movge	r6, #1
 800e6ac:	e7f6      	b.n	800e69c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800e6ae:	42b7      	cmp	r7, r6
 800e6b0:	464d      	mov	r5, r9
 800e6b2:	f04f 0900 	mov.w	r9, #0
 800e6b6:	bfb4      	ite	lt
 800e6b8:	2600      	movlt	r6, #0
 800e6ba:	2601      	movge	r6, #1
 800e6bc:	464f      	mov	r7, r9
 800e6be:	f04f 0800 	mov.w	r8, #0
 800e6c2:	f8a4 8016 	strh.w	r8, [r4, #22]
 800e6c6:	f8a4 8018 	strh.w	r8, [r4, #24]
 800e6ca:	f8cd 8004 	str.w	r8, [sp, #4]
 800e6ce:	2300      	movs	r3, #0
 800e6d0:	9303      	str	r3, [sp, #12]
 800e6d2:	8823      	ldrh	r3, [r4, #0]
 800e6d4:	2b20      	cmp	r3, #32
 800e6d6:	d033      	beq.n	800e740 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 800e6d8:	f242 010b 	movw	r1, #8203	@ 0x200b
 800e6dc:	1a5a      	subs	r2, r3, r1
 800e6de:	f1d2 0a00 	rsbs	sl, r2, #0
 800e6e2:	eb4a 0a02 	adc.w	sl, sl, r2
 800e6e6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800e6ea:	4293      	cmp	r3, r2
 800e6ec:	d008      	beq.n	800e700 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800e6ee:	428b      	cmp	r3, r1
 800e6f0:	9a01      	ldr	r2, [sp, #4]
 800e6f2:	bf0e      	itee	eq
 800e6f4:	f04f 0a01 	moveq.w	sl, #1
 800e6f8:	461a      	movne	r2, r3
 800e6fa:	f04f 0a00 	movne.w	sl, #0
 800e6fe:	9201      	str	r2, [sp, #4]
 800e700:	ab03      	add	r3, sp, #12
 800e702:	68e2      	ldr	r2, [r4, #12]
 800e704:	7a21      	ldrb	r1, [r4, #8]
 800e706:	6860      	ldr	r0, [r4, #4]
 800e708:	f002 fdb0 	bl	801126c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e70c:	8020      	strh	r0, [r4, #0]
 800e70e:	b9d8      	cbnz	r0, 800e748 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 800e710:	8ba2      	ldrh	r2, [r4, #28]
 800e712:	2300      	movs	r3, #0
 800e714:	4611      	mov	r1, r2
 800e716:	4620      	mov	r0, r4
 800e718:	f7ff ff91 	bl	800e63e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800e71c:	e06e      	b.n	800e7fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800e71e:	2500      	movs	r5, #0
 800e720:	2701      	movs	r7, #1
 800e722:	46a9      	mov	r9, r5
 800e724:	462e      	mov	r6, r5
 800e726:	e7ca      	b.n	800e6be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800e728:	42b7      	cmp	r7, r6
 800e72a:	f04f 0500 	mov.w	r5, #0
 800e72e:	bfb4      	ite	lt
 800e730:	2700      	movlt	r7, #0
 800e732:	2701      	movge	r7, #1
 800e734:	462e      	mov	r6, r5
 800e736:	e7c2      	b.n	800e6be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800e738:	2500      	movs	r5, #0
 800e73a:	2601      	movs	r6, #1
 800e73c:	46a9      	mov	r9, r5
 800e73e:	e7ad      	b.n	800e69c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800e740:	9301      	str	r3, [sp, #4]
 800e742:	f04f 0a01 	mov.w	sl, #1
 800e746:	e7db      	b.n	800e700 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800e748:	8b63      	ldrh	r3, [r4, #26]
 800e74a:	280a      	cmp	r0, #10
 800e74c:	f103 0301 	add.w	r3, r3, #1
 800e750:	8363      	strh	r3, [r4, #26]
 800e752:	d0dd      	beq.n	800e710 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 800e754:	9a03      	ldr	r2, [sp, #12]
 800e756:	bb62      	cbnz	r2, 800e7b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 800e758:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e75c:	4298      	cmp	r0, r3
 800e75e:	d003      	beq.n	800e768 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800e760:	f242 030b 	movw	r3, #8203	@ 0x200b
 800e764:	4298      	cmp	r0, r3
 800e766:	d1b2      	bne.n	800e6ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e768:	8823      	ldrh	r3, [r4, #0]
 800e76a:	8ba1      	ldrh	r1, [r4, #28]
 800e76c:	2b20      	cmp	r3, #32
 800e76e:	d003      	beq.n	800e778 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 800e770:	f242 000b 	movw	r0, #8203	@ 0x200b
 800e774:	4283      	cmp	r3, r0
 800e776:	d131      	bne.n	800e7dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 800e778:	f1ba 0f00 	cmp.w	sl, #0
 800e77c:	bf0a      	itet	eq
 800e77e:	4688      	moveq	r8, r1
 800e780:	4650      	movne	r0, sl
 800e782:	2001      	moveq	r0, #1
 800e784:	440a      	add	r2, r1
 800e786:	8b23      	ldrh	r3, [r4, #24]
 800e788:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800e78c:	b292      	uxth	r2, r2
 800e78e:	83a2      	strh	r2, [r4, #28]
 800e790:	4413      	add	r3, r2
 800e792:	f1b9 0f00 	cmp.w	r9, #0
 800e796:	d102      	bne.n	800e79e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 800e798:	2d00      	cmp	r5, #0
 800e79a:	d042      	beq.n	800e822 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 800e79c:	b300      	cbz	r0, 800e7e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 800e79e:	8c21      	ldrh	r1, [r4, #32]
 800e7a0:	4419      	add	r1, r3
 800e7a2:	458c      	cmp	ip, r1
 800e7a4:	da37      	bge.n	800e816 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800e7a6:	8ae1      	ldrh	r1, [r4, #22]
 800e7a8:	2900      	cmp	r1, #0
 800e7aa:	d034      	beq.n	800e816 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800e7ac:	4563      	cmp	r3, ip
 800e7ae:	dd8e      	ble.n	800e6ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e7b0:	e01d      	b.n	800e7ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 800e7b2:	8893      	ldrh	r3, [r2, #4]
 800e7b4:	9901      	ldr	r1, [sp, #4]
 800e7b6:	8023      	strh	r3, [r4, #0]
 800e7b8:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800e7bc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800e7c0:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800e7c4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800e7c8:	ea4b 0b00 	orr.w	fp, fp, r0
 800e7cc:	68e0      	ldr	r0, [r4, #12]
 800e7ce:	6803      	ldr	r3, [r0, #0]
 800e7d0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e7d2:	4798      	blx	r3
 800e7d4:	eb0b 0200 	add.w	r2, fp, r0
 800e7d8:	b292      	uxth	r2, r2
 800e7da:	e7c5      	b.n	800e768 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800e7dc:	2000      	movs	r0, #0
 800e7de:	e7d1      	b.n	800e784 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 800e7e0:	4563      	cmp	r3, ip
 800e7e2:	f77f af74 	ble.w	800e6ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e7e6:	8ae3      	ldrh	r3, [r4, #22]
 800e7e8:	2b00      	cmp	r3, #0
 800e7ea:	f43f af70 	beq.w	800e6ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e7ee:	2301      	movs	r3, #1
 800e7f0:	8c22      	ldrh	r2, [r4, #32]
 800e7f2:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800e7f6:	8be3      	ldrh	r3, [r4, #30]
 800e7f8:	4413      	add	r3, r2
 800e7fa:	83e3      	strh	r3, [r4, #30]
 800e7fc:	68e0      	ldr	r0, [r4, #12]
 800e7fe:	6803      	ldr	r3, [r0, #0]
 800e800:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e802:	4798      	blx	r3
 800e804:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800e808:	4418      	add	r0, r3
 800e80a:	8a63      	ldrh	r3, [r4, #18]
 800e80c:	1a18      	subs	r0, r3, r0
 800e80e:	8260      	strh	r0, [r4, #18]
 800e810:	b005      	add	sp, #20
 800e812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e816:	2300      	movs	r3, #0
 800e818:	4611      	mov	r1, r2
 800e81a:	4620      	mov	r0, r4
 800e81c:	f7ff ff0f 	bl	800e63e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800e820:	e755      	b.n	800e6ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e822:	4563      	cmp	r3, ip
 800e824:	dd14      	ble.n	800e850 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 800e826:	b117      	cbz	r7, 800e82e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 800e828:	2301      	movs	r3, #1
 800e82a:	460a      	mov	r2, r1
 800e82c:	e772      	b.n	800e714 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 800e82e:	2e00      	cmp	r6, #0
 800e830:	f43f af4d 	beq.w	800e6ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e834:	2800      	cmp	r0, #0
 800e836:	f47f af4a 	bne.w	800e6ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e83a:	f1ba 0f00 	cmp.w	sl, #0
 800e83e:	d002      	beq.n	800e846 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 800e840:	2301      	movs	r3, #1
 800e842:	4642      	mov	r2, r8
 800e844:	e767      	b.n	800e716 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800e846:	8ae3      	ldrh	r3, [r4, #22]
 800e848:	2b00      	cmp	r3, #0
 800e84a:	f43f af40 	beq.w	800e6ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e84e:	e7d5      	b.n	800e7fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800e850:	2800      	cmp	r0, #0
 800e852:	f47f af3c 	bne.w	800e6ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e856:	f1ba 0f00 	cmp.w	sl, #0
 800e85a:	f43f af38 	beq.w	800e6ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e85e:	2301      	movs	r3, #1
 800e860:	4642      	mov	r2, r8
 800e862:	e7da      	b.n	800e81a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

0800e864 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800e864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e868:	b0e3      	sub	sp, #396	@ 0x18c
 800e86a:	461c      	mov	r4, r3
 800e86c:	4683      	mov	fp, r0
 800e86e:	4688      	mov	r8, r1
 800e870:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800e872:	2b00      	cmp	r3, #0
 800e874:	f000 8112 	beq.w	800ea9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800e878:	6823      	ldr	r3, [r4, #0]
 800e87a:	2b00      	cmp	r3, #0
 800e87c:	f000 810e 	beq.w	800ea9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800e880:	7ba3      	ldrb	r3, [r4, #14]
 800e882:	2b00      	cmp	r3, #0
 800e884:	f000 810a 	beq.w	800ea9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800e888:	ad0a      	add	r5, sp, #40	@ 0x28
 800e88a:	6810      	ldr	r0, [r2, #0]
 800e88c:	6851      	ldr	r1, [r2, #4]
 800e88e:	462b      	mov	r3, r5
 800e890:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800e894:	c303      	stmia	r3!, {r0, r1}
 800e896:	2100      	movs	r1, #0
 800e898:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800e89c:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800e8a0:	4628      	mov	r0, r5
 800e8a2:	910c      	str	r1, [sp, #48]	@ 0x30
 800e8a4:	a90c      	add	r1, sp, #48	@ 0x30
 800e8a6:	79a2      	ldrb	r2, [r4, #6]
 800e8a8:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800e8ac:	f7ff fd1d 	bl	800e2ea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800e8b0:	a90c      	add	r1, sp, #48	@ 0x30
 800e8b2:	79a2      	ldrb	r2, [r4, #6]
 800e8b4:	4608      	mov	r0, r1
 800e8b6:	f7ff fd18 	bl	800e2ea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800e8ba:	a817      	add	r0, sp, #92	@ 0x5c
 800e8bc:	f002 f98e 	bl	8010bdc <_ZN8touchgfx12TextProviderC1Ev>
 800e8c0:	6820      	ldr	r0, [r4, #0]
 800e8c2:	6803      	ldr	r3, [r0, #0]
 800e8c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e8c6:	4798      	blx	r3
 800e8c8:	4606      	mov	r6, r0
 800e8ca:	6820      	ldr	r0, [r4, #0]
 800e8cc:	6803      	ldr	r3, [r0, #0]
 800e8ce:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e8d0:	4798      	blx	r3
 800e8d2:	4633      	mov	r3, r6
 800e8d4:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800e8d6:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800e8d8:	9000      	str	r0, [sp, #0]
 800e8da:	a817      	add	r0, sp, #92	@ 0x5c
 800e8dc:	f002 f9d1 	bl	8010c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e8e0:	6820      	ldr	r0, [r4, #0]
 800e8e2:	f894 a004 	ldrb.w	sl, [r4, #4]
 800e8e6:	6803      	ldr	r3, [r0, #0]
 800e8e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e8ea:	4798      	blx	r3
 800e8ec:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800e8f0:	6823      	ldr	r3, [r4, #0]
 800e8f2:	4607      	mov	r7, r0
 800e8f4:	4406      	add	r6, r0
 800e8f6:	a830      	add	r0, sp, #192	@ 0xc0
 800e8f8:	f893 9009 	ldrb.w	r9, [r3, #9]
 800e8fc:	f002 f96e 	bl	8010bdc <_ZN8touchgfx12TextProviderC1Ev>
 800e900:	7c23      	ldrb	r3, [r4, #16]
 800e902:	b17b      	cbz	r3, 800e924 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800e904:	6820      	ldr	r0, [r4, #0]
 800e906:	6803      	ldr	r3, [r0, #0]
 800e908:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e90a:	4798      	blx	r3
 800e90c:	9009      	str	r0, [sp, #36]	@ 0x24
 800e90e:	6820      	ldr	r0, [r4, #0]
 800e910:	6802      	ldr	r2, [r0, #0]
 800e912:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800e914:	4790      	blx	r2
 800e916:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e918:	9000      	str	r0, [sp, #0]
 800e91a:	a830      	add	r0, sp, #192	@ 0xc0
 800e91c:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800e91e:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800e920:	f002 f9af 	bl	8010c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e924:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800e928:	a80e      	add	r0, sp, #56	@ 0x38
 800e92a:	7be2      	ldrb	r2, [r4, #15]
 800e92c:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800e930:	1a8a      	subs	r2, r1, r2
 800e932:	7c21      	ldrb	r1, [r4, #16]
 800e934:	9103      	str	r1, [sp, #12]
 800e936:	b292      	uxth	r2, r2
 800e938:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800e93c:	9102      	str	r1, [sp, #8]
 800e93e:	6821      	ldr	r1, [r4, #0]
 800e940:	9101      	str	r1, [sp, #4]
 800e942:	7961      	ldrb	r1, [r4, #5]
 800e944:	9100      	str	r1, [sp, #0]
 800e946:	a930      	add	r1, sp, #192	@ 0xc0
 800e948:	f7ff fc50 	bl	800e1ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800e94c:	2e00      	cmp	r6, #0
 800e94e:	dc5b      	bgt.n	800ea08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800e950:	af17      	add	r7, sp, #92	@ 0x5c
 800e952:	f04f 0900 	mov.w	r9, #0
 800e956:	7c23      	ldrb	r3, [r4, #16]
 800e958:	2b00      	cmp	r3, #0
 800e95a:	f000 80b1 	beq.w	800eac0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800e95e:	a80e      	add	r0, sp, #56	@ 0x38
 800e960:	f7ff fe7d 	bl	800e65e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800e964:	f1ba 0f00 	cmp.w	sl, #0
 800e968:	f000 80a5 	beq.w	800eab6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800e96c:	7c23      	ldrb	r3, [r4, #16]
 800e96e:	2264      	movs	r2, #100	@ 0x64
 800e970:	4639      	mov	r1, r7
 800e972:	a849      	add	r0, sp, #292	@ 0x124
 800e974:	9309      	str	r3, [sp, #36]	@ 0x24
 800e976:	f012 fcc0 	bl	80212fa <memcpy>
 800e97a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e97c:	2b00      	cmp	r3, #0
 800e97e:	f000 80a7 	beq.w	800ead0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800e982:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 800e986:	7922      	ldrb	r2, [r4, #4]
 800e988:	2a01      	cmp	r2, #1
 800e98a:	f040 808a 	bne.w	800eaa2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800e98e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 800e992:	1ac0      	subs	r0, r0, r3
 800e994:	2302      	movs	r3, #2
 800e996:	fb90 f0f3 	sdiv	r0, r0, r3
 800e99a:	b200      	sxth	r0, r0
 800e99c:	7c23      	ldrb	r3, [r4, #16]
 800e99e:	2b00      	cmp	r3, #0
 800e9a0:	f000 808b 	beq.w	800eaba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800e9a4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 800e9a8:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 800e9ac:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800e9b0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800e9b4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 800e9b8:	2100      	movs	r1, #0
 800e9ba:	4410      	add	r0, r2
 800e9bc:	4642      	mov	r2, r8
 800e9be:	b200      	sxth	r0, r0
 800e9c0:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800e9c4:	9000      	str	r0, [sp, #0]
 800e9c6:	4658      	mov	r0, fp
 800e9c8:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800e9cc:	f7ff fcbe 	bl	800e34c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800e9d0:	2800      	cmp	r0, #0
 800e9d2:	d163      	bne.n	800ea9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800e9d4:	b2b2      	uxth	r2, r6
 800e9d6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800e9da:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800e9de:	4413      	add	r3, r2
 800e9e0:	1a8a      	subs	r2, r1, r2
 800e9e2:	b21b      	sxth	r3, r3
 800e9e4:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 800e9e8:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 800e9ec:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800e9f0:	2a00      	cmp	r2, #0
 800e9f2:	d153      	bne.n	800ea9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800e9f4:	6822      	ldr	r2, [r4, #0]
 800e9f6:	8869      	ldrh	r1, [r5, #2]
 800e9f8:	7a12      	ldrb	r2, [r2, #8]
 800e9fa:	1a9b      	subs	r3, r3, r2
 800e9fc:	88ea      	ldrh	r2, [r5, #6]
 800e9fe:	440a      	add	r2, r1
 800ea00:	b212      	sxth	r2, r2
 800ea02:	4293      	cmp	r3, r2
 800ea04:	dda7      	ble.n	800e956 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800ea06:	e049      	b.n	800ea9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ea08:	7c23      	ldrb	r3, [r4, #16]
 800ea0a:	444f      	add	r7, r9
 800ea0c:	b1c3      	cbz	r3, 800ea40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800ea0e:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 800ea12:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800ea16:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ea1a:	443b      	add	r3, r7
 800ea1c:	4293      	cmp	r3, r2
 800ea1e:	da97      	bge.n	800e950 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800ea20:	a80e      	add	r0, sp, #56	@ 0x38
 800ea22:	f7ff fe1c 	bl	800e65e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800ea26:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 800ea2a:	3b01      	subs	r3, #1
 800ea2c:	b29b      	uxth	r3, r3
 800ea2e:	454b      	cmp	r3, r9
 800ea30:	9309      	str	r3, [sp, #36]	@ 0x24
 800ea32:	d021      	beq.n	800ea78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800ea34:	7961      	ldrb	r1, [r4, #5]
 800ea36:	a817      	add	r0, sp, #92	@ 0x5c
 800ea38:	f7f4 fd30 	bl	800349c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ea3c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ea3e:	e7f4      	b.n	800ea2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800ea40:	fa1f f986 	uxth.w	r9, r6
 800ea44:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800ea48:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ea4c:	443b      	add	r3, r7
 800ea4e:	4293      	cmp	r3, r2
 800ea50:	f6bf af7e 	bge.w	800e950 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800ea54:	a817      	add	r0, sp, #92	@ 0x5c
 800ea56:	f002 fcd5 	bl	8011404 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ea5a:	b1f8      	cbz	r0, 800ea9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ea5c:	280a      	cmp	r0, #10
 800ea5e:	d1f1      	bne.n	800ea44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800ea60:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800ea64:	444b      	add	r3, r9
 800ea66:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800ea6a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800ea6e:	eba3 0309 	sub.w	r3, r3, r9
 800ea72:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ea76:	e7e5      	b.n	800ea44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800ea78:	b2b3      	uxth	r3, r6
 800ea7a:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 800ea7e:	441a      	add	r2, r3
 800ea80:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800ea84:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 800ea88:	1ad3      	subs	r3, r2, r3
 800ea8a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ea8e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800ea92:	b11b      	cbz	r3, 800ea9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ea94:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 800ea98:	2b00      	cmp	r3, #0
 800ea9a:	d0ba      	beq.n	800ea12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800ea9c:	b063      	add	sp, #396	@ 0x18c
 800ea9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eaa2:	2a02      	cmp	r2, #2
 800eaa4:	d105      	bne.n	800eab2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800eaa6:	7be2      	ldrb	r2, [r4, #15]
 800eaa8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800eaac:	1a80      	subs	r0, r0, r2
 800eaae:	1ac0      	subs	r0, r0, r3
 800eab0:	e773      	b.n	800e99a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800eab2:	2000      	movs	r0, #0
 800eab4:	e772      	b.n	800e99c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800eab6:	7be0      	ldrb	r0, [r4, #15]
 800eab8:	e770      	b.n	800e99c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800eaba:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800eabe:	e773      	b.n	800e9a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800eac0:	f1ba 0f00 	cmp.w	sl, #0
 800eac4:	d0f7      	beq.n	800eab6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800eac6:	2264      	movs	r2, #100	@ 0x64
 800eac8:	4639      	mov	r1, r7
 800eaca:	a849      	add	r0, sp, #292	@ 0x124
 800eacc:	f012 fc15 	bl	80212fa <memcpy>
 800ead0:	2300      	movs	r3, #0
 800ead2:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800ead6:	6821      	ldr	r1, [r4, #0]
 800ead8:	a849      	add	r0, sp, #292	@ 0x124
 800eada:	f7ff fbca 	bl	800e272 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800eade:	b203      	sxth	r3, r0
 800eae0:	e751      	b.n	800e986 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800eae2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800eae2:	2b03      	cmp	r3, #3
 800eae4:	d818      	bhi.n	800eb18 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800eae6:	e8df f003 	tbb	[pc, r3]
 800eaea:	0602      	.short	0x0602
 800eaec:	130d      	.short	0x130d
 800eaee:	f9b0 2000 	ldrsh.w	r2, [r0]
 800eaf2:	1850      	adds	r0, r2, r1
 800eaf4:	4770      	bx	lr
 800eaf6:	8803      	ldrh	r3, [r0, #0]
 800eaf8:	8880      	ldrh	r0, [r0, #4]
 800eafa:	4418      	add	r0, r3
 800eafc:	b200      	sxth	r0, r0
 800eafe:	1a80      	subs	r0, r0, r2
 800eb00:	3801      	subs	r0, #1
 800eb02:	4770      	bx	lr
 800eb04:	8803      	ldrh	r3, [r0, #0]
 800eb06:	8880      	ldrh	r0, [r0, #4]
 800eb08:	4418      	add	r0, r3
 800eb0a:	b200      	sxth	r0, r0
 800eb0c:	1a40      	subs	r0, r0, r1
 800eb0e:	e7f7      	b.n	800eb00 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800eb10:	f9b0 0000 	ldrsh.w	r0, [r0]
 800eb14:	4410      	add	r0, r2
 800eb16:	4770      	bx	lr
 800eb18:	2000      	movs	r0, #0
 800eb1a:	4770      	bx	lr

0800eb1c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800eb1c:	2b03      	cmp	r3, #3
 800eb1e:	d817      	bhi.n	800eb50 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800eb20:	e8df f003 	tbb	[pc, r3]
 800eb24:	10090602 	.word	0x10090602
 800eb28:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800eb2c:	1850      	adds	r0, r2, r1
 800eb2e:	4770      	bx	lr
 800eb30:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800eb34:	e7fa      	b.n	800eb2c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800eb36:	8843      	ldrh	r3, [r0, #2]
 800eb38:	88c0      	ldrh	r0, [r0, #6]
 800eb3a:	4418      	add	r0, r3
 800eb3c:	b200      	sxth	r0, r0
 800eb3e:	1a80      	subs	r0, r0, r2
 800eb40:	3801      	subs	r0, #1
 800eb42:	4770      	bx	lr
 800eb44:	8843      	ldrh	r3, [r0, #2]
 800eb46:	88c0      	ldrh	r0, [r0, #6]
 800eb48:	4418      	add	r0, r3
 800eb4a:	b200      	sxth	r0, r0
 800eb4c:	1a40      	subs	r0, r0, r1
 800eb4e:	e7f7      	b.n	800eb40 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800eb50:	2000      	movs	r0, #0
 800eb52:	4770      	bx	lr

0800eb54 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800eb54:	4b01      	ldr	r3, [pc, #4]	@ (800eb5c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800eb56:	2200      	movs	r2, #0
 800eb58:	601a      	str	r2, [r3, #0]
 800eb5a:	4770      	bx	lr
 800eb5c:	20016a10 	.word	0x20016a10

0800eb60 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800eb60:	4603      	mov	r3, r0
 800eb62:	b1c8      	cbz	r0, 800eb98 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800eb64:	0c02      	lsrs	r2, r0, #16
 800eb66:	0412      	lsls	r2, r2, #16
 800eb68:	b9a2      	cbnz	r2, 800eb94 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800eb6a:	0403      	lsls	r3, r0, #16
 800eb6c:	2010      	movs	r0, #16
 800eb6e:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800eb72:	bf04      	itt	eq
 800eb74:	021b      	lsleq	r3, r3, #8
 800eb76:	3008      	addeq	r0, #8
 800eb78:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800eb7c:	bf04      	itt	eq
 800eb7e:	011b      	lsleq	r3, r3, #4
 800eb80:	3004      	addeq	r0, #4
 800eb82:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800eb86:	bf04      	itt	eq
 800eb88:	009b      	lsleq	r3, r3, #2
 800eb8a:	3002      	addeq	r0, #2
 800eb8c:	2b00      	cmp	r3, #0
 800eb8e:	db04      	blt.n	800eb9a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800eb90:	3001      	adds	r0, #1
 800eb92:	4770      	bx	lr
 800eb94:	2000      	movs	r0, #0
 800eb96:	e7ea      	b.n	800eb6e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800eb98:	2020      	movs	r0, #32
 800eb9a:	4770      	bx	lr

0800eb9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800eb9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eba0:	b087      	sub	sp, #28
 800eba2:	460d      	mov	r5, r1
 800eba4:	4616      	mov	r6, r2
 800eba6:	4698      	mov	r8, r3
 800eba8:	4601      	mov	r1, r0
 800ebaa:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800ebae:	b120      	cbz	r0, 800ebba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800ebb0:	b11a      	cbz	r2, 800ebba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800ebb2:	2d1f      	cmp	r5, #31
 800ebb4:	d801      	bhi.n	800ebba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800ebb6:	2b1f      	cmp	r3, #31
 800ebb8:	d904      	bls.n	800ebc4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800ebba:	2000      	movs	r0, #0
 800ebbc:	6038      	str	r0, [r7, #0]
 800ebbe:	b007      	add	sp, #28
 800ebc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ebc4:	b97d      	cbnz	r5, 800ebe6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800ebc6:	b143      	cbz	r3, 800ebda <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800ebc8:	4602      	mov	r2, r0
 800ebca:	462b      	mov	r3, r5
 800ebcc:	4641      	mov	r1, r8
 800ebce:	4630      	mov	r0, r6
 800ebd0:	e9cd 4700 	strd	r4, r7, [sp]
 800ebd4:	f7ff ffe2 	bl	800eb9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ebd8:	e7f1      	b.n	800ebbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800ebda:	f04f 33ff 	mov.w	r3, #4294967295
 800ebde:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800ebe2:	603b      	str	r3, [r7, #0]
 800ebe4:	e7eb      	b.n	800ebbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800ebe6:	fa32 fa05 	lsrs.w	sl, r2, r5
 800ebea:	d106      	bne.n	800ebfa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800ebec:	4346      	muls	r6, r0
 800ebee:	fbb6 f0f4 	udiv	r0, r6, r4
 800ebf2:	fb04 6610 	mls	r6, r4, r0, r6
 800ebf6:	603e      	str	r6, [r7, #0]
 800ebf8:	e7e1      	b.n	800ebbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800ebfa:	2201      	movs	r2, #1
 800ebfc:	fa00 fb05 	lsl.w	fp, r0, r5
 800ec00:	40aa      	lsls	r2, r5
 800ec02:	fbbb f9f4 	udiv	r9, fp, r4
 800ec06:	3a01      	subs	r2, #1
 800ec08:	fb0a f309 	mul.w	r3, sl, r9
 800ec0c:	fb04 b919 	mls	r9, r4, r9, fp
 800ec10:	4016      	ands	r6, r2
 800ec12:	9303      	str	r3, [sp, #12]
 800ec14:	4630      	mov	r0, r6
 800ec16:	f7ff ffa3 	bl	800eb60 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800ec1a:	462b      	mov	r3, r5
 800ec1c:	460a      	mov	r2, r1
 800ec1e:	4601      	mov	r1, r0
 800ec20:	4630      	mov	r0, r6
 800ec22:	e9cd 4700 	strd	r4, r7, [sp]
 800ec26:	f7ff ffb9 	bl	800eb9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ec2a:	4606      	mov	r6, r0
 800ec2c:	4648      	mov	r0, r9
 800ec2e:	eb05 0108 	add.w	r1, r5, r8
 800ec32:	f7ff ff95 	bl	800eb60 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800ec36:	ab05      	add	r3, sp, #20
 800ec38:	464a      	mov	r2, r9
 800ec3a:	e9cd 4300 	strd	r4, r3, [sp]
 800ec3e:	4603      	mov	r3, r0
 800ec40:	4650      	mov	r0, sl
 800ec42:	f7ff ffab 	bl	800eb9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ec46:	6839      	ldr	r1, [r7, #0]
 800ec48:	9a05      	ldr	r2, [sp, #20]
 800ec4a:	9b03      	ldr	r3, [sp, #12]
 800ec4c:	4411      	add	r1, r2
 800ec4e:	fbb1 f2f4 	udiv	r2, r1, r4
 800ec52:	18d3      	adds	r3, r2, r3
 800ec54:	fb04 1412 	mls	r4, r4, r2, r1
 800ec58:	441e      	add	r6, r3
 800ec5a:	603c      	str	r4, [r7, #0]
 800ec5c:	4430      	add	r0, r6
 800ec5e:	e7ae      	b.n	800ebbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800ec60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800ec60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ec64:	b085      	sub	sp, #20
 800ec66:	f1b0 0900 	subs.w	r9, r0, #0
 800ec6a:	461d      	mov	r5, r3
 800ec6c:	4617      	mov	r7, r2
 800ec6e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800ec70:	bfbb      	ittet	lt
 800ec72:	f1c9 0900 	rsblt	r9, r9, #0
 800ec76:	f04f 36ff 	movlt.w	r6, #4294967295
 800ec7a:	2601      	movge	r6, #1
 800ec7c:	6823      	ldrlt	r3, [r4, #0]
 800ec7e:	bfbc      	itt	lt
 800ec80:	425b      	neglt	r3, r3
 800ec82:	6023      	strlt	r3, [r4, #0]
 800ec84:	2a00      	cmp	r2, #0
 800ec86:	da04      	bge.n	800ec92 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800ec88:	6823      	ldr	r3, [r4, #0]
 800ec8a:	4257      	negs	r7, r2
 800ec8c:	4276      	negs	r6, r6
 800ec8e:	425b      	negs	r3, r3
 800ec90:	6023      	str	r3, [r4, #0]
 800ec92:	2d00      	cmp	r5, #0
 800ec94:	4638      	mov	r0, r7
 800ec96:	bfba      	itte	lt
 800ec98:	426d      	neglt	r5, r5
 800ec9a:	f04f 38ff 	movlt.w	r8, #4294967295
 800ec9e:	f04f 0801 	movge.w	r8, #1
 800eca2:	f7ff ff5d 	bl	800eb60 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800eca6:	ab03      	add	r3, sp, #12
 800eca8:	463a      	mov	r2, r7
 800ecaa:	e9cd 5300 	strd	r5, r3, [sp]
 800ecae:	4603      	mov	r3, r0
 800ecb0:	4648      	mov	r0, r9
 800ecb2:	f7ff ff73 	bl	800eb9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ecb6:	6823      	ldr	r3, [r4, #0]
 800ecb8:	9a03      	ldr	r2, [sp, #12]
 800ecba:	4546      	cmp	r6, r8
 800ecbc:	441a      	add	r2, r3
 800ecbe:	fb92 f3f5 	sdiv	r3, r2, r5
 800ecc2:	4418      	add	r0, r3
 800ecc4:	fb05 2313 	mls	r3, r5, r3, r2
 800ecc8:	bf18      	it	ne
 800ecca:	4240      	negne	r0, r0
 800eccc:	1c72      	adds	r2, r6, #1
 800ecce:	6023      	str	r3, [r4, #0]
 800ecd0:	d105      	bne.n	800ecde <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800ecd2:	2b00      	cmp	r3, #0
 800ecd4:	f1c3 0200 	rsb	r2, r3, #0
 800ecd8:	db0b      	blt.n	800ecf2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800ecda:	6022      	str	r2, [r4, #0]
 800ecdc:	e006      	b.n	800ecec <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ecde:	2e01      	cmp	r6, #1
 800ece0:	d104      	bne.n	800ecec <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ece2:	2b00      	cmp	r3, #0
 800ece4:	da02      	bge.n	800ecec <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ece6:	442b      	add	r3, r5
 800ece8:	3801      	subs	r0, #1
 800ecea:	6023      	str	r3, [r4, #0]
 800ecec:	b005      	add	sp, #20
 800ecee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ecf2:	3801      	subs	r0, #1
 800ecf4:	1b52      	subs	r2, r2, r5
 800ecf6:	e7f0      	b.n	800ecda <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800ecf8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800ecf8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ecfc:	4c1c      	ldr	r4, [pc, #112]	@ (800ed70 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800ecfe:	4605      	mov	r5, r0
 800ed00:	6807      	ldr	r7, [r0, #0]
 800ed02:	69a3      	ldr	r3, [r4, #24]
 800ed04:	b92b      	cbnz	r3, 800ed12 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800ed06:	6840      	ldr	r0, [r0, #4]
 800ed08:	e9c5 7000 	strd	r7, r0, [r5]
 800ed0c:	b004      	add	sp, #16
 800ed0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed12:	f04f 0802 	mov.w	r8, #2
 800ed16:	68a2      	ldr	r2, [r4, #8]
 800ed18:	ae04      	add	r6, sp, #16
 800ed1a:	6820      	ldr	r0, [r4, #0]
 800ed1c:	fb93 f1f8 	sdiv	r1, r3, r8
 800ed20:	440a      	add	r2, r1
 800ed22:	69e1      	ldr	r1, [r4, #28]
 800ed24:	f846 2d04 	str.w	r2, [r6, #-4]!
 800ed28:	463a      	mov	r2, r7
 800ed2a:	9600      	str	r6, [sp, #0]
 800ed2c:	f7ff ff98 	bl	800ec60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ed30:	69a3      	ldr	r3, [r4, #24]
 800ed32:	4607      	mov	r7, r0
 800ed34:	686a      	ldr	r2, [r5, #4]
 800ed36:	6a21      	ldr	r1, [r4, #32]
 800ed38:	9600      	str	r6, [sp, #0]
 800ed3a:	6860      	ldr	r0, [r4, #4]
 800ed3c:	f7ff ff90 	bl	800ec60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ed40:	69a3      	ldr	r3, [r4, #24]
 800ed42:	6962      	ldr	r2, [r4, #20]
 800ed44:	4407      	add	r7, r0
 800ed46:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800ed48:	9600      	str	r6, [sp, #0]
 800ed4a:	68e0      	ldr	r0, [r4, #12]
 800ed4c:	fb93 f8f8 	sdiv	r8, r3, r8
 800ed50:	4442      	add	r2, r8
 800ed52:	9203      	str	r2, [sp, #12]
 800ed54:	682a      	ldr	r2, [r5, #0]
 800ed56:	f7ff ff83 	bl	800ec60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ed5a:	4680      	mov	r8, r0
 800ed5c:	9600      	str	r6, [sp, #0]
 800ed5e:	69a3      	ldr	r3, [r4, #24]
 800ed60:	686a      	ldr	r2, [r5, #4]
 800ed62:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800ed64:	6920      	ldr	r0, [r4, #16]
 800ed66:	f7ff ff7b 	bl	800ec60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ed6a:	4440      	add	r0, r8
 800ed6c:	e7cc      	b.n	800ed08 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800ed6e:	bf00      	nop
 800ed70:	20016a14 	.word	0x20016a14

0800ed74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800ed74:	4b07      	ldr	r3, [pc, #28]	@ (800ed94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800ed76:	781b      	ldrb	r3, [r3, #0]
 800ed78:	2b01      	cmp	r3, #1
 800ed7a:	d109      	bne.n	800ed90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800ed7c:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ed80:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ed84:	8003      	strh	r3, [r0, #0]
 800ed86:	4b04      	ldr	r3, [pc, #16]	@ (800ed98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800ed88:	881b      	ldrh	r3, [r3, #0]
 800ed8a:	3b01      	subs	r3, #1
 800ed8c:	1a9b      	subs	r3, r3, r2
 800ed8e:	800b      	strh	r3, [r1, #0]
 800ed90:	4770      	bx	lr
 800ed92:	bf00      	nop
 800ed94:	200169f8 	.word	0x200169f8
 800ed98:	200169f4 	.word	0x200169f4

0800ed9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800ed9c:	4b07      	ldr	r3, [pc, #28]	@ (800edbc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800ed9e:	b510      	push	{r4, lr}
 800eda0:	781b      	ldrb	r3, [r3, #0]
 800eda2:	2b01      	cmp	r3, #1
 800eda4:	d108      	bne.n	800edb8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800eda6:	4b06      	ldr	r3, [pc, #24]	@ (800edc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800eda8:	880c      	ldrh	r4, [r1, #0]
 800edaa:	881b      	ldrh	r3, [r3, #0]
 800edac:	f9b0 2000 	ldrsh.w	r2, [r0]
 800edb0:	3b01      	subs	r3, #1
 800edb2:	1b1b      	subs	r3, r3, r4
 800edb4:	8003      	strh	r3, [r0, #0]
 800edb6:	800a      	strh	r2, [r1, #0]
 800edb8:	bd10      	pop	{r4, pc}
 800edba:	bf00      	nop
 800edbc:	200169f8 	.word	0x200169f8
 800edc0:	200169f4 	.word	0x200169f4

0800edc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800edc4:	4b0a      	ldr	r3, [pc, #40]	@ (800edf0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800edc6:	b510      	push	{r4, lr}
 800edc8:	781b      	ldrb	r3, [r3, #0]
 800edca:	2b01      	cmp	r3, #1
 800edcc:	d10e      	bne.n	800edec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800edce:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800edd2:	8843      	ldrh	r3, [r0, #2]
 800edd4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800edd8:	18ca      	adds	r2, r1, r3
 800edda:	4b06      	ldr	r3, [pc, #24]	@ (800edf4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800eddc:	8044      	strh	r4, [r0, #2]
 800edde:	881b      	ldrh	r3, [r3, #0]
 800ede0:	1a9b      	subs	r3, r3, r2
 800ede2:	8003      	strh	r3, [r0, #0]
 800ede4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ede8:	8081      	strh	r1, [r0, #4]
 800edea:	80c3      	strh	r3, [r0, #6]
 800edec:	bd10      	pop	{r4, pc}
 800edee:	bf00      	nop
 800edf0:	200169f8 	.word	0x200169f8
 800edf4:	200169f4 	.word	0x200169f4

0800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800edf8:	4b08      	ldr	r3, [pc, #32]	@ (800ee1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800edfa:	781b      	ldrb	r3, [r3, #0]
 800edfc:	2b01      	cmp	r3, #1
 800edfe:	d10c      	bne.n	800ee1a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800ee00:	8803      	ldrh	r3, [r0, #0]
 800ee02:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800ee06:	8842      	ldrh	r2, [r0, #2]
 800ee08:	8002      	strh	r2, [r0, #0]
 800ee0a:	185a      	adds	r2, r3, r1
 800ee0c:	4b04      	ldr	r3, [pc, #16]	@ (800ee20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800ee0e:	881b      	ldrh	r3, [r3, #0]
 800ee10:	1a9b      	subs	r3, r3, r2
 800ee12:	8043      	strh	r3, [r0, #2]
 800ee14:	88c3      	ldrh	r3, [r0, #6]
 800ee16:	80c1      	strh	r1, [r0, #6]
 800ee18:	8083      	strh	r3, [r0, #4]
 800ee1a:	4770      	bx	lr
 800ee1c:	200169f8 	.word	0x200169f8
 800ee20:	200169f4 	.word	0x200169f4

0800ee24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800ee24:	4b07      	ldr	r3, [pc, #28]	@ (800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800ee26:	b510      	push	{r4, lr}
 800ee28:	781b      	ldrb	r3, [r3, #0]
 800ee2a:	2b01      	cmp	r3, #1
 800ee2c:	d108      	bne.n	800ee40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800ee2e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ee32:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ee36:	8003      	strh	r3, [r0, #0]
 800ee38:	8893      	ldrh	r3, [r2, #4]
 800ee3a:	3b01      	subs	r3, #1
 800ee3c:	1b1b      	subs	r3, r3, r4
 800ee3e:	800b      	strh	r3, [r1, #0]
 800ee40:	bd10      	pop	{r4, pc}
 800ee42:	bf00      	nop
 800ee44:	200169f8 	.word	0x200169f8

0800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800ee48:	4b0a      	ldr	r3, [pc, #40]	@ (800ee74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800ee4a:	460a      	mov	r2, r1
 800ee4c:	b510      	push	{r4, lr}
 800ee4e:	781b      	ldrb	r3, [r3, #0]
 800ee50:	2b01      	cmp	r3, #1
 800ee52:	d10d      	bne.n	800ee70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800ee54:	8881      	ldrh	r1, [r0, #4]
 800ee56:	8803      	ldrh	r3, [r0, #0]
 800ee58:	440b      	add	r3, r1
 800ee5a:	4601      	mov	r1, r0
 800ee5c:	3b01      	subs	r3, #1
 800ee5e:	f821 3b02 	strh.w	r3, [r1], #2
 800ee62:	f7ff ffdf 	bl	800ee24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800ee66:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ee6a:	88c2      	ldrh	r2, [r0, #6]
 800ee6c:	80c3      	strh	r3, [r0, #6]
 800ee6e:	8082      	strh	r2, [r0, #4]
 800ee70:	bd10      	pop	{r4, pc}
 800ee72:	bf00      	nop
 800ee74:	200169f8 	.word	0x200169f8

0800ee78 <_ZN8touchgfx11Application13requestRedrawEv>:
 800ee78:	4b06      	ldr	r3, [pc, #24]	@ (800ee94 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800ee7a:	2100      	movs	r1, #0
 800ee7c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ee80:	4b05      	ldr	r3, [pc, #20]	@ (800ee98 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800ee82:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800ee86:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ee8a:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800ee8e:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800ee92:	4770      	bx	lr
 800ee94:	200169f4 	.word	0x200169f4
 800ee98:	200169f6 	.word	0x200169f6

0800ee9c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800ee9c:	4b03      	ldr	r3, [pc, #12]	@ (800eeac <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800ee9e:	6818      	ldr	r0, [r3, #0]
 800eea0:	b110      	cbz	r0, 800eea8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800eea2:	6803      	ldr	r3, [r0, #0]
 800eea4:	699b      	ldr	r3, [r3, #24]
 800eea6:	4718      	bx	r3
 800eea8:	4770      	bx	lr
 800eeaa:	bf00      	nop
 800eeac:	20016a44 	.word	0x20016a44

0800eeb0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800eeb0:	4770      	bx	lr
	...

0800eeb4 <_ZN8touchgfx11Application4drawEv>:
 800eeb4:	4b09      	ldr	r3, [pc, #36]	@ (800eedc <_ZN8touchgfx11Application4drawEv+0x28>)
 800eeb6:	b507      	push	{r0, r1, r2, lr}
 800eeb8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eebc:	2100      	movs	r1, #0
 800eebe:	4b08      	ldr	r3, [pc, #32]	@ (800eee0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800eec0:	9100      	str	r1, [sp, #0]
 800eec2:	4669      	mov	r1, sp
 800eec4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800eec8:	f8ad 2004 	strh.w	r2, [sp, #4]
 800eecc:	f8ad 3006 	strh.w	r3, [sp, #6]
 800eed0:	6803      	ldr	r3, [r0, #0]
 800eed2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800eed4:	4798      	blx	r3
 800eed6:	b003      	add	sp, #12
 800eed8:	f85d fb04 	ldr.w	pc, [sp], #4
 800eedc:	200169f4 	.word	0x200169f4
 800eee0:	200169f6 	.word	0x200169f6

0800eee4 <_ZN8touchgfx11Application10invalidateEv>:
 800eee4:	4b09      	ldr	r3, [pc, #36]	@ (800ef0c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800eee6:	b082      	sub	sp, #8
 800eee8:	2100      	movs	r1, #0
 800eeea:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eeee:	4b08      	ldr	r3, [pc, #32]	@ (800ef10 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800eef0:	f8ad 2004 	strh.w	r2, [sp, #4]
 800eef4:	aa02      	add	r2, sp, #8
 800eef6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800eefa:	9100      	str	r1, [sp, #0]
 800eefc:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ef00:	6803      	ldr	r3, [r0, #0]
 800ef02:	e912 0006 	ldmdb	r2, {r1, r2}
 800ef06:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ef08:	b002      	add	sp, #8
 800ef0a:	4718      	bx	r3
 800ef0c:	200169f4 	.word	0x200169f4
 800ef10:	200169f6 	.word	0x200169f6

0800ef14 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ef14:	4b03      	ldr	r3, [pc, #12]	@ (800ef24 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ef16:	6818      	ldr	r0, [r3, #0]
 800ef18:	b110      	cbz	r0, 800ef20 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ef1a:	6803      	ldr	r3, [r0, #0]
 800ef1c:	69db      	ldr	r3, [r3, #28]
 800ef1e:	4718      	bx	r3
 800ef20:	4770      	bx	lr
 800ef22:	bf00      	nop
 800ef24:	20016a44 	.word	0x20016a44

0800ef28 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ef28:	4b03      	ldr	r3, [pc, #12]	@ (800ef38 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ef2a:	6818      	ldr	r0, [r3, #0]
 800ef2c:	b110      	cbz	r0, 800ef34 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ef2e:	6803      	ldr	r3, [r0, #0]
 800ef30:	6a1b      	ldr	r3, [r3, #32]
 800ef32:	4718      	bx	r3
 800ef34:	4770      	bx	lr
 800ef36:	bf00      	nop
 800ef38:	20016a44 	.word	0x20016a44

0800ef3c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800ef3c:	2300      	movs	r3, #0
 800ef3e:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800ef42:	4770      	bx	lr

0800ef44 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ef44:	4b03      	ldr	r3, [pc, #12]	@ (800ef54 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ef46:	6818      	ldr	r0, [r3, #0]
 800ef48:	b110      	cbz	r0, 800ef50 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ef4a:	6803      	ldr	r3, [r0, #0]
 800ef4c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ef4e:	4718      	bx	r3
 800ef50:	4770      	bx	lr
 800ef52:	bf00      	nop
 800ef54:	20016a44 	.word	0x20016a44

0800ef58 <_ZN8touchgfx11ApplicationD1Ev>:
 800ef58:	4770      	bx	lr

0800ef5a <_ZN8touchgfx11ApplicationD0Ev>:
 800ef5a:	b510      	push	{r4, lr}
 800ef5c:	4604      	mov	r4, r0
 800ef5e:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800ef62:	f011 f8f4 	bl	802014e <_ZdlPvj>
 800ef66:	4620      	mov	r0, r4
 800ef68:	bd10      	pop	{r4, pc}

0800ef6a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ef6a:	b510      	push	{r4, lr}
 800ef6c:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ef70:	888a      	ldrh	r2, [r1, #4]
 800ef72:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ef76:	4422      	add	r2, r4
 800ef78:	b212      	sxth	r2, r2
 800ef7a:	4293      	cmp	r3, r2
 800ef7c:	da15      	bge.n	800efaa <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ef7e:	8882      	ldrh	r2, [r0, #4]
 800ef80:	4413      	add	r3, r2
 800ef82:	b21b      	sxth	r3, r3
 800ef84:	429c      	cmp	r4, r3
 800ef86:	da10      	bge.n	800efaa <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ef88:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ef8c:	88c9      	ldrh	r1, [r1, #6]
 800ef8e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ef92:	4419      	add	r1, r3
 800ef94:	b209      	sxth	r1, r1
 800ef96:	428a      	cmp	r2, r1
 800ef98:	da07      	bge.n	800efaa <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ef9a:	88c0      	ldrh	r0, [r0, #6]
 800ef9c:	4410      	add	r0, r2
 800ef9e:	b200      	sxth	r0, r0
 800efa0:	4283      	cmp	r3, r0
 800efa2:	bfac      	ite	ge
 800efa4:	2000      	movge	r0, #0
 800efa6:	2001      	movlt	r0, #1
 800efa8:	bd10      	pop	{r4, pc}
 800efaa:	2000      	movs	r0, #0
 800efac:	e7fc      	b.n	800efa8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800efae <_ZN8touchgfx4Rect10restrictToEss>:
 800efae:	f9b0 3000 	ldrsh.w	r3, [r0]
 800efb2:	2b00      	cmp	r3, #0
 800efb4:	b510      	push	{r4, lr}
 800efb6:	da04      	bge.n	800efc2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800efb8:	8884      	ldrh	r4, [r0, #4]
 800efba:	4423      	add	r3, r4
 800efbc:	8083      	strh	r3, [r0, #4]
 800efbe:	2300      	movs	r3, #0
 800efc0:	8003      	strh	r3, [r0, #0]
 800efc2:	f9b0 4000 	ldrsh.w	r4, [r0]
 800efc6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800efca:	1b09      	subs	r1, r1, r4
 800efcc:	428b      	cmp	r3, r1
 800efce:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800efd2:	bfc8      	it	gt
 800efd4:	8081      	strhgt	r1, [r0, #4]
 800efd6:	2b00      	cmp	r3, #0
 800efd8:	da04      	bge.n	800efe4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800efda:	88c1      	ldrh	r1, [r0, #6]
 800efdc:	440b      	add	r3, r1
 800efde:	80c3      	strh	r3, [r0, #6]
 800efe0:	2300      	movs	r3, #0
 800efe2:	8043      	strh	r3, [r0, #2]
 800efe4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800efe8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800efec:	1a52      	subs	r2, r2, r1
 800efee:	4293      	cmp	r3, r2
 800eff0:	bfc8      	it	gt
 800eff2:	80c2      	strhgt	r2, [r0, #6]
 800eff4:	bd10      	pop	{r4, pc}
	...

0800eff8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800eff8:	4b10      	ldr	r3, [pc, #64]	@ (800f03c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800effa:	b510      	push	{r4, lr}
 800effc:	460c      	mov	r4, r1
 800effe:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f002:	4b0f      	ldr	r3, [pc, #60]	@ (800f040 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800f004:	4620      	mov	r0, r4
 800f006:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f00a:	f7ff ffd0 	bl	800efae <_ZN8touchgfx4Rect10restrictToEss>
 800f00e:	4b0d      	ldr	r3, [pc, #52]	@ (800f044 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800f010:	6818      	ldr	r0, [r3, #0]
 800f012:	b190      	cbz	r0, 800f03a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800f014:	6803      	ldr	r3, [r0, #0]
 800f016:	4621      	mov	r1, r4
 800f018:	689b      	ldr	r3, [r3, #8]
 800f01a:	4798      	blx	r3
 800f01c:	4b0a      	ldr	r3, [pc, #40]	@ (800f048 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800f01e:	6818      	ldr	r0, [r3, #0]
 800f020:	b118      	cbz	r0, 800f02a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800f022:	6803      	ldr	r3, [r0, #0]
 800f024:	4621      	mov	r1, r4
 800f026:	689b      	ldr	r3, [r3, #8]
 800f028:	4798      	blx	r3
 800f02a:	4b08      	ldr	r3, [pc, #32]	@ (800f04c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800f02c:	4621      	mov	r1, r4
 800f02e:	6818      	ldr	r0, [r3, #0]
 800f030:	6803      	ldr	r3, [r0, #0]
 800f032:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f036:	69db      	ldr	r3, [r3, #28]
 800f038:	4718      	bx	r3
 800f03a:	bd10      	pop	{r4, pc}
 800f03c:	200169f6 	.word	0x200169f6
 800f040:	200169f4 	.word	0x200169f4
 800f044:	20016a44 	.word	0x20016a44
 800f048:	20016a40 	.word	0x20016a40
 800f04c:	20016a00 	.word	0x20016a00

0800f050 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800f050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f052:	4606      	mov	r6, r0
 800f054:	4608      	mov	r0, r1
 800f056:	460f      	mov	r7, r1
 800f058:	f7fa fa81 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f05c:	b9e8      	cbnz	r0, 800f09a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f05e:	f9b7 5000 	ldrsh.w	r5, [r7]
 800f062:	f9b6 4000 	ldrsh.w	r4, [r6]
 800f066:	42a5      	cmp	r5, r4
 800f068:	db17      	blt.n	800f09a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f06a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f06e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800f072:	429a      	cmp	r2, r3
 800f074:	db11      	blt.n	800f09a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f076:	88b9      	ldrh	r1, [r7, #4]
 800f078:	440d      	add	r5, r1
 800f07a:	88b1      	ldrh	r1, [r6, #4]
 800f07c:	440c      	add	r4, r1
 800f07e:	b22d      	sxth	r5, r5
 800f080:	b224      	sxth	r4, r4
 800f082:	42a5      	cmp	r5, r4
 800f084:	dc09      	bgt.n	800f09a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f086:	88f8      	ldrh	r0, [r7, #6]
 800f088:	4410      	add	r0, r2
 800f08a:	88f2      	ldrh	r2, [r6, #6]
 800f08c:	4413      	add	r3, r2
 800f08e:	b200      	sxth	r0, r0
 800f090:	b21b      	sxth	r3, r3
 800f092:	4298      	cmp	r0, r3
 800f094:	bfcc      	ite	gt
 800f096:	2000      	movgt	r0, #0
 800f098:	2001      	movle	r0, #1
 800f09a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f09c <_ZN8touchgfx11Application11getInstanceEv>:
 800f09c:	4b01      	ldr	r3, [pc, #4]	@ (800f0a4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800f09e:	6818      	ldr	r0, [r3, #0]
 800f0a0:	4770      	bx	lr
 800f0a2:	bf00      	nop
 800f0a4:	20016a54 	.word	0x20016a54

0800f0a8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800f0a8:	2300      	movs	r3, #0
 800f0aa:	b510      	push	{r4, lr}
 800f0ac:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800f0b0:	4604      	mov	r4, r0
 800f0b2:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f0b6:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f0ba:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f0be:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800f0c2:	429a      	cmp	r2, r3
 800f0c4:	d90e      	bls.n	800f0e4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800f0c6:	18e2      	adds	r2, r4, r3
 800f0c8:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800f0cc:	b122      	cbz	r2, 800f0d8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800f0ce:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800f0d2:	6803      	ldr	r3, [r0, #0]
 800f0d4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f0d6:	4798      	blx	r3
 800f0d8:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f0dc:	3301      	adds	r3, #1
 800f0de:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800f0e2:	e7ea      	b.n	800f0ba <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800f0e4:	bd10      	pop	{r4, pc}

0800f0e6 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800f0e6:	2300      	movs	r3, #0
 800f0e8:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800f0ec:	30a4      	adds	r0, #164	@ 0xa4
 800f0ee:	f820 3c24 	strh.w	r3, [r0, #-36]
 800f0f2:	f802 3b01 	strb.w	r3, [r2], #1
 800f0f6:	4282      	cmp	r2, r0
 800f0f8:	d1fb      	bne.n	800f0f2 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800f0fa:	4770      	bx	lr

0800f0fc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800f0fc:	b570      	push	{r4, r5, r6, lr}
 800f0fe:	4c0b      	ldr	r4, [pc, #44]	@ (800f12c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800f100:	4605      	mov	r5, r0
 800f102:	460e      	mov	r6, r1
 800f104:	6820      	ldr	r0, [r4, #0]
 800f106:	b110      	cbz	r0, 800f10e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800f108:	6803      	ldr	r3, [r0, #0]
 800f10a:	695b      	ldr	r3, [r3, #20]
 800f10c:	4798      	blx	r3
 800f10e:	1d28      	adds	r0, r5, #4
 800f110:	f7ff ffe9 	bl	800f0e6 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f114:	6026      	str	r6, [r4, #0]
 800f116:	6833      	ldr	r3, [r6, #0]
 800f118:	4630      	mov	r0, r6
 800f11a:	68db      	ldr	r3, [r3, #12]
 800f11c:	4798      	blx	r3
 800f11e:	682b      	ldr	r3, [r5, #0]
 800f120:	4628      	mov	r0, r5
 800f122:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f124:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f128:	4718      	bx	r3
 800f12a:	bf00      	nop
 800f12c:	20016a44 	.word	0x20016a44

0800f130 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800f130:	2300      	movs	r3, #0
 800f132:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800f136:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800f13a:	461a      	mov	r2, r3
 800f13c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f13e:	461c      	mov	r4, r3
 800f140:	461d      	mov	r5, r3
 800f142:	459c      	cmp	ip, r3
 800f144:	dd1a      	ble.n	800f17c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800f146:	18c6      	adds	r6, r0, r3
 800f148:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800f14c:	b16e      	cbz	r6, 800f16a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800f14e:	429a      	cmp	r2, r3
 800f150:	d008      	beq.n	800f164 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800f152:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800f156:	fa1f fe82 	uxth.w	lr, r2
 800f15a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800f15e:	1887      	adds	r7, r0, r2
 800f160:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800f164:	3201      	adds	r2, #1
 800f166:	3301      	adds	r3, #1
 800f168:	e7eb      	b.n	800f142 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800f16a:	4299      	cmp	r1, r3
 800f16c:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800f170:	bfa8      	it	ge
 800f172:	3501      	addge	r5, #1
 800f174:	429e      	cmp	r6, r3
 800f176:	bfc8      	it	gt
 800f178:	3401      	addgt	r4, #1
 800f17a:	e7f4      	b.n	800f166 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800f17c:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800f180:	1b49      	subs	r1, r1, r5
 800f182:	1b1b      	subs	r3, r3, r4
 800f184:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800f188:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f18c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f190:	4293      	cmp	r3, r2
 800f192:	dd03      	ble.n	800f19c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800f194:	3b01      	subs	r3, #1
 800f196:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f19a:	e7f7      	b.n	800f18c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800f19c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800f1a0 <_ZN8touchgfx11Application15handleTickEventEv>:
 800f1a0:	b570      	push	{r4, r5, r6, lr}
 800f1a2:	4d16      	ldr	r5, [pc, #88]	@ (800f1fc <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800f1a4:	4604      	mov	r4, r0
 800f1a6:	6828      	ldr	r0, [r5, #0]
 800f1a8:	b140      	cbz	r0, 800f1bc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f1aa:	7a03      	ldrb	r3, [r0, #8]
 800f1ac:	b933      	cbnz	r3, 800f1bc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f1ae:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f1b2:	6803      	ldr	r3, [r0, #0]
 800f1b4:	689b      	ldr	r3, [r3, #8]
 800f1b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f1ba:	4718      	bx	r3
 800f1bc:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800f1c0:	4e0f      	ldr	r6, [pc, #60]	@ (800f200 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800f1c2:	b973      	cbnz	r3, 800f1e2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f1c4:	b168      	cbz	r0, 800f1e2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f1c6:	7a03      	ldrb	r3, [r0, #8]
 800f1c8:	b15b      	cbz	r3, 800f1e2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f1ca:	6830      	ldr	r0, [r6, #0]
 800f1cc:	b110      	cbz	r0, 800f1d4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800f1ce:	6803      	ldr	r3, [r0, #0]
 800f1d0:	691b      	ldr	r3, [r3, #16]
 800f1d2:	4798      	blx	r3
 800f1d4:	6828      	ldr	r0, [r5, #0]
 800f1d6:	6803      	ldr	r3, [r0, #0]
 800f1d8:	68db      	ldr	r3, [r3, #12]
 800f1da:	4798      	blx	r3
 800f1dc:	2301      	movs	r3, #1
 800f1de:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f1e2:	3404      	adds	r4, #4
 800f1e4:	4620      	mov	r0, r4
 800f1e6:	f7ff ff5f 	bl	800f0a8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800f1ea:	4620      	mov	r0, r4
 800f1ec:	f7ff ffa0 	bl	800f130 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800f1f0:	6830      	ldr	r0, [r6, #0]
 800f1f2:	b110      	cbz	r0, 800f1fa <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800f1f4:	6803      	ldr	r3, [r0, #0]
 800f1f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f1f8:	e7dd      	b.n	800f1b6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800f1fa:	bd70      	pop	{r4, r5, r6, pc}
 800f1fc:	20016a48 	.word	0x20016a48
 800f200:	20016a44 	.word	0x20016a44

0800f204 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800f204:	4603      	mov	r3, r0
 800f206:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800f20a:	2200      	movs	r2, #0
 800f20c:	801a      	strh	r2, [r3, #0]
 800f20e:	3308      	adds	r3, #8
 800f210:	f823 2c06 	strh.w	r2, [r3, #-6]
 800f214:	f823 2c04 	strh.w	r2, [r3, #-4]
 800f218:	f823 2c02 	strh.w	r2, [r3, #-2]
 800f21c:	428b      	cmp	r3, r1
 800f21e:	d1f5      	bne.n	800f20c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800f220:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800f224:	4770      	bx	lr
	...

0800f228 <_ZN8touchgfx11ApplicationC1Ev>:
 800f228:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f22a:	4b1d      	ldr	r3, [pc, #116]	@ (800f2a0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800f22c:	4606      	mov	r6, r0
 800f22e:	4604      	mov	r4, r0
 800f230:	2500      	movs	r5, #0
 800f232:	f846 3b04 	str.w	r3, [r6], #4
 800f236:	22a8      	movs	r2, #168	@ 0xa8
 800f238:	2100      	movs	r1, #0
 800f23a:	4630      	mov	r0, r6
 800f23c:	f011 ff8e 	bl	802115c <memset>
 800f240:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800f244:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800f248:	4f16      	ldr	r7, [pc, #88]	@ (800f2a4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800f24a:	f7ff ffdb 	bl	800f204 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f24e:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800f252:	f7ff ffd7 	bl	800f204 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f256:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800f25a:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800f25e:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800f262:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800f266:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800f26a:	490f      	ldr	r1, [pc, #60]	@ (800f2a8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800f26c:	480f      	ldr	r0, [pc, #60]	@ (800f2ac <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800f26e:	f010 fb71 	bl	801f954 <CRC_Lock>
 800f272:	4b0f      	ldr	r3, [pc, #60]	@ (800f2b0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800f274:	b158      	cbz	r0, 800f28e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800f276:	801d      	strh	r5, [r3, #0]
 800f278:	2300      	movs	r3, #0
 800f27a:	4a0e      	ldr	r2, [pc, #56]	@ (800f2b4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800f27c:	4630      	mov	r0, r6
 800f27e:	6013      	str	r3, [r2, #0]
 800f280:	4a0d      	ldr	r2, [pc, #52]	@ (800f2b8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800f282:	603b      	str	r3, [r7, #0]
 800f284:	6013      	str	r3, [r2, #0]
 800f286:	f7ff ff2e 	bl	800f0e6 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f28a:	4620      	mov	r0, r4
 800f28c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f28e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800f292:	2002      	movs	r0, #2
 800f294:	801a      	strh	r2, [r3, #0]
 800f296:	6038      	str	r0, [r7, #0]
 800f298:	f001 fb26 	bl	80108e8 <_ZN8touchgfx6Screen4drawEv>
 800f29c:	e7ec      	b.n	800f278 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800f29e:	bf00      	nop
 800f2a0:	0802385c 	.word	0x0802385c
 800f2a4:	20016a44 	.word	0x20016a44
 800f2a8:	b5e8b5cd 	.word	0xb5e8b5cd
 800f2ac:	f407a5c2 	.word	0xf407a5c2
 800f2b0:	20000044 	.word	0x20000044
 800f2b4:	20016a54 	.word	0x20016a54
 800f2b8:	20016a48 	.word	0x20016a48

0800f2bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800f2bc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800f2c0:	3b01      	subs	r3, #1
 800f2c2:	b29b      	uxth	r3, r3
 800f2c4:	428b      	cmp	r3, r1
 800f2c6:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800f2ca:	b510      	push	{r4, lr}
 800f2cc:	d908      	bls.n	800f2e0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800f2ce:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800f2d2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800f2d6:	681a      	ldr	r2, [r3, #0]
 800f2d8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800f2dc:	685a      	ldr	r2, [r3, #4]
 800f2de:	6062      	str	r2, [r4, #4]
 800f2e0:	bd10      	pop	{r4, pc}
	...

0800f2e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800f2e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f2e8:	b08f      	sub	sp, #60	@ 0x3c
 800f2ea:	4b8f      	ldr	r3, [pc, #572]	@ (800f528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800f2ec:	4683      	mov	fp, r0
 800f2ee:	ac0a      	add	r4, sp, #40	@ 0x28
 800f2f0:	e884 0006 	stmia.w	r4, {r1, r2}
 800f2f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f2f8:	4620      	mov	r0, r4
 800f2fa:	4b8c      	ldr	r3, [pc, #560]	@ (800f52c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800f2fc:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f300:	f7ff fe55 	bl	800efae <_ZN8touchgfx4Rect10restrictToEss>
 800f304:	4620      	mov	r0, r4
 800f306:	f7fa f92a 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f30a:	2800      	cmp	r0, #0
 800f30c:	d16a      	bne.n	800f3e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f30e:	9403      	str	r4, [sp, #12]
 800f310:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800f314:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800f318:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800f31c:	9301      	str	r3, [sp, #4]
 800f31e:	35a4      	adds	r5, #164	@ 0xa4
 800f320:	b15c      	cbz	r4, 800f33a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800f322:	4629      	mov	r1, r5
 800f324:	9803      	ldr	r0, [sp, #12]
 800f326:	f7ff fe93 	bl	800f050 <_ZNK8touchgfx4Rect8includesERKS0_>
 800f32a:	3c01      	subs	r4, #1
 800f32c:	b118      	cbz	r0, 800f336 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800f32e:	b2a1      	uxth	r1, r4
 800f330:	9801      	ldr	r0, [sp, #4]
 800f332:	f7ff ffc3 	bl	800f2bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f336:	3d08      	subs	r5, #8
 800f338:	e7f2      	b.n	800f320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800f33a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800f33e:	f10a 33ff 	add.w	r3, sl, #4294967295
 800f342:	f8cd a010 	str.w	sl, [sp, #16]
 800f346:	9302      	str	r3, [sp, #8]
 800f348:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800f34c:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800f350:	9306      	str	r3, [sp, #24]
 800f352:	445c      	add	r4, fp
 800f354:	2500      	movs	r5, #0
 800f356:	4626      	mov	r6, r4
 800f358:	f8cd a014 	str.w	sl, [sp, #20]
 800f35c:	462f      	mov	r7, r5
 800f35e:	9b05      	ldr	r3, [sp, #20]
 800f360:	2b00      	cmp	r3, #0
 800f362:	d073      	beq.n	800f44c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800f364:	9903      	ldr	r1, [sp, #12]
 800f366:	4630      	mov	r0, r6
 800f368:	f7ff fdff 	bl	800ef6a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f36c:	b350      	cbz	r0, 800f3c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800f36e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800f372:	f9b6 c000 	ldrsh.w	ip, [r6]
 800f376:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800f37a:	45e6      	cmp	lr, ip
 800f37c:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800f380:	db33      	blt.n	800f3ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800f382:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800f386:	88b3      	ldrh	r3, [r6, #4]
 800f388:	4472      	add	r2, lr
 800f38a:	4463      	add	r3, ip
 800f38c:	b212      	sxth	r2, r2
 800f38e:	b21b      	sxth	r3, r3
 800f390:	429a      	cmp	r2, r3
 800f392:	dc2a      	bgt.n	800f3ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800f394:	fa1f f289 	uxth.w	r2, r9
 800f398:	88f3      	ldrh	r3, [r6, #6]
 800f39a:	45c8      	cmp	r8, r9
 800f39c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800f3a0:	4413      	add	r3, r2
 800f3a2:	fa1f fc88 	uxth.w	ip, r8
 800f3a6:	b29b      	uxth	r3, r3
 800f3a8:	fa0f fe83 	sxth.w	lr, r3
 800f3ac:	db0f      	blt.n	800f3ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800f3ae:	eba3 030c 	sub.w	r3, r3, ip
 800f3b2:	1ac9      	subs	r1, r1, r3
 800f3b4:	b209      	sxth	r1, r1
 800f3b6:	2900      	cmp	r1, #0
 800f3b8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800f3bc:	dd12      	ble.n	800f3e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f3be:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800f3c2:	4605      	mov	r5, r0
 800f3c4:	9b05      	ldr	r3, [sp, #20]
 800f3c6:	3e08      	subs	r6, #8
 800f3c8:	3b01      	subs	r3, #1
 800f3ca:	9305      	str	r3, [sp, #20]
 800f3cc:	e7c7      	b.n	800f35e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800f3ce:	4461      	add	r1, ip
 800f3d0:	b209      	sxth	r1, r1
 800f3d2:	4571      	cmp	r1, lr
 800f3d4:	dc38      	bgt.n	800f448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800f3d6:	eba2 020c 	sub.w	r2, r2, ip
 800f3da:	b212      	sxth	r2, r2
 800f3dc:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800f3e0:	2a00      	cmp	r2, #0
 800f3e2:	dcee      	bgt.n	800f3c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800f3e4:	b00f      	add	sp, #60	@ 0x3c
 800f3e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f3ea:	45c8      	cmp	r8, r9
 800f3ec:	db2c      	blt.n	800f448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800f3ee:	88f3      	ldrh	r3, [r6, #6]
 800f3f0:	4499      	add	r9, r3
 800f3f2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800f3f6:	4498      	add	r8, r3
 800f3f8:	fa0f f989 	sxth.w	r9, r9
 800f3fc:	fa0f f888 	sxth.w	r8, r8
 800f400:	45c1      	cmp	r9, r8
 800f402:	db21      	blt.n	800f448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800f404:	fa1f f28c 	uxth.w	r2, ip
 800f408:	88b3      	ldrh	r3, [r6, #4]
 800f40a:	45e6      	cmp	lr, ip
 800f40c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800f410:	4413      	add	r3, r2
 800f412:	fa1f f88e 	uxth.w	r8, lr
 800f416:	b29b      	uxth	r3, r3
 800f418:	fa0f f983 	sxth.w	r9, r3
 800f41c:	db0a      	blt.n	800f434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800f41e:	eba3 0308 	sub.w	r3, r3, r8
 800f422:	1ac9      	subs	r1, r1, r3
 800f424:	b209      	sxth	r1, r1
 800f426:	2900      	cmp	r1, #0
 800f428:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800f42c:	ddda      	ble.n	800f3e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f42e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800f432:	e7c6      	b.n	800f3c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800f434:	4441      	add	r1, r8
 800f436:	b209      	sxth	r1, r1
 800f438:	4549      	cmp	r1, r9
 800f43a:	dc05      	bgt.n	800f448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800f43c:	eba2 0208 	sub.w	r2, r2, r8
 800f440:	b212      	sxth	r2, r2
 800f442:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800f446:	e7cb      	b.n	800f3e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800f448:	4607      	mov	r7, r0
 800f44a:	e7bb      	b.n	800f3c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800f44c:	2d00      	cmp	r5, #0
 800f44e:	d181      	bne.n	800f354 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800f450:	2f00      	cmp	r7, #0
 800f452:	f000 81dd 	beq.w	800f810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800f456:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800f45a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800f45e:	b2b3      	uxth	r3, r6
 800f460:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800f464:	9305      	str	r3, [sp, #20]
 800f466:	9a05      	ldr	r2, [sp, #20]
 800f468:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800f46c:	4413      	add	r3, r2
 800f46e:	b2ba      	uxth	r2, r7
 800f470:	4492      	add	sl, r2
 800f472:	b29b      	uxth	r3, r3
 800f474:	fa1f fa8a 	uxth.w	sl, sl
 800f478:	fa0f f883 	sxth.w	r8, r3
 800f47c:	fa0f f98a 	sxth.w	r9, sl
 800f480:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800f484:	9b04      	ldr	r3, [sp, #16]
 800f486:	2b00      	cmp	r3, #0
 800f488:	d052      	beq.n	800f530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800f48a:	9903      	ldr	r1, [sp, #12]
 800f48c:	4620      	mov	r0, r4
 800f48e:	f7ff fd6c 	bl	800ef6a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f492:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800f496:	b1c0      	cbz	r0, 800f4ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800f498:	f9b4 e000 	ldrsh.w	lr, [r4]
 800f49c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f4a0:	4576      	cmp	r6, lr
 800f4a2:	dc22      	bgt.n	800f4ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800f4a4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f4a8:	44f4      	add	ip, lr
 800f4aa:	fa0f fc8c 	sxth.w	ip, ip
 800f4ae:	45e0      	cmp	r8, ip
 800f4b0:	db1b      	blt.n	800f4ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800f4b2:	428f      	cmp	r7, r1
 800f4b4:	fa1f fc81 	uxth.w	ip, r1
 800f4b8:	88e1      	ldrh	r1, [r4, #6]
 800f4ba:	dc0d      	bgt.n	800f4d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f4bc:	ebaa 0c0c 	sub.w	ip, sl, ip
 800f4c0:	f8a4 9002 	strh.w	r9, [r4, #2]
 800f4c4:	eba1 010c 	sub.w	r1, r1, ip
 800f4c8:	80e1      	strh	r1, [r4, #6]
 800f4ca:	4628      	mov	r0, r5
 800f4cc:	9904      	ldr	r1, [sp, #16]
 800f4ce:	3c08      	subs	r4, #8
 800f4d0:	4605      	mov	r5, r0
 800f4d2:	3901      	subs	r1, #1
 800f4d4:	9104      	str	r1, [sp, #16]
 800f4d6:	e7d3      	b.n	800f480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800f4d8:	4461      	add	r1, ip
 800f4da:	b209      	sxth	r1, r1
 800f4dc:	4549      	cmp	r1, r9
 800f4de:	dcf5      	bgt.n	800f4cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800f4e0:	eba2 0c0c 	sub.w	ip, r2, ip
 800f4e4:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f4e8:	e7ef      	b.n	800f4ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800f4ea:	428f      	cmp	r7, r1
 800f4ec:	dcee      	bgt.n	800f4cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800f4ee:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800f4f2:	4461      	add	r1, ip
 800f4f4:	b209      	sxth	r1, r1
 800f4f6:	4589      	cmp	r9, r1
 800f4f8:	dbe8      	blt.n	800f4cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800f4fa:	4576      	cmp	r6, lr
 800f4fc:	fa1f fc8e 	uxth.w	ip, lr
 800f500:	88a1      	ldrh	r1, [r4, #4]
 800f502:	dc07      	bgt.n	800f514 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800f504:	eba3 0c0c 	sub.w	ip, r3, ip
 800f508:	f8a4 8000 	strh.w	r8, [r4]
 800f50c:	eba1 010c 	sub.w	r1, r1, ip
 800f510:	80a1      	strh	r1, [r4, #4]
 800f512:	e7da      	b.n	800f4ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800f514:	4461      	add	r1, ip
 800f516:	b209      	sxth	r1, r1
 800f518:	4588      	cmp	r8, r1
 800f51a:	dbd7      	blt.n	800f4cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800f51c:	9905      	ldr	r1, [sp, #20]
 800f51e:	eba1 0c0c 	sub.w	ip, r1, ip
 800f522:	f8a4 c004 	strh.w	ip, [r4, #4]
 800f526:	e7d0      	b.n	800f4ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800f528:	200169f6 	.word	0x200169f6
 800f52c:	200169f4 	.word	0x200169f4
 800f530:	2d00      	cmp	r5, #0
 800f532:	f000 816d 	beq.w	800f810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800f536:	9b06      	ldr	r3, [sp, #24]
 800f538:	445b      	add	r3, fp
 800f53a:	461c      	mov	r4, r3
 800f53c:	9b02      	ldr	r3, [sp, #8]
 800f53e:	3301      	adds	r3, #1
 800f540:	f000 8166 	beq.w	800f810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800f544:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800f548:	9803      	ldr	r0, [sp, #12]
 800f54a:	4629      	mov	r1, r5
 800f54c:	f7ff fd80 	bl	800f050 <_ZNK8touchgfx4Rect8includesERKS0_>
 800f550:	b120      	cbz	r0, 800f55c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800f552:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800f556:	9801      	ldr	r0, [sp, #4]
 800f558:	f7ff feb0 	bl	800f2bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f55c:	9903      	ldr	r1, [sp, #12]
 800f55e:	4628      	mov	r0, r5
 800f560:	f7ff fd03 	bl	800ef6a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f564:	2800      	cmp	r0, #0
 800f566:	f000 809c 	beq.w	800f6a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800f56a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800f56e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800f572:	fa1f f189 	uxth.w	r1, r9
 800f576:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800f57a:	9309      	str	r3, [sp, #36]	@ 0x24
 800f57c:	eb01 0c03 	add.w	ip, r1, r3
 800f580:	b283      	uxth	r3, r0
 800f582:	4548      	cmp	r0, r9
 800f584:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800f588:	fa1f fa8c 	uxth.w	sl, ip
 800f58c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800f590:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800f594:	eb03 050c 	add.w	r5, r3, ip
 800f598:	b2ad      	uxth	r5, r5
 800f59a:	9505      	str	r5, [sp, #20]
 800f59c:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800f5a0:	9504      	str	r5, [sp, #16]
 800f5a2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800f5a6:	f340 8099 	ble.w	800f6dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800f5aa:	1a5b      	subs	r3, r3, r1
 800f5ac:	4596      	cmp	lr, r2
 800f5ae:	fa0f f08a 	sxth.w	r0, sl
 800f5b2:	b29b      	uxth	r3, r3
 800f5b4:	b21e      	sxth	r6, r3
 800f5b6:	dd2e      	ble.n	800f616 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800f5b8:	9f02      	ldr	r7, [sp, #8]
 800f5ba:	fa1f fe8e 	uxth.w	lr, lr
 800f5be:	b292      	uxth	r2, r2
 800f5c0:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800f5c4:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800f5c8:	9f04      	ldr	r7, [sp, #16]
 800f5ca:	ebae 0102 	sub.w	r1, lr, r2
 800f5ce:	44a6      	add	lr, r4
 800f5d0:	1a3f      	subs	r7, r7, r0
 800f5d2:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800f5d6:	b289      	uxth	r1, r1
 800f5d8:	4402      	add	r2, r0
 800f5da:	fa0f fe8e 	sxth.w	lr, lr
 800f5de:	b20d      	sxth	r5, r1
 800f5e0:	b212      	sxth	r2, r2
 800f5e2:	436f      	muls	r7, r5
 800f5e4:	ebae 0202 	sub.w	r2, lr, r2
 800f5e8:	4372      	muls	r2, r6
 800f5ea:	4297      	cmp	r7, r2
 800f5ec:	db09      	blt.n	800f602 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800f5ee:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800f5f2:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800f5f6:	449c      	add	ip, r3
 800f5f8:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800f5fc:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800f600:	e686      	b.n	800f310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f602:	4421      	add	r1, r4
 800f604:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800f608:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800f60c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800f610:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800f614:	e67c      	b.n	800f310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f616:	9f04      	ldr	r7, [sp, #16]
 800f618:	42b8      	cmp	r0, r7
 800f61a:	da27      	bge.n	800f66c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800f61c:	9902      	ldr	r1, [sp, #8]
 800f61e:	1a3f      	subs	r7, r7, r0
 800f620:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800f624:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800f628:	eb05 010e 	add.w	r1, r5, lr
 800f62c:	fa1f f881 	uxth.w	r8, r1
 800f630:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800f634:	4411      	add	r1, r2
 800f636:	fa0f f988 	sxth.w	r9, r8
 800f63a:	eba2 020e 	sub.w	r2, r2, lr
 800f63e:	eba1 0108 	sub.w	r1, r1, r8
 800f642:	4372      	muls	r2, r6
 800f644:	b289      	uxth	r1, r1
 800f646:	fa0f f881 	sxth.w	r8, r1
 800f64a:	fb08 f707 	mul.w	r7, r8, r7
 800f64e:	42ba      	cmp	r2, r7
 800f650:	dc06      	bgt.n	800f660 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800f652:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800f656:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800f65a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800f65e:	e7ca      	b.n	800f5f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800f660:	4429      	add	r1, r5
 800f662:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800f666:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800f66a:	e651      	b.n	800f310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f66c:	9805      	ldr	r0, [sp, #20]
 800f66e:	2d06      	cmp	r5, #6
 800f670:	ebaa 0000 	sub.w	r0, sl, r0
 800f674:	b280      	uxth	r0, r0
 800f676:	fa0f fe80 	sxth.w	lr, r0
 800f67a:	d817      	bhi.n	800f6ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800f67c:	9b04      	ldr	r3, [sp, #16]
 800f67e:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800f682:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800f686:	1c6b      	adds	r3, r5, #1
 800f688:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800f68c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800f690:	9b01      	ldr	r3, [sp, #4]
 800f692:	9801      	ldr	r0, [sp, #4]
 800f694:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800f698:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f69c:	805a      	strh	r2, [r3, #2]
 800f69e:	809e      	strh	r6, [r3, #4]
 800f6a0:	80d9      	strh	r1, [r3, #6]
 800f6a2:	9b02      	ldr	r3, [sp, #8]
 800f6a4:	3c08      	subs	r4, #8
 800f6a6:	3b01      	subs	r3, #1
 800f6a8:	9302      	str	r3, [sp, #8]
 800f6aa:	e747      	b.n	800f53c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800f6ac:	9a02      	ldr	r2, [sp, #8]
 800f6ae:	45b6      	cmp	lr, r6
 800f6b0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800f6b4:	db0d      	blt.n	800f6d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800f6b6:	449c      	add	ip, r3
 800f6b8:	445a      	add	r2, fp
 800f6ba:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800f6be:	fa1f fc8c 	uxth.w	ip, ip
 800f6c2:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800f6c6:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800f6ca:	448c      	add	ip, r1
 800f6cc:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800f6d0:	e61e      	b.n	800f310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f6d2:	445a      	add	r2, fp
 800f6d4:	4484      	add	ip, r0
 800f6d6:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800f6da:	e78f      	b.n	800f5fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800f6dc:	fa1f f18e 	uxth.w	r1, lr
 800f6e0:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800f6e4:	b293      	uxth	r3, r2
 800f6e6:	4596      	cmp	lr, r2
 800f6e8:	eb01 0806 	add.w	r8, r1, r6
 800f6ec:	9306      	str	r3, [sp, #24]
 800f6ee:	fa1f f888 	uxth.w	r8, r8
 800f6f2:	9f06      	ldr	r7, [sp, #24]
 800f6f4:	fa0f f388 	sxth.w	r3, r8
 800f6f8:	9307      	str	r3, [sp, #28]
 800f6fa:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800f6fe:	443b      	add	r3, r7
 800f700:	b29b      	uxth	r3, r3
 800f702:	9308      	str	r3, [sp, #32]
 800f704:	da24      	bge.n	800f750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800f706:	9905      	ldr	r1, [sp, #20]
 800f708:	eba3 0308 	sub.w	r3, r3, r8
 800f70c:	eba2 020e 	sub.w	r2, r2, lr
 800f710:	eba9 0000 	sub.w	r0, r9, r0
 800f714:	ebaa 0401 	sub.w	r4, sl, r1
 800f718:	b29b      	uxth	r3, r3
 800f71a:	b2a4      	uxth	r4, r4
 800f71c:	b219      	sxth	r1, r3
 800f71e:	b225      	sxth	r5, r4
 800f720:	4348      	muls	r0, r1
 800f722:	436a      	muls	r2, r5
 800f724:	4282      	cmp	r2, r0
 800f726:	9a02      	ldr	r2, [sp, #8]
 800f728:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800f72c:	445a      	add	r2, fp
 800f72e:	dc06      	bgt.n	800f73e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800f730:	9b07      	ldr	r3, [sp, #28]
 800f732:	44a4      	add	ip, r4
 800f734:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800f738:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800f73c:	e75e      	b.n	800f5fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800f73e:	9904      	ldr	r1, [sp, #16]
 800f740:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800f744:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800f748:	4433      	add	r3, r6
 800f74a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800f74e:	e5df      	b.n	800f310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f750:	9f06      	ldr	r7, [sp, #24]
 800f752:	9b04      	ldr	r3, [sp, #16]
 800f754:	1bc9      	subs	r1, r1, r7
 800f756:	fa0f f78a 	sxth.w	r7, sl
 800f75a:	b289      	uxth	r1, r1
 800f75c:	429f      	cmp	r7, r3
 800f75e:	fa0f fe81 	sxth.w	lr, r1
 800f762:	dd23      	ble.n	800f7ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 800f764:	9a05      	ldr	r2, [sp, #20]
 800f766:	eba9 0000 	sub.w	r0, r9, r0
 800f76a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800f76e:	ebaa 0202 	sub.w	r2, sl, r2
 800f772:	9d07      	ldr	r5, [sp, #28]
 800f774:	fb0e f000 	mul.w	r0, lr, r0
 800f778:	b292      	uxth	r2, r2
 800f77a:	eba5 0a03 	sub.w	sl, r5, r3
 800f77e:	9b02      	ldr	r3, [sp, #8]
 800f780:	b214      	sxth	r4, r2
 800f782:	00db      	lsls	r3, r3, #3
 800f784:	fb04 fa0a 	mul.w	sl, r4, sl
 800f788:	445b      	add	r3, fp
 800f78a:	4550      	cmp	r0, sl
 800f78c:	db03      	blt.n	800f796 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 800f78e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800f792:	4494      	add	ip, r2
 800f794:	e732      	b.n	800f5fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800f796:	9a04      	ldr	r2, [sp, #16]
 800f798:	4431      	add	r1, r6
 800f79a:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800f79e:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800f7a2:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800f7a6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800f7aa:	e75c      	b.n	800f666 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800f7ac:	9b08      	ldr	r3, [sp, #32]
 800f7ae:	2d06      	cmp	r5, #6
 800f7b0:	eba3 0308 	sub.w	r3, r3, r8
 800f7b4:	b29b      	uxth	r3, r3
 800f7b6:	b218      	sxth	r0, r3
 800f7b8:	d813      	bhi.n	800f7e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 800f7ba:	9b07      	ldr	r3, [sp, #28]
 800f7bc:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800f7c0:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800f7c4:	1c6b      	adds	r3, r5, #1
 800f7c6:	9901      	ldr	r1, [sp, #4]
 800f7c8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800f7cc:	9b01      	ldr	r3, [sp, #4]
 800f7ce:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800f7d2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800f7d6:	805a      	strh	r2, [r3, #2]
 800f7d8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800f7da:	f8a3 e006 	strh.w	lr, [r3, #6]
 800f7de:	809a      	strh	r2, [r3, #4]
 800f7e0:	e75f      	b.n	800f6a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800f7e2:	9c02      	ldr	r4, [sp, #8]
 800f7e4:	4570      	cmp	r0, lr
 800f7e6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800f7ea:	db0d      	blt.n	800f808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 800f7ec:	4431      	add	r1, r6
 800f7ee:	9b06      	ldr	r3, [sp, #24]
 800f7f0:	445c      	add	r4, fp
 800f7f2:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800f7f6:	b289      	uxth	r1, r1
 800f7f8:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800f7fc:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800f800:	4419      	add	r1, r3
 800f802:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800f806:	e583      	b.n	800f310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f808:	445c      	add	r4, fp
 800f80a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800f80e:	e79b      	b.n	800f748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800f810:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800f814:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800f818:	1e65      	subs	r5, r4, #1
 800f81a:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800f81e:	b2ad      	uxth	r5, r5
 800f820:	42b5      	cmp	r5, r6
 800f822:	d044      	beq.n	800f8ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800f824:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800f828:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800f82c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800f830:	4282      	cmp	r2, r0
 800f832:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800f836:	d11f      	bne.n	800f878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800f838:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800f83c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800f840:	459c      	cmp	ip, r3
 800f842:	d119      	bne.n	800f878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800f844:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800f848:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800f84c:	19d8      	adds	r0, r3, r7
 800f84e:	b200      	sxth	r0, r0
 800f850:	4288      	cmp	r0, r1
 800f852:	d109      	bne.n	800f868 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800f854:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800f858:	4413      	add	r3, r2
 800f85a:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800f85e:	4629      	mov	r1, r5
 800f860:	9801      	ldr	r0, [sp, #4]
 800f862:	f7ff fd2b 	bl	800f2bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f866:	e003      	b.n	800f870 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800f868:	4411      	add	r1, r2
 800f86a:	b209      	sxth	r1, r1
 800f86c:	42b9      	cmp	r1, r7
 800f86e:	d0f3      	beq.n	800f858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 800f870:	3d01      	subs	r5, #1
 800f872:	3c08      	subs	r4, #8
 800f874:	b2ad      	uxth	r5, r5
 800f876:	e7d3      	b.n	800f820 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800f878:	42b9      	cmp	r1, r7
 800f87a:	d1f9      	bne.n	800f870 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800f87c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800f880:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800f884:	4299      	cmp	r1, r3
 800f886:	d1f3      	bne.n	800f870 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800f888:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800f88c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800f890:	181f      	adds	r7, r3, r0
 800f892:	b23f      	sxth	r7, r7
 800f894:	42ba      	cmp	r2, r7
 800f896:	d105      	bne.n	800f8a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 800f898:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800f89c:	440b      	add	r3, r1
 800f89e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800f8a2:	e7dc      	b.n	800f85e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 800f8a4:	440a      	add	r2, r1
 800f8a6:	b212      	sxth	r2, r2
 800f8a8:	4290      	cmp	r0, r2
 800f8aa:	d1e1      	bne.n	800f870 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800f8ac:	e7f6      	b.n	800f89c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 800f8ae:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800f8b2:	2e07      	cmp	r6, #7
 800f8b4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800f8b8:	d812      	bhi.n	800f8e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 800f8ba:	1c75      	adds	r5, r6, #1
 800f8bc:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800f8c0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800f8c4:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800f8c8:	9d01      	ldr	r5, [sp, #4]
 800f8ca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800f8ce:	442c      	add	r4, r5
 800f8d0:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800f8d4:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800f8d8:	8061      	strh	r1, [r4, #2]
 800f8da:	80a2      	strh	r2, [r4, #4]
 800f8dc:	80e3      	strh	r3, [r4, #6]
 800f8de:	e581      	b.n	800f3e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f8e0:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800f8e4:	3e01      	subs	r6, #1
 800f8e6:	445c      	add	r4, fp
 800f8e8:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800f8ec:	f04f 37ff 	mov.w	r7, #4294967295
 800f8f0:	2500      	movs	r5, #0
 800f8f2:	9305      	str	r3, [sp, #20]
 800f8f4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800f8f8:	1e72      	subs	r2, r6, #1
 800f8fa:	9302      	str	r3, [sp, #8]
 800f8fc:	4691      	mov	r9, r2
 800f8fe:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800f902:	9304      	str	r3, [sp, #16]
 800f904:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800f908:	f1b9 3fff 	cmp.w	r9, #4294967295
 800f90c:	6818      	ldr	r0, [r3, #0]
 800f90e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800f912:	9207      	str	r2, [sp, #28]
 800f914:	bf16      	itet	ne
 800f916:	9905      	ldrne	r1, [sp, #20]
 800f918:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800f91c:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800f920:	9306      	str	r3, [sp, #24]
 800f922:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800f926:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800f92a:	fb18 f801 	smulbb	r8, r8, r1
 800f92e:	6859      	ldr	r1, [r3, #4]
 800f930:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800f934:	4671      	mov	r1, lr
 800f936:	a80c      	add	r0, sp, #48	@ 0x30
 800f938:	f7fb fe49 	bl	800b5ce <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800f93c:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800f940:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800f944:	f04f 0c08 	mov.w	ip, #8
 800f948:	9b04      	ldr	r3, [sp, #16]
 800f94a:	9a02      	ldr	r2, [sp, #8]
 800f94c:	fb10 f001 	smulbb	r0, r0, r1
 800f950:	fb02 8803 	mla	r8, r2, r3, r8
 800f954:	eba0 0108 	sub.w	r1, r0, r8
 800f958:	fb90 f0fc 	sdiv	r0, r0, ip
 800f95c:	4288      	cmp	r0, r1
 800f95e:	dc20      	bgt.n	800f9a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 800f960:	4551      	cmp	r1, sl
 800f962:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f966:	da03      	bge.n	800f970 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 800f968:	b1d9      	cbz	r1, 800f9a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 800f96a:	468a      	mov	sl, r1
 800f96c:	464f      	mov	r7, r9
 800f96e:	4635      	mov	r5, r6
 800f970:	f109 39ff 	add.w	r9, r9, #4294967295
 800f974:	f119 0f02 	cmn.w	r9, #2
 800f978:	d1c6      	bne.n	800f908 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 800f97a:	4616      	mov	r6, r2
 800f97c:	3201      	adds	r2, #1
 800f97e:	f1a4 0408 	sub.w	r4, r4, #8
 800f982:	d1b7      	bne.n	800f8f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 800f984:	9b01      	ldr	r3, [sp, #4]
 800f986:	b2ac      	uxth	r4, r5
 800f988:	00ed      	lsls	r5, r5, #3
 800f98a:	1958      	adds	r0, r3, r5
 800f98c:	1c7b      	adds	r3, r7, #1
 800f98e:	d10b      	bne.n	800f9a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 800f990:	4601      	mov	r1, r0
 800f992:	9803      	ldr	r0, [sp, #12]
 800f994:	f7fb fe1b 	bl	800b5ce <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800f998:	4621      	mov	r1, r4
 800f99a:	9801      	ldr	r0, [sp, #4]
 800f99c:	f7ff fc8e 	bl	800f2bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f9a0:	e4b6      	b.n	800f310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f9a2:	464f      	mov	r7, r9
 800f9a4:	4635      	mov	r5, r6
 800f9a6:	e7ed      	b.n	800f984 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 800f9a8:	9b01      	ldr	r3, [sp, #4]
 800f9aa:	00ff      	lsls	r7, r7, #3
 800f9ac:	445d      	add	r5, fp
 800f9ae:	19d9      	adds	r1, r3, r7
 800f9b0:	445f      	add	r7, fp
 800f9b2:	f7fb fe0c 	bl	800b5ce <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800f9b6:	9b03      	ldr	r3, [sp, #12]
 800f9b8:	cb03      	ldmia	r3!, {r0, r1}
 800f9ba:	9b03      	ldr	r3, [sp, #12]
 800f9bc:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800f9c0:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800f9c4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800f9c8:	6869      	ldr	r1, [r5, #4]
 800f9ca:	c303      	stmia	r3!, {r0, r1}
 800f9cc:	e7e4      	b.n	800f998 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 800f9ce:	bf00      	nop

0800f9d0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800f9d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9d4:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800f9d8:	b09b      	sub	sp, #108	@ 0x6c
 800f9da:	4604      	mov	r4, r0
 800f9dc:	4630      	mov	r0, r6
 800f9de:	f7f9 fdbe 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f9e2:	4605      	mov	r5, r0
 800f9e4:	b948      	cbnz	r0, 800f9fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800f9e6:	6823      	ldr	r3, [r4, #0]
 800f9e8:	4620      	mov	r0, r4
 800f9ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f9ec:	e896 0006 	ldmia.w	r6, {r1, r2}
 800f9f0:	4798      	blx	r3
 800f9f2:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800f9f6:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800f9fa:	4bc5      	ldr	r3, [pc, #788]	@ (800fd10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 800f9fc:	681b      	ldr	r3, [r3, #0]
 800f9fe:	2b00      	cmp	r3, #0
 800fa00:	d03f      	beq.n	800fa82 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800fa02:	4dc4      	ldr	r5, [pc, #784]	@ (800fd14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800fa04:	4628      	mov	r0, r5
 800fa06:	f7f9 fdaa 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 800fa0a:	4606      	mov	r6, r0
 800fa0c:	2800      	cmp	r0, #0
 800fa0e:	d138      	bne.n	800fa82 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800fa10:	4628      	mov	r0, r5
 800fa12:	f7ff f9d7 	bl	800edc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800fa16:	6823      	ldr	r3, [r4, #0]
 800fa18:	6829      	ldr	r1, [r5, #0]
 800fa1a:	4620      	mov	r0, r4
 800fa1c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800fa1e:	686a      	ldr	r2, [r5, #4]
 800fa20:	4798      	blx	r3
 800fa22:	802e      	strh	r6, [r5, #0]
 800fa24:	806e      	strh	r6, [r5, #2]
 800fa26:	80ae      	strh	r6, [r5, #4]
 800fa28:	80ee      	strh	r6, [r5, #6]
 800fa2a:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800fa2e:	4dba      	ldr	r5, [pc, #744]	@ (800fd18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800fa30:	4640      	mov	r0, r8
 800fa32:	f7ff fbe7 	bl	800f204 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800fa36:	882e      	ldrh	r6, [r5, #0]
 800fa38:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800fa3c:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800fa40:	4633      	mov	r3, r6
 800fa42:	42bb      	cmp	r3, r7
 800fa44:	d224      	bcs.n	800fa90 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800fa46:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800fa4a:	2907      	cmp	r1, #7
 800fa4c:	d816      	bhi.n	800fa7c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800fa4e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800fa52:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800fa56:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800fa5a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800fa5e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800fa62:	1c4a      	adds	r2, r1, #1
 800fa64:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800fa68:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800fa6c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800fa70:	f8a2 a002 	strh.w	sl, [r2, #2]
 800fa74:	f8a2 e004 	strh.w	lr, [r2, #4]
 800fa78:	f8a2 c006 	strh.w	ip, [r2, #6]
 800fa7c:	3301      	adds	r3, #1
 800fa7e:	b29b      	uxth	r3, r3
 800fa80:	e7df      	b.n	800fa42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800fa82:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800fa86:	2b00      	cmp	r3, #0
 800fa88:	d1cf      	bne.n	800fa2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800fa8a:	b01b      	add	sp, #108	@ 0x6c
 800fa8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa90:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800fa94:	42b3      	cmp	r3, r6
 800fa96:	d90c      	bls.n	800fab2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800fa98:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800fa9c:	6822      	ldr	r2, [r4, #0]
 800fa9e:	3601      	adds	r6, #1
 800faa0:	4620      	mov	r0, r4
 800faa2:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800faa4:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800faa8:	b2b6      	uxth	r6, r6
 800faaa:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800faae:	47b8      	blx	r7
 800fab0:	e7ee      	b.n	800fa90 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800fab2:	4a9a      	ldr	r2, [pc, #616]	@ (800fd1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800fab4:	6813      	ldr	r3, [r2, #0]
 800fab6:	4691      	mov	r9, r2
 800fab8:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800fabc:	2b01      	cmp	r3, #1
 800fabe:	f040 80e0 	bne.w	800fc82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 800fac2:	8829      	ldrh	r1, [r5, #0]
 800fac4:	2600      	movs	r6, #0
 800fac6:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800faca:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800face:	33ae      	adds	r3, #174	@ 0xae
 800fad0:	428f      	cmp	r7, r1
 800fad2:	f103 0308 	add.w	r3, r3, #8
 800fad6:	dd0a      	ble.n	800faee <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800fad8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800fadc:	3101      	adds	r1, #1
 800fade:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800fae2:	4402      	add	r2, r0
 800fae4:	b212      	sxth	r2, r2
 800fae6:	4296      	cmp	r6, r2
 800fae8:	bfb8      	it	lt
 800faea:	4616      	movlt	r6, r2
 800faec:	e7f0      	b.n	800fad0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800faee:	4b8c      	ldr	r3, [pc, #560]	@ (800fd20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800faf0:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 800fd1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 800faf4:	881b      	ldrh	r3, [r3, #0]
 800faf6:	2b0f      	cmp	r3, #15
 800faf8:	bf8c      	ite	hi
 800fafa:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800fafe:	f04f 0b01 	movls.w	fp, #1
 800fb02:	2300      	movs	r3, #0
 800fb04:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800fb08:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800fb0c:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800fb10:	4b82      	ldr	r3, [pc, #520]	@ (800fd1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800fb12:	4438      	add	r0, r7
 800fb14:	b207      	sxth	r7, r0
 800fb16:	6818      	ldr	r0, [r3, #0]
 800fb18:	42b7      	cmp	r7, r6
 800fb1a:	6803      	ldr	r3, [r0, #0]
 800fb1c:	f280 8083 	bge.w	800fc26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 800fb20:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800fb24:	4798      	blx	r3
 800fb26:	eb07 030b 	add.w	r3, r7, fp
 800fb2a:	4298      	cmp	r0, r3
 800fb2c:	da07      	bge.n	800fb3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800fb2e:	42b0      	cmp	r0, r6
 800fb30:	da05      	bge.n	800fb3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800fb32:	4287      	cmp	r7, r0
 800fb34:	dd6c      	ble.n	800fc10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800fb36:	2f00      	cmp	r7, #0
 800fb38:	dd6a      	ble.n	800fc10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800fb3a:	4630      	mov	r0, r6
 800fb3c:	e004      	b.n	800fb48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 800fb3e:	4287      	cmp	r7, r0
 800fb40:	dcfb      	bgt.n	800fb3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 800fb42:	42b0      	cmp	r0, r6
 800fb44:	bfa8      	it	ge
 800fb46:	4630      	movge	r0, r6
 800fb48:	4b76      	ldr	r3, [pc, #472]	@ (800fd24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800fb4a:	1bc0      	subs	r0, r0, r7
 800fb4c:	2200      	movs	r2, #0
 800fb4e:	f8ad 7016 	strh.w	r7, [sp, #22]
 800fb52:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fb56:	882f      	ldrh	r7, [r5, #0]
 800fb58:	f8ad 2014 	strh.w	r2, [sp, #20]
 800fb5c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800fb60:	f8ad 001a 	strh.w	r0, [sp, #26]
 800fb64:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800fb68:	42bb      	cmp	r3, r7
 800fb6a:	d9cd      	bls.n	800fb08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 800fb6c:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800fb70:	ab07      	add	r3, sp, #28
 800fb72:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800fb76:	6851      	ldr	r1, [r2, #4]
 800fb78:	c303      	stmia	r3!, {r0, r1}
 800fb7a:	a905      	add	r1, sp, #20
 800fb7c:	a807      	add	r0, sp, #28
 800fb7e:	f7ff f9f4 	bl	800ef6a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fb82:	2800      	cmp	r0, #0
 800fb84:	d04c      	beq.n	800fc20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 800fb86:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800fb8a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800fb8e:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800fb92:	4686      	mov	lr, r0
 800fb94:	4290      	cmp	r0, r2
 800fb96:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800fb9a:	4450      	add	r0, sl
 800fb9c:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800fba0:	bfb8      	it	lt
 800fba2:	4696      	movlt	lr, r2
 800fba4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800fba8:	4452      	add	r2, sl
 800fbaa:	b280      	uxth	r0, r0
 800fbac:	4299      	cmp	r1, r3
 800fbae:	468c      	mov	ip, r1
 800fbb0:	b292      	uxth	r2, r2
 800fbb2:	9302      	str	r3, [sp, #8]
 800fbb4:	bfb8      	it	lt
 800fbb6:	469c      	movlt	ip, r3
 800fbb8:	b203      	sxth	r3, r0
 800fbba:	fa0f fa82 	sxth.w	sl, r2
 800fbbe:	f8ad e01c 	strh.w	lr, [sp, #28]
 800fbc2:	f8ad c01e 	strh.w	ip, [sp, #30]
 800fbc6:	4553      	cmp	r3, sl
 800fbc8:	bfb8      	it	lt
 800fbca:	4602      	movlt	r2, r0
 800fbcc:	9b02      	ldr	r3, [sp, #8]
 800fbce:	eba2 020e 	sub.w	r2, r2, lr
 800fbd2:	f8ad 2020 	strh.w	r2, [sp, #32]
 800fbd6:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800fbda:	4411      	add	r1, r2
 800fbdc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800fbe0:	4413      	add	r3, r2
 800fbe2:	b289      	uxth	r1, r1
 800fbe4:	b29b      	uxth	r3, r3
 800fbe6:	b208      	sxth	r0, r1
 800fbe8:	b21a      	sxth	r2, r3
 800fbea:	4290      	cmp	r0, r2
 800fbec:	bfb8      	it	lt
 800fbee:	460b      	movlt	r3, r1
 800fbf0:	eba3 030c 	sub.w	r3, r3, ip
 800fbf4:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800fbf8:	a807      	add	r0, sp, #28
 800fbfa:	f7f9 fcb0 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 800fbfe:	b920      	cbnz	r0, 800fc0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 800fc00:	6823      	ldr	r3, [r4, #0]
 800fc02:	a907      	add	r1, sp, #28
 800fc04:	4620      	mov	r0, r4
 800fc06:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800fc08:	4798      	blx	r3
 800fc0a:	3701      	adds	r7, #1
 800fc0c:	b2bf      	uxth	r7, r7
 800fc0e:	e7a9      	b.n	800fb64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 800fc10:	f8d9 0000 	ldr.w	r0, [r9]
 800fc14:	2101      	movs	r1, #1
 800fc16:	6803      	ldr	r3, [r0, #0]
 800fc18:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800fc1c:	4798      	blx	r3
 800fc1e:	e773      	b.n	800fb08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 800fc20:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800fc24:	e7e8      	b.n	800fbf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 800fc26:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fc28:	4798      	blx	r3
 800fc2a:	4b3f      	ldr	r3, [pc, #252]	@ (800fd28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800fc2c:	781b      	ldrb	r3, [r3, #0]
 800fc2e:	2b00      	cmp	r3, #0
 800fc30:	f43f af2b 	beq.w	800fa8a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800fc34:	2300      	movs	r3, #0
 800fc36:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800fc3a:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800fc3e:	882b      	ldrh	r3, [r5, #0]
 800fc40:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800fc44:	42ab      	cmp	r3, r5
 800fc46:	f4bf af20 	bcs.w	800fa8a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800fc4a:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800fc4e:	2907      	cmp	r1, #7
 800fc50:	d814      	bhi.n	800fc7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 800fc52:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800fc56:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800fc5a:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800fc5e:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800fc62:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800fc66:	1c4a      	adds	r2, r1, #1
 800fc68:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800fc6c:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800fc70:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800fc74:	f8a2 c002 	strh.w	ip, [r2, #2]
 800fc78:	8097      	strh	r7, [r2, #4]
 800fc7a:	80d6      	strh	r6, [r2, #6]
 800fc7c:	3301      	adds	r3, #1
 800fc7e:	b29b      	uxth	r3, r3
 800fc80:	e7e0      	b.n	800fc44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 800fc82:	2b02      	cmp	r3, #2
 800fc84:	f040 8133 	bne.w	800feee <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 800fc88:	4b28      	ldr	r3, [pc, #160]	@ (800fd2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800fc8a:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800fc8e:	781b      	ldrb	r3, [r3, #0]
 800fc90:	2b01      	cmp	r3, #1
 800fc92:	f000 8098 	beq.w	800fdc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800fc96:	882a      	ldrh	r2, [r5, #0]
 800fc98:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800fc9c:	3201      	adds	r2, #1
 800fc9e:	b292      	uxth	r2, r2
 800fca0:	2900      	cmp	r1, #0
 800fca2:	d0c2      	beq.n	800fc2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800fca4:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800fca8:	4694      	mov	ip, r2
 800fcaa:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800fcae:	f04f 0900 	mov.w	r9, #0
 800fcb2:	441e      	add	r6, r3
 800fcb4:	b236      	sxth	r6, r6
 800fcb6:	fa1f f38c 	uxth.w	r3, ip
 800fcba:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800fcbe:	4299      	cmp	r1, r3
 800fcc0:	f240 80be 	bls.w	800fe40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 800fcc4:	4427      	add	r7, r4
 800fcc6:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800fcca:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800fcce:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800fcd2:	4283      	cmp	r3, r0
 800fcd4:	f340 80a0 	ble.w	800fe18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 800fcd8:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800fcdc:	46e1      	mov	r9, ip
 800fcde:	4406      	add	r6, r0
 800fce0:	b236      	sxth	r6, r6
 800fce2:	429e      	cmp	r6, r3
 800fce4:	bfa8      	it	ge
 800fce6:	461e      	movge	r6, r3
 800fce8:	f10c 0c01 	add.w	ip, ip, #1
 800fcec:	e7e3      	b.n	800fcb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 800fcee:	d10a      	bne.n	800fd06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 800fcf0:	4562      	cmp	r2, ip
 800fcf2:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800fcf6:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800fcfa:	bfb8      	it	lt
 800fcfc:	4662      	movlt	r2, ip
 800fcfe:	4288      	cmp	r0, r1
 800fd00:	bfb8      	it	lt
 800fd02:	461f      	movlt	r7, r3
 800fd04:	e086      	b.n	800fe14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 800fd06:	428a      	cmp	r2, r1
 800fd08:	bfb8      	it	lt
 800fd0a:	460a      	movlt	r2, r1
 800fd0c:	e082      	b.n	800fe14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 800fd0e:	bf00      	nop
 800fd10:	20016a40 	.word	0x20016a40
 800fd14:	20016a4c 	.word	0x20016a4c
 800fd18:	20000044 	.word	0x20000044
 800fd1c:	20016a00 	.word	0x20016a00
 800fd20:	200169f6 	.word	0x200169f6
 800fd24:	200169f4 	.word	0x200169f4
 800fd28:	200169fe 	.word	0x200169fe
 800fd2c:	200169f8 	.word	0x200169f8
 800fd30:	19a1      	adds	r1, r4, r6
 800fd32:	ab07      	add	r3, sp, #28
 800fd34:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800fd38:	6849      	ldr	r1, [r1, #4]
 800fd3a:	c303      	stmia	r3!, {r0, r1}
 800fd3c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800fd40:	a807      	add	r0, sp, #28
 800fd42:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800fd46:	2b13      	cmp	r3, #19
 800fd48:	440b      	add	r3, r1
 800fd4a:	bfd8      	it	le
 800fd4c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800fd50:	1a9b      	subs	r3, r3, r2
 800fd52:	f8ad 201c 	strh.w	r2, [sp, #28]
 800fd56:	f8ad 3020 	strh.w	r3, [sp, #32]
 800fd5a:	f7ff f84d 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800fd5e:	a807      	add	r0, sp, #28
 800fd60:	f7f9 fbfd 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 800fd64:	bb78      	cbnz	r0, 800fdc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800fd66:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800fd6a:	4426      	add	r6, r4
 800fd6c:	f8d9 0000 	ldr.w	r0, [r9]
 800fd70:	f1bc 0f14 	cmp.w	ip, #20
 800fd74:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800fd78:	f8d0 e000 	ldr.w	lr, [r0]
 800fd7c:	bfa8      	it	ge
 800fd7e:	f04f 0c14 	movge.w	ip, #20
 800fd82:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800fd86:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800fd8a:	fa1f fc8c 	uxth.w	ip, ip
 800fd8e:	f8cd c000 	str.w	ip, [sp]
 800fd92:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800fd96:	47d8      	blx	fp
 800fd98:	4683      	mov	fp, r0
 800fd9a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800fd9e:	a807      	add	r0, sp, #28
 800fda0:	f7ff f810 	bl	800edc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800fda4:	6823      	ldr	r3, [r4, #0]
 800fda6:	4620      	mov	r0, r4
 800fda8:	a907      	add	r1, sp, #28
 800fdaa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800fdac:	4798      	blx	r3
 800fdae:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800fdb2:	eba0 000b 	sub.w	r0, r0, fp
 800fdb6:	b200      	sxth	r0, r0
 800fdb8:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800fdbc:	b918      	cbnz	r0, 800fdc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 800fdbe:	b2b9      	uxth	r1, r7
 800fdc0:	4650      	mov	r0, sl
 800fdc2:	f7ff fa7b 	bl	800f2bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fdc6:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800fdca:	f1bb 0f00 	cmp.w	fp, #0
 800fdce:	f43f af2c 	beq.w	800fc2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800fdd2:	882b      	ldrh	r3, [r5, #0]
 800fdd4:	2700      	movs	r7, #0
 800fdd6:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800fdda:	3301      	adds	r3, #1
 800fddc:	b29b      	uxth	r3, r3
 800fdde:	b299      	uxth	r1, r3
 800fde0:	00fe      	lsls	r6, r7, #3
 800fde2:	458b      	cmp	fp, r1
 800fde4:	d9a4      	bls.n	800fd30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 800fde6:	4426      	add	r6, r4
 800fde8:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800fdec:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800fdf0:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800fdf4:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800fdf8:	4408      	add	r0, r1
 800fdfa:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800fdfe:	4461      	add	r1, ip
 800fe00:	b200      	sxth	r0, r0
 800fe02:	b209      	sxth	r1, r1
 800fe04:	4288      	cmp	r0, r1
 800fe06:	f6bf af72 	bge.w	800fcee <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 800fe0a:	4584      	cmp	ip, r0
 800fe0c:	4662      	mov	r2, ip
 800fe0e:	461f      	mov	r7, r3
 800fe10:	bfb8      	it	lt
 800fe12:	4602      	movlt	r2, r0
 800fe14:	3301      	adds	r3, #1
 800fe16:	e7e2      	b.n	800fdde <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 800fe18:	d10e      	bne.n	800fe38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 800fe1a:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800fe1e:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800fe22:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800fe26:	4473      	add	r3, lr
 800fe28:	b21b      	sxth	r3, r3
 800fe2a:	429e      	cmp	r6, r3
 800fe2c:	bfa8      	it	ge
 800fe2e:	461e      	movge	r6, r3
 800fe30:	4287      	cmp	r7, r0
 800fe32:	bfb8      	it	lt
 800fe34:	46e1      	movlt	r9, ip
 800fe36:	e757      	b.n	800fce8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 800fe38:	4286      	cmp	r6, r0
 800fe3a:	bfa8      	it	ge
 800fe3c:	4606      	movge	r6, r0
 800fe3e:	e753      	b.n	800fce8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 800fe40:	eb0a 0007 	add.w	r0, sl, r7
 800fe44:	4427      	add	r7, r4
 800fe46:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800fe4a:	f1bb 0f13 	cmp.w	fp, #19
 800fe4e:	bfdc      	itt	le
 800fe50:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800fe54:	445e      	addle	r6, fp
 800fe56:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800fe5a:	bfd8      	it	le
 800fe5c:	b236      	sxthle	r6, r6
 800fe5e:	f7f9 fb7e 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe62:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800fe66:	2800      	cmp	r0, #0
 800fe68:	f47f af1a 	bne.w	800fca0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 800fe6c:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800fe70:	fa1f fb8b 	uxth.w	fp, fp
 800fe74:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800fe78:	1ab6      	subs	r6, r6, r2
 800fe7a:	4829      	ldr	r0, [pc, #164]	@ (800ff20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 800fe7c:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800fe80:	2e14      	cmp	r6, #20
 800fe82:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800fe86:	6800      	ldr	r0, [r0, #0]
 800fe88:	bfa8      	it	ge
 800fe8a:	2614      	movge	r6, #20
 800fe8c:	f8ad 101c 	strh.w	r1, [sp, #28]
 800fe90:	f8ad 201e 	strh.w	r2, [sp, #30]
 800fe94:	b289      	uxth	r1, r1
 800fe96:	f8ad 3020 	strh.w	r3, [sp, #32]
 800fe9a:	b2b6      	uxth	r6, r6
 800fe9c:	f8d0 c000 	ldr.w	ip, [r0]
 800fea0:	b292      	uxth	r2, r2
 800fea2:	455e      	cmp	r6, fp
 800fea4:	bf94      	ite	ls
 800fea6:	9600      	strls	r6, [sp, #0]
 800fea8:	f8cd b000 	strhi.w	fp, [sp]
 800feac:	b29b      	uxth	r3, r3
 800feae:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800feb2:	47b0      	blx	r6
 800feb4:	6823      	ldr	r3, [r4, #0]
 800feb6:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800feba:	a907      	add	r1, sp, #28
 800febc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800febe:	4620      	mov	r0, r4
 800fec0:	4798      	blx	r3
 800fec2:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800fec6:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800feca:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800fece:	1a5b      	subs	r3, r3, r1
 800fed0:	440a      	add	r2, r1
 800fed2:	b21b      	sxth	r3, r3
 800fed4:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800fed8:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800fedc:	2b00      	cmp	r3, #0
 800fede:	f47f aeda 	bne.w	800fc96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 800fee2:	fa1f f189 	uxth.w	r1, r9
 800fee6:	4650      	mov	r0, sl
 800fee8:	f7ff f9e8 	bl	800f2bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800feec:	e6d3      	b.n	800fc96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 800feee:	882e      	ldrh	r6, [r5, #0]
 800fef0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800fef4:	42b3      	cmp	r3, r6
 800fef6:	f67f ae98 	bls.w	800fc2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800fefa:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800fefe:	ab07      	add	r3, sp, #28
 800ff00:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800ff04:	6851      	ldr	r1, [r2, #4]
 800ff06:	c303      	stmia	r3!, {r0, r1}
 800ff08:	a807      	add	r0, sp, #28
 800ff0a:	f7f9 fb28 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ff0e:	b920      	cbnz	r0, 800ff1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 800ff10:	6823      	ldr	r3, [r4, #0]
 800ff12:	a907      	add	r1, sp, #28
 800ff14:	4620      	mov	r0, r4
 800ff16:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ff18:	4798      	blx	r3
 800ff1a:	3601      	adds	r6, #1
 800ff1c:	b2b6      	uxth	r6, r6
 800ff1e:	e7e7      	b.n	800fef0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 800ff20:	20016a00 	.word	0x20016a00

0800ff24 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800ff24:	4b03      	ldr	r3, [pc, #12]	@ (800ff34 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800ff26:	2200      	movs	r2, #0
 800ff28:	801a      	strh	r2, [r3, #0]
 800ff2a:	805a      	strh	r2, [r3, #2]
 800ff2c:	809a      	strh	r2, [r3, #4]
 800ff2e:	80da      	strh	r2, [r3, #6]
 800ff30:	4770      	bx	lr
 800ff32:	bf00      	nop
 800ff34:	20016a4c 	.word	0x20016a4c

0800ff38 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ff38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff3c:	b09d      	sub	sp, #116	@ 0x74
 800ff3e:	4606      	mov	r6, r0
 800ff40:	4614      	mov	r4, r2
 800ff42:	468a      	mov	sl, r1
 800ff44:	a803      	add	r0, sp, #12
 800ff46:	461d      	mov	r5, r3
 800ff48:	f000 fe48 	bl	8010bdc <_ZN8touchgfx12TextProviderC1Ev>
 800ff4c:	6833      	ldr	r3, [r6, #0]
 800ff4e:	4630      	mov	r0, r6
 800ff50:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800ff54:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ff56:	4798      	blx	r3
 800ff58:	6833      	ldr	r3, [r6, #0]
 800ff5a:	4607      	mov	r7, r0
 800ff5c:	4630      	mov	r0, r6
 800ff5e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ff60:	4798      	blx	r3
 800ff62:	462a      	mov	r2, r5
 800ff64:	2500      	movs	r5, #0
 800ff66:	4621      	mov	r1, r4
 800ff68:	9000      	str	r0, [sp, #0]
 800ff6a:	463b      	mov	r3, r7
 800ff6c:	462c      	mov	r4, r5
 800ff6e:	46a9      	mov	r9, r5
 800ff70:	46a8      	mov	r8, r5
 800ff72:	a803      	add	r0, sp, #12
 800ff74:	f000 fe85 	bl	8010c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ff78:	2300      	movs	r3, #0
 800ff7a:	9302      	str	r3, [sp, #8]
 800ff7c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800ff80:	429c      	cmp	r4, r3
 800ff82:	d002      	beq.n	800ff8a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800ff84:	455c      	cmp	r4, fp
 800ff86:	bf18      	it	ne
 800ff88:	4625      	movne	r5, r4
 800ff8a:	ab02      	add	r3, sp, #8
 800ff8c:	4632      	mov	r2, r6
 800ff8e:	4651      	mov	r1, sl
 800ff90:	a803      	add	r0, sp, #12
 800ff92:	f001 f96b 	bl	801126c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ff96:	4604      	mov	r4, r0
 800ff98:	b108      	cbz	r0, 800ff9e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800ff9a:	280a      	cmp	r0, #10
 800ff9c:	d10a      	bne.n	800ffb4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800ff9e:	45c1      	cmp	r9, r8
 800ffa0:	bf38      	it	cc
 800ffa2:	46c1      	movcc	r9, r8
 800ffa4:	f04f 0800 	mov.w	r8, #0
 800ffa8:	2c00      	cmp	r4, #0
 800ffaa:	d1e5      	bne.n	800ff78 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ffac:	4648      	mov	r0, r9
 800ffae:	b01d      	add	sp, #116	@ 0x74
 800ffb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ffb4:	9a02      	ldr	r2, [sp, #8]
 800ffb6:	2a00      	cmp	r2, #0
 800ffb8:	d0de      	beq.n	800ff78 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ffba:	7b57      	ldrb	r7, [r2, #13]
 800ffbc:	4629      	mov	r1, r5
 800ffbe:	6833      	ldr	r3, [r6, #0]
 800ffc0:	007f      	lsls	r7, r7, #1
 800ffc2:	8894      	ldrh	r4, [r2, #4]
 800ffc4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ffc6:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 800ffca:	7a97      	ldrb	r7, [r2, #10]
 800ffcc:	4307      	orrs	r7, r0
 800ffce:	4630      	mov	r0, r6
 800ffd0:	4798      	blx	r3
 800ffd2:	4438      	add	r0, r7
 800ffd4:	4480      	add	r8, r0
 800ffd6:	fa1f f888 	uxth.w	r8, r8
 800ffda:	e7e5      	b.n	800ffa8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800ffdc <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ffdc:	b508      	push	{r3, lr}
 800ffde:	6803      	ldr	r3, [r0, #0]
 800ffe0:	68db      	ldr	r3, [r3, #12]
 800ffe2:	4798      	blx	r3
 800ffe4:	b128      	cbz	r0, 800fff2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ffe6:	7b43      	ldrb	r3, [r0, #13]
 800ffe8:	7a80      	ldrb	r0, [r0, #10]
 800ffea:	005b      	lsls	r3, r3, #1
 800ffec:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800fff0:	4318      	orrs	r0, r3
 800fff2:	bd08      	pop	{r3, pc}

0800fff4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800fff4:	b40e      	push	{r1, r2, r3}
 800fff6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fff8:	b09e      	sub	sp, #120	@ 0x78
 800fffa:	4605      	mov	r5, r0
 800fffc:	ab23      	add	r3, sp, #140	@ 0x8c
 800fffe:	a805      	add	r0, sp, #20
 8010000:	f853 4b04 	ldr.w	r4, [r3], #4
 8010004:	9303      	str	r3, [sp, #12]
 8010006:	f000 fde9 	bl	8010bdc <_ZN8touchgfx12TextProviderC1Ev>
 801000a:	682b      	ldr	r3, [r5, #0]
 801000c:	4628      	mov	r0, r5
 801000e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010010:	4798      	blx	r3
 8010012:	682b      	ldr	r3, [r5, #0]
 8010014:	4606      	mov	r6, r0
 8010016:	4628      	mov	r0, r5
 8010018:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801001a:	4798      	blx	r3
 801001c:	4633      	mov	r3, r6
 801001e:	4621      	mov	r1, r4
 8010020:	ae1e      	add	r6, sp, #120	@ 0x78
 8010022:	2400      	movs	r4, #0
 8010024:	9000      	str	r0, [sp, #0]
 8010026:	9a03      	ldr	r2, [sp, #12]
 8010028:	a805      	add	r0, sp, #20
 801002a:	f000 fe2a 	bl	8010c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801002e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8010032:	462a      	mov	r2, r5
 8010034:	4633      	mov	r3, r6
 8010036:	4621      	mov	r1, r4
 8010038:	a805      	add	r0, sp, #20
 801003a:	f001 f917 	bl	801126c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801003e:	b300      	cbz	r0, 8010082 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 8010040:	280a      	cmp	r0, #10
 8010042:	d01a      	beq.n	801007a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8010044:	9f04      	ldr	r7, [sp, #16]
 8010046:	b1c7      	cbz	r7, 801007a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8010048:	7b78      	ldrb	r0, [r7, #13]
 801004a:	7a3b      	ldrb	r3, [r7, #8]
 801004c:	00c1      	lsls	r1, r0, #3
 801004e:	88ea      	ldrh	r2, [r5, #6]
 8010050:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8010054:	4319      	orrs	r1, r3
 8010056:	0643      	lsls	r3, r0, #25
 8010058:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801005c:	bf48      	it	mi
 801005e:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8010062:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8010066:	bf48      	it	mi
 8010068:	b219      	sxthmi	r1, r3
 801006a:	79fb      	ldrb	r3, [r7, #7]
 801006c:	4303      	orrs	r3, r0
 801006e:	4413      	add	r3, r2
 8010070:	1a5b      	subs	r3, r3, r1
 8010072:	b21b      	sxth	r3, r3
 8010074:	429c      	cmp	r4, r3
 8010076:	bfb8      	it	lt
 8010078:	461c      	movlt	r4, r3
 801007a:	4633      	mov	r3, r6
 801007c:	462a      	mov	r2, r5
 801007e:	2100      	movs	r1, #0
 8010080:	e7da      	b.n	8010038 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8010082:	b2a0      	uxth	r0, r4
 8010084:	b01e      	add	sp, #120	@ 0x78
 8010086:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801008a:	b003      	add	sp, #12
 801008c:	4770      	bx	lr

0801008e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801008e:	7a43      	ldrb	r3, [r0, #9]
 8010090:	8880      	ldrh	r0, [r0, #4]
 8010092:	4418      	add	r0, r3
 8010094:	b280      	uxth	r0, r0
 8010096:	4770      	bx	lr

08010098 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8010098:	6803      	ldr	r3, [r0, #0]
 801009a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801009c:	4718      	bx	r3

0801009e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801009e:	b40e      	push	{r1, r2, r3}
 80100a0:	b570      	push	{r4, r5, r6, lr}
 80100a2:	b09d      	sub	sp, #116	@ 0x74
 80100a4:	4604      	mov	r4, r0
 80100a6:	ab21      	add	r3, sp, #132	@ 0x84
 80100a8:	a803      	add	r0, sp, #12
 80100aa:	f853 5b04 	ldr.w	r5, [r3], #4
 80100ae:	9302      	str	r3, [sp, #8]
 80100b0:	f000 fd94 	bl	8010bdc <_ZN8touchgfx12TextProviderC1Ev>
 80100b4:	6823      	ldr	r3, [r4, #0]
 80100b6:	4620      	mov	r0, r4
 80100b8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80100ba:	4798      	blx	r3
 80100bc:	6823      	ldr	r3, [r4, #0]
 80100be:	4606      	mov	r6, r0
 80100c0:	4620      	mov	r0, r4
 80100c2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80100c4:	2401      	movs	r4, #1
 80100c6:	4798      	blx	r3
 80100c8:	4633      	mov	r3, r6
 80100ca:	9000      	str	r0, [sp, #0]
 80100cc:	4629      	mov	r1, r5
 80100ce:	9a02      	ldr	r2, [sp, #8]
 80100d0:	a803      	add	r0, sp, #12
 80100d2:	f000 fdd6 	bl	8010c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80100d6:	a803      	add	r0, sp, #12
 80100d8:	f001 f994 	bl	8011404 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80100dc:	b2a3      	uxth	r3, r4
 80100de:	b138      	cbz	r0, 80100f0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 80100e0:	280a      	cmp	r0, #10
 80100e2:	a803      	add	r0, sp, #12
 80100e4:	bf04      	itt	eq
 80100e6:	3301      	addeq	r3, #1
 80100e8:	b21c      	sxtheq	r4, r3
 80100ea:	f001 f98b 	bl	8011404 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80100ee:	e7f5      	b.n	80100dc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80100f0:	4618      	mov	r0, r3
 80100f2:	b01d      	add	sp, #116	@ 0x74
 80100f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80100f8:	b003      	add	sp, #12
 80100fa:	4770      	bx	lr

080100fc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80100fc:	b40e      	push	{r1, r2, r3}
 80100fe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010100:	b09e      	sub	sp, #120	@ 0x78
 8010102:	4604      	mov	r4, r0
 8010104:	ab23      	add	r3, sp, #140	@ 0x8c
 8010106:	a805      	add	r0, sp, #20
 8010108:	f853 5b04 	ldr.w	r5, [r3], #4
 801010c:	9303      	str	r3, [sp, #12]
 801010e:	f000 fd65 	bl	8010bdc <_ZN8touchgfx12TextProviderC1Ev>
 8010112:	6823      	ldr	r3, [r4, #0]
 8010114:	4620      	mov	r0, r4
 8010116:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010118:	4798      	blx	r3
 801011a:	6823      	ldr	r3, [r4, #0]
 801011c:	4606      	mov	r6, r0
 801011e:	4620      	mov	r0, r4
 8010120:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010122:	4798      	blx	r3
 8010124:	4633      	mov	r3, r6
 8010126:	4629      	mov	r1, r5
 8010128:	9000      	str	r0, [sp, #0]
 801012a:	9a03      	ldr	r2, [sp, #12]
 801012c:	a805      	add	r0, sp, #20
 801012e:	f000 fda8 	bl	8010c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010132:	ad1e      	add	r5, sp, #120	@ 0x78
 8010134:	2100      	movs	r1, #0
 8010136:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801013a:	4622      	mov	r2, r4
 801013c:	a805      	add	r0, sp, #20
 801013e:	f845 1d68 	str.w	r1, [r5, #-104]!
 8010142:	462b      	mov	r3, r5
 8010144:	f001 f892 	bl	801126c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010148:	b1d8      	cbz	r0, 8010182 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801014a:	280a      	cmp	r0, #10
 801014c:	d012      	beq.n	8010174 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801014e:	9804      	ldr	r0, [sp, #16]
 8010150:	b180      	cbz	r0, 8010174 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010152:	7b47      	ldrb	r7, [r0, #13]
 8010154:	88e2      	ldrh	r2, [r4, #6]
 8010156:	00fb      	lsls	r3, r7, #3
 8010158:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801015c:	7a03      	ldrb	r3, [r0, #8]
 801015e:	430b      	orrs	r3, r1
 8010160:	0679      	lsls	r1, r7, #25
 8010162:	bf44      	itt	mi
 8010164:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010168:	b21b      	sxthmi	r3, r3
 801016a:	1ad3      	subs	r3, r2, r3
 801016c:	b21b      	sxth	r3, r3
 801016e:	429e      	cmp	r6, r3
 8010170:	bfa8      	it	ge
 8010172:	461e      	movge	r6, r3
 8010174:	462b      	mov	r3, r5
 8010176:	4622      	mov	r2, r4
 8010178:	2100      	movs	r1, #0
 801017a:	a805      	add	r0, sp, #20
 801017c:	f001 f876 	bl	801126c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010180:	e7e2      	b.n	8010148 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8010182:	4630      	mov	r0, r6
 8010184:	b01e      	add	sp, #120	@ 0x78
 8010186:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801018a:	b003      	add	sp, #12
 801018c:	4770      	bx	lr

0801018e <_ZNK8touchgfx8Drawable10invalidateEv>:
 801018e:	b513      	push	{r0, r1, r4, lr}
 8010190:	6803      	ldr	r3, [r0, #0]
 8010192:	2400      	movs	r4, #0
 8010194:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010198:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801019c:	f8ad 1004 	strh.w	r1, [sp, #4]
 80101a0:	4669      	mov	r1, sp
 80101a2:	691b      	ldr	r3, [r3, #16]
 80101a4:	9400      	str	r4, [sp, #0]
 80101a6:	f8ad 2006 	strh.w	r2, [sp, #6]
 80101aa:	4798      	blx	r3
 80101ac:	b002      	add	sp, #8
 80101ae:	bd10      	pop	{r4, pc}

080101b0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80101b0:	b538      	push	{r3, r4, r5, lr}
 80101b2:	680b      	ldr	r3, [r1, #0]
 80101b4:	460c      	mov	r4, r1
 80101b6:	4605      	mov	r5, r0
 80101b8:	68db      	ldr	r3, [r3, #12]
 80101ba:	4798      	blx	r3
 80101bc:	6823      	ldr	r3, [r4, #0]
 80101be:	4620      	mov	r0, r4
 80101c0:	4629      	mov	r1, r5
 80101c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80101c4:	4798      	blx	r3
 80101c6:	4628      	mov	r0, r5
 80101c8:	bd38      	pop	{r3, r4, r5, pc}

080101ca <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80101ca:	b410      	push	{r4}
 80101cc:	880a      	ldrh	r2, [r1, #0]
 80101ce:	8884      	ldrh	r4, [r0, #4]
 80101d0:	4422      	add	r2, r4
 80101d2:	800a      	strh	r2, [r1, #0]
 80101d4:	884a      	ldrh	r2, [r1, #2]
 80101d6:	88c4      	ldrh	r4, [r0, #6]
 80101d8:	4422      	add	r2, r4
 80101da:	804a      	strh	r2, [r1, #2]
 80101dc:	6940      	ldr	r0, [r0, #20]
 80101de:	b120      	cbz	r0, 80101ea <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80101e0:	6803      	ldr	r3, [r0, #0]
 80101e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80101e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80101e8:	4718      	bx	r3
 80101ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 80101ee:	4770      	bx	lr

080101f0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80101f0:	b570      	push	{r4, r5, r6, lr}
 80101f2:	8882      	ldrh	r2, [r0, #4]
 80101f4:	460c      	mov	r4, r1
 80101f6:	880b      	ldrh	r3, [r1, #0]
 80101f8:	4605      	mov	r5, r0
 80101fa:	4413      	add	r3, r2
 80101fc:	800b      	strh	r3, [r1, #0]
 80101fe:	884b      	ldrh	r3, [r1, #2]
 8010200:	88c2      	ldrh	r2, [r0, #6]
 8010202:	4413      	add	r3, r2
 8010204:	804b      	strh	r3, [r1, #2]
 8010206:	1d01      	adds	r1, r0, #4
 8010208:	4620      	mov	r0, r4
 801020a:	f7f9 f965 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 801020e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010212:	2b00      	cmp	r3, #0
 8010214:	dd0b      	ble.n	801022e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010216:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801021a:	2b00      	cmp	r3, #0
 801021c:	dd07      	ble.n	801022e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801021e:	6968      	ldr	r0, [r5, #20]
 8010220:	b128      	cbz	r0, 801022e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010222:	6803      	ldr	r3, [r0, #0]
 8010224:	4621      	mov	r1, r4
 8010226:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010228:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801022c:	4718      	bx	r3
 801022e:	bd70      	pop	{r4, r5, r6, pc}

08010230 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010230:	b570      	push	{r4, r5, r6, lr}
 8010232:	8882      	ldrh	r2, [r0, #4]
 8010234:	460c      	mov	r4, r1
 8010236:	880b      	ldrh	r3, [r1, #0]
 8010238:	4605      	mov	r5, r0
 801023a:	4413      	add	r3, r2
 801023c:	800b      	strh	r3, [r1, #0]
 801023e:	884b      	ldrh	r3, [r1, #2]
 8010240:	88c2      	ldrh	r2, [r0, #6]
 8010242:	4413      	add	r3, r2
 8010244:	804b      	strh	r3, [r1, #2]
 8010246:	1d01      	adds	r1, r0, #4
 8010248:	4620      	mov	r0, r4
 801024a:	f7f9 f945 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 801024e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010252:	2b00      	cmp	r3, #0
 8010254:	dd19      	ble.n	801028a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010256:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801025a:	2b00      	cmp	r3, #0
 801025c:	dd15      	ble.n	801028a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801025e:	6968      	ldr	r0, [r5, #20]
 8010260:	b128      	cbz	r0, 801026e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8010262:	6803      	ldr	r3, [r0, #0]
 8010264:	4621      	mov	r1, r4
 8010266:	691b      	ldr	r3, [r3, #16]
 8010268:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801026c:	4718      	bx	r3
 801026e:	4b07      	ldr	r3, [pc, #28]	@ (801028c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8010270:	681b      	ldr	r3, [r3, #0]
 8010272:	3304      	adds	r3, #4
 8010274:	429d      	cmp	r5, r3
 8010276:	d108      	bne.n	801028a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010278:	f7fe ff10 	bl	800f09c <_ZN8touchgfx11Application11getInstanceEv>
 801027c:	6803      	ldr	r3, [r0, #0]
 801027e:	6821      	ldr	r1, [r4, #0]
 8010280:	6862      	ldr	r2, [r4, #4]
 8010282:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010284:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010288:	4718      	bx	r3
 801028a:	bd70      	pop	{r4, r5, r6, pc}
 801028c:	20016a44 	.word	0x20016a44

08010290 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8010290:	b570      	push	{r4, r5, r6, lr}
 8010292:	4604      	mov	r4, r0
 8010294:	4616      	mov	r6, r2
 8010296:	460d      	mov	r5, r1
 8010298:	b901      	cbnz	r1, 801029c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801029a:	b192      	cbz	r2, 80102c2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801029c:	6823      	ldr	r3, [r4, #0]
 801029e:	4620      	mov	r0, r4
 80102a0:	699b      	ldr	r3, [r3, #24]
 80102a2:	4798      	blx	r3
 80102a4:	88e2      	ldrh	r2, [r4, #6]
 80102a6:	88a1      	ldrh	r1, [r4, #4]
 80102a8:	4620      	mov	r0, r4
 80102aa:	4432      	add	r2, r6
 80102ac:	4429      	add	r1, r5
 80102ae:	b212      	sxth	r2, r2
 80102b0:	b209      	sxth	r1, r1
 80102b2:	f7f2 fe13 	bl	8002edc <_ZN8touchgfx8Drawable5setXYEss>
 80102b6:	6823      	ldr	r3, [r4, #0]
 80102b8:	4620      	mov	r0, r4
 80102ba:	699b      	ldr	r3, [r3, #24]
 80102bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80102c0:	4718      	bx	r3
 80102c2:	bd70      	pop	{r4, r5, r6, pc}

080102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80102c4:	b510      	push	{r4, lr}
 80102c6:	2300      	movs	r3, #0
 80102c8:	4604      	mov	r4, r0
 80102ca:	4608      	mov	r0, r1
 80102cc:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80102d0:	8023      	strh	r3, [r4, #0]
 80102d2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80102d6:	8063      	strh	r3, [r4, #2]
 80102d8:	6803      	ldr	r3, [r0, #0]
 80102da:	80a1      	strh	r1, [r4, #4]
 80102dc:	4621      	mov	r1, r4
 80102de:	80e2      	strh	r2, [r4, #6]
 80102e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80102e2:	4798      	blx	r3
 80102e4:	4620      	mov	r0, r4
 80102e6:	bd10      	pop	{r4, pc}

080102e8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80102e8:	b530      	push	{r4, r5, lr}
 80102ea:	8083      	strh	r3, [r0, #4]
 80102ec:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80102f0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80102f4:	80c3      	strh	r3, [r0, #6]
 80102f6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80102fa:	6141      	str	r1, [r0, #20]
 80102fc:	7203      	strb	r3, [r0, #8]
 80102fe:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8010302:	8302      	strh	r2, [r0, #24]
 8010304:	7243      	strb	r3, [r0, #9]
 8010306:	7a83      	ldrb	r3, [r0, #10]
 8010308:	f365 0306 	bfi	r3, r5, #0, #7
 801030c:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8010310:	f365 13c7 	bfi	r3, r5, #7, #1
 8010314:	7283      	strb	r3, [r0, #10]
 8010316:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801031a:	72c3      	strb	r3, [r0, #11]
 801031c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8010320:	7303      	strb	r3, [r0, #12]
 8010322:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8010326:	81c3      	strh	r3, [r0, #14]
 8010328:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801032c:	8203      	strh	r3, [r0, #16]
 801032e:	4b01      	ldr	r3, [pc, #4]	@ (8010334 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8010330:	6003      	str	r3, [r0, #0]
 8010332:	bd30      	pop	{r4, r5, pc}
 8010334:	08023918 	.word	0x08023918

08010338 <_ZNK8touchgfx9ConstFont4findEt>:
 8010338:	b5f0      	push	{r4, r5, r6, r7, lr}
 801033a:	6944      	ldr	r4, [r0, #20]
 801033c:	b3bc      	cbz	r4, 80103ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801033e:	88a3      	ldrh	r3, [r4, #4]
 8010340:	8b02      	ldrh	r2, [r0, #24]
 8010342:	1acb      	subs	r3, r1, r3
 8010344:	f102 32ff 	add.w	r2, r2, #4294967295
 8010348:	d431      	bmi.n	80103ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801034a:	4293      	cmp	r3, r2
 801034c:	dd0c      	ble.n	8010368 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801034e:	230e      	movs	r3, #14
 8010350:	fb03 4302 	mla	r3, r3, r2, r4
 8010354:	889b      	ldrh	r3, [r3, #4]
 8010356:	1a5b      	subs	r3, r3, r1
 8010358:	1ad3      	subs	r3, r2, r3
 801035a:	429a      	cmp	r2, r3
 801035c:	db27      	blt.n	80103ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801035e:	2b00      	cmp	r3, #0
 8010360:	bfbc      	itt	lt
 8010362:	2302      	movlt	r3, #2
 8010364:	fb92 f3f3 	sdivlt	r3, r2, r3
 8010368:	2500      	movs	r5, #0
 801036a:	260e      	movs	r6, #14
 801036c:	4295      	cmp	r5, r2
 801036e:	dc1e      	bgt.n	80103ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010370:	fb06 4003 	mla	r0, r6, r3, r4
 8010374:	8887      	ldrh	r7, [r0, #4]
 8010376:	42b9      	cmp	r1, r7
 8010378:	d01a      	beq.n	80103b0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801037a:	d20d      	bcs.n	8010398 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801037c:	1e5a      	subs	r2, r3, #1
 801037e:	4295      	cmp	r5, r2
 8010380:	dc15      	bgt.n	80103ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010382:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8010386:	1a5b      	subs	r3, r3, r1
 8010388:	1ad3      	subs	r3, r2, r3
 801038a:	429a      	cmp	r2, r3
 801038c:	db0f      	blt.n	80103ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801038e:	429d      	cmp	r5, r3
 8010390:	ddec      	ble.n	801036c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010392:	1953      	adds	r3, r2, r5
 8010394:	105b      	asrs	r3, r3, #1
 8010396:	e7e9      	b.n	801036c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010398:	1c5d      	adds	r5, r3, #1
 801039a:	42aa      	cmp	r2, r5
 801039c:	db07      	blt.n	80103ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801039e:	8a43      	ldrh	r3, [r0, #18]
 80103a0:	1acb      	subs	r3, r1, r3
 80103a2:	442b      	add	r3, r5
 80103a4:	429d      	cmp	r5, r3
 80103a6:	dc02      	bgt.n	80103ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80103a8:	429a      	cmp	r2, r3
 80103aa:	dadf      	bge.n	801036c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80103ac:	e7f1      	b.n	8010392 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80103ae:	2000      	movs	r0, #0
 80103b0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080103b2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80103b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80103b4:	4604      	mov	r4, r0
 80103b6:	4617      	mov	r7, r2
 80103b8:	461e      	mov	r6, r3
 80103ba:	b911      	cbnz	r1, 80103c2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80103bc:	2500      	movs	r5, #0
 80103be:	4628      	mov	r0, r5
 80103c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80103c2:	290a      	cmp	r1, #10
 80103c4:	d0fa      	beq.n	80103bc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80103c6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 80103ca:	4291      	cmp	r1, r2
 80103cc:	d0f6      	beq.n	80103bc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80103ce:	f242 020b 	movw	r2, #8203	@ 0x200b
 80103d2:	4291      	cmp	r1, r2
 80103d4:	d0f2      	beq.n	80103bc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80103d6:	f7ff ffaf 	bl	8010338 <_ZNK8touchgfx9ConstFont4findEt>
 80103da:	4605      	mov	r5, r0
 80103dc:	b950      	cbnz	r0, 80103f4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80103de:	6823      	ldr	r3, [r4, #0]
 80103e0:	4620      	mov	r0, r4
 80103e2:	691b      	ldr	r3, [r3, #16]
 80103e4:	4798      	blx	r3
 80103e6:	4601      	mov	r1, r0
 80103e8:	4620      	mov	r0, r4
 80103ea:	f7ff ffa5 	bl	8010338 <_ZNK8touchgfx9ConstFont4findEt>
 80103ee:	4605      	mov	r5, r0
 80103f0:	2800      	cmp	r0, #0
 80103f2:	d0e3      	beq.n	80103bc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80103f4:	6823      	ldr	r3, [r4, #0]
 80103f6:	4629      	mov	r1, r5
 80103f8:	4620      	mov	r0, r4
 80103fa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80103fc:	4798      	blx	r3
 80103fe:	6038      	str	r0, [r7, #0]
 8010400:	6823      	ldr	r3, [r4, #0]
 8010402:	4620      	mov	r0, r4
 8010404:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8010406:	4798      	blx	r3
 8010408:	7030      	strb	r0, [r6, #0]
 801040a:	e7d8      	b.n	80103be <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801040c <_ZN8touchgfx4clzuEm>:
 801040c:	4603      	mov	r3, r0
 801040e:	b1c8      	cbz	r0, 8010444 <_ZN8touchgfx4clzuEm+0x38>
 8010410:	0c02      	lsrs	r2, r0, #16
 8010412:	0412      	lsls	r2, r2, #16
 8010414:	b9a2      	cbnz	r2, 8010440 <_ZN8touchgfx4clzuEm+0x34>
 8010416:	0403      	lsls	r3, r0, #16
 8010418:	2010      	movs	r0, #16
 801041a:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 801041e:	bf04      	itt	eq
 8010420:	021b      	lsleq	r3, r3, #8
 8010422:	3008      	addeq	r0, #8
 8010424:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8010428:	bf04      	itt	eq
 801042a:	011b      	lsleq	r3, r3, #4
 801042c:	3004      	addeq	r0, #4
 801042e:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8010432:	bf04      	itt	eq
 8010434:	009b      	lsleq	r3, r3, #2
 8010436:	3002      	addeq	r0, #2
 8010438:	2b00      	cmp	r3, #0
 801043a:	db04      	blt.n	8010446 <_ZN8touchgfx4clzuEm+0x3a>
 801043c:	3001      	adds	r0, #1
 801043e:	4770      	bx	lr
 8010440:	2000      	movs	r0, #0
 8010442:	e7ea      	b.n	801041a <_ZN8touchgfx4clzuEm+0xe>
 8010444:	2020      	movs	r0, #32
 8010446:	4770      	bx	lr

08010448 <_ZN8touchgfx7muldivuEmmmRm>:
 8010448:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801044c:	460f      	mov	r7, r1
 801044e:	4615      	mov	r5, r2
 8010450:	461e      	mov	r6, r3
 8010452:	4601      	mov	r1, r0
 8010454:	b100      	cbz	r0, 8010458 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8010456:	b927      	cbnz	r7, 8010462 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8010458:	2000      	movs	r0, #0
 801045a:	6030      	str	r0, [r6, #0]
 801045c:	b002      	add	sp, #8
 801045e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010462:	f7ff ffd3 	bl	801040c <_ZN8touchgfx4clzuEm>
 8010466:	b980      	cbnz	r0, 801048a <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8010468:	4638      	mov	r0, r7
 801046a:	f7ff ffcf 	bl	801040c <_ZN8touchgfx4clzuEm>
 801046e:	2800      	cmp	r0, #0
 8010470:	dd05      	ble.n	801047e <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8010472:	4633      	mov	r3, r6
 8010474:	462a      	mov	r2, r5
 8010476:	4638      	mov	r0, r7
 8010478:	f7ff ffe6 	bl	8010448 <_ZN8touchgfx7muldivuEmmmRm>
 801047c:	e7ee      	b.n	801045c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801047e:	f04f 33ff 	mov.w	r3, #4294967295
 8010482:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8010486:	6033      	str	r3, [r6, #0]
 8010488:	e7e8      	b.n	801045c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801048a:	fa37 f800 	lsrs.w	r8, r7, r0
 801048e:	fb07 f301 	mul.w	r3, r7, r1
 8010492:	d105      	bne.n	80104a0 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8010494:	fbb3 f0f5 	udiv	r0, r3, r5
 8010498:	fb05 3510 	mls	r5, r5, r0, r3
 801049c:	6035      	str	r5, [r6, #0]
 801049e:	e7dd      	b.n	801045c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80104a0:	2301      	movs	r3, #1
 80104a2:	fa01 fa00 	lsl.w	sl, r1, r0
 80104a6:	462a      	mov	r2, r5
 80104a8:	fa03 f000 	lsl.w	r0, r3, r0
 80104ac:	4633      	mov	r3, r6
 80104ae:	fbba f9f5 	udiv	r9, sl, r5
 80104b2:	3801      	subs	r0, #1
 80104b4:	fb08 f409 	mul.w	r4, r8, r9
 80104b8:	4038      	ands	r0, r7
 80104ba:	f7ff ffc5 	bl	8010448 <_ZN8touchgfx7muldivuEmmmRm>
 80104be:	462a      	mov	r2, r5
 80104c0:	4607      	mov	r7, r0
 80104c2:	ab01      	add	r3, sp, #4
 80104c4:	fb05 a119 	mls	r1, r5, r9, sl
 80104c8:	4640      	mov	r0, r8
 80104ca:	f7ff ffbd 	bl	8010448 <_ZN8touchgfx7muldivuEmmmRm>
 80104ce:	9b01      	ldr	r3, [sp, #4]
 80104d0:	6832      	ldr	r2, [r6, #0]
 80104d2:	441a      	add	r2, r3
 80104d4:	fbb2 f3f5 	udiv	r3, r2, r5
 80104d8:	441c      	add	r4, r3
 80104da:	fb05 2513 	mls	r5, r5, r3, r2
 80104de:	443c      	add	r4, r7
 80104e0:	4420      	add	r0, r4
 80104e2:	e7db      	b.n	801049c <_ZN8touchgfx7muldivuEmmmRm+0x54>

080104e4 <_ZN8touchgfx6muldivElllRl>:
 80104e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80104e6:	2800      	cmp	r0, #0
 80104e8:	461e      	mov	r6, r3
 80104ea:	bfba      	itte	lt
 80104ec:	4240      	neglt	r0, r0
 80104ee:	f04f 34ff 	movlt.w	r4, #4294967295
 80104f2:	2401      	movge	r4, #1
 80104f4:	2900      	cmp	r1, #0
 80104f6:	bfbc      	itt	lt
 80104f8:	4249      	neglt	r1, r1
 80104fa:	4264      	neglt	r4, r4
 80104fc:	2a00      	cmp	r2, #0
 80104fe:	bfb6      	itet	lt
 8010500:	4265      	neglt	r5, r4
 8010502:	4625      	movge	r5, r4
 8010504:	4252      	neglt	r2, r2
 8010506:	4288      	cmp	r0, r1
 8010508:	bfc2      	ittt	gt
 801050a:	4603      	movgt	r3, r0
 801050c:	4608      	movgt	r0, r1
 801050e:	4619      	movgt	r1, r3
 8010510:	ab01      	add	r3, sp, #4
 8010512:	f7ff ff99 	bl	8010448 <_ZN8touchgfx7muldivuEmmmRm>
 8010516:	9b01      	ldr	r3, [sp, #4]
 8010518:	4368      	muls	r0, r5
 801051a:	435c      	muls	r4, r3
 801051c:	6034      	str	r4, [r6, #0]
 801051e:	b002      	add	sp, #8
 8010520:	bd70      	pop	{r4, r5, r6, pc}

08010522 <_ZN8touchgfx6muldivElll>:
 8010522:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010524:	4606      	mov	r6, r0
 8010526:	ab01      	add	r3, sp, #4
 8010528:	460d      	mov	r5, r1
 801052a:	4614      	mov	r4, r2
 801052c:	f7ff ffda 	bl	80104e4 <_ZN8touchgfx6muldivElllRl>
 8010530:	2e00      	cmp	r6, #0
 8010532:	db20      	blt.n	8010576 <_ZN8touchgfx6muldivElll+0x54>
 8010534:	bf14      	ite	ne
 8010536:	2301      	movne	r3, #1
 8010538:	2300      	moveq	r3, #0
 801053a:	2d00      	cmp	r5, #0
 801053c:	db1e      	blt.n	801057c <_ZN8touchgfx6muldivElll+0x5a>
 801053e:	bf14      	ite	ne
 8010540:	2201      	movne	r2, #1
 8010542:	2200      	moveq	r2, #0
 8010544:	2c00      	cmp	r4, #0
 8010546:	fb03 f202 	mul.w	r2, r3, r2
 801054a:	db1a      	blt.n	8010582 <_ZN8touchgfx6muldivElll+0x60>
 801054c:	bf14      	ite	ne
 801054e:	2301      	movne	r3, #1
 8010550:	2300      	moveq	r3, #0
 8010552:	4353      	muls	r3, r2
 8010554:	2b01      	cmp	r3, #1
 8010556:	d117      	bne.n	8010588 <_ZN8touchgfx6muldivElll+0x66>
 8010558:	2c00      	cmp	r4, #0
 801055a:	9b01      	ldr	r3, [sp, #4]
 801055c:	bfb8      	it	lt
 801055e:	4264      	neglt	r4, r4
 8010560:	2b00      	cmp	r3, #0
 8010562:	f104 0401 	add.w	r4, r4, #1
 8010566:	bfb8      	it	lt
 8010568:	425b      	neglt	r3, r3
 801056a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801056e:	db00      	blt.n	8010572 <_ZN8touchgfx6muldivElll+0x50>
 8010570:	3001      	adds	r0, #1
 8010572:	b002      	add	sp, #8
 8010574:	bd70      	pop	{r4, r5, r6, pc}
 8010576:	f04f 33ff 	mov.w	r3, #4294967295
 801057a:	e7de      	b.n	801053a <_ZN8touchgfx6muldivElll+0x18>
 801057c:	f04f 32ff 	mov.w	r2, #4294967295
 8010580:	e7e0      	b.n	8010544 <_ZN8touchgfx6muldivElll+0x22>
 8010582:	f04f 33ff 	mov.w	r3, #4294967295
 8010586:	e7e4      	b.n	8010552 <_ZN8touchgfx6muldivElll+0x30>
 8010588:	3301      	adds	r3, #1
 801058a:	d1f2      	bne.n	8010572 <_ZN8touchgfx6muldivElll+0x50>
 801058c:	9b01      	ldr	r3, [sp, #4]
 801058e:	2c00      	cmp	r4, #0
 8010590:	bfb8      	it	lt
 8010592:	4264      	neglt	r4, r4
 8010594:	2b00      	cmp	r3, #0
 8010596:	bfb8      	it	lt
 8010598:	425b      	neglt	r3, r3
 801059a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801059e:	bfc8      	it	gt
 80105a0:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80105a4:	e7e5      	b.n	8010572 <_ZN8touchgfx6muldivElll+0x50>

080105a6 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80105a6:	2000      	movs	r0, #0
 80105a8:	4770      	bx	lr

080105aa <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80105aa:	2001      	movs	r0, #1
 80105ac:	4770      	bx	lr

080105ae <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80105ae:	2002      	movs	r0, #2
 80105b0:	4770      	bx	lr

080105b2 <_ZN8touchgfx6ScreenD1Ev>:
 80105b2:	4770      	bx	lr

080105b4 <_ZN8touchgfx12GestureEventD1Ev>:
 80105b4:	4770      	bx	lr

080105b6 <_ZN8touchgfx9DragEventD1Ev>:
 80105b6:	4770      	bx	lr

080105b8 <_ZN8touchgfx10ClickEventD1Ev>:
 80105b8:	4770      	bx	lr

080105ba <_ZN8touchgfx10ClickEventD0Ev>:
 80105ba:	b510      	push	{r4, lr}
 80105bc:	4604      	mov	r4, r0
 80105be:	210c      	movs	r1, #12
 80105c0:	f00f fdc5 	bl	802014e <_ZdlPvj>
 80105c4:	4620      	mov	r0, r4
 80105c6:	bd10      	pop	{r4, pc}

080105c8 <_ZN8touchgfx9DragEventD0Ev>:
 80105c8:	b510      	push	{r4, lr}
 80105ca:	4604      	mov	r4, r0
 80105cc:	2110      	movs	r1, #16
 80105ce:	f00f fdbe 	bl	802014e <_ZdlPvj>
 80105d2:	4620      	mov	r0, r4
 80105d4:	bd10      	pop	{r4, pc}

080105d6 <_ZN8touchgfx12GestureEventD0Ev>:
 80105d6:	b510      	push	{r4, lr}
 80105d8:	4604      	mov	r4, r0
 80105da:	210c      	movs	r1, #12
 80105dc:	f00f fdb7 	bl	802014e <_ZdlPvj>
 80105e0:	4620      	mov	r0, r4
 80105e2:	bd10      	pop	{r4, pc}

080105e4 <_ZN8touchgfx6ScreenD0Ev>:
 80105e4:	b510      	push	{r4, lr}
 80105e6:	4604      	mov	r4, r0
 80105e8:	213c      	movs	r1, #60	@ 0x3c
 80105ea:	f00f fdb0 	bl	802014e <_ZdlPvj>
 80105ee:	4620      	mov	r0, r4
 80105f0:	bd10      	pop	{r4, pc}
	...

080105f4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80105f4:	b530      	push	{r4, r5, lr}
 80105f6:	460d      	mov	r5, r1
 80105f8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80105fa:	b087      	sub	sp, #28
 80105fc:	4604      	mov	r4, r0
 80105fe:	b301      	cbz	r1, 8010642 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8010600:	a801      	add	r0, sp, #4
 8010602:	f7ff fe5f 	bl	80102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010606:	892a      	ldrh	r2, [r5, #8]
 8010608:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801060c:	7928      	ldrb	r0, [r5, #4]
 801060e:	1ad2      	subs	r2, r2, r3
 8010610:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8010612:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8010616:	441a      	add	r2, r3
 8010618:	896b      	ldrh	r3, [r5, #10]
 801061a:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801061e:	f88d 0010 	strb.w	r0, [sp, #16]
 8010622:	1b5b      	subs	r3, r3, r5
 8010624:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8010626:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8010628:	442b      	add	r3, r5
 801062a:	4d07      	ldr	r5, [pc, #28]	@ (8010648 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801062c:	f8ad 1012 	strh.w	r1, [sp, #18]
 8010630:	a903      	add	r1, sp, #12
 8010632:	9503      	str	r5, [sp, #12]
 8010634:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010638:	f8ad 3016 	strh.w	r3, [sp, #22]
 801063c:	6803      	ldr	r3, [r0, #0]
 801063e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010640:	4798      	blx	r3
 8010642:	b007      	add	sp, #28
 8010644:	bd30      	pop	{r4, r5, pc}
 8010646:	bf00      	nop
 8010648:	080239a8 	.word	0x080239a8

0801064c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801064c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010650:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8010652:	b08a      	sub	sp, #40	@ 0x28
 8010654:	4604      	mov	r4, r0
 8010656:	460d      	mov	r5, r1
 8010658:	b113      	cbz	r3, 8010660 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801065a:	790b      	ldrb	r3, [r1, #4]
 801065c:	2b00      	cmp	r3, #0
 801065e:	d044      	beq.n	80106ea <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010660:	f104 0804 	add.w	r8, r4, #4
 8010664:	a803      	add	r0, sp, #12
 8010666:	4641      	mov	r1, r8
 8010668:	f7ff fe2c 	bl	80102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801066c:	792b      	ldrb	r3, [r5, #4]
 801066e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8010672:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8010676:	b983      	cbnz	r3, 801069a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8010678:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 801067c:	892a      	ldrh	r2, [r5, #8]
 801067e:	88e9      	ldrh	r1, [r5, #6]
 8010680:	4640      	mov	r0, r8
 8010682:	1b92      	subs	r2, r2, r6
 8010684:	9301      	str	r3, [sp, #4]
 8010686:	1bc9      	subs	r1, r1, r7
 8010688:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801068c:	b212      	sxth	r2, r2
 801068e:	9300      	str	r3, [sp, #0]
 8010690:	b209      	sxth	r1, r1
 8010692:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8010696:	f7f8 fe3d 	bl	8009314 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801069a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801069c:	b329      	cbz	r1, 80106ea <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801069e:	a805      	add	r0, sp, #20
 80106a0:	f7ff fe10 	bl	80102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80106a4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80106a8:	792b      	ldrb	r3, [r5, #4]
 80106aa:	a907      	add	r1, sp, #28
 80106ac:	1abf      	subs	r7, r7, r2
 80106ae:	88ea      	ldrh	r2, [r5, #6]
 80106b0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80106b2:	4417      	add	r7, r2
 80106b4:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 80106b6:	f88d 3020 	strb.w	r3, [sp, #32]
 80106ba:	4417      	add	r7, r2
 80106bc:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80106c0:	1ab6      	subs	r6, r6, r2
 80106c2:	892a      	ldrh	r2, [r5, #8]
 80106c4:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 80106c8:	4416      	add	r6, r2
 80106ca:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80106cc:	4416      	add	r6, r2
 80106ce:	4a08      	ldr	r2, [pc, #32]	@ (80106f0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80106d0:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80106d4:	2600      	movs	r6, #0
 80106d6:	9207      	str	r2, [sp, #28]
 80106d8:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 80106dc:	6803      	ldr	r3, [r0, #0]
 80106de:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80106e0:	4798      	blx	r3
 80106e2:	792b      	ldrb	r3, [r5, #4]
 80106e4:	b10b      	cbz	r3, 80106ea <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80106e6:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 80106ea:	b00a      	add	sp, #40	@ 0x28
 80106ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80106f0:	08023980 	.word	0x08023980

080106f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80106f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106f8:	460c      	mov	r4, r1
 80106fa:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80106fc:	b088      	sub	sp, #32
 80106fe:	4605      	mov	r5, r0
 8010700:	2900      	cmp	r1, #0
 8010702:	d06d      	beq.n	80107e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8010704:	4668      	mov	r0, sp
 8010706:	f7ff fddd 	bl	80102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801070a:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 801070c:	88e3      	ldrh	r3, [r4, #6]
 801070e:	f9bd 8000 	ldrsh.w	r8, [sp]
 8010712:	440b      	add	r3, r1
 8010714:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8010718:	b21b      	sxth	r3, r3
 801071a:	4543      	cmp	r3, r8
 801071c:	db31      	blt.n	8010782 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801071e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8010722:	44c4      	add	ip, r8
 8010724:	fa0f fc8c 	sxth.w	ip, ip
 8010728:	4563      	cmp	r3, ip
 801072a:	da2a      	bge.n	8010782 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801072c:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 801072e:	8926      	ldrh	r6, [r4, #8]
 8010730:	4416      	add	r6, r2
 8010732:	b236      	sxth	r6, r6
 8010734:	42be      	cmp	r6, r7
 8010736:	db24      	blt.n	8010782 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010738:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801073c:	4438      	add	r0, r7
 801073e:	b200      	sxth	r0, r0
 8010740:	4286      	cmp	r6, r0
 8010742:	da1e      	bge.n	8010782 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010744:	8963      	ldrh	r3, [r4, #10]
 8010746:	4419      	add	r1, r3
 8010748:	b209      	sxth	r1, r1
 801074a:	4541      	cmp	r1, r8
 801074c:	db08      	blt.n	8010760 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801074e:	4561      	cmp	r1, ip
 8010750:	da06      	bge.n	8010760 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010752:	89a3      	ldrh	r3, [r4, #12]
 8010754:	441a      	add	r2, r3
 8010756:	b212      	sxth	r2, r2
 8010758:	42ba      	cmp	r2, r7
 801075a:	db01      	blt.n	8010760 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801075c:	4282      	cmp	r2, r0
 801075e:	db10      	blt.n	8010782 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010760:	4b21      	ldr	r3, [pc, #132]	@ (80107e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8010762:	a904      	add	r1, sp, #16
 8010764:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8010766:	9304      	str	r3, [sp, #16]
 8010768:	2302      	movs	r3, #2
 801076a:	f88d 3014 	strb.w	r3, [sp, #20]
 801076e:	2300      	movs	r3, #0
 8010770:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010774:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010778:	f8ad 301a 	strh.w	r3, [sp, #26]
 801077c:	6803      	ldr	r3, [r0, #0]
 801077e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010780:	4798      	blx	r3
 8010782:	1d29      	adds	r1, r5, #4
 8010784:	a802      	add	r0, sp, #8
 8010786:	f7ff fd9d 	bl	80102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801078a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801078e:	88e0      	ldrh	r0, [r4, #6]
 8010790:	eba3 0808 	sub.w	r8, r3, r8
 8010794:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8010798:	7921      	ldrb	r1, [r4, #4]
 801079a:	fa1f f888 	uxth.w	r8, r8
 801079e:	1bdf      	subs	r7, r3, r7
 80107a0:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 80107a4:	b2bb      	uxth	r3, r7
 80107a6:	4440      	add	r0, r8
 80107a8:	8922      	ldrh	r2, [r4, #8]
 80107aa:	8967      	ldrh	r7, [r4, #10]
 80107ac:	4460      	add	r0, ip
 80107ae:	89a4      	ldrh	r4, [r4, #12]
 80107b0:	441a      	add	r2, r3
 80107b2:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 80107b4:	44b8      	add	r8, r7
 80107b6:	4423      	add	r3, r4
 80107b8:	f8ad 0016 	strh.w	r0, [sp, #22]
 80107bc:	4432      	add	r2, r6
 80107be:	44e0      	add	r8, ip
 80107c0:	4433      	add	r3, r6
 80107c2:	4c0a      	ldr	r4, [pc, #40]	@ (80107ec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80107c4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80107c6:	f88d 1014 	strb.w	r1, [sp, #20]
 80107ca:	a904      	add	r1, sp, #16
 80107cc:	9404      	str	r4, [sp, #16]
 80107ce:	f8ad 2018 	strh.w	r2, [sp, #24]
 80107d2:	f8ad 801a 	strh.w	r8, [sp, #26]
 80107d6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80107da:	6803      	ldr	r3, [r0, #0]
 80107dc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80107de:	4798      	blx	r3
 80107e0:	b008      	add	sp, #32
 80107e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80107e6:	bf00      	nop
 80107e8:	08023980 	.word	0x08023980
 80107ec:	08023994 	.word	0x08023994

080107f0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80107f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80107f2:	4604      	mov	r4, r0
 80107f4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80107f8:	3201      	adds	r2, #1
 80107fa:	d112      	bne.n	8010822 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80107fc:	2500      	movs	r5, #0
 80107fe:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010802:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010806:	6803      	ldr	r3, [r0, #0]
 8010808:	9500      	str	r5, [sp, #0]
 801080a:	466d      	mov	r5, sp
 801080c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010810:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010814:	4629      	mov	r1, r5
 8010816:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010818:	4798      	blx	r3
 801081a:	e895 0003 	ldmia.w	r5, {r0, r1}
 801081e:	e884 0003 	stmia.w	r4, {r0, r1}
 8010822:	4620      	mov	r0, r4
 8010824:	b003      	add	sp, #12
 8010826:	bd30      	pop	{r4, r5, pc}

08010828 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8010828:	b513      	push	{r0, r1, r4, lr}
 801082a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801082e:	4604      	mov	r4, r0
 8010830:	3301      	adds	r3, #1
 8010832:	d109      	bne.n	8010848 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8010834:	4601      	mov	r1, r0
 8010836:	4668      	mov	r0, sp
 8010838:	f7ff fd44 	bl	80102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801083c:	f8bd 3000 	ldrh.w	r3, [sp]
 8010840:	8423      	strh	r3, [r4, #32]
 8010842:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010846:	8463      	strh	r3, [r4, #34]	@ 0x22
 8010848:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801084c:	b002      	add	sp, #8
 801084e:	bd10      	pop	{r4, pc}

08010850 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8010850:	b513      	push	{r0, r1, r4, lr}
 8010852:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8010856:	4604      	mov	r4, r0
 8010858:	3301      	adds	r3, #1
 801085a:	d109      	bne.n	8010870 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801085c:	4601      	mov	r1, r0
 801085e:	4668      	mov	r0, sp
 8010860:	f7ff fd30 	bl	80102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010864:	f8bd 3000 	ldrh.w	r3, [sp]
 8010868:	8423      	strh	r3, [r4, #32]
 801086a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801086e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8010870:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8010874:	b002      	add	sp, #8
 8010876:	bd10      	pop	{r4, pc}

08010878 <_ZN8touchgfx6ScreenC1Ev>:
 8010878:	b570      	push	{r4, r5, r6, lr}
 801087a:	4b17      	ldr	r3, [pc, #92]	@ (80108d8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801087c:	4605      	mov	r5, r0
 801087e:	4a17      	ldr	r2, [pc, #92]	@ (80108dc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8010880:	2101      	movs	r1, #1
 8010882:	f845 3b04 	str.w	r3, [r5], #4
 8010886:	2300      	movs	r3, #0
 8010888:	6042      	str	r2, [r0, #4]
 801088a:	4604      	mov	r4, r0
 801088c:	8103      	strh	r3, [r0, #8]
 801088e:	8143      	strh	r3, [r0, #10]
 8010890:	8183      	strh	r3, [r0, #12]
 8010892:	81c3      	strh	r3, [r0, #14]
 8010894:	8203      	strh	r3, [r0, #16]
 8010896:	8243      	strh	r3, [r0, #18]
 8010898:	8283      	strh	r3, [r0, #20]
 801089a:	82c3      	strh	r3, [r0, #22]
 801089c:	6203      	str	r3, [r0, #32]
 801089e:	8483      	strh	r3, [r0, #36]	@ 0x24
 80108a0:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80108a2:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 80108a6:	6343      	str	r3, [r0, #52]	@ 0x34
 80108a8:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 80108ac:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 80108b0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80108b4:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 80108b8:	4b09      	ldr	r3, [pc, #36]	@ (80108e0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80108ba:	4628      	mov	r0, r5
 80108bc:	f9b3 6000 	ldrsh.w	r6, [r3]
 80108c0:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80108c2:	4a08      	ldr	r2, [pc, #32]	@ (80108e4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80108c4:	f9b2 1000 	ldrsh.w	r1, [r2]
 80108c8:	4798      	blx	r3
 80108ca:	6863      	ldr	r3, [r4, #4]
 80108cc:	4628      	mov	r0, r5
 80108ce:	4631      	mov	r1, r6
 80108d0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80108d2:	4798      	blx	r3
 80108d4:	4620      	mov	r0, r4
 80108d6:	bd70      	pop	{r4, r5, r6, pc}
 80108d8:	080239bc 	.word	0x080239bc
 80108dc:	08022fac 	.word	0x08022fac
 80108e0:	200169f6 	.word	0x200169f6
 80108e4:	200169f4 	.word	0x200169f4

080108e8 <_ZN8touchgfx6Screen4drawEv>:
 80108e8:	4b09      	ldr	r3, [pc, #36]	@ (8010910 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80108ea:	b507      	push	{r0, r1, r2, lr}
 80108ec:	f9b3 2000 	ldrsh.w	r2, [r3]
 80108f0:	2100      	movs	r1, #0
 80108f2:	4b08      	ldr	r3, [pc, #32]	@ (8010914 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80108f4:	9100      	str	r1, [sp, #0]
 80108f6:	4669      	mov	r1, sp
 80108f8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80108fc:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010900:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010904:	6803      	ldr	r3, [r0, #0]
 8010906:	689b      	ldr	r3, [r3, #8]
 8010908:	4798      	blx	r3
 801090a:	b003      	add	sp, #12
 801090c:	f85d fb04 	ldr.w	pc, [sp], #4
 8010910:	200169f4 	.word	0x200169f4
 8010914:	200169f6 	.word	0x200169f6

08010918 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8010918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801091c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8010920:	b089      	sub	sp, #36	@ 0x24
 8010922:	4680      	mov	r8, r0
 8010924:	460c      	mov	r4, r1
 8010926:	2b00      	cmp	r3, #0
 8010928:	4615      	mov	r5, r2
 801092a:	dd0e      	ble.n	801094a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801092c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8010930:	2b00      	cmp	r3, #0
 8010932:	dd0a      	ble.n	801094a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010934:	4628      	mov	r0, r5
 8010936:	f7ff ff5b 	bl	80107f0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801093a:	4621      	mov	r1, r4
 801093c:	f7fe fb15 	bl	800ef6a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010940:	69eb      	ldr	r3, [r5, #28]
 8010942:	b928      	cbnz	r0, 8010950 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8010944:	461d      	mov	r5, r3
 8010946:	2b00      	cmp	r3, #0
 8010948:	d1f4      	bne.n	8010934 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801094a:	b009      	add	sp, #36	@ 0x24
 801094c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010950:	ae04      	add	r6, sp, #16
 8010952:	2b00      	cmp	r3, #0
 8010954:	f000 80b5 	beq.w	8010ac2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8010958:	682b      	ldr	r3, [r5, #0]
 801095a:	4629      	mov	r1, r5
 801095c:	a802      	add	r0, sp, #8
 801095e:	68db      	ldr	r3, [r3, #12]
 8010960:	4798      	blx	r3
 8010962:	4628      	mov	r0, r5
 8010964:	f7ff ff60 	bl	8010828 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8010968:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801096c:	4407      	add	r7, r0
 801096e:	4628      	mov	r0, r5
 8010970:	f7ff ff6e 	bl	8010850 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8010974:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8010978:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801097c:	b23f      	sxth	r7, r7
 801097e:	4418      	add	r0, r3
 8010980:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010984:	4621      	mov	r1, r4
 8010986:	f8ad 2014 	strh.w	r2, [sp, #20]
 801098a:	f8ad 0012 	strh.w	r0, [sp, #18]
 801098e:	4630      	mov	r0, r6
 8010990:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010994:	f8ad 7010 	strh.w	r7, [sp, #16]
 8010998:	f7f8 fd9e 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 801099c:	4628      	mov	r0, r5
 801099e:	f7ff ff27 	bl	80107f0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80109a2:	ab06      	add	r3, sp, #24
 80109a4:	4602      	mov	r2, r0
 80109a6:	e896 0003 	ldmia.w	r6, {r0, r1}
 80109aa:	e883 0003 	stmia.w	r3, {r0, r1}
 80109ae:	4611      	mov	r1, r2
 80109b0:	4618      	mov	r0, r3
 80109b2:	f7f8 fd91 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 80109b6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80109ba:	f9b4 1000 	ldrsh.w	r1, [r4]
 80109be:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80109c2:	4299      	cmp	r1, r3
 80109c4:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80109c8:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80109cc:	d10b      	bne.n	80109e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80109ce:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80109d2:	4552      	cmp	r2, sl
 80109d4:	d107      	bne.n	80109e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80109d6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80109da:	455a      	cmp	r2, fp
 80109dc:	d103      	bne.n	80109e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80109de:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80109e2:	454a      	cmp	r2, r9
 80109e4:	d06d      	beq.n	8010ac2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80109e6:	f1bb 0f00 	cmp.w	fp, #0
 80109ea:	dd65      	ble.n	8010ab8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80109ec:	f1b9 0f00 	cmp.w	r9, #0
 80109f0:	dd62      	ble.n	8010ab8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80109f2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80109f6:	fa1f f08a 	uxth.w	r0, sl
 80109fa:	4552      	cmp	r2, sl
 80109fc:	9000      	str	r0, [sp, #0]
 80109fe:	da12      	bge.n	8010a26 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8010a00:	9301      	str	r3, [sp, #4]
 8010a02:	9b00      	ldr	r3, [sp, #0]
 8010a04:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010a08:	f8ad 2012 	strh.w	r2, [sp, #18]
 8010a0c:	1a9a      	subs	r2, r3, r2
 8010a0e:	f8ad 1010 	strh.w	r1, [sp, #16]
 8010a12:	4631      	mov	r1, r6
 8010a14:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010a18:	4640      	mov	r0, r8
 8010a1a:	f8ad 2016 	strh.w	r2, [sp, #22]
 8010a1e:	69ea      	ldr	r2, [r5, #28]
 8010a20:	f7ff ff7a 	bl	8010918 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010a24:	9b01      	ldr	r3, [sp, #4]
 8010a26:	f9b4 2000 	ldrsh.w	r2, [r4]
 8010a2a:	b29f      	uxth	r7, r3
 8010a2c:	429a      	cmp	r2, r3
 8010a2e:	da0d      	bge.n	8010a4c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8010a30:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010a34:	1aba      	subs	r2, r7, r2
 8010a36:	f8ad a012 	strh.w	sl, [sp, #18]
 8010a3a:	4631      	mov	r1, r6
 8010a3c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010a40:	4640      	mov	r0, r8
 8010a42:	f8ad 9016 	strh.w	r9, [sp, #22]
 8010a46:	69ea      	ldr	r2, [r5, #28]
 8010a48:	f7ff ff66 	bl	8010918 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010a4c:	8822      	ldrh	r2, [r4, #0]
 8010a4e:	445f      	add	r7, fp
 8010a50:	88a3      	ldrh	r3, [r4, #4]
 8010a52:	b2bf      	uxth	r7, r7
 8010a54:	4413      	add	r3, r2
 8010a56:	b23a      	sxth	r2, r7
 8010a58:	b29b      	uxth	r3, r3
 8010a5a:	b219      	sxth	r1, r3
 8010a5c:	4291      	cmp	r1, r2
 8010a5e:	dd0d      	ble.n	8010a7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8010a60:	1bdb      	subs	r3, r3, r7
 8010a62:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010a66:	f8ad a012 	strh.w	sl, [sp, #18]
 8010a6a:	4631      	mov	r1, r6
 8010a6c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010a70:	4640      	mov	r0, r8
 8010a72:	f8ad 9016 	strh.w	r9, [sp, #22]
 8010a76:	69ea      	ldr	r2, [r5, #28]
 8010a78:	f7ff ff4e 	bl	8010918 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010a7c:	88e2      	ldrh	r2, [r4, #6]
 8010a7e:	8863      	ldrh	r3, [r4, #2]
 8010a80:	4413      	add	r3, r2
 8010a82:	9a00      	ldr	r2, [sp, #0]
 8010a84:	444a      	add	r2, r9
 8010a86:	b29b      	uxth	r3, r3
 8010a88:	fa1f f982 	uxth.w	r9, r2
 8010a8c:	b219      	sxth	r1, r3
 8010a8e:	fa0f f289 	sxth.w	r2, r9
 8010a92:	428a      	cmp	r2, r1
 8010a94:	da15      	bge.n	8010ac2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8010a96:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010a9a:	eba3 0309 	sub.w	r3, r3, r9
 8010a9e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010aa2:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010aa6:	4631      	mov	r1, r6
 8010aa8:	f8ad 0010 	strh.w	r0, [sp, #16]
 8010aac:	f8ad 2012 	strh.w	r2, [sp, #18]
 8010ab0:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010ab4:	69ea      	ldr	r2, [r5, #28]
 8010ab6:	e001      	b.n	8010abc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8010ab8:	69ea      	ldr	r2, [r5, #28]
 8010aba:	4621      	mov	r1, r4
 8010abc:	4640      	mov	r0, r8
 8010abe:	f7ff ff2b 	bl	8010918 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010ac2:	4628      	mov	r0, r5
 8010ac4:	f7ff fe94 	bl	80107f0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8010ac8:	6861      	ldr	r1, [r4, #4]
 8010aca:	4602      	mov	r2, r0
 8010acc:	4633      	mov	r3, r6
 8010ace:	6820      	ldr	r0, [r4, #0]
 8010ad0:	c303      	stmia	r3!, {r0, r1}
 8010ad2:	4611      	mov	r1, r2
 8010ad4:	4630      	mov	r0, r6
 8010ad6:	f7f8 fcff 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 8010ada:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8010ade:	2b00      	cmp	r3, #0
 8010ae0:	f77f af33 	ble.w	801094a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010ae4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8010ae8:	2b00      	cmp	r3, #0
 8010aea:	f77f af2e 	ble.w	801094a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010aee:	4628      	mov	r0, r5
 8010af0:	f7ff fe9a 	bl	8010828 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8010af4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8010af8:	1a18      	subs	r0, r3, r0
 8010afa:	f8ad 0010 	strh.w	r0, [sp, #16]
 8010afe:	4628      	mov	r0, r5
 8010b00:	f7ff fea6 	bl	8010850 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8010b04:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010b08:	4631      	mov	r1, r6
 8010b0a:	1a18      	subs	r0, r3, r0
 8010b0c:	f8ad 0012 	strh.w	r0, [sp, #18]
 8010b10:	4628      	mov	r0, r5
 8010b12:	682b      	ldr	r3, [r5, #0]
 8010b14:	689b      	ldr	r3, [r3, #8]
 8010b16:	4798      	blx	r3
 8010b18:	e717      	b.n	801094a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08010b1a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8010b1a:	b570      	push	{r4, r5, r6, lr}
 8010b1c:	1d06      	adds	r6, r0, #4
 8010b1e:	b086      	sub	sp, #24
 8010b20:	460c      	mov	r4, r1
 8010b22:	2300      	movs	r3, #0
 8010b24:	4631      	mov	r1, r6
 8010b26:	4605      	mov	r5, r0
 8010b28:	a802      	add	r0, sp, #8
 8010b2a:	9301      	str	r3, [sp, #4]
 8010b2c:	f7ff fbca 	bl	80102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010b30:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010b34:	8822      	ldrh	r2, [r4, #0]
 8010b36:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8010b3a:	1ad2      	subs	r2, r2, r3
 8010b3c:	8863      	ldrh	r3, [r4, #2]
 8010b3e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010b42:	1a5b      	subs	r3, r3, r1
 8010b44:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8010b48:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010b4c:	aa01      	add	r2, sp, #4
 8010b4e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010b52:	4630      	mov	r0, r6
 8010b54:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010b58:	a904      	add	r1, sp, #16
 8010b5a:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010b5e:	f7f8 fd93 	bl	8009688 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8010b62:	9a01      	ldr	r2, [sp, #4]
 8010b64:	b11a      	cbz	r2, 8010b6e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8010b66:	4621      	mov	r1, r4
 8010b68:	4628      	mov	r0, r5
 8010b6a:	f7ff fed5 	bl	8010918 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010b6e:	b006      	add	sp, #24
 8010b70:	bd70      	pop	{r4, r5, r6, pc}

08010b72 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8010b72:	4602      	mov	r2, r0
 8010b74:	b530      	push	{r4, r5, lr}
 8010b76:	4604      	mov	r4, r0
 8010b78:	b085      	sub	sp, #20
 8010b7a:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8010b7e:	460d      	mov	r5, r1
 8010b80:	466b      	mov	r3, sp
 8010b82:	6851      	ldr	r1, [r2, #4]
 8010b84:	c303      	stmia	r3!, {r0, r1}
 8010b86:	4629      	mov	r1, r5
 8010b88:	4668      	mov	r0, sp
 8010b8a:	f7f8 fca5 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 8010b8e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8010b92:	b12b      	cbz	r3, 8010ba0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8010b94:	4669      	mov	r1, sp
 8010b96:	4620      	mov	r0, r4
 8010b98:	f7ff ffbf 	bl	8010b1a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8010b9c:	b005      	add	sp, #20
 8010b9e:	bd30      	pop	{r4, r5, pc}
 8010ba0:	3404      	adds	r4, #4
 8010ba2:	a802      	add	r0, sp, #8
 8010ba4:	4621      	mov	r1, r4
 8010ba6:	f7ff fb8d 	bl	80102c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010baa:	f8bd 3000 	ldrh.w	r3, [sp]
 8010bae:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8010bb2:	4669      	mov	r1, sp
 8010bb4:	4620      	mov	r0, r4
 8010bb6:	1a9b      	subs	r3, r3, r2
 8010bb8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8010bbc:	f8ad 3000 	strh.w	r3, [sp]
 8010bc0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010bc4:	1a9b      	subs	r3, r3, r2
 8010bc6:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010bca:	f7f8 fd24 	bl	8009616 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8010bce:	e7e5      	b.n	8010b9c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08010bd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8010bd0:	460b      	mov	r3, r1
 8010bd2:	680a      	ldr	r2, [r1, #0]
 8010bd4:	1d01      	adds	r1, r0, #4
 8010bd6:	6992      	ldr	r2, [r2, #24]
 8010bd8:	4618      	mov	r0, r3
 8010bda:	4710      	bx	r2

08010bdc <_ZN8touchgfx12TextProviderC1Ev>:
 8010bdc:	b538      	push	{r3, r4, r5, lr}
 8010bde:	2500      	movs	r5, #0
 8010be0:	2302      	movs	r3, #2
 8010be2:	4604      	mov	r4, r0
 8010be4:	220e      	movs	r2, #14
 8010be6:	7403      	strb	r3, [r0, #16]
 8010be8:	4629      	mov	r1, r5
 8010bea:	6145      	str	r5, [r0, #20]
 8010bec:	7605      	strb	r5, [r0, #24]
 8010bee:	83c5      	strh	r5, [r0, #30]
 8010bf0:	8405      	strh	r5, [r0, #32]
 8010bf2:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8010bf4:	8705      	strh	r5, [r0, #56]	@ 0x38
 8010bf6:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8010bf8:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8010bfc:	e9c0 5500 	strd	r5, r5, [r0]
 8010c00:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8010c04:	304c      	adds	r0, #76	@ 0x4c
 8010c06:	f010 faa9 	bl	802115c <memset>
 8010c0a:	2301      	movs	r3, #1
 8010c0c:	4620      	mov	r0, r4
 8010c0e:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8010c12:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8010c16:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8010c1a:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8010c1e:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8010c22:	f7f2 fc7d 	bl	8003520 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8010c26:	4620      	mov	r0, r4
 8010c28:	bd38      	pop	{r3, r4, r5, pc}

08010c2a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8010c2a:	b530      	push	{r4, r5, lr}
 8010c2c:	2500      	movs	r5, #0
 8010c2e:	2401      	movs	r4, #1
 8010c30:	6843      	ldr	r3, [r0, #4]
 8010c32:	b913      	cbnz	r3, 8010c3a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8010c34:	6803      	ldr	r3, [r0, #0]
 8010c36:	b313      	cbz	r3, 8010c7e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8010c38:	6043      	str	r3, [r0, #4]
 8010c3a:	7e03      	ldrb	r3, [r0, #24]
 8010c3c:	b143      	cbz	r3, 8010c50 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8010c3e:	6943      	ldr	r3, [r0, #20]
 8010c40:	b12b      	cbz	r3, 8010c4e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8010c42:	881a      	ldrh	r2, [r3, #0]
 8010c44:	b11a      	cbz	r2, 8010c4e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8010c46:	1c9a      	adds	r2, r3, #2
 8010c48:	6142      	str	r2, [r0, #20]
 8010c4a:	8818      	ldrh	r0, [r3, #0]
 8010c4c:	bd30      	pop	{r4, r5, pc}
 8010c4e:	7605      	strb	r5, [r0, #24]
 8010c50:	6843      	ldr	r3, [r0, #4]
 8010c52:	8819      	ldrh	r1, [r3, #0]
 8010c54:	b199      	cbz	r1, 8010c7e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8010c56:	1c9a      	adds	r2, r3, #2
 8010c58:	2902      	cmp	r1, #2
 8010c5a:	6042      	str	r2, [r0, #4]
 8010c5c:	d1f5      	bne.n	8010c4a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8010c5e:	7c03      	ldrb	r3, [r0, #16]
 8010c60:	2b01      	cmp	r3, #1
 8010c62:	d8e5      	bhi.n	8010c30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010c64:	1c5a      	adds	r2, r3, #1
 8010c66:	3302      	adds	r3, #2
 8010c68:	7402      	strb	r2, [r0, #16]
 8010c6a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8010c6e:	6143      	str	r3, [r0, #20]
 8010c70:	2b00      	cmp	r3, #0
 8010c72:	d0dd      	beq.n	8010c30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010c74:	881b      	ldrh	r3, [r3, #0]
 8010c76:	2b00      	cmp	r3, #0
 8010c78:	d0da      	beq.n	8010c30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010c7a:	7604      	strb	r4, [r0, #24]
 8010c7c:	e7d8      	b.n	8010c30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010c7e:	2000      	movs	r0, #0
 8010c80:	e7e4      	b.n	8010c4c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08010c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8010c82:	6001      	str	r1, [r0, #0]
 8010c84:	2100      	movs	r1, #0
 8010c86:	b430      	push	{r4, r5}
 8010c88:	6041      	str	r1, [r0, #4]
 8010c8a:	6815      	ldr	r5, [r2, #0]
 8010c8c:	6085      	str	r5, [r0, #8]
 8010c8e:	6852      	ldr	r2, [r2, #4]
 8010c90:	6443      	str	r3, [r0, #68]	@ 0x44
 8010c92:	9b02      	ldr	r3, [sp, #8]
 8010c94:	60c2      	str	r2, [r0, #12]
 8010c96:	7401      	strb	r1, [r0, #16]
 8010c98:	6141      	str	r1, [r0, #20]
 8010c9a:	7601      	strb	r1, [r0, #24]
 8010c9c:	8701      	strh	r1, [r0, #56]	@ 0x38
 8010c9e:	8401      	strh	r1, [r0, #32]
 8010ca0:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8010ca4:	6483      	str	r3, [r0, #72]	@ 0x48
 8010ca6:	bc30      	pop	{r4, r5}
 8010ca8:	f7f2 bc3a 	b.w	8003520 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08010cac <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8010cac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010cae:	4605      	mov	r5, r0
 8010cb0:	4608      	mov	r0, r1
 8010cb2:	b1f1      	cbz	r1, 8010cf2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8010cb4:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8010cb8:	460b      	mov	r3, r1
 8010cba:	f101 0708 	add.w	r7, r1, #8
 8010cbe:	4622      	mov	r2, r4
 8010cc0:	6818      	ldr	r0, [r3, #0]
 8010cc2:	3308      	adds	r3, #8
 8010cc4:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8010cc8:	4626      	mov	r6, r4
 8010cca:	42bb      	cmp	r3, r7
 8010ccc:	c603      	stmia	r6!, {r0, r1}
 8010cce:	4634      	mov	r4, r6
 8010cd0:	d1f6      	bne.n	8010cc0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8010cd2:	6818      	ldr	r0, [r3, #0]
 8010cd4:	6030      	str	r0, [r6, #0]
 8010cd6:	4610      	mov	r0, r2
 8010cd8:	889b      	ldrh	r3, [r3, #4]
 8010cda:	80b3      	strh	r3, [r6, #4]
 8010cdc:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8010ce0:	015b      	lsls	r3, r3, #5
 8010ce2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8010ce6:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8010cea:	430b      	orrs	r3, r1
 8010cec:	425b      	negs	r3, r3
 8010cee:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8010cf2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010cf4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8010cf4:	b538      	push	{r3, r4, r5, lr}
 8010cf6:	460c      	mov	r4, r1
 8010cf8:	6811      	ldr	r1, [r2, #0]
 8010cfa:	4610      	mov	r0, r2
 8010cfc:	68cd      	ldr	r5, [r1, #12]
 8010cfe:	4619      	mov	r1, r3
 8010d00:	47a8      	blx	r5
 8010d02:	2800      	cmp	r0, #0
 8010d04:	bf08      	it	eq
 8010d06:	4620      	moveq	r0, r4
 8010d08:	bd38      	pop	{r3, r4, r5, pc}
	...

08010d0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8010d0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010d0e:	4604      	mov	r4, r0
 8010d10:	4615      	mov	r5, r2
 8010d12:	4608      	mov	r0, r1
 8010d14:	b93a      	cbnz	r2, 8010d26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8010d16:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 8010d1a:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 8010d1e:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 8010d22:	4628      	mov	r0, r5
 8010d24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010d26:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8010d2a:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 8010d2e:	8893      	ldrh	r3, [r2, #4]
 8010d30:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8010d34:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8010d38:	79ee      	ldrb	r6, [r5, #7]
 8010d3a:	4316      	orrs	r6, r2
 8010d3c:	19da      	adds	r2, r3, r7
 8010d3e:	b291      	uxth	r1, r2
 8010d40:	b2b7      	uxth	r7, r6
 8010d42:	291d      	cmp	r1, #29
 8010d44:	d87b      	bhi.n	8010e3e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8010d46:	2201      	movs	r2, #1
 8010d48:	10f6      	asrs	r6, r6, #3
 8010d4a:	408a      	lsls	r2, r1
 8010d4c:	4974      	ldr	r1, [pc, #464]	@ (8010f20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8010d4e:	420a      	tst	r2, r1
 8010d50:	d12e      	bne.n	8010db0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8010d52:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8010d56:	d072      	beq.n	8010e3e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8010d58:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 8010d5c:	462b      	mov	r3, r5
 8010d5e:	f105 0e08 	add.w	lr, r5, #8
 8010d62:	4615      	mov	r5, r2
 8010d64:	6818      	ldr	r0, [r3, #0]
 8010d66:	3308      	adds	r3, #8
 8010d68:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8010d6c:	4694      	mov	ip, r2
 8010d6e:	4573      	cmp	r3, lr
 8010d70:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8010d74:	4662      	mov	r2, ip
 8010d76:	d1f5      	bne.n	8010d64 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 8010d78:	6818      	ldr	r0, [r3, #0]
 8010d7a:	f8cc 0000 	str.w	r0, [ip]
 8010d7e:	889b      	ldrh	r3, [r3, #4]
 8010d80:	f8ac 3004 	strh.w	r3, [ip, #4]
 8010d84:	b2b3      	uxth	r3, r6
 8010d86:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 8010d8a:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 8010d8e:	1aca      	subs	r2, r1, r3
 8010d90:	1bcf      	subs	r7, r1, r7
 8010d92:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8010d96:	b292      	uxth	r2, r2
 8010d98:	1afb      	subs	r3, r7, r3
 8010d9a:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 8010d9e:	10d2      	asrs	r2, r2, #3
 8010da0:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8010da4:	4302      	orrs	r2, r0
 8010da6:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 8010daa:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8010dae:	e7b8      	b.n	8010d22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8010db0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8010db2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010db6:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8010db8:	f640 6333 	movw	r3, #3635	@ 0xe33
 8010dbc:	4299      	cmp	r1, r3
 8010dbe:	d110      	bne.n	8010de2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8010dc0:	6803      	ldr	r3, [r0, #0]
 8010dc2:	68db      	ldr	r3, [r3, #12]
 8010dc4:	4798      	blx	r3
 8010dc6:	7b41      	ldrb	r1, [r0, #13]
 8010dc8:	00cb      	lsls	r3, r1, #3
 8010dca:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010dce:	7a03      	ldrb	r3, [r0, #8]
 8010dd0:	0648      	lsls	r0, r1, #25
 8010dd2:	ea43 0302 	orr.w	r3, r3, r2
 8010dd6:	bf44      	itt	mi
 8010dd8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010ddc:	b21b      	sxthmi	r3, r3
 8010dde:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8010de2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 8010de6:	462a      	mov	r2, r5
 8010de8:	f105 0c08 	add.w	ip, r5, #8
 8010dec:	443b      	add	r3, r7
 8010dee:	4433      	add	r3, r6
 8010df0:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 8010df4:	b29b      	uxth	r3, r3
 8010df6:	4635      	mov	r5, r6
 8010df8:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8010dfc:	6810      	ldr	r0, [r2, #0]
 8010dfe:	3208      	adds	r2, #8
 8010e00:	f852 1c04 	ldr.w	r1, [r2, #-4]
 8010e04:	4637      	mov	r7, r6
 8010e06:	4562      	cmp	r2, ip
 8010e08:	c703      	stmia	r7!, {r0, r1}
 8010e0a:	463e      	mov	r6, r7
 8010e0c:	d1f6      	bne.n	8010dfc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8010e0e:	6810      	ldr	r0, [r2, #0]
 8010e10:	6038      	str	r0, [r7, #0]
 8010e12:	8892      	ldrh	r2, [r2, #4]
 8010e14:	80ba      	strh	r2, [r7, #4]
 8010e16:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8010e1a:	10db      	asrs	r3, r3, #3
 8010e1c:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8010e20:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8010e24:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8010e28:	4313      	orrs	r3, r2
 8010e2a:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 8010e2e:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8010e32:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 8010e36:	1a9b      	subs	r3, r3, r2
 8010e38:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 8010e3c:	e771      	b.n	8010d22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8010e3e:	f023 0204 	bic.w	r2, r3, #4
 8010e42:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8010e46:	428a      	cmp	r2, r1
 8010e48:	d003      	beq.n	8010e52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 8010e4a:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8010e4e:	4293      	cmp	r3, r2
 8010e50:	d120      	bne.n	8010e94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 8010e52:	3b01      	subs	r3, #1
 8010e54:	4602      	mov	r2, r0
 8010e56:	4629      	mov	r1, r5
 8010e58:	4620      	mov	r0, r4
 8010e5a:	b29b      	uxth	r3, r3
 8010e5c:	f7ff ff4a 	bl	8010cf4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8010e60:	7b41      	ldrb	r1, [r0, #13]
 8010e62:	00cb      	lsls	r3, r1, #3
 8010e64:	0649      	lsls	r1, r1, #25
 8010e66:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010e6a:	7a03      	ldrb	r3, [r0, #8]
 8010e6c:	ea43 0302 	orr.w	r3, r3, r2
 8010e70:	bf44      	itt	mi
 8010e72:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010e76:	b21b      	sxthmi	r3, r3
 8010e78:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8010e7c:	7b6b      	ldrb	r3, [r5, #13]
 8010e7e:	7aaa      	ldrb	r2, [r5, #10]
 8010e80:	005b      	lsls	r3, r3, #1
 8010e82:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010e86:	4313      	orrs	r3, r2
 8010e88:	115a      	asrs	r2, r3, #5
 8010e8a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8010e8e:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8010e92:	e035      	b.n	8010f00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8010e94:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8010e98:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 8010e9c:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8010ea0:	7a2a      	ldrb	r2, [r5, #8]
 8010ea2:	ea42 0201 	orr.w	r2, r2, r1
 8010ea6:	f640 6109 	movw	r1, #3593	@ 0xe09
 8010eaa:	bf1c      	itt	ne
 8010eac:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 8010eb0:	b212      	sxthne	r2, r2
 8010eb2:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 8010eb6:	f023 0210 	bic.w	r2, r3, #16
 8010eba:	428a      	cmp	r2, r1
 8010ebc:	d003      	beq.n	8010ec6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 8010ebe:	f640 6213 	movw	r2, #3603	@ 0xe13
 8010ec2:	4293      	cmp	r3, r2
 8010ec4:	d129      	bne.n	8010f1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8010ec6:	7b6e      	ldrb	r6, [r5, #13]
 8010ec8:	4629      	mov	r1, r5
 8010eca:	0076      	lsls	r6, r6, #1
 8010ecc:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8010ed0:	7aae      	ldrb	r6, [r5, #10]
 8010ed2:	4316      	orrs	r6, r2
 8010ed4:	f640 6213 	movw	r2, #3603	@ 0xe13
 8010ed8:	4293      	cmp	r3, r2
 8010eda:	4602      	mov	r2, r0
 8010edc:	4620      	mov	r0, r4
 8010ede:	bf16      	itet	ne
 8010ee0:	f103 33ff 	addne.w	r3, r3, #4294967295
 8010ee4:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8010ee8:	b29b      	uxthne	r3, r3
 8010eea:	f7ff ff03 	bl	8010cf4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8010eee:	7b43      	ldrb	r3, [r0, #13]
 8010ef0:	7a82      	ldrb	r2, [r0, #10]
 8010ef2:	005b      	lsls	r3, r3, #1
 8010ef4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010ef8:	4313      	orrs	r3, r2
 8010efa:	1af6      	subs	r6, r6, r3
 8010efc:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 8010f00:	7b69      	ldrb	r1, [r5, #13]
 8010f02:	00cb      	lsls	r3, r1, #3
 8010f04:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010f08:	7a2b      	ldrb	r3, [r5, #8]
 8010f0a:	4313      	orrs	r3, r2
 8010f0c:	064a      	lsls	r2, r1, #25
 8010f0e:	bf44      	itt	mi
 8010f10:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010f14:	b21b      	sxthmi	r3, r3
 8010f16:	1bdb      	subs	r3, r3, r7
 8010f18:	e747      	b.n	8010daa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8010f1a:	2300      	movs	r3, #0
 8010f1c:	e7b7      	b.n	8010e8e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 8010f1e:	bf00      	nop
 8010f20:	3fc00079 	.word	0x3fc00079

08010f24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8010f24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010f28:	4604      	mov	r4, r0
 8010f2a:	b942      	cbnz	r2, 8010f3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8010f2c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8010f30:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8010f34:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8010f38:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8010f3c:	e047      	b.n	8010fce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8010f3e:	7b51      	ldrb	r1, [r2, #13]
 8010f40:	8893      	ldrh	r3, [r2, #4]
 8010f42:	010d      	lsls	r5, r1, #4
 8010f44:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8010f48:	79d5      	ldrb	r5, [r2, #7]
 8010f4a:	4305      	orrs	r5, r0
 8010f4c:	2d04      	cmp	r5, #4
 8010f4e:	bfcc      	ite	gt
 8010f50:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8010f54:	f04f 0e01 	movle.w	lr, #1
 8010f58:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8010f5c:	f200 80ab 	bhi.w	80110b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8010f60:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8010f64:	4283      	cmp	r3, r0
 8010f66:	d216      	bcs.n	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010f68:	f240 605b 	movw	r0, #1627	@ 0x65b
 8010f6c:	4283      	cmp	r3, r0
 8010f6e:	d859      	bhi.n	8011024 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8010f70:	f240 6057 	movw	r0, #1623	@ 0x657
 8010f74:	4283      	cmp	r3, r0
 8010f76:	d20e      	bcs.n	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010f78:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8010f7c:	d24a      	bcs.n	8011014 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8010f7e:	f240 604e 	movw	r0, #1614	@ 0x64e
 8010f82:	4283      	cmp	r3, r0
 8010f84:	d207      	bcs.n	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010f86:	f240 601a 	movw	r0, #1562	@ 0x61a
 8010f8a:	4283      	cmp	r3, r0
 8010f8c:	d02a      	beq.n	8010fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010f8e:	d821      	bhi.n	8010fd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8010f90:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8010f94:	d35b      	bcc.n	801104e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010f96:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8010f9a:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8010f9e:	f040 80d0 	bne.w	8011142 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8010fa2:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8010fa6:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8010faa:	f040 80ca 	bne.w	8011142 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8010fae:	00cb      	lsls	r3, r1, #3
 8010fb0:	0649      	lsls	r1, r1, #25
 8010fb2:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8010fb6:	7a13      	ldrb	r3, [r2, #8]
 8010fb8:	ea43 0300 	orr.w	r3, r3, r0
 8010fbc:	bf44      	itt	mi
 8010fbe:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010fc2:	b21b      	sxthmi	r3, r3
 8010fc4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8010fc8:	1b5d      	subs	r5, r3, r5
 8010fca:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8010fce:	4610      	mov	r0, r2
 8010fd0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010fd4:	f240 604b 	movw	r0, #1611	@ 0x64b
 8010fd8:	4283      	cmp	r3, r0
 8010fda:	d338      	bcc.n	801104e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010fdc:	f240 604c 	movw	r0, #1612	@ 0x64c
 8010fe0:	4283      	cmp	r3, r0
 8010fe2:	d9d8      	bls.n	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010fe4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8010fe8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8010fec:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8010ff0:	f040 80f3 	bne.w	80111da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8010ff4:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8010ff8:	f040 80ef 	bne.w	80111da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8010ffc:	00cb      	lsls	r3, r1, #3
 8010ffe:	064e      	lsls	r6, r1, #25
 8011000:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011004:	7a13      	ldrb	r3, [r2, #8]
 8011006:	ea43 0300 	orr.w	r3, r3, r0
 801100a:	bf44      	itt	mi
 801100c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011010:	b21b      	sxthmi	r3, r3
 8011012:	e7d9      	b.n	8010fc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8011014:	f240 6054 	movw	r0, #1620	@ 0x654
 8011018:	4283      	cmp	r3, r0
 801101a:	d8e3      	bhi.n	8010fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801101c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8011020:	d9e0      	bls.n	8010fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011022:	e7b8      	b.n	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011024:	f240 6074 	movw	r0, #1652	@ 0x674
 8011028:	4283      	cmp	r3, r0
 801102a:	d0b4      	beq.n	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801102c:	d82d      	bhi.n	801108a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801102e:	f240 605e 	movw	r0, #1630	@ 0x65e
 8011032:	4283      	cmp	r3, r0
 8011034:	d804      	bhi.n	8011040 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8011036:	f240 605d 	movw	r0, #1629	@ 0x65d
 801103a:	4283      	cmp	r3, r0
 801103c:	d3d2      	bcc.n	8010fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801103e:	e7aa      	b.n	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011040:	f240 605f 	movw	r0, #1631	@ 0x65f
 8011044:	4283      	cmp	r3, r0
 8011046:	d0cd      	beq.n	8010fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011048:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 801104c:	d0a3      	beq.n	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801104e:	00cb      	lsls	r3, r1, #3
 8011050:	0649      	lsls	r1, r1, #25
 8011052:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011056:	7a13      	ldrb	r3, [r2, #8]
 8011058:	ea43 0300 	orr.w	r3, r3, r0
 801105c:	bf44      	itt	mi
 801105e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011062:	b21b      	sxthmi	r3, r3
 8011064:	1b5d      	subs	r5, r3, r5
 8011066:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801106a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801106e:	7b53      	ldrb	r3, [r2, #13]
 8011070:	015b      	lsls	r3, r3, #5
 8011072:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011076:	7993      	ldrb	r3, [r2, #6]
 8011078:	430b      	orrs	r3, r1
 801107a:	2105      	movs	r1, #5
 801107c:	005b      	lsls	r3, r3, #1
 801107e:	fb93 f3f1 	sdiv	r3, r3, r1
 8011082:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8011086:	440b      	add	r3, r1
 8011088:	e756      	b.n	8010f38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801108a:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 801108e:	4283      	cmp	r3, r0
 8011090:	d809      	bhi.n	80110a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8011092:	f240 60df 	movw	r0, #1759	@ 0x6df
 8011096:	4283      	cmp	r3, r0
 8011098:	f4bf af7d 	bcs.w	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801109c:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 80110a0:	2b05      	cmp	r3, #5
 80110a2:	d8d4      	bhi.n	801104e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80110a4:	e777      	b.n	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80110a6:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 80110aa:	4283      	cmp	r3, r0
 80110ac:	d09a      	beq.n	8010fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80110ae:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 80110b2:	4283      	cmp	r3, r0
 80110b4:	e7ca      	b.n	801104c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80110b6:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 80110ba:	d22b      	bcs.n	8011114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80110bc:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 80110c0:	4283      	cmp	r3, r0
 80110c2:	d28f      	bcs.n	8010fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80110c4:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 80110c8:	4283      	cmp	r3, r0
 80110ca:	d816      	bhi.n	80110fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80110cc:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 80110d0:	4283      	cmp	r3, r0
 80110d2:	f4bf af60 	bcs.w	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80110d6:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 80110da:	4283      	cmp	r3, r0
 80110dc:	d80a      	bhi.n	80110f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80110de:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 80110e2:	4283      	cmp	r3, r0
 80110e4:	f4bf af57 	bcs.w	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80110e8:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 80110ec:	4283      	cmp	r3, r0
 80110ee:	f43f af79 	beq.w	8010fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80110f2:	e7ac      	b.n	801104e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80110f4:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 80110f8:	e7f8      	b.n	80110ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80110fa:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 80110fe:	4283      	cmp	r3, r0
 8011100:	d802      	bhi.n	8011108 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8011102:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8011106:	e798      	b.n	801103a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8011108:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 801110c:	4283      	cmp	r3, r0
 801110e:	f47f af42 	bne.w	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011112:	e767      	b.n	8010fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011114:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8011118:	4283      	cmp	r3, r0
 801111a:	f43f af63 	beq.w	8010fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801111e:	d802      	bhi.n	8011126 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8011120:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8011124:	e7f2      	b.n	801110c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8011126:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 801112a:	4283      	cmp	r3, r0
 801112c:	d805      	bhi.n	801113a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801112e:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8011132:	4283      	cmp	r3, r0
 8011134:	f4ff af2f 	bcc.w	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011138:	e754      	b.n	8010fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801113a:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 801113e:	4283      	cmp	r3, r0
 8011140:	e7af      	b.n	80110a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8011142:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8011146:	4617      	mov	r7, r2
 8011148:	f102 0808 	add.w	r8, r2, #8
 801114c:	4666      	mov	r6, ip
 801114e:	6838      	ldr	r0, [r7, #0]
 8011150:	3708      	adds	r7, #8
 8011152:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8011156:	46e6      	mov	lr, ip
 8011158:	4547      	cmp	r7, r8
 801115a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801115e:	46f4      	mov	ip, lr
 8011160:	d1f5      	bne.n	801114e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8011162:	6838      	ldr	r0, [r7, #0]
 8011164:	f8ce 0000 	str.w	r0, [lr]
 8011168:	88b9      	ldrh	r1, [r7, #4]
 801116a:	f8ae 1004 	strh.w	r1, [lr, #4]
 801116e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8011172:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011176:	d009      	beq.n	801118c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 8011178:	7b51      	ldrb	r1, [r2, #13]
 801117a:	7992      	ldrb	r2, [r2, #6]
 801117c:	0149      	lsls	r1, r1, #5
 801117e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8011182:	4311      	orrs	r1, r2
 8011184:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011188:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 801118c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011190:	b2ad      	uxth	r5, r5
 8011192:	d00d      	beq.n	80111b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 8011194:	442b      	add	r3, r5
 8011196:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801119a:	b29b      	uxth	r3, r3
 801119c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80111a0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80111a4:	10db      	asrs	r3, r3, #3
 80111a6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80111aa:	4313      	orrs	r3, r2
 80111ac:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80111b0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80111b4:	00cb      	lsls	r3, r1, #3
 80111b6:	064f      	lsls	r7, r1, #25
 80111b8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80111bc:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80111c0:	ea43 0302 	orr.w	r3, r3, r2
 80111c4:	bf44      	itt	mi
 80111c6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80111ca:	b21b      	sxthmi	r3, r3
 80111cc:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80111d0:	1b5b      	subs	r3, r3, r5
 80111d2:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 80111d6:	4632      	mov	r2, r6
 80111d8:	e6f9      	b.n	8010fce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80111da:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80111de:	4617      	mov	r7, r2
 80111e0:	f102 0908 	add.w	r9, r2, #8
 80111e4:	4666      	mov	r6, ip
 80111e6:	6838      	ldr	r0, [r7, #0]
 80111e8:	3708      	adds	r7, #8
 80111ea:	f857 1c04 	ldr.w	r1, [r7, #-4]
 80111ee:	46e0      	mov	r8, ip
 80111f0:	454f      	cmp	r7, r9
 80111f2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80111f6:	46c4      	mov	ip, r8
 80111f8:	d1f5      	bne.n	80111e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 80111fa:	6838      	ldr	r0, [r7, #0]
 80111fc:	f8c8 0000 	str.w	r0, [r8]
 8011200:	88b9      	ldrh	r1, [r7, #4]
 8011202:	f8a8 1004 	strh.w	r1, [r8, #4]
 8011206:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801120a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801120e:	d009      	beq.n	8011224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8011210:	7b51      	ldrb	r1, [r2, #13]
 8011212:	7992      	ldrb	r2, [r2, #6]
 8011214:	0149      	lsls	r1, r1, #5
 8011216:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801121a:	4311      	orrs	r1, r2
 801121c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011220:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8011224:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011228:	d00e      	beq.n	8011248 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 801122a:	eba3 030e 	sub.w	r3, r3, lr
 801122e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8011232:	b29b      	uxth	r3, r3
 8011234:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011238:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801123c:	10db      	asrs	r3, r3, #3
 801123e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011242:	4313      	orrs	r3, r2
 8011244:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8011248:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801124c:	00cb      	lsls	r3, r1, #3
 801124e:	0648      	lsls	r0, r1, #25
 8011250:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011254:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8011258:	ea43 0302 	orr.w	r3, r3, r2
 801125c:	bf44      	itt	mi
 801125e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011262:	b21b      	sxthmi	r3, r3
 8011264:	1b5d      	subs	r5, r3, r5
 8011266:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801126a:	e7b4      	b.n	80111d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

0801126c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801126c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011270:	461e      	mov	r6, r3
 8011272:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8011274:	4604      	mov	r4, r0
 8011276:	4617      	mov	r7, r2
 8011278:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801127c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8011280:	f7f2 f90c 	bl	800349c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011284:	4605      	mov	r5, r0
 8011286:	b918      	cbnz	r0, 8011290 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8011288:	6030      	str	r0, [r6, #0]
 801128a:	4628      	mov	r0, r5
 801128c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011290:	683b      	ldr	r3, [r7, #0]
 8011292:	4601      	mov	r1, r0
 8011294:	4638      	mov	r0, r7
 8011296:	68db      	ldr	r3, [r3, #12]
 8011298:	4798      	blx	r3
 801129a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801129e:	4602      	mov	r2, r0
 80112a0:	6030      	str	r0, [r6, #0]
 80112a2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80112a6:	d213      	bcs.n	80112d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80112a8:	4643      	mov	r3, r8
 80112aa:	4639      	mov	r1, r7
 80112ac:	4620      	mov	r0, r4
 80112ae:	f7ff fe39 	bl	8010f24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80112b2:	6030      	str	r0, [r6, #0]
 80112b4:	6833      	ldr	r3, [r6, #0]
 80112b6:	b143      	cbz	r3, 80112ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80112b8:	7b5a      	ldrb	r2, [r3, #13]
 80112ba:	7a9b      	ldrb	r3, [r3, #10]
 80112bc:	0052      	lsls	r2, r2, #1
 80112be:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80112c2:	4313      	orrs	r3, r2
 80112c4:	bf0c      	ite	eq
 80112c6:	2301      	moveq	r3, #1
 80112c8:	2300      	movne	r3, #0
 80112ca:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80112ce:	e7dc      	b.n	801128a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80112d0:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80112d4:	b29b      	uxth	r3, r3
 80112d6:	2b7f      	cmp	r3, #127	@ 0x7f
 80112d8:	d804      	bhi.n	80112e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80112da:	4639      	mov	r1, r7
 80112dc:	4620      	mov	r0, r4
 80112de:	f7ff fd15 	bl	8010d0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80112e2:	e7e6      	b.n	80112b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80112e4:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80112e8:	2b00      	cmp	r3, #0
 80112ea:	d0e3      	beq.n	80112b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80112ec:	f640 1302 	movw	r3, #2306	@ 0x902
 80112f0:	429d      	cmp	r5, r3
 80112f2:	d1df      	bne.n	80112b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80112f4:	4601      	mov	r1, r0
 80112f6:	4620      	mov	r0, r4
 80112f8:	f7ff fcd8 	bl	8010cac <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80112fc:	e7d9      	b.n	80112b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080112fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80112fe:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011302:	461e      	mov	r6, r3
 8011304:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8011306:	4604      	mov	r4, r0
 8011308:	4617      	mov	r7, r2
 801130a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801130e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8011312:	f7f2 f8c3 	bl	800349c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011316:	4605      	mov	r5, r0
 8011318:	b918      	cbnz	r0, 8011322 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801131a:	6030      	str	r0, [r6, #0]
 801131c:	4628      	mov	r0, r5
 801131e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011322:	683b      	ldr	r3, [r7, #0]
 8011324:	4601      	mov	r1, r0
 8011326:	4638      	mov	r0, r7
 8011328:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801132c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8011330:	47c8      	blx	r9
 8011332:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8011336:	4602      	mov	r2, r0
 8011338:	6030      	str	r0, [r6, #0]
 801133a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801133e:	d213      	bcs.n	8011368 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8011340:	4643      	mov	r3, r8
 8011342:	4639      	mov	r1, r7
 8011344:	4620      	mov	r0, r4
 8011346:	f7ff fded 	bl	8010f24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801134a:	6030      	str	r0, [r6, #0]
 801134c:	6833      	ldr	r3, [r6, #0]
 801134e:	b143      	cbz	r3, 8011362 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8011350:	7b5a      	ldrb	r2, [r3, #13]
 8011352:	7a9b      	ldrb	r3, [r3, #10]
 8011354:	0052      	lsls	r2, r2, #1
 8011356:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801135a:	4313      	orrs	r3, r2
 801135c:	bf0c      	ite	eq
 801135e:	2301      	moveq	r3, #1
 8011360:	2300      	movne	r3, #0
 8011362:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8011366:	e7d9      	b.n	801131c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8011368:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801136c:	b29b      	uxth	r3, r3
 801136e:	2b7f      	cmp	r3, #127	@ 0x7f
 8011370:	d804      	bhi.n	801137c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8011372:	4639      	mov	r1, r7
 8011374:	4620      	mov	r0, r4
 8011376:	f7ff fcc9 	bl	8010d0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801137a:	e7e6      	b.n	801134a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801137c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8011380:	2b00      	cmp	r3, #0
 8011382:	d0e3      	beq.n	801134c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8011384:	f640 1302 	movw	r3, #2306	@ 0x902
 8011388:	429d      	cmp	r5, r3
 801138a:	d1df      	bne.n	801134c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801138c:	4601      	mov	r1, r0
 801138e:	4620      	mov	r0, r4
 8011390:	f7ff fc8c 	bl	8010cac <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8011394:	e7d9      	b.n	801134a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08011396 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8011396:	b510      	push	{r4, lr}
 8011398:	4604      	mov	r4, r0
 801139a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 801139e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80113a0:	b1e1      	cbz	r1, 80113dc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80113a2:	2b0a      	cmp	r3, #10
 80113a4:	d02d      	beq.n	8011402 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 80113a6:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 80113a8:	3901      	subs	r1, #1
 80113aa:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80113ae:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 80113b0:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 80113b4:	1c51      	adds	r1, r2, #1
 80113b6:	b289      	uxth	r1, r1
 80113b8:	2901      	cmp	r1, #1
 80113ba:	bf8a      	itet	hi
 80113bc:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80113c0:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 80113c2:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 80113c4:	1c5a      	adds	r2, r3, #1
 80113c6:	8722      	strh	r2, [r4, #56]	@ 0x38
 80113c8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80113ca:	4413      	add	r3, r2
 80113cc:	b29b      	uxth	r3, r3
 80113ce:	2b09      	cmp	r3, #9
 80113d0:	bf88      	it	hi
 80113d2:	3b0a      	subhi	r3, #10
 80113d4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80113d8:	8458      	strh	r0, [r3, #34]	@ 0x22
 80113da:	e7de      	b.n	801139a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80113dc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80113de:	2b0a      	cmp	r3, #10
 80113e0:	d00f      	beq.n	8011402 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 80113e2:	4620      	mov	r0, r4
 80113e4:	f7ff fc21 	bl	8010c2a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80113e8:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80113ea:	1c5a      	adds	r2, r3, #1
 80113ec:	8722      	strh	r2, [r4, #56]	@ 0x38
 80113ee:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80113f0:	4413      	add	r3, r2
 80113f2:	b29b      	uxth	r3, r3
 80113f4:	2b09      	cmp	r3, #9
 80113f6:	bf88      	it	hi
 80113f8:	3b0a      	subhi	r3, #10
 80113fa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80113fe:	8458      	strh	r0, [r3, #34]	@ 0x22
 8011400:	e7ec      	b.n	80113dc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8011402:	bd10      	pop	{r4, pc}

08011404 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8011404:	b538      	push	{r3, r4, r5, lr}
 8011406:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8011408:	4604      	mov	r4, r0
 801140a:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801140e:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8011410:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8011412:	3a01      	subs	r2, #1
 8011414:	8702      	strh	r2, [r0, #56]	@ 0x38
 8011416:	1c5a      	adds	r2, r3, #1
 8011418:	b292      	uxth	r2, r2
 801141a:	2a09      	cmp	r2, #9
 801141c:	bf8a      	itet	hi
 801141e:	3b09      	subhi	r3, #9
 8011420:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8011422:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8011424:	f7ff ffb7 	bl	8011396 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8011428:	8c23      	ldrh	r3, [r4, #32]
 801142a:	2b01      	cmp	r3, #1
 801142c:	bf9c      	itt	ls
 801142e:	3301      	addls	r3, #1
 8011430:	8423      	strhls	r3, [r4, #32]
 8011432:	8be3      	ldrh	r3, [r4, #30]
 8011434:	b90b      	cbnz	r3, 801143a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8011436:	2302      	movs	r3, #2
 8011438:	83e3      	strh	r3, [r4, #30]
 801143a:	8be3      	ldrh	r3, [r4, #30]
 801143c:	4628      	mov	r0, r5
 801143e:	3b01      	subs	r3, #1
 8011440:	b29b      	uxth	r3, r3
 8011442:	83e3      	strh	r3, [r4, #30]
 8011444:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011448:	8365      	strh	r5, [r4, #26]
 801144a:	bd38      	pop	{r3, r4, r5, pc}

0801144c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801144c:	428a      	cmp	r2, r1
 801144e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011452:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8011454:	d932      	bls.n	80114bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 8011456:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8011458:	1a54      	subs	r4, r2, r1
 801145a:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 801145e:	19ee      	adds	r6, r5, r7
 8011460:	fa1f fe84 	uxth.w	lr, r4
 8011464:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8011468:	3e01      	subs	r6, #1
 801146a:	b2b4      	uxth	r4, r6
 801146c:	eba4 090e 	sub.w	r9, r4, lr
 8011470:	fa1f f989 	uxth.w	r9, r9
 8011474:	2c09      	cmp	r4, #9
 8011476:	4626      	mov	r6, r4
 8011478:	bf88      	it	hi
 801147a:	f1a4 060a 	subhi.w	r6, r4, #10
 801147e:	f1bc 0f00 	cmp.w	ip, #0
 8011482:	f104 34ff 	add.w	r4, r4, #4294967295
 8011486:	bf08      	it	eq
 8011488:	f04f 0c02 	moveq.w	ip, #2
 801148c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8011490:	b2a4      	uxth	r4, r4
 8011492:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011496:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 801149a:	454c      	cmp	r4, r9
 801149c:	fa1f fc8c 	uxth.w	ip, ip
 80114a0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80114a4:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 80114a8:	d1e4      	bne.n	8011474 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80114aa:	eba5 050e 	sub.w	r5, r5, lr
 80114ae:	eb0e 0408 	add.w	r4, lr, r8
 80114b2:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 80114b6:	8705      	strh	r5, [r0, #56]	@ 0x38
 80114b8:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 80114bc:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 80114be:	250a      	movs	r5, #10
 80114c0:	1a64      	subs	r4, r4, r1
 80114c2:	4439      	add	r1, r7
 80114c4:	b289      	uxth	r1, r1
 80114c6:	8704      	strh	r4, [r0, #56]	@ 0x38
 80114c8:	2909      	cmp	r1, #9
 80114ca:	bf88      	it	hi
 80114cc:	390a      	subhi	r1, #10
 80114ce:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80114d0:	b18a      	cbz	r2, 80114f6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 80114d2:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 80114d4:	3a01      	subs	r2, #1
 80114d6:	3101      	adds	r1, #1
 80114d8:	b292      	uxth	r2, r2
 80114da:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80114de:	8701      	strh	r1, [r0, #56]	@ 0x38
 80114e0:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80114e2:	b901      	cbnz	r1, 80114e6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 80114e4:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80114e6:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80114e8:	3901      	subs	r1, #1
 80114ea:	b289      	uxth	r1, r1
 80114ec:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80114ee:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80114f2:	844c      	strh	r4, [r1, #34]	@ 0x22
 80114f4:	e7ec      	b.n	80114d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 80114f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80114fa:	f7ff bf4c 	b.w	8011396 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080114fe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80114fe:	b570      	push	{r4, r5, r6, lr}
 8011500:	2500      	movs	r5, #0
 8011502:	4295      	cmp	r5, r2
 8011504:	d011      	beq.n	801152a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8011506:	8bc4      	ldrh	r4, [r0, #30]
 8011508:	f831 6b02 	ldrh.w	r6, [r1], #2
 801150c:	4414      	add	r4, r2
 801150e:	3c01      	subs	r4, #1
 8011510:	1b64      	subs	r4, r4, r5
 8011512:	b2a4      	uxth	r4, r4
 8011514:	2c01      	cmp	r4, #1
 8011516:	bf88      	it	hi
 8011518:	3c02      	subhi	r4, #2
 801151a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801151e:	8b64      	ldrh	r4, [r4, #26]
 8011520:	42b4      	cmp	r4, r6
 8011522:	d117      	bne.n	8011554 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8011524:	3501      	adds	r5, #1
 8011526:	b2ad      	uxth	r5, r5
 8011528:	e7eb      	b.n	8011502 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801152a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801152e:	2400      	movs	r4, #0
 8011530:	4413      	add	r3, r2
 8011532:	b2a2      	uxth	r2, r4
 8011534:	429a      	cmp	r2, r3
 8011536:	da0f      	bge.n	8011558 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8011538:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 801153a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801153e:	3401      	adds	r4, #1
 8011540:	4432      	add	r2, r6
 8011542:	b292      	uxth	r2, r2
 8011544:	2a09      	cmp	r2, #9
 8011546:	bf88      	it	hi
 8011548:	3a0a      	subhi	r2, #10
 801154a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801154e:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8011550:	42aa      	cmp	r2, r5
 8011552:	d0ee      	beq.n	8011532 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8011554:	2000      	movs	r0, #0
 8011556:	bd70      	pop	{r4, r5, r6, pc}
 8011558:	2001      	movs	r0, #1
 801155a:	e7fc      	b.n	8011556 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801155c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801155c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011560:	4605      	mov	r5, r0
 8011562:	4616      	mov	r6, r2
 8011564:	1c8c      	adds	r4, r1, #2
 8011566:	8809      	ldrh	r1, [r1, #0]
 8011568:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801156c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8011570:	42b3      	cmp	r3, r6
 8011572:	d124      	bne.n	80115be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8011574:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8011578:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801157c:	f001 070f 	and.w	r7, r1, #15
 8011580:	4652      	mov	r2, sl
 8011582:	f8cd 8000 	str.w	r8, [sp]
 8011586:	464b      	mov	r3, r9
 8011588:	4621      	mov	r1, r4
 801158a:	4628      	mov	r0, r5
 801158c:	f7ff ffb7 	bl	80114fe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8011590:	4683      	mov	fp, r0
 8011592:	b168      	cbz	r0, 80115b0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8011594:	eb0a 0109 	add.w	r1, sl, r9
 8011598:	463a      	mov	r2, r7
 801159a:	4628      	mov	r0, r5
 801159c:	4441      	add	r1, r8
 801159e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80115a2:	4649      	mov	r1, r9
 80115a4:	f7ff ff52 	bl	801144c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80115a8:	4658      	mov	r0, fp
 80115aa:	b003      	add	sp, #12
 80115ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115b0:	eb07 010a 	add.w	r1, r7, sl
 80115b4:	4449      	add	r1, r9
 80115b6:	4441      	add	r1, r8
 80115b8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80115bc:	e7d2      	b.n	8011564 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80115be:	f04f 0b00 	mov.w	fp, #0
 80115c2:	e7f1      	b.n	80115a8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080115c4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80115c4:	b570      	push	{r4, r5, r6, lr}
 80115c6:	8810      	ldrh	r0, [r2, #0]
 80115c8:	4298      	cmp	r0, r3
 80115ca:	d817      	bhi.n	80115fc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80115cc:	1e48      	subs	r0, r1, #1
 80115ce:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80115d2:	4298      	cmp	r0, r3
 80115d4:	d312      	bcc.n	80115fc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80115d6:	2400      	movs	r4, #0
 80115d8:	428c      	cmp	r4, r1
 80115da:	d20f      	bcs.n	80115fc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80115dc:	1860      	adds	r0, r4, r1
 80115de:	1040      	asrs	r0, r0, #1
 80115e0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80115e4:	0085      	lsls	r5, r0, #2
 80115e6:	42b3      	cmp	r3, r6
 80115e8:	d902      	bls.n	80115f0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80115ea:	3001      	adds	r0, #1
 80115ec:	b284      	uxth	r4, r0
 80115ee:	e7f3      	b.n	80115d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80115f0:	d201      	bcs.n	80115f6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80115f2:	b281      	uxth	r1, r0
 80115f4:	e7f0      	b.n	80115d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80115f6:	442a      	add	r2, r5
 80115f8:	8850      	ldrh	r0, [r2, #2]
 80115fa:	bd70      	pop	{r4, r5, r6, pc}
 80115fc:	2000      	movs	r0, #0
 80115fe:	e7fc      	b.n	80115fa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08011600 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8011600:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011604:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8011606:	4604      	mov	r4, r0
 8011608:	260b      	movs	r6, #11
 801160a:	886f      	ldrh	r7, [r5, #2]
 801160c:	087f      	lsrs	r7, r7, #1
 801160e:	3e01      	subs	r6, #1
 8011610:	d013      	beq.n	801163a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8011612:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8011614:	462a      	mov	r2, r5
 8011616:	4639      	mov	r1, r7
 8011618:	4620      	mov	r0, r4
 801161a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801161e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8011622:	4643      	mov	r3, r8
 8011624:	f7ff ffce 	bl	80115c4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8011628:	b138      	cbz	r0, 801163a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801162a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801162e:	4642      	mov	r2, r8
 8011630:	4620      	mov	r0, r4
 8011632:	f7ff ff93 	bl	801155c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8011636:	2800      	cmp	r0, #0
 8011638:	d1e9      	bne.n	801160e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801163a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08011640 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8011640:	b570      	push	{r4, r5, r6, lr}
 8011642:	694a      	ldr	r2, [r1, #20]
 8011644:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8011646:	684b      	ldr	r3, [r1, #4]
 8011648:	1b54      	subs	r4, r2, r5
 801164a:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 801164c:	f000 8106 	beq.w	801185c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8011650:	1b9b      	subs	r3, r3, r6
 8011652:	d003      	beq.n	801165c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011654:	4363      	muls	r3, r4
 8011656:	2210      	movs	r2, #16
 8011658:	fb93 f3f2 	sdiv	r3, r3, r2
 801165c:	680c      	ldr	r4, [r1, #0]
 801165e:	698a      	ldr	r2, [r1, #24]
 8011660:	1b65      	subs	r5, r4, r5
 8011662:	f000 80fd 	beq.w	8011860 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8011666:	1b92      	subs	r2, r2, r6
 8011668:	d003      	beq.n	8011672 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801166a:	436a      	muls	r2, r5
 801166c:	2410      	movs	r4, #16
 801166e:	fb92 f2f4 	sdiv	r2, r2, r4
 8011672:	1a9b      	subs	r3, r3, r2
 8011674:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 801189c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8011678:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801167c:	460a      	mov	r2, r1
 801167e:	ee07 3a90 	vmov	s15, r3
 8011682:	f100 040c 	add.w	r4, r0, #12
 8011686:	4603      	mov	r3, r0
 8011688:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801168c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011690:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8011694:	eeb1 6a43 	vneg.f32	s12, s6
 8011698:	edd2 7a02 	vldr	s15, [r2, #8]
 801169c:	3214      	adds	r2, #20
 801169e:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80116a2:	ece3 6a01 	vstmia	r3!, {s13}
 80116a6:	429c      	cmp	r4, r3
 80116a8:	ed52 7a02 	vldr	s15, [r2, #-8]
 80116ac:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80116b0:	edc3 7a02 	vstr	s15, [r3, #8]
 80116b4:	ed52 7a01 	vldr	s15, [r2, #-4]
 80116b8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80116bc:	edc3 7a05 	vstr	s15, [r3, #20]
 80116c0:	d1ea      	bne.n	8011698 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80116c2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80116c4:	698b      	ldr	r3, [r1, #24]
 80116c6:	edd0 4a02 	vldr	s9, [r0, #8]
 80116ca:	1a9b      	subs	r3, r3, r2
 80116cc:	edd0 3a00 	vldr	s7, [r0]
 80116d0:	edd0 6a01 	vldr	s13, [r0, #4]
 80116d4:	ee07 3a90 	vmov	s15, r3
 80116d8:	684b      	ldr	r3, [r1, #4]
 80116da:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80116de:	ed90 5a05 	vldr	s10, [r0, #20]
 80116e2:	1a9b      	subs	r3, r3, r2
 80116e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80116e8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80116ec:	ed90 2a03 	vldr	s4, [r0, #12]
 80116f0:	ee07 3a10 	vmov	s14, r3
 80116f4:	edd0 5a04 	vldr	s11, [r0, #16]
 80116f8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80116fc:	ed90 1a07 	vldr	s2, [r0, #28]
 8011700:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011704:	edd0 2a06 	vldr	s5, [r0, #24]
 8011708:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801170c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8011710:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011714:	ee32 5a45 	vsub.f32	s10, s4, s10
 8011718:	eee6 7a87 	vfma.f32	s15, s13, s14
 801171c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8011720:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8011724:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8011726:	694a      	ldr	r2, [r1, #20]
 8011728:	1b13      	subs	r3, r2, r4
 801172a:	ee07 3a10 	vmov	s14, r3
 801172e:	680b      	ldr	r3, [r1, #0]
 8011730:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011734:	1b1b      	subs	r3, r3, r4
 8011736:	ee27 7a04 	vmul.f32	s14, s14, s8
 801173a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801173e:	ee07 3a10 	vmov	s14, r3
 8011742:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011746:	ee27 7a04 	vmul.f32	s14, s14, s8
 801174a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801174e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8011752:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8011756:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8011758:	698b      	ldr	r3, [r1, #24]
 801175a:	1a9b      	subs	r3, r3, r2
 801175c:	ee06 3a90 	vmov	s13, r3
 8011760:	684b      	ldr	r3, [r1, #4]
 8011762:	1a9b      	subs	r3, r3, r2
 8011764:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8011768:	ee07 3a10 	vmov	s14, r3
 801176c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8011770:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011774:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8011778:	ee27 7a04 	vmul.f32	s14, s14, s8
 801177c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8011780:	ee66 6a83 	vmul.f32	s13, s13, s6
 8011784:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8011788:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801178a:	694a      	ldr	r2, [r1, #20]
 801178c:	1b13      	subs	r3, r2, r4
 801178e:	ee07 3a10 	vmov	s14, r3
 8011792:	680b      	ldr	r3, [r1, #0]
 8011794:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011798:	1b1b      	subs	r3, r3, r4
 801179a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801179e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80117a2:	ee07 3a10 	vmov	s14, r3
 80117a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80117aa:	ee27 7a04 	vmul.f32	s14, s14, s8
 80117ae:	eea5 5a87 	vfma.f32	s10, s11, s14
 80117b2:	edd0 5a08 	vldr	s11, [r0, #32]
 80117b6:	ee31 1a65 	vsub.f32	s2, s2, s11
 80117ba:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80117be:	ee25 5a06 	vmul.f32	s10, s10, s12
 80117c2:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 80117c6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80117c8:	698b      	ldr	r3, [r1, #24]
 80117ca:	1a9b      	subs	r3, r3, r2
 80117cc:	ee07 3a10 	vmov	s14, r3
 80117d0:	684b      	ldr	r3, [r1, #4]
 80117d2:	1a9b      	subs	r3, r3, r2
 80117d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80117d8:	ee01 3a90 	vmov	s3, r3
 80117dc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80117e0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80117e4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80117e8:	ee61 1a84 	vmul.f32	s3, s3, s8
 80117ec:	eea1 7a21 	vfma.f32	s14, s2, s3
 80117f0:	ee27 7a03 	vmul.f32	s14, s14, s6
 80117f4:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80117f8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80117fa:	694a      	ldr	r2, [r1, #20]
 80117fc:	1b13      	subs	r3, r2, r4
 80117fe:	ee03 3a10 	vmov	s6, r3
 8011802:	680b      	ldr	r3, [r1, #0]
 8011804:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8011808:	1b1b      	subs	r3, r3, r4
 801180a:	ee23 3a04 	vmul.f32	s6, s6, s8
 801180e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8011812:	ee03 3a10 	vmov	s6, r3
 8011816:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801181a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801181e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8011822:	ee25 6a86 	vmul.f32	s12, s11, s12
 8011826:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801182a:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 801182e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8011832:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8011836:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801183a:	dd13      	ble.n	8011864 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801183c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011840:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8011844:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8011846:	eee3 7a87 	vfma.f32	s15, s7, s14
 801184a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801184e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011852:	dd15      	ble.n	8011880 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8011854:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011858:	6403      	str	r3, [r0, #64]	@ 0x40
 801185a:	bd70      	pop	{r4, r5, r6, pc}
 801185c:	4623      	mov	r3, r4
 801185e:	e6fd      	b.n	801165c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011860:	462a      	mov	r2, r5
 8011862:	e706      	b.n	8011672 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8011864:	d502      	bpl.n	801186c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8011866:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801186a:	e7e9      	b.n	8011840 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801186c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8011870:	eea3 2a85 	vfma.f32	s4, s7, s10
 8011874:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8011878:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801187c:	dade      	bge.n	801183c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801187e:	e7f2      	b.n	8011866 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8011880:	d502      	bpl.n	8011888 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8011882:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8011886:	e7e7      	b.n	8011858 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8011888:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801188c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8011890:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8011894:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011898:	dadc      	bge.n	8011854 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801189a:	e7f2      	b.n	8011882 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801189c:	3d800000 	.word	0x3d800000

080118a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80118a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80118a4:	2714      	movs	r7, #20
 80118a6:	435f      	muls	r7, r3
 80118a8:	eb02 0c07 	add.w	ip, r2, r7
 80118ac:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80118b0:	f115 0e0f 	adds.w	lr, r5, #15
 80118b4:	f100 80a2 	bmi.w	80119fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80118b8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80118bc:	9c08      	ldr	r4, [sp, #32]
 80118be:	2614      	movs	r6, #20
 80118c0:	f8c0 e014 	str.w	lr, [r0, #20]
 80118c4:	4366      	muls	r6, r4
 80118c6:	eb02 0806 	add.w	r8, r2, r6
 80118ca:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80118ce:	f115 040f 	adds.w	r4, r5, #15
 80118d2:	f100 809f 	bmi.w	8011a14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80118d6:	1124      	asrs	r4, r4, #4
 80118d8:	eba4 040e 	sub.w	r4, r4, lr
 80118dc:	6184      	str	r4, [r0, #24]
 80118de:	2c00      	cmp	r4, #0
 80118e0:	f000 808a 	beq.w	80119f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80118e4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80118e8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80118ec:	5995      	ldr	r5, [r2, r6]
 80118ee:	eba4 0809 	sub.w	r8, r4, r9
 80118f2:	59d4      	ldr	r4, [r2, r7]
 80118f4:	eba5 0a04 	sub.w	sl, r5, r4
 80118f8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80118fc:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8011900:	fb0e fe05 	mul.w	lr, lr, r5
 8011904:	fb0a ee19 	mls	lr, sl, r9, lr
 8011908:	fb08 e404 	mla	r4, r8, r4, lr
 801190c:	3c01      	subs	r4, #1
 801190e:	19a4      	adds	r4, r4, r6
 8011910:	f100 808c 	bmi.w	8011a2c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8011914:	fb94 fef6 	sdiv	lr, r4, r6
 8011918:	fb06 441e 	mls	r4, r6, lr, r4
 801191c:	f8c0 e000 	str.w	lr, [r0]
 8011920:	6104      	str	r4, [r0, #16]
 8011922:	2d00      	cmp	r5, #0
 8011924:	f2c0 8095 	blt.w	8011a52 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8011928:	fb95 f4f6 	sdiv	r4, r5, r6
 801192c:	fb06 5514 	mls	r5, r6, r4, r5
 8011930:	6044      	str	r4, [r0, #4]
 8011932:	6085      	str	r5, [r0, #8]
 8011934:	60c6      	str	r6, [r0, #12]
 8011936:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801193a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801193e:	6945      	ldr	r5, [r0, #20]
 8011940:	59d2      	ldr	r2, [r2, r7]
 8011942:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8011946:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 8011a74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801194a:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801194e:	ee07 4a10 	vmov	s14, r4
 8011952:	6804      	ldr	r4, [r0, #0]
 8011954:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8011958:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801195c:	ee07 2a90 	vmov	s15, r2
 8011960:	ee27 7a26 	vmul.f32	s14, s14, s13
 8011964:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011968:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801196c:	edd3 6a00 	vldr	s13, [r3]
 8011970:	eee6 6a07 	vfma.f32	s13, s12, s14
 8011974:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8011978:	eee6 6a27 	vfma.f32	s13, s12, s15
 801197c:	edc0 6a07 	vstr	s13, [r0, #28]
 8011980:	edd0 6a01 	vldr	s13, [r0, #4]
 8011984:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8011988:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801198c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8011990:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8011994:	ed80 6a08 	vstr	s12, [r0, #32]
 8011998:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 801199a:	6242      	str	r2, [r0, #36]	@ 0x24
 801199c:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 80119a0:	ed93 6a03 	vldr	s12, [r3, #12]
 80119a4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80119a8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80119ac:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80119b0:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 80119b4:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80119b8:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 80119bc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80119c0:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 80119c4:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80119c6:	6302      	str	r2, [r0, #48]	@ 0x30
 80119c8:	ed93 6a06 	vldr	s12, [r3, #24]
 80119cc:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 80119d0:	eea5 6a87 	vfma.f32	s12, s11, s14
 80119d4:	eeb0 7a46 	vmov.f32	s14, s12
 80119d8:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 80119dc:	eea6 7a27 	vfma.f32	s14, s12, s15
 80119e0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80119e4:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 80119e8:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 80119ec:	eee6 7a87 	vfma.f32	s15, s13, s14
 80119f0:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 80119f4:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80119f6:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80119f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80119fc:	2410      	movs	r4, #16
 80119fe:	f1c5 0501 	rsb	r5, r5, #1
 8011a02:	fb9e fef4 	sdiv	lr, lr, r4
 8011a06:	f015 050f 	ands.w	r5, r5, #15
 8011a0a:	bf18      	it	ne
 8011a0c:	2501      	movne	r5, #1
 8011a0e:	ebae 0e05 	sub.w	lr, lr, r5
 8011a12:	e753      	b.n	80118bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8011a14:	f04f 0910 	mov.w	r9, #16
 8011a18:	f1c5 0501 	rsb	r5, r5, #1
 8011a1c:	fb94 f4f9 	sdiv	r4, r4, r9
 8011a20:	f015 050f 	ands.w	r5, r5, #15
 8011a24:	bf18      	it	ne
 8011a26:	2501      	movne	r5, #1
 8011a28:	1b64      	subs	r4, r4, r5
 8011a2a:	e755      	b.n	80118d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8011a2c:	4264      	negs	r4, r4
 8011a2e:	fb94 fef6 	sdiv	lr, r4, r6
 8011a32:	f1ce 0800 	rsb	r8, lr, #0
 8011a36:	fb06 441e 	mls	r4, r6, lr, r4
 8011a3a:	f8c0 8000 	str.w	r8, [r0]
 8011a3e:	6104      	str	r4, [r0, #16]
 8011a40:	2c00      	cmp	r4, #0
 8011a42:	f43f af6e 	beq.w	8011922 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8011a46:	ea6f 0e0e 	mvn.w	lr, lr
 8011a4a:	1b34      	subs	r4, r6, r4
 8011a4c:	f8c0 e000 	str.w	lr, [r0]
 8011a50:	e766      	b.n	8011920 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8011a52:	426d      	negs	r5, r5
 8011a54:	fb95 f4f6 	sdiv	r4, r5, r6
 8011a58:	f1c4 0e00 	rsb	lr, r4, #0
 8011a5c:	fb06 5514 	mls	r5, r6, r4, r5
 8011a60:	f8c0 e004 	str.w	lr, [r0, #4]
 8011a64:	6085      	str	r5, [r0, #8]
 8011a66:	2d00      	cmp	r5, #0
 8011a68:	f43f af64 	beq.w	8011934 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8011a6c:	43e4      	mvns	r4, r4
 8011a6e:	1b75      	subs	r5, r6, r5
 8011a70:	6044      	str	r4, [r0, #4]
 8011a72:	e75e      	b.n	8011932 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8011a74:	3d800000 	.word	0x3d800000

08011a78 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8011a78:	4602      	mov	r2, r0
 8011a7a:	b148      	cbz	r0, 8011a90 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8011a7c:	2300      	movs	r3, #0
 8011a7e:	b298      	uxth	r0, r3
 8011a80:	3301      	adds	r3, #1
 8011a82:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8011a86:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8011a8a:	2900      	cmp	r1, #0
 8011a8c:	d1f7      	bne.n	8011a7e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8011a8e:	4770      	bx	lr
 8011a90:	4770      	bx	lr

08011a92 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8011a92:	b530      	push	{r4, r5, lr}
 8011a94:	4604      	mov	r4, r0
 8011a96:	b159      	cbz	r1, 8011ab0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8011a98:	b148      	cbz	r0, 8011aae <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8011a9a:	2300      	movs	r3, #0
 8011a9c:	b298      	uxth	r0, r3
 8011a9e:	4282      	cmp	r2, r0
 8011aa0:	d905      	bls.n	8011aae <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8011aa2:	5ccd      	ldrb	r5, [r1, r3]
 8011aa4:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8011aa8:	3301      	adds	r3, #1
 8011aaa:	2d00      	cmp	r5, #0
 8011aac:	d1f6      	bne.n	8011a9c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8011aae:	bd30      	pop	{r4, r5, pc}
 8011ab0:	4608      	mov	r0, r1
 8011ab2:	e7fc      	b.n	8011aae <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08011ab4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8011ab4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011ab6:	b08b      	sub	sp, #44	@ 0x2c
 8011ab8:	468c      	mov	ip, r1
 8011aba:	4604      	mov	r4, r0
 8011abc:	2100      	movs	r1, #0
 8011abe:	261f      	movs	r6, #31
 8011ac0:	af01      	add	r7, sp, #4
 8011ac2:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8011ac6:	1e71      	subs	r1, r6, #1
 8011ac8:	fb94 fef3 	sdiv	lr, r4, r3
 8011acc:	fb03 441e 	mls	r4, r3, lr, r4
 8011ad0:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8011ad4:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8011ad8:	b2ec      	uxtb	r4, r5
 8011ada:	2d09      	cmp	r5, #9
 8011adc:	bfd4      	ite	le
 8011ade:	3430      	addle	r4, #48	@ 0x30
 8011ae0:	3457      	addgt	r4, #87	@ 0x57
 8011ae2:	b2e4      	uxtb	r4, r4
 8011ae4:	55bc      	strb	r4, [r7, r6]
 8011ae6:	4674      	mov	r4, lr
 8011ae8:	b974      	cbnz	r4, 8011b08 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8011aea:	2800      	cmp	r0, #0
 8011aec:	da05      	bge.n	8011afa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8011aee:	ab0a      	add	r3, sp, #40	@ 0x28
 8011af0:	4419      	add	r1, r3
 8011af2:	232d      	movs	r3, #45	@ 0x2d
 8011af4:	f801 3c24 	strb.w	r3, [r1, #-36]
 8011af8:	1eb1      	subs	r1, r6, #2
 8011afa:	3101      	adds	r1, #1
 8011afc:	4660      	mov	r0, ip
 8011afe:	4439      	add	r1, r7
 8011b00:	f7ff ffc7 	bl	8011a92 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8011b04:	b00b      	add	sp, #44	@ 0x2c
 8011b06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011b08:	460e      	mov	r6, r1
 8011b0a:	e7dc      	b.n	8011ac6 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08011b0c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8011b0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011b0e:	468c      	mov	ip, r1
 8011b10:	b08b      	sub	sp, #44	@ 0x2c
 8011b12:	2100      	movs	r1, #0
 8011b14:	ae01      	add	r6, sp, #4
 8011b16:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8011b1a:	211f      	movs	r1, #31
 8011b1c:	fbb0 f7f3 	udiv	r7, r0, r3
 8011b20:	fb03 0517 	mls	r5, r3, r7, r0
 8011b24:	4638      	mov	r0, r7
 8011b26:	b2ec      	uxtb	r4, r5
 8011b28:	2d09      	cmp	r5, #9
 8011b2a:	bfd4      	ite	le
 8011b2c:	3430      	addle	r4, #48	@ 0x30
 8011b2e:	3457      	addgt	r4, #87	@ 0x57
 8011b30:	b2e4      	uxtb	r4, r4
 8011b32:	558c      	strb	r4, [r1, r6]
 8011b34:	1e4c      	subs	r4, r1, #1
 8011b36:	b92f      	cbnz	r7, 8011b44 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8011b38:	4431      	add	r1, r6
 8011b3a:	4660      	mov	r0, ip
 8011b3c:	f7ff ffa9 	bl	8011a92 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8011b40:	b00b      	add	sp, #44	@ 0x2c
 8011b42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011b44:	4621      	mov	r1, r4
 8011b46:	e7e9      	b.n	8011b1c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08011b48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8011b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b4c:	b085      	sub	sp, #20
 8011b4e:	4691      	mov	r9, r2
 8011b50:	6802      	ldr	r2, [r0, #0]
 8011b52:	4688      	mov	r8, r1
 8011b54:	461c      	mov	r4, r3
 8011b56:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 8011b5a:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8011b5e:	4683      	mov	fp, r0
 8011b60:	4610      	mov	r0, r2
 8011b62:	9103      	str	r1, [sp, #12]
 8011b64:	9302      	str	r3, [sp, #8]
 8011b66:	9201      	str	r2, [sp, #4]
 8011b68:	f7ff ff86 	bl	8011a78 <_ZN8touchgfx7Unicode6strlenEPKt>
 8011b6c:	f1b8 0f00 	cmp.w	r8, #0
 8011b70:	bf0c      	ite	eq
 8011b72:	4684      	moveq	ip, r0
 8011b74:	f100 0c01 	addne.w	ip, r0, #1
 8011b78:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 8011b7c:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8011b80:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8011b82:	fa1f fc8c 	uxth.w	ip, ip
 8011b86:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8011b88:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8011b8c:	9903      	ldr	r1, [sp, #12]
 8011b8e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8011b92:	d041      	beq.n	8011c18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8011b94:	d834      	bhi.n	8011c00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8011b96:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8011b9a:	d059      	beq.n	8011c50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8011b9c:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8011ba0:	d03a      	beq.n	8011c18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8011ba2:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8011ba6:	d034      	beq.n	8011c12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8011ba8:	2400      	movs	r4, #0
 8011baa:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8011bae:	3a01      	subs	r2, #1
 8011bb0:	b169      	cbz	r1, 8011bce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8011bb2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8011bb4:	458c      	cmp	ip, r1
 8011bb6:	da09      	bge.n	8011bcc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8011bb8:	eba1 010c 	sub.w	r1, r1, ip
 8011bbc:	b289      	uxth	r1, r1
 8011bbe:	b933      	cbnz	r3, 8011bce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8011bc0:	2e00      	cmp	r6, #0
 8011bc2:	d051      	beq.n	8011c68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8011bc4:	2800      	cmp	r0, #0
 8011bc6:	d04f      	beq.n	8011c68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8011bc8:	440c      	add	r4, r1
 8011bca:	b2a4      	uxth	r4, r4
 8011bcc:	2100      	movs	r1, #0
 8011bce:	682b      	ldr	r3, [r5, #0]
 8011bd0:	4293      	cmp	r3, r2
 8011bd2:	da07      	bge.n	8011be4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8011bd4:	f1b8 0f00 	cmp.w	r8, #0
 8011bd8:	d004      	beq.n	8011be4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8011bda:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8011bde:	682b      	ldr	r3, [r5, #0]
 8011be0:	3301      	adds	r3, #1
 8011be2:	602b      	str	r3, [r5, #0]
 8011be4:	2730      	movs	r7, #48	@ 0x30
 8011be6:	2c00      	cmp	r4, #0
 8011be8:	d04e      	beq.n	8011c88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8011bea:	682e      	ldr	r6, [r5, #0]
 8011bec:	3c01      	subs	r4, #1
 8011bee:	42b2      	cmp	r2, r6
 8011bf0:	b2a4      	uxth	r4, r4
 8011bf2:	dd49      	ble.n	8011c88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8011bf4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8011bf8:	682b      	ldr	r3, [r5, #0]
 8011bfa:	3301      	adds	r3, #1
 8011bfc:	602b      	str	r3, [r5, #0]
 8011bfe:	e7f2      	b.n	8011be6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8011c00:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8011c04:	d01d      	beq.n	8011c42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8011c06:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8011c0a:	d002      	beq.n	8011c12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8011c0c:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8011c10:	e7c9      	b.n	8011ba6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8011c12:	4684      	mov	ip, r0
 8011c14:	f04f 0800 	mov.w	r8, #0
 8011c18:	2c00      	cmp	r4, #0
 8011c1a:	d0c6      	beq.n	8011baa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8011c1c:	b947      	cbnz	r7, 8011c30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8011c1e:	2801      	cmp	r0, #1
 8011c20:	d106      	bne.n	8011c30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8011c22:	8814      	ldrh	r4, [r2, #0]
 8011c24:	2c30      	cmp	r4, #48	@ 0x30
 8011c26:	bf02      	ittt	eq
 8011c28:	3202      	addeq	r2, #2
 8011c2a:	4638      	moveq	r0, r7
 8011c2c:	f8cb 2000 	streq.w	r2, [fp]
 8011c30:	45bc      	cmp	ip, r7
 8011c32:	da14      	bge.n	8011c5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8011c34:	b2bf      	uxth	r7, r7
 8011c36:	eba7 040c 	sub.w	r4, r7, ip
 8011c3a:	46bc      	mov	ip, r7
 8011c3c:	b2a4      	uxth	r4, r4
 8011c3e:	2600      	movs	r6, #0
 8011c40:	e7b3      	b.n	8011baa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8011c42:	4684      	mov	ip, r0
 8011c44:	b16c      	cbz	r4, 8011c62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8011c46:	42b8      	cmp	r0, r7
 8011c48:	dd00      	ble.n	8011c4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8011c4a:	b2b8      	uxth	r0, r7
 8011c4c:	2400      	movs	r4, #0
 8011c4e:	e003      	b.n	8011c58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8011c50:	f04f 0c01 	mov.w	ip, #1
 8011c54:	2400      	movs	r4, #0
 8011c56:	4660      	mov	r0, ip
 8011c58:	4626      	mov	r6, r4
 8011c5a:	46a0      	mov	r8, r4
 8011c5c:	e7a5      	b.n	8011baa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8011c5e:	2400      	movs	r4, #0
 8011c60:	e7ed      	b.n	8011c3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8011c62:	4626      	mov	r6, r4
 8011c64:	46a0      	mov	r8, r4
 8011c66:	e7a0      	b.n	8011baa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8011c68:	2900      	cmp	r1, #0
 8011c6a:	d0b0      	beq.n	8011bce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8011c6c:	2720      	movs	r7, #32
 8011c6e:	682e      	ldr	r6, [r5, #0]
 8011c70:	2900      	cmp	r1, #0
 8011c72:	d0ac      	beq.n	8011bce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8011c74:	3901      	subs	r1, #1
 8011c76:	4296      	cmp	r6, r2
 8011c78:	b289      	uxth	r1, r1
 8011c7a:	daa7      	bge.n	8011bcc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8011c7c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8011c80:	682b      	ldr	r3, [r5, #0]
 8011c82:	3301      	adds	r3, #1
 8011c84:	602b      	str	r3, [r5, #0]
 8011c86:	e7f2      	b.n	8011c6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8011c88:	b188      	cbz	r0, 8011cae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8011c8a:	682b      	ldr	r3, [r5, #0]
 8011c8c:	3801      	subs	r0, #1
 8011c8e:	429a      	cmp	r2, r3
 8011c90:	b280      	uxth	r0, r0
 8011c92:	dd0c      	ble.n	8011cae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8011c94:	f8db 3000 	ldr.w	r3, [fp]
 8011c98:	1c9c      	adds	r4, r3, #2
 8011c9a:	f8cb 4000 	str.w	r4, [fp]
 8011c9e:	881c      	ldrh	r4, [r3, #0]
 8011ca0:	682b      	ldr	r3, [r5, #0]
 8011ca2:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8011ca6:	682b      	ldr	r3, [r5, #0]
 8011ca8:	3301      	adds	r3, #1
 8011caa:	602b      	str	r3, [r5, #0]
 8011cac:	e7ec      	b.n	8011c88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8011cae:	2620      	movs	r6, #32
 8011cb0:	b151      	cbz	r1, 8011cc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8011cb2:	6828      	ldr	r0, [r5, #0]
 8011cb4:	3901      	subs	r1, #1
 8011cb6:	4282      	cmp	r2, r0
 8011cb8:	b289      	uxth	r1, r1
 8011cba:	dd05      	ble.n	8011cc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8011cbc:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8011cc0:	682b      	ldr	r3, [r5, #0]
 8011cc2:	3301      	adds	r3, #1
 8011cc4:	602b      	str	r3, [r5, #0]
 8011cc6:	e7f3      	b.n	8011cb0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8011cc8:	b005      	add	sp, #20
 8011cca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011cce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8011cce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011cd2:	2400      	movs	r4, #0
 8011cd4:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8011cd8:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8011cdc:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8011ce0:	8014      	strh	r4, [r2, #0]
 8011ce2:	701c      	strb	r4, [r3, #0]
 8011ce4:	f888 4000 	strb.w	r4, [r8]
 8011ce8:	f88c 4000 	strb.w	r4, [ip]
 8011cec:	f88e 4000 	strb.w	r4, [lr]
 8011cf0:	703c      	strb	r4, [r7, #0]
 8011cf2:	6804      	ldr	r4, [r0, #0]
 8011cf4:	b1a4      	cbz	r4, 8011d20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8011cf6:	8824      	ldrh	r4, [r4, #0]
 8011cf8:	f04f 0901 	mov.w	r9, #1
 8011cfc:	b314      	cbz	r4, 8011d44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8011cfe:	2c2b      	cmp	r4, #43	@ 0x2b
 8011d00:	d001      	beq.n	8011d06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8011d02:	2c20      	cmp	r4, #32
 8011d04:	d110      	bne.n	8011d28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8011d06:	8014      	strh	r4, [r2, #0]
 8011d08:	6804      	ldr	r4, [r0, #0]
 8011d0a:	b10c      	cbz	r4, 8011d10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8011d0c:	3402      	adds	r4, #2
 8011d0e:	6004      	str	r4, [r0, #0]
 8011d10:	680c      	ldr	r4, [r1, #0]
 8011d12:	b10c      	cbz	r4, 8011d18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8011d14:	3401      	adds	r4, #1
 8011d16:	600c      	str	r4, [r1, #0]
 8011d18:	6804      	ldr	r4, [r0, #0]
 8011d1a:	b17c      	cbz	r4, 8011d3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8011d1c:	8824      	ldrh	r4, [r4, #0]
 8011d1e:	e7ed      	b.n	8011cfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8011d20:	680c      	ldr	r4, [r1, #0]
 8011d22:	b17c      	cbz	r4, 8011d44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8011d24:	7824      	ldrb	r4, [r4, #0]
 8011d26:	e7e7      	b.n	8011cf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8011d28:	2c2d      	cmp	r4, #45	@ 0x2d
 8011d2a:	d102      	bne.n	8011d32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8011d2c:	f883 9000 	strb.w	r9, [r3]
 8011d30:	e7ea      	b.n	8011d08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8011d32:	2c23      	cmp	r4, #35	@ 0x23
 8011d34:	d107      	bne.n	8011d46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8011d36:	f888 9000 	strb.w	r9, [r8]
 8011d3a:	e7e5      	b.n	8011d08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8011d3c:	680c      	ldr	r4, [r1, #0]
 8011d3e:	b10c      	cbz	r4, 8011d44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8011d40:	7824      	ldrb	r4, [r4, #0]
 8011d42:	e7db      	b.n	8011cfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8011d44:	2400      	movs	r4, #0
 8011d46:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8011d4a:	2b09      	cmp	r3, #9
 8011d4c:	d901      	bls.n	8011d52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8011d4e:	2c2a      	cmp	r4, #42	@ 0x2a
 8011d50:	d122      	bne.n	8011d98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8011d52:	2301      	movs	r3, #1
 8011d54:	2c30      	cmp	r4, #48	@ 0x30
 8011d56:	f88e 3000 	strb.w	r3, [lr]
 8011d5a:	d10d      	bne.n	8011d78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8011d5c:	f88c 3000 	strb.w	r3, [ip]
 8011d60:	6803      	ldr	r3, [r0, #0]
 8011d62:	b10b      	cbz	r3, 8011d68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8011d64:	3302      	adds	r3, #2
 8011d66:	6003      	str	r3, [r0, #0]
 8011d68:	680b      	ldr	r3, [r1, #0]
 8011d6a:	b10b      	cbz	r3, 8011d70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8011d6c:	3301      	adds	r3, #1
 8011d6e:	600b      	str	r3, [r1, #0]
 8011d70:	6803      	ldr	r3, [r0, #0]
 8011d72:	2b00      	cmp	r3, #0
 8011d74:	d02f      	beq.n	8011dd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8011d76:	881c      	ldrh	r4, [r3, #0]
 8011d78:	2c2a      	cmp	r4, #42	@ 0x2a
 8011d7a:	d135      	bne.n	8011de8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8011d7c:	f04f 33ff 	mov.w	r3, #4294967295
 8011d80:	6033      	str	r3, [r6, #0]
 8011d82:	6803      	ldr	r3, [r0, #0]
 8011d84:	b10b      	cbz	r3, 8011d8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8011d86:	3302      	adds	r3, #2
 8011d88:	6003      	str	r3, [r0, #0]
 8011d8a:	680b      	ldr	r3, [r1, #0]
 8011d8c:	b10b      	cbz	r3, 8011d92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8011d8e:	3301      	adds	r3, #1
 8011d90:	600b      	str	r3, [r1, #0]
 8011d92:	6803      	ldr	r3, [r0, #0]
 8011d94:	b31b      	cbz	r3, 8011dde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8011d96:	881c      	ldrh	r4, [r3, #0]
 8011d98:	2c2e      	cmp	r4, #46	@ 0x2e
 8011d9a:	d11a      	bne.n	8011dd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8011d9c:	2301      	movs	r3, #1
 8011d9e:	703b      	strb	r3, [r7, #0]
 8011da0:	6803      	ldr	r3, [r0, #0]
 8011da2:	b10b      	cbz	r3, 8011da8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8011da4:	3302      	adds	r3, #2
 8011da6:	6003      	str	r3, [r0, #0]
 8011da8:	680b      	ldr	r3, [r1, #0]
 8011daa:	b10b      	cbz	r3, 8011db0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8011dac:	3301      	adds	r3, #1
 8011dae:	600b      	str	r3, [r1, #0]
 8011db0:	6803      	ldr	r3, [r0, #0]
 8011db2:	2b00      	cmp	r3, #0
 8011db4:	d036      	beq.n	8011e24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8011db6:	881b      	ldrh	r3, [r3, #0]
 8011db8:	2b2a      	cmp	r3, #42	@ 0x2a
 8011dba:	d137      	bne.n	8011e2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8011dbc:	f04f 33ff 	mov.w	r3, #4294967295
 8011dc0:	602b      	str	r3, [r5, #0]
 8011dc2:	6803      	ldr	r3, [r0, #0]
 8011dc4:	b10b      	cbz	r3, 8011dca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8011dc6:	3302      	adds	r3, #2
 8011dc8:	6003      	str	r3, [r0, #0]
 8011dca:	680b      	ldr	r3, [r1, #0]
 8011dcc:	b10b      	cbz	r3, 8011dd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8011dce:	3301      	adds	r3, #1
 8011dd0:	600b      	str	r3, [r1, #0]
 8011dd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011dd6:	680c      	ldr	r4, [r1, #0]
 8011dd8:	b134      	cbz	r4, 8011de8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8011dda:	7824      	ldrb	r4, [r4, #0]
 8011ddc:	e7cc      	b.n	8011d78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8011dde:	680b      	ldr	r3, [r1, #0]
 8011de0:	2b00      	cmp	r3, #0
 8011de2:	d0f6      	beq.n	8011dd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8011de4:	781c      	ldrb	r4, [r3, #0]
 8011de6:	e7d7      	b.n	8011d98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8011de8:	2300      	movs	r3, #0
 8011dea:	220a      	movs	r2, #10
 8011dec:	6033      	str	r3, [r6, #0]
 8011dee:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8011df2:	fa1f f38c 	uxth.w	r3, ip
 8011df6:	2b09      	cmp	r3, #9
 8011df8:	d8ce      	bhi.n	8011d98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8011dfa:	6833      	ldr	r3, [r6, #0]
 8011dfc:	fb02 c303 	mla	r3, r2, r3, ip
 8011e00:	6033      	str	r3, [r6, #0]
 8011e02:	6803      	ldr	r3, [r0, #0]
 8011e04:	b10b      	cbz	r3, 8011e0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8011e06:	3302      	adds	r3, #2
 8011e08:	6003      	str	r3, [r0, #0]
 8011e0a:	680b      	ldr	r3, [r1, #0]
 8011e0c:	b10b      	cbz	r3, 8011e12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8011e0e:	3301      	adds	r3, #1
 8011e10:	600b      	str	r3, [r1, #0]
 8011e12:	6803      	ldr	r3, [r0, #0]
 8011e14:	b10b      	cbz	r3, 8011e1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8011e16:	881c      	ldrh	r4, [r3, #0]
 8011e18:	e7e9      	b.n	8011dee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8011e1a:	680c      	ldr	r4, [r1, #0]
 8011e1c:	2c00      	cmp	r4, #0
 8011e1e:	d0e6      	beq.n	8011dee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8011e20:	7824      	ldrb	r4, [r4, #0]
 8011e22:	e7e4      	b.n	8011dee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8011e24:	680b      	ldr	r3, [r1, #0]
 8011e26:	b10b      	cbz	r3, 8011e2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8011e28:	781b      	ldrb	r3, [r3, #0]
 8011e2a:	e7c5      	b.n	8011db8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8011e2c:	2200      	movs	r2, #0
 8011e2e:	240a      	movs	r4, #10
 8011e30:	602a      	str	r2, [r5, #0]
 8011e32:	3b30      	subs	r3, #48	@ 0x30
 8011e34:	682a      	ldr	r2, [r5, #0]
 8011e36:	b29e      	uxth	r6, r3
 8011e38:	2e09      	cmp	r6, #9
 8011e3a:	d813      	bhi.n	8011e64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8011e3c:	fb04 3302 	mla	r3, r4, r2, r3
 8011e40:	602b      	str	r3, [r5, #0]
 8011e42:	6803      	ldr	r3, [r0, #0]
 8011e44:	b10b      	cbz	r3, 8011e4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8011e46:	3302      	adds	r3, #2
 8011e48:	6003      	str	r3, [r0, #0]
 8011e4a:	680b      	ldr	r3, [r1, #0]
 8011e4c:	b10b      	cbz	r3, 8011e52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8011e4e:	3301      	adds	r3, #1
 8011e50:	600b      	str	r3, [r1, #0]
 8011e52:	6803      	ldr	r3, [r0, #0]
 8011e54:	b10b      	cbz	r3, 8011e5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8011e56:	881b      	ldrh	r3, [r3, #0]
 8011e58:	e7eb      	b.n	8011e32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8011e5a:	680b      	ldr	r3, [r1, #0]
 8011e5c:	2b00      	cmp	r3, #0
 8011e5e:	d0e8      	beq.n	8011e32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8011e60:	781b      	ldrb	r3, [r3, #0]
 8011e62:	e7e6      	b.n	8011e32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8011e64:	2a06      	cmp	r2, #6
 8011e66:	bfa8      	it	ge
 8011e68:	2206      	movge	r2, #6
 8011e6a:	602a      	str	r2, [r5, #0]
 8011e6c:	e7b1      	b.n	8011dd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08011e6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8011e6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e72:	b0a3      	sub	sp, #140	@ 0x8c
 8011e74:	2600      	movs	r6, #0
 8011e76:	4607      	mov	r7, r0
 8011e78:	4688      	mov	r8, r1
 8011e7a:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 8011e7e:	4631      	mov	r1, r6
 8011e80:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8011e82:	4648      	mov	r0, r9
 8011e84:	960d      	str	r6, [sp, #52]	@ 0x34
 8011e86:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8011e8a:	2242      	movs	r2, #66	@ 0x42
 8011e8c:	f00f f966 	bl	802115c <memset>
 8011e90:	b15f      	cbz	r7, 8011eaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8011e92:	f108 3aff 	add.w	sl, r8, #4294967295
 8011e96:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011e98:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011e9a:	b152      	cbz	r2, 8011eb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8011e9c:	8812      	ldrh	r2, [r2, #0]
 8011e9e:	b10a      	cbz	r2, 8011ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8011ea0:	459a      	cmp	sl, r3
 8011ea2:	dc2e      	bgt.n	8011f02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8011ea4:	2200      	movs	r2, #0
 8011ea6:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8011eaa:	4638      	mov	r0, r7
 8011eac:	b023      	add	sp, #140	@ 0x8c
 8011eae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011eb2:	9a08      	ldr	r2, [sp, #32]
 8011eb4:	2a00      	cmp	r2, #0
 8011eb6:	d0f5      	beq.n	8011ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8011eb8:	7812      	ldrb	r2, [r2, #0]
 8011eba:	e7f0      	b.n	8011e9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8011ebc:	2d00      	cmp	r5, #0
 8011ebe:	d0ea      	beq.n	8011e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8011ec0:	782a      	ldrb	r2, [r5, #0]
 8011ec2:	b142      	cbz	r2, 8011ed6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8011ec4:	2a25      	cmp	r2, #37	@ 0x25
 8011ec6:	d001      	beq.n	8011ecc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8011ec8:	459a      	cmp	sl, r3
 8011eca:	dc08      	bgt.n	8011ede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8011ecc:	f1bb 0f00 	cmp.w	fp, #0
 8011ed0:	d121      	bne.n	8011f16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8011ed2:	2d00      	cmp	r5, #0
 8011ed4:	d0df      	beq.n	8011e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8011ed6:	782a      	ldrb	r2, [r5, #0]
 8011ed8:	f04f 0b00 	mov.w	fp, #0
 8011edc:	e01d      	b.n	8011f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8011ede:	f1bb 0f00 	cmp.w	fp, #0
 8011ee2:	d077      	beq.n	8011fd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 8011ee4:	f8bb 2000 	ldrh.w	r2, [fp]
 8011ee8:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8011eec:	f1bb 0f00 	cmp.w	fp, #0
 8011ef0:	d002      	beq.n	8011ef8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8011ef2:	f10b 0202 	add.w	r2, fp, #2
 8011ef6:	9209      	str	r2, [sp, #36]	@ 0x24
 8011ef8:	b10d      	cbz	r5, 8011efe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8011efa:	3501      	adds	r5, #1
 8011efc:	9508      	str	r5, [sp, #32]
 8011efe:	3301      	adds	r3, #1
 8011f00:	930d      	str	r3, [sp, #52]	@ 0x34
 8011f02:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011f04:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8011f08:	f1bb 0f00 	cmp.w	fp, #0
 8011f0c:	d0d6      	beq.n	8011ebc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8011f0e:	f8bb 2000 	ldrh.w	r2, [fp]
 8011f12:	2a00      	cmp	r2, #0
 8011f14:	d1d6      	bne.n	8011ec4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8011f16:	f8bb 2000 	ldrh.w	r2, [fp]
 8011f1a:	2a00      	cmp	r2, #0
 8011f1c:	d0bb      	beq.n	8011e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8011f1e:	459a      	cmp	sl, r3
 8011f20:	ddb9      	ble.n	8011e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8011f22:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8011f26:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8011f2a:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8011f2e:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8011f32:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8011f36:	960e      	str	r6, [sp, #56]	@ 0x38
 8011f38:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8011f3c:	960f      	str	r6, [sp, #60]	@ 0x3c
 8011f3e:	f1bb 0f00 	cmp.w	fp, #0
 8011f42:	d002      	beq.n	8011f4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8011f44:	f10b 0302 	add.w	r3, fp, #2
 8011f48:	9309      	str	r3, [sp, #36]	@ 0x24
 8011f4a:	b10d      	cbz	r5, 8011f50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8011f4c:	1c6b      	adds	r3, r5, #1
 8011f4e:	9308      	str	r3, [sp, #32]
 8011f50:	ab0f      	add	r3, sp, #60	@ 0x3c
 8011f52:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8011f56:	a908      	add	r1, sp, #32
 8011f58:	a809      	add	r0, sp, #36	@ 0x24
 8011f5a:	9305      	str	r3, [sp, #20]
 8011f5c:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8011f60:	9304      	str	r3, [sp, #16]
 8011f62:	ab0e      	add	r3, sp, #56	@ 0x38
 8011f64:	9303      	str	r3, [sp, #12]
 8011f66:	ab0c      	add	r3, sp, #48	@ 0x30
 8011f68:	9302      	str	r3, [sp, #8]
 8011f6a:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8011f6e:	9301      	str	r3, [sp, #4]
 8011f70:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8011f74:	9300      	str	r3, [sp, #0]
 8011f76:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8011f7a:	f7ff fea8 	bl	8011cce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8011f7e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011f80:	2b00      	cmp	r3, #0
 8011f82:	bfbf      	itttt	lt
 8011f84:	6823      	ldrlt	r3, [r4, #0]
 8011f86:	3404      	addlt	r4, #4
 8011f88:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8011f8c:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8011f8e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8011f90:	2b00      	cmp	r3, #0
 8011f92:	bfbe      	ittt	lt
 8011f94:	6823      	ldrlt	r3, [r4, #0]
 8011f96:	3404      	addlt	r4, #4
 8011f98:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8011f9c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8011fa0:	bfb8      	it	lt
 8011fa2:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8011fa4:	b1d9      	cbz	r1, 8011fde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 8011fa6:	880b      	ldrh	r3, [r1, #0]
 8011fa8:	2b69      	cmp	r3, #105	@ 0x69
 8011faa:	d01f      	beq.n	8011fec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8011fac:	d82f      	bhi.n	801200e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 8011fae:	2b58      	cmp	r3, #88	@ 0x58
 8011fb0:	d01c      	beq.n	8011fec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8011fb2:	d818      	bhi.n	8011fe6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 8011fb4:	2b25      	cmp	r3, #37	@ 0x25
 8011fb6:	d034      	beq.n	8012022 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 8011fb8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011fba:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8011fbe:	f1bb 0f00 	cmp.w	fp, #0
 8011fc2:	f000 80b7 	beq.w	8012134 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 8011fc6:	f8bb 5000 	ldrh.w	r5, [fp]
 8011fca:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8011fce:	3301      	adds	r3, #1
 8011fd0:	930d      	str	r3, [sp, #52]	@ 0x34
 8011fd2:	e029      	b.n	8012028 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8011fd4:	b10d      	cbz	r5, 8011fda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 8011fd6:	782a      	ldrb	r2, [r5, #0]
 8011fd8:	e786      	b.n	8011ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8011fda:	462a      	mov	r2, r5
 8011fdc:	e784      	b.n	8011ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8011fde:	2a00      	cmp	r2, #0
 8011fe0:	d0ea      	beq.n	8011fb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8011fe2:	7813      	ldrb	r3, [r2, #0]
 8011fe4:	e7e0      	b.n	8011fa8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 8011fe6:	3b63      	subs	r3, #99	@ 0x63
 8011fe8:	2b01      	cmp	r3, #1
 8011fea:	d8e5      	bhi.n	8011fb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8011fec:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8011ff0:	b329      	cbz	r1, 801203e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 8011ff2:	880b      	ldrh	r3, [r1, #0]
 8011ff4:	2b69      	cmp	r3, #105	@ 0x69
 8011ff6:	d063      	beq.n	80120c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8011ff8:	d825      	bhi.n	8012046 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 8011ffa:	2b63      	cmp	r3, #99	@ 0x63
 8011ffc:	d038      	beq.n	8012070 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 8011ffe:	2b64      	cmp	r3, #100	@ 0x64
 8012000:	d05e      	beq.n	80120c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8012002:	2b58      	cmp	r3, #88	@ 0x58
 8012004:	d07a      	beq.n	80120fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 8012006:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 801200a:	4625      	mov	r5, r4
 801200c:	e036      	b.n	801207c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 801200e:	2b73      	cmp	r3, #115	@ 0x73
 8012010:	d0ec      	beq.n	8011fec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8012012:	d802      	bhi.n	801201a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 8012014:	2b6f      	cmp	r3, #111	@ 0x6f
 8012016:	d1cf      	bne.n	8011fb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8012018:	e7e8      	b.n	8011fec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 801201a:	2b75      	cmp	r3, #117	@ 0x75
 801201c:	d0e6      	beq.n	8011fec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 801201e:	2b78      	cmp	r3, #120	@ 0x78
 8012020:	e7f9      	b.n	8012016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 8012022:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012024:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8012028:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801202a:	b10b      	cbz	r3, 8012030 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 801202c:	3302      	adds	r3, #2
 801202e:	9309      	str	r3, [sp, #36]	@ 0x24
 8012030:	9b08      	ldr	r3, [sp, #32]
 8012032:	2b00      	cmp	r3, #0
 8012034:	f43f af2f 	beq.w	8011e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012038:	3301      	adds	r3, #1
 801203a:	9308      	str	r3, [sp, #32]
 801203c:	e72b      	b.n	8011e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801203e:	2a00      	cmp	r2, #0
 8012040:	d0e1      	beq.n	8012006 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8012042:	7813      	ldrb	r3, [r2, #0]
 8012044:	e7d6      	b.n	8011ff4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 8012046:	2b73      	cmp	r3, #115	@ 0x73
 8012048:	d036      	beq.n	80120b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 801204a:	d807      	bhi.n	801205c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 801204c:	2b6f      	cmp	r3, #111	@ 0x6f
 801204e:	d1da      	bne.n	8012006 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8012050:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012052:	1d25      	adds	r5, r4, #4
 8012054:	2308      	movs	r3, #8
 8012056:	eba8 0202 	sub.w	r2, r8, r2
 801205a:	e049      	b.n	80120f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 801205c:	2b75      	cmp	r3, #117	@ 0x75
 801205e:	d042      	beq.n	80120e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 8012060:	2b78      	cmp	r3, #120	@ 0x78
 8012062:	d1d0      	bne.n	8012006 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8012064:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012066:	1d25      	adds	r5, r4, #4
 8012068:	2310      	movs	r3, #16
 801206a:	eba8 0202 	sub.w	r2, r8, r2
 801206e:	e03f      	b.n	80120f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8012070:	6823      	ldr	r3, [r4, #0]
 8012072:	1d25      	adds	r5, r4, #4
 8012074:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 8012078:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 801207c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801207e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8012082:	2b00      	cmp	r3, #0
 8012084:	d051      	beq.n	801212a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 8012086:	881a      	ldrh	r2, [r3, #0]
 8012088:	a80d      	add	r0, sp, #52	@ 0x34
 801208a:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 801208e:	462c      	mov	r4, r5
 8012090:	9005      	str	r0, [sp, #20]
 8012092:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8012096:	9004      	str	r0, [sp, #16]
 8012098:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801209a:	9003      	str	r0, [sp, #12]
 801209c:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 80120a0:	9002      	str	r0, [sp, #8]
 80120a2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80120a4:	9001      	str	r0, [sp, #4]
 80120a6:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 80120aa:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80120ae:	9000      	str	r0, [sp, #0]
 80120b0:	a810      	add	r0, sp, #64	@ 0x40
 80120b2:	f7ff fd49 	bl	8011b48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80120b6:	e7b7      	b.n	8012028 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 80120b8:	1d25      	adds	r5, r4, #4
 80120ba:	6823      	ldr	r3, [r4, #0]
 80120bc:	9310      	str	r3, [sp, #64]	@ 0x40
 80120be:	e7dd      	b.n	801207c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 80120c0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80120c2:	230a      	movs	r3, #10
 80120c4:	4649      	mov	r1, r9
 80120c6:	6820      	ldr	r0, [r4, #0]
 80120c8:	eba8 0202 	sub.w	r2, r8, r2
 80120cc:	1d25      	adds	r5, r4, #4
 80120ce:	b292      	uxth	r2, r2
 80120d0:	f7ff fcf0 	bl	8011ab4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80120d4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80120d8:	2b2d      	cmp	r3, #45	@ 0x2d
 80120da:	d1cf      	bne.n	801207c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 80120dc:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80120e0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80120e2:	3302      	adds	r3, #2
 80120e4:	e7ea      	b.n	80120bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 80120e6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80120e8:	1d25      	adds	r5, r4, #4
 80120ea:	230a      	movs	r3, #10
 80120ec:	eba8 0202 	sub.w	r2, r8, r2
 80120f0:	b292      	uxth	r2, r2
 80120f2:	4649      	mov	r1, r9
 80120f4:	6820      	ldr	r0, [r4, #0]
 80120f6:	f7ff fd09 	bl	8011b0c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80120fa:	e7bf      	b.n	801207c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 80120fc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80120fe:	2310      	movs	r3, #16
 8012100:	4649      	mov	r1, r9
 8012102:	6820      	ldr	r0, [r4, #0]
 8012104:	eba8 0202 	sub.w	r2, r8, r2
 8012108:	1d25      	adds	r5, r4, #4
 801210a:	b292      	uxth	r2, r2
 801210c:	f7ff fcfe 	bl	8011b0c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8012110:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 8012114:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8012118:	2b00      	cmp	r3, #0
 801211a:	d0af      	beq.n	801207c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 801211c:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8012120:	2919      	cmp	r1, #25
 8012122:	d8f7      	bhi.n	8012114 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8012124:	3b20      	subs	r3, #32
 8012126:	8013      	strh	r3, [r2, #0]
 8012128:	e7f4      	b.n	8012114 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 801212a:	9a08      	ldr	r2, [sp, #32]
 801212c:	2a00      	cmp	r2, #0
 801212e:	d0ab      	beq.n	8012088 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8012130:	7812      	ldrb	r2, [r2, #0]
 8012132:	e7a9      	b.n	8012088 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8012134:	2d00      	cmp	r5, #0
 8012136:	f43f af48 	beq.w	8011fca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 801213a:	782d      	ldrb	r5, [r5, #0]
 801213c:	e745      	b.n	8011fca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

0801213e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801213e:	b507      	push	{r0, r1, r2, lr}
 8012140:	9300      	str	r3, [sp, #0]
 8012142:	4613      	mov	r3, r2
 8012144:	2200      	movs	r2, #0
 8012146:	f7ff fe92 	bl	8011e6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801214a:	b003      	add	sp, #12
 801214c:	f85d fb04 	ldr.w	pc, [sp], #4

08012150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8012150:	b40c      	push	{r2, r3}
 8012152:	b507      	push	{r0, r1, r2, lr}
 8012154:	ab04      	add	r3, sp, #16
 8012156:	f853 2b04 	ldr.w	r2, [r3], #4
 801215a:	9301      	str	r3, [sp, #4]
 801215c:	f7ff ffef 	bl	801213e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8012160:	b003      	add	sp, #12
 8012162:	f85d eb04 	ldr.w	lr, [sp], #4
 8012166:	b002      	add	sp, #8
 8012168:	4770      	bx	lr
	...

0801216c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801216c:	4b01      	ldr	r3, [pc, #4]	@ (8012174 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801216e:	6018      	str	r0, [r3, #0]
 8012170:	4770      	bx	lr
 8012172:	bf00      	nop
 8012174:	20016a68 	.word	0x20016a68

08012178 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8012178:	4b06      	ldr	r3, [pc, #24]	@ (8012194 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801217a:	881a      	ldrh	r2, [r3, #0]
 801217c:	4282      	cmp	r2, r0
 801217e:	d807      	bhi.n	8012190 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8012180:	4b05      	ldr	r3, [pc, #20]	@ (8012198 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8012182:	881b      	ldrh	r3, [r3, #0]
 8012184:	4413      	add	r3, r2
 8012186:	4298      	cmp	r0, r3
 8012188:	bfac      	ite	ge
 801218a:	2000      	movge	r0, #0
 801218c:	2001      	movlt	r0, #1
 801218e:	4770      	bx	lr
 8012190:	2000      	movs	r0, #0
 8012192:	4770      	bx	lr
 8012194:	20016a88 	.word	0x20016a88
 8012198:	20016a8c 	.word	0x20016a8c

0801219c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801219c:	b508      	push	{r3, lr}
 801219e:	4601      	mov	r1, r0
 80121a0:	f7ff ffea 	bl	8012178 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80121a4:	b118      	cbz	r0, 80121ae <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80121a6:	4b02      	ldr	r3, [pc, #8]	@ (80121b0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80121a8:	681b      	ldr	r3, [r3, #0]
 80121aa:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80121ae:	bd08      	pop	{r3, pc}
 80121b0:	20016a6c 	.word	0x20016a6c

080121b4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80121b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80121b6:	4c24      	ldr	r4, [pc, #144]	@ (8012248 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80121b8:	6823      	ldr	r3, [r4, #0]
 80121ba:	2b00      	cmp	r3, #0
 80121bc:	d042      	beq.n	8012244 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80121be:	4a23      	ldr	r2, [pc, #140]	@ (801224c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80121c0:	4d23      	ldr	r5, [pc, #140]	@ (8012250 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80121c2:	8811      	ldrh	r1, [r2, #0]
 80121c4:	f8b5 c000 	ldrh.w	ip, [r5]
 80121c8:	4822      	ldr	r0, [pc, #136]	@ (8012254 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80121ca:	4461      	add	r1, ip
 80121cc:	1c4a      	adds	r2, r1, #1
 80121ce:	008f      	lsls	r7, r1, #2
 80121d0:	f022 0201 	bic.w	r2, r2, #1
 80121d4:	19de      	adds	r6, r3, r7
 80121d6:	0412      	lsls	r2, r2, #16
 80121d8:	6006      	str	r6, [r0, #0]
 80121da:	4e1f      	ldr	r6, [pc, #124]	@ (8012258 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80121dc:	0c12      	lsrs	r2, r2, #16
 80121de:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80121e2:	19da      	adds	r2, r3, r7
 80121e4:	6032      	str	r2, [r6, #0]
 80121e6:	220e      	movs	r2, #14
 80121e8:	fb02 f20c 	mul.w	r2, r2, ip
 80121ec:	3203      	adds	r2, #3
 80121ee:	f022 0203 	bic.w	r2, r2, #3
 80121f2:	443a      	add	r2, r7
 80121f4:	4f19      	ldr	r7, [pc, #100]	@ (801225c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80121f6:	4413      	add	r3, r2
 80121f8:	603b      	str	r3, [r7, #0]
 80121fa:	2300      	movs	r3, #0
 80121fc:	4f18      	ldr	r7, [pc, #96]	@ (8012260 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80121fe:	469c      	mov	ip, r3
 8012200:	803b      	strh	r3, [r7, #0]
 8012202:	4f18      	ldr	r7, [pc, #96]	@ (8012264 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8012204:	683f      	ldr	r7, [r7, #0]
 8012206:	1aba      	subs	r2, r7, r2
 8012208:	4f17      	ldr	r7, [pc, #92]	@ (8012268 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801220a:	603a      	str	r2, [r7, #0]
 801220c:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8012210:	4a16      	ldr	r2, [pc, #88]	@ (801226c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8012212:	8013      	strh	r3, [r2, #0]
 8012214:	428b      	cmp	r3, r1
 8012216:	d10d      	bne.n	8012234 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8012218:	882d      	ldrh	r5, [r5, #0]
 801221a:	2300      	movs	r3, #0
 801221c:	6830      	ldr	r0, [r6, #0]
 801221e:	240e      	movs	r4, #14
 8012220:	429d      	cmp	r5, r3
 8012222:	d90f      	bls.n	8012244 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012224:	fb04 0203 	mla	r2, r4, r3, r0
 8012228:	3301      	adds	r3, #1
 801222a:	7b11      	ldrb	r1, [r2, #12]
 801222c:	f36f 1145 	bfc	r1, #5, #1
 8012230:	7311      	strb	r1, [r2, #12]
 8012232:	e7f5      	b.n	8012220 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8012234:	6822      	ldr	r2, [r4, #0]
 8012236:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801223a:	6802      	ldr	r2, [r0, #0]
 801223c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8012240:	3301      	adds	r3, #1
 8012242:	e7e7      	b.n	8012214 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8012244:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012246:	bf00      	nop
 8012248:	20016a6c 	.word	0x20016a6c
 801224c:	20016a88 	.word	0x20016a88
 8012250:	20016a8c 	.word	0x20016a8c
 8012254:	20016a80 	.word	0x20016a80
 8012258:	20016a70 	.word	0x20016a70
 801225c:	20016a78 	.word	0x20016a78
 8012260:	20016a8a 	.word	0x20016a8a
 8012264:	20016a74 	.word	0x20016a74
 8012268:	20016a84 	.word	0x20016a84
 801226c:	20016a7c 	.word	0x20016a7c

08012270 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8012270:	4b06      	ldr	r3, [pc, #24]	@ (801228c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8012272:	681b      	ldr	r3, [r3, #0]
 8012274:	b943      	cbnz	r3, 8012288 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012276:	b139      	cbz	r1, 8012288 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012278:	4b05      	ldr	r3, [pc, #20]	@ (8012290 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801227a:	801a      	strh	r2, [r3, #0]
 801227c:	4b05      	ldr	r3, [pc, #20]	@ (8012294 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801227e:	6019      	str	r1, [r3, #0]
 8012280:	4b05      	ldr	r3, [pc, #20]	@ (8012298 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8012282:	6018      	str	r0, [r3, #0]
 8012284:	f7ff bf96 	b.w	80121b4 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8012288:	4770      	bx	lr
 801228a:	bf00      	nop
 801228c:	20016a78 	.word	0x20016a78
 8012290:	20016a8c 	.word	0x20016a8c
 8012294:	20016a74 	.word	0x20016a74
 8012298:	20016a6c 	.word	0x20016a6c

0801229c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801229c:	b470      	push	{r4, r5, r6}
 801229e:	4c07      	ldr	r4, [pc, #28]	@ (80122bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80122a0:	4605      	mov	r5, r0
 80122a2:	4610      	mov	r0, r2
 80122a4:	9a03      	ldr	r2, [sp, #12]
 80122a6:	6826      	ldr	r6, [r4, #0]
 80122a8:	b936      	cbnz	r6, 80122b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80122aa:	6025      	str	r5, [r4, #0]
 80122ac:	4c04      	ldr	r4, [pc, #16]	@ (80122c0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80122ae:	8021      	strh	r1, [r4, #0]
 80122b0:	4619      	mov	r1, r3
 80122b2:	bc70      	pop	{r4, r5, r6}
 80122b4:	f7ff bfdc 	b.w	8012270 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80122b8:	bc70      	pop	{r4, r5, r6}
 80122ba:	4770      	bx	lr
 80122bc:	20016a90 	.word	0x20016a90
 80122c0:	20016a88 	.word	0x20016a88

080122c4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80122c4:	4a12      	ldr	r2, [pc, #72]	@ (8012310 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80122c6:	8803      	ldrh	r3, [r0, #0]
 80122c8:	8812      	ldrh	r2, [r2, #0]
 80122ca:	4293      	cmp	r3, r2
 80122cc:	d207      	bcs.n	80122de <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80122ce:	4a11      	ldr	r2, [pc, #68]	@ (8012314 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80122d0:	2114      	movs	r1, #20
 80122d2:	6812      	ldr	r2, [r2, #0]
 80122d4:	fb01 2303 	mla	r3, r1, r3, r2
 80122d8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80122dc:	4770      	bx	lr
 80122de:	490e      	ldr	r1, [pc, #56]	@ (8012318 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80122e0:	8809      	ldrh	r1, [r1, #0]
 80122e2:	4411      	add	r1, r2
 80122e4:	428b      	cmp	r3, r1
 80122e6:	da04      	bge.n	80122f2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80122e8:	1a9b      	subs	r3, r3, r2
 80122ea:	4a0c      	ldr	r2, [pc, #48]	@ (801231c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80122ec:	210e      	movs	r1, #14
 80122ee:	6812      	ldr	r2, [r2, #0]
 80122f0:	e7f0      	b.n	80122d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80122f2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80122f6:	4293      	cmp	r3, r2
 80122f8:	d108      	bne.n	801230c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80122fa:	4b09      	ldr	r3, [pc, #36]	@ (8012320 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80122fc:	781b      	ldrb	r3, [r3, #0]
 80122fe:	b91b      	cbnz	r3, 8012308 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8012300:	4b08      	ldr	r3, [pc, #32]	@ (8012324 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8012302:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012306:	4770      	bx	lr
 8012308:	4b07      	ldr	r3, [pc, #28]	@ (8012328 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801230a:	e7fa      	b.n	8012302 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801230c:	2000      	movs	r0, #0
 801230e:	4770      	bx	lr
 8012310:	20016a88 	.word	0x20016a88
 8012314:	20016a90 	.word	0x20016a90
 8012318:	20016a8c 	.word	0x20016a8c
 801231c:	20016a70 	.word	0x20016a70
 8012320:	200169f8 	.word	0x200169f8
 8012324:	200169fa 	.word	0x200169fa
 8012328:	200169fc 	.word	0x200169fc

0801232c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801232c:	4a12      	ldr	r2, [pc, #72]	@ (8012378 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801232e:	8803      	ldrh	r3, [r0, #0]
 8012330:	8812      	ldrh	r2, [r2, #0]
 8012332:	4293      	cmp	r3, r2
 8012334:	d207      	bcs.n	8012346 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8012336:	4a11      	ldr	r2, [pc, #68]	@ (801237c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8012338:	2114      	movs	r1, #20
 801233a:	6812      	ldr	r2, [r2, #0]
 801233c:	fb01 2303 	mla	r3, r1, r3, r2
 8012340:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8012344:	4770      	bx	lr
 8012346:	490e      	ldr	r1, [pc, #56]	@ (8012380 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8012348:	8809      	ldrh	r1, [r1, #0]
 801234a:	4411      	add	r1, r2
 801234c:	428b      	cmp	r3, r1
 801234e:	da04      	bge.n	801235a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8012350:	1a9b      	subs	r3, r3, r2
 8012352:	4a0c      	ldr	r2, [pc, #48]	@ (8012384 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8012354:	210e      	movs	r1, #14
 8012356:	6812      	ldr	r2, [r2, #0]
 8012358:	e7f0      	b.n	801233c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801235a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801235e:	4293      	cmp	r3, r2
 8012360:	d108      	bne.n	8012374 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8012362:	4b09      	ldr	r3, [pc, #36]	@ (8012388 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8012364:	781b      	ldrb	r3, [r3, #0]
 8012366:	b91b      	cbnz	r3, 8012370 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8012368:	4b08      	ldr	r3, [pc, #32]	@ (801238c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801236a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801236e:	4770      	bx	lr
 8012370:	4b07      	ldr	r3, [pc, #28]	@ (8012390 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8012372:	e7fa      	b.n	801236a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8012374:	2000      	movs	r0, #0
 8012376:	4770      	bx	lr
 8012378:	20016a88 	.word	0x20016a88
 801237c:	20016a90 	.word	0x20016a90
 8012380:	20016a8c 	.word	0x20016a8c
 8012384:	20016a70 	.word	0x20016a70
 8012388:	200169f8 	.word	0x200169f8
 801238c:	200169fc 	.word	0x200169fc
 8012390:	200169fa 	.word	0x200169fa

08012394 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8012394:	4a1f      	ldr	r2, [pc, #124]	@ (8012414 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8012396:	b510      	push	{r4, lr}
 8012398:	880b      	ldrh	r3, [r1, #0]
 801239a:	8812      	ldrh	r2, [r2, #0]
 801239c:	4293      	cmp	r3, r2
 801239e:	d213      	bcs.n	80123c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80123a0:	4a1d      	ldr	r2, [pc, #116]	@ (8012418 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80123a2:	2114      	movs	r1, #20
 80123a4:	6812      	ldr	r2, [r2, #0]
 80123a6:	fb01 2303 	mla	r3, r1, r3, r2
 80123aa:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80123ae:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80123b2:	8a1a      	ldrh	r2, [r3, #16]
 80123b4:	8a5b      	ldrh	r3, [r3, #18]
 80123b6:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80123ba:	8004      	strh	r4, [r0, #0]
 80123bc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80123c0:	8041      	strh	r1, [r0, #2]
 80123c2:	8082      	strh	r2, [r0, #4]
 80123c4:	80c3      	strh	r3, [r0, #6]
 80123c6:	e00e      	b.n	80123e6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80123c8:	4914      	ldr	r1, [pc, #80]	@ (801241c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80123ca:	8809      	ldrh	r1, [r1, #0]
 80123cc:	4411      	add	r1, r2
 80123ce:	428b      	cmp	r3, r1
 80123d0:	da0a      	bge.n	80123e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80123d2:	1a9b      	subs	r3, r3, r2
 80123d4:	4a12      	ldr	r2, [pc, #72]	@ (8012420 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80123d6:	210e      	movs	r1, #14
 80123d8:	6812      	ldr	r2, [r2, #0]
 80123da:	fb01 2303 	mla	r3, r1, r3, r2
 80123de:	681a      	ldr	r2, [r3, #0]
 80123e0:	6002      	str	r2, [r0, #0]
 80123e2:	685a      	ldr	r2, [r3, #4]
 80123e4:	6042      	str	r2, [r0, #4]
 80123e6:	bd10      	pop	{r4, pc}
 80123e8:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80123ec:	4293      	cmp	r3, r2
 80123ee:	d10b      	bne.n	8012408 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80123f0:	4b0c      	ldr	r3, [pc, #48]	@ (8012424 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80123f2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80123f6:	4b0c      	ldr	r3, [pc, #48]	@ (8012428 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80123f8:	8081      	strh	r1, [r0, #4]
 80123fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 80123fe:	2300      	movs	r3, #0
 8012400:	80c2      	strh	r2, [r0, #6]
 8012402:	8003      	strh	r3, [r0, #0]
 8012404:	8043      	strh	r3, [r0, #2]
 8012406:	e7ee      	b.n	80123e6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8012408:	2300      	movs	r3, #0
 801240a:	8003      	strh	r3, [r0, #0]
 801240c:	8043      	strh	r3, [r0, #2]
 801240e:	8083      	strh	r3, [r0, #4]
 8012410:	e7d8      	b.n	80123c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012412:	bf00      	nop
 8012414:	20016a88 	.word	0x20016a88
 8012418:	20016a90 	.word	0x20016a90
 801241c:	20016a8c 	.word	0x20016a8c
 8012420:	20016a70 	.word	0x20016a70
 8012424:	200169f4 	.word	0x200169f4
 8012428:	200169f6 	.word	0x200169f6

0801242c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801242c:	4a17      	ldr	r2, [pc, #92]	@ (801248c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801242e:	8803      	ldrh	r3, [r0, #0]
 8012430:	8812      	ldrh	r2, [r2, #0]
 8012432:	4293      	cmp	r3, r2
 8012434:	d213      	bcs.n	801245e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8012436:	4a16      	ldr	r2, [pc, #88]	@ (8012490 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8012438:	2114      	movs	r1, #20
 801243a:	6812      	ldr	r2, [r2, #0]
 801243c:	fb01 2303 	mla	r3, r1, r3, r2
 8012440:	8a1a      	ldrh	r2, [r3, #16]
 8012442:	8919      	ldrh	r1, [r3, #8]
 8012444:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012448:	428a      	cmp	r2, r1
 801244a:	db1d      	blt.n	8012488 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801244c:	8a58      	ldrh	r0, [r3, #18]
 801244e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012452:	895b      	ldrh	r3, [r3, #10]
 8012454:	4298      	cmp	r0, r3
 8012456:	bfac      	ite	ge
 8012458:	2000      	movge	r0, #0
 801245a:	2001      	movlt	r0, #1
 801245c:	4770      	bx	lr
 801245e:	490d      	ldr	r1, [pc, #52]	@ (8012494 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8012460:	8809      	ldrh	r1, [r1, #0]
 8012462:	4411      	add	r1, r2
 8012464:	428b      	cmp	r3, r1
 8012466:	da0d      	bge.n	8012484 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8012468:	1a9b      	subs	r3, r3, r2
 801246a:	4a0b      	ldr	r2, [pc, #44]	@ (8012498 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801246c:	210e      	movs	r1, #14
 801246e:	6812      	ldr	r2, [r2, #0]
 8012470:	fb01 2303 	mla	r3, r1, r3, r2
 8012474:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8012478:	891a      	ldrh	r2, [r3, #8]
 801247a:	4291      	cmp	r1, r2
 801247c:	db04      	blt.n	8012488 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801247e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8012482:	e7e6      	b.n	8012452 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8012484:	2000      	movs	r0, #0
 8012486:	4770      	bx	lr
 8012488:	2001      	movs	r0, #1
 801248a:	4770      	bx	lr
 801248c:	20016a88 	.word	0x20016a88
 8012490:	20016a90 	.word	0x20016a90
 8012494:	20016a8c 	.word	0x20016a8c
 8012498:	20016a70 	.word	0x20016a70

0801249c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801249c:	4a12      	ldr	r2, [pc, #72]	@ (80124e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801249e:	8803      	ldrh	r3, [r0, #0]
 80124a0:	8811      	ldrh	r1, [r2, #0]
 80124a2:	428b      	cmp	r3, r1
 80124a4:	d20b      	bcs.n	80124be <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80124a6:	4a11      	ldr	r2, [pc, #68]	@ (80124ec <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80124a8:	6812      	ldr	r2, [r2, #0]
 80124aa:	b112      	cbz	r2, 80124b2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80124ac:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80124b0:	b9c0      	cbnz	r0, 80124e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80124b2:	4a0f      	ldr	r2, [pc, #60]	@ (80124f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80124b4:	6811      	ldr	r1, [r2, #0]
 80124b6:	2214      	movs	r2, #20
 80124b8:	4353      	muls	r3, r2
 80124ba:	58c8      	ldr	r0, [r1, r3]
 80124bc:	4770      	bx	lr
 80124be:	4a0d      	ldr	r2, [pc, #52]	@ (80124f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80124c0:	8812      	ldrh	r2, [r2, #0]
 80124c2:	440a      	add	r2, r1
 80124c4:	4293      	cmp	r3, r2
 80124c6:	da04      	bge.n	80124d2 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80124c8:	4a08      	ldr	r2, [pc, #32]	@ (80124ec <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80124ca:	6812      	ldr	r2, [r2, #0]
 80124cc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80124d0:	4770      	bx	lr
 80124d2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80124d6:	4293      	cmp	r3, r2
 80124d8:	d103      	bne.n	80124e2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80124da:	4b07      	ldr	r3, [pc, #28]	@ (80124f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80124dc:	681b      	ldr	r3, [r3, #0]
 80124de:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 80124e0:	4770      	bx	lr
 80124e2:	2000      	movs	r0, #0
 80124e4:	4770      	bx	lr
 80124e6:	bf00      	nop
 80124e8:	20016a88 	.word	0x20016a88
 80124ec:	20016a6c 	.word	0x20016a6c
 80124f0:	20016a90 	.word	0x20016a90
 80124f4:	20016a8c 	.word	0x20016a8c
 80124f8:	20016a00 	.word	0x20016a00

080124fc <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80124fc:	4b24      	ldr	r3, [pc, #144]	@ (8012590 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80124fe:	8802      	ldrh	r2, [r0, #0]
 8012500:	8818      	ldrh	r0, [r3, #0]
 8012502:	4282      	cmp	r2, r0
 8012504:	d221      	bcs.n	801254a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8012506:	4b23      	ldr	r3, [pc, #140]	@ (8012594 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8012508:	6819      	ldr	r1, [r3, #0]
 801250a:	2314      	movs	r3, #20
 801250c:	fb03 1302 	mla	r3, r3, r2, r1
 8012510:	6858      	ldr	r0, [r3, #4]
 8012512:	2800      	cmp	r0, #0
 8012514:	d03a      	beq.n	801258c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012516:	4920      	ldr	r1, [pc, #128]	@ (8012598 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012518:	6809      	ldr	r1, [r1, #0]
 801251a:	2900      	cmp	r1, #0
 801251c:	d036      	beq.n	801258c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801251e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8012522:	2900      	cmp	r1, #0
 8012524:	d032      	beq.n	801258c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012526:	891a      	ldrh	r2, [r3, #8]
 8012528:	8958      	ldrh	r0, [r3, #10]
 801252a:	4350      	muls	r0, r2
 801252c:	7c5a      	ldrb	r2, [r3, #17]
 801252e:	7cdb      	ldrb	r3, [r3, #19]
 8012530:	0952      	lsrs	r2, r2, #5
 8012532:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012536:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801253a:	2b0b      	cmp	r3, #11
 801253c:	bf18      	it	ne
 801253e:	0040      	lslne	r0, r0, #1
 8012540:	3003      	adds	r0, #3
 8012542:	f020 0003 	bic.w	r0, r0, #3
 8012546:	4408      	add	r0, r1
 8012548:	4770      	bx	lr
 801254a:	4b14      	ldr	r3, [pc, #80]	@ (801259c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801254c:	881b      	ldrh	r3, [r3, #0]
 801254e:	4403      	add	r3, r0
 8012550:	429a      	cmp	r2, r3
 8012552:	da1a      	bge.n	801258a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012554:	4b12      	ldr	r3, [pc, #72]	@ (80125a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8012556:	1a10      	subs	r0, r2, r0
 8012558:	210e      	movs	r1, #14
 801255a:	681b      	ldr	r3, [r3, #0]
 801255c:	fb01 3000 	mla	r0, r1, r0, r3
 8012560:	7b03      	ldrb	r3, [r0, #12]
 8012562:	f003 031f 	and.w	r3, r3, #31
 8012566:	2b0b      	cmp	r3, #11
 8012568:	d10b      	bne.n	8012582 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801256a:	8903      	ldrh	r3, [r0, #8]
 801256c:	8940      	ldrh	r0, [r0, #10]
 801256e:	4358      	muls	r0, r3
 8012570:	4b09      	ldr	r3, [pc, #36]	@ (8012598 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012572:	3003      	adds	r0, #3
 8012574:	6819      	ldr	r1, [r3, #0]
 8012576:	f020 0303 	bic.w	r3, r0, #3
 801257a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801257e:	4418      	add	r0, r3
 8012580:	4770      	bx	lr
 8012582:	2b0d      	cmp	r3, #13
 8012584:	d101      	bne.n	801258a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012586:	300d      	adds	r0, #13
 8012588:	4770      	bx	lr
 801258a:	2000      	movs	r0, #0
 801258c:	4770      	bx	lr
 801258e:	bf00      	nop
 8012590:	20016a88 	.word	0x20016a88
 8012594:	20016a90 	.word	0x20016a90
 8012598:	20016a6c 	.word	0x20016a6c
 801259c:	20016a8c 	.word	0x20016a8c
 80125a0:	20016a70 	.word	0x20016a70

080125a4 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80125a4:	4a17      	ldr	r2, [pc, #92]	@ (8012604 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80125a6:	b510      	push	{r4, lr}
 80125a8:	8803      	ldrh	r3, [r0, #0]
 80125aa:	8812      	ldrh	r2, [r2, #0]
 80125ac:	4293      	cmp	r3, r2
 80125ae:	d20c      	bcs.n	80125ca <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80125b0:	4a15      	ldr	r2, [pc, #84]	@ (8012608 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80125b2:	2114      	movs	r1, #20
 80125b4:	6812      	ldr	r2, [r2, #0]
 80125b6:	fb01 2303 	mla	r3, r1, r3, r2
 80125ba:	7c58      	ldrb	r0, [r3, #17]
 80125bc:	0942      	lsrs	r2, r0, #5
 80125be:	7cd8      	ldrb	r0, [r3, #19]
 80125c0:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80125c4:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80125c8:	bd10      	pop	{r4, pc}
 80125ca:	4910      	ldr	r1, [pc, #64]	@ (801260c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80125cc:	8809      	ldrh	r1, [r1, #0]
 80125ce:	4411      	add	r1, r2
 80125d0:	428b      	cmp	r3, r1
 80125d2:	da09      	bge.n	80125e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80125d4:	1a9b      	subs	r3, r3, r2
 80125d6:	4a0e      	ldr	r2, [pc, #56]	@ (8012610 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80125d8:	210e      	movs	r1, #14
 80125da:	6812      	ldr	r2, [r2, #0]
 80125dc:	fb01 2303 	mla	r3, r1, r3, r2
 80125e0:	7b18      	ldrb	r0, [r3, #12]
 80125e2:	f000 001f 	and.w	r0, r0, #31
 80125e6:	e7ef      	b.n	80125c8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80125e8:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80125ec:	4293      	cmp	r3, r2
 80125ee:	d106      	bne.n	80125fe <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80125f0:	f7ef ff44 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 80125f4:	6803      	ldr	r3, [r0, #0]
 80125f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80125fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80125fc:	4718      	bx	r3
 80125fe:	2000      	movs	r0, #0
 8012600:	e7e2      	b.n	80125c8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8012602:	bf00      	nop
 8012604:	20016a88 	.word	0x20016a88
 8012608:	20016a90 	.word	0x20016a90
 801260c:	20016a8c 	.word	0x20016a8c
 8012610:	20016a70 	.word	0x20016a70

08012614 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8012614:	2010      	movs	r0, #16
 8012616:	4770      	bx	lr

08012618 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8012618:	2000      	movs	r0, #0
 801261a:	4770      	bx	lr

0801261c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801261c:	4b02      	ldr	r3, [pc, #8]	@ (8012628 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801261e:	8818      	ldrh	r0, [r3, #0]
 8012620:	0040      	lsls	r0, r0, #1
 8012622:	b280      	uxth	r0, r0
 8012624:	4770      	bx	lr
 8012626:	bf00      	nop
 8012628:	200169fa 	.word	0x200169fa

0801262c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801262c:	2bff      	cmp	r3, #255	@ 0xff
 801262e:	d050      	beq.n	80126d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8012630:	2a0b      	cmp	r2, #11
 8012632:	d04a      	beq.n	80126ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8012634:	d80e      	bhi.n	8012654 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8012636:	2a03      	cmp	r2, #3
 8012638:	d03f      	beq.n	80126ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801263a:	d804      	bhi.n	8012646 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801263c:	2a01      	cmp	r2, #1
 801263e:	d03e      	beq.n	80126be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8012640:	d93f      	bls.n	80126c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8012642:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8012644:	4770      	bx	lr
 8012646:	2a09      	cmp	r2, #9
 8012648:	d03f      	beq.n	80126ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801264a:	d83c      	bhi.n	80126c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801264c:	2a08      	cmp	r2, #8
 801264e:	d03a      	beq.n	80126c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8012650:	2000      	movs	r0, #0
 8012652:	4770      	bx	lr
 8012654:	2a2f      	cmp	r2, #47	@ 0x2f
 8012656:	d024      	beq.n	80126a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8012658:	d80d      	bhi.n	8012676 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801265a:	2a2d      	cmp	r2, #45	@ 0x2d
 801265c:	d014      	beq.n	8012688 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801265e:	d826      	bhi.n	80126ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8012660:	2a2c      	cmp	r2, #44	@ 0x2c
 8012662:	d1f5      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012664:	684b      	ldr	r3, [r1, #4]
 8012666:	781b      	ldrb	r3, [r3, #0]
 8012668:	2b01      	cmp	r3, #1
 801266a:	d018      	beq.n	801269e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801266c:	d323      	bcc.n	80126b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801266e:	2b02      	cmp	r3, #2
 8012670:	d1ee      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012672:	68c0      	ldr	r0, [r0, #12]
 8012674:	4770      	bx	lr
 8012676:	2a31      	cmp	r2, #49	@ 0x31
 8012678:	d004      	beq.n	8012684 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801267a:	d328      	bcc.n	80126ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801267c:	2a32      	cmp	r2, #50	@ 0x32
 801267e:	d026      	beq.n	80126ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8012680:	2a33      	cmp	r2, #51	@ 0x33
 8012682:	d1e5      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012684:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 8012686:	4770      	bx	lr
 8012688:	684b      	ldr	r3, [r1, #4]
 801268a:	781b      	ldrb	r3, [r3, #0]
 801268c:	2b01      	cmp	r3, #1
 801268e:	d004      	beq.n	801269a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8012690:	d30b      	bcc.n	80126aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012692:	2b02      	cmp	r3, #2
 8012694:	d1dc      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012696:	6940      	ldr	r0, [r0, #20]
 8012698:	4770      	bx	lr
 801269a:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 801269c:	4770      	bx	lr
 801269e:	69c0      	ldr	r0, [r0, #28]
 80126a0:	4770      	bx	lr
 80126a2:	684b      	ldr	r3, [r1, #4]
 80126a4:	781b      	ldrb	r3, [r3, #0]
 80126a6:	2b00      	cmp	r3, #0
 80126a8:	d1d2      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80126aa:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 80126ac:	4770      	bx	lr
 80126ae:	684b      	ldr	r3, [r1, #4]
 80126b0:	781b      	ldrb	r3, [r3, #0]
 80126b2:	2b00      	cmp	r3, #0
 80126b4:	d1cc      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80126b6:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 80126b8:	4770      	bx	lr
 80126ba:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 80126bc:	4770      	bx	lr
 80126be:	6d40      	ldr	r0, [r0, #84]	@ 0x54
 80126c0:	4770      	bx	lr
 80126c2:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 80126c4:	4770      	bx	lr
 80126c6:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
 80126c8:	4770      	bx	lr
 80126ca:	6e40      	ldr	r0, [r0, #100]	@ 0x64
 80126cc:	4770      	bx	lr
 80126ce:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
 80126d0:	4770      	bx	lr
 80126d2:	2a0b      	cmp	r2, #11
 80126d4:	d049      	beq.n	801276a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80126d6:	d80e      	bhi.n	80126f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80126d8:	2a03      	cmp	r2, #3
 80126da:	d040      	beq.n	801275e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80126dc:	d804      	bhi.n	80126e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80126de:	2a01      	cmp	r2, #1
 80126e0:	d03f      	beq.n	8012762 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80126e2:	d940      	bls.n	8012766 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80126e4:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 80126e6:	4770      	bx	lr
 80126e8:	2a09      	cmp	r2, #9
 80126ea:	d03e      	beq.n	801276a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80126ec:	d801      	bhi.n	80126f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80126ee:	2a08      	cmp	r2, #8
 80126f0:	d1ae      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80126f2:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 80126f4:	4770      	bx	lr
 80126f6:	2a2f      	cmp	r2, #47	@ 0x2f
 80126f8:	d024      	beq.n	8012744 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80126fa:	d80d      	bhi.n	8012718 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80126fc:	2a2d      	cmp	r2, #45	@ 0x2d
 80126fe:	d014      	beq.n	801272a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8012700:	d826      	bhi.n	8012750 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8012702:	2a2c      	cmp	r2, #44	@ 0x2c
 8012704:	d1a4      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012706:	684b      	ldr	r3, [r1, #4]
 8012708:	781b      	ldrb	r3, [r3, #0]
 801270a:	2b01      	cmp	r3, #1
 801270c:	d018      	beq.n	8012740 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801270e:	d324      	bcc.n	801275a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8012710:	2b02      	cmp	r3, #2
 8012712:	d19d      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012714:	6900      	ldr	r0, [r0, #16]
 8012716:	4770      	bx	lr
 8012718:	2a31      	cmp	r2, #49	@ 0x31
 801271a:	d004      	beq.n	8012726 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801271c:	d327      	bcc.n	801276e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801271e:	2a32      	cmp	r2, #50	@ 0x32
 8012720:	d025      	beq.n	801276e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8012722:	2a33      	cmp	r2, #51	@ 0x33
 8012724:	d194      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012726:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 8012728:	4770      	bx	lr
 801272a:	684b      	ldr	r3, [r1, #4]
 801272c:	781b      	ldrb	r3, [r3, #0]
 801272e:	2b01      	cmp	r3, #1
 8012730:	d004      	beq.n	801273c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8012732:	d30b      	bcc.n	801274c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8012734:	2b02      	cmp	r3, #2
 8012736:	d18b      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012738:	6980      	ldr	r0, [r0, #24]
 801273a:	4770      	bx	lr
 801273c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 801273e:	4770      	bx	lr
 8012740:	6a00      	ldr	r0, [r0, #32]
 8012742:	4770      	bx	lr
 8012744:	684b      	ldr	r3, [r1, #4]
 8012746:	781b      	ldrb	r3, [r3, #0]
 8012748:	2b00      	cmp	r3, #0
 801274a:	d181      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801274c:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 801274e:	4770      	bx	lr
 8012750:	684b      	ldr	r3, [r1, #4]
 8012752:	781b      	ldrb	r3, [r3, #0]
 8012754:	2b00      	cmp	r3, #0
 8012756:	f47f af7b 	bne.w	8012650 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801275a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 801275c:	4770      	bx	lr
 801275e:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 8012760:	4770      	bx	lr
 8012762:	6d80      	ldr	r0, [r0, #88]	@ 0x58
 8012764:	4770      	bx	lr
 8012766:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8012768:	4770      	bx	lr
 801276a:	6e80      	ldr	r0, [r0, #104]	@ 0x68
 801276c:	4770      	bx	lr
 801276e:	6f00      	ldr	r0, [r0, #112]	@ 0x70
 8012770:	4770      	bx	lr

08012772 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012772:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012776:	b087      	sub	sp, #28
 8012778:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801277a:	9205      	str	r2, [sp, #20]
 801277c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012780:	9101      	str	r1, [sp, #4]
 8012782:	9202      	str	r2, [sp, #8]
 8012784:	6841      	ldr	r1, [r0, #4]
 8012786:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801278a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801278e:	fb01 2404 	mla	r4, r1, r4, r2
 8012792:	6802      	ldr	r2, [r0, #0]
 8012794:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012798:	f8de 2000 	ldr.w	r2, [lr]
 801279c:	9203      	str	r2, [sp, #12]
 801279e:	f8de 2004 	ldr.w	r2, [lr, #4]
 80127a2:	3204      	adds	r2, #4
 80127a4:	9204      	str	r2, [sp, #16]
 80127a6:	9a02      	ldr	r2, [sp, #8]
 80127a8:	43d6      	mvns	r6, r2
 80127aa:	b2f6      	uxtb	r6, r6
 80127ac:	9a01      	ldr	r2, [sp, #4]
 80127ae:	2a00      	cmp	r2, #0
 80127b0:	dc03      	bgt.n	80127ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80127b2:	9a05      	ldr	r2, [sp, #20]
 80127b4:	2a00      	cmp	r2, #0
 80127b6:	f340 8129 	ble.w	8012a0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80127ba:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80127bc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80127c0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80127c4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80127c6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80127ca:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80127ce:	2b00      	cmp	r3, #0
 80127d0:	dd0e      	ble.n	80127f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80127d2:	1408      	asrs	r0, r1, #16
 80127d4:	d405      	bmi.n	80127e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80127d6:	4560      	cmp	r0, ip
 80127d8:	da03      	bge.n	80127e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80127da:	1410      	asrs	r0, r2, #16
 80127dc:	d401      	bmi.n	80127e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80127de:	42b8      	cmp	r0, r7
 80127e0:	db07      	blt.n	80127f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80127e2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80127e4:	3b01      	subs	r3, #1
 80127e6:	3402      	adds	r4, #2
 80127e8:	4401      	add	r1, r0
 80127ea:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80127ec:	4402      	add	r2, r0
 80127ee:	e7ee      	b.n	80127ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80127f0:	d071      	beq.n	80128d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80127f2:	1e58      	subs	r0, r3, #1
 80127f4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80127f6:	fb05 1500 	mla	r5, r5, r0, r1
 80127fa:	142d      	asrs	r5, r5, #16
 80127fc:	d45f      	bmi.n	80128be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80127fe:	4565      	cmp	r5, ip
 8012800:	da5d      	bge.n	80128be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012802:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8012804:	fb05 2000 	mla	r0, r5, r0, r2
 8012808:	1400      	asrs	r0, r0, #16
 801280a:	d458      	bmi.n	80128be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801280c:	42b8      	cmp	r0, r7
 801280e:	da56      	bge.n	80128be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012810:	4699      	mov	r9, r3
 8012812:	46a2      	mov	sl, r4
 8012814:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8012818:	f1b9 0f00 	cmp.w	r9, #0
 801281c:	dd57      	ble.n	80128ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801281e:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8012822:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012826:	9803      	ldr	r0, [sp, #12]
 8012828:	140d      	asrs	r5, r1, #16
 801282a:	f109 39ff 	add.w	r9, r9, #4294967295
 801282e:	fb07 000c 	mla	r0, r7, ip, r0
 8012832:	5d40      	ldrb	r0, [r0, r5]
 8012834:	9d04      	ldr	r5, [sp, #16]
 8012836:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801283a:	f8ba 5000 	ldrh.w	r5, [sl]
 801283e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012842:	122f      	asrs	r7, r5, #8
 8012844:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8012848:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801284c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012850:	00ed      	lsls	r5, r5, #3
 8012852:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8012856:	fb17 f706 	smulbb	r7, r7, r6
 801285a:	b2ed      	uxtb	r5, r5
 801285c:	fb18 f806 	smulbb	r8, r8, r6
 8012860:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8012864:	10c7      	asrs	r7, r0, #3
 8012866:	fb15 f506 	smulbb	r5, r5, r6
 801286a:	00c0      	lsls	r0, r0, #3
 801286c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012870:	fa1f fc8c 	uxth.w	ip, ip
 8012874:	b2c0      	uxtb	r0, r0
 8012876:	fb07 870b 	mla	r7, r7, fp, r8
 801287a:	fb00 500b 	mla	r0, r0, fp, r5
 801287e:	f10c 0501 	add.w	r5, ip, #1
 8012882:	b2bf      	uxth	r7, r7
 8012884:	b280      	uxth	r0, r0
 8012886:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801288a:	f107 0801 	add.w	r8, r7, #1
 801288e:	1c45      	adds	r5, r0, #1
 8012890:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8012894:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012898:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801289c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801289e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80128a2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80128a6:	4401      	add	r1, r0
 80128a8:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80128ac:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80128ae:	ea45 0c0c 	orr.w	ip, r5, ip
 80128b2:	4402      	add	r2, r0
 80128b4:	ea4c 0c08 	orr.w	ip, ip, r8
 80128b8:	f82a cb02 	strh.w	ip, [sl], #2
 80128bc:	e7ac      	b.n	8012818 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80128be:	f04f 0800 	mov.w	r8, #0
 80128c2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80128c6:	eb03 0008 	add.w	r0, r3, r8
 80128ca:	2800      	cmp	r0, #0
 80128cc:	dc41      	bgt.n	8012952 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80128ce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80128d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80128d6:	9b01      	ldr	r3, [sp, #4]
 80128d8:	2b00      	cmp	r3, #0
 80128da:	f340 8097 	ble.w	8012a0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80128de:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80128e2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80128e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80128e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80128ec:	eef0 6a62 	vmov.f32	s13, s5
 80128f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80128f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80128f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80128fc:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8012900:	eef0 6a43 	vmov.f32	s13, s6
 8012904:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012908:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801290c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012910:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012914:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012918:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801291c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012920:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012924:	ee12 2a90 	vmov	r2, s5
 8012928:	eef0 2a47 	vmov.f32	s5, s14
 801292c:	fb92 f3f3 	sdiv	r3, r2, r3
 8012930:	ee13 2a10 	vmov	r2, s6
 8012934:	9313      	str	r3, [sp, #76]	@ 0x4c
 8012936:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012938:	eeb0 3a67 	vmov.f32	s6, s15
 801293c:	fb92 f3f3 	sdiv	r3, r2, r3
 8012940:	9314      	str	r3, [sp, #80]	@ 0x50
 8012942:	9b01      	ldr	r3, [sp, #4]
 8012944:	9a05      	ldr	r2, [sp, #20]
 8012946:	3b01      	subs	r3, #1
 8012948:	9301      	str	r3, [sp, #4]
 801294a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801294c:	bf08      	it	eq
 801294e:	4613      	moveq	r3, r2
 8012950:	e72c      	b.n	80127ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8012952:	140f      	asrs	r7, r1, #16
 8012954:	d453      	bmi.n	80129fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8012956:	f8de 5008 	ldr.w	r5, [lr, #8]
 801295a:	42bd      	cmp	r5, r7
 801295c:	dd4f      	ble.n	80129fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801295e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012962:	d44c      	bmi.n	80129fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8012964:	f8de 000c 	ldr.w	r0, [lr, #12]
 8012968:	4560      	cmp	r0, ip
 801296a:	dd48      	ble.n	80129fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801296c:	9803      	ldr	r0, [sp, #12]
 801296e:	b22d      	sxth	r5, r5
 8012970:	fb0c 0505 	mla	r5, ip, r5, r0
 8012974:	5de8      	ldrb	r0, [r5, r7]
 8012976:	9d04      	ldr	r5, [sp, #16]
 8012978:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801297c:	f06f 0501 	mvn.w	r5, #1
 8012980:	fb05 fb08 	mul.w	fp, r5, r8
 8012984:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012988:	f834 500b 	ldrh.w	r5, [r4, fp]
 801298c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012990:	122f      	asrs	r7, r5, #8
 8012992:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8012996:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801299a:	00ed      	lsls	r5, r5, #3
 801299c:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80129a0:	fb17 f706 	smulbb	r7, r7, r6
 80129a4:	b2ed      	uxtb	r5, r5
 80129a6:	fb19 f906 	smulbb	r9, r9, r6
 80129aa:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80129ae:	10c7      	asrs	r7, r0, #3
 80129b0:	fb15 f506 	smulbb	r5, r5, r6
 80129b4:	00c0      	lsls	r0, r0, #3
 80129b6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80129ba:	fa1f fc8c 	uxth.w	ip, ip
 80129be:	b2c0      	uxtb	r0, r0
 80129c0:	fb07 970a 	mla	r7, r7, sl, r9
 80129c4:	fb00 500a 	mla	r0, r0, sl, r5
 80129c8:	f10c 0501 	add.w	r5, ip, #1
 80129cc:	b2bf      	uxth	r7, r7
 80129ce:	b280      	uxth	r0, r0
 80129d0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80129d4:	f107 0901 	add.w	r9, r7, #1
 80129d8:	1c45      	adds	r5, r0, #1
 80129da:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80129de:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80129e2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80129e6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80129ea:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80129ee:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80129f2:	ea45 0c0c 	orr.w	ip, r5, ip
 80129f6:	ea4c 0c09 	orr.w	ip, ip, r9
 80129fa:	f824 c00b 	strh.w	ip, [r4, fp]
 80129fe:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012a00:	f108 38ff 	add.w	r8, r8, #4294967295
 8012a04:	4401      	add	r1, r0
 8012a06:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012a08:	4402      	add	r2, r0
 8012a0a:	e75c      	b.n	80128c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8012a0c:	b007      	add	sp, #28
 8012a0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012a12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012a12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a16:	b085      	sub	sp, #20
 8012a18:	4693      	mov	fp, r2
 8012a1a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012a1e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8012a20:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8012a22:	6870      	ldr	r0, [r6, #4]
 8012a24:	9100      	str	r1, [sp, #0]
 8012a26:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8012a2a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8012a2e:	fb00 2404 	mla	r4, r0, r4, r2
 8012a32:	6832      	ldr	r2, [r6, #0]
 8012a34:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012a38:	682a      	ldr	r2, [r5, #0]
 8012a3a:	9201      	str	r2, [sp, #4]
 8012a3c:	686a      	ldr	r2, [r5, #4]
 8012a3e:	3204      	adds	r2, #4
 8012a40:	9202      	str	r2, [sp, #8]
 8012a42:	9a00      	ldr	r2, [sp, #0]
 8012a44:	2a00      	cmp	r2, #0
 8012a46:	dc03      	bgt.n	8012a50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012a48:	f1bb 0f00 	cmp.w	fp, #0
 8012a4c:	f340 80a0 	ble.w	8012b90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8012a50:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012a52:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012a56:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8012a5a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012a5c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8012a60:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012a64:	2b00      	cmp	r3, #0
 8012a66:	dd0c      	ble.n	8012a82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012a68:	1406      	asrs	r6, r0, #16
 8012a6a:	d405      	bmi.n	8012a78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012a6c:	454e      	cmp	r6, r9
 8012a6e:	da03      	bge.n	8012a78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012a70:	1416      	asrs	r6, r2, #16
 8012a72:	d401      	bmi.n	8012a78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012a74:	4546      	cmp	r6, r8
 8012a76:	db05      	blt.n	8012a84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012a78:	4470      	add	r0, lr
 8012a7a:	4462      	add	r2, ip
 8012a7c:	3b01      	subs	r3, #1
 8012a7e:	3402      	adds	r4, #2
 8012a80:	e7f0      	b.n	8012a64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012a82:	d00f      	beq.n	8012aa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012a84:	1e5e      	subs	r6, r3, #1
 8012a86:	fb0e 0706 	mla	r7, lr, r6, r0
 8012a8a:	143f      	asrs	r7, r7, #16
 8012a8c:	d541      	bpl.n	8012b12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8012a8e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8012a92:	4698      	mov	r8, r3
 8012a94:	9603      	str	r6, [sp, #12]
 8012a96:	f1b8 0f00 	cmp.w	r8, #0
 8012a9a:	dc59      	bgt.n	8012b50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012a9c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012aa0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012aa4:	9b00      	ldr	r3, [sp, #0]
 8012aa6:	2b00      	cmp	r3, #0
 8012aa8:	dd72      	ble.n	8012b90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8012aaa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012aae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012ab0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012ab4:	eeb0 6a62 	vmov.f32	s12, s5
 8012ab8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012abc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012ac0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ac4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8012ac8:	eeb0 6a43 	vmov.f32	s12, s6
 8012acc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ad0:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8012ad4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012ad8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012adc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012ae0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012ae4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012ae8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012aec:	ee12 2a90 	vmov	r2, s5
 8012af0:	eef0 2a47 	vmov.f32	s5, s14
 8012af4:	fb92 fef3 	sdiv	lr, r2, r3
 8012af8:	ee13 2a10 	vmov	r2, s6
 8012afc:	eeb0 3a67 	vmov.f32	s6, s15
 8012b00:	fb92 fcf3 	sdiv	ip, r2, r3
 8012b04:	9b00      	ldr	r3, [sp, #0]
 8012b06:	3b01      	subs	r3, #1
 8012b08:	9300      	str	r3, [sp, #0]
 8012b0a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012b0c:	bf08      	it	eq
 8012b0e:	465b      	moveq	r3, fp
 8012b10:	e797      	b.n	8012a42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012b12:	454f      	cmp	r7, r9
 8012b14:	dabb      	bge.n	8012a8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012b16:	fb0c 2606 	mla	r6, ip, r6, r2
 8012b1a:	1436      	asrs	r6, r6, #16
 8012b1c:	d4b7      	bmi.n	8012a8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012b1e:	4546      	cmp	r6, r8
 8012b20:	dab5      	bge.n	8012a8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012b22:	461e      	mov	r6, r3
 8012b24:	46a0      	mov	r8, r4
 8012b26:	2e00      	cmp	r6, #0
 8012b28:	ddb8      	ble.n	8012a9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8012b2a:	1417      	asrs	r7, r2, #16
 8012b2c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8012b30:	9901      	ldr	r1, [sp, #4]
 8012b32:	ea4f 4920 	mov.w	r9, r0, asr #16
 8012b36:	4462      	add	r2, ip
 8012b38:	4470      	add	r0, lr
 8012b3a:	fb0a 1707 	mla	r7, sl, r7, r1
 8012b3e:	9902      	ldr	r1, [sp, #8]
 8012b40:	3e01      	subs	r6, #1
 8012b42:	f817 7009 	ldrb.w	r7, [r7, r9]
 8012b46:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8012b4a:	f828 7b02 	strh.w	r7, [r8], #2
 8012b4e:	e7ea      	b.n	8012b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8012b50:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012b54:	d417      	bmi.n	8012b86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012b56:	68ae      	ldr	r6, [r5, #8]
 8012b58:	454e      	cmp	r6, r9
 8012b5a:	dd14      	ble.n	8012b86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012b5c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8012b60:	d411      	bmi.n	8012b86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012b62:	68ef      	ldr	r7, [r5, #12]
 8012b64:	4557      	cmp	r7, sl
 8012b66:	dd0e      	ble.n	8012b86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012b68:	9f01      	ldr	r7, [sp, #4]
 8012b6a:	b236      	sxth	r6, r6
 8012b6c:	f06f 0101 	mvn.w	r1, #1
 8012b70:	fb0a 7606 	mla	r6, sl, r6, r7
 8012b74:	9f02      	ldr	r7, [sp, #8]
 8012b76:	f816 6009 	ldrb.w	r6, [r6, r9]
 8012b7a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8012b7e:	fb01 f608 	mul.w	r6, r1, r8
 8012b82:	9903      	ldr	r1, [sp, #12]
 8012b84:	538f      	strh	r7, [r1, r6]
 8012b86:	4470      	add	r0, lr
 8012b88:	4462      	add	r2, ip
 8012b8a:	f108 38ff 	add.w	r8, r8, #4294967295
 8012b8e:	e782      	b.n	8012a96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012b90:	b005      	add	sp, #20
 8012b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012b96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012b96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b9a:	b087      	sub	sp, #28
 8012b9c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8012b9e:	9205      	str	r2, [sp, #20]
 8012ba0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012ba4:	9102      	str	r1, [sp, #8]
 8012ba6:	9203      	str	r2, [sp, #12]
 8012ba8:	6861      	ldr	r1, [r4, #4]
 8012baa:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8012bae:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8012bb2:	fb01 2000 	mla	r0, r1, r0, r2
 8012bb6:	6822      	ldr	r2, [r4, #0]
 8012bb8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8012bbc:	9200      	str	r2, [sp, #0]
 8012bbe:	f8dc 2000 	ldr.w	r2, [ip]
 8012bc2:	9204      	str	r2, [sp, #16]
 8012bc4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8012bc8:	3204      	adds	r2, #4
 8012bca:	9201      	str	r2, [sp, #4]
 8012bcc:	9a03      	ldr	r2, [sp, #12]
 8012bce:	43d5      	mvns	r5, r2
 8012bd0:	b2ed      	uxtb	r5, r5
 8012bd2:	9a02      	ldr	r2, [sp, #8]
 8012bd4:	2a00      	cmp	r2, #0
 8012bd6:	dc03      	bgt.n	8012be0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8012bd8:	9a05      	ldr	r2, [sp, #20]
 8012bda:	2a00      	cmp	r2, #0
 8012bdc:	f340 812c 	ble.w	8012e38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8012be0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012be2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8012be6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012bea:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012bec:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8012bf0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012bf4:	2b00      	cmp	r3, #0
 8012bf6:	dd10      	ble.n	8012c1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012bf8:	140c      	asrs	r4, r1, #16
 8012bfa:	d405      	bmi.n	8012c08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012bfc:	4574      	cmp	r4, lr
 8012bfe:	da03      	bge.n	8012c08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012c00:	1414      	asrs	r4, r2, #16
 8012c02:	d401      	bmi.n	8012c08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012c04:	42bc      	cmp	r4, r7
 8012c06:	db09      	blt.n	8012c1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8012c08:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8012c0a:	3b01      	subs	r3, #1
 8012c0c:	9800      	ldr	r0, [sp, #0]
 8012c0e:	4421      	add	r1, r4
 8012c10:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8012c12:	3002      	adds	r0, #2
 8012c14:	4422      	add	r2, r4
 8012c16:	9000      	str	r0, [sp, #0]
 8012c18:	e7ec      	b.n	8012bf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8012c1a:	d071      	beq.n	8012d00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8012c1c:	1e5c      	subs	r4, r3, #1
 8012c1e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8012c20:	fb06 1604 	mla	r6, r6, r4, r1
 8012c24:	1436      	asrs	r6, r6, #16
 8012c26:	d45d      	bmi.n	8012ce4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012c28:	4576      	cmp	r6, lr
 8012c2a:	da5b      	bge.n	8012ce4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012c2c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8012c2e:	fb06 2404 	mla	r4, r6, r4, r2
 8012c32:	1424      	asrs	r4, r4, #16
 8012c34:	d456      	bmi.n	8012ce4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012c36:	42bc      	cmp	r4, r7
 8012c38:	da54      	bge.n	8012ce4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012c3a:	4698      	mov	r8, r3
 8012c3c:	f8dd 9000 	ldr.w	r9, [sp]
 8012c40:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8012c44:	f1b8 0f00 	cmp.w	r8, #0
 8012c48:	dd54      	ble.n	8012cf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8012c4a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8012c4e:	1414      	asrs	r4, r2, #16
 8012c50:	9804      	ldr	r0, [sp, #16]
 8012c52:	140e      	asrs	r6, r1, #16
 8012c54:	f108 38ff 	add.w	r8, r8, #4294967295
 8012c58:	fb07 0404 	mla	r4, r7, r4, r0
 8012c5c:	9801      	ldr	r0, [sp, #4]
 8012c5e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8012c62:	f8b9 4000 	ldrh.w	r4, [r9]
 8012c66:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8012c6a:	1227      	asrs	r7, r4, #8
 8012c6c:	eb00 0b0e 	add.w	fp, r0, lr
 8012c70:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8012c74:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012c78:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012c7a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8012c7e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8012c82:	4401      	add	r1, r0
 8012c84:	fb16 f60a 	smulbb	r6, r6, sl
 8012c88:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012c8a:	fb1b fb0a 	smulbb	fp, fp, sl
 8012c8e:	fb07 6705 	mla	r7, r7, r5, r6
 8012c92:	10e6      	asrs	r6, r4, #3
 8012c94:	00e4      	lsls	r4, r4, #3
 8012c96:	4402      	add	r2, r0
 8012c98:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012c9c:	b2bf      	uxth	r7, r7
 8012c9e:	b2e4      	uxtb	r4, r4
 8012ca0:	fb06 b605 	mla	r6, r6, r5, fp
 8012ca4:	fb14 f405 	smulbb	r4, r4, r5
 8012ca8:	b2b6      	uxth	r6, r6
 8012caa:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8012cae:	1c7c      	adds	r4, r7, #1
 8012cb0:	f106 0b01 	add.w	fp, r6, #1
 8012cb4:	fa1f fe8e 	uxth.w	lr, lr
 8012cb8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8012cbc:	f10e 0401 	add.w	r4, lr, #1
 8012cc0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8012cc4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8012cc8:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8012ccc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8012cd0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012cd4:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8012cd8:	4327      	orrs	r7, r4
 8012cda:	ea47 070b 	orr.w	r7, r7, fp
 8012cde:	f829 7b02 	strh.w	r7, [r9], #2
 8012ce2:	e7af      	b.n	8012c44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8012ce4:	f04f 0e00 	mov.w	lr, #0
 8012ce8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8012cec:	eb03 040e 	add.w	r4, r3, lr
 8012cf0:	2c00      	cmp	r4, #0
 8012cf2:	dc43      	bgt.n	8012d7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8012cf4:	9a00      	ldr	r2, [sp, #0]
 8012cf6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012cfa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012cfe:	9300      	str	r3, [sp, #0]
 8012d00:	9b02      	ldr	r3, [sp, #8]
 8012d02:	2b00      	cmp	r3, #0
 8012d04:	f340 8098 	ble.w	8012e38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8012d08:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012d0c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012d0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012d12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012d16:	eef0 6a62 	vmov.f32	s13, s5
 8012d1a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012d1e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012d22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012d26:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8012d2a:	eef0 6a43 	vmov.f32	s13, s6
 8012d2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012d32:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8012d36:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012d3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012d3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012d42:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012d46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012d4a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012d4e:	ee12 2a90 	vmov	r2, s5
 8012d52:	eef0 2a47 	vmov.f32	s5, s14
 8012d56:	fb92 f3f3 	sdiv	r3, r2, r3
 8012d5a:	ee13 2a10 	vmov	r2, s6
 8012d5e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8012d60:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012d62:	eeb0 3a67 	vmov.f32	s6, s15
 8012d66:	fb92 f3f3 	sdiv	r3, r2, r3
 8012d6a:	9314      	str	r3, [sp, #80]	@ 0x50
 8012d6c:	9b02      	ldr	r3, [sp, #8]
 8012d6e:	9a05      	ldr	r2, [sp, #20]
 8012d70:	3b01      	subs	r3, #1
 8012d72:	9302      	str	r3, [sp, #8]
 8012d74:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012d76:	bf08      	it	eq
 8012d78:	4613      	moveq	r3, r2
 8012d7a:	e72a      	b.n	8012bd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8012d7c:	140f      	asrs	r7, r1, #16
 8012d7e:	d454      	bmi.n	8012e2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012d80:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8012d84:	42be      	cmp	r6, r7
 8012d86:	dd50      	ble.n	8012e2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012d88:	ea5f 4822 	movs.w	r8, r2, asr #16
 8012d8c:	d44d      	bmi.n	8012e2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012d8e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8012d92:	4544      	cmp	r4, r8
 8012d94:	dd49      	ble.n	8012e2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012d96:	9c04      	ldr	r4, [sp, #16]
 8012d98:	b236      	sxth	r6, r6
 8012d9a:	f06f 0001 	mvn.w	r0, #1
 8012d9e:	fb08 4606 	mla	r6, r8, r6, r4
 8012da2:	9c01      	ldr	r4, [sp, #4]
 8012da4:	fb00 fa0e 	mul.w	sl, r0, lr
 8012da8:	9800      	ldr	r0, [sp, #0]
 8012daa:	f816 8007 	ldrb.w	r8, [r6, r7]
 8012dae:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8012db2:	eb04 0b08 	add.w	fp, r4, r8
 8012db6:	f830 400a 	ldrh.w	r4, [r0, sl]
 8012dba:	9801      	ldr	r0, [sp, #4]
 8012dbc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8012dc0:	1227      	asrs	r7, r4, #8
 8012dc2:	f89b b001 	ldrb.w	fp, [fp, #1]
 8012dc6:	fb16 f609 	smulbb	r6, r6, r9
 8012dca:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012dce:	f810 8008 	ldrb.w	r8, [r0, r8]
 8012dd2:	fb1b fb09 	smulbb	fp, fp, r9
 8012dd6:	fb07 6705 	mla	r7, r7, r5, r6
 8012dda:	10e6      	asrs	r6, r4, #3
 8012ddc:	00e4      	lsls	r4, r4, #3
 8012dde:	9800      	ldr	r0, [sp, #0]
 8012de0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012de4:	b2bf      	uxth	r7, r7
 8012de6:	b2e4      	uxtb	r4, r4
 8012de8:	fb06 b605 	mla	r6, r6, r5, fp
 8012dec:	fb14 f405 	smulbb	r4, r4, r5
 8012df0:	b2b6      	uxth	r6, r6
 8012df2:	fb08 4809 	mla	r8, r8, r9, r4
 8012df6:	1c7c      	adds	r4, r7, #1
 8012df8:	f106 0b01 	add.w	fp, r6, #1
 8012dfc:	fa1f f888 	uxth.w	r8, r8
 8012e00:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8012e04:	f108 0401 	add.w	r4, r8, #1
 8012e08:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8012e0c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8012e10:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8012e14:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8012e18:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012e1c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8012e20:	4327      	orrs	r7, r4
 8012e22:	ea47 070b 	orr.w	r7, r7, fp
 8012e26:	f820 700a 	strh.w	r7, [r0, sl]
 8012e2a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012e2c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012e30:	4401      	add	r1, r0
 8012e32:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012e34:	4402      	add	r2, r0
 8012e36:	e759      	b.n	8012cec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8012e38:	b007      	add	sp, #28
 8012e3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012e40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e44:	b085      	sub	sp, #20
 8012e46:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012e4a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8012e4c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8012e4e:	9203      	str	r2, [sp, #12]
 8012e50:	6870      	ldr	r0, [r6, #4]
 8012e52:	686f      	ldr	r7, [r5, #4]
 8012e54:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8012e58:	3704      	adds	r7, #4
 8012e5a:	9101      	str	r1, [sp, #4]
 8012e5c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8012e60:	fb00 2404 	mla	r4, r0, r4, r2
 8012e64:	6832      	ldr	r2, [r6, #0]
 8012e66:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012e6a:	682a      	ldr	r2, [r5, #0]
 8012e6c:	9202      	str	r2, [sp, #8]
 8012e6e:	9a01      	ldr	r2, [sp, #4]
 8012e70:	2a00      	cmp	r2, #0
 8012e72:	dc03      	bgt.n	8012e7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8012e74:	9a03      	ldr	r2, [sp, #12]
 8012e76:	2a00      	cmp	r2, #0
 8012e78:	f340 80cc 	ble.w	8013014 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8012e7c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012e7e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012e82:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8012e86:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012e88:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8012e8c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012e90:	2b00      	cmp	r3, #0
 8012e92:	dd0d      	ble.n	8012eb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012e94:	1406      	asrs	r6, r0, #16
 8012e96:	d405      	bmi.n	8012ea4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012e98:	454e      	cmp	r6, r9
 8012e9a:	da03      	bge.n	8012ea4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012e9c:	1416      	asrs	r6, r2, #16
 8012e9e:	d401      	bmi.n	8012ea4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012ea0:	4546      	cmp	r6, r8
 8012ea2:	db06      	blt.n	8012eb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012ea4:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8012ea6:	4460      	add	r0, ip
 8012ea8:	3b01      	subs	r3, #1
 8012eaa:	3402      	adds	r4, #2
 8012eac:	4432      	add	r2, r6
 8012eae:	e7ef      	b.n	8012e90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8012eb0:	d00f      	beq.n	8012ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012eb2:	1e5e      	subs	r6, r3, #1
 8012eb4:	fb0c 0e06 	mla	lr, ip, r6, r0
 8012eb8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8012ebc:	d543      	bpl.n	8012f46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8012ebe:	4698      	mov	r8, r3
 8012ec0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8012ec4:	f1b8 0f00 	cmp.w	r8, #0
 8012ec8:	dc71      	bgt.n	8012fae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8012eca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012ece:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012ed2:	9b01      	ldr	r3, [sp, #4]
 8012ed4:	2b00      	cmp	r3, #0
 8012ed6:	f340 809d 	ble.w	8013014 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8012eda:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012ede:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012ee0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012ee4:	eeb0 6a62 	vmov.f32	s12, s5
 8012ee8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012eec:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012ef0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ef4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8012ef8:	eeb0 6a43 	vmov.f32	s12, s6
 8012efc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012f00:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8012f04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012f08:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012f0c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012f10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012f14:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012f18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012f1c:	ee12 2a90 	vmov	r2, s5
 8012f20:	eef0 2a47 	vmov.f32	s5, s14
 8012f24:	fb92 fcf3 	sdiv	ip, r2, r3
 8012f28:	ee13 2a10 	vmov	r2, s6
 8012f2c:	eeb0 3a67 	vmov.f32	s6, s15
 8012f30:	fb92 f3f3 	sdiv	r3, r2, r3
 8012f34:	9312      	str	r3, [sp, #72]	@ 0x48
 8012f36:	9b01      	ldr	r3, [sp, #4]
 8012f38:	9a03      	ldr	r2, [sp, #12]
 8012f3a:	3b01      	subs	r3, #1
 8012f3c:	9301      	str	r3, [sp, #4]
 8012f3e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012f40:	bf08      	it	eq
 8012f42:	4613      	moveq	r3, r2
 8012f44:	e793      	b.n	8012e6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8012f46:	45ce      	cmp	lr, r9
 8012f48:	dab9      	bge.n	8012ebe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012f4a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8012f4c:	fb01 2606 	mla	r6, r1, r6, r2
 8012f50:	1436      	asrs	r6, r6, #16
 8012f52:	d4b4      	bmi.n	8012ebe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012f54:	4546      	cmp	r6, r8
 8012f56:	dab2      	bge.n	8012ebe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012f58:	4698      	mov	r8, r3
 8012f5a:	46a2      	mov	sl, r4
 8012f5c:	f1b8 0f00 	cmp.w	r8, #0
 8012f60:	ddb3      	ble.n	8012eca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8012f62:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012f66:	1416      	asrs	r6, r2, #16
 8012f68:	9902      	ldr	r1, [sp, #8]
 8012f6a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8012f6e:	f108 38ff 	add.w	r8, r8, #4294967295
 8012f72:	4460      	add	r0, ip
 8012f74:	fb09 1606 	mla	r6, r9, r6, r1
 8012f78:	4928      	ldr	r1, [pc, #160]	@ (801301c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8012f7a:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8012f7e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8012f82:	eb07 0b0e 	add.w	fp, r7, lr
 8012f86:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8012f8a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8012f8e:	00f6      	lsls	r6, r6, #3
 8012f90:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8012f94:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8012f96:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8012f9a:	440a      	add	r2, r1
 8012f9c:	ea49 0606 	orr.w	r6, r9, r6
 8012fa0:	f817 900e 	ldrb.w	r9, [r7, lr]
 8012fa4:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8012fa8:	f82a 6b02 	strh.w	r6, [sl], #2
 8012fac:	e7d6      	b.n	8012f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012fae:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012fb2:	d429      	bmi.n	8013008 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012fb4:	68ae      	ldr	r6, [r5, #8]
 8012fb6:	454e      	cmp	r6, r9
 8012fb8:	dd26      	ble.n	8013008 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012fba:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8012fbe:	d423      	bmi.n	8013008 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012fc0:	68e9      	ldr	r1, [r5, #12]
 8012fc2:	4559      	cmp	r1, fp
 8012fc4:	dd20      	ble.n	8013008 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012fc6:	fa0f fe86 	sxth.w	lr, r6
 8012fca:	9902      	ldr	r1, [sp, #8]
 8012fcc:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8012fd0:	f06f 0101 	mvn.w	r1, #1
 8012fd4:	f81e e009 	ldrb.w	lr, [lr, r9]
 8012fd8:	fb01 f908 	mul.w	r9, r1, r8
 8012fdc:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8012fe0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8012fe4:	eb07 060e 	add.w	r6, r7, lr
 8012fe8:	f896 b002 	ldrb.w	fp, [r6, #2]
 8012fec:	7876      	ldrb	r6, [r6, #1]
 8012fee:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8012ff2:	00f6      	lsls	r6, r6, #3
 8012ff4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8012ff8:	ea4b 0606 	orr.w	r6, fp, r6
 8012ffc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8013000:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8013004:	f82a 6009 	strh.w	r6, [sl, r9]
 8013008:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801300a:	4460      	add	r0, ip
 801300c:	f108 38ff 	add.w	r8, r8, #4294967295
 8013010:	440a      	add	r2, r1
 8013012:	e757      	b.n	8012ec4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013014:	b005      	add	sp, #20
 8013016:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801301a:	bf00      	nop
 801301c:	fffff800 	.word	0xfffff800

08013020 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013024:	b087      	sub	sp, #28
 8013026:	468b      	mov	fp, r1
 8013028:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801302c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801302e:	9204      	str	r2, [sp, #16]
 8013030:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013034:	6841      	ldr	r1, [r0, #4]
 8013036:	9205      	str	r2, [sp, #20]
 8013038:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801303c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013040:	fb01 2404 	mla	r4, r1, r4, r2
 8013044:	6802      	ldr	r2, [r0, #0]
 8013046:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801304a:	f8dc 2000 	ldr.w	r2, [ip]
 801304e:	9201      	str	r2, [sp, #4]
 8013050:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013054:	3204      	adds	r2, #4
 8013056:	9202      	str	r2, [sp, #8]
 8013058:	f1bb 0f00 	cmp.w	fp, #0
 801305c:	dc03      	bgt.n	8013066 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801305e:	9a04      	ldr	r2, [sp, #16]
 8013060:	2a00      	cmp	r2, #0
 8013062:	f340 8138 	ble.w	80132d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013066:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013068:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801306c:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013070:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013072:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8013076:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801307a:	2b00      	cmp	r3, #0
 801307c:	dd0e      	ble.n	801309c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801307e:	1402      	asrs	r2, r0, #16
 8013080:	d405      	bmi.n	801308e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013082:	42ba      	cmp	r2, r7
 8013084:	da03      	bge.n	801308e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013086:	140a      	asrs	r2, r1, #16
 8013088:	d401      	bmi.n	801308e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801308a:	42b2      	cmp	r2, r6
 801308c:	db07      	blt.n	801309e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801308e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013090:	3b01      	subs	r3, #1
 8013092:	3402      	adds	r4, #2
 8013094:	4410      	add	r0, r2
 8013096:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013098:	4411      	add	r1, r2
 801309a:	e7ee      	b.n	801307a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801309c:	d019      	beq.n	80130d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801309e:	1e5a      	subs	r2, r3, #1
 80130a0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80130a2:	fb05 0502 	mla	r5, r5, r2, r0
 80130a6:	142d      	asrs	r5, r5, #16
 80130a8:	d409      	bmi.n	80130be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80130aa:	42bd      	cmp	r5, r7
 80130ac:	da07      	bge.n	80130be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80130ae:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80130b0:	fb05 1202 	mla	r2, r5, r2, r1
 80130b4:	1412      	asrs	r2, r2, #16
 80130b6:	d402      	bmi.n	80130be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80130b8:	42b2      	cmp	r2, r6
 80130ba:	f2c0 80ac 	blt.w	8013216 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80130be:	f04f 0e00 	mov.w	lr, #0
 80130c2:	eb03 020e 	add.w	r2, r3, lr
 80130c6:	2a00      	cmp	r2, #0
 80130c8:	dc3e      	bgt.n	8013148 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80130ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80130ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80130d2:	f1bb 0f00 	cmp.w	fp, #0
 80130d6:	f340 80fe 	ble.w	80132d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80130da:	ee30 0a04 	vadd.f32	s0, s0, s8
 80130de:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80130e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80130e4:	f1bb 0b01 	subs.w	fp, fp, #1
 80130e8:	eeb0 6a62 	vmov.f32	s12, s5
 80130ec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80130f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80130f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80130f8:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80130fc:	eeb0 6a43 	vmov.f32	s12, s6
 8013100:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013104:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013108:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801310c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013110:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013114:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013118:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801311c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013120:	ee12 2a90 	vmov	r2, s5
 8013124:	eef0 2a47 	vmov.f32	s5, s14
 8013128:	fb92 f3f3 	sdiv	r3, r2, r3
 801312c:	ee13 2a10 	vmov	r2, s6
 8013130:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013132:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013134:	eeb0 3a67 	vmov.f32	s6, s15
 8013138:	fb92 f3f3 	sdiv	r3, r2, r3
 801313c:	9a04      	ldr	r2, [sp, #16]
 801313e:	9314      	str	r3, [sp, #80]	@ 0x50
 8013140:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013142:	bf08      	it	eq
 8013144:	4613      	moveq	r3, r2
 8013146:	e787      	b.n	8013058 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013148:	1406      	asrs	r6, r0, #16
 801314a:	d45d      	bmi.n	8013208 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801314c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8013150:	42b5      	cmp	r5, r6
 8013152:	dd59      	ble.n	8013208 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013154:	140f      	asrs	r7, r1, #16
 8013156:	d457      	bmi.n	8013208 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013158:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801315c:	42ba      	cmp	r2, r7
 801315e:	dd53      	ble.n	8013208 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013160:	9a01      	ldr	r2, [sp, #4]
 8013162:	b22d      	sxth	r5, r5
 8013164:	fb07 2505 	mla	r5, r7, r5, r2
 8013168:	5daa      	ldrb	r2, [r5, r6]
 801316a:	9d02      	ldr	r5, [sp, #8]
 801316c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013170:	0e2e      	lsrs	r6, r5, #24
 8013172:	d049      	beq.n	8013208 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013174:	f06f 0201 	mvn.w	r2, #1
 8013178:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801317c:	fb02 f20e 	mul.w	r2, r2, lr
 8013180:	f834 8002 	ldrh.w	r8, [r4, r2]
 8013184:	9203      	str	r2, [sp, #12]
 8013186:	9a05      	ldr	r2, [sp, #20]
 8013188:	ea4f 2728 	mov.w	r7, r8, asr #8
 801318c:	4356      	muls	r6, r2
 801318e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013192:	1c72      	adds	r2, r6, #1
 8013194:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013198:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801319c:	b2ed      	uxtb	r5, r5
 801319e:	1212      	asrs	r2, r2, #8
 80131a0:	fa1f f982 	uxth.w	r9, r2
 80131a4:	43d2      	mvns	r2, r2
 80131a6:	fb16 f609 	smulbb	r6, r6, r9
 80131aa:	b2d2      	uxtb	r2, r2
 80131ac:	fb15 f509 	smulbb	r5, r5, r9
 80131b0:	fb07 6702 	mla	r7, r7, r2, r6
 80131b4:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80131b8:	fb1a fa09 	smulbb	sl, sl, r9
 80131bc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80131c0:	b2bf      	uxth	r7, r7
 80131c2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80131c6:	fa5f f888 	uxtb.w	r8, r8
 80131ca:	fb06 a602 	mla	r6, r6, r2, sl
 80131ce:	fb08 5502 	mla	r5, r8, r2, r5
 80131d2:	1c7a      	adds	r2, r7, #1
 80131d4:	b2b6      	uxth	r6, r6
 80131d6:	b2ad      	uxth	r5, r5
 80131d8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80131dc:	9a03      	ldr	r2, [sp, #12]
 80131de:	f105 0a01 	add.w	sl, r5, #1
 80131e2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80131e6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80131ea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80131ee:	ea4a 0707 	orr.w	r7, sl, r7
 80131f2:	f106 0a01 	add.w	sl, r6, #1
 80131f6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80131fa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80131fe:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013202:	ea47 070a 	orr.w	r7, r7, sl
 8013206:	52a7      	strh	r7, [r4, r2]
 8013208:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801320a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801320e:	4410      	add	r0, r2
 8013210:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013212:	4411      	add	r1, r2
 8013214:	e755      	b.n	80130c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013216:	f04f 0800 	mov.w	r8, #0
 801321a:	eba3 0208 	sub.w	r2, r3, r8
 801321e:	2a00      	cmp	r2, #0
 8013220:	f77f af53 	ble.w	80130ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013224:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8013228:	140a      	asrs	r2, r1, #16
 801322a:	9f01      	ldr	r7, [sp, #4]
 801322c:	1405      	asrs	r5, r0, #16
 801322e:	fb06 7202 	mla	r2, r6, r2, r7
 8013232:	5d52      	ldrb	r2, [r2, r5]
 8013234:	9d02      	ldr	r5, [sp, #8]
 8013236:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801323a:	0e2e      	lsrs	r6, r5, #24
 801323c:	d044      	beq.n	80132c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801323e:	9a05      	ldr	r2, [sp, #20]
 8013240:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013244:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013248:	4356      	muls	r6, r2
 801324a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801324e:	1c72      	adds	r2, r6, #1
 8013250:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013254:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013258:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801325c:	b2ed      	uxtb	r5, r5
 801325e:	1212      	asrs	r2, r2, #8
 8013260:	fa1f f982 	uxth.w	r9, r2
 8013264:	43d2      	mvns	r2, r2
 8013266:	fb16 f609 	smulbb	r6, r6, r9
 801326a:	b2d2      	uxtb	r2, r2
 801326c:	fb15 f509 	smulbb	r5, r5, r9
 8013270:	fb07 6702 	mla	r7, r7, r2, r6
 8013274:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013278:	fb1a fa09 	smulbb	sl, sl, r9
 801327c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013280:	b2bf      	uxth	r7, r7
 8013282:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013286:	fa5f fe8e 	uxtb.w	lr, lr
 801328a:	fb06 a602 	mla	r6, r6, r2, sl
 801328e:	fb0e 5502 	mla	r5, lr, r2, r5
 8013292:	1c7a      	adds	r2, r7, #1
 8013294:	b2b6      	uxth	r6, r6
 8013296:	b2ad      	uxth	r5, r5
 8013298:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801329c:	f105 0a01 	add.w	sl, r5, #1
 80132a0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80132a4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80132a8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80132ac:	ea4a 0707 	orr.w	r7, sl, r7
 80132b0:	f106 0a01 	add.w	sl, r6, #1
 80132b4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80132b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80132bc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80132c0:	ea47 070a 	orr.w	r7, r7, sl
 80132c4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80132c8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80132ca:	f108 0801 	add.w	r8, r8, #1
 80132ce:	4410      	add	r0, r2
 80132d0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80132d2:	4411      	add	r1, r2
 80132d4:	e7a1      	b.n	801321a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80132d6:	b007      	add	sp, #28
 80132d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080132dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80132dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132e0:	b085      	sub	sp, #20
 80132e2:	468b      	mov	fp, r1
 80132e4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80132e8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80132ea:	9203      	str	r2, [sp, #12]
 80132ec:	6841      	ldr	r1, [r0, #4]
 80132ee:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80132f2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80132f6:	fb01 2404 	mla	r4, r1, r4, r2
 80132fa:	6802      	ldr	r2, [r0, #0]
 80132fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013300:	f8de 2000 	ldr.w	r2, [lr]
 8013304:	9200      	str	r2, [sp, #0]
 8013306:	f8de 2004 	ldr.w	r2, [lr, #4]
 801330a:	3204      	adds	r2, #4
 801330c:	9201      	str	r2, [sp, #4]
 801330e:	f1bb 0f00 	cmp.w	fp, #0
 8013312:	dc03      	bgt.n	801331c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013314:	9a03      	ldr	r2, [sp, #12]
 8013316:	2a00      	cmp	r2, #0
 8013318:	f340 8153 	ble.w	80135c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801331c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801331e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013322:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013326:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013328:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801332c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013330:	2b00      	cmp	r3, #0
 8013332:	dd0e      	ble.n	8013352 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013334:	1408      	asrs	r0, r1, #16
 8013336:	d405      	bmi.n	8013344 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013338:	42b8      	cmp	r0, r7
 801333a:	da03      	bge.n	8013344 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801333c:	1410      	asrs	r0, r2, #16
 801333e:	d401      	bmi.n	8013344 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013340:	42b0      	cmp	r0, r6
 8013342:	db07      	blt.n	8013354 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013344:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013346:	3b01      	subs	r3, #1
 8013348:	3402      	adds	r4, #2
 801334a:	4401      	add	r1, r0
 801334c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801334e:	4402      	add	r2, r0
 8013350:	e7ee      	b.n	8013330 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013352:	d017      	beq.n	8013384 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013354:	1e58      	subs	r0, r3, #1
 8013356:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013358:	fb05 1500 	mla	r5, r5, r0, r1
 801335c:	142d      	asrs	r5, r5, #16
 801335e:	d409      	bmi.n	8013374 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013360:	42bd      	cmp	r5, r7
 8013362:	da07      	bge.n	8013374 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013364:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8013366:	fb05 2000 	mla	r0, r5, r0, r2
 801336a:	1400      	asrs	r0, r0, #16
 801336c:	d402      	bmi.n	8013374 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801336e:	42b0      	cmp	r0, r6
 8013370:	f2c0 80bc 	blt.w	80134ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013374:	2600      	movs	r6, #0
 8013376:	1998      	adds	r0, r3, r6
 8013378:	2800      	cmp	r0, #0
 801337a:	dc3e      	bgt.n	80133fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801337c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013380:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013384:	f1bb 0f00 	cmp.w	fp, #0
 8013388:	f340 811b 	ble.w	80135c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801338c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013390:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013392:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013396:	f1bb 0b01 	subs.w	fp, fp, #1
 801339a:	eeb0 6a62 	vmov.f32	s12, s5
 801339e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80133a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80133a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80133aa:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80133ae:	eeb0 6a43 	vmov.f32	s12, s6
 80133b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80133b6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80133ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80133be:	ee61 7a27 	vmul.f32	s15, s2, s15
 80133c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80133c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80133ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80133ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80133d2:	ee12 2a90 	vmov	r2, s5
 80133d6:	eef0 2a47 	vmov.f32	s5, s14
 80133da:	fb92 f3f3 	sdiv	r3, r2, r3
 80133de:	ee13 2a10 	vmov	r2, s6
 80133e2:	9311      	str	r3, [sp, #68]	@ 0x44
 80133e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80133e6:	eeb0 3a67 	vmov.f32	s6, s15
 80133ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80133ee:	9a03      	ldr	r2, [sp, #12]
 80133f0:	9312      	str	r3, [sp, #72]	@ 0x48
 80133f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80133f4:	bf08      	it	eq
 80133f6:	4613      	moveq	r3, r2
 80133f8:	e789      	b.n	801330e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80133fa:	140f      	asrs	r7, r1, #16
 80133fc:	d426      	bmi.n	801344c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80133fe:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013402:	42bd      	cmp	r5, r7
 8013404:	dd22      	ble.n	801344c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013406:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801340a:	d41f      	bmi.n	801344c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801340c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013410:	4560      	cmp	r0, ip
 8013412:	dd1b      	ble.n	801344c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013414:	9800      	ldr	r0, [sp, #0]
 8013416:	b22d      	sxth	r5, r5
 8013418:	fb0c 0505 	mla	r5, ip, r5, r0
 801341c:	5de8      	ldrb	r0, [r5, r7]
 801341e:	9d01      	ldr	r5, [sp, #4]
 8013420:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8013424:	0e07      	lsrs	r7, r0, #24
 8013426:	2fff      	cmp	r7, #255	@ 0xff
 8013428:	d116      	bne.n	8013458 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801342a:	f06f 0501 	mvn.w	r5, #1
 801342e:	fb05 f706 	mul.w	r7, r5, r6
 8013432:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8013436:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801343a:	0945      	lsrs	r5, r0, #5
 801343c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013440:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013444:	ea4c 0505 	orr.w	r5, ip, r5
 8013448:	4305      	orrs	r5, r0
 801344a:	53e5      	strh	r5, [r4, r7]
 801344c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801344e:	3e01      	subs	r6, #1
 8013450:	4401      	add	r1, r0
 8013452:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013454:	4402      	add	r2, r0
 8013456:	e78e      	b.n	8013376 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8013458:	b2fd      	uxtb	r5, r7
 801345a:	2f00      	cmp	r7, #0
 801345c:	d0f6      	beq.n	801344c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801345e:	f06f 0701 	mvn.w	r7, #1
 8013462:	fa1f f985 	uxth.w	r9, r5
 8013466:	43ed      	mvns	r5, r5
 8013468:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801346c:	4377      	muls	r7, r6
 801346e:	fb1a fa09 	smulbb	sl, sl, r9
 8013472:	b2ed      	uxtb	r5, r5
 8013474:	f834 8007 	ldrh.w	r8, [r4, r7]
 8013478:	9702      	str	r7, [sp, #8]
 801347a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801347e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013482:	fb17 f709 	smulbb	r7, r7, r9
 8013486:	b2c0      	uxtb	r0, r0
 8013488:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801348c:	fb10 f009 	smulbb	r0, r0, r9
 8013490:	fb0c 7c05 	mla	ip, ip, r5, r7
 8013494:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8013498:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801349c:	fa1f fc8c 	uxth.w	ip, ip
 80134a0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80134a4:	fa5f f888 	uxtb.w	r8, r8
 80134a8:	fb07 a705 	mla	r7, r7, r5, sl
 80134ac:	fb08 0005 	mla	r0, r8, r5, r0
 80134b0:	f10c 0501 	add.w	r5, ip, #1
 80134b4:	b2bf      	uxth	r7, r7
 80134b6:	b280      	uxth	r0, r0
 80134b8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80134bc:	f100 0a01 	add.w	sl, r0, #1
 80134c0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80134c4:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80134c8:	9802      	ldr	r0, [sp, #8]
 80134ca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80134ce:	ea4a 0c0c 	orr.w	ip, sl, ip
 80134d2:	f107 0a01 	add.w	sl, r7, #1
 80134d6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80134da:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80134de:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80134e2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80134e6:	f824 c000 	strh.w	ip, [r4, r0]
 80134ea:	e7af      	b.n	801344c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80134ec:	f04f 0800 	mov.w	r8, #0
 80134f0:	eba3 0008 	sub.w	r0, r3, r8
 80134f4:	2800      	cmp	r0, #0
 80134f6:	f77f af41 	ble.w	801337c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80134fa:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80134fe:	1410      	asrs	r0, r2, #16
 8013500:	9f00      	ldr	r7, [sp, #0]
 8013502:	140d      	asrs	r5, r1, #16
 8013504:	fb06 7000 	mla	r0, r6, r0, r7
 8013508:	5d40      	ldrb	r0, [r0, r5]
 801350a:	9d01      	ldr	r5, [sp, #4]
 801350c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8013510:	0e2e      	lsrs	r6, r5, #24
 8013512:	2eff      	cmp	r6, #255	@ 0xff
 8013514:	d112      	bne.n	801353c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8013516:	482c      	ldr	r0, [pc, #176]	@ (80135c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8013518:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801351c:	0968      	lsrs	r0, r5, #5
 801351e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013522:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013526:	4330      	orrs	r0, r6
 8013528:	4328      	orrs	r0, r5
 801352a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801352e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013530:	f108 0801 	add.w	r8, r8, #1
 8013534:	4401      	add	r1, r0
 8013536:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013538:	4402      	add	r2, r0
 801353a:	e7d9      	b.n	80134f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801353c:	b2f0      	uxtb	r0, r6
 801353e:	2e00      	cmp	r6, #0
 8013540:	d0f5      	beq.n	801352e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013542:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8013546:	fa1f f980 	uxth.w	r9, r0
 801354a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801354e:	43c0      	mvns	r0, r0
 8013550:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013554:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013558:	fb16 f609 	smulbb	r6, r6, r9
 801355c:	b2c0      	uxtb	r0, r0
 801355e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013562:	b2ed      	uxtb	r5, r5
 8013564:	fb1a fa09 	smulbb	sl, sl, r9
 8013568:	fb07 6700 	mla	r7, r7, r0, r6
 801356c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013570:	fb15 f509 	smulbb	r5, r5, r9
 8013574:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013578:	b2bf      	uxth	r7, r7
 801357a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801357e:	fa5f fc8c 	uxtb.w	ip, ip
 8013582:	fb06 a600 	mla	r6, r6, r0, sl
 8013586:	fb0c 5500 	mla	r5, ip, r0, r5
 801358a:	1c78      	adds	r0, r7, #1
 801358c:	b2b6      	uxth	r6, r6
 801358e:	b2ad      	uxth	r5, r5
 8013590:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8013594:	f105 0a01 	add.w	sl, r5, #1
 8013598:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801359c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80135a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80135a4:	ea4a 0707 	orr.w	r7, sl, r7
 80135a8:	f106 0a01 	add.w	sl, r6, #1
 80135ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80135b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80135b4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80135b8:	ea47 070a 	orr.w	r7, r7, sl
 80135bc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80135c0:	e7b5      	b.n	801352e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80135c2:	b005      	add	sp, #20
 80135c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135c8:	fffff800 	.word	0xfffff800

080135cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80135cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135d0:	b087      	sub	sp, #28
 80135d2:	468b      	mov	fp, r1
 80135d4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80135d8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80135da:	9204      	str	r2, [sp, #16]
 80135dc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80135e0:	6861      	ldr	r1, [r4, #4]
 80135e2:	9205      	str	r2, [sp, #20]
 80135e4:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80135e8:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80135ec:	fb01 2000 	mla	r0, r1, r0, r2
 80135f0:	6822      	ldr	r2, [r4, #0]
 80135f2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80135f6:	f8de 2000 	ldr.w	r2, [lr]
 80135fa:	9201      	str	r2, [sp, #4]
 80135fc:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013600:	9202      	str	r2, [sp, #8]
 8013602:	f1bb 0f00 	cmp.w	fp, #0
 8013606:	dc03      	bgt.n	8013610 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8013608:	9a04      	ldr	r2, [sp, #16]
 801360a:	2a00      	cmp	r2, #0
 801360c:	f340 8142 	ble.w	8013894 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013610:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013612:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013616:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801361a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801361c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013620:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013624:	2b00      	cmp	r3, #0
 8013626:	dd0e      	ble.n	8013646 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8013628:	140c      	asrs	r4, r1, #16
 801362a:	d405      	bmi.n	8013638 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801362c:	42bc      	cmp	r4, r7
 801362e:	da03      	bge.n	8013638 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013630:	1414      	asrs	r4, r2, #16
 8013632:	d401      	bmi.n	8013638 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013634:	42b4      	cmp	r4, r6
 8013636:	db07      	blt.n	8013648 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013638:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801363a:	3b01      	subs	r3, #1
 801363c:	3002      	adds	r0, #2
 801363e:	4421      	add	r1, r4
 8013640:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013642:	4422      	add	r2, r4
 8013644:	e7ee      	b.n	8013624 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8013646:	d019      	beq.n	801367c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013648:	1e5c      	subs	r4, r3, #1
 801364a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801364c:	fb05 1504 	mla	r5, r5, r4, r1
 8013650:	142d      	asrs	r5, r5, #16
 8013652:	d409      	bmi.n	8013668 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013654:	42bd      	cmp	r5, r7
 8013656:	da07      	bge.n	8013668 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013658:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801365a:	fb05 2404 	mla	r4, r5, r4, r2
 801365e:	1424      	asrs	r4, r4, #16
 8013660:	d402      	bmi.n	8013668 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013662:	42b4      	cmp	r4, r6
 8013664:	f2c0 80b1 	blt.w	80137ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8013668:	f04f 0800 	mov.w	r8, #0
 801366c:	eb03 0408 	add.w	r4, r3, r8
 8013670:	2c00      	cmp	r4, #0
 8013672:	dc3e      	bgt.n	80136f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8013674:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013678:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801367c:	f1bb 0f00 	cmp.w	fp, #0
 8013680:	f340 8108 	ble.w	8013894 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013684:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013688:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801368a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801368e:	f1bb 0b01 	subs.w	fp, fp, #1
 8013692:	eeb0 6a62 	vmov.f32	s12, s5
 8013696:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801369a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801369e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80136a2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80136a6:	eeb0 6a43 	vmov.f32	s12, s6
 80136aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80136ae:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80136b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80136b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80136ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80136be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80136c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80136c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80136ca:	ee12 2a90 	vmov	r2, s5
 80136ce:	eef0 2a47 	vmov.f32	s5, s14
 80136d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80136d6:	ee13 2a10 	vmov	r2, s6
 80136da:	9313      	str	r3, [sp, #76]	@ 0x4c
 80136dc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80136de:	eeb0 3a67 	vmov.f32	s6, s15
 80136e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80136e6:	9a04      	ldr	r2, [sp, #16]
 80136e8:	9314      	str	r3, [sp, #80]	@ 0x50
 80136ea:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80136ec:	bf08      	it	eq
 80136ee:	4613      	moveq	r3, r2
 80136f0:	e787      	b.n	8013602 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80136f2:	140e      	asrs	r6, r1, #16
 80136f4:	d462      	bmi.n	80137bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80136f6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80136fa:	42b5      	cmp	r5, r6
 80136fc:	dd5e      	ble.n	80137bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80136fe:	1417      	asrs	r7, r2, #16
 8013700:	d45c      	bmi.n	80137bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013702:	f8de 400c 	ldr.w	r4, [lr, #12]
 8013706:	42bc      	cmp	r4, r7
 8013708:	dd58      	ble.n	80137bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801370a:	b22d      	sxth	r5, r5
 801370c:	9c02      	ldr	r4, [sp, #8]
 801370e:	fb07 6505 	mla	r5, r7, r5, r6
 8013712:	5d66      	ldrb	r6, [r4, r5]
 8013714:	2e00      	cmp	r6, #0
 8013716:	d051      	beq.n	80137bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013718:	9c01      	ldr	r4, [sp, #4]
 801371a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801371e:	f06f 0401 	mvn.w	r4, #1
 8013722:	fb04 f408 	mul.w	r4, r4, r8
 8013726:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801372a:	5b05      	ldrh	r5, [r0, r4]
 801372c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013730:	9403      	str	r4, [sp, #12]
 8013732:	9c05      	ldr	r4, [sp, #20]
 8013734:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013738:	4366      	muls	r6, r4
 801373a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801373e:	1c74      	adds	r4, r6, #1
 8013740:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013744:	122e      	asrs	r6, r5, #8
 8013746:	1224      	asrs	r4, r4, #8
 8013748:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801374c:	00ed      	lsls	r5, r5, #3
 801374e:	b2a7      	uxth	r7, r4
 8013750:	43e4      	mvns	r4, r4
 8013752:	b2ed      	uxtb	r5, r5
 8013754:	b2e4      	uxtb	r4, r4
 8013756:	fb16 f604 	smulbb	r6, r6, r4
 801375a:	fb15 f504 	smulbb	r5, r5, r4
 801375e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013762:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8013766:	fb1a fa04 	smulbb	sl, sl, r4
 801376a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801376e:	fa1f fc8c 	uxth.w	ip, ip
 8013772:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013776:	fa5f f989 	uxtb.w	r9, r9
 801377a:	fb06 a607 	mla	r6, r6, r7, sl
 801377e:	f10c 0401 	add.w	r4, ip, #1
 8013782:	fb09 5507 	mla	r5, r9, r7, r5
 8013786:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801378a:	9c03      	ldr	r4, [sp, #12]
 801378c:	b2ad      	uxth	r5, r5
 801378e:	b2b6      	uxth	r6, r6
 8013790:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013794:	f105 0a01 	add.w	sl, r5, #1
 8013798:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801379c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80137a0:	ea4a 0c0c 	orr.w	ip, sl, ip
 80137a4:	f106 0a01 	add.w	sl, r6, #1
 80137a8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80137ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80137b0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80137b4:	ea4c 0c0a 	orr.w	ip, ip, sl
 80137b8:	f820 c004 	strh.w	ip, [r0, r4]
 80137bc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80137be:	f108 38ff 	add.w	r8, r8, #4294967295
 80137c2:	4421      	add	r1, r4
 80137c4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80137c6:	4422      	add	r2, r4
 80137c8:	e750      	b.n	801366c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80137ca:	f04f 0900 	mov.w	r9, #0
 80137ce:	eba3 0409 	sub.w	r4, r3, r9
 80137d2:	2c00      	cmp	r4, #0
 80137d4:	f77f af4e 	ble.w	8013674 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80137d8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80137dc:	140d      	asrs	r5, r1, #16
 80137de:	1414      	asrs	r4, r2, #16
 80137e0:	fb06 5404 	mla	r4, r6, r4, r5
 80137e4:	9d02      	ldr	r5, [sp, #8]
 80137e6:	5d2e      	ldrb	r6, [r5, r4]
 80137e8:	2e00      	cmp	r6, #0
 80137ea:	d04c      	beq.n	8013886 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80137ec:	9d01      	ldr	r5, [sp, #4]
 80137ee:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80137f2:	9c05      	ldr	r4, [sp, #20]
 80137f4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80137f8:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80137fc:	4366      	muls	r6, r4
 80137fe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013802:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013806:	1c74      	adds	r4, r6, #1
 8013808:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801380c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013810:	122e      	asrs	r6, r5, #8
 8013812:	1224      	asrs	r4, r4, #8
 8013814:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013818:	00ed      	lsls	r5, r5, #3
 801381a:	b2a7      	uxth	r7, r4
 801381c:	43e4      	mvns	r4, r4
 801381e:	b2ed      	uxtb	r5, r5
 8013820:	b2e4      	uxtb	r4, r4
 8013822:	fb16 f604 	smulbb	r6, r6, r4
 8013826:	fb15 f504 	smulbb	r5, r5, r4
 801382a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801382e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8013832:	fb1a fa04 	smulbb	sl, sl, r4
 8013836:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801383a:	fa1f fc8c 	uxth.w	ip, ip
 801383e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013842:	fa5f f888 	uxtb.w	r8, r8
 8013846:	fb06 a607 	mla	r6, r6, r7, sl
 801384a:	f10c 0401 	add.w	r4, ip, #1
 801384e:	fb08 5507 	mla	r5, r8, r7, r5
 8013852:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013856:	b2ad      	uxth	r5, r5
 8013858:	b2b6      	uxth	r6, r6
 801385a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801385e:	f105 0a01 	add.w	sl, r5, #1
 8013862:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013866:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801386a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801386e:	f106 0a01 	add.w	sl, r6, #1
 8013872:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013876:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801387a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801387e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013882:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8013886:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013888:	f109 0901 	add.w	r9, r9, #1
 801388c:	4421      	add	r1, r4
 801388e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013890:	4422      	add	r2, r4
 8013892:	e79c      	b.n	80137ce <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8013894:	b007      	add	sp, #28
 8013896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801389a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801389a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801389e:	b085      	sub	sp, #20
 80138a0:	468b      	mov	fp, r1
 80138a2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80138a6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80138a8:	9203      	str	r2, [sp, #12]
 80138aa:	6861      	ldr	r1, [r4, #4]
 80138ac:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80138b0:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 80138b4:	fb01 2000 	mla	r0, r1, r0, r2
 80138b8:	6822      	ldr	r2, [r4, #0]
 80138ba:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80138be:	f8d8 2000 	ldr.w	r2, [r8]
 80138c2:	9200      	str	r2, [sp, #0]
 80138c4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80138c8:	9201      	str	r2, [sp, #4]
 80138ca:	f1bb 0f00 	cmp.w	fp, #0
 80138ce:	dc03      	bgt.n	80138d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80138d0:	9a03      	ldr	r2, [sp, #12]
 80138d2:	2a00      	cmp	r2, #0
 80138d4:	f340 8146 	ble.w	8013b64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80138d8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80138da:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80138de:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80138e2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80138e4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80138e8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80138ec:	2b00      	cmp	r3, #0
 80138ee:	dd0e      	ble.n	801390e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80138f0:	140c      	asrs	r4, r1, #16
 80138f2:	d405      	bmi.n	8013900 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80138f4:	42bc      	cmp	r4, r7
 80138f6:	da03      	bge.n	8013900 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80138f8:	1414      	asrs	r4, r2, #16
 80138fa:	d401      	bmi.n	8013900 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80138fc:	42b4      	cmp	r4, r6
 80138fe:	db07      	blt.n	8013910 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013900:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8013902:	3b01      	subs	r3, #1
 8013904:	3002      	adds	r0, #2
 8013906:	4421      	add	r1, r4
 8013908:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801390a:	4422      	add	r2, r4
 801390c:	e7ee      	b.n	80138ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801390e:	d017      	beq.n	8013940 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013910:	1e5c      	subs	r4, r3, #1
 8013912:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013914:	fb05 1504 	mla	r5, r5, r4, r1
 8013918:	142d      	asrs	r5, r5, #16
 801391a:	d409      	bmi.n	8013930 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801391c:	42bd      	cmp	r5, r7
 801391e:	da07      	bge.n	8013930 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013920:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8013922:	fb05 2404 	mla	r4, r5, r4, r2
 8013926:	1424      	asrs	r4, r4, #16
 8013928:	d402      	bmi.n	8013930 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801392a:	42b4      	cmp	r4, r6
 801392c:	f2c0 80b3 	blt.w	8013a96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8013930:	2600      	movs	r6, #0
 8013932:	199c      	adds	r4, r3, r6
 8013934:	2c00      	cmp	r4, #0
 8013936:	dc3e      	bgt.n	80139b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8013938:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801393c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013940:	f1bb 0f00 	cmp.w	fp, #0
 8013944:	f340 810e 	ble.w	8013b64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8013948:	ee30 0a04 	vadd.f32	s0, s0, s8
 801394c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801394e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013952:	f1bb 0b01 	subs.w	fp, fp, #1
 8013956:	eeb0 6a62 	vmov.f32	s12, s5
 801395a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801395e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013962:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013966:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801396a:	eeb0 6a43 	vmov.f32	s12, s6
 801396e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013972:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013976:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801397a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801397e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013982:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013986:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801398a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801398e:	ee12 2a90 	vmov	r2, s5
 8013992:	eef0 2a47 	vmov.f32	s5, s14
 8013996:	fb92 f3f3 	sdiv	r3, r2, r3
 801399a:	ee13 2a10 	vmov	r2, s6
 801399e:	9311      	str	r3, [sp, #68]	@ 0x44
 80139a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80139a2:	eeb0 3a67 	vmov.f32	s6, s15
 80139a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80139aa:	9a03      	ldr	r2, [sp, #12]
 80139ac:	9312      	str	r3, [sp, #72]	@ 0x48
 80139ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80139b0:	bf08      	it	eq
 80139b2:	4613      	moveq	r3, r2
 80139b4:	e789      	b.n	80138ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80139b6:	140f      	asrs	r7, r1, #16
 80139b8:	d418      	bmi.n	80139ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80139ba:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80139be:	42bd      	cmp	r5, r7
 80139c0:	dd14      	ble.n	80139ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80139c2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80139c6:	d411      	bmi.n	80139ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80139c8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80139cc:	4564      	cmp	r4, ip
 80139ce:	dd0d      	ble.n	80139ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80139d0:	b22d      	sxth	r5, r5
 80139d2:	9c01      	ldr	r4, [sp, #4]
 80139d4:	fb0c 7505 	mla	r5, ip, r5, r7
 80139d8:	5d64      	ldrb	r4, [r4, r5]
 80139da:	2cff      	cmp	r4, #255	@ 0xff
 80139dc:	d10c      	bne.n	80139f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80139de:	9c00      	ldr	r4, [sp, #0]
 80139e0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80139e4:	f06f 0401 	mvn.w	r4, #1
 80139e8:	4374      	muls	r4, r6
 80139ea:	5305      	strh	r5, [r0, r4]
 80139ec:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80139ee:	3e01      	subs	r6, #1
 80139f0:	4421      	add	r1, r4
 80139f2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80139f4:	4422      	add	r2, r4
 80139f6:	e79c      	b.n	8013932 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80139f8:	2c00      	cmp	r4, #0
 80139fa:	d0f7      	beq.n	80139ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80139fc:	9f00      	ldr	r7, [sp, #0]
 80139fe:	fa1f fc84 	uxth.w	ip, r4
 8013a02:	43e4      	mvns	r4, r4
 8013a04:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8013a08:	f06f 0501 	mvn.w	r5, #1
 8013a0c:	b2e4      	uxtb	r4, r4
 8013a0e:	4375      	muls	r5, r6
 8013a10:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8013a14:	9502      	str	r5, [sp, #8]
 8013a16:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8013a1a:	5b45      	ldrh	r5, [r0, r5]
 8013a1c:	122f      	asrs	r7, r5, #8
 8013a1e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013a22:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013a26:	00ed      	lsls	r5, r5, #3
 8013a28:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013a2c:	fb17 f704 	smulbb	r7, r7, r4
 8013a30:	b2ed      	uxtb	r5, r5
 8013a32:	fb1a fa04 	smulbb	sl, sl, r4
 8013a36:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8013a3a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8013a3e:	fb15 f504 	smulbb	r5, r5, r4
 8013a42:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8013a46:	fa1f fe8e 	uxth.w	lr, lr
 8013a4a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013a4e:	fa5f f989 	uxtb.w	r9, r9
 8013a52:	fb07 a70c 	mla	r7, r7, ip, sl
 8013a56:	f10e 0401 	add.w	r4, lr, #1
 8013a5a:	fb09 550c 	mla	r5, r9, ip, r5
 8013a5e:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8013a62:	9c02      	ldr	r4, [sp, #8]
 8013a64:	b2ad      	uxth	r5, r5
 8013a66:	b2bf      	uxth	r7, r7
 8013a68:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8013a6c:	f105 0a01 	add.w	sl, r5, #1
 8013a70:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013a74:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013a78:	ea4a 0e0e 	orr.w	lr, sl, lr
 8013a7c:	f107 0a01 	add.w	sl, r7, #1
 8013a80:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8013a84:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013a88:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013a8c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8013a90:	f820 e004 	strh.w	lr, [r0, r4]
 8013a94:	e7aa      	b.n	80139ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8013a96:	f04f 0900 	mov.w	r9, #0
 8013a9a:	eba3 0409 	sub.w	r4, r3, r9
 8013a9e:	2c00      	cmp	r4, #0
 8013aa0:	f77f af4a 	ble.w	8013938 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013aa4:	1414      	asrs	r4, r2, #16
 8013aa6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8013aaa:	140d      	asrs	r5, r1, #16
 8013aac:	fb06 5504 	mla	r5, r6, r4, r5
 8013ab0:	9c01      	ldr	r4, [sp, #4]
 8013ab2:	5d64      	ldrb	r4, [r4, r5]
 8013ab4:	2cff      	cmp	r4, #255	@ 0xff
 8013ab6:	d10b      	bne.n	8013ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8013ab8:	9c00      	ldr	r4, [sp, #0]
 8013aba:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8013abe:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8013ac2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8013ac4:	f109 0901 	add.w	r9, r9, #1
 8013ac8:	4421      	add	r1, r4
 8013aca:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8013acc:	4422      	add	r2, r4
 8013ace:	e7e4      	b.n	8013a9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8013ad0:	2c00      	cmp	r4, #0
 8013ad2:	d0f6      	beq.n	8013ac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013ad4:	9e00      	ldr	r6, [sp, #0]
 8013ad6:	b2a7      	uxth	r7, r4
 8013ad8:	43e4      	mvns	r4, r4
 8013ada:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8013ade:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8013ae2:	b2e4      	uxtb	r4, r4
 8013ae4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013ae8:	122e      	asrs	r6, r5, #8
 8013aea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013aee:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013af2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013af6:	00ed      	lsls	r5, r5, #3
 8013af8:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013afc:	fb16 f604 	smulbb	r6, r6, r4
 8013b00:	b2ed      	uxtb	r5, r5
 8013b02:	fb1a fa04 	smulbb	sl, sl, r4
 8013b06:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013b0a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013b0e:	fb15 f504 	smulbb	r5, r5, r4
 8013b12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013b16:	fa1f fc8c 	uxth.w	ip, ip
 8013b1a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013b1e:	fa5f fe8e 	uxtb.w	lr, lr
 8013b22:	fb06 a607 	mla	r6, r6, r7, sl
 8013b26:	f10c 0401 	add.w	r4, ip, #1
 8013b2a:	fb0e 5507 	mla	r5, lr, r7, r5
 8013b2e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013b32:	b2ad      	uxth	r5, r5
 8013b34:	b2b6      	uxth	r6, r6
 8013b36:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013b3a:	f105 0a01 	add.w	sl, r5, #1
 8013b3e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013b42:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013b46:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013b4a:	f106 0a01 	add.w	sl, r6, #1
 8013b4e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013b52:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013b56:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013b5a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013b5e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8013b62:	e7ae      	b.n	8013ac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013b64:	b005      	add	sp, #20
 8013b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013b6a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013b6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b6e:	b085      	sub	sp, #20
 8013b70:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013b72:	9203      	str	r2, [sp, #12]
 8013b74:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8013b78:	9100      	str	r1, [sp, #0]
 8013b7a:	9201      	str	r2, [sp, #4]
 8013b7c:	6841      	ldr	r1, [r0, #4]
 8013b7e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8013b82:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013b86:	fb01 2404 	mla	r4, r1, r4, r2
 8013b8a:	6802      	ldr	r2, [r0, #0]
 8013b8c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013b90:	f8de 2000 	ldr.w	r2, [lr]
 8013b94:	9202      	str	r2, [sp, #8]
 8013b96:	9a01      	ldr	r2, [sp, #4]
 8013b98:	43d6      	mvns	r6, r2
 8013b9a:	b2f6      	uxtb	r6, r6
 8013b9c:	9a00      	ldr	r2, [sp, #0]
 8013b9e:	2a00      	cmp	r2, #0
 8013ba0:	dc03      	bgt.n	8013baa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013ba2:	9a03      	ldr	r2, [sp, #12]
 8013ba4:	2a00      	cmp	r2, #0
 8013ba6:	f340 8124 	ble.w	8013df2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8013baa:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013bac:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013bb0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013bb4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013bb6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013bba:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013bbe:	2b00      	cmp	r3, #0
 8013bc0:	dd0e      	ble.n	8013be0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013bc2:	1408      	asrs	r0, r1, #16
 8013bc4:	d405      	bmi.n	8013bd2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013bc6:	4560      	cmp	r0, ip
 8013bc8:	da03      	bge.n	8013bd2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013bca:	1410      	asrs	r0, r2, #16
 8013bcc:	d401      	bmi.n	8013bd2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013bce:	42b8      	cmp	r0, r7
 8013bd0:	db07      	blt.n	8013be2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013bd2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013bd4:	3b01      	subs	r3, #1
 8013bd6:	3402      	adds	r4, #2
 8013bd8:	4401      	add	r1, r0
 8013bda:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013bdc:	4402      	add	r2, r0
 8013bde:	e7ee      	b.n	8013bbe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013be0:	d06e      	beq.n	8013cc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013be2:	1e58      	subs	r0, r3, #1
 8013be4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013be6:	fb05 1500 	mla	r5, r5, r0, r1
 8013bea:	142d      	asrs	r5, r5, #16
 8013bec:	d45c      	bmi.n	8013ca8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013bee:	4565      	cmp	r5, ip
 8013bf0:	da5a      	bge.n	8013ca8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013bf2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8013bf4:	fb05 2000 	mla	r0, r5, r0, r2
 8013bf8:	1400      	asrs	r0, r0, #16
 8013bfa:	d455      	bmi.n	8013ca8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013bfc:	42b8      	cmp	r0, r7
 8013bfe:	da53      	bge.n	8013ca8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013c00:	4699      	mov	r9, r3
 8013c02:	46a2      	mov	sl, r4
 8013c04:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8013c08:	f1b9 0f00 	cmp.w	r9, #0
 8013c0c:	dd54      	ble.n	8013cb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013c0e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013c12:	140d      	asrs	r5, r1, #16
 8013c14:	1410      	asrs	r0, r2, #16
 8013c16:	f109 39ff 	add.w	r9, r9, #4294967295
 8013c1a:	fb07 5000 	mla	r0, r7, r0, r5
 8013c1e:	9d02      	ldr	r5, [sp, #8]
 8013c20:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013c24:	f8ba 5000 	ldrh.w	r5, [sl]
 8013c28:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013c2c:	122f      	asrs	r7, r5, #8
 8013c2e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013c32:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013c36:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013c3a:	00ed      	lsls	r5, r5, #3
 8013c3c:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8013c40:	fb17 f706 	smulbb	r7, r7, r6
 8013c44:	b2ed      	uxtb	r5, r5
 8013c46:	fb18 f806 	smulbb	r8, r8, r6
 8013c4a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8013c4e:	10c7      	asrs	r7, r0, #3
 8013c50:	fb15 f506 	smulbb	r5, r5, r6
 8013c54:	00c0      	lsls	r0, r0, #3
 8013c56:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013c5a:	fa1f fc8c 	uxth.w	ip, ip
 8013c5e:	b2c0      	uxtb	r0, r0
 8013c60:	fb07 870b 	mla	r7, r7, fp, r8
 8013c64:	fb00 500b 	mla	r0, r0, fp, r5
 8013c68:	f10c 0501 	add.w	r5, ip, #1
 8013c6c:	b2bf      	uxth	r7, r7
 8013c6e:	b280      	uxth	r0, r0
 8013c70:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013c74:	f107 0801 	add.w	r8, r7, #1
 8013c78:	1c45      	adds	r5, r0, #1
 8013c7a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8013c7e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013c82:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013c86:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013c88:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013c8c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013c90:	4401      	add	r1, r0
 8013c92:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8013c96:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013c98:	ea45 0c0c 	orr.w	ip, r5, ip
 8013c9c:	4402      	add	r2, r0
 8013c9e:	ea4c 0c08 	orr.w	ip, ip, r8
 8013ca2:	f82a cb02 	strh.w	ip, [sl], #2
 8013ca6:	e7af      	b.n	8013c08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013ca8:	f04f 0800 	mov.w	r8, #0
 8013cac:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8013cb0:	eb03 0008 	add.w	r0, r3, r8
 8013cb4:	2800      	cmp	r0, #0
 8013cb6:	dc41      	bgt.n	8013d3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8013cb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013cbc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013cc0:	9b00      	ldr	r3, [sp, #0]
 8013cc2:	2b00      	cmp	r3, #0
 8013cc4:	f340 8095 	ble.w	8013df2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8013cc8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8013ccc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013cce:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013cd2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013cd6:	eef0 6a62 	vmov.f32	s13, s5
 8013cda:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013cde:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013ce2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013ce6:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8013cea:	eef0 6a43 	vmov.f32	s13, s6
 8013cee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013cf2:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8013cf6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013cfa:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013cfe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013d02:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013d06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013d0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013d0e:	ee12 2a90 	vmov	r2, s5
 8013d12:	eef0 2a47 	vmov.f32	s5, s14
 8013d16:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d1a:	ee13 2a10 	vmov	r2, s6
 8013d1e:	9311      	str	r3, [sp, #68]	@ 0x44
 8013d20:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013d22:	eeb0 3a67 	vmov.f32	s6, s15
 8013d26:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d2a:	9312      	str	r3, [sp, #72]	@ 0x48
 8013d2c:	9b00      	ldr	r3, [sp, #0]
 8013d2e:	9a03      	ldr	r2, [sp, #12]
 8013d30:	3b01      	subs	r3, #1
 8013d32:	9300      	str	r3, [sp, #0]
 8013d34:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013d36:	bf08      	it	eq
 8013d38:	4613      	moveq	r3, r2
 8013d3a:	e72f      	b.n	8013b9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8013d3c:	140f      	asrs	r7, r1, #16
 8013d3e:	d451      	bmi.n	8013de4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013d40:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013d44:	42bd      	cmp	r5, r7
 8013d46:	dd4d      	ble.n	8013de4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013d48:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013d4c:	d44a      	bmi.n	8013de4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013d4e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013d52:	4560      	cmp	r0, ip
 8013d54:	dd46      	ble.n	8013de4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013d56:	b22d      	sxth	r5, r5
 8013d58:	9802      	ldr	r0, [sp, #8]
 8013d5a:	fb0c 7505 	mla	r5, ip, r5, r7
 8013d5e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8013d62:	f06f 0501 	mvn.w	r5, #1
 8013d66:	fb05 fb08 	mul.w	fp, r5, r8
 8013d6a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013d6e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013d72:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013d76:	122f      	asrs	r7, r5, #8
 8013d78:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013d7c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013d80:	00ed      	lsls	r5, r5, #3
 8013d82:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8013d86:	fb17 f706 	smulbb	r7, r7, r6
 8013d8a:	b2ed      	uxtb	r5, r5
 8013d8c:	fb19 f906 	smulbb	r9, r9, r6
 8013d90:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013d94:	10c7      	asrs	r7, r0, #3
 8013d96:	fb15 f506 	smulbb	r5, r5, r6
 8013d9a:	00c0      	lsls	r0, r0, #3
 8013d9c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013da0:	fa1f fc8c 	uxth.w	ip, ip
 8013da4:	b2c0      	uxtb	r0, r0
 8013da6:	fb07 970a 	mla	r7, r7, sl, r9
 8013daa:	fb00 500a 	mla	r0, r0, sl, r5
 8013dae:	f10c 0501 	add.w	r5, ip, #1
 8013db2:	b2bf      	uxth	r7, r7
 8013db4:	b280      	uxth	r0, r0
 8013db6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013dba:	f107 0901 	add.w	r9, r7, #1
 8013dbe:	1c45      	adds	r5, r0, #1
 8013dc0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013dc4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013dc8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013dcc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013dd0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013dd4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8013dd8:	ea45 0c0c 	orr.w	ip, r5, ip
 8013ddc:	ea4c 0c09 	orr.w	ip, ip, r9
 8013de0:	f824 c00b 	strh.w	ip, [r4, fp]
 8013de4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013de6:	f108 38ff 	add.w	r8, r8, #4294967295
 8013dea:	4401      	add	r1, r0
 8013dec:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013dee:	4402      	add	r2, r0
 8013df0:	e75e      	b.n	8013cb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8013df2:	b005      	add	sp, #20
 8013df4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013df8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013dfc:	b085      	sub	sp, #20
 8013dfe:	4693      	mov	fp, r2
 8013e00:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013e04:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013e06:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8013e08:	6870      	ldr	r0, [r6, #4]
 8013e0a:	9101      	str	r1, [sp, #4]
 8013e0c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013e10:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8013e14:	fb00 2404 	mla	r4, r0, r4, r2
 8013e18:	6832      	ldr	r2, [r6, #0]
 8013e1a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013e1e:	682a      	ldr	r2, [r5, #0]
 8013e20:	9202      	str	r2, [sp, #8]
 8013e22:	9a01      	ldr	r2, [sp, #4]
 8013e24:	2a00      	cmp	r2, #0
 8013e26:	dc03      	bgt.n	8013e30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013e28:	f1bb 0f00 	cmp.w	fp, #0
 8013e2c:	f340 809a 	ble.w	8013f64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8013e30:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013e32:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013e36:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013e3a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013e3c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013e40:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013e44:	2b00      	cmp	r3, #0
 8013e46:	dd0c      	ble.n	8013e62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8013e48:	1406      	asrs	r6, r0, #16
 8013e4a:	d405      	bmi.n	8013e58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013e4c:	454e      	cmp	r6, r9
 8013e4e:	da03      	bge.n	8013e58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013e50:	1416      	asrs	r6, r2, #16
 8013e52:	d401      	bmi.n	8013e58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013e54:	4546      	cmp	r6, r8
 8013e56:	db05      	blt.n	8013e64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013e58:	4470      	add	r0, lr
 8013e5a:	4462      	add	r2, ip
 8013e5c:	3b01      	subs	r3, #1
 8013e5e:	3402      	adds	r4, #2
 8013e60:	e7f0      	b.n	8013e44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8013e62:	d00f      	beq.n	8013e84 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8013e64:	1e5e      	subs	r6, r3, #1
 8013e66:	fb0e 0706 	mla	r7, lr, r6, r0
 8013e6a:	143f      	asrs	r7, r7, #16
 8013e6c:	d541      	bpl.n	8013ef2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8013e6e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013e72:	4698      	mov	r8, r3
 8013e74:	9603      	str	r6, [sp, #12]
 8013e76:	f1b8 0f00 	cmp.w	r8, #0
 8013e7a:	dc56      	bgt.n	8013f2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8013e7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013e80:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013e84:	9b01      	ldr	r3, [sp, #4]
 8013e86:	2b00      	cmp	r3, #0
 8013e88:	dd6c      	ble.n	8013f64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8013e8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013e8e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013e90:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013e94:	eeb0 6a62 	vmov.f32	s12, s5
 8013e98:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013e9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013ea0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ea4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013ea8:	eeb0 6a43 	vmov.f32	s12, s6
 8013eac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013eb0:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013eb4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013eb8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013ebc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013ec0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013ec4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013ec8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013ecc:	ee12 2a90 	vmov	r2, s5
 8013ed0:	eef0 2a47 	vmov.f32	s5, s14
 8013ed4:	fb92 fef3 	sdiv	lr, r2, r3
 8013ed8:	ee13 2a10 	vmov	r2, s6
 8013edc:	eeb0 3a67 	vmov.f32	s6, s15
 8013ee0:	fb92 fcf3 	sdiv	ip, r2, r3
 8013ee4:	9b01      	ldr	r3, [sp, #4]
 8013ee6:	3b01      	subs	r3, #1
 8013ee8:	9301      	str	r3, [sp, #4]
 8013eea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013eec:	bf08      	it	eq
 8013eee:	465b      	moveq	r3, fp
 8013ef0:	e797      	b.n	8013e22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8013ef2:	454f      	cmp	r7, r9
 8013ef4:	dabb      	bge.n	8013e6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013ef6:	fb0c 2606 	mla	r6, ip, r6, r2
 8013efa:	1436      	asrs	r6, r6, #16
 8013efc:	d4b7      	bmi.n	8013e6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013efe:	4546      	cmp	r6, r8
 8013f00:	dab5      	bge.n	8013e6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013f02:	461e      	mov	r6, r3
 8013f04:	46a0      	mov	r8, r4
 8013f06:	2e00      	cmp	r6, #0
 8013f08:	ddb8      	ble.n	8013e7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013f0a:	1417      	asrs	r7, r2, #16
 8013f0c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8013f10:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013f14:	9902      	ldr	r1, [sp, #8]
 8013f16:	4470      	add	r0, lr
 8013f18:	4462      	add	r2, ip
 8013f1a:	fb0a 9707 	mla	r7, sl, r7, r9
 8013f1e:	3e01      	subs	r6, #1
 8013f20:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013f24:	f828 7b02 	strh.w	r7, [r8], #2
 8013f28:	e7ed      	b.n	8013f06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8013f2a:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013f2e:	d414      	bmi.n	8013f5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013f30:	68ae      	ldr	r6, [r5, #8]
 8013f32:	454e      	cmp	r6, r9
 8013f34:	dd11      	ble.n	8013f5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013f36:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013f3a:	d40e      	bmi.n	8013f5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013f3c:	68ef      	ldr	r7, [r5, #12]
 8013f3e:	4557      	cmp	r7, sl
 8013f40:	dd0b      	ble.n	8013f5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013f42:	b236      	sxth	r6, r6
 8013f44:	f06f 0101 	mvn.w	r1, #1
 8013f48:	9f02      	ldr	r7, [sp, #8]
 8013f4a:	fb0a 9606 	mla	r6, sl, r6, r9
 8013f4e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013f52:	fb01 f608 	mul.w	r6, r1, r8
 8013f56:	9903      	ldr	r1, [sp, #12]
 8013f58:	538f      	strh	r7, [r1, r6]
 8013f5a:	4470      	add	r0, lr
 8013f5c:	4462      	add	r2, ip
 8013f5e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013f62:	e788      	b.n	8013e76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013f64:	b005      	add	sp, #20
 8013f66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013f6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013f6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f6e:	b087      	sub	sp, #28
 8013f70:	468b      	mov	fp, r1
 8013f72:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013f76:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8013f78:	9203      	str	r2, [sp, #12]
 8013f7a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013f7e:	6841      	ldr	r1, [r0, #4]
 8013f80:	9204      	str	r2, [sp, #16]
 8013f82:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8013f86:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8013f8a:	fb01 2505 	mla	r5, r1, r5, r2
 8013f8e:	6802      	ldr	r2, [r0, #0]
 8013f90:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8013f94:	f8d9 2000 	ldr.w	r2, [r9]
 8013f98:	9201      	str	r2, [sp, #4]
 8013f9a:	f1bb 0f00 	cmp.w	fp, #0
 8013f9e:	dc03      	bgt.n	8013fa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013fa0:	9a03      	ldr	r2, [sp, #12]
 8013fa2:	2a00      	cmp	r2, #0
 8013fa4:	f340 8158 	ble.w	8014258 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8013fa8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013faa:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8013fae:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013fb2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013fb4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8013fb8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013fbc:	2b00      	cmp	r3, #0
 8013fbe:	dd0e      	ble.n	8013fde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8013fc0:	1402      	asrs	r2, r0, #16
 8013fc2:	d405      	bmi.n	8013fd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013fc4:	42ba      	cmp	r2, r7
 8013fc6:	da03      	bge.n	8013fd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013fc8:	140a      	asrs	r2, r1, #16
 8013fca:	d401      	bmi.n	8013fd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013fcc:	42b2      	cmp	r2, r6
 8013fce:	db07      	blt.n	8013fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013fd0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013fd2:	3b01      	subs	r3, #1
 8013fd4:	3502      	adds	r5, #2
 8013fd6:	4410      	add	r0, r2
 8013fd8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013fda:	4411      	add	r1, r2
 8013fdc:	e7ee      	b.n	8013fbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013fde:	d017      	beq.n	8014010 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013fe0:	1e5a      	subs	r2, r3, #1
 8013fe2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013fe4:	fb04 0402 	mla	r4, r4, r2, r0
 8013fe8:	1424      	asrs	r4, r4, #16
 8013fea:	d409      	bmi.n	8014000 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013fec:	42bc      	cmp	r4, r7
 8013fee:	da07      	bge.n	8014000 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013ff0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013ff2:	fb04 1202 	mla	r2, r4, r2, r1
 8013ff6:	1412      	asrs	r2, r2, #16
 8013ff8:	d402      	bmi.n	8014000 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013ffa:	42b2      	cmp	r2, r6
 8013ffc:	f2c0 80bf 	blt.w	801417e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014000:	2700      	movs	r7, #0
 8014002:	19da      	adds	r2, r3, r7
 8014004:	2a00      	cmp	r2, #0
 8014006:	dc3e      	bgt.n	8014086 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014008:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801400c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8014010:	f1bb 0f00 	cmp.w	fp, #0
 8014014:	f340 8120 	ble.w	8014258 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8014018:	ee30 0a04 	vadd.f32	s0, s0, s8
 801401c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801401e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014022:	f1bb 0b01 	subs.w	fp, fp, #1
 8014026:	eeb0 6a62 	vmov.f32	s12, s5
 801402a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801402e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014032:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014036:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801403a:	eeb0 6a43 	vmov.f32	s12, s6
 801403e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014042:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014046:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801404a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801404e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014052:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014056:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801405a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801405e:	ee12 2a90 	vmov	r2, s5
 8014062:	eef0 2a47 	vmov.f32	s5, s14
 8014066:	fb92 f3f3 	sdiv	r3, r2, r3
 801406a:	ee13 2a10 	vmov	r2, s6
 801406e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014070:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014072:	eeb0 3a67 	vmov.f32	s6, s15
 8014076:	fb92 f3f3 	sdiv	r3, r2, r3
 801407a:	9a03      	ldr	r2, [sp, #12]
 801407c:	9314      	str	r3, [sp, #80]	@ 0x50
 801407e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014080:	bf08      	it	eq
 8014082:	4613      	moveq	r3, r2
 8014084:	e789      	b.n	8013f9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014086:	1406      	asrs	r6, r0, #16
 8014088:	d42d      	bmi.n	80140e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801408a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801408e:	42b4      	cmp	r4, r6
 8014090:	dd29      	ble.n	80140e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014092:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8014096:	d426      	bmi.n	80140e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014098:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801409c:	4562      	cmp	r2, ip
 801409e:	dd22      	ble.n	80140e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80140a0:	b224      	sxth	r4, r4
 80140a2:	9a01      	ldr	r2, [sp, #4]
 80140a4:	fb0c 6404 	mla	r4, ip, r4, r6
 80140a8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80140ac:	0e22      	lsrs	r2, r4, #24
 80140ae:	d01a      	beq.n	80140e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80140b0:	9e04      	ldr	r6, [sp, #16]
 80140b2:	4372      	muls	r2, r6
 80140b4:	1c56      	adds	r6, r2, #1
 80140b6:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80140ba:	0a26      	lsrs	r6, r4, #8
 80140bc:	1212      	asrs	r2, r2, #8
 80140be:	9605      	str	r6, [sp, #20]
 80140c0:	2aff      	cmp	r2, #255	@ 0xff
 80140c2:	d116      	bne.n	80140f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80140c4:	f06f 0201 	mvn.w	r2, #1
 80140c8:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80140cc:	fb02 fc07 	mul.w	ip, r2, r7
 80140d0:	0962      	lsrs	r2, r4, #5
 80140d2:	f026 0607 	bic.w	r6, r6, #7
 80140d6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80140da:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80140de:	4316      	orrs	r6, r2
 80140e0:	4326      	orrs	r6, r4
 80140e2:	f825 600c 	strh.w	r6, [r5, ip]
 80140e6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80140e8:	3f01      	subs	r7, #1
 80140ea:	4410      	add	r0, r2
 80140ec:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80140ee:	4411      	add	r1, r2
 80140f0:	e787      	b.n	8014002 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80140f2:	f06f 0601 	mvn.w	r6, #1
 80140f6:	fa1f fa82 	uxth.w	sl, r2
 80140fa:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80140fe:	43d2      	mvns	r2, r2
 8014100:	437e      	muls	r6, r7
 8014102:	b2e4      	uxtb	r4, r4
 8014104:	fb1c fc0a 	smulbb	ip, ip, sl
 8014108:	b2d2      	uxtb	r2, r2
 801410a:	f835 8006 	ldrh.w	r8, [r5, r6]
 801410e:	fb14 f40a 	smulbb	r4, r4, sl
 8014112:	9602      	str	r6, [sp, #8]
 8014114:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014118:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801411c:	fb16 f60a 	smulbb	r6, r6, sl
 8014120:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014124:	fb0e ce02 	mla	lr, lr, r2, ip
 8014128:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801412c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014130:	fa1f fe8e 	uxth.w	lr, lr
 8014134:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8014138:	fa5f f888 	uxtb.w	r8, r8
 801413c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014140:	fb08 4402 	mla	r4, r8, r2, r4
 8014144:	f10e 0201 	add.w	r2, lr, #1
 8014148:	fa1f fc8c 	uxth.w	ip, ip
 801414c:	b2a4      	uxth	r4, r4
 801414e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014152:	9a02      	ldr	r2, [sp, #8]
 8014154:	1c66      	adds	r6, r4, #1
 8014156:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801415a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801415e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014162:	ea46 0e0e 	orr.w	lr, r6, lr
 8014166:	f10c 0601 	add.w	r6, ip, #1
 801416a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801416e:	0976      	lsrs	r6, r6, #5
 8014170:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014174:	ea4e 0e06 	orr.w	lr, lr, r6
 8014178:	f825 e002 	strh.w	lr, [r5, r2]
 801417c:	e7b3      	b.n	80140e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801417e:	f04f 0800 	mov.w	r8, #0
 8014182:	eba3 0208 	sub.w	r2, r3, r8
 8014186:	2a00      	cmp	r2, #0
 8014188:	f77f af3e 	ble.w	8014008 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801418c:	1404      	asrs	r4, r0, #16
 801418e:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8014192:	140a      	asrs	r2, r1, #16
 8014194:	fb06 4202 	mla	r2, r6, r2, r4
 8014198:	9c01      	ldr	r4, [sp, #4]
 801419a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801419e:	0e22      	lsrs	r2, r4, #24
 80141a0:	d015      	beq.n	80141ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80141a2:	9e04      	ldr	r6, [sp, #16]
 80141a4:	4372      	muls	r2, r6
 80141a6:	1c56      	adds	r6, r2, #1
 80141a8:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80141ac:	0a26      	lsrs	r6, r4, #8
 80141ae:	1212      	asrs	r2, r2, #8
 80141b0:	2aff      	cmp	r2, #255	@ 0xff
 80141b2:	d113      	bne.n	80141dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80141b4:	0962      	lsrs	r2, r4, #5
 80141b6:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80141ba:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80141be:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80141c2:	f026 0607 	bic.w	r6, r6, #7
 80141c6:	4316      	orrs	r6, r2
 80141c8:	4326      	orrs	r6, r4
 80141ca:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80141ce:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80141d0:	f108 0801 	add.w	r8, r8, #1
 80141d4:	4410      	add	r0, r2
 80141d6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80141d8:	4411      	add	r1, r2
 80141da:	e7d2      	b.n	8014182 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80141dc:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80141e0:	fa1f fa82 	uxth.w	sl, r2
 80141e4:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80141e8:	43d2      	mvns	r2, r2
 80141ea:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80141ee:	fb17 f70a 	smulbb	r7, r7, sl
 80141f2:	b2d2      	uxtb	r2, r2
 80141f4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80141f8:	b2e4      	uxtb	r4, r4
 80141fa:	b2f6      	uxtb	r6, r6
 80141fc:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014200:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014204:	fb14 f40a 	smulbb	r4, r4, sl
 8014208:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801420c:	fa1f fc8c 	uxth.w	ip, ip
 8014210:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014214:	fb16 f60a 	smulbb	r6, r6, sl
 8014218:	fa5f fe8e 	uxtb.w	lr, lr
 801421c:	fb0e 4402 	mla	r4, lr, r2, r4
 8014220:	fb07 6702 	mla	r7, r7, r2, r6
 8014224:	f10c 0201 	add.w	r2, ip, #1
 8014228:	b2a4      	uxth	r4, r4
 801422a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801422e:	1c66      	adds	r6, r4, #1
 8014230:	b2bf      	uxth	r7, r7
 8014232:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014236:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801423a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801423e:	ea46 0c0c 	orr.w	ip, r6, ip
 8014242:	1c7e      	adds	r6, r7, #1
 8014244:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014248:	0976      	lsrs	r6, r6, #5
 801424a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801424e:	ea4c 0c06 	orr.w	ip, ip, r6
 8014252:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8014256:	e7ba      	b.n	80141ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8014258:	b007      	add	sp, #28
 801425a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014260 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014264:	b085      	sub	sp, #20
 8014266:	468b      	mov	fp, r1
 8014268:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801426c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801426e:	9203      	str	r2, [sp, #12]
 8014270:	6841      	ldr	r1, [r0, #4]
 8014272:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8014276:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801427a:	fb01 2404 	mla	r4, r1, r4, r2
 801427e:	6802      	ldr	r2, [r0, #0]
 8014280:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014284:	f8d8 2000 	ldr.w	r2, [r8]
 8014288:	9201      	str	r2, [sp, #4]
 801428a:	f1bb 0f00 	cmp.w	fp, #0
 801428e:	dc03      	bgt.n	8014298 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014290:	9a03      	ldr	r2, [sp, #12]
 8014292:	2a00      	cmp	r2, #0
 8014294:	f340 814f 	ble.w	8014536 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014298:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801429a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801429e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80142a2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80142a4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80142a8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80142ac:	2b00      	cmp	r3, #0
 80142ae:	dd0e      	ble.n	80142ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80142b0:	1408      	asrs	r0, r1, #16
 80142b2:	d405      	bmi.n	80142c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80142b4:	42b8      	cmp	r0, r7
 80142b6:	da03      	bge.n	80142c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80142b8:	1410      	asrs	r0, r2, #16
 80142ba:	d401      	bmi.n	80142c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80142bc:	42b0      	cmp	r0, r6
 80142be:	db07      	blt.n	80142d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80142c0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80142c2:	3b01      	subs	r3, #1
 80142c4:	3402      	adds	r4, #2
 80142c6:	4401      	add	r1, r0
 80142c8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80142ca:	4402      	add	r2, r0
 80142cc:	e7ee      	b.n	80142ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80142ce:	d017      	beq.n	8014300 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80142d0:	1e58      	subs	r0, r3, #1
 80142d2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80142d4:	fb05 1500 	mla	r5, r5, r0, r1
 80142d8:	142d      	asrs	r5, r5, #16
 80142da:	d409      	bmi.n	80142f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80142dc:	42bd      	cmp	r5, r7
 80142de:	da07      	bge.n	80142f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80142e0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80142e2:	fb05 2000 	mla	r0, r5, r0, r2
 80142e6:	1400      	asrs	r0, r0, #16
 80142e8:	d402      	bmi.n	80142f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80142ea:	42b0      	cmp	r0, r6
 80142ec:	f2c0 80ba 	blt.w	8014464 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80142f0:	2600      	movs	r6, #0
 80142f2:	1998      	adds	r0, r3, r6
 80142f4:	2800      	cmp	r0, #0
 80142f6:	dc3e      	bgt.n	8014376 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80142f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80142fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014300:	f1bb 0f00 	cmp.w	fp, #0
 8014304:	f340 8117 	ble.w	8014536 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014308:	ee30 0a04 	vadd.f32	s0, s0, s8
 801430c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801430e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014312:	f1bb 0b01 	subs.w	fp, fp, #1
 8014316:	eeb0 6a62 	vmov.f32	s12, s5
 801431a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801431e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014322:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014326:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801432a:	eeb0 6a43 	vmov.f32	s12, s6
 801432e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014332:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014336:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801433a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801433e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014342:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014346:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801434a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801434e:	ee12 2a90 	vmov	r2, s5
 8014352:	eef0 2a47 	vmov.f32	s5, s14
 8014356:	fb92 f3f3 	sdiv	r3, r2, r3
 801435a:	ee13 2a10 	vmov	r2, s6
 801435e:	9311      	str	r3, [sp, #68]	@ 0x44
 8014360:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014362:	eeb0 3a67 	vmov.f32	s6, s15
 8014366:	fb92 f3f3 	sdiv	r3, r2, r3
 801436a:	9a03      	ldr	r2, [sp, #12]
 801436c:	9312      	str	r3, [sp, #72]	@ 0x48
 801436e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014370:	bf08      	it	eq
 8014372:	4613      	moveq	r3, r2
 8014374:	e789      	b.n	801428a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014376:	140f      	asrs	r7, r1, #16
 8014378:	d424      	bmi.n	80143c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801437a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801437e:	42bd      	cmp	r5, r7
 8014380:	dd20      	ble.n	80143c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014382:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014386:	d41d      	bmi.n	80143c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014388:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801438c:	4560      	cmp	r0, ip
 801438e:	dd19      	ble.n	80143c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014390:	b22d      	sxth	r5, r5
 8014392:	9801      	ldr	r0, [sp, #4]
 8014394:	fb0c 7505 	mla	r5, ip, r5, r7
 8014398:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801439c:	0e07      	lsrs	r7, r0, #24
 801439e:	2fff      	cmp	r7, #255	@ 0xff
 80143a0:	d116      	bne.n	80143d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80143a2:	f06f 0501 	mvn.w	r5, #1
 80143a6:	fb05 f706 	mul.w	r7, r5, r6
 80143aa:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80143ae:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80143b2:	0945      	lsrs	r5, r0, #5
 80143b4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80143b8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80143bc:	ea4c 0505 	orr.w	r5, ip, r5
 80143c0:	4305      	orrs	r5, r0
 80143c2:	53e5      	strh	r5, [r4, r7]
 80143c4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80143c6:	3e01      	subs	r6, #1
 80143c8:	4401      	add	r1, r0
 80143ca:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80143cc:	4402      	add	r2, r0
 80143ce:	e790      	b.n	80142f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80143d0:	b2fd      	uxtb	r5, r7
 80143d2:	2f00      	cmp	r7, #0
 80143d4:	d0f6      	beq.n	80143c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80143d6:	f06f 0701 	mvn.w	r7, #1
 80143da:	fa1f f985 	uxth.w	r9, r5
 80143de:	43ed      	mvns	r5, r5
 80143e0:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80143e4:	4377      	muls	r7, r6
 80143e6:	fb1a fa09 	smulbb	sl, sl, r9
 80143ea:	b2ed      	uxtb	r5, r5
 80143ec:	f834 e007 	ldrh.w	lr, [r4, r7]
 80143f0:	9702      	str	r7, [sp, #8]
 80143f2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80143f6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80143fa:	fb17 f709 	smulbb	r7, r7, r9
 80143fe:	b2c0      	uxtb	r0, r0
 8014400:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014404:	fb10 f009 	smulbb	r0, r0, r9
 8014408:	fb0c 7c05 	mla	ip, ip, r5, r7
 801440c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014410:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014414:	fa1f fc8c 	uxth.w	ip, ip
 8014418:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801441c:	fa5f fe8e 	uxtb.w	lr, lr
 8014420:	fb07 a705 	mla	r7, r7, r5, sl
 8014424:	fb0e 0005 	mla	r0, lr, r5, r0
 8014428:	f10c 0501 	add.w	r5, ip, #1
 801442c:	b2bf      	uxth	r7, r7
 801442e:	b280      	uxth	r0, r0
 8014430:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014434:	f100 0a01 	add.w	sl, r0, #1
 8014438:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801443c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014440:	9802      	ldr	r0, [sp, #8]
 8014442:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014446:	ea4a 0c0c 	orr.w	ip, sl, ip
 801444a:	f107 0a01 	add.w	sl, r7, #1
 801444e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014452:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014456:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801445a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801445e:	f824 c000 	strh.w	ip, [r4, r0]
 8014462:	e7af      	b.n	80143c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014464:	f04f 0e00 	mov.w	lr, #0
 8014468:	eba3 000e 	sub.w	r0, r3, lr
 801446c:	2800      	cmp	r0, #0
 801446e:	f77f af43 	ble.w	80142f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014472:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014476:	140d      	asrs	r5, r1, #16
 8014478:	1410      	asrs	r0, r2, #16
 801447a:	fb06 5000 	mla	r0, r6, r0, r5
 801447e:	9d01      	ldr	r5, [sp, #4]
 8014480:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014484:	0e2e      	lsrs	r6, r5, #24
 8014486:	2eff      	cmp	r6, #255	@ 0xff
 8014488:	d112      	bne.n	80144b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801448a:	482c      	ldr	r0, [pc, #176]	@ (801453c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801448c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014490:	0968      	lsrs	r0, r5, #5
 8014492:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014496:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801449a:	4330      	orrs	r0, r6
 801449c:	4328      	orrs	r0, r5
 801449e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80144a2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80144a4:	f10e 0e01 	add.w	lr, lr, #1
 80144a8:	4401      	add	r1, r0
 80144aa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80144ac:	4402      	add	r2, r0
 80144ae:	e7db      	b.n	8014468 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80144b0:	b2f0      	uxtb	r0, r6
 80144b2:	2e00      	cmp	r6, #0
 80144b4:	d0f5      	beq.n	80144a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80144b6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80144ba:	fa1f f980 	uxth.w	r9, r0
 80144be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80144c2:	43c0      	mvns	r0, r0
 80144c4:	ea4f 272c 	mov.w	r7, ip, asr #8
 80144c8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80144cc:	fb16 f609 	smulbb	r6, r6, r9
 80144d0:	b2c0      	uxtb	r0, r0
 80144d2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80144d6:	b2ed      	uxtb	r5, r5
 80144d8:	fb1a fa09 	smulbb	sl, sl, r9
 80144dc:	fb07 6700 	mla	r7, r7, r0, r6
 80144e0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80144e4:	fb15 f509 	smulbb	r5, r5, r9
 80144e8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80144ec:	b2bf      	uxth	r7, r7
 80144ee:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80144f2:	fa5f fc8c 	uxtb.w	ip, ip
 80144f6:	fb06 a600 	mla	r6, r6, r0, sl
 80144fa:	fb0c 5500 	mla	r5, ip, r0, r5
 80144fe:	1c78      	adds	r0, r7, #1
 8014500:	b2b6      	uxth	r6, r6
 8014502:	b2ad      	uxth	r5, r5
 8014504:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014508:	f105 0a01 	add.w	sl, r5, #1
 801450c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014510:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014514:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014518:	ea4a 0707 	orr.w	r7, sl, r7
 801451c:	f106 0a01 	add.w	sl, r6, #1
 8014520:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014524:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014528:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801452c:	ea47 070a 	orr.w	r7, r7, sl
 8014530:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8014534:	e7b5      	b.n	80144a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014536:	b005      	add	sp, #20
 8014538:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801453c:	fffff800 	.word	0xfffff800

08014540 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014544:	b087      	sub	sp, #28
 8014546:	468b      	mov	fp, r1
 8014548:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801454c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801454e:	9203      	str	r2, [sp, #12]
 8014550:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014554:	6841      	ldr	r1, [r0, #4]
 8014556:	9204      	str	r2, [sp, #16]
 8014558:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801455c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014560:	fb01 2404 	mla	r4, r1, r4, r2
 8014564:	6802      	ldr	r2, [r0, #0]
 8014566:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801456a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801456e:	3201      	adds	r2, #1
 8014570:	f022 0201 	bic.w	r2, r2, #1
 8014574:	9200      	str	r2, [sp, #0]
 8014576:	f8d9 2000 	ldr.w	r2, [r9]
 801457a:	9201      	str	r2, [sp, #4]
 801457c:	f1bb 0f00 	cmp.w	fp, #0
 8014580:	dc03      	bgt.n	801458a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014582:	9a03      	ldr	r2, [sp, #12]
 8014584:	2a00      	cmp	r2, #0
 8014586:	f340 816a 	ble.w	801485e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801458a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801458c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014590:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014594:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014596:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801459a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801459e:	2b00      	cmp	r3, #0
 80145a0:	dd0e      	ble.n	80145c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80145a2:	1402      	asrs	r2, r0, #16
 80145a4:	d405      	bmi.n	80145b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80145a6:	42ba      	cmp	r2, r7
 80145a8:	da03      	bge.n	80145b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80145aa:	140a      	asrs	r2, r1, #16
 80145ac:	d401      	bmi.n	80145b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80145ae:	42b2      	cmp	r2, r6
 80145b0:	db07      	blt.n	80145c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80145b2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80145b4:	3b01      	subs	r3, #1
 80145b6:	3402      	adds	r4, #2
 80145b8:	4410      	add	r0, r2
 80145ba:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80145bc:	4411      	add	r1, r2
 80145be:	e7ee      	b.n	801459e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80145c0:	d017      	beq.n	80145f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80145c2:	1e5a      	subs	r2, r3, #1
 80145c4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80145c6:	fb05 0502 	mla	r5, r5, r2, r0
 80145ca:	142d      	asrs	r5, r5, #16
 80145cc:	d409      	bmi.n	80145e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80145ce:	42bd      	cmp	r5, r7
 80145d0:	da07      	bge.n	80145e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80145d2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80145d4:	fb05 1202 	mla	r2, r5, r2, r1
 80145d8:	1412      	asrs	r2, r2, #16
 80145da:	d402      	bmi.n	80145e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80145dc:	42b2      	cmp	r2, r6
 80145de:	f2c0 80c8 	blt.w	8014772 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80145e2:	2700      	movs	r7, #0
 80145e4:	19da      	adds	r2, r3, r7
 80145e6:	2a00      	cmp	r2, #0
 80145e8:	dc3e      	bgt.n	8014668 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80145ea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80145ee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80145f2:	f1bb 0f00 	cmp.w	fp, #0
 80145f6:	f340 8132 	ble.w	801485e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80145fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80145fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014600:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014604:	f1bb 0b01 	subs.w	fp, fp, #1
 8014608:	eeb0 6a62 	vmov.f32	s12, s5
 801460c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014610:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014614:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014618:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801461c:	eeb0 6a43 	vmov.f32	s12, s6
 8014620:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014624:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014628:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801462c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014630:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014634:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014638:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801463c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014640:	ee12 2a90 	vmov	r2, s5
 8014644:	eef0 2a47 	vmov.f32	s5, s14
 8014648:	fb92 f3f3 	sdiv	r3, r2, r3
 801464c:	ee13 2a10 	vmov	r2, s6
 8014650:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014652:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014654:	eeb0 3a67 	vmov.f32	s6, s15
 8014658:	fb92 f3f3 	sdiv	r3, r2, r3
 801465c:	9a03      	ldr	r2, [sp, #12]
 801465e:	9314      	str	r3, [sp, #80]	@ 0x50
 8014660:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014662:	bf08      	it	eq
 8014664:	4613      	moveq	r3, r2
 8014666:	e789      	b.n	801457c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014668:	1405      	asrs	r5, r0, #16
 801466a:	d436      	bmi.n	80146da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801466c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014670:	42aa      	cmp	r2, r5
 8014672:	dd32      	ble.n	80146da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014674:	140e      	asrs	r6, r1, #16
 8014676:	d430      	bmi.n	80146da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014678:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801467c:	42b2      	cmp	r2, r6
 801467e:	dd2c      	ble.n	80146da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014680:	9a00      	ldr	r2, [sp, #0]
 8014682:	fb06 5502 	mla	r5, r6, r2, r5
 8014686:	9e01      	ldr	r6, [sp, #4]
 8014688:	086a      	lsrs	r2, r5, #1
 801468a:	5cb2      	ldrb	r2, [r6, r2]
 801468c:	07ee      	lsls	r6, r5, #31
 801468e:	bf54      	ite	pl
 8014690:	f002 020f 	andpl.w	r2, r2, #15
 8014694:	1112      	asrmi	r2, r2, #4
 8014696:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801469a:	b2d2      	uxtb	r2, r2
 801469c:	b1ea      	cbz	r2, 80146da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801469e:	9d04      	ldr	r5, [sp, #16]
 80146a0:	436a      	muls	r2, r5
 80146a2:	1c55      	adds	r5, r2, #1
 80146a4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80146a8:	4d6e      	ldr	r5, [pc, #440]	@ (8014864 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80146aa:	1212      	asrs	r2, r2, #8
 80146ac:	682d      	ldr	r5, [r5, #0]
 80146ae:	2aff      	cmp	r2, #255	@ 0xff
 80146b0:	ea4f 2615 	mov.w	r6, r5, lsr #8
 80146b4:	9605      	str	r6, [sp, #20]
 80146b6:	d116      	bne.n	80146e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80146b8:	f06f 0201 	mvn.w	r2, #1
 80146bc:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80146c0:	fb02 fc07 	mul.w	ip, r2, r7
 80146c4:	096a      	lsrs	r2, r5, #5
 80146c6:	f026 0607 	bic.w	r6, r6, #7
 80146ca:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80146ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80146d2:	4316      	orrs	r6, r2
 80146d4:	432e      	orrs	r6, r5
 80146d6:	f824 600c 	strh.w	r6, [r4, ip]
 80146da:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80146dc:	3f01      	subs	r7, #1
 80146de:	4410      	add	r0, r2
 80146e0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80146e2:	4411      	add	r1, r2
 80146e4:	e77e      	b.n	80145e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80146e6:	f06f 0601 	mvn.w	r6, #1
 80146ea:	fa1f fa82 	uxth.w	sl, r2
 80146ee:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80146f2:	43d2      	mvns	r2, r2
 80146f4:	437e      	muls	r6, r7
 80146f6:	b2ed      	uxtb	r5, r5
 80146f8:	fb1c fc0a 	smulbb	ip, ip, sl
 80146fc:	b2d2      	uxtb	r2, r2
 80146fe:	f834 8006 	ldrh.w	r8, [r4, r6]
 8014702:	fb15 f50a 	smulbb	r5, r5, sl
 8014706:	9602      	str	r6, [sp, #8]
 8014708:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801470c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014710:	fb16 f60a 	smulbb	r6, r6, sl
 8014714:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014718:	fb0e ce02 	mla	lr, lr, r2, ip
 801471c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014720:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014724:	fa1f fe8e 	uxth.w	lr, lr
 8014728:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801472c:	fa5f f888 	uxtb.w	r8, r8
 8014730:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014734:	fb08 5502 	mla	r5, r8, r2, r5
 8014738:	f10e 0201 	add.w	r2, lr, #1
 801473c:	fa1f fc8c 	uxth.w	ip, ip
 8014740:	b2ad      	uxth	r5, r5
 8014742:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014746:	9a02      	ldr	r2, [sp, #8]
 8014748:	1c6e      	adds	r6, r5, #1
 801474a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801474e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8014752:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014756:	ea46 0e0e 	orr.w	lr, r6, lr
 801475a:	f10c 0601 	add.w	r6, ip, #1
 801475e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014762:	0976      	lsrs	r6, r6, #5
 8014764:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014768:	ea4e 0e06 	orr.w	lr, lr, r6
 801476c:	f824 e002 	strh.w	lr, [r4, r2]
 8014770:	e7b3      	b.n	80146da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014772:	f04f 0800 	mov.w	r8, #0
 8014776:	eba3 0208 	sub.w	r2, r3, r8
 801477a:	2a00      	cmp	r2, #0
 801477c:	f77f af35 	ble.w	80145ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014780:	1402      	asrs	r2, r0, #16
 8014782:	9e00      	ldr	r6, [sp, #0]
 8014784:	140d      	asrs	r5, r1, #16
 8014786:	fb06 2505 	mla	r5, r6, r5, r2
 801478a:	9e01      	ldr	r6, [sp, #4]
 801478c:	086a      	lsrs	r2, r5, #1
 801478e:	07ed      	lsls	r5, r5, #31
 8014790:	5cb2      	ldrb	r2, [r6, r2]
 8014792:	bf54      	ite	pl
 8014794:	f002 020f 	andpl.w	r2, r2, #15
 8014798:	1112      	asrmi	r2, r2, #4
 801479a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801479e:	b2d2      	uxtb	r2, r2
 80147a0:	b1c2      	cbz	r2, 80147d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80147a2:	9d04      	ldr	r5, [sp, #16]
 80147a4:	436a      	muls	r2, r5
 80147a6:	1c55      	adds	r5, r2, #1
 80147a8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80147ac:	4d2d      	ldr	r5, [pc, #180]	@ (8014864 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80147ae:	1212      	asrs	r2, r2, #8
 80147b0:	682e      	ldr	r6, [r5, #0]
 80147b2:	2aff      	cmp	r2, #255	@ 0xff
 80147b4:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80147b8:	d113      	bne.n	80147e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80147ba:	0972      	lsrs	r2, r6, #5
 80147bc:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80147c0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80147c4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80147c8:	f025 0507 	bic.w	r5, r5, #7
 80147cc:	4315      	orrs	r5, r2
 80147ce:	4335      	orrs	r5, r6
 80147d0:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80147d4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80147d6:	f108 0801 	add.w	r8, r8, #1
 80147da:	4410      	add	r0, r2
 80147dc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80147de:	4411      	add	r1, r2
 80147e0:	e7c9      	b.n	8014776 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80147e2:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80147e6:	fa1f fa82 	uxth.w	sl, r2
 80147ea:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80147ee:	43d2      	mvns	r2, r2
 80147f0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80147f4:	fb17 f70a 	smulbb	r7, r7, sl
 80147f8:	b2d2      	uxtb	r2, r2
 80147fa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80147fe:	b2f6      	uxtb	r6, r6
 8014800:	b2ed      	uxtb	r5, r5
 8014802:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014806:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801480a:	fb16 f60a 	smulbb	r6, r6, sl
 801480e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014812:	fa1f fc8c 	uxth.w	ip, ip
 8014816:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801481a:	fb15 f50a 	smulbb	r5, r5, sl
 801481e:	fa5f fe8e 	uxtb.w	lr, lr
 8014822:	fb0e 6602 	mla	r6, lr, r2, r6
 8014826:	fb07 5702 	mla	r7, r7, r2, r5
 801482a:	f10c 0201 	add.w	r2, ip, #1
 801482e:	b2b6      	uxth	r6, r6
 8014830:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014834:	1c75      	adds	r5, r6, #1
 8014836:	b2bf      	uxth	r7, r7
 8014838:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801483c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8014840:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014844:	ea45 0c0c 	orr.w	ip, r5, ip
 8014848:	1c7d      	adds	r5, r7, #1
 801484a:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801484e:	096d      	lsrs	r5, r5, #5
 8014850:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014854:	ea4c 0c05 	orr.w	ip, ip, r5
 8014858:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801485c:	e7ba      	b.n	80147d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801485e:	b007      	add	sp, #28
 8014860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014864:	20016a10 	.word	0x20016a10

08014868 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801486c:	b087      	sub	sp, #28
 801486e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014872:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 8014b7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8014876:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014878:	9101      	str	r1, [sp, #4]
 801487a:	9205      	str	r2, [sp, #20]
 801487c:	6841      	ldr	r1, [r0, #4]
 801487e:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8014882:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014886:	fb01 2404 	mla	r4, r1, r4, r2
 801488a:	6802      	ldr	r2, [r0, #0]
 801488c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014890:	f8db 2008 	ldr.w	r2, [fp, #8]
 8014894:	3201      	adds	r2, #1
 8014896:	f022 0201 	bic.w	r2, r2, #1
 801489a:	9202      	str	r2, [sp, #8]
 801489c:	f8db 2000 	ldr.w	r2, [fp]
 80148a0:	9203      	str	r2, [sp, #12]
 80148a2:	9a01      	ldr	r2, [sp, #4]
 80148a4:	2a00      	cmp	r2, #0
 80148a6:	dc03      	bgt.n	80148b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80148a8:	9a05      	ldr	r2, [sp, #20]
 80148aa:	2a00      	cmp	r2, #0
 80148ac:	f340 8162 	ble.w	8014b74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80148b0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80148b2:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80148b6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80148ba:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80148bc:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80148c0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80148c4:	2b00      	cmp	r3, #0
 80148c6:	dd0e      	ble.n	80148e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80148c8:	1402      	asrs	r2, r0, #16
 80148ca:	d405      	bmi.n	80148d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80148cc:	42ba      	cmp	r2, r7
 80148ce:	da03      	bge.n	80148d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80148d0:	140a      	asrs	r2, r1, #16
 80148d2:	d401      	bmi.n	80148d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80148d4:	42b2      	cmp	r2, r6
 80148d6:	db07      	blt.n	80148e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80148d8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80148da:	3b01      	subs	r3, #1
 80148dc:	3402      	adds	r4, #2
 80148de:	4410      	add	r0, r2
 80148e0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80148e2:	4411      	add	r1, r2
 80148e4:	e7ee      	b.n	80148c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80148e6:	d017      	beq.n	8014918 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80148e8:	1e5a      	subs	r2, r3, #1
 80148ea:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80148ec:	fb05 0502 	mla	r5, r5, r2, r0
 80148f0:	142d      	asrs	r5, r5, #16
 80148f2:	d409      	bmi.n	8014908 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80148f4:	42bd      	cmp	r5, r7
 80148f6:	da07      	bge.n	8014908 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80148f8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80148fa:	fb05 1202 	mla	r2, r5, r2, r1
 80148fe:	1412      	asrs	r2, r2, #16
 8014900:	d402      	bmi.n	8014908 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014902:	42b2      	cmp	r2, r6
 8014904:	f2c0 80c3 	blt.w	8014a8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8014908:	2500      	movs	r5, #0
 801490a:	195a      	adds	r2, r3, r5
 801490c:	2a00      	cmp	r2, #0
 801490e:	dc3f      	bgt.n	8014990 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014910:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014914:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014918:	9b01      	ldr	r3, [sp, #4]
 801491a:	2b00      	cmp	r3, #0
 801491c:	f340 812a 	ble.w	8014b74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8014920:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014924:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014926:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801492a:	eeb0 6a62 	vmov.f32	s12, s5
 801492e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014932:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014936:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801493a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801493e:	eeb0 6a43 	vmov.f32	s12, s6
 8014942:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014946:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801494a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801494e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014952:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014956:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801495a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801495e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014962:	ee12 2a90 	vmov	r2, s5
 8014966:	eef0 2a47 	vmov.f32	s5, s14
 801496a:	fb92 f3f3 	sdiv	r3, r2, r3
 801496e:	ee13 2a10 	vmov	r2, s6
 8014972:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014974:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014976:	eeb0 3a67 	vmov.f32	s6, s15
 801497a:	fb92 f3f3 	sdiv	r3, r2, r3
 801497e:	9314      	str	r3, [sp, #80]	@ 0x50
 8014980:	9b01      	ldr	r3, [sp, #4]
 8014982:	9a05      	ldr	r2, [sp, #20]
 8014984:	3b01      	subs	r3, #1
 8014986:	9301      	str	r3, [sp, #4]
 8014988:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801498a:	bf08      	it	eq
 801498c:	4613      	moveq	r3, r2
 801498e:	e788      	b.n	80148a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014990:	1406      	asrs	r6, r0, #16
 8014992:	d42c      	bmi.n	80149ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014994:	f8db 2008 	ldr.w	r2, [fp, #8]
 8014998:	42b2      	cmp	r2, r6
 801499a:	dd28      	ble.n	80149ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801499c:	140f      	asrs	r7, r1, #16
 801499e:	d426      	bmi.n	80149ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80149a0:	f8db 200c 	ldr.w	r2, [fp, #12]
 80149a4:	42ba      	cmp	r2, r7
 80149a6:	dd22      	ble.n	80149ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80149a8:	9a02      	ldr	r2, [sp, #8]
 80149aa:	fb07 6602 	mla	r6, r7, r2, r6
 80149ae:	9f03      	ldr	r7, [sp, #12]
 80149b0:	0872      	lsrs	r2, r6, #1
 80149b2:	07f6      	lsls	r6, r6, #31
 80149b4:	5cba      	ldrb	r2, [r7, r2]
 80149b6:	bf54      	ite	pl
 80149b8:	f002 020f 	andpl.w	r2, r2, #15
 80149bc:	1112      	asrmi	r2, r2, #4
 80149be:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80149c2:	b2d2      	uxtb	r2, r2
 80149c4:	2aff      	cmp	r2, #255	@ 0xff
 80149c6:	d118      	bne.n	80149fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80149c8:	f06f 0601 	mvn.w	r6, #1
 80149cc:	f8d8 2000 	ldr.w	r2, [r8]
 80149d0:	fb06 f705 	mul.w	r7, r6, r5
 80149d4:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 80149d8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80149dc:	0956      	lsrs	r6, r2, #5
 80149de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80149e2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80149e6:	ea4c 0606 	orr.w	r6, ip, r6
 80149ea:	4316      	orrs	r6, r2
 80149ec:	53e6      	strh	r6, [r4, r7]
 80149ee:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80149f0:	3d01      	subs	r5, #1
 80149f2:	4410      	add	r0, r2
 80149f4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80149f6:	4411      	add	r1, r2
 80149f8:	e787      	b.n	801490a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80149fa:	2a00      	cmp	r2, #0
 80149fc:	d0f7      	beq.n	80149ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80149fe:	f06f 0601 	mvn.w	r6, #1
 8014a02:	f8d8 c000 	ldr.w	ip, [r8]
 8014a06:	fa1f f982 	uxth.w	r9, r2
 8014a0a:	43d2      	mvns	r2, r2
 8014a0c:	436e      	muls	r6, r5
 8014a0e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8014a12:	b2d2      	uxtb	r2, r2
 8014a14:	f834 e006 	ldrh.w	lr, [r4, r6]
 8014a18:	fb1a fa09 	smulbb	sl, sl, r9
 8014a1c:	9604      	str	r6, [sp, #16]
 8014a1e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8014a22:	ea4f 272e 	mov.w	r7, lr, asr #8
 8014a26:	fb16 f609 	smulbb	r6, r6, r9
 8014a2a:	fa5f fc8c 	uxtb.w	ip, ip
 8014a2e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014a32:	fb1c fc09 	smulbb	ip, ip, r9
 8014a36:	fb07 6702 	mla	r7, r7, r2, r6
 8014a3a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014a3e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014a42:	b2bf      	uxth	r7, r7
 8014a44:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014a48:	fa5f fe8e 	uxtb.w	lr, lr
 8014a4c:	fb06 a602 	mla	r6, r6, r2, sl
 8014a50:	fb0e cc02 	mla	ip, lr, r2, ip
 8014a54:	1c7a      	adds	r2, r7, #1
 8014a56:	b2b6      	uxth	r6, r6
 8014a58:	fa1f fc8c 	uxth.w	ip, ip
 8014a5c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014a60:	9a04      	ldr	r2, [sp, #16]
 8014a62:	f10c 0a01 	add.w	sl, ip, #1
 8014a66:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014a6a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8014a6e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014a72:	ea4a 0707 	orr.w	r7, sl, r7
 8014a76:	f106 0a01 	add.w	sl, r6, #1
 8014a7a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014a7e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014a82:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014a86:	ea47 070a 	orr.w	r7, r7, sl
 8014a8a:	52a7      	strh	r7, [r4, r2]
 8014a8c:	e7af      	b.n	80149ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014a8e:	f04f 0e00 	mov.w	lr, #0
 8014a92:	eba3 020e 	sub.w	r2, r3, lr
 8014a96:	2a00      	cmp	r2, #0
 8014a98:	f77f af3a 	ble.w	8014910 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014a9c:	1402      	asrs	r2, r0, #16
 8014a9e:	9e02      	ldr	r6, [sp, #8]
 8014aa0:	140d      	asrs	r5, r1, #16
 8014aa2:	fb06 2505 	mla	r5, r6, r5, r2
 8014aa6:	9e03      	ldr	r6, [sp, #12]
 8014aa8:	086a      	lsrs	r2, r5, #1
 8014aaa:	07ed      	lsls	r5, r5, #31
 8014aac:	5cb2      	ldrb	r2, [r6, r2]
 8014aae:	bf54      	ite	pl
 8014ab0:	f002 020f 	andpl.w	r2, r2, #15
 8014ab4:	1112      	asrmi	r2, r2, #4
 8014ab6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014aba:	b2d2      	uxtb	r2, r2
 8014abc:	2aff      	cmp	r2, #255	@ 0xff
 8014abe:	d115      	bne.n	8014aec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8014ac0:	f8d8 5000 	ldr.w	r5, [r8]
 8014ac4:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8014ac8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8014acc:	096a      	lsrs	r2, r5, #5
 8014ace:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014ad2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014ad6:	4332      	orrs	r2, r6
 8014ad8:	432a      	orrs	r2, r5
 8014ada:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8014ade:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014ae0:	f10e 0e01 	add.w	lr, lr, #1
 8014ae4:	4410      	add	r0, r2
 8014ae6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014ae8:	4411      	add	r1, r2
 8014aea:	e7d2      	b.n	8014a92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8014aec:	2a00      	cmp	r2, #0
 8014aee:	d0f6      	beq.n	8014ade <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8014af0:	f8d8 7000 	ldr.w	r7, [r8]
 8014af4:	fa1f f982 	uxth.w	r9, r2
 8014af8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8014afc:	43d2      	mvns	r2, r2
 8014afe:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8014b02:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8014b06:	ea4f 262c 	mov.w	r6, ip, asr #8
 8014b0a:	fb15 f509 	smulbb	r5, r5, r9
 8014b0e:	b2d2      	uxtb	r2, r2
 8014b10:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014b14:	b2ff      	uxtb	r7, r7
 8014b16:	fb1a fa09 	smulbb	sl, sl, r9
 8014b1a:	fb06 5602 	mla	r6, r6, r2, r5
 8014b1e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8014b22:	fb17 f709 	smulbb	r7, r7, r9
 8014b26:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014b2a:	b2b6      	uxth	r6, r6
 8014b2c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8014b30:	fa5f fc8c 	uxtb.w	ip, ip
 8014b34:	fb05 a502 	mla	r5, r5, r2, sl
 8014b38:	fb0c 7702 	mla	r7, ip, r2, r7
 8014b3c:	1c72      	adds	r2, r6, #1
 8014b3e:	b2ad      	uxth	r5, r5
 8014b40:	b2bf      	uxth	r7, r7
 8014b42:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8014b46:	f107 0a01 	add.w	sl, r7, #1
 8014b4a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8014b4e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014b52:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014b56:	ea4a 0606 	orr.w	r6, sl, r6
 8014b5a:	f105 0a01 	add.w	sl, r5, #1
 8014b5e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014b62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014b66:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014b6a:	ea46 060a 	orr.w	r6, r6, sl
 8014b6e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8014b72:	e7b4      	b.n	8014ade <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8014b74:	b007      	add	sp, #28
 8014b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b7a:	bf00      	nop
 8014b7c:	20016a10 	.word	0x20016a10

08014b80 <_ZN8touchgfx8LCD16bppD1Ev>:
 8014b80:	4770      	bx	lr

08014b82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8014b82:	4770      	bx	lr

08014b84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8014b84:	4770      	bx	lr

08014b86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8014b86:	4770      	bx	lr

08014b88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8014b88:	4770      	bx	lr

08014b8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8014b8a:	4770      	bx	lr

08014b8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8014b8c:	4770      	bx	lr

08014b8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8014b8e:	4770      	bx	lr

08014b90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014b90:	4770      	bx	lr

08014b92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014b92:	4770      	bx	lr

08014b94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014b94:	4770      	bx	lr

08014b96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014b96:	4770      	bx	lr

08014b98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014b98:	4770      	bx	lr

08014b9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8014b9a:	4770      	bx	lr

08014b9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014b9c:	4770      	bx	lr

08014b9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014b9e:	4770      	bx	lr

08014ba0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014ba0:	4770      	bx	lr

08014ba2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8014ba2:	4770      	bx	lr

08014ba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014ba4:	4770      	bx	lr

08014ba6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014ba6:	4770      	bx	lr

08014ba8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014ba8:	4770      	bx	lr

08014baa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014baa:	4770      	bx	lr

08014bac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014bac:	4770      	bx	lr

08014bae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014bae:	4770      	bx	lr

08014bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014bb0:	4770      	bx	lr

08014bb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8014bb2:	4770      	bx	lr

08014bb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014bb4:	4770      	bx	lr

08014bb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8014bb6:	4770      	bx	lr

08014bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014bb8:	4770      	bx	lr

08014bba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8014bba:	4770      	bx	lr

08014bbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014bbc:	4770      	bx	lr

08014bbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8014bbe:	4770      	bx	lr

08014bc0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8014bc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014bc4:	b088      	sub	sp, #32
 8014bc6:	4606      	mov	r6, r0
 8014bc8:	4688      	mov	r8, r1
 8014bca:	4691      	mov	r9, r2
 8014bcc:	ac08      	add	r4, sp, #32
 8014bce:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8014bd2:	4620      	mov	r0, r4
 8014bd4:	f7fd fc62 	bl	801249c <_ZNK8touchgfx6Bitmap7getDataEv>
 8014bd8:	6833      	ldr	r3, [r6, #0]
 8014bda:	4605      	mov	r5, r0
 8014bdc:	4620      	mov	r0, r4
 8014bde:	699f      	ldr	r7, [r3, #24]
 8014be0:	f7fd fb70 	bl	80122c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014be4:	4682      	mov	sl, r0
 8014be6:	4620      	mov	r0, r4
 8014be8:	f7fd fba0 	bl	801232c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014bec:	9500      	str	r5, [sp, #0]
 8014bee:	464b      	mov	r3, r9
 8014bf0:	4642      	mov	r2, r8
 8014bf2:	4631      	mov	r1, r6
 8014bf4:	e9cd a001 	strd	sl, r0, [sp, #4]
 8014bf8:	a806      	add	r0, sp, #24
 8014bfa:	47b8      	blx	r7
 8014bfc:	4628      	mov	r0, r5
 8014bfe:	b008      	add	sp, #32
 8014c00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08014c04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8014c04:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8014c08:	2300      	movs	r3, #0
 8014c0a:	9300      	str	r3, [sp, #0]
 8014c0c:	4b3d      	ldr	r3, [pc, #244]	@ (8014d04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8014c0e:	781b      	ldrb	r3, [r3, #0]
 8014c10:	2b00      	cmp	r3, #0
 8014c12:	d137      	bne.n	8014c84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8014c14:	4a3c      	ldr	r2, [pc, #240]	@ (8014d08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8014c16:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014c1a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014c1e:	2b00      	cmp	r3, #0
 8014c20:	d132      	bne.n	8014c88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8014c22:	4b3a      	ldr	r3, [pc, #232]	@ (8014d0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8014c24:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014c28:	ac02      	add	r4, sp, #8
 8014c2a:	6808      	ldr	r0, [r1, #0]
 8014c2c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014c30:	ab02      	add	r3, sp, #8
 8014c32:	6849      	ldr	r1, [r1, #4]
 8014c34:	4d36      	ldr	r5, [pc, #216]	@ (8014d10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8014c36:	c303      	stmia	r3!, {r0, r1}
 8014c38:	4669      	mov	r1, sp
 8014c3a:	4620      	mov	r0, r4
 8014c3c:	f7fa f904 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014c40:	4668      	mov	r0, sp
 8014c42:	f7fa f8d9 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014c46:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8014c4a:	f8bd 2000 	ldrh.w	r2, [sp]
 8014c4e:	462f      	mov	r7, r5
 8014c50:	6828      	ldr	r0, [r5, #0]
 8014c52:	4413      	add	r3, r2
 8014c54:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8014c58:	f8ad 3008 	strh.w	r3, [sp, #8]
 8014c5c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8014c60:	4413      	add	r3, r2
 8014c62:	f8ad 300a 	strh.w	r3, [sp, #10]
 8014c66:	6803      	ldr	r3, [r0, #0]
 8014c68:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8014c6a:	4798      	blx	r3
 8014c6c:	f010 0f01 	tst.w	r0, #1
 8014c70:	d00c      	beq.n	8014c8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8014c72:	6828      	ldr	r0, [r5, #0]
 8014c74:	6803      	ldr	r3, [r0, #0]
 8014c76:	e894 0006 	ldmia.w	r4, {r1, r2}
 8014c7a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8014c7c:	4798      	blx	r3
 8014c7e:	b004      	add	sp, #16
 8014c80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014c84:	4a21      	ldr	r2, [pc, #132]	@ (8014d0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8014c86:	e7c6      	b.n	8014c16 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8014c88:	4b1f      	ldr	r3, [pc, #124]	@ (8014d08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8014c8a:	e7cb      	b.n	8014c24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8014c8c:	6838      	ldr	r0, [r7, #0]
 8014c8e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8014c92:	6803      	ldr	r3, [r0, #0]
 8014c94:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8014c98:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8014c9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8014c9e:	4798      	blx	r3
 8014ca0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8014ca4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014ca8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8014cac:	fb16 3602 	smlabb	r6, r6, r2, r3
 8014cb0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014cb4:	6838      	ldr	r0, [r7, #0]
 8014cb6:	6803      	ldr	r3, [r0, #0]
 8014cb8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014cba:	4798      	blx	r3
 8014cbc:	4a12      	ldr	r2, [pc, #72]	@ (8014d08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8014cbe:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8014cc2:	8813      	ldrh	r3, [r2, #0]
 8014cc4:	4691      	mov	r9, r2
 8014cc6:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8014cca:	435d      	muls	r5, r3
 8014ccc:	fb03 1404 	mla	r4, r3, r4, r1
 8014cd0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8014cd4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8014cd8:	6838      	ldr	r0, [r7, #0]
 8014cda:	42ac      	cmp	r4, r5
 8014cdc:	6803      	ldr	r3, [r0, #0]
 8014cde:	d20e      	bcs.n	8014cfe <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8014ce0:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 8014ce4:	4632      	mov	r2, r6
 8014ce6:	4643      	mov	r3, r8
 8014ce8:	4621      	mov	r1, r4
 8014cea:	47d0      	blx	sl
 8014cec:	f8b9 3000 	ldrh.w	r3, [r9]
 8014cf0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014cf4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8014cf8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8014cfc:	e7ec      	b.n	8014cd8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8014cfe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014d00:	4798      	blx	r3
 8014d02:	e7bc      	b.n	8014c7e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8014d04:	200169f8 	.word	0x200169f8
 8014d08:	200169fa 	.word	0x200169fa
 8014d0c:	200169fc 	.word	0x200169fc
 8014d10:	20016a00 	.word	0x20016a00

08014d14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8014d14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d18:	b08b      	sub	sp, #44	@ 0x2c
 8014d1a:	460f      	mov	r7, r1
 8014d1c:	4616      	mov	r6, r2
 8014d1e:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8014d22:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8014d26:	f1bb 0f00 	cmp.w	fp, #0
 8014d2a:	d04a      	beq.n	8014dc2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8014d2c:	6810      	ldr	r0, [r2, #0]
 8014d2e:	ad06      	add	r5, sp, #24
 8014d30:	6851      	ldr	r1, [r2, #4]
 8014d32:	c503      	stmia	r5!, {r0, r1}
 8014d34:	6818      	ldr	r0, [r3, #0]
 8014d36:	ad08      	add	r5, sp, #32
 8014d38:	6859      	ldr	r1, [r3, #4]
 8014d3a:	c503      	stmia	r5!, {r0, r1}
 8014d3c:	a806      	add	r0, sp, #24
 8014d3e:	f7fa f85b 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014d42:	4631      	mov	r1, r6
 8014d44:	a808      	add	r0, sp, #32
 8014d46:	f7fa f87f 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014d4a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8014d4e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8014d52:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8014d56:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8014d5a:	fb16 2103 	smlabb	r1, r6, r3, r2
 8014d5e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8014d62:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8014d66:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8014d6a:	4f5f      	ldr	r7, [pc, #380]	@ (8014ee8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8014d6c:	440a      	add	r2, r1
 8014d6e:	6838      	ldr	r0, [r7, #0]
 8014d70:	46b9      	mov	r9, r7
 8014d72:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014d76:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8014d7a:	4413      	add	r3, r2
 8014d7c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8014d80:	6803      	ldr	r3, [r0, #0]
 8014d82:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8014d84:	4798      	blx	r3
 8014d86:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8014d8a:	d11d      	bne.n	8014dc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8014d8c:	b9fc      	cbnz	r4, 8014dce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8014d8e:	f010 0f01 	tst.w	r0, #1
 8014d92:	d01c      	beq.n	8014dce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8014d94:	f8d9 0000 	ldr.w	r0, [r9]
 8014d98:	2700      	movs	r7, #0
 8014d9a:	b2ad      	uxth	r5, r5
 8014d9c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8014da0:	6801      	ldr	r1, [r0, #0]
 8014da2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8014da6:	f8cd b00c 	str.w	fp, [sp, #12]
 8014daa:	9501      	str	r5, [sp, #4]
 8014dac:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8014db0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8014db4:	9402      	str	r4, [sp, #8]
 8014db6:	fa1f f488 	uxth.w	r4, r8
 8014dba:	9400      	str	r4, [sp, #0]
 8014dbc:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 8014dbe:	4631      	mov	r1, r6
 8014dc0:	47a0      	blx	r4
 8014dc2:	b00b      	add	sp, #44	@ 0x2c
 8014dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014dc8:	f010 0f04 	tst.w	r0, #4
 8014dcc:	e7e1      	b.n	8014d92 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8014dce:	f8d9 0000 	ldr.w	r0, [r9]
 8014dd2:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8014dd6:	6803      	ldr	r3, [r0, #0]
 8014dd8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014dda:	4798      	blx	r3
 8014ddc:	4b43      	ldr	r3, [pc, #268]	@ (8014eec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8014dde:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8014de2:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8014de6:	881a      	ldrh	r2, [r3, #0]
 8014de8:	469a      	mov	sl, r3
 8014dea:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8014dee:	fb05 f502 	mul.w	r5, r5, r2
 8014df2:	fb02 1404 	mla	r4, r2, r4, r1
 8014df6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8014dfa:	d059      	beq.n	8014eb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8014dfc:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8014e00:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8014e04:	fa1f f28b 	uxth.w	r2, fp
 8014e08:	469e      	mov	lr, r3
 8014e0a:	fa1f f989 	uxth.w	r9, r9
 8014e0e:	42ac      	cmp	r4, r5
 8014e10:	d264      	bcs.n	8014edc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8014e12:	eb04 0a07 	add.w	sl, r4, r7
 8014e16:	4554      	cmp	r4, sl
 8014e18:	d23d      	bcs.n	8014e96 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8014e1a:	8821      	ldrh	r1, [r4, #0]
 8014e1c:	f836 3b02 	ldrh.w	r3, [r6], #2
 8014e20:	1208      	asrs	r0, r1, #8
 8014e22:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8014e26:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8014e2a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8014e2e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014e32:	00c9      	lsls	r1, r1, #3
 8014e34:	fb10 f009 	smulbb	r0, r0, r9
 8014e38:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8014e3c:	b2c9      	uxtb	r1, r1
 8014e3e:	fb0c 0c02 	mla	ip, ip, r2, r0
 8014e42:	10d8      	asrs	r0, r3, #3
 8014e44:	fb1b fb09 	smulbb	fp, fp, r9
 8014e48:	00db      	lsls	r3, r3, #3
 8014e4a:	fa1f fc8c 	uxth.w	ip, ip
 8014e4e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8014e52:	fb11 f109 	smulbb	r1, r1, r9
 8014e56:	b2db      	uxtb	r3, r3
 8014e58:	fb00 b002 	mla	r0, r0, r2, fp
 8014e5c:	f10c 0b01 	add.w	fp, ip, #1
 8014e60:	fb03 1302 	mla	r3, r3, r2, r1
 8014e64:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8014e68:	b29b      	uxth	r3, r3
 8014e6a:	b280      	uxth	r0, r0
 8014e6c:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8014e70:	f103 0c01 	add.w	ip, r3, #1
 8014e74:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8014e78:	1c43      	adds	r3, r0, #1
 8014e7a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8014e7e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014e82:	0940      	lsrs	r0, r0, #5
 8014e84:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014e88:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8014e8c:	ea4c 0c00 	orr.w	ip, ip, r0
 8014e90:	f824 cb02 	strh.w	ip, [r4], #2
 8014e94:	e7bf      	b.n	8014e16 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8014e96:	f8be 3000 	ldrh.w	r3, [lr]
 8014e9a:	eba3 0308 	sub.w	r3, r3, r8
 8014e9e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ea2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014ea6:	eba3 0308 	sub.w	r3, r3, r8
 8014eaa:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8014eae:	e7ae      	b.n	8014e0e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8014eb0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8014eb4:	f8d9 0000 	ldr.w	r0, [r9]
 8014eb8:	42ac      	cmp	r4, r5
 8014eba:	6803      	ldr	r3, [r0, #0]
 8014ebc:	d20e      	bcs.n	8014edc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8014ebe:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 8014ec2:	4632      	mov	r2, r6
 8014ec4:	463b      	mov	r3, r7
 8014ec6:	4621      	mov	r1, r4
 8014ec8:	47c0      	blx	r8
 8014eca:	f8ba 3000 	ldrh.w	r3, [sl]
 8014ece:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ed2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014ed6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8014eda:	e7eb      	b.n	8014eb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8014edc:	4b02      	ldr	r3, [pc, #8]	@ (8014ee8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8014ede:	6818      	ldr	r0, [r3, #0]
 8014ee0:	6803      	ldr	r3, [r0, #0]
 8014ee2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014ee4:	4798      	blx	r3
 8014ee6:	e76c      	b.n	8014dc2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8014ee8:	20016a00 	.word	0x20016a00
 8014eec:	200169fa 	.word	0x200169fa

08014ef0 <_ZN8touchgfx8LCD16bppD0Ev>:
 8014ef0:	b510      	push	{r4, lr}
 8014ef2:	4604      	mov	r4, r0
 8014ef4:	2188      	movs	r1, #136	@ 0x88
 8014ef6:	f00b f92a 	bl	802014e <_ZdlPvj>
 8014efa:	4620      	mov	r0, r4
 8014efc:	bd10      	pop	{r4, pc}

08014efe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8014efe:	b510      	push	{r4, lr}
 8014f00:	4604      	mov	r4, r0
 8014f02:	2104      	movs	r1, #4
 8014f04:	f00b f923 	bl	802014e <_ZdlPvj>
 8014f08:	4620      	mov	r0, r4
 8014f0a:	bd10      	pop	{r4, pc}

08014f0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8014f0c:	b510      	push	{r4, lr}
 8014f0e:	4604      	mov	r4, r0
 8014f10:	2104      	movs	r1, #4
 8014f12:	f00b f91c 	bl	802014e <_ZdlPvj>
 8014f16:	4620      	mov	r0, r4
 8014f18:	bd10      	pop	{r4, pc}

08014f1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8014f1a:	b510      	push	{r4, lr}
 8014f1c:	4604      	mov	r4, r0
 8014f1e:	f640 0144 	movw	r1, #2116	@ 0x844
 8014f22:	f00b f914 	bl	802014e <_ZdlPvj>
 8014f26:	4620      	mov	r0, r4
 8014f28:	bd10      	pop	{r4, pc}

08014f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014f2a:	b510      	push	{r4, lr}
 8014f2c:	4604      	mov	r4, r0
 8014f2e:	2104      	movs	r1, #4
 8014f30:	f00b f90d 	bl	802014e <_ZdlPvj>
 8014f34:	4620      	mov	r0, r4
 8014f36:	bd10      	pop	{r4, pc}

08014f38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8014f38:	b510      	push	{r4, lr}
 8014f3a:	4604      	mov	r4, r0
 8014f3c:	2104      	movs	r1, #4
 8014f3e:	f00b f906 	bl	802014e <_ZdlPvj>
 8014f42:	4620      	mov	r0, r4
 8014f44:	bd10      	pop	{r4, pc}

08014f46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8014f46:	b510      	push	{r4, lr}
 8014f48:	4604      	mov	r4, r0
 8014f4a:	2104      	movs	r1, #4
 8014f4c:	f00b f8ff 	bl	802014e <_ZdlPvj>
 8014f50:	4620      	mov	r0, r4
 8014f52:	bd10      	pop	{r4, pc}

08014f54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8014f54:	b510      	push	{r4, lr}
 8014f56:	4604      	mov	r4, r0
 8014f58:	2104      	movs	r1, #4
 8014f5a:	f00b f8f8 	bl	802014e <_ZdlPvj>
 8014f5e:	4620      	mov	r0, r4
 8014f60:	bd10      	pop	{r4, pc}

08014f62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014f62:	b510      	push	{r4, lr}
 8014f64:	4604      	mov	r4, r0
 8014f66:	2104      	movs	r1, #4
 8014f68:	f00b f8f1 	bl	802014e <_ZdlPvj>
 8014f6c:	4620      	mov	r0, r4
 8014f6e:	bd10      	pop	{r4, pc}

08014f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8014f70:	b510      	push	{r4, lr}
 8014f72:	4604      	mov	r4, r0
 8014f74:	2104      	movs	r1, #4
 8014f76:	f00b f8ea 	bl	802014e <_ZdlPvj>
 8014f7a:	4620      	mov	r0, r4
 8014f7c:	bd10      	pop	{r4, pc}

08014f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8014f7e:	b510      	push	{r4, lr}
 8014f80:	4604      	mov	r4, r0
 8014f82:	2104      	movs	r1, #4
 8014f84:	f00b f8e3 	bl	802014e <_ZdlPvj>
 8014f88:	4620      	mov	r0, r4
 8014f8a:	bd10      	pop	{r4, pc}

08014f8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8014f8c:	b510      	push	{r4, lr}
 8014f8e:	4604      	mov	r4, r0
 8014f90:	2104      	movs	r1, #4
 8014f92:	f00b f8dc 	bl	802014e <_ZdlPvj>
 8014f96:	4620      	mov	r0, r4
 8014f98:	bd10      	pop	{r4, pc}

08014f9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8014f9a:	b510      	push	{r4, lr}
 8014f9c:	4604      	mov	r4, r0
 8014f9e:	2104      	movs	r1, #4
 8014fa0:	f00b f8d5 	bl	802014e <_ZdlPvj>
 8014fa4:	4620      	mov	r0, r4
 8014fa6:	bd10      	pop	{r4, pc}

08014fa8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8014fa8:	b510      	push	{r4, lr}
 8014faa:	4604      	mov	r4, r0
 8014fac:	2104      	movs	r1, #4
 8014fae:	f00b f8ce 	bl	802014e <_ZdlPvj>
 8014fb2:	4620      	mov	r0, r4
 8014fb4:	bd10      	pop	{r4, pc}

08014fb6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8014fb6:	b510      	push	{r4, lr}
 8014fb8:	4604      	mov	r4, r0
 8014fba:	2104      	movs	r1, #4
 8014fbc:	f00b f8c7 	bl	802014e <_ZdlPvj>
 8014fc0:	4620      	mov	r0, r4
 8014fc2:	bd10      	pop	{r4, pc}

08014fc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8014fc4:	b510      	push	{r4, lr}
 8014fc6:	4604      	mov	r4, r0
 8014fc8:	2104      	movs	r1, #4
 8014fca:	f00b f8c0 	bl	802014e <_ZdlPvj>
 8014fce:	4620      	mov	r0, r4
 8014fd0:	bd10      	pop	{r4, pc}

08014fd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014fd2:	b510      	push	{r4, lr}
 8014fd4:	4604      	mov	r4, r0
 8014fd6:	2104      	movs	r1, #4
 8014fd8:	f00b f8b9 	bl	802014e <_ZdlPvj>
 8014fdc:	4620      	mov	r0, r4
 8014fde:	bd10      	pop	{r4, pc}

08014fe0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8014fe0:	b510      	push	{r4, lr}
 8014fe2:	4604      	mov	r4, r0
 8014fe4:	2104      	movs	r1, #4
 8014fe6:	f00b f8b2 	bl	802014e <_ZdlPvj>
 8014fea:	4620      	mov	r0, r4
 8014fec:	bd10      	pop	{r4, pc}

08014fee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8014fee:	b510      	push	{r4, lr}
 8014ff0:	4604      	mov	r4, r0
 8014ff2:	2104      	movs	r1, #4
 8014ff4:	f00b f8ab 	bl	802014e <_ZdlPvj>
 8014ff8:	4620      	mov	r0, r4
 8014ffa:	bd10      	pop	{r4, pc}

08014ffc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8014ffc:	b510      	push	{r4, lr}
 8014ffe:	4604      	mov	r4, r0
 8015000:	2104      	movs	r1, #4
 8015002:	f00b f8a4 	bl	802014e <_ZdlPvj>
 8015006:	4620      	mov	r0, r4
 8015008:	bd10      	pop	{r4, pc}

0801500a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801500a:	b510      	push	{r4, lr}
 801500c:	4604      	mov	r4, r0
 801500e:	2104      	movs	r1, #4
 8015010:	f00b f89d 	bl	802014e <_ZdlPvj>
 8015014:	4620      	mov	r0, r4
 8015016:	bd10      	pop	{r4, pc}

08015018 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015018:	b510      	push	{r4, lr}
 801501a:	4604      	mov	r4, r0
 801501c:	2104      	movs	r1, #4
 801501e:	f00b f896 	bl	802014e <_ZdlPvj>
 8015022:	4620      	mov	r0, r4
 8015024:	bd10      	pop	{r4, pc}

08015026 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015026:	b510      	push	{r4, lr}
 8015028:	4604      	mov	r4, r0
 801502a:	2104      	movs	r1, #4
 801502c:	f00b f88f 	bl	802014e <_ZdlPvj>
 8015030:	4620      	mov	r0, r4
 8015032:	bd10      	pop	{r4, pc}

08015034 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015034:	b510      	push	{r4, lr}
 8015036:	4604      	mov	r4, r0
 8015038:	2104      	movs	r1, #4
 801503a:	f00b f888 	bl	802014e <_ZdlPvj>
 801503e:	4620      	mov	r0, r4
 8015040:	bd10      	pop	{r4, pc}

08015042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015042:	b510      	push	{r4, lr}
 8015044:	4604      	mov	r4, r0
 8015046:	2104      	movs	r1, #4
 8015048:	f00b f881 	bl	802014e <_ZdlPvj>
 801504c:	4620      	mov	r0, r4
 801504e:	bd10      	pop	{r4, pc}

08015050 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015050:	b510      	push	{r4, lr}
 8015052:	4604      	mov	r4, r0
 8015054:	2104      	movs	r1, #4
 8015056:	f00b f87a 	bl	802014e <_ZdlPvj>
 801505a:	4620      	mov	r0, r4
 801505c:	bd10      	pop	{r4, pc}

0801505e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801505e:	b510      	push	{r4, lr}
 8015060:	4604      	mov	r4, r0
 8015062:	2104      	movs	r1, #4
 8015064:	f00b f873 	bl	802014e <_ZdlPvj>
 8015068:	4620      	mov	r0, r4
 801506a:	bd10      	pop	{r4, pc}

0801506c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801506c:	b510      	push	{r4, lr}
 801506e:	4604      	mov	r4, r0
 8015070:	2104      	movs	r1, #4
 8015072:	f00b f86c 	bl	802014e <_ZdlPvj>
 8015076:	4620      	mov	r0, r4
 8015078:	bd10      	pop	{r4, pc}

0801507a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801507a:	b510      	push	{r4, lr}
 801507c:	4604      	mov	r4, r0
 801507e:	2104      	movs	r1, #4
 8015080:	f00b f865 	bl	802014e <_ZdlPvj>
 8015084:	4620      	mov	r0, r4
 8015086:	bd10      	pop	{r4, pc}

08015088 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8015088:	b510      	push	{r4, lr}
 801508a:	4604      	mov	r4, r0
 801508c:	2104      	movs	r1, #4
 801508e:	f00b f85e 	bl	802014e <_ZdlPvj>
 8015092:	4620      	mov	r0, r4
 8015094:	bd10      	pop	{r4, pc}

08015096 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8015096:	b510      	push	{r4, lr}
 8015098:	4604      	mov	r4, r0
 801509a:	2104      	movs	r1, #4
 801509c:	f00b f857 	bl	802014e <_ZdlPvj>
 80150a0:	4620      	mov	r0, r4
 80150a2:	bd10      	pop	{r4, pc}

080150a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80150a4:	b510      	push	{r4, lr}
 80150a6:	4604      	mov	r4, r0
 80150a8:	2104      	movs	r1, #4
 80150aa:	f00b f850 	bl	802014e <_ZdlPvj>
 80150ae:	4620      	mov	r0, r4
 80150b0:	bd10      	pop	{r4, pc}
	...

080150b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80150b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150b8:	b08f      	sub	sp, #60	@ 0x3c
 80150ba:	461c      	mov	r4, r3
 80150bc:	9205      	str	r2, [sp, #20]
 80150be:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80150c2:	9100      	str	r1, [sp, #0]
 80150c4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80150c6:	9201      	str	r2, [sp, #4]
 80150c8:	2a00      	cmp	r2, #0
 80150ca:	f000 8116 	beq.w	80152fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 80150ce:	6820      	ldr	r0, [r4, #0]
 80150d0:	aa0a      	add	r2, sp, #40	@ 0x28
 80150d2:	6861      	ldr	r1, [r4, #4]
 80150d4:	c203      	stmia	r2!, {r0, r1}
 80150d6:	6818      	ldr	r0, [r3, #0]
 80150d8:	aa0c      	add	r2, sp, #48	@ 0x30
 80150da:	6859      	ldr	r1, [r3, #4]
 80150dc:	c203      	stmia	r2!, {r0, r1}
 80150de:	a80a      	add	r0, sp, #40	@ 0x28
 80150e0:	f7f9 fe8a 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80150e4:	4621      	mov	r1, r4
 80150e6:	a80c      	add	r0, sp, #48	@ 0x30
 80150e8:	f7f9 feae 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80150ec:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80150f0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80150f4:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80150f8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80150fc:	bfdb      	ittet	le
 80150fe:	b2b3      	uxthle	r3, r6
 8015100:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8015104:	2301      	movgt	r3, #1
 8015106:	fb92 f3f3 	sdivle	r3, r2, r3
 801510a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801510e:	441d      	add	r5, r3
 8015110:	fb92 f1f3 	sdiv	r1, r2, r3
 8015114:	fa1f fc81 	uxth.w	ip, r1
 8015118:	3d01      	subs	r5, #1
 801511a:	fb0c 2413 	mls	r4, ip, r3, r2
 801511e:	4661      	mov	r1, ip
 8015120:	fb14 f406 	smulbb	r4, r4, r6
 8015124:	4404      	add	r4, r0
 8015126:	fb95 f5f3 	sdiv	r5, r5, r3
 801512a:	b2a4      	uxth	r4, r4
 801512c:	b131      	cbz	r1, 801513c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 801512e:	9b05      	ldr	r3, [sp, #20]
 8015130:	9900      	ldr	r1, [sp, #0]
 8015132:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015136:	ba1b      	rev	r3, r3
 8015138:	4419      	add	r1, r3
 801513a:	9100      	str	r1, [sp, #0]
 801513c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015140:	b2ad      	uxth	r5, r5
 8015142:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8015146:	4418      	add	r0, r3
 8015148:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801514c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8015150:	00ad      	lsls	r5, r5, #2
 8015152:	441a      	add	r2, r3
 8015154:	4b6a      	ldr	r3, [pc, #424]	@ (8015300 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015156:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801515a:	6818      	ldr	r0, [r3, #0]
 801515c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8015160:	6803      	ldr	r3, [r0, #0]
 8015162:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015164:	4798      	blx	r3
 8015166:	4967      	ldr	r1, [pc, #412]	@ (8015304 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8015168:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801516c:	2c00      	cmp	r4, #0
 801516e:	880b      	ldrh	r3, [r1, #0]
 8015170:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8015174:	bf0c      	ite	eq
 8015176:	46c6      	moveq	lr, r8
 8015178:	f04f 0e00 	movne.w	lr, #0
 801517c:	9109      	str	r1, [sp, #36]	@ 0x24
 801517e:	fb03 c202 	mla	r2, r3, r2, ip
 8015182:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8015186:	4373      	muls	r3, r6
 8015188:	fa1f fe8e 	uxth.w	lr, lr
 801518c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015190:	9103      	str	r1, [sp, #12]
 8015192:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015196:	9306      	str	r3, [sp, #24]
 8015198:	1d2b      	adds	r3, r5, #4
 801519a:	9307      	str	r3, [sp, #28]
 801519c:	9b01      	ldr	r3, [sp, #4]
 801519e:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 80151a2:	2300      	movs	r3, #0
 80151a4:	b292      	uxth	r2, r2
 80151a6:	9302      	str	r3, [sp, #8]
 80151a8:	9204      	str	r2, [sp, #16]
 80151aa:	9a06      	ldr	r2, [sp, #24]
 80151ac:	4282      	cmp	r2, r0
 80151ae:	f240 809f 	bls.w	80152f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 80151b2:	b963      	cbnz	r3, 80151ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 80151b4:	9b00      	ldr	r3, [sp, #0]
 80151b6:	781a      	ldrb	r2, [r3, #0]
 80151b8:	0993      	lsrs	r3, r2, #6
 80151ba:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80151be:	9202      	str	r2, [sp, #8]
 80151c0:	1e5a      	subs	r2, r3, #1
 80151c2:	2a02      	cmp	r2, #2
 80151c4:	d815      	bhi.n	80151f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80151c6:	9a00      	ldr	r2, [sp, #0]
 80151c8:	b29b      	uxth	r3, r3
 80151ca:	3201      	adds	r2, #1
 80151cc:	9200      	str	r2, [sp, #0]
 80151ce:	b1b4      	cbz	r4, 80151fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 80151d0:	429c      	cmp	r4, r3
 80151d2:	bf91      	iteee	ls
 80151d4:	1b1c      	subls	r4, r3, r4
 80151d6:	1ae4      	subhi	r4, r4, r3
 80151d8:	4671      	movhi	r1, lr
 80151da:	f04f 0a00 	movhi.w	sl, #0
 80151de:	bf9b      	ittet	ls
 80151e0:	fa1f fa84 	uxthls.w	sl, r4
 80151e4:	2400      	movls	r4, #0
 80151e6:	b2a4      	uxthhi	r4, r4
 80151e8:	fa1f f188 	uxthls.w	r1, r8
 80151ec:	4653      	mov	r3, sl
 80151ee:	468e      	mov	lr, r1
 80151f0:	e7db      	b.n	80151aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 80151f2:	9a00      	ldr	r2, [sp, #0]
 80151f4:	9b00      	ldr	r3, [sp, #0]
 80151f6:	3202      	adds	r2, #2
 80151f8:	785b      	ldrb	r3, [r3, #1]
 80151fa:	9200      	str	r2, [sp, #0]
 80151fc:	e7e7      	b.n	80151ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 80151fe:	2202      	movs	r2, #2
 8015200:	9907      	ldr	r1, [sp, #28]
 8015202:	4573      	cmp	r3, lr
 8015204:	4615      	mov	r5, r2
 8015206:	9a02      	ldr	r2, [sp, #8]
 8015208:	bf24      	itt	cs
 801520a:	eba3 0a0e 	subcs.w	sl, r3, lr
 801520e:	46f1      	movcs	r9, lr
 8015210:	fb15 1202 	smlabb	r2, r5, r2, r1
 8015214:	9905      	ldr	r1, [sp, #20]
 8015216:	bf34      	ite	cc
 8015218:	4699      	movcc	r9, r3
 801521a:	fa1f fa8a 	uxthcs.w	sl, sl
 801521e:	f831 c002 	ldrh.w	ip, [r1, r2]
 8015222:	bf38      	it	cc
 8015224:	ebae 0103 	subcc.w	r1, lr, r3
 8015228:	9a01      	ldr	r2, [sp, #4]
 801522a:	bf2e      	itee	cs
 801522c:	4621      	movcs	r1, r4
 801522e:	b289      	uxthcc	r1, r1
 8015230:	46a2      	movcc	sl, r4
 8015232:	2aff      	cmp	r2, #255	@ 0xff
 8015234:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015238:	d105      	bne.n	8015246 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 801523a:	4481      	add	r9, r0
 801523c:	4581      	cmp	r9, r0
 801523e:	d045      	beq.n	80152cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8015240:	f820 cb02 	strh.w	ip, [r0], #2
 8015244:	e7fa      	b.n	801523c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 8015246:	ea4f 222c 	mov.w	r2, ip, asr #8
 801524a:	9d03      	ldr	r5, [sp, #12]
 801524c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015250:	4481      	add	r9, r0
 8015252:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015256:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801525a:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801525e:	fa5f fc8c 	uxtb.w	ip, ip
 8015262:	436a      	muls	r2, r5
 8015264:	fb0b fb05 	mul.w	fp, fp, r5
 8015268:	fb0c fc05 	mul.w	ip, ip, r5
 801526c:	9208      	str	r2, [sp, #32]
 801526e:	4581      	cmp	r9, r0
 8015270:	d02c      	beq.n	80152cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8015272:	8802      	ldrh	r2, [r0, #0]
 8015274:	9d04      	ldr	r5, [sp, #16]
 8015276:	1216      	asrs	r6, r2, #8
 8015278:	9f04      	ldr	r7, [sp, #16]
 801527a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801527e:	fb16 f605 	smulbb	r6, r6, r5
 8015282:	9d08      	ldr	r5, [sp, #32]
 8015284:	442e      	add	r6, r5
 8015286:	10d5      	asrs	r5, r2, #3
 8015288:	00d2      	lsls	r2, r2, #3
 801528a:	b2b6      	uxth	r6, r6
 801528c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015290:	b2d2      	uxtb	r2, r2
 8015292:	fb15 f507 	smulbb	r5, r5, r7
 8015296:	fb12 f207 	smulbb	r2, r2, r7
 801529a:	1c77      	adds	r7, r6, #1
 801529c:	445d      	add	r5, fp
 801529e:	4462      	add	r2, ip
 80152a0:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80152a4:	b2ad      	uxth	r5, r5
 80152a6:	b292      	uxth	r2, r2
 80152a8:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80152ac:	1c57      	adds	r7, r2, #1
 80152ae:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 80152b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80152b6:	4316      	orrs	r6, r2
 80152b8:	1c6a      	adds	r2, r5, #1
 80152ba:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80152be:	096d      	lsrs	r5, r5, #5
 80152c0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80152c4:	432e      	orrs	r6, r5
 80152c6:	f820 6b02 	strh.w	r6, [r0], #2
 80152ca:	e7d0      	b.n	801526e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 80152cc:	4573      	cmp	r3, lr
 80152ce:	d38d      	bcc.n	80151ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 80152d0:	fa1f f188 	uxth.w	r1, r8
 80152d4:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 80152d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80152da:	1a64      	subs	r4, r4, r1
 80152dc:	881b      	ldrh	r3, [r3, #0]
 80152de:	b2a4      	uxth	r4, r4
 80152e0:	eba3 0308 	sub.w	r3, r3, r8
 80152e4:	2c00      	cmp	r4, #0
 80152e6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80152ea:	bf18      	it	ne
 80152ec:	2100      	movne	r1, #0
 80152ee:	e77d      	b.n	80151ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 80152f0:	4b03      	ldr	r3, [pc, #12]	@ (8015300 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80152f2:	6818      	ldr	r0, [r3, #0]
 80152f4:	6803      	ldr	r3, [r0, #0]
 80152f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80152f8:	4798      	blx	r3
 80152fa:	b00f      	add	sp, #60	@ 0x3c
 80152fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015300:	20016a00 	.word	0x20016a00
 8015304:	200169fa 	.word	0x200169fa

08015308 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801530c:	b09f      	sub	sp, #124	@ 0x7c
 801530e:	461d      	mov	r5, r3
 8015310:	4604      	mov	r4, r0
 8015312:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8015314:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8015318:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801531c:	9209      	str	r2, [sp, #36]	@ 0x24
 801531e:	2a00      	cmp	r2, #0
 8015320:	f000 81ed 	beq.w	80156fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 8015324:	6828      	ldr	r0, [r5, #0]
 8015326:	aa1a      	add	r2, sp, #104	@ 0x68
 8015328:	6869      	ldr	r1, [r5, #4]
 801532a:	c203      	stmia	r2!, {r0, r1}
 801532c:	6818      	ldr	r0, [r3, #0]
 801532e:	aa1c      	add	r2, sp, #112	@ 0x70
 8015330:	6859      	ldr	r1, [r3, #4]
 8015332:	c203      	stmia	r2!, {r0, r1}
 8015334:	a81a      	add	r0, sp, #104	@ 0x68
 8015336:	f7f9 fd5f 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801533a:	4629      	mov	r1, r5
 801533c:	a81c      	add	r0, sp, #112	@ 0x70
 801533e:	f7f9 fd83 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015342:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8015346:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801534a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801534e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8015352:	bfdb      	ittet	le
 8015354:	b29a      	uxthle	r2, r3
 8015356:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801535a:	2201      	movgt	r2, #1
 801535c:	fb91 f2f2 	sdivle	r2, r1, r2
 8015360:	9202      	str	r2, [sp, #8]
 8015362:	9802      	ldr	r0, [sp, #8]
 8015364:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8015368:	9902      	ldr	r1, [sp, #8]
 801536a:	fb92 f0f0 	sdiv	r0, r2, r0
 801536e:	b280      	uxth	r0, r0
 8015370:	4488      	add	r8, r1
 8015372:	9010      	str	r0, [sp, #64]	@ 0x40
 8015374:	f108 38ff 	add.w	r8, r8, #4294967295
 8015378:	9802      	ldr	r0, [sp, #8]
 801537a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801537c:	fb05 2510 	mls	r5, r5, r0, r2
 8015380:	fb98 f8f1 	sdiv	r8, r8, r1
 8015384:	fb15 f503 	smulbb	r5, r5, r3
 8015388:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801538c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8015390:	f108 0801 	add.w	r8, r8, #1
 8015394:	440d      	add	r5, r1
 8015396:	4419      	add	r1, r3
 8015398:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801539c:	fa1f f888 	uxth.w	r8, r8
 80153a0:	441a      	add	r2, r3
 80153a2:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 80153a6:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 80153aa:	b2ad      	uxth	r5, r5
 80153ac:	9304      	str	r3, [sp, #16]
 80153ae:	4b94      	ldr	r3, [pc, #592]	@ (8015600 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 80153b0:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 80153b4:	6818      	ldr	r0, [r3, #0]
 80153b6:	6803      	ldr	r3, [r0, #0]
 80153b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80153ba:	4798      	blx	r3
 80153bc:	4b91      	ldr	r3, [pc, #580]	@ (8015604 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 80153be:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 80153c2:	2d00      	cmp	r5, #0
 80153c4:	881a      	ldrh	r2, [r3, #0]
 80153c6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 80153ca:	fb02 f606 	mul.w	r6, r2, r6
 80153ce:	fb02 7101 	mla	r1, r2, r1, r7
 80153d2:	9318      	str	r3, [sp, #96]	@ 0x60
 80153d4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80153d8:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 80153dc:	f04f 0100 	mov.w	r1, #0
 80153e0:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 80153e4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80153e6:	4b88      	ldr	r3, [pc, #544]	@ (8015608 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 80153e8:	920a      	str	r2, [sp, #40]	@ 0x28
 80153ea:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80153ec:	eba3 0304 	sub.w	r3, r3, r4
 80153f0:	910d      	str	r1, [sp, #52]	@ 0x34
 80153f2:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 80153f6:	9319      	str	r3, [sp, #100]	@ 0x64
 80153f8:	f108 0204 	add.w	r2, r8, #4
 80153fc:	9211      	str	r2, [sp, #68]	@ 0x44
 80153fe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015400:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8015404:	9215      	str	r2, [sp, #84]	@ 0x54
 8015406:	9a04      	ldr	r2, [sp, #16]
 8015408:	bf18      	it	ne
 801540a:	2200      	movne	r2, #0
 801540c:	b292      	uxth	r2, r2
 801540e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8015410:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015412:	fa11 f383 	uxtah	r3, r1, r3
 8015416:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8015418:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801541c:	3304      	adds	r3, #4
 801541e:	9306      	str	r3, [sp, #24]
 8015420:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015422:	4283      	cmp	r3, r0
 8015424:	f240 8166 	bls.w	80156f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 8015428:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801542c:	f04f 0a01 	mov.w	sl, #1
 8015430:	9902      	ldr	r1, [sp, #8]
 8015432:	9e06      	ldr	r6, [sp, #24]
 8015434:	46d3      	mov	fp, sl
 8015436:	4657      	mov	r7, sl
 8015438:	7836      	ldrb	r6, [r6, #0]
 801543a:	fbb5 f3f3 	udiv	r3, r5, r3
 801543e:	1acb      	subs	r3, r1, r3
 8015440:	9612      	str	r6, [sp, #72]	@ 0x48
 8015442:	3601      	adds	r6, #1
 8015444:	b29b      	uxth	r3, r3
 8015446:	9605      	str	r6, [sp, #20]
 8015448:	9316      	str	r3, [sp, #88]	@ 0x58
 801544a:	9b06      	ldr	r3, [sp, #24]
 801544c:	7859      	ldrb	r1, [r3, #1]
 801544e:	789b      	ldrb	r3, [r3, #2]
 8015450:	021b      	lsls	r3, r3, #8
 8015452:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8015456:	9906      	ldr	r1, [sp, #24]
 8015458:	78c9      	ldrb	r1, [r1, #3]
 801545a:	430b      	orrs	r3, r1
 801545c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801545e:	4419      	add	r1, r3
 8015460:	1c4e      	adds	r6, r1, #1
 8015462:	7849      	ldrb	r1, [r1, #1]
 8015464:	9603      	str	r6, [sp, #12]
 8015466:	0209      	lsls	r1, r1, #8
 8015468:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801546a:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 801546e:	5cf3      	ldrb	r3, [r6, r3]
 8015470:	4319      	orrs	r1, r3
 8015472:	b28b      	uxth	r3, r1
 8015474:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8015478:	930c      	str	r3, [sp, #48]	@ 0x30
 801547a:	2300      	movs	r3, #0
 801547c:	9307      	str	r3, [sp, #28]
 801547e:	469c      	mov	ip, r3
 8015480:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8015484:	930e      	str	r3, [sp, #56]	@ 0x38
 8015486:	2d00      	cmp	r5, #0
 8015488:	d07e      	beq.n	8015588 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 801548a:	42af      	cmp	r7, r5
 801548c:	d26e      	bcs.n	801556c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 801548e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015490:	1bed      	subs	r5, r5, r7
 8015492:	9201      	str	r2, [sp, #4]
 8015494:	4283      	cmp	r3, r0
 8015496:	b2ad      	uxth	r5, r5
 8015498:	d802      	bhi.n	80154a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 801549a:	e073      	b.n	8015584 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801549c:	2b00      	cmp	r3, #0
 801549e:	d15f      	bne.n	8015560 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 80154a0:	9b03      	ldr	r3, [sp, #12]
 80154a2:	f1cb 0207 	rsb	r2, fp, #7
 80154a6:	785b      	ldrb	r3, [r3, #1]
 80154a8:	4093      	lsls	r3, r2
 80154aa:	005b      	lsls	r3, r3, #1
 80154ac:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80154b0:	9b03      	ldr	r3, [sp, #12]
 80154b2:	781b      	ldrb	r3, [r3, #0]
 80154b4:	fa43 f30b 	asr.w	r3, r3, fp
 80154b8:	b2db      	uxtb	r3, r3
 80154ba:	4313      	orrs	r3, r2
 80154bc:	f10b 0201 	add.w	r2, fp, #1
 80154c0:	fa5f fb82 	uxtb.w	fp, r2
 80154c4:	9a03      	ldr	r2, [sp, #12]
 80154c6:	b29f      	uxth	r7, r3
 80154c8:	f1bb 0f08 	cmp.w	fp, #8
 80154cc:	bf13      	iteet	ne
 80154ce:	3201      	addne	r2, #1
 80154d0:	3202      	addeq	r2, #2
 80154d2:	f04f 0b00 	moveq.w	fp, #0
 80154d6:	9203      	strne	r2, [sp, #12]
 80154d8:	bf08      	it	eq
 80154da:	9203      	streq	r2, [sp, #12]
 80154dc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80154de:	42ba      	cmp	r2, r7
 80154e0:	d309      	bcc.n	80154f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 80154e2:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 80154e6:	2301      	movs	r3, #1
 80154e8:	9a05      	ldr	r2, [sp, #20]
 80154ea:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 80154ee:	d30e      	bcc.n	801550e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80154f0:	469a      	mov	sl, r3
 80154f2:	2600      	movs	r6, #0
 80154f4:	e035      	b.n	8015562 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 80154f6:	9b05      	ldr	r3, [sp, #20]
 80154f8:	429f      	cmp	r7, r3
 80154fa:	d318      	bcc.n	801552e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 80154fc:	eb04 030a 	add.w	r3, r4, sl
 8015500:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8015504:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8015508:	f10a 0301 	add.w	r3, sl, #1
 801550c:	b29b      	uxth	r3, r3
 801550e:	9a05      	ldr	r2, [sp, #20]
 8015510:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8015514:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8015518:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801551a:	7116      	strb	r6, [r2, #4]
 801551c:	f10a 0601 	add.w	r6, sl, #1
 8015520:	80d1      	strh	r1, [r2, #6]
 8015522:	7156      	strb	r6, [r2, #5]
 8015524:	9a05      	ldr	r2, [sp, #20]
 8015526:	3201      	adds	r2, #1
 8015528:	b292      	uxth	r2, r2
 801552a:	9205      	str	r2, [sp, #20]
 801552c:	e7e0      	b.n	80154f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 801552e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8015532:	463a      	mov	r2, r7
 8015534:	795b      	ldrb	r3, [r3, #5]
 8015536:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801553a:	4426      	add	r6, r4
 801553c:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801553e:	eb01 0c06 	add.w	ip, r1, r6
 8015542:	f1bc 0f00 	cmp.w	ip, #0
 8015546:	dd07      	ble.n	8015558 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 8015548:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801554c:	f892 c004 	ldrb.w	ip, [r2, #4]
 8015550:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8015554:	88d2      	ldrh	r2, [r2, #6]
 8015556:	e7f1      	b.n	801553c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 8015558:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801555c:	b29b      	uxth	r3, r3
 801555e:	e7c3      	b.n	80154e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 8015560:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8015562:	970c      	str	r7, [sp, #48]	@ 0x30
 8015564:	46b4      	mov	ip, r6
 8015566:	9a01      	ldr	r2, [sp, #4]
 8015568:	461f      	mov	r7, r3
 801556a:	e78c      	b.n	8015486 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 801556c:	1b7b      	subs	r3, r7, r5
 801556e:	eb0c 0605 	add.w	r6, ip, r5
 8015572:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015576:	b29b      	uxth	r3, r3
 8015578:	b2b6      	uxth	r6, r6
 801557a:	9201      	str	r2, [sp, #4]
 801557c:	2500      	movs	r5, #0
 801557e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8015580:	4282      	cmp	r2, r0
 8015582:	d88b      	bhi.n	801549c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8015584:	9a01      	ldr	r2, [sp, #4]
 8015586:	e74b      	b.n	8015420 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 8015588:	4297      	cmp	r7, r2
 801558a:	d332      	bcc.n	80155f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 801558c:	1abb      	subs	r3, r7, r2
 801558e:	9208      	str	r2, [sp, #32]
 8015590:	9501      	str	r5, [sp, #4]
 8015592:	b29b      	uxth	r3, r3
 8015594:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015596:	29ff      	cmp	r1, #255	@ 0xff
 8015598:	9908      	ldr	r1, [sp, #32]
 801559a:	eb0c 0601 	add.w	r6, ip, r1
 801559e:	d135      	bne.n	801560c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 80155a0:	f1a0 0e02 	sub.w	lr, r0, #2
 80155a4:	b2b6      	uxth	r6, r6
 80155a6:	45b4      	cmp	ip, r6
 80155a8:	f040 808c 	bne.w	80156c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 80155ac:	9908      	ldr	r1, [sp, #32]
 80155ae:	4297      	cmp	r7, r2
 80155b0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80155b4:	d3e2      	bcc.n	801557c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 80155b6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80155b8:	9904      	ldr	r1, [sp, #16]
 80155ba:	8812      	ldrh	r2, [r2, #0]
 80155bc:	1a52      	subs	r2, r2, r1
 80155be:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80155c0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80155c4:	9a07      	ldr	r2, [sp, #28]
 80155c6:	3201      	adds	r2, #1
 80155c8:	428a      	cmp	r2, r1
 80155ca:	9207      	str	r2, [sp, #28]
 80155cc:	f040 8087 	bne.w	80156de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 80155d0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80155d4:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 80155d8:	9b04      	ldr	r3, [sp, #16]
 80155da:	1bed      	subs	r5, r5, r7
 80155dc:	b2ad      	uxth	r5, r5
 80155de:	2d00      	cmp	r5, #0
 80155e0:	bf08      	it	eq
 80155e2:	461a      	moveq	r2, r3
 80155e4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80155e6:	bf18      	it	ne
 80155e8:	2200      	movne	r2, #0
 80155ea:	3301      	adds	r3, #1
 80155ec:	b292      	uxth	r2, r2
 80155ee:	930d      	str	r3, [sp, #52]	@ 0x34
 80155f0:	e70d      	b.n	801540e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 80155f2:	1bd1      	subs	r1, r2, r7
 80155f4:	9708      	str	r7, [sp, #32]
 80155f6:	b28b      	uxth	r3, r1
 80155f8:	9301      	str	r3, [sp, #4]
 80155fa:	462b      	mov	r3, r5
 80155fc:	e7ca      	b.n	8015594 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 80155fe:	bf00      	nop
 8015600:	20016a00 	.word	0x20016a00
 8015604:	200169fa 	.word	0x200169fa
 8015608:	fffff7fb 	.word	0xfffff7fb
 801560c:	b2b6      	uxth	r6, r6
 801560e:	900b      	str	r0, [sp, #44]	@ 0x2c
 8015610:	45b4      	cmp	ip, r6
 8015612:	d0cb      	beq.n	80155ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 8015614:	f10c 0101 	add.w	r1, ip, #1
 8015618:	44a4      	add	ip, r4
 801561a:	9117      	str	r1, [sp, #92]	@ 0x5c
 801561c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8015620:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8015622:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8015626:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8015628:	ea4f 2825 	mov.w	r8, r5, asr #8
 801562c:	f8b1 c000 	ldrh.w	ip, [r1]
 8015630:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8015632:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8015636:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801563a:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801563e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8015642:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015646:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801564a:	fb1e fe01 	smulbb	lr, lr, r1
 801564e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8015650:	fa5f fc8c 	uxtb.w	ip, ip
 8015654:	fb08 e801 	mla	r8, r8, r1, lr
 8015658:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801565c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801565e:	00ed      	lsls	r5, r5, #3
 8015660:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8015664:	fa1f f888 	uxth.w	r8, r8
 8015668:	fb19 f901 	smulbb	r9, r9, r1
 801566c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801566e:	b2ed      	uxtb	r5, r5
 8015670:	fb0e 9e01 	mla	lr, lr, r1, r9
 8015674:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8015676:	fb1c fc01 	smulbb	ip, ip, r1
 801567a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801567c:	fa1f fe8e 	uxth.w	lr, lr
 8015680:	fb05 c501 	mla	r5, r5, r1, ip
 8015684:	f108 0c01 	add.w	ip, r8, #1
 8015688:	f10e 0901 	add.w	r9, lr, #1
 801568c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801568e:	b2ad      	uxth	r5, r5
 8015690:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8015694:	f105 0c01 	add.w	ip, r5, #1
 8015698:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801569c:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 80156a0:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80156a4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80156a8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80156ac:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80156b0:	ea4c 0808 	orr.w	r8, ip, r8
 80156b4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 80156b8:	ea48 0809 	orr.w	r8, r8, r9
 80156bc:	f821 8b02 	strh.w	r8, [r1], #2
 80156c0:	910b      	str	r1, [sp, #44]	@ 0x2c
 80156c2:	e7a5      	b.n	8015610 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 80156c4:	f10c 0801 	add.w	r8, ip, #1
 80156c8:	44a4      	add	ip, r4
 80156ca:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80156cc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80156d0:	fa1f fc88 	uxth.w	ip, r8
 80156d4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80156d8:	f82e 5f02 	strh.w	r5, [lr, #2]!
 80156dc:	e763      	b.n	80155a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 80156de:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80156e2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80156e6:	1aad      	subs	r5, r5, r2
 80156e8:	b2ad      	uxth	r5, r5
 80156ea:	2d00      	cmp	r5, #0
 80156ec:	bf18      	it	ne
 80156ee:	2200      	movne	r2, #0
 80156f0:	9201      	str	r2, [sp, #4]
 80156f2:	e744      	b.n	801557e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 80156f4:	4b03      	ldr	r3, [pc, #12]	@ (8015704 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 80156f6:	6818      	ldr	r0, [r3, #0]
 80156f8:	6803      	ldr	r3, [r0, #0]
 80156fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80156fc:	4798      	blx	r3
 80156fe:	b01f      	add	sp, #124	@ 0x7c
 8015700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015704:	20016a00 	.word	0x20016a00

08015708 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8015708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801570c:	b08f      	sub	sp, #60	@ 0x3c
 801570e:	461c      	mov	r4, r3
 8015710:	460f      	mov	r7, r1
 8015712:	9203      	str	r2, [sp, #12]
 8015714:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015718:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801571a:	9202      	str	r2, [sp, #8]
 801571c:	2a00      	cmp	r2, #0
 801571e:	f000 8128 	beq.w	8015972 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8015722:	6820      	ldr	r0, [r4, #0]
 8015724:	aa0a      	add	r2, sp, #40	@ 0x28
 8015726:	6861      	ldr	r1, [r4, #4]
 8015728:	c203      	stmia	r2!, {r0, r1}
 801572a:	6818      	ldr	r0, [r3, #0]
 801572c:	aa0c      	add	r2, sp, #48	@ 0x30
 801572e:	6859      	ldr	r1, [r3, #4]
 8015730:	c203      	stmia	r2!, {r0, r1}
 8015732:	a80a      	add	r0, sp, #40	@ 0x28
 8015734:	f7f9 fb60 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015738:	4621      	mov	r1, r4
 801573a:	a80c      	add	r0, sp, #48	@ 0x30
 801573c:	f7f9 fb84 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015740:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8015744:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8015748:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801574c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8015750:	bfdb      	ittet	le
 8015752:	b2b3      	uxthle	r3, r6
 8015754:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8015758:	2301      	movgt	r3, #1
 801575a:	fb92 f3f3 	sdivle	r3, r2, r3
 801575e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015762:	441d      	add	r5, r3
 8015764:	fb92 f1f3 	sdiv	r1, r2, r3
 8015768:	fa1f fc81 	uxth.w	ip, r1
 801576c:	3d01      	subs	r5, #1
 801576e:	fb0c 2413 	mls	r4, ip, r3, r2
 8015772:	4661      	mov	r1, ip
 8015774:	fb14 f406 	smulbb	r4, r4, r6
 8015778:	4404      	add	r4, r0
 801577a:	fb95 f5f3 	sdiv	r5, r5, r3
 801577e:	b2a4      	uxth	r4, r4
 8015780:	b121      	cbz	r1, 801578c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 8015782:	9b03      	ldr	r3, [sp, #12]
 8015784:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015788:	ba1b      	rev	r3, r3
 801578a:	441f      	add	r7, r3
 801578c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015790:	b2ad      	uxth	r5, r5
 8015792:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8015796:	4418      	add	r0, r3
 8015798:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801579c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80157a0:	00ad      	lsls	r5, r5, #2
 80157a2:	441a      	add	r2, r3
 80157a4:	4b74      	ldr	r3, [pc, #464]	@ (8015978 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80157a6:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80157aa:	6818      	ldr	r0, [r3, #0]
 80157ac:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80157b0:	6803      	ldr	r3, [r0, #0]
 80157b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80157b4:	4798      	blx	r3
 80157b6:	4a71      	ldr	r2, [pc, #452]	@ (801597c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80157b8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80157bc:	2c00      	cmp	r4, #0
 80157be:	8813      	ldrh	r3, [r2, #0]
 80157c0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80157c4:	bf0c      	ite	eq
 80157c6:	46c8      	moveq	r8, r9
 80157c8:	f04f 0800 	movne.w	r8, #0
 80157cc:	9209      	str	r2, [sp, #36]	@ 0x24
 80157ce:	fb03 c101 	mla	r1, r3, r1, ip
 80157d2:	4373      	muls	r3, r6
 80157d4:	fa1f f888 	uxth.w	r8, r8
 80157d8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80157dc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80157e0:	9304      	str	r3, [sp, #16]
 80157e2:	1d2b      	adds	r3, r5, #4
 80157e4:	9305      	str	r3, [sp, #20]
 80157e6:	2300      	movs	r3, #0
 80157e8:	9301      	str	r3, [sp, #4]
 80157ea:	9a04      	ldr	r2, [sp, #16]
 80157ec:	4282      	cmp	r2, r0
 80157ee:	f240 80bb 	bls.w	8015968 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80157f2:	b95b      	cbnz	r3, 801580c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 80157f4:	783a      	ldrb	r2, [r7, #0]
 80157f6:	0993      	lsrs	r3, r2, #6
 80157f8:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80157fc:	9201      	str	r2, [sp, #4]
 80157fe:	1e5a      	subs	r2, r3, #1
 8015800:	2a02      	cmp	r2, #2
 8015802:	bf8d      	iteet	hi
 8015804:	787b      	ldrbhi	r3, [r7, #1]
 8015806:	3701      	addls	r7, #1
 8015808:	b29b      	uxthls	r3, r3
 801580a:	3702      	addhi	r7, #2
 801580c:	b184      	cbz	r4, 8015830 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 801580e:	429c      	cmp	r4, r3
 8015810:	bf91      	iteee	ls
 8015812:	1b1c      	subls	r4, r3, r4
 8015814:	1ae4      	subhi	r4, r4, r3
 8015816:	46c4      	movhi	ip, r8
 8015818:	f04f 0a00 	movhi.w	sl, #0
 801581c:	bf9b      	ittet	ls
 801581e:	fa1f fa84 	uxthls.w	sl, r4
 8015822:	2400      	movls	r4, #0
 8015824:	b2a4      	uxthhi	r4, r4
 8015826:	fa1f fc89 	uxthls.w	ip, r9
 801582a:	4653      	mov	r3, sl
 801582c:	46e0      	mov	r8, ip
 801582e:	e7dc      	b.n	80157ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 8015830:	2204      	movs	r2, #4
 8015832:	9905      	ldr	r1, [sp, #20]
 8015834:	4543      	cmp	r3, r8
 8015836:	4615      	mov	r5, r2
 8015838:	9a01      	ldr	r2, [sp, #4]
 801583a:	bf24      	itt	cs
 801583c:	eba3 0a08 	subcs.w	sl, r3, r8
 8015840:	46c6      	movcs	lr, r8
 8015842:	fb15 1202 	smlabb	r2, r5, r2, r1
 8015846:	9903      	ldr	r1, [sp, #12]
 8015848:	bf3c      	itt	cc
 801584a:	eba8 0c03 	subcc.w	ip, r8, r3
 801584e:	469e      	movcc	lr, r3
 8015850:	588a      	ldr	r2, [r1, r2]
 8015852:	bf26      	itte	cs
 8015854:	fa1f fa8a 	uxthcs.w	sl, sl
 8015858:	46a4      	movcs	ip, r4
 801585a:	fa1f fc8c 	uxthcc.w	ip, ip
 801585e:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8015862:	bf38      	it	cc
 8015864:	46a2      	movcc	sl, r4
 8015866:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801586a:	2900      	cmp	r1, #0
 801586c:	d066      	beq.n	801593c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801586e:	29ff      	cmp	r1, #255	@ 0xff
 8015870:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8015874:	d114      	bne.n	80158a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8015876:	9d02      	ldr	r5, [sp, #8]
 8015878:	2dff      	cmp	r5, #255	@ 0xff
 801587a:	d111      	bne.n	80158a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801587c:	0951      	lsrs	r1, r2, #5
 801587e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8015882:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015886:	4486      	add	lr, r0
 8015888:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801588c:	f026 0607 	bic.w	r6, r6, #7
 8015890:	430e      	orrs	r6, r1
 8015892:	4316      	orrs	r6, r2
 8015894:	b2b6      	uxth	r6, r6
 8015896:	4586      	cmp	lr, r0
 8015898:	d051      	beq.n	801593e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801589a:	f820 6b02 	strh.w	r6, [r0], #2
 801589e:	e7fa      	b.n	8015896 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 80158a0:	9d02      	ldr	r5, [sp, #8]
 80158a2:	b2f6      	uxtb	r6, r6
 80158a4:	4486      	add	lr, r0
 80158a6:	4369      	muls	r1, r5
 80158a8:	1c4d      	adds	r5, r1, #1
 80158aa:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80158ae:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80158b2:	b2d2      	uxtb	r2, r2
 80158b4:	122d      	asrs	r5, r5, #8
 80158b6:	ea6f 0b05 	mvn.w	fp, r5
 80158ba:	b2ad      	uxth	r5, r5
 80158bc:	fb11 f105 	smulbb	r1, r1, r5
 80158c0:	fa5f fb8b 	uxtb.w	fp, fp
 80158c4:	fb16 f605 	smulbb	r6, r6, r5
 80158c8:	fb12 f205 	smulbb	r2, r2, r5
 80158cc:	b289      	uxth	r1, r1
 80158ce:	b2b6      	uxth	r6, r6
 80158d0:	b292      	uxth	r2, r2
 80158d2:	9106      	str	r1, [sp, #24]
 80158d4:	9607      	str	r6, [sp, #28]
 80158d6:	9208      	str	r2, [sp, #32]
 80158d8:	4586      	cmp	lr, r0
 80158da:	d030      	beq.n	801593e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80158dc:	8802      	ldrh	r2, [r0, #0]
 80158de:	9906      	ldr	r1, [sp, #24]
 80158e0:	1216      	asrs	r6, r2, #8
 80158e2:	10d5      	asrs	r5, r2, #3
 80158e4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80158e8:	00d2      	lsls	r2, r2, #3
 80158ea:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80158ee:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80158f2:	b2d2      	uxtb	r2, r2
 80158f4:	fb06 160b 	mla	r6, r6, fp, r1
 80158f8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80158fc:	9907      	ldr	r1, [sp, #28]
 80158fe:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8015902:	b2b6      	uxth	r6, r6
 8015904:	fb05 150b 	mla	r5, r5, fp, r1
 8015908:	9908      	ldr	r1, [sp, #32]
 801590a:	fb02 120b 	mla	r2, r2, fp, r1
 801590e:	1c71      	adds	r1, r6, #1
 8015910:	b2ad      	uxth	r5, r5
 8015912:	b292      	uxth	r2, r2
 8015914:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8015918:	1c51      	adds	r1, r2, #1
 801591a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801591e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015922:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015926:	4316      	orrs	r6, r2
 8015928:	1c6a      	adds	r2, r5, #1
 801592a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801592e:	096d      	lsrs	r5, r5, #5
 8015930:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015934:	432e      	orrs	r6, r5
 8015936:	f820 6b02 	strh.w	r6, [r0], #2
 801593a:	e7cd      	b.n	80158d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801593c:	4470      	add	r0, lr
 801593e:	4543      	cmp	r3, r8
 8015940:	f4ff af73 	bcc.w	801582a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8015944:	fa1f fc89 	uxth.w	ip, r9
 8015948:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801594c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801594e:	eba4 040c 	sub.w	r4, r4, ip
 8015952:	881b      	ldrh	r3, [r3, #0]
 8015954:	b2a4      	uxth	r4, r4
 8015956:	eba3 0309 	sub.w	r3, r3, r9
 801595a:	2c00      	cmp	r4, #0
 801595c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015960:	bf18      	it	ne
 8015962:	f04f 0c00 	movne.w	ip, #0
 8015966:	e760      	b.n	801582a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8015968:	4b03      	ldr	r3, [pc, #12]	@ (8015978 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801596a:	6818      	ldr	r0, [r3, #0]
 801596c:	6803      	ldr	r3, [r0, #0]
 801596e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015970:	4798      	blx	r3
 8015972:	b00f      	add	sp, #60	@ 0x3c
 8015974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015978:	20016a00 	.word	0x20016a00
 801597c:	200169fa 	.word	0x200169fa

08015980 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8015980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015984:	b093      	sub	sp, #76	@ 0x4c
 8015986:	461c      	mov	r4, r3
 8015988:	9205      	str	r2, [sp, #20]
 801598a:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801598e:	9101      	str	r1, [sp, #4]
 8015990:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8015992:	9202      	str	r2, [sp, #8]
 8015994:	2a00      	cmp	r2, #0
 8015996:	f000 812e 	beq.w	8015bf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801599a:	6820      	ldr	r0, [r4, #0]
 801599c:	aa0e      	add	r2, sp, #56	@ 0x38
 801599e:	6861      	ldr	r1, [r4, #4]
 80159a0:	c203      	stmia	r2!, {r0, r1}
 80159a2:	6818      	ldr	r0, [r3, #0]
 80159a4:	aa10      	add	r2, sp, #64	@ 0x40
 80159a6:	6859      	ldr	r1, [r3, #4]
 80159a8:	c203      	stmia	r2!, {r0, r1}
 80159aa:	a80e      	add	r0, sp, #56	@ 0x38
 80159ac:	f7f9 fa24 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80159b0:	4621      	mov	r1, r4
 80159b2:	a810      	add	r0, sp, #64	@ 0x40
 80159b4:	f7f9 fa48 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80159b8:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80159bc:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80159c0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80159c4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 80159c8:	bfdb      	ittet	le
 80159ca:	b2b3      	uxthle	r3, r6
 80159cc:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80159d0:	2301      	movgt	r3, #1
 80159d2:	fb92 f3f3 	sdivle	r3, r2, r3
 80159d6:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80159da:	441d      	add	r5, r3
 80159dc:	fb92 f1f3 	sdiv	r1, r2, r3
 80159e0:	fa1f fc81 	uxth.w	ip, r1
 80159e4:	3d01      	subs	r5, #1
 80159e6:	fb0c 2413 	mls	r4, ip, r3, r2
 80159ea:	4661      	mov	r1, ip
 80159ec:	fb14 f406 	smulbb	r4, r4, r6
 80159f0:	4404      	add	r4, r0
 80159f2:	fb95 f5f3 	sdiv	r5, r5, r3
 80159f6:	b2a4      	uxth	r4, r4
 80159f8:	b131      	cbz	r1, 8015a08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 80159fa:	9b05      	ldr	r3, [sp, #20]
 80159fc:	9901      	ldr	r1, [sp, #4]
 80159fe:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015a02:	ba1b      	rev	r3, r3
 8015a04:	4419      	add	r1, r3
 8015a06:	9101      	str	r1, [sp, #4]
 8015a08:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8015a0c:	b2ad      	uxth	r5, r5
 8015a0e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8015a12:	4418      	add	r0, r3
 8015a14:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8015a18:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8015a1c:	00ad      	lsls	r5, r5, #2
 8015a1e:	441a      	add	r2, r3
 8015a20:	4b76      	ldr	r3, [pc, #472]	@ (8015bfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8015a22:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8015a26:	6818      	ldr	r0, [r3, #0]
 8015a28:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8015a2c:	6803      	ldr	r3, [r0, #0]
 8015a2e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015a30:	4798      	blx	r3
 8015a32:	4973      	ldr	r1, [pc, #460]	@ (8015c00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8015a34:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8015a38:	2c00      	cmp	r4, #0
 8015a3a:	880b      	ldrh	r3, [r1, #0]
 8015a3c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8015a40:	910d      	str	r1, [sp, #52]	@ 0x34
 8015a42:	fb03 c202 	mla	r2, r3, r2, ip
 8015a46:	bf08      	it	eq
 8015a48:	46dc      	moveq	ip, fp
 8015a4a:	fb03 f306 	mul.w	r3, r3, r6
 8015a4e:	bf18      	it	ne
 8015a50:	f04f 0c00 	movne.w	ip, #0
 8015a54:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015a58:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015a5c:	fa1f fc8c 	uxth.w	ip, ip
 8015a60:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015a64:	9106      	str	r1, [sp, #24]
 8015a66:	9308      	str	r3, [sp, #32]
 8015a68:	1d2b      	adds	r3, r5, #4
 8015a6a:	9309      	str	r3, [sp, #36]	@ 0x24
 8015a6c:	9b02      	ldr	r3, [sp, #8]
 8015a6e:	43da      	mvns	r2, r3
 8015a70:	2300      	movs	r3, #0
 8015a72:	b2d2      	uxtb	r2, r2
 8015a74:	9303      	str	r3, [sp, #12]
 8015a76:	9207      	str	r2, [sp, #28]
 8015a78:	9a08      	ldr	r2, [sp, #32]
 8015a7a:	4282      	cmp	r2, r0
 8015a7c:	f240 80b6 	bls.w	8015bec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 8015a80:	b963      	cbnz	r3, 8015a9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 8015a82:	9b01      	ldr	r3, [sp, #4]
 8015a84:	781a      	ldrb	r2, [r3, #0]
 8015a86:	0993      	lsrs	r3, r2, #6
 8015a88:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8015a8c:	9203      	str	r2, [sp, #12]
 8015a8e:	1e5a      	subs	r2, r3, #1
 8015a90:	2a02      	cmp	r2, #2
 8015a92:	d815      	bhi.n	8015ac0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 8015a94:	9a01      	ldr	r2, [sp, #4]
 8015a96:	b29b      	uxth	r3, r3
 8015a98:	3201      	adds	r2, #1
 8015a9a:	9201      	str	r2, [sp, #4]
 8015a9c:	b1b4      	cbz	r4, 8015acc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 8015a9e:	429c      	cmp	r4, r3
 8015aa0:	bf91      	iteee	ls
 8015aa2:	1b1c      	subls	r4, r3, r4
 8015aa4:	1ae4      	subhi	r4, r4, r3
 8015aa6:	4666      	movhi	r6, ip
 8015aa8:	f04f 0800 	movhi.w	r8, #0
 8015aac:	bf9b      	ittet	ls
 8015aae:	fa1f f884 	uxthls.w	r8, r4
 8015ab2:	2400      	movls	r4, #0
 8015ab4:	b2a4      	uxthhi	r4, r4
 8015ab6:	fa1f f68b 	uxthls.w	r6, fp
 8015aba:	4643      	mov	r3, r8
 8015abc:	46b4      	mov	ip, r6
 8015abe:	e7db      	b.n	8015a78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 8015ac0:	9a01      	ldr	r2, [sp, #4]
 8015ac2:	9b01      	ldr	r3, [sp, #4]
 8015ac4:	3202      	adds	r2, #2
 8015ac6:	785b      	ldrb	r3, [r3, #1]
 8015ac8:	9201      	str	r2, [sp, #4]
 8015aca:	e7e7      	b.n	8015a9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 8015acc:	2203      	movs	r2, #3
 8015ace:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015ad0:	4563      	cmp	r3, ip
 8015ad2:	4615      	mov	r5, r2
 8015ad4:	9a03      	ldr	r2, [sp, #12]
 8015ad6:	bf2c      	ite	cs
 8015ad8:	eba3 080c 	subcs.w	r8, r3, ip
 8015adc:	ebac 0603 	subcc.w	r6, ip, r3
 8015ae0:	fb15 1202 	smlabb	r2, r5, r2, r1
 8015ae4:	9905      	ldr	r1, [sp, #20]
 8015ae6:	bf24      	itt	cs
 8015ae8:	fa1f f888 	uxthcs.w	r8, r8
 8015aec:	46e1      	movcs	r9, ip
 8015aee:	eb01 0502 	add.w	r5, r1, r2
 8015af2:	9902      	ldr	r1, [sp, #8]
 8015af4:	bf2f      	iteee	cs
 8015af6:	4626      	movcs	r6, r4
 8015af8:	b2b6      	uxthcc	r6, r6
 8015afa:	4699      	movcc	r9, r3
 8015afc:	46a0      	movcc	r8, r4
 8015afe:	29ff      	cmp	r1, #255	@ 0xff
 8015b00:	d04a      	beq.n	8015b98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8015b02:	9f06      	ldr	r7, [sp, #24]
 8015b04:	46ca      	mov	sl, r9
 8015b06:	78a9      	ldrb	r1, [r5, #2]
 8015b08:	9004      	str	r0, [sp, #16]
 8015b0a:	4379      	muls	r1, r7
 8015b0c:	910a      	str	r1, [sp, #40]	@ 0x28
 8015b0e:	7869      	ldrb	r1, [r5, #1]
 8015b10:	4379      	muls	r1, r7
 8015b12:	910b      	str	r1, [sp, #44]	@ 0x2c
 8015b14:	9905      	ldr	r1, [sp, #20]
 8015b16:	5c8a      	ldrb	r2, [r1, r2]
 8015b18:	437a      	muls	r2, r7
 8015b1a:	920c      	str	r2, [sp, #48]	@ 0x30
 8015b1c:	f1ba 0f00 	cmp.w	sl, #0
 8015b20:	d03d      	beq.n	8015b9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8015b22:	9a04      	ldr	r2, [sp, #16]
 8015b24:	f10a 3aff 	add.w	sl, sl, #4294967295
 8015b28:	9f07      	ldr	r7, [sp, #28]
 8015b2a:	8812      	ldrh	r2, [r2, #0]
 8015b2c:	fa1f fa8a 	uxth.w	sl, sl
 8015b30:	46be      	mov	lr, r7
 8015b32:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8015b34:	1215      	asrs	r5, r2, #8
 8015b36:	10d1      	asrs	r1, r2, #3
 8015b38:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8015b3c:	00d2      	lsls	r2, r2, #3
 8015b3e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8015b42:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8015b46:	b2d2      	uxtb	r2, r2
 8015b48:	fb05 750e 	mla	r5, r5, lr, r7
 8015b4c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8015b50:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8015b52:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8015b56:	b2ad      	uxth	r5, r5
 8015b58:	fb01 710e 	mla	r1, r1, lr, r7
 8015b5c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8015b5e:	fb02 720e 	mla	r2, r2, lr, r7
 8015b62:	f105 0e01 	add.w	lr, r5, #1
 8015b66:	b289      	uxth	r1, r1
 8015b68:	b292      	uxth	r2, r2
 8015b6a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8015b6e:	f102 0e01 	add.w	lr, r2, #1
 8015b72:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8015b76:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8015b7a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015b7e:	4315      	orrs	r5, r2
 8015b80:	1c4a      	adds	r2, r1, #1
 8015b82:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8015b86:	9a04      	ldr	r2, [sp, #16]
 8015b88:	0949      	lsrs	r1, r1, #5
 8015b8a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8015b8e:	430d      	orrs	r5, r1
 8015b90:	f822 5b02 	strh.w	r5, [r2], #2
 8015b94:	9204      	str	r2, [sp, #16]
 8015b96:	e7c1      	b.n	8015b1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 8015b98:	4649      	mov	r1, r9
 8015b9a:	4686      	mov	lr, r0
 8015b9c:	b999      	cbnz	r1, 8015bc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 8015b9e:	4563      	cmp	r3, ip
 8015ba0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8015ba4:	d389      	bcc.n	8015aba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8015ba6:	fa1f f68b 	uxth.w	r6, fp
 8015baa:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8015bae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015bb0:	1ba4      	subs	r4, r4, r6
 8015bb2:	881b      	ldrh	r3, [r3, #0]
 8015bb4:	b2a4      	uxth	r4, r4
 8015bb6:	eba3 030b 	sub.w	r3, r3, fp
 8015bba:	2c00      	cmp	r4, #0
 8015bbc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015bc0:	bf18      	it	ne
 8015bc2:	2600      	movne	r6, #0
 8015bc4:	e779      	b.n	8015aba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8015bc6:	78aa      	ldrb	r2, [r5, #2]
 8015bc8:	3901      	subs	r1, #1
 8015bca:	4f0e      	ldr	r7, [pc, #56]	@ (8015c04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 8015bcc:	b289      	uxth	r1, r1
 8015bce:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8015bd2:	786a      	ldrb	r2, [r5, #1]
 8015bd4:	00d2      	lsls	r2, r2, #3
 8015bd6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015bda:	ea4a 0202 	orr.w	r2, sl, r2
 8015bde:	f895 a000 	ldrb.w	sl, [r5]
 8015be2:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8015be6:	f82e 2b02 	strh.w	r2, [lr], #2
 8015bea:	e7d7      	b.n	8015b9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 8015bec:	4b03      	ldr	r3, [pc, #12]	@ (8015bfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8015bee:	6818      	ldr	r0, [r3, #0]
 8015bf0:	6803      	ldr	r3, [r0, #0]
 8015bf2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015bf4:	4798      	blx	r3
 8015bf6:	b013      	add	sp, #76	@ 0x4c
 8015bf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015bfc:	20016a00 	.word	0x20016a00
 8015c00:	200169fa 	.word	0x200169fa
 8015c04:	fffff800 	.word	0xfffff800

08015c08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8015c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c0c:	b09d      	sub	sp, #116	@ 0x74
 8015c0e:	461c      	mov	r4, r3
 8015c10:	4683      	mov	fp, r0
 8015c12:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8015c14:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8015c18:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8015c1c:	920e      	str	r2, [sp, #56]	@ 0x38
 8015c1e:	2a00      	cmp	r2, #0
 8015c20:	f000 81e4 	beq.w	8015fec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 8015c24:	6820      	ldr	r0, [r4, #0]
 8015c26:	aa18      	add	r2, sp, #96	@ 0x60
 8015c28:	6861      	ldr	r1, [r4, #4]
 8015c2a:	c203      	stmia	r2!, {r0, r1}
 8015c2c:	6818      	ldr	r0, [r3, #0]
 8015c2e:	aa1a      	add	r2, sp, #104	@ 0x68
 8015c30:	6859      	ldr	r1, [r3, #4]
 8015c32:	c203      	stmia	r2!, {r0, r1}
 8015c34:	a818      	add	r0, sp, #96	@ 0x60
 8015c36:	f7f9 f8df 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015c3a:	4621      	mov	r1, r4
 8015c3c:	a81a      	add	r0, sp, #104	@ 0x68
 8015c3e:	f7f9 f903 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015c42:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8015c46:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8015c4a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8015c4e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8015c52:	bfdb      	ittet	le
 8015c54:	b29a      	uxthle	r2, r3
 8015c56:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8015c5a:	2201      	movgt	r2, #1
 8015c5c:	fb91 f2f2 	sdivle	r2, r1, r2
 8015c60:	9202      	str	r2, [sp, #8]
 8015c62:	9802      	ldr	r0, [sp, #8]
 8015c64:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8015c68:	9902      	ldr	r1, [sp, #8]
 8015c6a:	fb92 f0f0 	sdiv	r0, r2, r0
 8015c6e:	b280      	uxth	r0, r0
 8015c70:	440c      	add	r4, r1
 8015c72:	900f      	str	r0, [sp, #60]	@ 0x3c
 8015c74:	3c01      	subs	r4, #1
 8015c76:	9802      	ldr	r0, [sp, #8]
 8015c78:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8015c7a:	fb05 2510 	mls	r5, r5, r0, r2
 8015c7e:	fb94 f4f1 	sdiv	r4, r4, r1
 8015c82:	fb15 f503 	smulbb	r5, r5, r3
 8015c86:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8015c8a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8015c8e:	3401      	adds	r4, #1
 8015c90:	440d      	add	r5, r1
 8015c92:	4419      	add	r1, r3
 8015c94:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8015c98:	b2a4      	uxth	r4, r4
 8015c9a:	441a      	add	r2, r3
 8015c9c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8015ca0:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8015ca4:	00a4      	lsls	r4, r4, #2
 8015ca6:	9306      	str	r3, [sp, #24]
 8015ca8:	b2ad      	uxth	r5, r5
 8015caa:	4bb3      	ldr	r3, [pc, #716]	@ (8015f78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8015cac:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8015cb0:	6818      	ldr	r0, [r3, #0]
 8015cb2:	6803      	ldr	r3, [r0, #0]
 8015cb4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015cb6:	4798      	blx	r3
 8015cb8:	4bb0      	ldr	r3, [pc, #704]	@ (8015f7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 8015cba:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8015cbe:	2d00      	cmp	r5, #0
 8015cc0:	881a      	ldrh	r2, [r3, #0]
 8015cc2:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8015cc6:	fb02 f606 	mul.w	r6, r2, r6
 8015cca:	fb02 7101 	mla	r1, r2, r1, r7
 8015cce:	9316      	str	r3, [sp, #88]	@ 0x58
 8015cd0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8015cd4:	4baa      	ldr	r3, [pc, #680]	@ (8015f80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 8015cd6:	bf18      	it	ne
 8015cd8:	2100      	movne	r1, #0
 8015cda:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8015cde:	eba3 030b 	sub.w	r3, r3, fp
 8015ce2:	920a      	str	r2, [sp, #40]	@ 0x28
 8015ce4:	f104 0204 	add.w	r2, r4, #4
 8015ce8:	9317      	str	r3, [sp, #92]	@ 0x5c
 8015cea:	9213      	str	r2, [sp, #76]	@ 0x4c
 8015cec:	9a06      	ldr	r2, [sp, #24]
 8015cee:	bf08      	it	eq
 8015cf0:	4611      	moveq	r1, r2
 8015cf2:	2200      	movs	r2, #0
 8015cf4:	b289      	uxth	r1, r1
 8015cf6:	920d      	str	r2, [sp, #52]	@ 0x34
 8015cf8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015cfa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015cfc:	fa12 f383 	uxtah	r3, r2, r3
 8015d00:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015d02:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8015d06:	3304      	adds	r3, #4
 8015d08:	9308      	str	r3, [sp, #32]
 8015d0a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015d0c:	4543      	cmp	r3, r8
 8015d0e:	f240 8168 	bls.w	8015fe2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 8015d12:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8015d16:	f04f 0e01 	mov.w	lr, #1
 8015d1a:	9a02      	ldr	r2, [sp, #8]
 8015d1c:	9808      	ldr	r0, [sp, #32]
 8015d1e:	fbb5 f3f3 	udiv	r3, r5, r3
 8015d22:	1ad3      	subs	r3, r2, r3
 8015d24:	7800      	ldrb	r0, [r0, #0]
 8015d26:	b29b      	uxth	r3, r3
 8015d28:	9010      	str	r0, [sp, #64]	@ 0x40
 8015d2a:	3001      	adds	r0, #1
 8015d2c:	9314      	str	r3, [sp, #80]	@ 0x50
 8015d2e:	9b08      	ldr	r3, [sp, #32]
 8015d30:	9007      	str	r0, [sp, #28]
 8015d32:	785a      	ldrb	r2, [r3, #1]
 8015d34:	789b      	ldrb	r3, [r3, #2]
 8015d36:	021b      	lsls	r3, r3, #8
 8015d38:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8015d3c:	9a08      	ldr	r2, [sp, #32]
 8015d3e:	78d2      	ldrb	r2, [r2, #3]
 8015d40:	4313      	orrs	r3, r2
 8015d42:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015d44:	441a      	add	r2, r3
 8015d46:	1c50      	adds	r0, r2, #1
 8015d48:	7852      	ldrb	r2, [r2, #1]
 8015d4a:	9005      	str	r0, [sp, #20]
 8015d4c:	0212      	lsls	r2, r2, #8
 8015d4e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015d50:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8015d54:	5cc3      	ldrb	r3, [r0, r3]
 8015d56:	431a      	orrs	r2, r3
 8015d58:	b293      	uxth	r3, r2
 8015d5a:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8015d5e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8015d60:	2300      	movs	r3, #0
 8015d62:	9309      	str	r3, [sp, #36]	@ 0x24
 8015d64:	2301      	movs	r3, #1
 8015d66:	9301      	str	r3, [sp, #4]
 8015d68:	9304      	str	r3, [sp, #16]
 8015d6a:	2300      	movs	r3, #0
 8015d6c:	9303      	str	r3, [sp, #12]
 8015d6e:	2d00      	cmp	r5, #0
 8015d70:	d07d      	beq.n	8015e6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 8015d72:	45ae      	cmp	lr, r5
 8015d74:	d26c      	bcs.n	8015e50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 8015d76:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015d78:	eba5 050e 	sub.w	r5, r5, lr
 8015d7c:	460c      	mov	r4, r1
 8015d7e:	4543      	cmp	r3, r8
 8015d80:	b2ad      	uxth	r5, r5
 8015d82:	d802      	bhi.n	8015d8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 8015d84:	e071      	b.n	8015e6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 8015d86:	2b00      	cmp	r3, #0
 8015d88:	d15d      	bne.n	8015e46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 8015d8a:	9b05      	ldr	r3, [sp, #20]
 8015d8c:	9a04      	ldr	r2, [sp, #16]
 8015d8e:	785b      	ldrb	r3, [r3, #1]
 8015d90:	f1c2 0207 	rsb	r2, r2, #7
 8015d94:	9904      	ldr	r1, [sp, #16]
 8015d96:	4093      	lsls	r3, r2
 8015d98:	005b      	lsls	r3, r3, #1
 8015d9a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8015d9e:	9b05      	ldr	r3, [sp, #20]
 8015da0:	781b      	ldrb	r3, [r3, #0]
 8015da2:	410b      	asrs	r3, r1
 8015da4:	3101      	adds	r1, #1
 8015da6:	b2c9      	uxtb	r1, r1
 8015da8:	b2db      	uxtb	r3, r3
 8015daa:	2908      	cmp	r1, #8
 8015dac:	9104      	str	r1, [sp, #16]
 8015dae:	9905      	ldr	r1, [sp, #20]
 8015db0:	ea43 0302 	orr.w	r3, r3, r2
 8015db4:	bf0c      	ite	eq
 8015db6:	3102      	addeq	r1, #2
 8015db8:	3101      	addne	r1, #1
 8015dba:	b29a      	uxth	r2, r3
 8015dbc:	bf05      	ittet	eq
 8015dbe:	9105      	streq	r1, [sp, #20]
 8015dc0:	2100      	moveq	r1, #0
 8015dc2:	9105      	strne	r1, [sp, #20]
 8015dc4:	9104      	streq	r1, [sp, #16]
 8015dc6:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8015dc8:	4291      	cmp	r1, r2
 8015dca:	d30a      	bcc.n	8015de2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 8015dcc:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8015dd0:	2301      	movs	r3, #1
 8015dd2:	9907      	ldr	r1, [sp, #28]
 8015dd4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8015dd8:	d30f      	bcc.n	8015dfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8015dda:	2100      	movs	r1, #0
 8015ddc:	9301      	str	r3, [sp, #4]
 8015dde:	9103      	str	r1, [sp, #12]
 8015de0:	e032      	b.n	8015e48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8015de2:	9b07      	ldr	r3, [sp, #28]
 8015de4:	429a      	cmp	r2, r3
 8015de6:	d318      	bcc.n	8015e1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 8015de8:	9b01      	ldr	r3, [sp, #4]
 8015dea:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8015dee:	445b      	add	r3, fp
 8015df0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8015df4:	9b01      	ldr	r3, [sp, #4]
 8015df6:	3301      	adds	r3, #1
 8015df8:	b29b      	uxth	r3, r3
 8015dfa:	9907      	ldr	r1, [sp, #28]
 8015dfc:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8015e00:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8015e04:	7108      	strb	r0, [r1, #4]
 8015e06:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8015e08:	80c8      	strh	r0, [r1, #6]
 8015e0a:	9801      	ldr	r0, [sp, #4]
 8015e0c:	3001      	adds	r0, #1
 8015e0e:	7148      	strb	r0, [r1, #5]
 8015e10:	9907      	ldr	r1, [sp, #28]
 8015e12:	3101      	adds	r1, #1
 8015e14:	b289      	uxth	r1, r1
 8015e16:	9107      	str	r1, [sp, #28]
 8015e18:	e7df      	b.n	8015dda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8015e1a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8015e1e:	4611      	mov	r1, r2
 8015e20:	795b      	ldrb	r3, [r3, #5]
 8015e22:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8015e26:	4458      	add	r0, fp
 8015e28:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8015e2a:	4406      	add	r6, r0
 8015e2c:	2e00      	cmp	r6, #0
 8015e2e:	dd06      	ble.n	8015e3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8015e30:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8015e34:	790e      	ldrb	r6, [r1, #4]
 8015e36:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8015e3a:	88c9      	ldrh	r1, [r1, #6]
 8015e3c:	e7f4      	b.n	8015e28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 8015e3e:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8015e42:	b29b      	uxth	r3, r3
 8015e44:	e7c5      	b.n	8015dd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8015e46:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015e48:	4621      	mov	r1, r4
 8015e4a:	920b      	str	r2, [sp, #44]	@ 0x2c
 8015e4c:	469e      	mov	lr, r3
 8015e4e:	e78e      	b.n	8015d6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 8015e50:	9a03      	ldr	r2, [sp, #12]
 8015e52:	ebae 0305 	sub.w	r3, lr, r5
 8015e56:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8015e5a:	442a      	add	r2, r5
 8015e5c:	b29b      	uxth	r3, r3
 8015e5e:	b292      	uxth	r2, r2
 8015e60:	9203      	str	r2, [sp, #12]
 8015e62:	2500      	movs	r5, #0
 8015e64:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8015e66:	4542      	cmp	r2, r8
 8015e68:	d88d      	bhi.n	8015d86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 8015e6a:	4621      	mov	r1, r4
 8015e6c:	e74d      	b.n	8015d0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 8015e6e:	458e      	cmp	lr, r1
 8015e70:	f04f 0900 	mov.w	r9, #0
 8015e74:	bf2b      	itete	cs
 8015e76:	ebae 0301 	subcs.w	r3, lr, r1
 8015e7a:	eba1 040e 	subcc.w	r4, r1, lr
 8015e7e:	462c      	movcs	r4, r5
 8015e80:	462b      	movcc	r3, r5
 8015e82:	bf27      	ittee	cs
 8015e84:	b29b      	uxthcs	r3, r3
 8015e86:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8015e88:	b2a4      	uxthcc	r4, r4
 8015e8a:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8015e8e:	9a03      	ldr	r2, [sp, #12]
 8015e90:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8015e92:	444a      	add	r2, r9
 8015e94:	4548      	cmp	r0, r9
 8015e96:	b292      	uxth	r2, r2
 8015e98:	d074      	beq.n	8015f84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 8015e9a:	2004      	movs	r0, #4
 8015e9c:	445a      	add	r2, fp
 8015e9e:	4605      	mov	r5, r0
 8015ea0:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8015ea4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015ea6:	fb15 0202 	smlabb	r2, r5, r2, r0
 8015eaa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015eac:	5880      	ldr	r0, [r0, r2]
 8015eae:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8015eb2:	d014      	beq.n	8015ede <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8015eb4:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8015eb8:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8015ebc:	d112      	bne.n	8015ee4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8015ebe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015ec0:	2aff      	cmp	r2, #255	@ 0xff
 8015ec2:	d10f      	bne.n	8015ee4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8015ec4:	0942      	lsrs	r2, r0, #5
 8015ec6:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8015eca:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015ece:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015ed2:	f025 0507 	bic.w	r5, r5, #7
 8015ed6:	4315      	orrs	r5, r2
 8015ed8:	4305      	orrs	r5, r0
 8015eda:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8015ede:	f109 0901 	add.w	r9, r9, #1
 8015ee2:	e7d4      	b.n	8015e8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8015ee4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8015ee8:	b2ed      	uxtb	r5, r5
 8015eea:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015eee:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015ef2:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8015ef6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015efa:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8015efe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015f02:	9215      	str	r2, [sp, #84]	@ 0x54
 8015f04:	fa5f fc8c 	uxtb.w	ip, ip
 8015f08:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015f0a:	b2c0      	uxtb	r0, r0
 8015f0c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8015f10:	fb02 fa0a 	mul.w	sl, r2, sl
 8015f14:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8015f18:	f10a 0201 	add.w	r2, sl, #1
 8015f1c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8015f20:	1212      	asrs	r2, r2, #8
 8015f22:	fa1f fa82 	uxth.w	sl, r2
 8015f26:	43d2      	mvns	r2, r2
 8015f28:	fb16 f60a 	smulbb	r6, r6, sl
 8015f2c:	b2d2      	uxtb	r2, r2
 8015f2e:	fb10 f00a 	smulbb	r0, r0, sl
 8015f32:	fb07 6702 	mla	r7, r7, r2, r6
 8015f36:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8015f38:	fb0c 0002 	mla	r0, ip, r2, r0
 8015f3c:	fb15 f50a 	smulbb	r5, r5, sl
 8015f40:	b2bf      	uxth	r7, r7
 8015f42:	b280      	uxth	r0, r0
 8015f44:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8015f48:	fb06 5602 	mla	r6, r6, r2, r5
 8015f4c:	1c7a      	adds	r2, r7, #1
 8015f4e:	1c45      	adds	r5, r0, #1
 8015f50:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015f54:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015f58:	b2b6      	uxth	r6, r6
 8015f5a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015f5e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015f62:	432f      	orrs	r7, r5
 8015f64:	1c75      	adds	r5, r6, #1
 8015f66:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8015f6a:	096d      	lsrs	r5, r5, #5
 8015f6c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015f70:	432f      	orrs	r7, r5
 8015f72:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8015f76:	e7b2      	b.n	8015ede <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8015f78:	20016a00 	.word	0x20016a00
 8015f7c:	200169fa 	.word	0x200169fa
 8015f80:	fffff7fb 	.word	0xfffff7fb
 8015f84:	9203      	str	r2, [sp, #12]
 8015f86:	458e      	cmp	lr, r1
 8015f88:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8015f8a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8015f8e:	f4ff af68 	bcc.w	8015e62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8015f92:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8015f94:	9906      	ldr	r1, [sp, #24]
 8015f96:	8812      	ldrh	r2, [r2, #0]
 8015f98:	1a52      	subs	r2, r2, r1
 8015f9a:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8015f9c:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8015fa0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015fa2:	3201      	adds	r2, #1
 8015fa4:	428a      	cmp	r2, r1
 8015fa6:	9209      	str	r2, [sp, #36]	@ 0x24
 8015fa8:	d111      	bne.n	8015fce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 8015faa:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8015fae:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8015fb2:	9b06      	ldr	r3, [sp, #24]
 8015fb4:	eba5 0509 	sub.w	r5, r5, r9
 8015fb8:	b2ad      	uxth	r5, r5
 8015fba:	2d00      	cmp	r5, #0
 8015fbc:	bf08      	it	eq
 8015fbe:	4619      	moveq	r1, r3
 8015fc0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015fc2:	bf18      	it	ne
 8015fc4:	2100      	movne	r1, #0
 8015fc6:	3301      	adds	r3, #1
 8015fc8:	b289      	uxth	r1, r1
 8015fca:	930d      	str	r3, [sp, #52]	@ 0x34
 8015fcc:	e694      	b.n	8015cf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 8015fce:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8015fd2:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8015fd6:	1b2d      	subs	r5, r5, r4
 8015fd8:	b2ad      	uxth	r5, r5
 8015fda:	2d00      	cmp	r5, #0
 8015fdc:	bf18      	it	ne
 8015fde:	2400      	movne	r4, #0
 8015fe0:	e740      	b.n	8015e64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8015fe2:	4b04      	ldr	r3, [pc, #16]	@ (8015ff4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8015fe4:	6818      	ldr	r0, [r3, #0]
 8015fe6:	6803      	ldr	r3, [r0, #0]
 8015fe8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015fea:	4798      	blx	r3
 8015fec:	b01d      	add	sp, #116	@ 0x74
 8015fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ff2:	bf00      	nop
 8015ff4:	20016a00 	.word	0x20016a00

08015ff8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8015ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ffc:	b09f      	sub	sp, #124	@ 0x7c
 8015ffe:	461d      	mov	r5, r3
 8016000:	4604      	mov	r4, r0
 8016002:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8016004:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8016008:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801600c:	920a      	str	r2, [sp, #40]	@ 0x28
 801600e:	2a00      	cmp	r2, #0
 8016010:	f000 81fe 	beq.w	8016410 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8016014:	6828      	ldr	r0, [r5, #0]
 8016016:	aa1a      	add	r2, sp, #104	@ 0x68
 8016018:	6869      	ldr	r1, [r5, #4]
 801601a:	c203      	stmia	r2!, {r0, r1}
 801601c:	6818      	ldr	r0, [r3, #0]
 801601e:	aa1c      	add	r2, sp, #112	@ 0x70
 8016020:	6859      	ldr	r1, [r3, #4]
 8016022:	c203      	stmia	r2!, {r0, r1}
 8016024:	a81a      	add	r0, sp, #104	@ 0x68
 8016026:	f7f8 fee7 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801602a:	4629      	mov	r1, r5
 801602c:	a81c      	add	r0, sp, #112	@ 0x70
 801602e:	f7f8 ff0b 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016032:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016036:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801603a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801603e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8016042:	bfdb      	ittet	le
 8016044:	b29a      	uxthle	r2, r3
 8016046:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801604a:	2201      	movgt	r2, #1
 801604c:	fb91 f2f2 	sdivle	r2, r1, r2
 8016050:	9201      	str	r2, [sp, #4]
 8016052:	9801      	ldr	r0, [sp, #4]
 8016054:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8016058:	9901      	ldr	r1, [sp, #4]
 801605a:	fb92 f0f0 	sdiv	r0, r2, r0
 801605e:	b280      	uxth	r0, r0
 8016060:	440e      	add	r6, r1
 8016062:	9010      	str	r0, [sp, #64]	@ 0x40
 8016064:	3e01      	subs	r6, #1
 8016066:	9801      	ldr	r0, [sp, #4]
 8016068:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801606a:	fb05 2510 	mls	r5, r5, r0, r2
 801606e:	fb96 f6f1 	sdiv	r6, r6, r1
 8016072:	fb15 f503 	smulbb	r5, r5, r3
 8016076:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801607a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801607e:	3601      	adds	r6, #1
 8016080:	440d      	add	r5, r1
 8016082:	4419      	add	r1, r3
 8016084:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8016088:	b2b6      	uxth	r6, r6
 801608a:	441a      	add	r2, r3
 801608c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8016090:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8016094:	b2ad      	uxth	r5, r5
 8016096:	9304      	str	r3, [sp, #16]
 8016098:	4b96      	ldr	r3, [pc, #600]	@ (80162f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801609a:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801609e:	6818      	ldr	r0, [r3, #0]
 80160a0:	6803      	ldr	r3, [r0, #0]
 80160a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80160a4:	4798      	blx	r3
 80160a6:	4b94      	ldr	r3, [pc, #592]	@ (80162f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 80160a8:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 80160ac:	2d00      	cmp	r5, #0
 80160ae:	881a      	ldrh	r2, [r3, #0]
 80160b0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 80160b4:	fb02 f707 	mul.w	r7, r2, r7
 80160b8:	fb02 c101 	mla	r1, r2, r1, ip
 80160bc:	9318      	str	r3, [sp, #96]	@ 0x60
 80160be:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 80160c2:	4b8e      	ldr	r3, [pc, #568]	@ (80162fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 80160c4:	bf18      	it	ne
 80160c6:	2100      	movne	r1, #0
 80160c8:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 80160cc:	eba3 0304 	sub.w	r3, r3, r4
 80160d0:	920b      	str	r2, [sp, #44]	@ 0x2c
 80160d2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80160d4:	9319      	str	r3, [sp, #100]	@ 0x64
 80160d6:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80160da:	f106 0204 	add.w	r2, r6, #4
 80160de:	9206      	str	r2, [sp, #24]
 80160e0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80160e2:	ea6f 0202 	mvn.w	r2, r2
 80160e6:	b2d2      	uxtb	r2, r2
 80160e8:	9215      	str	r2, [sp, #84]	@ 0x54
 80160ea:	9a04      	ldr	r2, [sp, #16]
 80160ec:	bf08      	it	eq
 80160ee:	4611      	moveq	r1, r2
 80160f0:	2200      	movs	r2, #0
 80160f2:	b289      	uxth	r1, r1
 80160f4:	920d      	str	r2, [sp, #52]	@ 0x34
 80160f6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80160f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80160fa:	fa12 f383 	uxtah	r3, r2, r3
 80160fe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016100:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8016104:	3304      	adds	r3, #4
 8016106:	9307      	str	r3, [sp, #28]
 8016108:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801610a:	455b      	cmp	r3, fp
 801610c:	f240 817b 	bls.w	8016406 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 8016110:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8016114:	f04f 0801 	mov.w	r8, #1
 8016118:	9a01      	ldr	r2, [sp, #4]
 801611a:	9807      	ldr	r0, [sp, #28]
 801611c:	46c4      	mov	ip, r8
 801611e:	f8cd 8008 	str.w	r8, [sp, #8]
 8016122:	7800      	ldrb	r0, [r0, #0]
 8016124:	fbb5 f3f3 	udiv	r3, r5, r3
 8016128:	1ad3      	subs	r3, r2, r3
 801612a:	9011      	str	r0, [sp, #68]	@ 0x44
 801612c:	3001      	adds	r0, #1
 801612e:	b29b      	uxth	r3, r3
 8016130:	9005      	str	r0, [sp, #20]
 8016132:	9316      	str	r3, [sp, #88]	@ 0x58
 8016134:	9b07      	ldr	r3, [sp, #28]
 8016136:	785a      	ldrb	r2, [r3, #1]
 8016138:	789b      	ldrb	r3, [r3, #2]
 801613a:	021b      	lsls	r3, r3, #8
 801613c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8016140:	9a07      	ldr	r2, [sp, #28]
 8016142:	78d2      	ldrb	r2, [r2, #3]
 8016144:	4313      	orrs	r3, r2
 8016146:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016148:	441a      	add	r2, r3
 801614a:	1c50      	adds	r0, r2, #1
 801614c:	7852      	ldrb	r2, [r2, #1]
 801614e:	9003      	str	r0, [sp, #12]
 8016150:	0212      	lsls	r2, r2, #8
 8016152:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016154:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8016158:	5cc3      	ldrb	r3, [r0, r3]
 801615a:	431a      	orrs	r2, r3
 801615c:	b293      	uxth	r3, r2
 801615e:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8016162:	930c      	str	r3, [sp, #48]	@ 0x30
 8016164:	2300      	movs	r3, #0
 8016166:	9308      	str	r3, [sp, #32]
 8016168:	461a      	mov	r2, r3
 801616a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801616e:	930e      	str	r3, [sp, #56]	@ 0x38
 8016170:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8016174:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016176:	2d00      	cmp	r5, #0
 8016178:	d07d      	beq.n	8016276 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 801617a:	45ac      	cmp	ip, r5
 801617c:	d26d      	bcs.n	801625a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 801617e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016180:	eba5 050c 	sub.w	r5, r5, ip
 8016184:	4608      	mov	r0, r1
 8016186:	455b      	cmp	r3, fp
 8016188:	b2ad      	uxth	r5, r5
 801618a:	d802      	bhi.n	8016192 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 801618c:	e071      	b.n	8016272 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 801618e:	2b00      	cmp	r3, #0
 8016190:	d15d      	bne.n	801624e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8016192:	9b03      	ldr	r3, [sp, #12]
 8016194:	9a02      	ldr	r2, [sp, #8]
 8016196:	785b      	ldrb	r3, [r3, #1]
 8016198:	f1c2 0207 	rsb	r2, r2, #7
 801619c:	9902      	ldr	r1, [sp, #8]
 801619e:	4093      	lsls	r3, r2
 80161a0:	005b      	lsls	r3, r3, #1
 80161a2:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80161a6:	9b03      	ldr	r3, [sp, #12]
 80161a8:	781b      	ldrb	r3, [r3, #0]
 80161aa:	410b      	asrs	r3, r1
 80161ac:	3101      	adds	r1, #1
 80161ae:	b2c9      	uxtb	r1, r1
 80161b0:	b2db      	uxtb	r3, r3
 80161b2:	2908      	cmp	r1, #8
 80161b4:	9102      	str	r1, [sp, #8]
 80161b6:	9903      	ldr	r1, [sp, #12]
 80161b8:	ea43 0302 	orr.w	r3, r3, r2
 80161bc:	bf0c      	ite	eq
 80161be:	3102      	addeq	r1, #2
 80161c0:	3101      	addne	r1, #1
 80161c2:	b29a      	uxth	r2, r3
 80161c4:	bf05      	ittet	eq
 80161c6:	9103      	streq	r1, [sp, #12]
 80161c8:	2100      	moveq	r1, #0
 80161ca:	9103      	strne	r1, [sp, #12]
 80161cc:	9102      	streq	r1, [sp, #8]
 80161ce:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80161d0:	4291      	cmp	r1, r2
 80161d2:	d30a      	bcc.n	80161ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 80161d4:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 80161d8:	2301      	movs	r3, #1
 80161da:	9905      	ldr	r1, [sp, #20]
 80161dc:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80161e0:	d30f      	bcc.n	8016202 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 80161e2:	2100      	movs	r1, #0
 80161e4:	4698      	mov	r8, r3
 80161e6:	9100      	str	r1, [sp, #0]
 80161e8:	e032      	b.n	8016250 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 80161ea:	9b05      	ldr	r3, [sp, #20]
 80161ec:	429a      	cmp	r2, r3
 80161ee:	d318      	bcc.n	8016222 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 80161f0:	eb04 0308 	add.w	r3, r4, r8
 80161f4:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 80161f8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80161fc:	f108 0301 	add.w	r3, r8, #1
 8016200:	b29b      	uxth	r3, r3
 8016202:	9905      	ldr	r1, [sp, #20]
 8016204:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8016208:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801620c:	710e      	strb	r6, [r1, #4]
 801620e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8016210:	80ce      	strh	r6, [r1, #6]
 8016212:	f108 0601 	add.w	r6, r8, #1
 8016216:	714e      	strb	r6, [r1, #5]
 8016218:	9905      	ldr	r1, [sp, #20]
 801621a:	3101      	adds	r1, #1
 801621c:	b289      	uxth	r1, r1
 801621e:	9105      	str	r1, [sp, #20]
 8016220:	e7df      	b.n	80161e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8016222:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8016226:	4611      	mov	r1, r2
 8016228:	795b      	ldrb	r3, [r3, #5]
 801622a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801622e:	4426      	add	r6, r4
 8016230:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8016232:	4437      	add	r7, r6
 8016234:	2f00      	cmp	r7, #0
 8016236:	dd06      	ble.n	8016246 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 8016238:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801623c:	790f      	ldrb	r7, [r1, #4]
 801623e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8016242:	88c9      	ldrh	r1, [r1, #6]
 8016244:	e7f4      	b.n	8016230 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 8016246:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801624a:	b29b      	uxth	r3, r3
 801624c:	e7c5      	b.n	80161da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 801624e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8016250:	920c      	str	r2, [sp, #48]	@ 0x30
 8016252:	4601      	mov	r1, r0
 8016254:	9a00      	ldr	r2, [sp, #0]
 8016256:	469c      	mov	ip, r3
 8016258:	e78d      	b.n	8016176 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 801625a:	ebac 0305 	sub.w	r3, ip, r5
 801625e:	1957      	adds	r7, r2, r5
 8016260:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8016264:	b2ba      	uxth	r2, r7
 8016266:	b29b      	uxth	r3, r3
 8016268:	9200      	str	r2, [sp, #0]
 801626a:	2500      	movs	r5, #0
 801626c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801626e:	455a      	cmp	r2, fp
 8016270:	d88d      	bhi.n	801618e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8016272:	4601      	mov	r1, r0
 8016274:	e748      	b.n	8016108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 8016276:	458c      	cmp	ip, r1
 8016278:	bf27      	ittee	cs
 801627a:	ebac 0301 	subcs.w	r3, ip, r1
 801627e:	4628      	movcs	r0, r5
 8016280:	eba1 000c 	subcc.w	r0, r1, ip
 8016284:	462b      	movcc	r3, r5
 8016286:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8016288:	bf27      	ittee	cs
 801628a:	b29b      	uxthcs	r3, r3
 801628c:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801628e:	b280      	uxthcc	r0, r0
 8016290:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8016294:	2dff      	cmp	r5, #255	@ 0xff
 8016296:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8016298:	eb02 0705 	add.w	r7, r2, r5
 801629c:	b2bd      	uxth	r5, r7
 801629e:	9500      	str	r5, [sp, #0]
 80162a0:	d12e      	bne.n	8016300 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 80162a2:	465e      	mov	r6, fp
 80162a4:	9d00      	ldr	r5, [sp, #0]
 80162a6:	42aa      	cmp	r2, r5
 80162a8:	f040 8083 	bne.w	80163b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 80162ac:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80162ae:	458c      	cmp	ip, r1
 80162b0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80162b4:	d3d9      	bcc.n	801626a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80162b6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80162b8:	9904      	ldr	r1, [sp, #16]
 80162ba:	8812      	ldrh	r2, [r2, #0]
 80162bc:	1a52      	subs	r2, r2, r1
 80162be:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80162c0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80162c4:	9a08      	ldr	r2, [sp, #32]
 80162c6:	3201      	adds	r2, #1
 80162c8:	428a      	cmp	r2, r1
 80162ca:	9208      	str	r2, [sp, #32]
 80162cc:	f040 8091 	bne.w	80163f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 80162d0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80162d4:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 80162d8:	9b04      	ldr	r3, [sp, #16]
 80162da:	eba5 050c 	sub.w	r5, r5, ip
 80162de:	b2ad      	uxth	r5, r5
 80162e0:	2d00      	cmp	r5, #0
 80162e2:	bf08      	it	eq
 80162e4:	4619      	moveq	r1, r3
 80162e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80162e8:	bf18      	it	ne
 80162ea:	2100      	movne	r1, #0
 80162ec:	3301      	adds	r3, #1
 80162ee:	b289      	uxth	r1, r1
 80162f0:	930d      	str	r3, [sp, #52]	@ 0x34
 80162f2:	e700      	b.n	80160f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 80162f4:	20016a00 	.word	0x20016a00
 80162f8:	200169fa 	.word	0x200169fa
 80162fc:	fffff7fb 	.word	0xfffff7fb
 8016300:	46d9      	mov	r9, fp
 8016302:	9d00      	ldr	r5, [sp, #0]
 8016304:	42aa      	cmp	r2, r5
 8016306:	d0d1      	beq.n	80162ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 8016308:	1c55      	adds	r5, r2, #1
 801630a:	4422      	add	r2, r4
 801630c:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8016310:	9a06      	ldr	r2, [sp, #24]
 8016312:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016316:	9517      	str	r5, [sp, #92]	@ 0x5c
 8016318:	4472      	add	r2, lr
 801631a:	9212      	str	r2, [sp, #72]	@ 0x48
 801631c:	f8b9 2000 	ldrh.w	r2, [r9]
 8016320:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8016322:	1216      	asrs	r6, r2, #8
 8016324:	f897 a002 	ldrb.w	sl, [r7, #2]
 8016328:	10d5      	asrs	r5, r2, #3
 801632a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801632c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016330:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016334:	00d2      	lsls	r2, r2, #3
 8016336:	fb1a fa07 	smulbb	sl, sl, r7
 801633a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801633e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8016340:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016344:	b2d2      	uxtb	r2, r2
 8016346:	fb06 a607 	mla	r6, r6, r7, sl
 801634a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801634c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016350:	f897 a001 	ldrb.w	sl, [r7, #1]
 8016354:	b2b6      	uxth	r6, r6
 8016356:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8016358:	fb1a fa07 	smulbb	sl, sl, r7
 801635c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801635e:	fb05 a507 	mla	r5, r5, r7, sl
 8016362:	9f06      	ldr	r7, [sp, #24]
 8016364:	f106 0a01 	add.w	sl, r6, #1
 8016368:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801636c:	b2ad      	uxth	r5, r5
 801636e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8016370:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8016374:	f105 0a01 	add.w	sl, r5, #1
 8016378:	fb1e fe07 	smulbb	lr, lr, r7
 801637c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801637e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016382:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016386:	fb02 e207 	mla	r2, r2, r7, lr
 801638a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801638e:	b292      	uxth	r2, r2
 8016390:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016394:	f102 0e01 	add.w	lr, r2, #1
 8016398:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801639c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80163a0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80163a4:	ea4e 0606 	orr.w	r6, lr, r6
 80163a8:	ea46 060a 	orr.w	r6, r6, sl
 80163ac:	f829 6b02 	strh.w	r6, [r9], #2
 80163b0:	e7a7      	b.n	8016302 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 80163b2:	f102 0e01 	add.w	lr, r2, #1
 80163b6:	4422      	add	r2, r4
 80163b8:	9f06      	ldr	r7, [sp, #24]
 80163ba:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 80163be:	9a06      	ldr	r2, [sp, #24]
 80163c0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80163c4:	eb02 0a05 	add.w	sl, r2, r5
 80163c8:	4a13      	ldr	r2, [pc, #76]	@ (8016418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 80163ca:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80163ce:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80163d2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80163d6:	00d2      	lsls	r2, r2, #3
 80163d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80163dc:	ea49 0202 	orr.w	r2, r9, r2
 80163e0:	f817 9005 	ldrb.w	r9, [r7, r5]
 80163e4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80163e8:	f826 2b02 	strh.w	r2, [r6], #2
 80163ec:	fa1f f28e 	uxth.w	r2, lr
 80163f0:	e758      	b.n	80162a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 80163f2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80163f6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80163fa:	1a2d      	subs	r5, r5, r0
 80163fc:	b2ad      	uxth	r5, r5
 80163fe:	2d00      	cmp	r5, #0
 8016400:	bf18      	it	ne
 8016402:	2000      	movne	r0, #0
 8016404:	e732      	b.n	801626c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 8016406:	4b05      	ldr	r3, [pc, #20]	@ (801641c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 8016408:	6818      	ldr	r0, [r3, #0]
 801640a:	6803      	ldr	r3, [r0, #0]
 801640c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801640e:	4798      	blx	r3
 8016410:	b01f      	add	sp, #124	@ 0x7c
 8016412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016416:	bf00      	nop
 8016418:	fffff800 	.word	0xfffff800
 801641c:	20016a00 	.word	0x20016a00

08016420 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8016420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016424:	b091      	sub	sp, #68	@ 0x44
 8016426:	469b      	mov	fp, r3
 8016428:	4616      	mov	r6, r2
 801642a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801642e:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8016432:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8016436:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801643a:	4604      	mov	r4, r0
 801643c:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8016440:	4640      	mov	r0, r8
 8016442:	460d      	mov	r5, r1
 8016444:	4659      	mov	r1, fp
 8016446:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801644a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801644e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8016452:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8016456:	f7f3 f83f 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 801645a:	4631      	mov	r1, r6
 801645c:	4640      	mov	r0, r8
 801645e:	f7f3 f83b 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 8016462:	4b74      	ldr	r3, [pc, #464]	@ (8016634 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8016464:	8818      	ldrh	r0, [r3, #0]
 8016466:	4b74      	ldr	r3, [pc, #464]	@ (8016638 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8016468:	b202      	sxth	r2, r0
 801646a:	8819      	ldrh	r1, [r3, #0]
 801646c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8016470:	b20e      	sxth	r6, r1
 8016472:	2b00      	cmp	r3, #0
 8016474:	da07      	bge.n	8016486 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8016476:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801647a:	4463      	add	r3, ip
 801647c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8016480:	2300      	movs	r3, #0
 8016482:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8016486:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801648a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801648e:	1ad2      	subs	r2, r2, r3
 8016490:	4594      	cmp	ip, r2
 8016492:	bfc4      	itt	gt
 8016494:	1ac2      	subgt	r2, r0, r3
 8016496:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801649a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801649e:	2a00      	cmp	r2, #0
 80164a0:	da07      	bge.n	80164b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80164a2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 80164a6:	4462      	add	r2, ip
 80164a8:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80164ac:	2200      	movs	r2, #0
 80164ae:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80164b2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 80164b6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80164ba:	eba6 060a 	sub.w	r6, r6, sl
 80164be:	42b2      	cmp	r2, r6
 80164c0:	bfc4      	itt	gt
 80164c2:	eba1 020a 	subgt.w	r2, r1, sl
 80164c6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 80164ca:	4a5c      	ldr	r2, [pc, #368]	@ (801663c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80164cc:	7812      	ldrb	r2, [r2, #0]
 80164ce:	b9a2      	cbnz	r2, 80164fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80164d0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80164d4:	4286      	cmp	r6, r0
 80164d6:	4640      	mov	r0, r8
 80164d8:	9303      	str	r3, [sp, #12]
 80164da:	bf14      	ite	ne
 80164dc:	2600      	movne	r6, #0
 80164de:	2601      	moveq	r6, #1
 80164e0:	f7f3 f83d 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 80164e4:	9b03      	ldr	r3, [sp, #12]
 80164e6:	b160      	cbz	r0, 8016502 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80164e8:	2300      	movs	r3, #0
 80164ea:	8023      	strh	r3, [r4, #0]
 80164ec:	8063      	strh	r3, [r4, #2]
 80164ee:	80a3      	strh	r3, [r4, #4]
 80164f0:	4620      	mov	r0, r4
 80164f2:	80e3      	strh	r3, [r4, #6]
 80164f4:	b011      	add	sp, #68	@ 0x44
 80164f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164fa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80164fe:	428e      	cmp	r6, r1
 8016500:	e7e9      	b.n	80164d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8016502:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8016506:	a90e      	add	r1, sp, #56	@ 0x38
 8016508:	900e      	str	r0, [sp, #56]	@ 0x38
 801650a:	a80c      	add	r0, sp, #48	@ 0x30
 801650c:	9205      	str	r2, [sp, #20]
 801650e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8016512:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8016516:	9206      	str	r2, [sp, #24]
 8016518:	f8bb 2000 	ldrh.w	r2, [fp]
 801651c:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8016520:	1a9b      	subs	r3, r3, r2
 8016522:	b21b      	sxth	r3, r3
 8016524:	9303      	str	r3, [sp, #12]
 8016526:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801652a:	f8df b118 	ldr.w	fp, [pc, #280]	@ 8016644 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801652e:	ebaa 0a03 	sub.w	sl, sl, r3
 8016532:	fa0f f38a 	sxth.w	r3, sl
 8016536:	9304      	str	r3, [sp, #16]
 8016538:	9b03      	ldr	r3, [sp, #12]
 801653a:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801653e:	9b04      	ldr	r3, [sp, #16]
 8016540:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8016544:	9b05      	ldr	r3, [sp, #20]
 8016546:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801654a:	9b06      	ldr	r3, [sp, #24]
 801654c:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8016550:	f7f8 fc7a 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016554:	4640      	mov	r0, r8
 8016556:	f7f8 fc4f 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801655a:	a80e      	add	r0, sp, #56	@ 0x38
 801655c:	f7f8 fc4c 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016560:	4b37      	ldr	r3, [pc, #220]	@ (8016640 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8016562:	4628      	mov	r0, r5
 8016564:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8016568:	881b      	ldrh	r3, [r3, #0]
 801656a:	9307      	str	r3, [sp, #28]
 801656c:	682b      	ldr	r3, [r5, #0]
 801656e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016570:	4798      	blx	r3
 8016572:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8016576:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801657a:	4681      	mov	r9, r0
 801657c:	f8db 0000 	ldr.w	r0, [fp]
 8016580:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8016584:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8016586:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801658a:	6803      	ldr	r3, [r0, #0]
 801658c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801658e:	4798      	blx	r3
 8016590:	4607      	mov	r7, r0
 8016592:	f8db 0000 	ldr.w	r0, [fp]
 8016596:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801659a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801659e:	6803      	ldr	r3, [r0, #0]
 80165a0:	9109      	str	r1, [sp, #36]	@ 0x24
 80165a2:	9208      	str	r2, [sp, #32]
 80165a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80165a6:	4798      	blx	r3
 80165a8:	f010 0f01 	tst.w	r0, #1
 80165ac:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80165b0:	d012      	beq.n	80165d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80165b2:	f8db 0000 	ldr.w	r0, [fp]
 80165b6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80165ba:	6803      	ldr	r3, [r0, #0]
 80165bc:	9200      	str	r2, [sp, #0]
 80165be:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 80165c0:	462b      	mov	r3, r5
 80165c2:	e898 0006 	ldmia.w	r8, {r1, r2}
 80165c6:	47b0      	blx	r6
 80165c8:	9b03      	ldr	r3, [sp, #12]
 80165ca:	8023      	strh	r3, [r4, #0]
 80165cc:	9b04      	ldr	r3, [sp, #16]
 80165ce:	8063      	strh	r3, [r4, #2]
 80165d0:	9b05      	ldr	r3, [sp, #20]
 80165d2:	80a3      	strh	r3, [r4, #4]
 80165d4:	9b06      	ldr	r3, [sp, #24]
 80165d6:	e78b      	b.n	80164f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80165d8:	fb09 f202 	mul.w	r2, r9, r2
 80165dc:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 80165e0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80165e4:	440f      	add	r7, r1
 80165e6:	b166      	cbz	r6, 8016602 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80165e8:	9a07      	ldr	r2, [sp, #28]
 80165ea:	4592      	cmp	sl, r2
 80165ec:	d109      	bne.n	8016602 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80165ee:	f8db 0000 	ldr.w	r0, [fp]
 80165f2:	fb09 f303 	mul.w	r3, r9, r3
 80165f6:	4629      	mov	r1, r5
 80165f8:	6802      	ldr	r2, [r0, #0]
 80165fa:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 80165fc:	463a      	mov	r2, r7
 80165fe:	47b0      	blx	r6
 8016600:	e7e2      	b.n	80165c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8016602:	fb0a f303 	mul.w	r3, sl, r3
 8016606:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801660a:	f8df b038 	ldr.w	fp, [pc, #56]	@ 8016644 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801660e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8016612:	4545      	cmp	r5, r8
 8016614:	d2d8      	bcs.n	80165c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8016616:	f8db 0000 	ldr.w	r0, [fp]
 801661a:	4629      	mov	r1, r5
 801661c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8016620:	4435      	add	r5, r6
 8016622:	6802      	ldr	r2, [r0, #0]
 8016624:	005b      	lsls	r3, r3, #1
 8016626:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801662a:	463a      	mov	r2, r7
 801662c:	47d0      	blx	sl
 801662e:	444f      	add	r7, r9
 8016630:	e7ef      	b.n	8016612 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8016632:	bf00      	nop
 8016634:	200169f4 	.word	0x200169f4
 8016638:	200169f6 	.word	0x200169f6
 801663c:	200169f8 	.word	0x200169f8
 8016640:	200169fa 	.word	0x200169fa
 8016644:	20016a00 	.word	0x20016a00

08016648 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8016648:	b5f0      	push	{r4, r5, r6, r7, lr}
 801664a:	4606      	mov	r6, r0
 801664c:	b087      	sub	sp, #28
 801664e:	460c      	mov	r4, r1
 8016650:	4617      	mov	r7, r2
 8016652:	461d      	mov	r5, r3
 8016654:	b333      	cbz	r3, 80166a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8016656:	4608      	mov	r0, r1
 8016658:	f7f2 ff81 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 801665c:	bb10      	cbnz	r0, 80166a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801665e:	6820      	ldr	r0, [r4, #0]
 8016660:	ab04      	add	r3, sp, #16
 8016662:	6861      	ldr	r1, [r4, #4]
 8016664:	4c1b      	ldr	r4, [pc, #108]	@ (80166d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8016666:	c303      	stmia	r3!, {r0, r1}
 8016668:	a804      	add	r0, sp, #16
 801666a:	f7f8 fbc5 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801666e:	6820      	ldr	r0, [r4, #0]
 8016670:	6803      	ldr	r3, [r0, #0]
 8016672:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016674:	4798      	blx	r3
 8016676:	2dff      	cmp	r5, #255	@ 0xff
 8016678:	d016      	beq.n	80166a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801667a:	f010 0f08 	tst.w	r0, #8
 801667e:	6820      	ldr	r0, [r4, #0]
 8016680:	d015      	beq.n	80166ae <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8016682:	2400      	movs	r4, #0
 8016684:	6801      	ldr	r1, [r0, #0]
 8016686:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801668a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801668e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8016692:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8016696:	9401      	str	r4, [sp, #4]
 8016698:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801669c:	9400      	str	r4, [sp, #0]
 801669e:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 80166a0:	4639      	mov	r1, r7
 80166a2:	47a0      	blx	r4
 80166a4:	b007      	add	sp, #28
 80166a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80166a8:	f010 0f02 	tst.w	r0, #2
 80166ac:	e7e7      	b.n	801667e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80166ae:	6803      	ldr	r3, [r0, #0]
 80166b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80166b2:	4798      	blx	r3
 80166b4:	4b08      	ldr	r3, [pc, #32]	@ (80166d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80166b6:	4601      	mov	r1, r0
 80166b8:	4630      	mov	r0, r6
 80166ba:	881a      	ldrh	r2, [r3, #0]
 80166bc:	6833      	ldr	r3, [r6, #0]
 80166be:	e9cd 7500 	strd	r7, r5, [sp]
 80166c2:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 80166c4:	ab04      	add	r3, sp, #16
 80166c6:	47a8      	blx	r5
 80166c8:	6820      	ldr	r0, [r4, #0]
 80166ca:	6803      	ldr	r3, [r0, #0]
 80166cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80166ce:	4798      	blx	r3
 80166d0:	e7e8      	b.n	80166a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80166d2:	bf00      	nop
 80166d4:	20016a00 	.word	0x20016a00
 80166d8:	200169fa 	.word	0x200169fa

080166dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80166dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80166e0:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 80166e4:	4688      	mov	r8, r1
 80166e6:	4614      	mov	r4, r2
 80166e8:	461d      	mov	r5, r3
 80166ea:	9e08      	ldr	r6, [sp, #32]
 80166ec:	2f00      	cmp	r7, #0
 80166ee:	f000 80ab 	beq.w	8016848 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80166f2:	4618      	mov	r0, r3
 80166f4:	f7f2 ff33 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 80166f8:	2800      	cmp	r0, #0
 80166fa:	f040 80a5 	bne.w	8016848 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80166fe:	f9b5 1000 	ldrsh.w	r1, [r5]
 8016702:	2fff      	cmp	r7, #255	@ 0xff
 8016704:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016708:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801670c:	fb04 1303 	mla	r3, r4, r3, r1
 8016710:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8016714:	eba4 0200 	sub.w	r2, r4, r0
 8016718:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801671c:	fb04 f505 	mul.w	r5, r4, r5
 8016720:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8016724:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8016728:	d04a      	beq.n	80167c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801672a:	b2bc      	uxth	r4, r7
 801672c:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8016730:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8016734:	fa5f f788 	uxtb.w	r7, r8
 8016738:	b2f3      	uxtb	r3, r6
 801673a:	0040      	lsls	r0, r0, #1
 801673c:	fb0e fe04 	mul.w	lr, lr, r4
 8016740:	4367      	muls	r7, r4
 8016742:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8016746:	4363      	muls	r3, r4
 8016748:	fa1f fc8c 	uxth.w	ip, ip
 801674c:	42a9      	cmp	r1, r5
 801674e:	d27b      	bcs.n	8016848 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8016750:	eb01 0900 	add.w	r9, r1, r0
 8016754:	4549      	cmp	r1, r9
 8016756:	d231      	bcs.n	80167bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8016758:	880a      	ldrh	r2, [r1, #0]
 801675a:	1214      	asrs	r4, r2, #8
 801675c:	10d6      	asrs	r6, r2, #3
 801675e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8016762:	00d2      	lsls	r2, r2, #3
 8016764:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016768:	b2d2      	uxtb	r2, r2
 801676a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801676e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016772:	fb14 f40c 	smulbb	r4, r4, ip
 8016776:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801677a:	fb12 f20c 	smulbb	r2, r2, ip
 801677e:	fb16 f60c 	smulbb	r6, r6, ip
 8016782:	4474      	add	r4, lr
 8016784:	441a      	add	r2, r3
 8016786:	b2a4      	uxth	r4, r4
 8016788:	443e      	add	r6, r7
 801678a:	b292      	uxth	r2, r2
 801678c:	f104 0a01 	add.w	sl, r4, #1
 8016790:	b2b6      	uxth	r6, r6
 8016792:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8016796:	f102 0a01 	add.w	sl, r2, #1
 801679a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801679e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80167a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80167a6:	4322      	orrs	r2, r4
 80167a8:	1c74      	adds	r4, r6, #1
 80167aa:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80167ae:	0976      	lsrs	r6, r6, #5
 80167b0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80167b4:	4332      	orrs	r2, r6
 80167b6:	f821 2b02 	strh.w	r2, [r1], #2
 80167ba:	e7cb      	b.n	8016754 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 80167bc:	4441      	add	r1, r8
 80167be:	e7c5      	b.n	801674c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 80167c0:	0973      	lsrs	r3, r6, #5
 80167c2:	4f22      	ldr	r7, [pc, #136]	@ (801684c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 80167c4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80167c8:	ea08 0707 	and.w	r7, r8, r7
 80167cc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80167d0:	433b      	orrs	r3, r7
 80167d2:	07e7      	lsls	r7, r4, #31
 80167d4:	ea43 0306 	orr.w	r3, r3, r6
 80167d8:	b29b      	uxth	r3, r3
 80167da:	d50b      	bpl.n	80167f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 80167dc:	0040      	lsls	r0, r0, #1
 80167de:	0052      	lsls	r2, r2, #1
 80167e0:	42a9      	cmp	r1, r5
 80167e2:	d231      	bcs.n	8016848 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80167e4:	180c      	adds	r4, r1, r0
 80167e6:	42a1      	cmp	r1, r4
 80167e8:	d202      	bcs.n	80167f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80167ea:	f821 3b02 	strh.w	r3, [r1], #2
 80167ee:	e7fa      	b.n	80167e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 80167f0:	4411      	add	r1, r2
 80167f2:	e7f5      	b.n	80167e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 80167f4:	078e      	lsls	r6, r1, #30
 80167f6:	d008      	beq.n	801680a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 80167f8:	0066      	lsls	r6, r4, #1
 80167fa:	460a      	mov	r2, r1
 80167fc:	42aa      	cmp	r2, r5
 80167fe:	d202      	bcs.n	8016806 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8016800:	8013      	strh	r3, [r2, #0]
 8016802:	4432      	add	r2, r6
 8016804:	e7fa      	b.n	80167fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 8016806:	3102      	adds	r1, #2
 8016808:	3801      	subs	r0, #1
 801680a:	07c2      	lsls	r2, r0, #31
 801680c:	d50b      	bpl.n	8016826 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 801680e:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8016812:	0066      	lsls	r6, r4, #1
 8016814:	3a01      	subs	r2, #1
 8016816:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801681a:	42aa      	cmp	r2, r5
 801681c:	d202      	bcs.n	8016824 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801681e:	8013      	strh	r3, [r2, #0]
 8016820:	4432      	add	r2, r6
 8016822:	e7fa      	b.n	801681a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 8016824:	3801      	subs	r0, #1
 8016826:	b178      	cbz	r0, 8016848 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8016828:	1040      	asrs	r0, r0, #1
 801682a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801682e:	0080      	lsls	r0, r0, #2
 8016830:	0064      	lsls	r4, r4, #1
 8016832:	42a9      	cmp	r1, r5
 8016834:	d208      	bcs.n	8016848 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8016836:	180e      	adds	r6, r1, r0
 8016838:	460a      	mov	r2, r1
 801683a:	42b2      	cmp	r2, r6
 801683c:	d202      	bcs.n	8016844 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801683e:	f842 3b04 	str.w	r3, [r2], #4
 8016842:	e7fa      	b.n	801683a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 8016844:	4421      	add	r1, r4
 8016846:	e7f4      	b.n	8016832 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 8016848:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801684c:	00fff800 	.word	0x00fff800

08016850 <_ZN8touchgfx8LCD16bppC1Ev>:
 8016850:	2200      	movs	r2, #0
 8016852:	4912      	ldr	r1, [pc, #72]	@ (801689c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8016854:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8016858:	6001      	str	r1, [r0, #0]
 801685a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801685e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8016862:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8016866:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801686a:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801686e:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8016872:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8016876:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801687a:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801687e:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8016882:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8016886:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801688a:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801688e:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8016892:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8016896:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 801689a:	4770      	bx	lr
 801689c:	08023c74 	.word	0x08023c74

080168a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80168a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80168a4:	b08d      	sub	sp, #52	@ 0x34
 80168a6:	460d      	mov	r5, r1
 80168a8:	4604      	mov	r4, r0
 80168aa:	4699      	mov	r9, r3
 80168ac:	6808      	ldr	r0, [r1, #0]
 80168ae:	ab08      	add	r3, sp, #32
 80168b0:	6849      	ldr	r1, [r1, #4]
 80168b2:	c303      	stmia	r3!, {r0, r1}
 80168b4:	6810      	ldr	r0, [r2, #0]
 80168b6:	ab0a      	add	r3, sp, #40	@ 0x28
 80168b8:	6851      	ldr	r1, [r2, #4]
 80168ba:	c303      	stmia	r3!, {r0, r1}
 80168bc:	a808      	add	r0, sp, #32
 80168be:	f7f8 fa9b 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80168c2:	4629      	mov	r1, r5
 80168c4:	a80a      	add	r0, sp, #40	@ 0x28
 80168c6:	4d67      	ldr	r5, [pc, #412]	@ (8016a64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80168c8:	f7f8 fabe 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80168cc:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80168d0:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 80168d4:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 80168d8:	6828      	ldr	r0, [r5, #0]
 80168da:	fb11 2103 	smlabb	r1, r1, r3, r2
 80168de:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 80168e2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80168e6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80168ea:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80168ee:	440a      	add	r2, r1
 80168f0:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80168f4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 80168f8:	4413      	add	r3, r2
 80168fa:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80168fe:	6803      	ldr	r3, [r0, #0]
 8016900:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016902:	4798      	blx	r3
 8016904:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8016908:	d119      	bne.n	801693e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801690a:	f010 0f20 	tst.w	r0, #32
 801690e:	6828      	ldr	r0, [r5, #0]
 8016910:	d018      	beq.n	8016944 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8016912:	2500      	movs	r5, #0
 8016914:	6801      	ldr	r1, [r0, #0]
 8016916:	b2b6      	uxth	r6, r6
 8016918:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801691c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8016920:	9601      	str	r6, [sp, #4]
 8016922:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8016926:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801692a:	9502      	str	r5, [sp, #8]
 801692c:	fa1f f588 	uxth.w	r5, r8
 8016930:	9500      	str	r5, [sp, #0]
 8016932:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 8016934:	4621      	mov	r1, r4
 8016936:	47a8      	blx	r5
 8016938:	b00d      	add	sp, #52	@ 0x34
 801693a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801693e:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8016942:	e7e4      	b.n	801690e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8016944:	6803      	ldr	r3, [r0, #0]
 8016946:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016948:	4798      	blx	r3
 801694a:	4947      	ldr	r1, [pc, #284]	@ (8016a68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801694c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8016950:	880b      	ldrh	r3, [r1, #0]
 8016952:	468a      	mov	sl, r1
 8016954:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8016958:	fb03 5202 	mla	r2, r3, r2, r5
 801695c:	4373      	muls	r3, r6
 801695e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016962:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016966:	9307      	str	r3, [sp, #28]
 8016968:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801696c:	9306      	str	r3, [sp, #24]
 801696e:	9b07      	ldr	r3, [sp, #28]
 8016970:	4298      	cmp	r0, r3
 8016972:	d270      	bcs.n	8016a56 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8016974:	9b06      	ldr	r3, [sp, #24]
 8016976:	4621      	mov	r1, r4
 8016978:	eb00 0b03 	add.w	fp, r0, r3
 801697c:	4558      	cmp	r0, fp
 801697e:	d25d      	bcs.n	8016a3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8016980:	f851 4b04 	ldr.w	r4, [r1], #4
 8016984:	0e23      	lsrs	r3, r4, #24
 8016986:	d014      	beq.n	80169b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8016988:	2bff      	cmp	r3, #255	@ 0xff
 801698a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801698e:	d112      	bne.n	80169b6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8016990:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8016994:	d10f      	bne.n	80169b6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8016996:	0963      	lsrs	r3, r4, #5
 8016998:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801699c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80169a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80169a4:	f02c 0c07 	bic.w	ip, ip, #7
 80169a8:	ea43 0c0c 	orr.w	ip, r3, ip
 80169ac:	ea4c 0404 	orr.w	r4, ip, r4
 80169b0:	8004      	strh	r4, [r0, #0]
 80169b2:	3002      	adds	r0, #2
 80169b4:	e7e2      	b.n	801697c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80169b6:	fb09 f303 	mul.w	r3, r9, r3
 80169ba:	8807      	ldrh	r7, [r0, #0]
 80169bc:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80169c0:	fa5f fc8c 	uxtb.w	ip, ip
 80169c4:	1c5a      	adds	r2, r3, #1
 80169c6:	123e      	asrs	r6, r7, #8
 80169c8:	10fd      	asrs	r5, r7, #3
 80169ca:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80169ce:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80169d2:	00ff      	lsls	r7, r7, #3
 80169d4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80169d8:	1212      	asrs	r2, r2, #8
 80169da:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80169de:	b293      	uxth	r3, r2
 80169e0:	43d2      	mvns	r2, r2
 80169e2:	b2ff      	uxtb	r7, r7
 80169e4:	fb1e fe03 	smulbb	lr, lr, r3
 80169e8:	b2d2      	uxtb	r2, r2
 80169ea:	fb1c fc03 	smulbb	ip, ip, r3
 80169ee:	b2e4      	uxtb	r4, r4
 80169f0:	fb06 e602 	mla	r6, r6, r2, lr
 80169f4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80169f8:	fb14 f403 	smulbb	r4, r4, r3
 80169fc:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8016a00:	b2b6      	uxth	r6, r6
 8016a02:	fb05 c502 	mla	r5, r5, r2, ip
 8016a06:	fb07 4702 	mla	r7, r7, r2, r4
 8016a0a:	f106 0e01 	add.w	lr, r6, #1
 8016a0e:	b2ad      	uxth	r5, r5
 8016a10:	b2bf      	uxth	r7, r7
 8016a12:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8016a16:	f105 0c01 	add.w	ip, r5, #1
 8016a1a:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8016a1e:	1c7e      	adds	r6, r7, #1
 8016a20:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8016a24:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016a28:	096d      	lsrs	r5, r5, #5
 8016a2a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016a2e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016a32:	ea46 060e 	orr.w	r6, r6, lr
 8016a36:	432e      	orrs	r6, r5
 8016a38:	8006      	strh	r6, [r0, #0]
 8016a3a:	e7ba      	b.n	80169b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8016a3c:	f8ba 3000 	ldrh.w	r3, [sl]
 8016a40:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8016a44:	eba3 0308 	sub.w	r3, r3, r8
 8016a48:	eba4 0408 	sub.w	r4, r4, r8
 8016a4c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016a50:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8016a54:	e78b      	b.n	801696e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8016a56:	4b03      	ldr	r3, [pc, #12]	@ (8016a64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8016a58:	6818      	ldr	r0, [r3, #0]
 8016a5a:	6803      	ldr	r3, [r0, #0]
 8016a5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016a5e:	4798      	blx	r3
 8016a60:	e76a      	b.n	8016938 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8016a62:	bf00      	nop
 8016a64:	20016a00 	.word	0x20016a00
 8016a68:	200169fa 	.word	0x200169fa

08016a6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8016a6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016a70:	b085      	sub	sp, #20
 8016a72:	6810      	ldr	r0, [r2, #0]
 8016a74:	460c      	mov	r4, r1
 8016a76:	6851      	ldr	r1, [r2, #4]
 8016a78:	466d      	mov	r5, sp
 8016a7a:	4616      	mov	r6, r2
 8016a7c:	c503      	stmia	r5!, {r0, r1}
 8016a7e:	6818      	ldr	r0, [r3, #0]
 8016a80:	6859      	ldr	r1, [r3, #4]
 8016a82:	c503      	stmia	r5!, {r0, r1}
 8016a84:	4668      	mov	r0, sp
 8016a86:	4d2e      	ldr	r5, [pc, #184]	@ (8016b40 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8016a88:	f7f8 f9b6 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016a8c:	4631      	mov	r1, r6
 8016a8e:	a802      	add	r0, sp, #8
 8016a90:	4e2c      	ldr	r6, [pc, #176]	@ (8016b44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8016a92:	f7f8 f9d9 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016a96:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8016a9a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8016a9e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8016aa2:	6828      	ldr	r0, [r5, #0]
 8016aa4:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016aa8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8016aac:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8016ab0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8016ab4:	f8bd 1000 	ldrh.w	r1, [sp]
 8016ab8:	440a      	add	r2, r1
 8016aba:	f8ad 2008 	strh.w	r2, [sp, #8]
 8016abe:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016ac2:	4413      	add	r3, r2
 8016ac4:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016ac8:	6803      	ldr	r3, [r0, #0]
 8016aca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016acc:	4798      	blx	r3
 8016ace:	8833      	ldrh	r3, [r6, #0]
 8016ad0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8016ad4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8016ad8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016adc:	f8df e068 	ldr.w	lr, [pc, #104]	@ 8016b48 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8016ae0:	fb03 1202 	mla	r2, r3, r2, r1
 8016ae4:	fb08 f303 	mul.w	r3, r8, r3
 8016ae8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016aec:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016af0:	4298      	cmp	r0, r3
 8016af2:	d21d      	bcs.n	8016b30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8016af4:	eb00 080c 	add.w	r8, r0, ip
 8016af8:	4540      	cmp	r0, r8
 8016afa:	d20f      	bcs.n	8016b1c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8016afc:	f854 1b04 	ldr.w	r1, [r4], #4
 8016b00:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8016b04:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8016b08:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8016b0c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016b10:	ea42 0209 	orr.w	r2, r2, r9
 8016b14:	430a      	orrs	r2, r1
 8016b16:	f820 2b02 	strh.w	r2, [r0], #2
 8016b1a:	e7ed      	b.n	8016af8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8016b1c:	8832      	ldrh	r2, [r6, #0]
 8016b1e:	1bd2      	subs	r2, r2, r7
 8016b20:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016b24:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8016b28:	1bd2      	subs	r2, r2, r7
 8016b2a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8016b2e:	e7df      	b.n	8016af0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8016b30:	6828      	ldr	r0, [r5, #0]
 8016b32:	6803      	ldr	r3, [r0, #0]
 8016b34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016b36:	4798      	blx	r3
 8016b38:	b005      	add	sp, #20
 8016b3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016b3e:	bf00      	nop
 8016b40:	20016a00 	.word	0x20016a00
 8016b44:	200169fa 	.word	0x200169fa
 8016b48:	fffff800 	.word	0xfffff800

08016b4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8016b4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016b50:	b08e      	sub	sp, #56	@ 0x38
 8016b52:	460e      	mov	r6, r1
 8016b54:	4604      	mov	r4, r0
 8016b56:	461d      	mov	r5, r3
 8016b58:	6808      	ldr	r0, [r1, #0]
 8016b5a:	ab0a      	add	r3, sp, #40	@ 0x28
 8016b5c:	6849      	ldr	r1, [r1, #4]
 8016b5e:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 8016d34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8016b62:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 8016d38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8016b66:	c303      	stmia	r3!, {r0, r1}
 8016b68:	6810      	ldr	r0, [r2, #0]
 8016b6a:	ab0c      	add	r3, sp, #48	@ 0x30
 8016b6c:	6851      	ldr	r1, [r2, #4]
 8016b6e:	c303      	stmia	r3!, {r0, r1}
 8016b70:	a80a      	add	r0, sp, #40	@ 0x28
 8016b72:	f7f8 f941 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016b76:	4631      	mov	r1, r6
 8016b78:	a80c      	add	r0, sp, #48	@ 0x30
 8016b7a:	f7f8 f965 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016b7e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8016b82:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8016b86:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8016b8a:	f8d8 0000 	ldr.w	r0, [r8]
 8016b8e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016b92:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8016b96:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8016b9a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8016b9e:	440c      	add	r4, r1
 8016ba0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8016ba4:	440a      	add	r2, r1
 8016ba6:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8016baa:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8016bae:	4413      	add	r3, r2
 8016bb0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8016bb4:	6803      	ldr	r3, [r0, #0]
 8016bb6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016bb8:	4798      	blx	r3
 8016bba:	2dff      	cmp	r5, #255	@ 0xff
 8016bbc:	d124      	bne.n	8016c08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8016bbe:	f010 0f01 	tst.w	r0, #1
 8016bc2:	f8d8 0000 	ldr.w	r0, [r8]
 8016bc6:	d022      	beq.n	8016c0e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8016bc8:	2100      	movs	r1, #0
 8016bca:	f04f 0e01 	mov.w	lr, #1
 8016bce:	f8d0 c000 	ldr.w	ip, [r0]
 8016bd2:	b2b6      	uxth	r6, r6
 8016bd4:	f8cd e018 	str.w	lr, [sp, #24]
 8016bd8:	b2bf      	uxth	r7, r7
 8016bda:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8016bde:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8016be2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8016be6:	f8b9 e000 	ldrh.w	lr, [r9]
 8016bea:	9503      	str	r5, [sp, #12]
 8016bec:	9601      	str	r6, [sp, #4]
 8016bee:	9700      	str	r7, [sp, #0]
 8016bf0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8016bf4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8016bf8:	9102      	str	r1, [sp, #8]
 8016bfa:	4621      	mov	r1, r4
 8016bfc:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 8016c00:	47a8      	blx	r5
 8016c02:	b00e      	add	sp, #56	@ 0x38
 8016c04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016c08:	f010 0f04 	tst.w	r0, #4
 8016c0c:	e7d9      	b.n	8016bc2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8016c0e:	6803      	ldr	r3, [r0, #0]
 8016c10:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016c12:	4798      	blx	r3
 8016c14:	f8b9 3000 	ldrh.w	r3, [r9]
 8016c18:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8016c1c:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8016c20:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8016c24:	435e      	muls	r6, r3
 8016c26:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8016c2a:	2dff      	cmp	r5, #255	@ 0xff
 8016c2c:	fb03 1202 	mla	r2, r3, r2, r1
 8016c30:	ebac 0c07 	sub.w	ip, ip, r7
 8016c34:	eba3 0707 	sub.w	r7, r3, r7
 8016c38:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016c3c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8016c40:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016c44:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8016c48:	d049      	beq.n	8016cde <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8016c4a:	43eb      	mvns	r3, r5
 8016c4c:	fa1f f985 	uxth.w	r9, r5
 8016c50:	b2db      	uxtb	r3, r3
 8016c52:	42b0      	cmp	r0, r6
 8016c54:	d266      	bcs.n	8016d24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8016c56:	eb00 0a0e 	add.w	sl, r0, lr
 8016c5a:	4550      	cmp	r0, sl
 8016c5c:	4621      	mov	r1, r4
 8016c5e:	f104 0403 	add.w	r4, r4, #3
 8016c62:	d25b      	bcs.n	8016d1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8016c64:	8802      	ldrh	r2, [r0, #0]
 8016c66:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8016c6a:	ea4f 2822 	mov.w	r8, r2, asr #8
 8016c6e:	fb11 f109 	smulbb	r1, r1, r9
 8016c72:	10d5      	asrs	r5, r2, #3
 8016c74:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8016c78:	00d2      	lsls	r2, r2, #3
 8016c7a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016c7e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8016c82:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016c86:	fb08 1803 	mla	r8, r8, r3, r1
 8016c8a:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8016c8e:	b2d2      	uxtb	r2, r2
 8016c90:	fb11 f109 	smulbb	r1, r1, r9
 8016c94:	fa1f f888 	uxth.w	r8, r8
 8016c98:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016c9c:	fb05 1503 	mla	r5, r5, r3, r1
 8016ca0:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8016ca4:	fb11 f109 	smulbb	r1, r1, r9
 8016ca8:	b2ad      	uxth	r5, r5
 8016caa:	fb02 1203 	mla	r2, r2, r3, r1
 8016cae:	f108 0101 	add.w	r1, r8, #1
 8016cb2:	b292      	uxth	r2, r2
 8016cb4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8016cb8:	1c51      	adds	r1, r2, #1
 8016cba:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8016cbe:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016cc2:	1c69      	adds	r1, r5, #1
 8016cc4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8016cc8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016ccc:	096d      	lsrs	r5, r5, #5
 8016cce:	ea42 0208 	orr.w	r2, r2, r8
 8016cd2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016cd6:	432a      	orrs	r2, r5
 8016cd8:	f820 2b02 	strh.w	r2, [r0], #2
 8016cdc:	e7bd      	b.n	8016c5a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8016cde:	4a14      	ldr	r2, [pc, #80]	@ (8016d30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8016ce0:	42b0      	cmp	r0, r6
 8016ce2:	d21f      	bcs.n	8016d24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8016ce4:	eb00 050e 	add.w	r5, r0, lr
 8016ce8:	42a8      	cmp	r0, r5
 8016cea:	4621      	mov	r1, r4
 8016cec:	f104 0403 	add.w	r4, r4, #3
 8016cf0:	d210      	bcs.n	8016d14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8016cf2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8016cf6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8016cfa:	00db      	lsls	r3, r3, #3
 8016cfc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8016d00:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016d04:	430b      	orrs	r3, r1
 8016d06:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8016d0a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8016d0e:	f820 3b02 	strh.w	r3, [r0], #2
 8016d12:	e7e9      	b.n	8016ce8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8016d14:	4438      	add	r0, r7
 8016d16:	eb01 040c 	add.w	r4, r1, ip
 8016d1a:	e7e1      	b.n	8016ce0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8016d1c:	4438      	add	r0, r7
 8016d1e:	eb01 040c 	add.w	r4, r1, ip
 8016d22:	e796      	b.n	8016c52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8016d24:	4b03      	ldr	r3, [pc, #12]	@ (8016d34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8016d26:	6818      	ldr	r0, [r3, #0]
 8016d28:	6803      	ldr	r3, [r0, #0]
 8016d2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016d2c:	4798      	blx	r3
 8016d2e:	e768      	b.n	8016c02 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8016d30:	fffff800 	.word	0xfffff800
 8016d34:	20016a00 	.word	0x20016a00
 8016d38:	200169fa 	.word	0x200169fa

08016d3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8016d3c:	b4f0      	push	{r4, r5, r6, r7}
 8016d3e:	4616      	mov	r6, r2
 8016d40:	461c      	mov	r4, r3
 8016d42:	460d      	mov	r5, r1
 8016d44:	9a04      	ldr	r2, [sp, #16]
 8016d46:	2e01      	cmp	r6, #1
 8016d48:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016d4c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8016d50:	d012      	beq.n	8016d78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8016d52:	d303      	bcc.n	8016d5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8016d54:	2e02      	cmp	r6, #2
 8016d56:	d00a      	beq.n	8016d6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8016d58:	bcf0      	pop	{r4, r5, r6, r7}
 8016d5a:	4770      	bx	lr
 8016d5c:	6805      	ldr	r5, [r0, #0]
 8016d5e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8016d62:	68ed      	ldr	r5, [r5, #12]
 8016d64:	4613      	mov	r3, r2
 8016d66:	4622      	mov	r2, r4
 8016d68:	46ac      	mov	ip, r5
 8016d6a:	bcf0      	pop	{r4, r5, r6, r7}
 8016d6c:	4760      	bx	ip
 8016d6e:	4621      	mov	r1, r4
 8016d70:	4628      	mov	r0, r5
 8016d72:	bcf0      	pop	{r4, r5, r6, r7}
 8016d74:	f7ff bd94 	b.w	80168a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8016d78:	4621      	mov	r1, r4
 8016d7a:	4628      	mov	r0, r5
 8016d7c:	bcf0      	pop	{r4, r5, r6, r7}
 8016d7e:	f7ff bee5 	b.w	8016b4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08016d84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8016d84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d88:	b093      	sub	sp, #76	@ 0x4c
 8016d8a:	4681      	mov	r9, r0
 8016d8c:	4688      	mov	r8, r1
 8016d8e:	6810      	ldr	r0, [r2, #0]
 8016d90:	6851      	ldr	r1, [r2, #4]
 8016d92:	ac0e      	add	r4, sp, #56	@ 0x38
 8016d94:	4616      	mov	r6, r2
 8016d96:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8016d9a:	4f6b      	ldr	r7, [pc, #428]	@ (8016f48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8016d9c:	c403      	stmia	r4!, {r0, r1}
 8016d9e:	6818      	ldr	r0, [r3, #0]
 8016da0:	ac10      	add	r4, sp, #64	@ 0x40
 8016da2:	6859      	ldr	r1, [r3, #4]
 8016da4:	c403      	stmia	r4!, {r0, r1}
 8016da6:	a80e      	add	r0, sp, #56	@ 0x38
 8016da8:	f7f8 f826 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016dac:	4631      	mov	r1, r6
 8016dae:	a810      	add	r0, sp, #64	@ 0x40
 8016db0:	4e66      	ldr	r6, [pc, #408]	@ (8016f4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8016db2:	f7f8 f849 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016db6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8016dba:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8016dbe:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8016dc2:	6830      	ldr	r0, [r6, #0]
 8016dc4:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016dc8:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8016dcc:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8016dd0:	4489      	add	r9, r1
 8016dd2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8016dd6:	440a      	add	r2, r1
 8016dd8:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8016ddc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8016de0:	4413      	add	r3, r2
 8016de2:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8016de6:	6803      	ldr	r3, [r0, #0]
 8016de8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016dea:	4798      	blx	r3
 8016dec:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8016df0:	6830      	ldr	r0, [r6, #0]
 8016df2:	d01d      	beq.n	8016e30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8016df4:	2200      	movs	r2, #0
 8016df6:	6801      	ldr	r1, [r0, #0]
 8016df8:	b2a4      	uxth	r4, r4
 8016dfa:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8016dfe:	b2ad      	uxth	r5, r5
 8016e00:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8016e04:	220b      	movs	r2, #11
 8016e06:	9207      	str	r2, [sp, #28]
 8016e08:	883a      	ldrh	r2, [r7, #0]
 8016e0a:	9502      	str	r5, [sp, #8]
 8016e0c:	9206      	str	r2, [sp, #24]
 8016e0e:	2201      	movs	r2, #1
 8016e10:	9401      	str	r4, [sp, #4]
 8016e12:	e9cd a204 	strd	sl, r2, [sp, #16]
 8016e16:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8016e1a:	9203      	str	r2, [sp, #12]
 8016e1c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8016e20:	9200      	str	r2, [sp, #0]
 8016e22:	4642      	mov	r2, r8
 8016e24:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 8016e26:	4649      	mov	r1, r9
 8016e28:	47a0      	blx	r4
 8016e2a:	b013      	add	sp, #76	@ 0x4c
 8016e2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e30:	6803      	ldr	r3, [r0, #0]
 8016e32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016e34:	4798      	blx	r3
 8016e36:	883b      	ldrh	r3, [r7, #0]
 8016e38:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016e3c:	f04f 0e04 	mov.w	lr, #4
 8016e40:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8016e44:	435d      	muls	r5, r3
 8016e46:	fb03 1202 	mla	r2, r3, r2, r1
 8016e4a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016e4e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8016e52:	920c      	str	r2, [sp, #48]	@ 0x30
 8016e54:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8016e58:	1b12      	subs	r2, r2, r4
 8016e5a:	920d      	str	r2, [sp, #52]	@ 0x34
 8016e5c:	0062      	lsls	r2, r4, #1
 8016e5e:	1b1c      	subs	r4, r3, r4
 8016e60:	920a      	str	r2, [sp, #40]	@ 0x28
 8016e62:	0063      	lsls	r3, r4, #1
 8016e64:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016e66:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016e68:	4298      	cmp	r0, r3
 8016e6a:	d266      	bcs.n	8016f3a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8016e6c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016e6e:	eb00 0b03 	add.w	fp, r0, r3
 8016e72:	4558      	cmp	r0, fp
 8016e74:	d25c      	bcs.n	8016f30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8016e76:	f819 3b01 	ldrb.w	r3, [r9], #1
 8016e7a:	fb1e e303 	smlabb	r3, lr, r3, lr
 8016e7e:	f858 2003 	ldr.w	r2, [r8, r3]
 8016e82:	0e11      	lsrs	r1, r2, #24
 8016e84:	d012      	beq.n	8016eac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8016e86:	29ff      	cmp	r1, #255	@ 0xff
 8016e88:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8016e8c:	d110      	bne.n	8016eb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8016e8e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8016e92:	d10d      	bne.n	8016eb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8016e94:	0953      	lsrs	r3, r2, #5
 8016e96:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8016e9a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016e9e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016ea2:	f027 0707 	bic.w	r7, r7, #7
 8016ea6:	431f      	orrs	r7, r3
 8016ea8:	433a      	orrs	r2, r7
 8016eaa:	8002      	strh	r2, [r0, #0]
 8016eac:	3002      	adds	r0, #2
 8016eae:	e7e0      	b.n	8016e72 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8016eb0:	fb0a f101 	mul.w	r1, sl, r1
 8016eb4:	8806      	ldrh	r6, [r0, #0]
 8016eb6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8016eba:	b2d2      	uxtb	r2, r2
 8016ebc:	1c4b      	adds	r3, r1, #1
 8016ebe:	1235      	asrs	r5, r6, #8
 8016ec0:	10f4      	asrs	r4, r6, #3
 8016ec2:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8016ec6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8016eca:	00f6      	lsls	r6, r6, #3
 8016ecc:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8016ed0:	121b      	asrs	r3, r3, #8
 8016ed2:	b2f6      	uxtb	r6, r6
 8016ed4:	b299      	uxth	r1, r3
 8016ed6:	43db      	mvns	r3, r3
 8016ed8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8016edc:	fb1c fc01 	smulbb	ip, ip, r1
 8016ee0:	b2db      	uxtb	r3, r3
 8016ee2:	fb12 f201 	smulbb	r2, r2, r1
 8016ee6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016eea:	fb05 c503 	mla	r5, r5, r3, ip
 8016eee:	b2ff      	uxtb	r7, r7
 8016ef0:	fb06 2203 	mla	r2, r6, r3, r2
 8016ef4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8016ef8:	fb17 f701 	smulbb	r7, r7, r1
 8016efc:	b2ad      	uxth	r5, r5
 8016efe:	b292      	uxth	r2, r2
 8016f00:	fb04 7403 	mla	r4, r4, r3, r7
 8016f04:	f105 0c01 	add.w	ip, r5, #1
 8016f08:	1c57      	adds	r7, r2, #1
 8016f0a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8016f0e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8016f12:	b2a4      	uxth	r4, r4
 8016f14:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8016f18:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016f1c:	433d      	orrs	r5, r7
 8016f1e:	1c67      	adds	r7, r4, #1
 8016f20:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8016f24:	0964      	lsrs	r4, r4, #5
 8016f26:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8016f2a:	4325      	orrs	r5, r4
 8016f2c:	8005      	strh	r5, [r0, #0]
 8016f2e:	e7bd      	b.n	8016eac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8016f30:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016f32:	4418      	add	r0, r3
 8016f34:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016f36:	4499      	add	r9, r3
 8016f38:	e795      	b.n	8016e66 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8016f3a:	4b04      	ldr	r3, [pc, #16]	@ (8016f4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8016f3c:	6818      	ldr	r0, [r3, #0]
 8016f3e:	6803      	ldr	r3, [r0, #0]
 8016f40:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016f42:	4798      	blx	r3
 8016f44:	e771      	b.n	8016e2a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8016f46:	bf00      	nop
 8016f48:	200169fa 	.word	0x200169fa
 8016f4c:	20016a00 	.word	0x20016a00

08016f50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8016f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f54:	b087      	sub	sp, #28
 8016f56:	4680      	mov	r8, r0
 8016f58:	460d      	mov	r5, r1
 8016f5a:	4614      	mov	r4, r2
 8016f5c:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8016f60:	2e00      	cmp	r6, #0
 8016f62:	f000 80b9 	beq.w	80170d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8016f66:	6810      	ldr	r0, [r2, #0]
 8016f68:	af02      	add	r7, sp, #8
 8016f6a:	6851      	ldr	r1, [r2, #4]
 8016f6c:	c703      	stmia	r7!, {r0, r1}
 8016f6e:	6818      	ldr	r0, [r3, #0]
 8016f70:	af04      	add	r7, sp, #16
 8016f72:	6859      	ldr	r1, [r3, #4]
 8016f74:	c703      	stmia	r7!, {r0, r1}
 8016f76:	a802      	add	r0, sp, #8
 8016f78:	f7f7 ff3e 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f7c:	4621      	mov	r1, r4
 8016f7e:	a804      	add	r0, sp, #16
 8016f80:	f7f7 ff62 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f84:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8016f88:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016f8c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8016f90:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8016f94:	fb14 2103 	smlabb	r1, r4, r3, r2
 8016f98:	eb08 0401 	add.w	r4, r8, r1
 8016f9c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016fa0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8016fa4:	440a      	add	r2, r1
 8016fa6:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8016faa:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016fae:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016fb2:	4413      	add	r3, r2
 8016fb4:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016fb8:	4b49      	ldr	r3, [pc, #292]	@ (80170e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8016fba:	6818      	ldr	r0, [r3, #0]
 8016fbc:	6803      	ldr	r3, [r0, #0]
 8016fbe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016fc0:	4798      	blx	r3
 8016fc2:	4b48      	ldr	r3, [pc, #288]	@ (80170e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8016fc4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8016fc8:	2eff      	cmp	r6, #255	@ 0xff
 8016fca:	881a      	ldrh	r2, [r3, #0]
 8016fcc:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8016fd0:	fb02 c101 	mla	r1, r2, r1, ip
 8016fd4:	fb02 f207 	mul.w	r2, r2, r7
 8016fd8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016fdc:	f105 0104 	add.w	r1, r5, #4
 8016fe0:	461d      	mov	r5, r3
 8016fe2:	d05a      	beq.n	801709a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8016fe4:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8016fe8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016fec:	b2b6      	uxth	r6, r6
 8016fee:	9301      	str	r3, [sp, #4]
 8016ff0:	fa1f fe8e 	uxth.w	lr, lr
 8016ff4:	4282      	cmp	r2, r0
 8016ff6:	d96a      	bls.n	80170ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8016ff8:	eb00 0b0a 	add.w	fp, r0, sl
 8016ffc:	4583      	cmp	fp, r0
 8016ffe:	d940      	bls.n	8017082 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017000:	8805      	ldrh	r5, [r0, #0]
 8017002:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017006:	122f      	asrs	r7, r5, #8
 8017008:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801700c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017010:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017014:	00ed      	lsls	r5, r5, #3
 8017016:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801701a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801701e:	fb17 f70e 	smulbb	r7, r7, lr
 8017022:	b2ed      	uxtb	r5, r5
 8017024:	fb19 f90e 	smulbb	r9, r9, lr
 8017028:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801702c:	fb15 f50e 	smulbb	r5, r5, lr
 8017030:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017034:	10df      	asrs	r7, r3, #3
 8017036:	00db      	lsls	r3, r3, #3
 8017038:	fa1f fc8c 	uxth.w	ip, ip
 801703c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017040:	b2db      	uxtb	r3, r3
 8017042:	fb07 9706 	mla	r7, r7, r6, r9
 8017046:	f10c 0901 	add.w	r9, ip, #1
 801704a:	fb03 5306 	mla	r3, r3, r6, r5
 801704e:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017052:	b29b      	uxth	r3, r3
 8017054:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8017058:	b2bf      	uxth	r7, r7
 801705a:	f103 0c01 	add.w	ip, r3, #1
 801705e:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017062:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017066:	ea4c 0c09 	orr.w	ip, ip, r9
 801706a:	f107 0901 	add.w	r9, r7, #1
 801706e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017072:	097f      	lsrs	r7, r7, #5
 8017074:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8017078:	ea4c 0c07 	orr.w	ip, ip, r7
 801707c:	f820 cb02 	strh.w	ip, [r0], #2
 8017080:	e7bc      	b.n	8016ffc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017082:	9b01      	ldr	r3, [sp, #4]
 8017084:	881b      	ldrh	r3, [r3, #0]
 8017086:	eba3 0308 	sub.w	r3, r3, r8
 801708a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801708e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017092:	eba3 0308 	sub.w	r3, r3, r8
 8017096:	441c      	add	r4, r3
 8017098:	e7ac      	b.n	8016ff4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801709a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801709e:	4282      	cmp	r2, r0
 80170a0:	d915      	bls.n	80170ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80170a2:	eb00 060a 	add.w	r6, r0, sl
 80170a6:	4286      	cmp	r6, r0
 80170a8:	d906      	bls.n	80170b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80170aa:	f814 3b01 	ldrb.w	r3, [r4], #1
 80170ae:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80170b2:	f820 3b02 	strh.w	r3, [r0], #2
 80170b6:	e7f6      	b.n	80170a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80170b8:	882b      	ldrh	r3, [r5, #0]
 80170ba:	eba3 0308 	sub.w	r3, r3, r8
 80170be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80170c2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80170c6:	eba3 0308 	sub.w	r3, r3, r8
 80170ca:	441c      	add	r4, r3
 80170cc:	e7e7      	b.n	801709e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80170ce:	4b04      	ldr	r3, [pc, #16]	@ (80170e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80170d0:	6818      	ldr	r0, [r3, #0]
 80170d2:	6803      	ldr	r3, [r0, #0]
 80170d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80170d6:	4798      	blx	r3
 80170d8:	b007      	add	sp, #28
 80170da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170de:	bf00      	nop
 80170e0:	20016a00 	.word	0x20016a00
 80170e4:	200169fa 	.word	0x200169fa

080170e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80170e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170ec:	b091      	sub	sp, #68	@ 0x44
 80170ee:	4680      	mov	r8, r0
 80170f0:	460f      	mov	r7, r1
 80170f2:	4614      	mov	r4, r2
 80170f4:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 80170f8:	2d00      	cmp	r5, #0
 80170fa:	d051      	beq.n	80171a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80170fc:	6810      	ldr	r0, [r2, #0]
 80170fe:	ae0c      	add	r6, sp, #48	@ 0x30
 8017100:	6851      	ldr	r1, [r2, #4]
 8017102:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8017304 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017106:	c603      	stmia	r6!, {r0, r1}
 8017108:	6818      	ldr	r0, [r3, #0]
 801710a:	ae0e      	add	r6, sp, #56	@ 0x38
 801710c:	6859      	ldr	r1, [r3, #4]
 801710e:	c603      	stmia	r6!, {r0, r1}
 8017110:	a80c      	add	r0, sp, #48	@ 0x30
 8017112:	f7f7 fe71 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017116:	4621      	mov	r1, r4
 8017118:	a80e      	add	r0, sp, #56	@ 0x38
 801711a:	f7f7 fe95 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801711e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8017122:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8017126:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801712a:	f8d9 0000 	ldr.w	r0, [r9]
 801712e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017132:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8017136:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801713a:	eb08 0401 	add.w	r4, r8, r1
 801713e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8017142:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8017308 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8017146:	440a      	add	r2, r1
 8017148:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801714c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8017150:	4413      	add	r3, r2
 8017152:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8017156:	6803      	ldr	r3, [r0, #0]
 8017158:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801715a:	4798      	blx	r3
 801715c:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8017160:	f8d9 0000 	ldr.w	r0, [r9]
 8017164:	d01f      	beq.n	80171a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8017166:	2200      	movs	r2, #0
 8017168:	6801      	ldr	r1, [r0, #0]
 801716a:	b2b6      	uxth	r6, r6
 801716c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8017170:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017174:	220b      	movs	r2, #11
 8017176:	9207      	str	r2, [sp, #28]
 8017178:	f8b8 2000 	ldrh.w	r2, [r8]
 801717c:	9601      	str	r6, [sp, #4]
 801717e:	9206      	str	r2, [sp, #24]
 8017180:	2201      	movs	r2, #1
 8017182:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8017186:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801718a:	9203      	str	r2, [sp, #12]
 801718c:	fa1f f28a 	uxth.w	r2, sl
 8017190:	9202      	str	r2, [sp, #8]
 8017192:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8017196:	9200      	str	r2, [sp, #0]
 8017198:	463a      	mov	r2, r7
 801719a:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801719c:	4621      	mov	r1, r4
 801719e:	47a8      	blx	r5
 80171a0:	b011      	add	sp, #68	@ 0x44
 80171a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171a6:	6803      	ldr	r3, [r0, #0]
 80171a8:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80171ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80171ae:	4798      	blx	r3
 80171b0:	f8b8 2000 	ldrh.w	r2, [r8]
 80171b4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80171b8:	2dff      	cmp	r5, #255	@ 0xff
 80171ba:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 80171be:	fb0a fa02 	mul.w	sl, sl, r2
 80171c2:	fb02 1303 	mla	r3, r2, r3, r1
 80171c6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80171ca:	d062      	beq.n	8017292 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80171cc:	ea6f 0c05 	mvn.w	ip, r5
 80171d0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80171d4:	b2ad      	uxth	r5, r5
 80171d6:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 80171da:	fa5f fc8c 	uxtb.w	ip, ip
 80171de:	930a      	str	r3, [sp, #40]	@ 0x28
 80171e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80171e2:	4298      	cmp	r0, r3
 80171e4:	f080 8085 	bcs.w	80172f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80171e8:	eb00 0b09 	add.w	fp, r0, r9
 80171ec:	4558      	cmp	r0, fp
 80171ee:	d246      	bcs.n	801727e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 80171f0:	f814 eb01 	ldrb.w	lr, [r4], #1
 80171f4:	2303      	movs	r3, #3
 80171f6:	2204      	movs	r2, #4
 80171f8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80171fc:	8803      	ldrh	r3, [r0, #0]
 80171fe:	eb07 0a0e 	add.w	sl, r7, lr
 8017202:	1219      	asrs	r1, r3, #8
 8017204:	10da      	asrs	r2, r3, #3
 8017206:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801720a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801720e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8017212:	00db      	lsls	r3, r3, #3
 8017214:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8017218:	fb18 f805 	smulbb	r8, r8, r5
 801721c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8017220:	fb1e fe05 	smulbb	lr, lr, r5
 8017224:	b2db      	uxtb	r3, r3
 8017226:	fb01 810c 	mla	r1, r1, ip, r8
 801722a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801722e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8017232:	fb18 f805 	smulbb	r8, r8, r5
 8017236:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801723a:	b289      	uxth	r1, r1
 801723c:	fb02 820c 	mla	r2, r2, ip, r8
 8017240:	fb03 e30c 	mla	r3, r3, ip, lr
 8017244:	f101 0801 	add.w	r8, r1, #1
 8017248:	b292      	uxth	r2, r2
 801724a:	b29b      	uxth	r3, r3
 801724c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8017250:	f102 0801 	add.w	r8, r2, #1
 8017254:	f103 0e01 	add.w	lr, r3, #1
 8017258:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801725c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8017260:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8017264:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017268:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801726c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8017270:	ea4e 0101 	orr.w	r1, lr, r1
 8017274:	ea41 0108 	orr.w	r1, r1, r8
 8017278:	f820 1b02 	strh.w	r1, [r0], #2
 801727c:	e7b6      	b.n	80171ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801727e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017280:	881b      	ldrh	r3, [r3, #0]
 8017282:	1b9b      	subs	r3, r3, r6
 8017284:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017288:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801728c:	1b9b      	subs	r3, r3, r6
 801728e:	441c      	add	r4, r3
 8017290:	e7a6      	b.n	80171e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8017292:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8017296:	2203      	movs	r2, #3
 8017298:	2504      	movs	r5, #4
 801729a:	4919      	ldr	r1, [pc, #100]	@ (8017300 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801729c:	4550      	cmp	r0, sl
 801729e:	d228      	bcs.n	80172f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80172a0:	eb00 0c09 	add.w	ip, r0, r9
 80172a4:	4560      	cmp	r0, ip
 80172a6:	4623      	mov	r3, r4
 80172a8:	d219      	bcs.n	80172de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80172aa:	f893 e000 	ldrb.w	lr, [r3]
 80172ae:	3401      	adds	r4, #1
 80172b0:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80172b4:	eb07 0b0e 	add.w	fp, r7, lr
 80172b8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80172bc:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80172c0:	f89b b001 	ldrb.w	fp, [fp, #1]
 80172c4:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80172c8:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80172cc:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80172d0:	ea43 030b 	orr.w	r3, r3, fp
 80172d4:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80172d8:	f820 3b02 	strh.w	r3, [r0], #2
 80172dc:	e7e2      	b.n	80172a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80172de:	f8b8 3000 	ldrh.w	r3, [r8]
 80172e2:	1b9b      	subs	r3, r3, r6
 80172e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80172e8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80172ec:	1b9b      	subs	r3, r3, r6
 80172ee:	441c      	add	r4, r3
 80172f0:	e7d4      	b.n	801729c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80172f2:	4b04      	ldr	r3, [pc, #16]	@ (8017304 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80172f4:	6818      	ldr	r0, [r3, #0]
 80172f6:	6803      	ldr	r3, [r0, #0]
 80172f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80172fa:	4798      	blx	r3
 80172fc:	e750      	b.n	80171a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80172fe:	bf00      	nop
 8017300:	fffff800 	.word	0xfffff800
 8017304:	20016a00 	.word	0x20016a00
 8017308:	200169fa 	.word	0x200169fa

0801730c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801730c:	b4f0      	push	{r4, r5, r6, r7}
 801730e:	460c      	mov	r4, r1
 8017310:	4611      	mov	r1, r2
 8017312:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8017316:	461a      	mov	r2, r3
 8017318:	780f      	ldrb	r7, [r1, #0]
 801731a:	9b04      	ldr	r3, [sp, #16]
 801731c:	2f01      	cmp	r7, #1
 801731e:	784e      	ldrb	r6, [r1, #1]
 8017320:	d038      	beq.n	8017394 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8017322:	d31f      	bcc.n	8017364 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8017324:	2f02      	cmp	r7, #2
 8017326:	d14d      	bne.n	80173c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8017328:	2e03      	cmp	r6, #3
 801732a:	d84b      	bhi.n	80173c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801732c:	e8df f006 	tbb	[pc, r6]
 8017330:	17140702 	.word	0x17140702
 8017334:	9504      	str	r5, [sp, #16]
 8017336:	4620      	mov	r0, r4
 8017338:	bcf0      	pop	{r4, r5, r6, r7}
 801733a:	f7ff be09 	b.w	8016f50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801733e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8017340:	2800      	cmp	r0, #0
 8017342:	d03f      	beq.n	80173c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8017344:	6806      	ldr	r6, [r0, #0]
 8017346:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801734a:	68b5      	ldr	r5, [r6, #8]
 801734c:	4613      	mov	r3, r2
 801734e:	46ac      	mov	ip, r5
 8017350:	460a      	mov	r2, r1
 8017352:	4621      	mov	r1, r4
 8017354:	bcf0      	pop	{r4, r5, r6, r7}
 8017356:	4760      	bx	ip
 8017358:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801735c:	e7f0      	b.n	8017340 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801735e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8017362:	e7ed      	b.n	8017340 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8017364:	2e03      	cmp	r6, #3
 8017366:	d82d      	bhi.n	80173c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8017368:	e8df f006 	tbb	[pc, r6]
 801736c:	110e0702 	.word	0x110e0702
 8017370:	9504      	str	r5, [sp, #16]
 8017372:	4620      	mov	r0, r4
 8017374:	bcf0      	pop	{r4, r5, r6, r7}
 8017376:	f7ff bd05 	b.w	8016d84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801737a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801737c:	b310      	cbz	r0, 80173c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801737e:	6806      	ldr	r6, [r0, #0]
 8017380:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8017384:	68f5      	ldr	r5, [r6, #12]
 8017386:	e7e1      	b.n	801734c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8017388:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801738c:	e7f6      	b.n	801737c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801738e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8017392:	e7f3      	b.n	801737c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8017394:	2e03      	cmp	r6, #3
 8017396:	d815      	bhi.n	80173c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8017398:	e8df f006 	tbb	[pc, r6]
 801739c:	110e0702 	.word	0x110e0702
 80173a0:	9504      	str	r5, [sp, #16]
 80173a2:	4620      	mov	r0, r4
 80173a4:	bcf0      	pop	{r4, r5, r6, r7}
 80173a6:	f7ff be9f 	b.w	80170e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80173aa:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80173ac:	b150      	cbz	r0, 80173c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80173ae:	6806      	ldr	r6, [r0, #0]
 80173b0:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80173b4:	6935      	ldr	r5, [r6, #16]
 80173b6:	e7c9      	b.n	801734c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80173b8:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80173bc:	e7f6      	b.n	80173ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80173be:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80173c2:	e7f3      	b.n	80173ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80173c4:	bcf0      	pop	{r4, r5, r6, r7}
 80173c6:	4770      	bx	lr

080173c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80173c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173cc:	b087      	sub	sp, #28
 80173ce:	4604      	mov	r4, r0
 80173d0:	460e      	mov	r6, r1
 80173d2:	6810      	ldr	r0, [r2, #0]
 80173d4:	6851      	ldr	r1, [r2, #4]
 80173d6:	ad02      	add	r5, sp, #8
 80173d8:	4617      	mov	r7, r2
 80173da:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 80173de:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 8017610 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80173e2:	c503      	stmia	r5!, {r0, r1}
 80173e4:	6818      	ldr	r0, [r3, #0]
 80173e6:	ad04      	add	r5, sp, #16
 80173e8:	6859      	ldr	r1, [r3, #4]
 80173ea:	c503      	stmia	r5!, {r0, r1}
 80173ec:	a802      	add	r0, sp, #8
 80173ee:	f7f7 fd03 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173f2:	4639      	mov	r1, r7
 80173f4:	a804      	add	r0, sp, #16
 80173f6:	f7f7 fd27 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80173fa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80173fe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017402:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8017406:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801740a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801740e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8017412:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8017416:	440e      	add	r6, r1
 8017418:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801741c:	440a      	add	r2, r1
 801741e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017422:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017426:	4413      	add	r3, r2
 8017428:	f8ad 3012 	strh.w	r3, [sp, #18]
 801742c:	4b77      	ldr	r3, [pc, #476]	@ (801760c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801742e:	6818      	ldr	r0, [r3, #0]
 8017430:	6803      	ldr	r3, [r0, #0]
 8017432:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017434:	4798      	blx	r3
 8017436:	f8b9 b000 	ldrh.w	fp, [r9]
 801743a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801743e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8017442:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017446:	fb05 f50b 	mul.w	r5, r5, fp
 801744a:	fb0b 2303 	mla	r3, fp, r3, r2
 801744e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017452:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017456:	9300      	str	r3, [sp, #0]
 8017458:	d069      	beq.n	801752e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801745a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801745e:	4558      	cmp	r0, fp
 8017460:	f080 80cc 	bcs.w	80175fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8017464:	9b00      	ldr	r3, [sp, #0]
 8017466:	4631      	mov	r1, r6
 8017468:	18c3      	adds	r3, r0, r3
 801746a:	9301      	str	r3, [sp, #4]
 801746c:	9b01      	ldr	r3, [sp, #4]
 801746e:	4298      	cmp	r0, r3
 8017470:	d24f      	bcs.n	8017512 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8017472:	f811 2b01 	ldrb.w	r2, [r1], #1
 8017476:	2a00      	cmp	r2, #0
 8017478:	d048      	beq.n	801750c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801747a:	fb0a f202 	mul.w	r2, sl, r2
 801747e:	1c53      	adds	r3, r2, #1
 8017480:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017484:	121b      	asrs	r3, r3, #8
 8017486:	d041      	beq.n	801750c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8017488:	8802      	ldrh	r2, [r0, #0]
 801748a:	b29e      	uxth	r6, r3
 801748c:	f8b4 c000 	ldrh.w	ip, [r4]
 8017490:	43db      	mvns	r3, r3
 8017492:	1215      	asrs	r5, r2, #8
 8017494:	b2db      	uxtb	r3, r3
 8017496:	ea4f 272c 	mov.w	r7, ip, asr #8
 801749a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801749e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80174a2:	fb15 f503 	smulbb	r5, r5, r3
 80174a6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80174aa:	00d2      	lsls	r2, r2, #3
 80174ac:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80174b0:	fb07 5706 	mla	r7, r7, r6, r5
 80174b4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80174b8:	b2d2      	uxtb	r2, r2
 80174ba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80174be:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80174c2:	fb1e fe03 	smulbb	lr, lr, r3
 80174c6:	b2bf      	uxth	r7, r7
 80174c8:	fb12 f203 	smulbb	r2, r2, r3
 80174cc:	fa5f fc8c 	uxtb.w	ip, ip
 80174d0:	fb05 e506 	mla	r5, r5, r6, lr
 80174d4:	f107 0e01 	add.w	lr, r7, #1
 80174d8:	fb0c 2c06 	mla	ip, ip, r6, r2
 80174dc:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80174e0:	fa1f fc8c 	uxth.w	ip, ip
 80174e4:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 80174e8:	b2ad      	uxth	r5, r5
 80174ea:	f10c 0701 	add.w	r7, ip, #1
 80174ee:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80174f2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80174f6:	ea47 070e 	orr.w	r7, r7, lr
 80174fa:	f105 0e01 	add.w	lr, r5, #1
 80174fe:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8017502:	096d      	lsrs	r5, r5, #5
 8017504:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017508:	432f      	orrs	r7, r5
 801750a:	8007      	strh	r7, [r0, #0]
 801750c:	3002      	adds	r0, #2
 801750e:	3402      	adds	r4, #2
 8017510:	e7ac      	b.n	801746c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8017512:	f8b9 3000 	ldrh.w	r3, [r9]
 8017516:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801751a:	eba3 0308 	sub.w	r3, r3, r8
 801751e:	eba6 0608 	sub.w	r6, r6, r8
 8017522:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017526:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801752a:	440e      	add	r6, r1
 801752c:	e797      	b.n	801745e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801752e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8017532:	42a8      	cmp	r0, r5
 8017534:	d262      	bcs.n	80175fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8017536:	9b00      	ldr	r3, [sp, #0]
 8017538:	4631      	mov	r1, r6
 801753a:	eb00 0b03 	add.w	fp, r0, r3
 801753e:	4558      	cmp	r0, fp
 8017540:	d24e      	bcs.n	80175e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8017542:	f811 3b01 	ldrb.w	r3, [r1], #1
 8017546:	b12b      	cbz	r3, 8017554 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8017548:	2bff      	cmp	r3, #255	@ 0xff
 801754a:	f8b4 e000 	ldrh.w	lr, [r4]
 801754e:	d104      	bne.n	801755a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8017550:	f8a0 e000 	strh.w	lr, [r0]
 8017554:	3002      	adds	r0, #2
 8017556:	3402      	adds	r4, #2
 8017558:	e7f1      	b.n	801753e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801755a:	8802      	ldrh	r2, [r0, #0]
 801755c:	b29f      	uxth	r7, r3
 801755e:	43db      	mvns	r3, r3
 8017560:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017564:	1216      	asrs	r6, r2, #8
 8017566:	b2db      	uxtb	r3, r3
 8017568:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801756c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017570:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8017574:	00d2      	lsls	r2, r2, #3
 8017576:	fb16 f603 	smulbb	r6, r6, r3
 801757a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801757e:	b2d2      	uxtb	r2, r2
 8017580:	fb0c 6c07 	mla	ip, ip, r7, r6
 8017584:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8017588:	fb1a fa03 	smulbb	sl, sl, r3
 801758c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017590:	fa1f fc8c 	uxth.w	ip, ip
 8017594:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017598:	fb12 f303 	smulbb	r3, r2, r3
 801759c:	fa5f fe8e 	uxtb.w	lr, lr
 80175a0:	fb06 a607 	mla	r6, r6, r7, sl
 80175a4:	f10c 0201 	add.w	r2, ip, #1
 80175a8:	fb0e 3307 	mla	r3, lr, r7, r3
 80175ac:	b2b6      	uxth	r6, r6
 80175ae:	b29b      	uxth	r3, r3
 80175b0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80175b4:	f106 0a01 	add.w	sl, r6, #1
 80175b8:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 80175bc:	f103 0c01 	add.w	ip, r3, #1
 80175c0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80175c4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80175c8:	0976      	lsrs	r6, r6, #5
 80175ca:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80175ce:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80175d2:	ea4c 0c02 	orr.w	ip, ip, r2
 80175d6:	ea4c 0c06 	orr.w	ip, ip, r6
 80175da:	f8a0 c000 	strh.w	ip, [r0]
 80175de:	e7b9      	b.n	8017554 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80175e0:	f8b9 3000 	ldrh.w	r3, [r9]
 80175e4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80175e8:	eba3 0308 	sub.w	r3, r3, r8
 80175ec:	eba6 0608 	sub.w	r6, r6, r8
 80175f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80175f4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80175f8:	440e      	add	r6, r1
 80175fa:	e79a      	b.n	8017532 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80175fc:	4b03      	ldr	r3, [pc, #12]	@ (801760c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80175fe:	6818      	ldr	r0, [r3, #0]
 8017600:	6803      	ldr	r3, [r0, #0]
 8017602:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017604:	4798      	blx	r3
 8017606:	b007      	add	sp, #28
 8017608:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801760c:	20016a00 	.word	0x20016a00
 8017610:	200169fa 	.word	0x200169fa

08017614 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8017614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017618:	b089      	sub	sp, #36	@ 0x24
 801761a:	4682      	mov	sl, r0
 801761c:	460f      	mov	r7, r1
 801761e:	4691      	mov	r9, r2
 8017620:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8017624:	4698      	mov	r8, r3
 8017626:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8017628:	2e00      	cmp	r6, #0
 801762a:	d03d      	beq.n	80176a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801762c:	4608      	mov	r0, r1
 801762e:	f7fa fe49 	bl	80122c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017632:	4605      	mov	r5, r0
 8017634:	4638      	mov	r0, r7
 8017636:	f7fa fe79 	bl	801232c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801763a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801763e:	4638      	mov	r0, r7
 8017640:	f8ad 9008 	strh.w	r9, [sp, #8]
 8017644:	f8ad 500c 	strh.w	r5, [sp, #12]
 8017648:	f8ad 800a 	strh.w	r8, [sp, #10]
 801764c:	f7fa ff26 	bl	801249c <_ZNK8touchgfx6Bitmap7getDataEv>
 8017650:	4605      	mov	r5, r0
 8017652:	4638      	mov	r0, r7
 8017654:	f7fa ff52 	bl	80124fc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8017658:	4681      	mov	r9, r0
 801765a:	4638      	mov	r0, r7
 801765c:	f7fa ffa2 	bl	80125a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017660:	280b      	cmp	r0, #11
 8017662:	d821      	bhi.n	80176a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8017664:	e8df f000 	tbb	[pc, r0]
 8017668:	2006aebe 	.word	0x2006aebe
 801766c:	20202020 	.word	0x20202020
 8017670:	b5202020 	.word	0xb5202020
 8017674:	4bb0      	ldr	r3, [pc, #704]	@ (8017938 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8017676:	6818      	ldr	r0, [r3, #0]
 8017678:	6803      	ldr	r3, [r0, #0]
 801767a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801767c:	4798      	blx	r3
 801767e:	2eff      	cmp	r6, #255	@ 0xff
 8017680:	d101      	bne.n	8017686 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8017682:	0683      	lsls	r3, r0, #26
 8017684:	d506      	bpl.n	8017694 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 8017686:	4633      	mov	r3, r6
 8017688:	4622      	mov	r2, r4
 801768a:	a902      	add	r1, sp, #8
 801768c:	4628      	mov	r0, r5
 801768e:	f7ff f907 	bl	80168a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017692:	e009      	b.n	80176a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8017694:	4638      	mov	r0, r7
 8017696:	f7fa fec9 	bl	801242c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801769a:	b940      	cbnz	r0, 80176ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801769c:	4623      	mov	r3, r4
 801769e:	aa02      	add	r2, sp, #8
 80176a0:	4629      	mov	r1, r5
 80176a2:	4650      	mov	r0, sl
 80176a4:	f7ff f9e2 	bl	8016a6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80176a8:	b009      	add	sp, #36	@ 0x24
 80176aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80176ae:	f10d 0818 	add.w	r8, sp, #24
 80176b2:	4639      	mov	r1, r7
 80176b4:	af04      	add	r7, sp, #16
 80176b6:	4640      	mov	r0, r8
 80176b8:	f7fa fe6c 	bl	8012394 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80176bc:	e898 0003 	ldmia.w	r8, {r0, r1}
 80176c0:	e887 0003 	stmia.w	r7, {r0, r1}
 80176c4:	4638      	mov	r0, r7
 80176c6:	4621      	mov	r1, r4
 80176c8:	f7f1 ff06 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 80176cc:	4638      	mov	r0, r7
 80176ce:	f7f1 ff46 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 80176d2:	2800      	cmp	r0, #0
 80176d4:	d1d7      	bne.n	8017686 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80176d6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80176da:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80176de:	4293      	cmp	r3, r2
 80176e0:	dd12      	ble.n	8017708 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 80176e2:	1a9b      	subs	r3, r3, r2
 80176e4:	f9b4 0000 	ldrsh.w	r0, [r4]
 80176e8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80176ec:	f8ad 0018 	strh.w	r0, [sp, #24]
 80176f0:	4628      	mov	r0, r5
 80176f2:	f8ad 201a 	strh.w	r2, [sp, #26]
 80176f6:	4642      	mov	r2, r8
 80176f8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80176fc:	a902      	add	r1, sp, #8
 80176fe:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017702:	4633      	mov	r3, r6
 8017704:	f7ff f8cc 	bl	80168a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017708:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801770c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017710:	4293      	cmp	r3, r2
 8017712:	dd12      	ble.n	801773a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8017714:	1a9b      	subs	r3, r3, r2
 8017716:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801771a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801771e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017722:	4642      	mov	r2, r8
 8017724:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017728:	4628      	mov	r0, r5
 801772a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801772e:	23ff      	movs	r3, #255	@ 0xff
 8017730:	f8ad 101e 	strh.w	r1, [sp, #30]
 8017734:	a902      	add	r1, sp, #8
 8017736:	f7ff f8b3 	bl	80168a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801773a:	463b      	mov	r3, r7
 801773c:	aa02      	add	r2, sp, #8
 801773e:	4629      	mov	r1, r5
 8017740:	4650      	mov	r0, sl
 8017742:	f7ff f993 	bl	8016a6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8017746:	88a2      	ldrh	r2, [r4, #4]
 8017748:	8823      	ldrh	r3, [r4, #0]
 801774a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801774e:	4413      	add	r3, r2
 8017750:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017754:	440a      	add	r2, r1
 8017756:	b29b      	uxth	r3, r3
 8017758:	b292      	uxth	r2, r2
 801775a:	b218      	sxth	r0, r3
 801775c:	b211      	sxth	r1, r2
 801775e:	4288      	cmp	r0, r1
 8017760:	dd12      	ble.n	8017788 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8017762:	1a9b      	subs	r3, r3, r2
 8017764:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8017768:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801776c:	4642      	mov	r2, r8
 801776e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8017772:	a902      	add	r1, sp, #8
 8017774:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017778:	23ff      	movs	r3, #255	@ 0xff
 801777a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801777e:	4628      	mov	r0, r5
 8017780:	f8ad 601a 	strh.w	r6, [sp, #26]
 8017784:	f7ff f88c 	bl	80168a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017788:	88e2      	ldrh	r2, [r4, #6]
 801778a:	8863      	ldrh	r3, [r4, #2]
 801778c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8017790:	4413      	add	r3, r2
 8017792:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8017796:	440a      	add	r2, r1
 8017798:	b29b      	uxth	r3, r3
 801779a:	b292      	uxth	r2, r2
 801779c:	b218      	sxth	r0, r3
 801779e:	b211      	sxth	r1, r2
 80177a0:	4288      	cmp	r0, r1
 80177a2:	dd81      	ble.n	80176a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80177a4:	1a9b      	subs	r3, r3, r2
 80177a6:	f9b4 6000 	ldrsh.w	r6, [r4]
 80177aa:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80177ae:	4642      	mov	r2, r8
 80177b0:	f8ad 301e 	strh.w	r3, [sp, #30]
 80177b4:	23ff      	movs	r3, #255	@ 0xff
 80177b6:	f8ad 6018 	strh.w	r6, [sp, #24]
 80177ba:	f8ad 101a 	strh.w	r1, [sp, #26]
 80177be:	f8ad 001c 	strh.w	r0, [sp, #28]
 80177c2:	e762      	b.n	801768a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 80177c4:	4633      	mov	r3, r6
 80177c6:	4622      	mov	r2, r4
 80177c8:	a902      	add	r1, sp, #8
 80177ca:	4628      	mov	r0, r5
 80177cc:	f7ff f9be 	bl	8016b4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80177d0:	e76a      	b.n	80176a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80177d2:	e9cd 4600 	strd	r4, r6, [sp]
 80177d6:	ab02      	add	r3, sp, #8
 80177d8:	464a      	mov	r2, r9
 80177da:	4629      	mov	r1, r5
 80177dc:	4650      	mov	r0, sl
 80177de:	f7ff fd95 	bl	801730c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80177e2:	e761      	b.n	80176a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80177e4:	4638      	mov	r0, r7
 80177e6:	f7fa fe21 	bl	801242c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80177ea:	b950      	cbnz	r0, 8017802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 80177ec:	f8da 3000 	ldr.w	r3, [sl]
 80177f0:	aa02      	add	r2, sp, #8
 80177f2:	4629      	mov	r1, r5
 80177f4:	e9cd 6000 	strd	r6, r0, [sp]
 80177f8:	4650      	mov	r0, sl
 80177fa:	68de      	ldr	r6, [r3, #12]
 80177fc:	4623      	mov	r3, r4
 80177fe:	47b0      	blx	r6
 8017800:	e752      	b.n	80176a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8017802:	f10d 0818 	add.w	r8, sp, #24
 8017806:	4639      	mov	r1, r7
 8017808:	af04      	add	r7, sp, #16
 801780a:	4640      	mov	r0, r8
 801780c:	f7fa fdc2 	bl	8012394 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8017810:	e898 0003 	ldmia.w	r8, {r0, r1}
 8017814:	e887 0003 	stmia.w	r7, {r0, r1}
 8017818:	4638      	mov	r0, r7
 801781a:	4621      	mov	r1, r4
 801781c:	f7f1 fe5c 	bl	80094d8 <_ZN8touchgfx4RectaNERKS0_>
 8017820:	4638      	mov	r0, r7
 8017822:	f7f1 fe9c 	bl	800955e <_ZNK8touchgfx4Rect7isEmptyEv>
 8017826:	b138      	cbz	r0, 8017838 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8017828:	4623      	mov	r3, r4
 801782a:	9600      	str	r6, [sp, #0]
 801782c:	aa02      	add	r2, sp, #8
 801782e:	4649      	mov	r1, r9
 8017830:	4628      	mov	r0, r5
 8017832:	f7ff fdc9 	bl	80173c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017836:	e737      	b.n	80176a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8017838:	f8da 3000 	ldr.w	r3, [sl]
 801783c:	aa02      	add	r2, sp, #8
 801783e:	4629      	mov	r1, r5
 8017840:	e9cd 6000 	strd	r6, r0, [sp]
 8017844:	4650      	mov	r0, sl
 8017846:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801784a:	463b      	mov	r3, r7
 801784c:	47d8      	blx	fp
 801784e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017852:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017856:	4293      	cmp	r3, r2
 8017858:	dd13      	ble.n	8017882 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801785a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801785e:	1a9b      	subs	r3, r3, r2
 8017860:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017864:	f8ad 0018 	strh.w	r0, [sp, #24]
 8017868:	4628      	mov	r0, r5
 801786a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801786e:	aa02      	add	r2, sp, #8
 8017870:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017874:	4649      	mov	r1, r9
 8017876:	f8ad 301e 	strh.w	r3, [sp, #30]
 801787a:	4643      	mov	r3, r8
 801787c:	9600      	str	r6, [sp, #0]
 801787e:	f7ff fda3 	bl	80173c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017882:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8017886:	f9b4 2000 	ldrsh.w	r2, [r4]
 801788a:	4293      	cmp	r3, r2
 801788c:	dd13      	ble.n	80178b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801788e:	1a9b      	subs	r3, r3, r2
 8017890:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8017894:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8017898:	f8ad 2018 	strh.w	r2, [sp, #24]
 801789c:	aa02      	add	r2, sp, #8
 801789e:	f8ad 001a 	strh.w	r0, [sp, #26]
 80178a2:	4628      	mov	r0, r5
 80178a4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80178a8:	4643      	mov	r3, r8
 80178aa:	f8ad 101e 	strh.w	r1, [sp, #30]
 80178ae:	4649      	mov	r1, r9
 80178b0:	9600      	str	r6, [sp, #0]
 80178b2:	f7ff fd89 	bl	80173c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80178b6:	88a2      	ldrh	r2, [r4, #4]
 80178b8:	8823      	ldrh	r3, [r4, #0]
 80178ba:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80178be:	4413      	add	r3, r2
 80178c0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80178c4:	440a      	add	r2, r1
 80178c6:	b29b      	uxth	r3, r3
 80178c8:	b292      	uxth	r2, r2
 80178ca:	b218      	sxth	r0, r3
 80178cc:	b211      	sxth	r1, r2
 80178ce:	4288      	cmp	r0, r1
 80178d0:	dd13      	ble.n	80178fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 80178d2:	1a9b      	subs	r3, r3, r2
 80178d4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80178d8:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80178dc:	aa02      	add	r2, sp, #8
 80178de:	f8ad 1018 	strh.w	r1, [sp, #24]
 80178e2:	4649      	mov	r1, r9
 80178e4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80178e8:	4643      	mov	r3, r8
 80178ea:	f8ad 001e 	strh.w	r0, [sp, #30]
 80178ee:	4628      	mov	r0, r5
 80178f0:	9600      	str	r6, [sp, #0]
 80178f2:	f8ad 701a 	strh.w	r7, [sp, #26]
 80178f6:	f7ff fd67 	bl	80173c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80178fa:	88e2      	ldrh	r2, [r4, #6]
 80178fc:	8863      	ldrh	r3, [r4, #2]
 80178fe:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8017902:	4413      	add	r3, r2
 8017904:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8017908:	440a      	add	r2, r1
 801790a:	b29b      	uxth	r3, r3
 801790c:	b292      	uxth	r2, r2
 801790e:	b218      	sxth	r0, r3
 8017910:	b211      	sxth	r1, r2
 8017912:	4288      	cmp	r0, r1
 8017914:	f77f aec8 	ble.w	80176a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8017918:	f9b4 7000 	ldrsh.w	r7, [r4]
 801791c:	1a9b      	subs	r3, r3, r2
 801791e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017922:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017926:	4643      	mov	r3, r8
 8017928:	f8ad 7018 	strh.w	r7, [sp, #24]
 801792c:	f8ad 101a 	strh.w	r1, [sp, #26]
 8017930:	f8ad 001c 	strh.w	r0, [sp, #28]
 8017934:	9600      	str	r6, [sp, #0]
 8017936:	e779      	b.n	801782c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8017938:	20016a00 	.word	0x20016a00

0801793c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801793c:	b180      	cbz	r0, 8017960 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801793e:	2903      	cmp	r1, #3
 8017940:	d81c      	bhi.n	801797c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8017942:	e8df f001 	tbb	[pc, r1]
 8017946:	1d02      	.short	0x1d02
 8017948:	1f08      	.short	0x1f08
 801794a:	4b10      	ldr	r3, [pc, #64]	@ (801798c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801794c:	8818      	ldrh	r0, [r3, #0]
 801794e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017952:	4240      	negs	r0, r0
 8017954:	4770      	bx	lr
 8017956:	4b0d      	ldr	r3, [pc, #52]	@ (801798c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8017958:	8818      	ldrh	r0, [r3, #0]
 801795a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801795e:	4770      	bx	lr
 8017960:	2903      	cmp	r1, #3
 8017962:	d80b      	bhi.n	801797c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8017964:	a301      	add	r3, pc, #4	@ (adr r3, 801796c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8017966:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801796a:	bf00      	nop
 801796c:	08017981 	.word	0x08017981
 8017970:	08017957 	.word	0x08017957
 8017974:	08017985 	.word	0x08017985
 8017978:	0801794b 	.word	0x0801794b
 801797c:	2000      	movs	r0, #0
 801797e:	4770      	bx	lr
 8017980:	2001      	movs	r0, #1
 8017982:	4770      	bx	lr
 8017984:	f04f 30ff 	mov.w	r0, #4294967295
 8017988:	4770      	bx	lr
 801798a:	bf00      	nop
 801798c:	200169fa 	.word	0x200169fa

08017990 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8017990:	b180      	cbz	r0, 80179b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8017992:	2903      	cmp	r1, #3
 8017994:	d81c      	bhi.n	80179d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8017996:	e8df f001 	tbb	[pc, r1]
 801799a:	021d      	.short	0x021d
 801799c:	071f      	.short	0x071f
 801799e:	4b10      	ldr	r3, [pc, #64]	@ (80179e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80179a0:	8818      	ldrh	r0, [r3, #0]
 80179a2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80179a6:	4770      	bx	lr
 80179a8:	4b0d      	ldr	r3, [pc, #52]	@ (80179e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80179aa:	8818      	ldrh	r0, [r3, #0]
 80179ac:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80179b0:	4240      	negs	r0, r0
 80179b2:	4770      	bx	lr
 80179b4:	2903      	cmp	r1, #3
 80179b6:	d80b      	bhi.n	80179d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80179b8:	a301      	add	r3, pc, #4	@ (adr r3, 80179c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80179ba:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80179be:	bf00      	nop
 80179c0:	0801799f 	.word	0x0801799f
 80179c4:	080179d9 	.word	0x080179d9
 80179c8:	080179a9 	.word	0x080179a9
 80179cc:	080179d5 	.word	0x080179d5
 80179d0:	2000      	movs	r0, #0
 80179d2:	4770      	bx	lr
 80179d4:	2001      	movs	r0, #1
 80179d6:	4770      	bx	lr
 80179d8:	f04f 30ff 	mov.w	r0, #4294967295
 80179dc:	4770      	bx	lr
 80179de:	bf00      	nop
 80179e0:	200169fa 	.word	0x200169fa

080179e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80179e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179e8:	b099      	sub	sp, #100	@ 0x64
 80179ea:	910b      	str	r1, [sp, #44]	@ 0x2c
 80179ec:	a914      	add	r1, sp, #80	@ 0x50
 80179ee:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 80179f2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 80179f6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 80179fa:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 80179fe:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8017a02:	e881 000c 	stmia.w	r1, {r2, r3}
 8017a06:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8017a0a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8017a0e:	9309      	str	r3, [sp, #36]	@ 0x24
 8017a10:	f891 900d 	ldrb.w	r9, [r1, #13]
 8017a14:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8017a18:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8017a1c:	9310      	str	r3, [sp, #64]	@ 0x40
 8017a1e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8017a22:	930c      	str	r3, [sp, #48]	@ 0x30
 8017a24:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 8017a28:	798f      	ldrb	r7, [r1, #6]
 8017a2a:	431f      	orrs	r7, r3
 8017a2c:	f000 8195 	beq.w	8017d5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017a30:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8017a34:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8017a38:	f891 9007 	ldrb.w	r9, [r1, #7]
 8017a3c:	ea59 0903 	orrs.w	r9, r9, r3
 8017a40:	f000 818b 	beq.w	8017d5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017a44:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8017a48:	b29b      	uxth	r3, r3
 8017a4a:	2d00      	cmp	r5, #0
 8017a4c:	f000 812e 	beq.w	8017cac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8017a50:	1aed      	subs	r5, r5, r3
 8017a52:	b2ad      	uxth	r5, r5
 8017a54:	042b      	lsls	r3, r5, #16
 8017a56:	d502      	bpl.n	8017a5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8017a58:	1b64      	subs	r4, r4, r5
 8017a5a:	2500      	movs	r5, #0
 8017a5c:	b224      	sxth	r4, r4
 8017a5e:	f9b2 1000 	ldrsh.w	r1, [r2]
 8017a62:	a814      	add	r0, sp, #80	@ 0x50
 8017a64:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 8017a68:	428c      	cmp	r4, r1
 8017a6a:	b28b      	uxth	r3, r1
 8017a6c:	bfbf      	itttt	lt
 8017a6e:	18ed      	addlt	r5, r5, r3
 8017a70:	1b2c      	sublt	r4, r5, r4
 8017a72:	b2a5      	uxthlt	r5, r4
 8017a74:	460c      	movlt	r4, r1
 8017a76:	8891      	ldrh	r1, [r2, #4]
 8017a78:	440b      	add	r3, r1
 8017a7a:	4621      	mov	r1, r4
 8017a7c:	b21b      	sxth	r3, r3
 8017a7e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017a80:	88d3      	ldrh	r3, [r2, #6]
 8017a82:	8852      	ldrh	r2, [r2, #2]
 8017a84:	4413      	add	r3, r2
 8017a86:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017a88:	b21b      	sxth	r3, r3
 8017a8a:	930d      	str	r3, [sp, #52]	@ 0x34
 8017a8c:	4bbd      	ldr	r3, [pc, #756]	@ (8017d84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8017a8e:	f893 b000 	ldrb.w	fp, [r3]
 8017a92:	f10b 3cff 	add.w	ip, fp, #4294967295
 8017a96:	f1dc 0300 	rsbs	r3, ip, #0
 8017a9a:	eb43 030c 	adc.w	r3, r3, ip
 8017a9e:	930e      	str	r3, [sp, #56]	@ 0x38
 8017aa0:	4653      	mov	r3, sl
 8017aa2:	f7f7 f81e 	bl	800eae2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8017aa6:	4621      	mov	r1, r4
 8017aa8:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8017aac:	4653      	mov	r3, sl
 8017aae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017ab0:	a814      	add	r0, sp, #80	@ 0x50
 8017ab2:	f7f7 f833 	bl	800eb1c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8017ab6:	a918      	add	r1, sp, #96	@ 0x60
 8017ab8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8017abc:	a817      	add	r0, sp, #92	@ 0x5c
 8017abe:	f7f7 f959 	bl	800ed74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8017ac2:	f1ba 0f00 	cmp.w	sl, #0
 8017ac6:	f040 80f4 	bne.w	8017cb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8017aca:	f1bb 0f01 	cmp.w	fp, #1
 8017ace:	f040 80f8 	bne.w	8017cc2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8017ad2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017ad4:	2b00      	cmp	r3, #0
 8017ad6:	f040 8145 	bne.w	8017d64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8017ada:	b2ba      	uxth	r2, r7
 8017adc:	b905      	cbnz	r5, 8017ae0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8017ade:	b16e      	cbz	r6, 8017afc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8017ae0:	fb06 5302 	mla	r3, r6, r2, r5
 8017ae4:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8017ae6:	4631      	mov	r1, r6
 8017ae8:	fb08 f303 	mul.w	r3, r8, r3
 8017aec:	f003 0607 	and.w	r6, r3, #7
 8017af0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8017af4:	9328      	str	r3, [sp, #160]	@ 0xa0
 8017af6:	eba9 0301 	sub.w	r3, r9, r1
 8017afa:	930a      	str	r3, [sp, #40]	@ 0x28
 8017afc:	4651      	mov	r1, sl
 8017afe:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8017b00:	f7ff ff1c 	bl	801793c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8017b04:	4681      	mov	r9, r0
 8017b06:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8017b08:	f7ff ff42 	bl	8017990 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8017b0c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017b0e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8017b10:	4683      	mov	fp, r0
 8017b12:	eba3 0a01 	sub.w	sl, r3, r1
 8017b16:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017b18:	459a      	cmp	sl, r3
 8017b1a:	bfa8      	it	ge
 8017b1c:	469a      	movge	sl, r3
 8017b1e:	f1ba 0f00 	cmp.w	sl, #0
 8017b22:	f340 811a 	ble.w	8017d5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017b26:	1b64      	subs	r4, r4, r5
 8017b28:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017b2a:	1b1c      	subs	r4, r3, r4
 8017b2c:	42bc      	cmp	r4, r7
 8017b2e:	bfd4      	ite	le
 8017b30:	ebc5 0504 	rsble	r5, r5, r4
 8017b34:	ebc5 0507 	rsbgt	r5, r5, r7
 8017b38:	2d00      	cmp	r5, #0
 8017b3a:	f340 810e 	ble.w	8017d5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017b3e:	1b52      	subs	r2, r2, r5
 8017b40:	fb08 f302 	mul.w	r3, r8, r2
 8017b44:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017b46:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017b48:	2b00      	cmp	r3, #0
 8017b4a:	f040 8116 	bne.w	8017d7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8017b4e:	4b8e      	ldr	r3, [pc, #568]	@ (8017d88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8017b50:	6818      	ldr	r0, [r3, #0]
 8017b52:	6803      	ldr	r3, [r0, #0]
 8017b54:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017b56:	4798      	blx	r3
 8017b58:	2301      	movs	r3, #1
 8017b5a:	4a8c      	ldr	r2, [pc, #560]	@ (8017d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8017b5c:	fa03 f308 	lsl.w	r3, r3, r8
 8017b60:	8811      	ldrh	r1, [r2, #0]
 8017b62:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 8017b66:	3b01      	subs	r3, #1
 8017b68:	b2db      	uxtb	r3, r3
 8017b6a:	930e      	str	r3, [sp, #56]	@ 0x38
 8017b6c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 8017b70:	fb01 2303 	mla	r3, r1, r3, r2
 8017b74:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017b78:	930a      	str	r3, [sp, #40]	@ 0x28
 8017b7a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8017b7c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8017b80:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017b82:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8017b84:	0a19      	lsrs	r1, r3, #8
 8017b86:	b2cb      	uxtb	r3, r1
 8017b88:	9312      	str	r3, [sp, #72]	@ 0x48
 8017b8a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8017b8c:	b2db      	uxtb	r3, r3
 8017b8e:	9311      	str	r3, [sp, #68]	@ 0x44
 8017b90:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8017b92:	095a      	lsrs	r2, r3, #5
 8017b94:	4b7e      	ldr	r3, [pc, #504]	@ (8017d90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 8017b96:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017b9a:	400b      	ands	r3, r1
 8017b9c:	4313      	orrs	r3, r2
 8017b9e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8017ba0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017ba4:	4313      	orrs	r3, r2
 8017ba6:	b29b      	uxth	r3, r3
 8017ba8:	9310      	str	r3, [sp, #64]	@ 0x40
 8017baa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017bac:	781a      	ldrb	r2, [r3, #0]
 8017bae:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8017bb2:	fb05 b919 	mls	r9, r5, r9, fp
 8017bb6:	4132      	asrs	r2, r6
 8017bb8:	fb03 fb05 	mul.w	fp, r3, r5
 8017bbc:	930d      	str	r3, [sp, #52]	@ 0x34
 8017bbe:	b2d2      	uxtb	r2, r2
 8017bc0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8017bc4:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8017bc8:	f0c0 80f5 	bcc.w	8017db6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8017bcc:	46ae      	mov	lr, r5
 8017bce:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 8017bd2:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8017bd6:	f0c0 80dd 	bcc.w	8017d94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8017bda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017bdc:	4013      	ands	r3, r2
 8017bde:	d055      	beq.n	8017c8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8017be0:	20ff      	movs	r0, #255	@ 0xff
 8017be2:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8017be4:	fb90 f1f1 	sdiv	r1, r0, r1
 8017be8:	434b      	muls	r3, r1
 8017bea:	2bfe      	cmp	r3, #254	@ 0xfe
 8017bec:	dd03      	ble.n	8017bf6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8017bee:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8017bf0:	4281      	cmp	r1, r0
 8017bf2:	f000 80c4 	beq.w	8017d7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 8017bf6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8017bf8:	f8bc 4000 	ldrh.w	r4, [ip]
 8017bfc:	fb11 f303 	smulbb	r3, r1, r3
 8017c00:	1220      	asrs	r0, r4, #8
 8017c02:	b29b      	uxth	r3, r3
 8017c04:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8017c08:	1c59      	adds	r1, r3, #1
 8017c0a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8017c0e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8017c12:	10e1      	asrs	r1, r4, #3
 8017c14:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017c18:	00e4      	lsls	r4, r4, #3
 8017c1a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8017c1e:	b29f      	uxth	r7, r3
 8017c20:	43db      	mvns	r3, r3
 8017c22:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8017c26:	b2db      	uxtb	r3, r3
 8017c28:	b2e4      	uxtb	r4, r4
 8017c2a:	9309      	str	r3, [sp, #36]	@ 0x24
 8017c2c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8017c2e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017c32:	fb13 f907 	smulbb	r9, r3, r7
 8017c36:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017c38:	fb00 9003 	mla	r0, r0, r3, r9
 8017c3c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8017c3e:	fb13 f907 	smulbb	r9, r3, r7
 8017c42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017c44:	b280      	uxth	r0, r0
 8017c46:	fb01 9103 	mla	r1, r1, r3, r9
 8017c4a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8017c4c:	fb13 f707 	smulbb	r7, r3, r7
 8017c50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017c52:	b289      	uxth	r1, r1
 8017c54:	fb04 7403 	mla	r4, r4, r3, r7
 8017c58:	1c43      	adds	r3, r0, #1
 8017c5a:	b2a4      	uxth	r4, r4
 8017c5c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017c60:	f104 0901 	add.w	r9, r4, #1
 8017c64:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8017c68:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8017c6c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8017c70:	ea49 0000 	orr.w	r0, r9, r0
 8017c74:	f101 0901 	add.w	r9, r1, #1
 8017c78:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8017c7c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017c80:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017c84:	ea40 0009 	orr.w	r0, r0, r9
 8017c88:	f8ac 0000 	strh.w	r0, [ip]
 8017c8c:	4446      	add	r6, r8
 8017c8e:	b2b6      	uxth	r6, r6
 8017c90:	2e07      	cmp	r6, #7
 8017c92:	bf89      	itett	hi
 8017c94:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 8017c96:	fa42 f208 	asrls.w	r2, r2, r8
 8017c9a:	2600      	movhi	r6, #0
 8017c9c:	785a      	ldrbhi	r2, [r3, #1]
 8017c9e:	bf8a      	itet	hi
 8017ca0:	3301      	addhi	r3, #1
 8017ca2:	b2d2      	uxtbls	r2, r2
 8017ca4:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 8017ca6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017ca8:	449c      	add	ip, r3
 8017caa:	e792      	b.n	8017bd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8017cac:	441c      	add	r4, r3
 8017cae:	b224      	sxth	r4, r4
 8017cb0:	e6d5      	b.n	8017a5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8017cb2:	f1ba 0f01 	cmp.w	sl, #1
 8017cb6:	f47f af0c 	bne.w	8017ad2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8017cba:	f1bb 0f01 	cmp.w	fp, #1
 8017cbe:	f47f af08 	bne.w	8017ad2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8017cc2:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 8017d88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 8017cc6:	f8db 0000 	ldr.w	r0, [fp]
 8017cca:	6803      	ldr	r3, [r0, #0]
 8017ccc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017cce:	4798      	blx	r3
 8017cd0:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8017cd4:	465a      	mov	r2, fp
 8017cd6:	d006      	beq.n	8017ce6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8017cd8:	f1b8 0f04 	cmp.w	r8, #4
 8017cdc:	d140      	bne.n	8017d60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8017cde:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017ce0:	3300      	adds	r3, #0
 8017ce2:	bf18      	it	ne
 8017ce4:	2301      	movne	r3, #1
 8017ce6:	0580      	lsls	r0, r0, #22
 8017ce8:	d56e      	bpl.n	8017dc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8017cea:	f1b8 0f08 	cmp.w	r8, #8
 8017cee:	d16b      	bne.n	8017dc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8017cf0:	2b00      	cmp	r3, #0
 8017cf2:	bf0c      	ite	eq
 8017cf4:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 8017cf8:	f44f 7180 	movne.w	r1, #256	@ 0x100
 8017cfc:	2d00      	cmp	r5, #0
 8017cfe:	f47f aee8 	bne.w	8017ad2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8017d02:	2e00      	cmp	r6, #0
 8017d04:	f47f aee5 	bne.w	8017ad2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8017d08:	19e3      	adds	r3, r4, r7
 8017d0a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8017d0c:	4283      	cmp	r3, r0
 8017d0e:	f73f aee0 	bgt.w	8017ad2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8017d12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017d14:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8017d16:	444b      	add	r3, r9
 8017d18:	4283      	cmp	r3, r0
 8017d1a:	f73f aeda 	bgt.w	8017ad2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8017d1e:	b2bf      	uxth	r7, r7
 8017d20:	f1b8 0f08 	cmp.w	r8, #8
 8017d24:	6810      	ldr	r0, [r2, #0]
 8017d26:	f04f 0500 	mov.w	r5, #0
 8017d2a:	bf18      	it	ne
 8017d2c:	3701      	addne	r7, #1
 8017d2e:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 8017d32:	6804      	ldr	r4, [r0, #0]
 8017d34:	bf18      	it	ne
 8017d36:	f027 0701 	bicne.w	r7, r7, #1
 8017d3a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8017d3e:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8017d42:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8017d44:	bf18      	it	ne
 8017d46:	b2bf      	uxthne	r7, r7
 8017d48:	9104      	str	r1, [sp, #16]
 8017d4a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8017d4c:	e9cd 7900 	strd	r7, r9, [sp]
 8017d50:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8017d54:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8017d56:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 8017d58:	47a0      	blx	r4
 8017d5a:	b019      	add	sp, #100	@ 0x64
 8017d5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d60:	2300      	movs	r3, #0
 8017d62:	e7c0      	b.n	8017ce6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8017d64:	2208      	movs	r2, #8
 8017d66:	fb92 f3f8 	sdiv	r3, r2, r8
 8017d6a:	1e5a      	subs	r2, r3, #1
 8017d6c:	443a      	add	r2, r7
 8017d6e:	fb92 f2f3 	sdiv	r2, r2, r3
 8017d72:	fb12 f203 	smulbb	r2, r2, r3
 8017d76:	b292      	uxth	r2, r2
 8017d78:	e6b0      	b.n	8017adc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8017d7a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8017d7c:	e6ec      	b.n	8017b58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8017d7e:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8017d80:	e782      	b.n	8017c88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8017d82:	bf00      	nop
 8017d84:	200169f8 	.word	0x200169f8
 8017d88:	20016a00 	.word	0x20016a00
 8017d8c:	200169fa 	.word	0x200169fa
 8017d90:	00fff800 	.word	0x00fff800
 8017d94:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017d96:	b153      	cbz	r3, 8017dae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8017d98:	441e      	add	r6, r3
 8017d9a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017d9c:	b2b6      	uxth	r6, r6
 8017d9e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8017da2:	f006 0607 	and.w	r6, r6, #7
 8017da6:	781a      	ldrb	r2, [r3, #0]
 8017da8:	9328      	str	r3, [sp, #160]	@ 0xa0
 8017daa:	4132      	asrs	r2, r6
 8017dac:	b2d2      	uxtb	r2, r2
 8017dae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017db0:	445b      	add	r3, fp
 8017db2:	930a      	str	r3, [sp, #40]	@ 0x28
 8017db4:	e706      	b.n	8017bc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8017db6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017db8:	2b00      	cmp	r3, #0
 8017dba:	d1ce      	bne.n	8017d5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017dbc:	4b05      	ldr	r3, [pc, #20]	@ (8017dd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8017dbe:	6818      	ldr	r0, [r3, #0]
 8017dc0:	6803      	ldr	r3, [r0, #0]
 8017dc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017dc4:	4798      	blx	r3
 8017dc6:	e7c8      	b.n	8017d5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017dc8:	2b00      	cmp	r3, #0
 8017dca:	f43f ae82 	beq.w	8017ad2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8017dce:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8017dd2:	e793      	b.n	8017cfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8017dd4:	20016a00 	.word	0x20016a00

08017dd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8017dd8:	b538      	push	{r3, r4, r5, lr}
 8017dda:	4c15      	ldr	r4, [pc, #84]	@ (8017e30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8017ddc:	4605      	mov	r5, r0
 8017dde:	7823      	ldrb	r3, [r4, #0]
 8017de0:	f3bf 8f5b 	dmb	ish
 8017de4:	07da      	lsls	r2, r3, #31
 8017de6:	d40b      	bmi.n	8017e00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8017de8:	4620      	mov	r0, r4
 8017dea:	f008 f9b2 	bl	8020152 <__cxa_guard_acquire>
 8017dee:	b138      	cbz	r0, 8017e00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8017df0:	4620      	mov	r0, r4
 8017df2:	f008 f9ba 	bl	802016a <__cxa_guard_release>
 8017df6:	4a0f      	ldr	r2, [pc, #60]	@ (8017e34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8017df8:	490f      	ldr	r1, [pc, #60]	@ (8017e38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8017dfa:	4810      	ldr	r0, [pc, #64]	@ (8017e3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8017dfc:	f008 f9a2 	bl	8020144 <__aeabi_atexit>
 8017e00:	4c0f      	ldr	r4, [pc, #60]	@ (8017e40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8017e02:	7823      	ldrb	r3, [r4, #0]
 8017e04:	f3bf 8f5b 	dmb	ish
 8017e08:	07db      	lsls	r3, r3, #31
 8017e0a:	d40b      	bmi.n	8017e24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8017e0c:	4620      	mov	r0, r4
 8017e0e:	f008 f9a0 	bl	8020152 <__cxa_guard_acquire>
 8017e12:	b138      	cbz	r0, 8017e24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8017e14:	4620      	mov	r0, r4
 8017e16:	f008 f9a8 	bl	802016a <__cxa_guard_release>
 8017e1a:	4a06      	ldr	r2, [pc, #24]	@ (8017e34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8017e1c:	4909      	ldr	r1, [pc, #36]	@ (8017e44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8017e1e:	480a      	ldr	r0, [pc, #40]	@ (8017e48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8017e20:	f008 f990 	bl	8020144 <__aeabi_atexit>
 8017e24:	4b05      	ldr	r3, [pc, #20]	@ (8017e3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8017e26:	616b      	str	r3, [r5, #20]
 8017e28:	4b07      	ldr	r3, [pc, #28]	@ (8017e48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8017e2a:	61ab      	str	r3, [r5, #24]
 8017e2c:	bd38      	pop	{r3, r4, r5, pc}
 8017e2e:	bf00      	nop
 8017e30:	20016ae0 	.word	0x20016ae0
 8017e34:	20000000 	.word	0x20000000
 8017e38:	08014bbb 	.word	0x08014bbb
 8017e3c:	20000090 	.word	0x20000090
 8017e40:	20016ae4 	.word	0x20016ae4
 8017e44:	08014bb9 	.word	0x08014bb9
 8017e48:	20000094 	.word	0x20000094

08017e4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8017e4c:	b538      	push	{r3, r4, r5, lr}
 8017e4e:	4c15      	ldr	r4, [pc, #84]	@ (8017ea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8017e50:	4605      	mov	r5, r0
 8017e52:	7823      	ldrb	r3, [r4, #0]
 8017e54:	f3bf 8f5b 	dmb	ish
 8017e58:	07da      	lsls	r2, r3, #31
 8017e5a:	d40b      	bmi.n	8017e74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8017e5c:	4620      	mov	r0, r4
 8017e5e:	f008 f978 	bl	8020152 <__cxa_guard_acquire>
 8017e62:	b138      	cbz	r0, 8017e74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8017e64:	4620      	mov	r0, r4
 8017e66:	f008 f980 	bl	802016a <__cxa_guard_release>
 8017e6a:	4a0f      	ldr	r2, [pc, #60]	@ (8017ea8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8017e6c:	490f      	ldr	r1, [pc, #60]	@ (8017eac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8017e6e:	4810      	ldr	r0, [pc, #64]	@ (8017eb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8017e70:	f008 f968 	bl	8020144 <__aeabi_atexit>
 8017e74:	4c0f      	ldr	r4, [pc, #60]	@ (8017eb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8017e76:	7823      	ldrb	r3, [r4, #0]
 8017e78:	f3bf 8f5b 	dmb	ish
 8017e7c:	07db      	lsls	r3, r3, #31
 8017e7e:	d40b      	bmi.n	8017e98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8017e80:	4620      	mov	r0, r4
 8017e82:	f008 f966 	bl	8020152 <__cxa_guard_acquire>
 8017e86:	b138      	cbz	r0, 8017e98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8017e88:	4620      	mov	r0, r4
 8017e8a:	f008 f96e 	bl	802016a <__cxa_guard_release>
 8017e8e:	4a06      	ldr	r2, [pc, #24]	@ (8017ea8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8017e90:	4909      	ldr	r1, [pc, #36]	@ (8017eb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8017e92:	480a      	ldr	r0, [pc, #40]	@ (8017ebc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8017e94:	f008 f956 	bl	8020144 <__aeabi_atexit>
 8017e98:	4b05      	ldr	r3, [pc, #20]	@ (8017eb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8017e9a:	60eb      	str	r3, [r5, #12]
 8017e9c:	4b07      	ldr	r3, [pc, #28]	@ (8017ebc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8017e9e:	612b      	str	r3, [r5, #16]
 8017ea0:	bd38      	pop	{r3, r4, r5, pc}
 8017ea2:	bf00      	nop
 8017ea4:	20016ab8 	.word	0x20016ab8
 8017ea8:	20000000 	.word	0x20000000
 8017eac:	08014bbf 	.word	0x08014bbf
 8017eb0:	20000068 	.word	0x20000068
 8017eb4:	20016abc 	.word	0x20016abc
 8017eb8:	08014bbd 	.word	0x08014bbd
 8017ebc:	2000006c 	.word	0x2000006c

08017ec0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8017ec0:	b510      	push	{r4, lr}
 8017ec2:	4604      	mov	r4, r0
 8017ec4:	f7ff ff88 	bl	8017dd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8017ec8:	4620      	mov	r0, r4
 8017eca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017ece:	f7ff bfbd 	b.w	8017e4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08017ed4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8017ed4:	b538      	push	{r3, r4, r5, lr}
 8017ed6:	4c15      	ldr	r4, [pc, #84]	@ (8017f2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8017ed8:	4605      	mov	r5, r0
 8017eda:	7823      	ldrb	r3, [r4, #0]
 8017edc:	f3bf 8f5b 	dmb	ish
 8017ee0:	07da      	lsls	r2, r3, #31
 8017ee2:	d40b      	bmi.n	8017efc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8017ee4:	4620      	mov	r0, r4
 8017ee6:	f008 f934 	bl	8020152 <__cxa_guard_acquire>
 8017eea:	b138      	cbz	r0, 8017efc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8017eec:	4620      	mov	r0, r4
 8017eee:	f008 f93c 	bl	802016a <__cxa_guard_release>
 8017ef2:	4a0f      	ldr	r2, [pc, #60]	@ (8017f30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017ef4:	490f      	ldr	r1, [pc, #60]	@ (8017f34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8017ef6:	4810      	ldr	r0, [pc, #64]	@ (8017f38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017ef8:	f008 f924 	bl	8020144 <__aeabi_atexit>
 8017efc:	4c0f      	ldr	r4, [pc, #60]	@ (8017f3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8017efe:	7823      	ldrb	r3, [r4, #0]
 8017f00:	f3bf 8f5b 	dmb	ish
 8017f04:	07db      	lsls	r3, r3, #31
 8017f06:	d40b      	bmi.n	8017f20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017f08:	4620      	mov	r0, r4
 8017f0a:	f008 f922 	bl	8020152 <__cxa_guard_acquire>
 8017f0e:	b138      	cbz	r0, 8017f20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017f10:	4620      	mov	r0, r4
 8017f12:	f008 f92a 	bl	802016a <__cxa_guard_release>
 8017f16:	4a06      	ldr	r2, [pc, #24]	@ (8017f30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017f18:	4909      	ldr	r1, [pc, #36]	@ (8017f40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8017f1a:	480a      	ldr	r0, [pc, #40]	@ (8017f44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8017f1c:	f008 f912 	bl	8020144 <__aeabi_atexit>
 8017f20:	4b05      	ldr	r3, [pc, #20]	@ (8017f38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017f22:	626b      	str	r3, [r5, #36]	@ 0x24
 8017f24:	4b07      	ldr	r3, [pc, #28]	@ (8017f44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8017f26:	62ab      	str	r3, [r5, #40]	@ 0x28
 8017f28:	bd38      	pop	{r3, r4, r5, pc}
 8017f2a:	bf00      	nop
 8017f2c:	20016ae8 	.word	0x20016ae8
 8017f30:	20000000 	.word	0x20000000
 8017f34:	08014bb3 	.word	0x08014bb3
 8017f38:	20000098 	.word	0x20000098
 8017f3c:	20016aec 	.word	0x20016aec
 8017f40:	08014bb1 	.word	0x08014bb1
 8017f44:	2000009c 	.word	0x2000009c

08017f48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8017f48:	b538      	push	{r3, r4, r5, lr}
 8017f4a:	4c15      	ldr	r4, [pc, #84]	@ (8017fa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8017f4c:	4605      	mov	r5, r0
 8017f4e:	7823      	ldrb	r3, [r4, #0]
 8017f50:	f3bf 8f5b 	dmb	ish
 8017f54:	07da      	lsls	r2, r3, #31
 8017f56:	d40b      	bmi.n	8017f70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017f58:	4620      	mov	r0, r4
 8017f5a:	f008 f8fa 	bl	8020152 <__cxa_guard_acquire>
 8017f5e:	b138      	cbz	r0, 8017f70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017f60:	4620      	mov	r0, r4
 8017f62:	f008 f902 	bl	802016a <__cxa_guard_release>
 8017f66:	4a0f      	ldr	r2, [pc, #60]	@ (8017fa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8017f68:	490f      	ldr	r1, [pc, #60]	@ (8017fa8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8017f6a:	4810      	ldr	r0, [pc, #64]	@ (8017fac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8017f6c:	f008 f8ea 	bl	8020144 <__aeabi_atexit>
 8017f70:	4c0f      	ldr	r4, [pc, #60]	@ (8017fb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8017f72:	7823      	ldrb	r3, [r4, #0]
 8017f74:	f3bf 8f5b 	dmb	ish
 8017f78:	07db      	lsls	r3, r3, #31
 8017f7a:	d40b      	bmi.n	8017f94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8017f7c:	4620      	mov	r0, r4
 8017f7e:	f008 f8e8 	bl	8020152 <__cxa_guard_acquire>
 8017f82:	b138      	cbz	r0, 8017f94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8017f84:	4620      	mov	r0, r4
 8017f86:	f008 f8f0 	bl	802016a <__cxa_guard_release>
 8017f8a:	4a06      	ldr	r2, [pc, #24]	@ (8017fa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8017f8c:	4909      	ldr	r1, [pc, #36]	@ (8017fb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8017f8e:	480a      	ldr	r0, [pc, #40]	@ (8017fb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8017f90:	f008 f8d8 	bl	8020144 <__aeabi_atexit>
 8017f94:	4b05      	ldr	r3, [pc, #20]	@ (8017fac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8017f96:	61eb      	str	r3, [r5, #28]
 8017f98:	4b07      	ldr	r3, [pc, #28]	@ (8017fb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8017f9a:	622b      	str	r3, [r5, #32]
 8017f9c:	bd38      	pop	{r3, r4, r5, pc}
 8017f9e:	bf00      	nop
 8017fa0:	20016ac0 	.word	0x20016ac0
 8017fa4:	20000000 	.word	0x20000000
 8017fa8:	08014bb7 	.word	0x08014bb7
 8017fac:	20000070 	.word	0x20000070
 8017fb0:	20016ac4 	.word	0x20016ac4
 8017fb4:	08014bb5 	.word	0x08014bb5
 8017fb8:	20000074 	.word	0x20000074

08017fbc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8017fbc:	b510      	push	{r4, lr}
 8017fbe:	4604      	mov	r4, r0
 8017fc0:	f7ff ff88 	bl	8017ed4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8017fc4:	4620      	mov	r0, r4
 8017fc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017fca:	f7ff bfbd 	b.w	8017f48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08017fd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8017fd0:	b538      	push	{r3, r4, r5, lr}
 8017fd2:	4c15      	ldr	r4, [pc, #84]	@ (8018028 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8017fd4:	4605      	mov	r5, r0
 8017fd6:	7823      	ldrb	r3, [r4, #0]
 8017fd8:	f3bf 8f5b 	dmb	ish
 8017fdc:	07da      	lsls	r2, r3, #31
 8017fde:	d40b      	bmi.n	8017ff8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8017fe0:	4620      	mov	r0, r4
 8017fe2:	f008 f8b6 	bl	8020152 <__cxa_guard_acquire>
 8017fe6:	b138      	cbz	r0, 8017ff8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8017fe8:	4620      	mov	r0, r4
 8017fea:	f008 f8be 	bl	802016a <__cxa_guard_release>
 8017fee:	4a0f      	ldr	r2, [pc, #60]	@ (801802c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8017ff0:	490f      	ldr	r1, [pc, #60]	@ (8018030 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8017ff2:	4810      	ldr	r0, [pc, #64]	@ (8018034 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8017ff4:	f008 f8a6 	bl	8020144 <__aeabi_atexit>
 8017ff8:	4c0f      	ldr	r4, [pc, #60]	@ (8018038 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8017ffa:	7823      	ldrb	r3, [r4, #0]
 8017ffc:	f3bf 8f5b 	dmb	ish
 8018000:	07db      	lsls	r3, r3, #31
 8018002:	d40b      	bmi.n	801801c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018004:	4620      	mov	r0, r4
 8018006:	f008 f8a4 	bl	8020152 <__cxa_guard_acquire>
 801800a:	b138      	cbz	r0, 801801c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801800c:	4620      	mov	r0, r4
 801800e:	f008 f8ac 	bl	802016a <__cxa_guard_release>
 8018012:	4a06      	ldr	r2, [pc, #24]	@ (801802c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018014:	4909      	ldr	r1, [pc, #36]	@ (801803c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018016:	480a      	ldr	r0, [pc, #40]	@ (8018040 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018018:	f008 f894 	bl	8020144 <__aeabi_atexit>
 801801c:	4b05      	ldr	r3, [pc, #20]	@ (8018034 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801801e:	636b      	str	r3, [r5, #52]	@ 0x34
 8018020:	4b07      	ldr	r3, [pc, #28]	@ (8018040 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018022:	63ab      	str	r3, [r5, #56]	@ 0x38
 8018024:	bd38      	pop	{r3, r4, r5, pc}
 8018026:	bf00      	nop
 8018028:	20016af8 	.word	0x20016af8
 801802c:	20000000 	.word	0x20000000
 8018030:	08014bab 	.word	0x08014bab
 8018034:	200000a8 	.word	0x200000a8
 8018038:	20016afc 	.word	0x20016afc
 801803c:	08014ba9 	.word	0x08014ba9
 8018040:	200000ac 	.word	0x200000ac

08018044 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018044:	b538      	push	{r3, r4, r5, lr}
 8018046:	4c15      	ldr	r4, [pc, #84]	@ (801809c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018048:	4605      	mov	r5, r0
 801804a:	7823      	ldrb	r3, [r4, #0]
 801804c:	f3bf 8f5b 	dmb	ish
 8018050:	07da      	lsls	r2, r3, #31
 8018052:	d40b      	bmi.n	801806c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018054:	4620      	mov	r0, r4
 8018056:	f008 f87c 	bl	8020152 <__cxa_guard_acquire>
 801805a:	b138      	cbz	r0, 801806c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801805c:	4620      	mov	r0, r4
 801805e:	f008 f884 	bl	802016a <__cxa_guard_release>
 8018062:	4a0f      	ldr	r2, [pc, #60]	@ (80180a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018064:	490f      	ldr	r1, [pc, #60]	@ (80180a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018066:	4810      	ldr	r0, [pc, #64]	@ (80180a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018068:	f008 f86c 	bl	8020144 <__aeabi_atexit>
 801806c:	4c0f      	ldr	r4, [pc, #60]	@ (80180ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801806e:	7823      	ldrb	r3, [r4, #0]
 8018070:	f3bf 8f5b 	dmb	ish
 8018074:	07db      	lsls	r3, r3, #31
 8018076:	d40b      	bmi.n	8018090 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018078:	4620      	mov	r0, r4
 801807a:	f008 f86a 	bl	8020152 <__cxa_guard_acquire>
 801807e:	b138      	cbz	r0, 8018090 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018080:	4620      	mov	r0, r4
 8018082:	f008 f872 	bl	802016a <__cxa_guard_release>
 8018086:	4a06      	ldr	r2, [pc, #24]	@ (80180a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018088:	4909      	ldr	r1, [pc, #36]	@ (80180b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801808a:	480a      	ldr	r0, [pc, #40]	@ (80180b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801808c:	f008 f85a 	bl	8020144 <__aeabi_atexit>
 8018090:	4b05      	ldr	r3, [pc, #20]	@ (80180a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018092:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8018094:	4b07      	ldr	r3, [pc, #28]	@ (80180b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018096:	632b      	str	r3, [r5, #48]	@ 0x30
 8018098:	bd38      	pop	{r3, r4, r5, pc}
 801809a:	bf00      	nop
 801809c:	20016ac8 	.word	0x20016ac8
 80180a0:	20000000 	.word	0x20000000
 80180a4:	08014baf 	.word	0x08014baf
 80180a8:	20000078 	.word	0x20000078
 80180ac:	20016acc 	.word	0x20016acc
 80180b0:	08014bad 	.word	0x08014bad
 80180b4:	2000007c 	.word	0x2000007c

080180b8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80180b8:	b510      	push	{r4, lr}
 80180ba:	4604      	mov	r4, r0
 80180bc:	f7ff ff88 	bl	8017fd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80180c0:	4620      	mov	r0, r4
 80180c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80180c6:	f7ff bfbd 	b.w	8018044 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080180cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80180cc:	b538      	push	{r3, r4, r5, lr}
 80180ce:	4c15      	ldr	r4, [pc, #84]	@ (8018124 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80180d0:	4605      	mov	r5, r0
 80180d2:	7823      	ldrb	r3, [r4, #0]
 80180d4:	f3bf 8f5b 	dmb	ish
 80180d8:	07da      	lsls	r2, r3, #31
 80180da:	d40b      	bmi.n	80180f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80180dc:	4620      	mov	r0, r4
 80180de:	f008 f838 	bl	8020152 <__cxa_guard_acquire>
 80180e2:	b138      	cbz	r0, 80180f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80180e4:	4620      	mov	r0, r4
 80180e6:	f008 f840 	bl	802016a <__cxa_guard_release>
 80180ea:	4a0f      	ldr	r2, [pc, #60]	@ (8018128 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80180ec:	490f      	ldr	r1, [pc, #60]	@ (801812c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80180ee:	4810      	ldr	r0, [pc, #64]	@ (8018130 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80180f0:	f008 f828 	bl	8020144 <__aeabi_atexit>
 80180f4:	4c0f      	ldr	r4, [pc, #60]	@ (8018134 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80180f6:	7823      	ldrb	r3, [r4, #0]
 80180f8:	f3bf 8f5b 	dmb	ish
 80180fc:	07db      	lsls	r3, r3, #31
 80180fe:	d40b      	bmi.n	8018118 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018100:	4620      	mov	r0, r4
 8018102:	f008 f826 	bl	8020152 <__cxa_guard_acquire>
 8018106:	b138      	cbz	r0, 8018118 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018108:	4620      	mov	r0, r4
 801810a:	f008 f82e 	bl	802016a <__cxa_guard_release>
 801810e:	4a06      	ldr	r2, [pc, #24]	@ (8018128 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018110:	4909      	ldr	r1, [pc, #36]	@ (8018138 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018112:	480a      	ldr	r0, [pc, #40]	@ (801813c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018114:	f008 f816 	bl	8020144 <__aeabi_atexit>
 8018118:	4b05      	ldr	r3, [pc, #20]	@ (8018130 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801811a:	656b      	str	r3, [r5, #84]	@ 0x54
 801811c:	4b07      	ldr	r3, [pc, #28]	@ (801813c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801811e:	65ab      	str	r3, [r5, #88]	@ 0x58
 8018120:	bd38      	pop	{r3, r4, r5, pc}
 8018122:	bf00      	nop
 8018124:	20016b00 	.word	0x20016b00
 8018128:	20000000 	.word	0x20000000
 801812c:	08014b9b 	.word	0x08014b9b
 8018130:	200000b0 	.word	0x200000b0
 8018134:	20016b04 	.word	0x20016b04
 8018138:	08014b99 	.word	0x08014b99
 801813c:	200000b4 	.word	0x200000b4

08018140 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018140:	b538      	push	{r3, r4, r5, lr}
 8018142:	4c15      	ldr	r4, [pc, #84]	@ (8018198 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018144:	4605      	mov	r5, r0
 8018146:	7823      	ldrb	r3, [r4, #0]
 8018148:	f3bf 8f5b 	dmb	ish
 801814c:	07da      	lsls	r2, r3, #31
 801814e:	d40b      	bmi.n	8018168 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018150:	4620      	mov	r0, r4
 8018152:	f007 fffe 	bl	8020152 <__cxa_guard_acquire>
 8018156:	b138      	cbz	r0, 8018168 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018158:	4620      	mov	r0, r4
 801815a:	f008 f806 	bl	802016a <__cxa_guard_release>
 801815e:	4a0f      	ldr	r2, [pc, #60]	@ (801819c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018160:	490f      	ldr	r1, [pc, #60]	@ (80181a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018162:	4810      	ldr	r0, [pc, #64]	@ (80181a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018164:	f007 ffee 	bl	8020144 <__aeabi_atexit>
 8018168:	4c0f      	ldr	r4, [pc, #60]	@ (80181a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801816a:	7823      	ldrb	r3, [r4, #0]
 801816c:	f3bf 8f5b 	dmb	ish
 8018170:	07db      	lsls	r3, r3, #31
 8018172:	d40b      	bmi.n	801818c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018174:	4620      	mov	r0, r4
 8018176:	f007 ffec 	bl	8020152 <__cxa_guard_acquire>
 801817a:	b138      	cbz	r0, 801818c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801817c:	4620      	mov	r0, r4
 801817e:	f007 fff4 	bl	802016a <__cxa_guard_release>
 8018182:	4a06      	ldr	r2, [pc, #24]	@ (801819c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018184:	4909      	ldr	r1, [pc, #36]	@ (80181ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8018186:	480a      	ldr	r0, [pc, #40]	@ (80181b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018188:	f007 ffdc 	bl	8020144 <__aeabi_atexit>
 801818c:	4b05      	ldr	r3, [pc, #20]	@ (80181a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801818e:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8018190:	4b07      	ldr	r3, [pc, #28]	@ (80181b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018192:	652b      	str	r3, [r5, #80]	@ 0x50
 8018194:	bd38      	pop	{r3, r4, r5, pc}
 8018196:	bf00      	nop
 8018198:	20016b08 	.word	0x20016b08
 801819c:	20000000 	.word	0x20000000
 80181a0:	08014b9f 	.word	0x08014b9f
 80181a4:	200000b8 	.word	0x200000b8
 80181a8:	20016b0c 	.word	0x20016b0c
 80181ac:	08014b9d 	.word	0x08014b9d
 80181b0:	200000bc 	.word	0x200000bc

080181b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80181b4:	b538      	push	{r3, r4, r5, lr}
 80181b6:	4c15      	ldr	r4, [pc, #84]	@ (801820c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80181b8:	4605      	mov	r5, r0
 80181ba:	7823      	ldrb	r3, [r4, #0]
 80181bc:	f3bf 8f5b 	dmb	ish
 80181c0:	07da      	lsls	r2, r3, #31
 80181c2:	d40b      	bmi.n	80181dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80181c4:	4620      	mov	r0, r4
 80181c6:	f007 ffc4 	bl	8020152 <__cxa_guard_acquire>
 80181ca:	b138      	cbz	r0, 80181dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80181cc:	4620      	mov	r0, r4
 80181ce:	f007 ffcc 	bl	802016a <__cxa_guard_release>
 80181d2:	4a0f      	ldr	r2, [pc, #60]	@ (8018210 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80181d4:	490f      	ldr	r1, [pc, #60]	@ (8018214 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80181d6:	4810      	ldr	r0, [pc, #64]	@ (8018218 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80181d8:	f007 ffb4 	bl	8020144 <__aeabi_atexit>
 80181dc:	4c0f      	ldr	r4, [pc, #60]	@ (801821c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80181de:	7823      	ldrb	r3, [r4, #0]
 80181e0:	f3bf 8f5b 	dmb	ish
 80181e4:	07db      	lsls	r3, r3, #31
 80181e6:	d40b      	bmi.n	8018200 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80181e8:	4620      	mov	r0, r4
 80181ea:	f007 ffb2 	bl	8020152 <__cxa_guard_acquire>
 80181ee:	b138      	cbz	r0, 8018200 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80181f0:	4620      	mov	r0, r4
 80181f2:	f007 ffba 	bl	802016a <__cxa_guard_release>
 80181f6:	4a06      	ldr	r2, [pc, #24]	@ (8018210 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80181f8:	4909      	ldr	r1, [pc, #36]	@ (8018220 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80181fa:	480a      	ldr	r0, [pc, #40]	@ (8018224 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80181fc:	f007 ffa2 	bl	8020144 <__aeabi_atexit>
 8018200:	4b05      	ldr	r3, [pc, #20]	@ (8018218 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018202:	646b      	str	r3, [r5, #68]	@ 0x44
 8018204:	4b07      	ldr	r3, [pc, #28]	@ (8018224 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018206:	64ab      	str	r3, [r5, #72]	@ 0x48
 8018208:	bd38      	pop	{r3, r4, r5, pc}
 801820a:	bf00      	nop
 801820c:	20016ad0 	.word	0x20016ad0
 8018210:	20000000 	.word	0x20000000
 8018214:	08014ba3 	.word	0x08014ba3
 8018218:	20000080 	.word	0x20000080
 801821c:	20016ad4 	.word	0x20016ad4
 8018220:	08014ba1 	.word	0x08014ba1
 8018224:	20000084 	.word	0x20000084

08018228 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8018228:	b538      	push	{r3, r4, r5, lr}
 801822a:	4c15      	ldr	r4, [pc, #84]	@ (8018280 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801822c:	4605      	mov	r5, r0
 801822e:	7823      	ldrb	r3, [r4, #0]
 8018230:	f3bf 8f5b 	dmb	ish
 8018234:	07da      	lsls	r2, r3, #31
 8018236:	d40b      	bmi.n	8018250 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018238:	4620      	mov	r0, r4
 801823a:	f007 ff8a 	bl	8020152 <__cxa_guard_acquire>
 801823e:	b138      	cbz	r0, 8018250 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018240:	4620      	mov	r0, r4
 8018242:	f007 ff92 	bl	802016a <__cxa_guard_release>
 8018246:	4a0f      	ldr	r2, [pc, #60]	@ (8018284 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018248:	490f      	ldr	r1, [pc, #60]	@ (8018288 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801824a:	4810      	ldr	r0, [pc, #64]	@ (801828c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801824c:	f007 ff7a 	bl	8020144 <__aeabi_atexit>
 8018250:	4c0f      	ldr	r4, [pc, #60]	@ (8018290 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8018252:	7823      	ldrb	r3, [r4, #0]
 8018254:	f3bf 8f5b 	dmb	ish
 8018258:	07db      	lsls	r3, r3, #31
 801825a:	d40b      	bmi.n	8018274 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801825c:	4620      	mov	r0, r4
 801825e:	f007 ff78 	bl	8020152 <__cxa_guard_acquire>
 8018262:	b138      	cbz	r0, 8018274 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018264:	4620      	mov	r0, r4
 8018266:	f007 ff80 	bl	802016a <__cxa_guard_release>
 801826a:	4a06      	ldr	r2, [pc, #24]	@ (8018284 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801826c:	4909      	ldr	r1, [pc, #36]	@ (8018294 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801826e:	480a      	ldr	r0, [pc, #40]	@ (8018298 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018270:	f007 ff68 	bl	8020144 <__aeabi_atexit>
 8018274:	4b05      	ldr	r3, [pc, #20]	@ (801828c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018276:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8018278:	4b07      	ldr	r3, [pc, #28]	@ (8018298 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801827a:	642b      	str	r3, [r5, #64]	@ 0x40
 801827c:	bd38      	pop	{r3, r4, r5, pc}
 801827e:	bf00      	nop
 8018280:	20016af0 	.word	0x20016af0
 8018284:	20000000 	.word	0x20000000
 8018288:	08014ba7 	.word	0x08014ba7
 801828c:	200000a0 	.word	0x200000a0
 8018290:	20016af4 	.word	0x20016af4
 8018294:	08014ba5 	.word	0x08014ba5
 8018298:	200000a4 	.word	0x200000a4

0801829c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801829c:	b510      	push	{r4, lr}
 801829e:	4604      	mov	r4, r0
 80182a0:	f7ff ff14 	bl	80180cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80182a4:	4620      	mov	r0, r4
 80182a6:	f7ff ff85 	bl	80181b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80182aa:	4620      	mov	r0, r4
 80182ac:	f7ff ff48 	bl	8018140 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80182b0:	4620      	mov	r0, r4
 80182b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80182b6:	f7ff bfb7 	b.w	8018228 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080182bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80182bc:	b538      	push	{r3, r4, r5, lr}
 80182be:	4c15      	ldr	r4, [pc, #84]	@ (8018314 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80182c0:	4605      	mov	r5, r0
 80182c2:	7823      	ldrb	r3, [r4, #0]
 80182c4:	f3bf 8f5b 	dmb	ish
 80182c8:	07da      	lsls	r2, r3, #31
 80182ca:	d40b      	bmi.n	80182e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80182cc:	4620      	mov	r0, r4
 80182ce:	f007 ff40 	bl	8020152 <__cxa_guard_acquire>
 80182d2:	b138      	cbz	r0, 80182e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80182d4:	4620      	mov	r0, r4
 80182d6:	f007 ff48 	bl	802016a <__cxa_guard_release>
 80182da:	4a0f      	ldr	r2, [pc, #60]	@ (8018318 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80182dc:	490f      	ldr	r1, [pc, #60]	@ (801831c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80182de:	4810      	ldr	r0, [pc, #64]	@ (8018320 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80182e0:	f007 ff30 	bl	8020144 <__aeabi_atexit>
 80182e4:	4c0f      	ldr	r4, [pc, #60]	@ (8018324 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80182e6:	7823      	ldrb	r3, [r4, #0]
 80182e8:	f3bf 8f5b 	dmb	ish
 80182ec:	07db      	lsls	r3, r3, #31
 80182ee:	d40b      	bmi.n	8018308 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80182f0:	4620      	mov	r0, r4
 80182f2:	f007 ff2e 	bl	8020152 <__cxa_guard_acquire>
 80182f6:	b138      	cbz	r0, 8018308 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80182f8:	4620      	mov	r0, r4
 80182fa:	f007 ff36 	bl	802016a <__cxa_guard_release>
 80182fe:	4a06      	ldr	r2, [pc, #24]	@ (8018318 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018300:	4909      	ldr	r1, [pc, #36]	@ (8018328 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8018302:	480a      	ldr	r0, [pc, #40]	@ (801832c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018304:	f007 ff1e 	bl	8020144 <__aeabi_atexit>
 8018308:	4b05      	ldr	r3, [pc, #20]	@ (8018320 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801830a:	666b      	str	r3, [r5, #100]	@ 0x64
 801830c:	4b07      	ldr	r3, [pc, #28]	@ (801832c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801830e:	66ab      	str	r3, [r5, #104]	@ 0x68
 8018310:	bd38      	pop	{r3, r4, r5, pc}
 8018312:	bf00      	nop
 8018314:	20016ad8 	.word	0x20016ad8
 8018318:	20000000 	.word	0x20000000
 801831c:	08014b93 	.word	0x08014b93
 8018320:	20000088 	.word	0x20000088
 8018324:	20016adc 	.word	0x20016adc
 8018328:	08014b91 	.word	0x08014b91
 801832c:	2000008c 	.word	0x2000008c

08018330 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8018330:	b538      	push	{r3, r4, r5, lr}
 8018332:	4c15      	ldr	r4, [pc, #84]	@ (8018388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8018334:	4605      	mov	r5, r0
 8018336:	7823      	ldrb	r3, [r4, #0]
 8018338:	f3bf 8f5b 	dmb	ish
 801833c:	07da      	lsls	r2, r3, #31
 801833e:	d40b      	bmi.n	8018358 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018340:	4620      	mov	r0, r4
 8018342:	f007 ff06 	bl	8020152 <__cxa_guard_acquire>
 8018346:	b138      	cbz	r0, 8018358 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018348:	4620      	mov	r0, r4
 801834a:	f007 ff0e 	bl	802016a <__cxa_guard_release>
 801834e:	4a0f      	ldr	r2, [pc, #60]	@ (801838c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018350:	490f      	ldr	r1, [pc, #60]	@ (8018390 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8018352:	4810      	ldr	r0, [pc, #64]	@ (8018394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018354:	f007 fef6 	bl	8020144 <__aeabi_atexit>
 8018358:	4c0f      	ldr	r4, [pc, #60]	@ (8018398 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801835a:	7823      	ldrb	r3, [r4, #0]
 801835c:	f3bf 8f5b 	dmb	ish
 8018360:	07db      	lsls	r3, r3, #31
 8018362:	d40b      	bmi.n	801837c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018364:	4620      	mov	r0, r4
 8018366:	f007 fef4 	bl	8020152 <__cxa_guard_acquire>
 801836a:	b138      	cbz	r0, 801837c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801836c:	4620      	mov	r0, r4
 801836e:	f007 fefc 	bl	802016a <__cxa_guard_release>
 8018372:	4a06      	ldr	r2, [pc, #24]	@ (801838c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018374:	4909      	ldr	r1, [pc, #36]	@ (801839c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8018376:	480a      	ldr	r0, [pc, #40]	@ (80183a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018378:	f007 fee4 	bl	8020144 <__aeabi_atexit>
 801837c:	4b05      	ldr	r3, [pc, #20]	@ (8018394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801837e:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8018380:	4b07      	ldr	r3, [pc, #28]	@ (80183a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018382:	662b      	str	r3, [r5, #96]	@ 0x60
 8018384:	bd38      	pop	{r3, r4, r5, pc}
 8018386:	bf00      	nop
 8018388:	20016ab0 	.word	0x20016ab0
 801838c:	20000000 	.word	0x20000000
 8018390:	08014b97 	.word	0x08014b97
 8018394:	20000060 	.word	0x20000060
 8018398:	20016ab4 	.word	0x20016ab4
 801839c:	08014b95 	.word	0x08014b95
 80183a0:	20000064 	.word	0x20000064

080183a4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80183a4:	b510      	push	{r4, lr}
 80183a6:	4604      	mov	r4, r0
 80183a8:	f7ff ff88 	bl	80182bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80183ac:	4620      	mov	r0, r4
 80183ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80183b2:	f7ff bfbd 	b.w	8018330 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080183b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80183b8:	b538      	push	{r3, r4, r5, lr}
 80183ba:	4c15      	ldr	r4, [pc, #84]	@ (8018410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80183bc:	4605      	mov	r5, r0
 80183be:	7823      	ldrb	r3, [r4, #0]
 80183c0:	f3bf 8f5b 	dmb	ish
 80183c4:	07da      	lsls	r2, r3, #31
 80183c6:	d40b      	bmi.n	80183e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80183c8:	4620      	mov	r0, r4
 80183ca:	f007 fec2 	bl	8020152 <__cxa_guard_acquire>
 80183ce:	b138      	cbz	r0, 80183e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80183d0:	4620      	mov	r0, r4
 80183d2:	f007 feca 	bl	802016a <__cxa_guard_release>
 80183d6:	4a0f      	ldr	r2, [pc, #60]	@ (8018414 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80183d8:	490f      	ldr	r1, [pc, #60]	@ (8018418 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80183da:	4810      	ldr	r0, [pc, #64]	@ (801841c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80183dc:	f007 feb2 	bl	8020144 <__aeabi_atexit>
 80183e0:	4c0f      	ldr	r4, [pc, #60]	@ (8018420 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80183e2:	7823      	ldrb	r3, [r4, #0]
 80183e4:	f3bf 8f5b 	dmb	ish
 80183e8:	07db      	lsls	r3, r3, #31
 80183ea:	d40b      	bmi.n	8018404 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80183ec:	4620      	mov	r0, r4
 80183ee:	f007 feb0 	bl	8020152 <__cxa_guard_acquire>
 80183f2:	b138      	cbz	r0, 8018404 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80183f4:	4620      	mov	r0, r4
 80183f6:	f007 feb8 	bl	802016a <__cxa_guard_release>
 80183fa:	4a06      	ldr	r2, [pc, #24]	@ (8018414 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80183fc:	4909      	ldr	r1, [pc, #36]	@ (8018424 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80183fe:	480a      	ldr	r0, [pc, #40]	@ (8018428 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018400:	f007 fea0 	bl	8020144 <__aeabi_atexit>
 8018404:	4b05      	ldr	r3, [pc, #20]	@ (801841c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018406:	676b      	str	r3, [r5, #116]	@ 0x74
 8018408:	4b07      	ldr	r3, [pc, #28]	@ (8018428 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801840a:	67ab      	str	r3, [r5, #120]	@ 0x78
 801840c:	bd38      	pop	{r3, r4, r5, pc}
 801840e:	bf00      	nop
 8018410:	20016aa8 	.word	0x20016aa8
 8018414:	20000000 	.word	0x20000000
 8018418:	08014b8b 	.word	0x08014b8b
 801841c:	20000058 	.word	0x20000058
 8018420:	20016aac 	.word	0x20016aac
 8018424:	08014b89 	.word	0x08014b89
 8018428:	2000005c 	.word	0x2000005c

0801842c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801842c:	b538      	push	{r3, r4, r5, lr}
 801842e:	4c15      	ldr	r4, [pc, #84]	@ (8018484 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8018430:	4605      	mov	r5, r0
 8018432:	7823      	ldrb	r3, [r4, #0]
 8018434:	f3bf 8f5b 	dmb	ish
 8018438:	07da      	lsls	r2, r3, #31
 801843a:	d40b      	bmi.n	8018454 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801843c:	4620      	mov	r0, r4
 801843e:	f007 fe88 	bl	8020152 <__cxa_guard_acquire>
 8018442:	b138      	cbz	r0, 8018454 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018444:	4620      	mov	r0, r4
 8018446:	f007 fe90 	bl	802016a <__cxa_guard_release>
 801844a:	4a0f      	ldr	r2, [pc, #60]	@ (8018488 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801844c:	490f      	ldr	r1, [pc, #60]	@ (801848c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801844e:	4810      	ldr	r0, [pc, #64]	@ (8018490 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8018450:	f007 fe78 	bl	8020144 <__aeabi_atexit>
 8018454:	4c0f      	ldr	r4, [pc, #60]	@ (8018494 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8018456:	7823      	ldrb	r3, [r4, #0]
 8018458:	f3bf 8f5b 	dmb	ish
 801845c:	07db      	lsls	r3, r3, #31
 801845e:	d40b      	bmi.n	8018478 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018460:	4620      	mov	r0, r4
 8018462:	f007 fe76 	bl	8020152 <__cxa_guard_acquire>
 8018466:	b138      	cbz	r0, 8018478 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018468:	4620      	mov	r0, r4
 801846a:	f007 fe7e 	bl	802016a <__cxa_guard_release>
 801846e:	4a06      	ldr	r2, [pc, #24]	@ (8018488 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018470:	4909      	ldr	r1, [pc, #36]	@ (8018498 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8018472:	480a      	ldr	r0, [pc, #40]	@ (801849c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018474:	f007 fe66 	bl	8020144 <__aeabi_atexit>
 8018478:	4b05      	ldr	r3, [pc, #20]	@ (8018490 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801847a:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801847c:	4b07      	ldr	r3, [pc, #28]	@ (801849c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801847e:	672b      	str	r3, [r5, #112]	@ 0x70
 8018480:	bd38      	pop	{r3, r4, r5, pc}
 8018482:	bf00      	nop
 8018484:	20016aa0 	.word	0x20016aa0
 8018488:	20000000 	.word	0x20000000
 801848c:	08014b8f 	.word	0x08014b8f
 8018490:	20000050 	.word	0x20000050
 8018494:	20016aa4 	.word	0x20016aa4
 8018498:	08014b8d 	.word	0x08014b8d
 801849c:	20000054 	.word	0x20000054

080184a0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80184a0:	b510      	push	{r4, lr}
 80184a2:	4604      	mov	r4, r0
 80184a4:	f7ff ff88 	bl	80183b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80184a8:	4620      	mov	r0, r4
 80184aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80184ae:	f7ff bfbd 	b.w	801842c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080184b2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80184b2:	b510      	push	{r4, lr}
 80184b4:	4604      	mov	r4, r0
 80184b6:	f7ff fff3 	bl	80184a0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80184ba:	4620      	mov	r0, r4
 80184bc:	f7ff ff72 	bl	80183a4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80184c0:	4620      	mov	r0, r4
 80184c2:	f7ff fdf9 	bl	80180b8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80184c6:	4620      	mov	r0, r4
 80184c8:	f7ff fcfa 	bl	8017ec0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80184cc:	4620      	mov	r0, r4
 80184ce:	f7ff fd75 	bl	8017fbc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80184d2:	4620      	mov	r0, r4
 80184d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80184d8:	f7ff bee0 	b.w	801829c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080184dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 80184dc:	b538      	push	{r3, r4, r5, lr}
 80184de:	4c0b      	ldr	r4, [pc, #44]	@ (801850c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 80184e0:	4605      	mov	r5, r0
 80184e2:	7823      	ldrb	r3, [r4, #0]
 80184e4:	f3bf 8f5b 	dmb	ish
 80184e8:	07db      	lsls	r3, r3, #31
 80184ea:	d40b      	bmi.n	8018504 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80184ec:	4620      	mov	r0, r4
 80184ee:	f007 fe30 	bl	8020152 <__cxa_guard_acquire>
 80184f2:	b138      	cbz	r0, 8018504 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80184f4:	4620      	mov	r0, r4
 80184f6:	f007 fe38 	bl	802016a <__cxa_guard_release>
 80184fa:	4a05      	ldr	r2, [pc, #20]	@ (8018510 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 80184fc:	4905      	ldr	r1, [pc, #20]	@ (8018514 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 80184fe:	4806      	ldr	r0, [pc, #24]	@ (8018518 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8018500:	f007 fe20 	bl	8020144 <__aeabi_atexit>
 8018504:	4b04      	ldr	r3, [pc, #16]	@ (8018518 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8018506:	67eb      	str	r3, [r5, #124]	@ 0x7c
 8018508:	bd38      	pop	{r3, r4, r5, pc}
 801850a:	bf00      	nop
 801850c:	20016a94 	.word	0x20016a94
 8018510:	20000000 	.word	0x20000000
 8018514:	08014b87 	.word	0x08014b87
 8018518:	20000048 	.word	0x20000048

0801851c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801851c:	b538      	push	{r3, r4, r5, lr}
 801851e:	4c0b      	ldr	r4, [pc, #44]	@ (801854c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8018520:	4605      	mov	r5, r0
 8018522:	7823      	ldrb	r3, [r4, #0]
 8018524:	f3bf 8f5b 	dmb	ish
 8018528:	07db      	lsls	r3, r3, #31
 801852a:	d40b      	bmi.n	8018544 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801852c:	4620      	mov	r0, r4
 801852e:	f007 fe10 	bl	8020152 <__cxa_guard_acquire>
 8018532:	b138      	cbz	r0, 8018544 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8018534:	4620      	mov	r0, r4
 8018536:	f007 fe18 	bl	802016a <__cxa_guard_release>
 801853a:	4a05      	ldr	r2, [pc, #20]	@ (8018550 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801853c:	4905      	ldr	r1, [pc, #20]	@ (8018554 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801853e:	4806      	ldr	r0, [pc, #24]	@ (8018558 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8018540:	f007 fe00 	bl	8020144 <__aeabi_atexit>
 8018544:	4b04      	ldr	r3, [pc, #16]	@ (8018558 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8018546:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801854a:	bd38      	pop	{r3, r4, r5, pc}
 801854c:	20016a98 	.word	0x20016a98
 8018550:	20000000 	.word	0x20000000
 8018554:	08014b85 	.word	0x08014b85
 8018558:	2000004c 	.word	0x2000004c

0801855c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801855c:	b570      	push	{r4, r5, r6, lr}
 801855e:	4d0d      	ldr	r5, [pc, #52]	@ (8018594 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8018560:	4606      	mov	r6, r0
 8018562:	4c0d      	ldr	r4, [pc, #52]	@ (8018598 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8018564:	782b      	ldrb	r3, [r5, #0]
 8018566:	f3bf 8f5b 	dmb	ish
 801856a:	f013 0f01 	tst.w	r3, #1
 801856e:	d10d      	bne.n	801858c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8018570:	4628      	mov	r0, r5
 8018572:	f007 fdee 	bl	8020152 <__cxa_guard_acquire>
 8018576:	b148      	cbz	r0, 801858c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8018578:	4b08      	ldr	r3, [pc, #32]	@ (801859c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801857a:	4628      	mov	r0, r5
 801857c:	6023      	str	r3, [r4, #0]
 801857e:	f007 fdf4 	bl	802016a <__cxa_guard_release>
 8018582:	4a07      	ldr	r2, [pc, #28]	@ (80185a0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8018584:	4620      	mov	r0, r4
 8018586:	4907      	ldr	r1, [pc, #28]	@ (80185a4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8018588:	f007 fddc 	bl	8020144 <__aeabi_atexit>
 801858c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 8018590:	bd70      	pop	{r4, r5, r6, pc}
 8018592:	bf00      	nop
 8018594:	20016a9c 	.word	0x20016a9c
 8018598:	20016b10 	.word	0x20016b10
 801859c:	08023a28 	.word	0x08023a28
 80185a0:	20000000 	.word	0x20000000
 80185a4:	08014b83 	.word	0x08014b83

080185a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80185a8:	b510      	push	{r4, lr}
 80185aa:	4604      	mov	r4, r0
 80185ac:	f7ff ff96 	bl	80184dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 80185b0:	4620      	mov	r0, r4
 80185b2:	f7ff ffb3 	bl	801851c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 80185b6:	4620      	mov	r0, r4
 80185b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80185bc:	f7ff bfce 	b.w	801855c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080185c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80185c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185c4:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 80185c8:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 80185cc:	2d00      	cmp	r5, #0
 80185ce:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 80185d2:	fb05 4c0e 	mla	ip, r5, lr, r4
 80185d6:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 80185da:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 80185de:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 80185e2:	eb02 0a0c 	add.w	sl, r2, ip
 80185e6:	8808      	ldrh	r0, [r1, #0]
 80185e8:	f2c0 80b0 	blt.w	801874c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80185ec:	45ab      	cmp	fp, r5
 80185ee:	f340 80ad 	ble.w	801874c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80185f2:	2c00      	cmp	r4, #0
 80185f4:	f2c0 80a8 	blt.w	8018748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80185f8:	45a6      	cmp	lr, r4
 80185fa:	f340 80a5 	ble.w	8018748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80185fe:	f812 200c 	ldrb.w	r2, [r2, ip]
 8018602:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8018606:	1c62      	adds	r2, r4, #1
 8018608:	f100 80a3 	bmi.w	8018752 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801860c:	4596      	cmp	lr, r2
 801860e:	f340 80a0 	ble.w	8018752 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8018612:	f1b9 0f00 	cmp.w	r9, #0
 8018616:	f000 809c 	beq.w	8018752 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801861a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801861e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8018622:	3501      	adds	r5, #1
 8018624:	f100 8099 	bmi.w	801875a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8018628:	45ab      	cmp	fp, r5
 801862a:	f340 8096 	ble.w	801875a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801862e:	2f00      	cmp	r7, #0
 8018630:	f000 8093 	beq.w	801875a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8018634:	2c00      	cmp	r4, #0
 8018636:	f2c0 808e 	blt.w	8018756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801863a:	45a6      	cmp	lr, r4
 801863c:	f340 808b 	ble.w	8018756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8018640:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8018644:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8018648:	3401      	adds	r4, #1
 801864a:	f100 8089 	bmi.w	8018760 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801864e:	45a6      	cmp	lr, r4
 8018650:	f340 8086 	ble.w	8018760 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8018654:	f1b9 0f00 	cmp.w	r9, #0
 8018658:	f000 8082 	beq.w	8018760 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801865c:	44d6      	add	lr, sl
 801865e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018662:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8018666:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801866a:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801866e:	fb19 fe07 	smulbb	lr, r9, r7
 8018672:	f1c7 0210 	rsb	r2, r7, #16
 8018676:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801867a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801867e:	eba2 0209 	sub.w	r2, r2, r9
 8018682:	ea44 0808 	orr.w	r8, r4, r8
 8018686:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801868a:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801868e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8018692:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8018696:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801869a:	ea44 0c0c 	orr.w	ip, r4, ip
 801869e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80186a2:	fb04 f40c 	mul.w	r4, r4, ip
 80186a6:	fb02 4808 	mla	r8, r2, r8, r4
 80186aa:	041a      	lsls	r2, r3, #16
 80186ac:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80186b0:	b2b4      	uxth	r4, r6
 80186b2:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80186b6:	43f6      	mvns	r6, r6
 80186b8:	4313      	orrs	r3, r2
 80186ba:	042a      	lsls	r2, r5, #16
 80186bc:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80186c0:	b2f6      	uxtb	r6, r6
 80186c2:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80186c6:	fb0e 8303 	mla	r3, lr, r3, r8
 80186ca:	432a      	orrs	r2, r5
 80186cc:	fb07 3202 	mla	r2, r7, r2, r3
 80186d0:	10c7      	asrs	r7, r0, #3
 80186d2:	0d53      	lsrs	r3, r2, #21
 80186d4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80186d8:	0952      	lsrs	r2, r2, #5
 80186da:	fb17 f706 	smulbb	r7, r7, r6
 80186de:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80186e2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80186e6:	431a      	orrs	r2, r3
 80186e8:	b293      	uxth	r3, r2
 80186ea:	1202      	asrs	r2, r0, #8
 80186ec:	121d      	asrs	r5, r3, #8
 80186ee:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80186f2:	00c0      	lsls	r0, r0, #3
 80186f4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80186f8:	fb12 f206 	smulbb	r2, r2, r6
 80186fc:	b2c0      	uxtb	r0, r0
 80186fe:	fb05 2504 	mla	r5, r5, r4, r2
 8018702:	10da      	asrs	r2, r3, #3
 8018704:	fb10 f006 	smulbb	r0, r0, r6
 8018708:	00db      	lsls	r3, r3, #3
 801870a:	b2ad      	uxth	r5, r5
 801870c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8018710:	b2db      	uxtb	r3, r3
 8018712:	fb02 7204 	mla	r2, r2, r4, r7
 8018716:	fb03 0004 	mla	r0, r3, r4, r0
 801871a:	1c6b      	adds	r3, r5, #1
 801871c:	b292      	uxth	r2, r2
 801871e:	b280      	uxth	r0, r0
 8018720:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018724:	1c43      	adds	r3, r0, #1
 8018726:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801872a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801872e:	1c50      	adds	r0, r2, #1
 8018730:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018734:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018738:	0952      	lsrs	r2, r2, #5
 801873a:	432b      	orrs	r3, r5
 801873c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018740:	4313      	orrs	r3, r2
 8018742:	800b      	strh	r3, [r1, #0]
 8018744:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018748:	4680      	mov	r8, r0
 801874a:	e75c      	b.n	8018606 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801874c:	4684      	mov	ip, r0
 801874e:	4680      	mov	r8, r0
 8018750:	e767      	b.n	8018622 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8018752:	4684      	mov	ip, r0
 8018754:	e765      	b.n	8018622 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8018756:	4605      	mov	r5, r0
 8018758:	e776      	b.n	8018648 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801875a:	4603      	mov	r3, r0
 801875c:	4605      	mov	r5, r0
 801875e:	e782      	b.n	8018666 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8018760:	4603      	mov	r3, r0
 8018762:	e780      	b.n	8018666 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08018764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018768:	b099      	sub	sp, #100	@ 0x64
 801876a:	9215      	str	r2, [sp, #84]	@ 0x54
 801876c:	9309      	str	r3, [sp, #36]	@ 0x24
 801876e:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8018770:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8018774:	9016      	str	r0, [sp, #88]	@ 0x58
 8018776:	930d      	str	r3, [sp, #52]	@ 0x34
 8018778:	6850      	ldr	r0, [r2, #4]
 801877a:	910c      	str	r1, [sp, #48]	@ 0x30
 801877c:	6812      	ldr	r2, [r2, #0]
 801877e:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8018782:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8018786:	fb00 1303 	mla	r3, r0, r3, r1
 801878a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801878e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018790:	681b      	ldr	r3, [r3, #0]
 8018792:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018794:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018796:	685e      	ldr	r6, [r3, #4]
 8018798:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801879a:	3604      	adds	r6, #4
 801879c:	43db      	mvns	r3, r3
 801879e:	b2db      	uxtb	r3, r3
 80187a0:	930a      	str	r3, [sp, #40]	@ 0x28
 80187a2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80187a4:	2b00      	cmp	r3, #0
 80187a6:	dc03      	bgt.n	80187b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80187a8:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80187aa:	2b00      	cmp	r3, #0
 80187ac:	f340 8225 	ble.w	8018bfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80187b0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80187b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80187b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80187ba:	1e48      	subs	r0, r1, #1
 80187bc:	1e57      	subs	r7, r2, #1
 80187be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80187c0:	2b00      	cmp	r3, #0
 80187c2:	f340 80e3 	ble.w	801898c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80187c6:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80187ca:	ea4f 4325 	mov.w	r3, r5, asr #16
 80187ce:	d406      	bmi.n	80187de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80187d0:	4584      	cmp	ip, r0
 80187d2:	da04      	bge.n	80187de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80187d4:	2b00      	cmp	r3, #0
 80187d6:	db02      	blt.n	80187de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80187d8:	42bb      	cmp	r3, r7
 80187da:	f2c0 80d8 	blt.w	801898e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80187de:	f11c 0c01 	adds.w	ip, ip, #1
 80187e2:	f100 80c9 	bmi.w	8018978 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80187e6:	4561      	cmp	r1, ip
 80187e8:	f2c0 80c6 	blt.w	8018978 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80187ec:	3301      	adds	r3, #1
 80187ee:	f100 80c3 	bmi.w	8018978 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80187f2:	429a      	cmp	r2, r3
 80187f4:	f2c0 80c0 	blt.w	8018978 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80187f8:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80187fc:	4647      	mov	r7, r8
 80187fe:	f1bb 0f00 	cmp.w	fp, #0
 8018802:	f340 80e3 	ble.w	80189cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8018806:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8018808:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801880c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801880e:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8018812:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018816:	ea5f 422a 	movs.w	r2, sl, asr #16
 801881a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801881e:	689b      	ldr	r3, [r3, #8]
 8018820:	f100 8121 	bmi.w	8018a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018824:	f103 39ff 	add.w	r9, r3, #4294967295
 8018828:	454a      	cmp	r2, r9
 801882a:	f280 811c 	bge.w	8018a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801882e:	f1bc 0f00 	cmp.w	ip, #0
 8018832:	f2c0 8118 	blt.w	8018a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018836:	f10e 39ff 	add.w	r9, lr, #4294967295
 801883a:	45cc      	cmp	ip, r9
 801883c:	f280 8113 	bge.w	8018a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018840:	b21b      	sxth	r3, r3
 8018842:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018844:	fb0c 2203 	mla	r2, ip, r3, r2
 8018848:	eb04 0902 	add.w	r9, r4, r2
 801884c:	5ca2      	ldrb	r2, [r4, r2]
 801884e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8018852:	2800      	cmp	r0, #0
 8018854:	f000 80fe 	beq.w	8018a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8018858:	f899 2001 	ldrb.w	r2, [r9, #1]
 801885c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8018860:	9211      	str	r2, [sp, #68]	@ 0x44
 8018862:	b151      	cbz	r1, 801887a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8018864:	eb09 0203 	add.w	r2, r9, r3
 8018868:	f819 3003 	ldrb.w	r3, [r9, r3]
 801886c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018870:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018872:	7853      	ldrb	r3, [r2, #1]
 8018874:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018878:	9312      	str	r3, [sp, #72]	@ 0x48
 801887a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801887c:	fb10 f201 	smulbb	r2, r0, r1
 8018880:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018882:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018886:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801888a:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801888e:	10d2      	asrs	r2, r2, #3
 8018890:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8018894:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8018898:	ea4c 0c03 	orr.w	ip, ip, r3
 801889c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801889e:	041b      	lsls	r3, r3, #16
 80188a0:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80188a4:	4323      	orrs	r3, r4
 80188a6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80188a8:	4353      	muls	r3, r2
 80188aa:	fb09 330c 	mla	r3, r9, ip, r3
 80188ae:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80188b2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80188b6:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80188ba:	ea4c 0e0e 	orr.w	lr, ip, lr
 80188be:	f1c1 0c10 	rsb	ip, r1, #16
 80188c2:	ebac 0c00 	sub.w	ip, ip, r0
 80188c6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80188ca:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80188ce:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80188d2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80188d4:	0418      	lsls	r0, r3, #16
 80188d6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80188da:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80188de:	4318      	orrs	r0, r3
 80188e0:	fb02 c200 	mla	r2, r2, r0, ip
 80188e4:	8838      	ldrh	r0, [r7, #0]
 80188e6:	0d53      	lsrs	r3, r2, #21
 80188e8:	0952      	lsrs	r2, r2, #5
 80188ea:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80188ee:	1201      	asrs	r1, r0, #8
 80188f0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80188f4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80188f8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80188fc:	00c0      	lsls	r0, r0, #3
 80188fe:	431a      	orrs	r2, r3
 8018900:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8018904:	fb11 f104 	smulbb	r1, r1, r4
 8018908:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801890c:	b292      	uxth	r2, r2
 801890e:	fb1e fe04 	smulbb	lr, lr, r4
 8018912:	b2c0      	uxtb	r0, r0
 8018914:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8018918:	fb10 f004 	smulbb	r0, r0, r4
 801891c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018920:	fb0c 1c03 	mla	ip, ip, r3, r1
 8018924:	10d1      	asrs	r1, r2, #3
 8018926:	00d2      	lsls	r2, r2, #3
 8018928:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801892c:	fa1f fc8c 	uxth.w	ip, ip
 8018930:	b2d2      	uxtb	r2, r2
 8018932:	fb01 e103 	mla	r1, r1, r3, lr
 8018936:	fb02 0303 	mla	r3, r2, r3, r0
 801893a:	b289      	uxth	r1, r1
 801893c:	b29a      	uxth	r2, r3
 801893e:	f10c 0301 	add.w	r3, ip, #1
 8018942:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018946:	1c53      	adds	r3, r2, #1
 8018948:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801894c:	1c4a      	adds	r2, r1, #1
 801894e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018952:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018956:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801895a:	0949      	lsrs	r1, r1, #5
 801895c:	ea43 030c 	orr.w	r3, r3, ip
 8018960:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018964:	430b      	orrs	r3, r1
 8018966:	803b      	strh	r3, [r7, #0]
 8018968:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801896a:	3702      	adds	r7, #2
 801896c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018970:	449a      	add	sl, r3
 8018972:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8018974:	441d      	add	r5, r3
 8018976:	e742      	b.n	80187fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018978:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801897a:	f108 0802 	add.w	r8, r8, #2
 801897e:	449a      	add	sl, r3
 8018980:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8018982:	441d      	add	r5, r3
 8018984:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018986:	3b01      	subs	r3, #1
 8018988:	9309      	str	r3, [sp, #36]	@ 0x24
 801898a:	e718      	b.n	80187be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801898c:	d023      	beq.n	80189d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801898e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018990:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8018992:	3b01      	subs	r3, #1
 8018994:	fb00 a003 	mla	r0, r0, r3, sl
 8018998:	1400      	asrs	r0, r0, #16
 801899a:	f53f af2d 	bmi.w	80187f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801899e:	3901      	subs	r1, #1
 80189a0:	4288      	cmp	r0, r1
 80189a2:	f6bf af29 	bge.w	80187f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80189a6:	9926      	ldr	r1, [sp, #152]	@ 0x98
 80189a8:	fb01 5303 	mla	r3, r1, r3, r5
 80189ac:	141b      	asrs	r3, r3, #16
 80189ae:	f53f af23 	bmi.w	80187f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80189b2:	3a01      	subs	r2, #1
 80189b4:	4293      	cmp	r3, r2
 80189b6:	f6bf af1f 	bge.w	80187f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80189ba:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80189be:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 80189c2:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 80189c6:	f1be 0f00 	cmp.w	lr, #0
 80189ca:	dc6c      	bgt.n	8018aa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80189cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80189ce:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80189d2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80189d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80189d8:	2b00      	cmp	r3, #0
 80189da:	f340 810e 	ble.w	8018bfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80189de:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80189e2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80189e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80189e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80189ec:	eef0 6a62 	vmov.f32	s13, s5
 80189f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80189f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80189f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80189fc:	ee16 aa90 	vmov	sl, s13
 8018a00:	eef0 6a43 	vmov.f32	s13, s6
 8018a04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a08:	ee16 5a90 	vmov	r5, s13
 8018a0c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018a10:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018a14:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018a18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018a1c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018a20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018a24:	ee12 2a90 	vmov	r2, s5
 8018a28:	eef0 2a47 	vmov.f32	s5, s14
 8018a2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a30:	ee13 2a10 	vmov	r2, s6
 8018a34:	9325      	str	r3, [sp, #148]	@ 0x94
 8018a36:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8018a38:	eeb0 3a67 	vmov.f32	s6, s15
 8018a3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a40:	9326      	str	r3, [sp, #152]	@ 0x98
 8018a42:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018a44:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8018a46:	3b01      	subs	r3, #1
 8018a48:	930c      	str	r3, [sp, #48]	@ 0x30
 8018a4a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8018a4c:	bf08      	it	eq
 8018a4e:	4613      	moveq	r3, r2
 8018a50:	9309      	str	r3, [sp, #36]	@ 0x24
 8018a52:	e6a6      	b.n	80187a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018a54:	2900      	cmp	r1, #0
 8018a56:	f43f af10 	beq.w	801887a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8018a5a:	f819 3003 	ldrb.w	r3, [r9, r3]
 8018a5e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018a62:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018a64:	e709      	b.n	801887a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8018a66:	f112 0901 	adds.w	r9, r2, #1
 8018a6a:	f53f af7d 	bmi.w	8018968 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018a6e:	454b      	cmp	r3, r9
 8018a70:	f6ff af7a 	blt.w	8018968 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018a74:	f11c 0901 	adds.w	r9, ip, #1
 8018a78:	f53f af76 	bmi.w	8018968 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018a7c:	45ce      	cmp	lr, r9
 8018a7e:	f6ff af73 	blt.w	8018968 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018a82:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8018a84:	b21b      	sxth	r3, r3
 8018a86:	9202      	str	r2, [sp, #8]
 8018a88:	fa0f f28e 	sxth.w	r2, lr
 8018a8c:	9300      	str	r3, [sp, #0]
 8018a8e:	4633      	mov	r3, r6
 8018a90:	9201      	str	r2, [sp, #4]
 8018a92:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018a94:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8018a98:	e9cd c003 	strd	ip, r0, [sp, #12]
 8018a9c:	4639      	mov	r1, r7
 8018a9e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8018aa0:	f7ff fd8e 	bl	80185c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8018aa4:	e760      	b.n	8018968 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018aa6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018aa8:	ea4f 422a 	mov.w	r2, sl, asr #16
 8018aac:	1429      	asrs	r1, r5, #16
 8018aae:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018ab0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018ab4:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8018ab8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018abc:	fb03 2101 	mla	r1, r3, r1, r2
 8018ac0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018ac2:	440a      	add	r2, r1
 8018ac4:	5c61      	ldrb	r1, [r4, r1]
 8018ac6:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8018aca:	f1bc 0f00 	cmp.w	ip, #0
 8018ace:	f000 808c 	beq.w	8018bea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8018ad2:	7857      	ldrb	r7, [r2, #1]
 8018ad4:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8018ad8:	9413      	str	r4, [sp, #76]	@ 0x4c
 8018ada:	b140      	cbz	r0, 8018aee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018adc:	18d7      	adds	r7, r2, r3
 8018ade:	5cd3      	ldrb	r3, [r2, r3]
 8018ae0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018ae4:	9310      	str	r3, [sp, #64]	@ 0x40
 8018ae6:	787b      	ldrb	r3, [r7, #1]
 8018ae8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018aec:	9314      	str	r3, [sp, #80]	@ 0x50
 8018aee:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8018af0:	fb1c f200 	smulbb	r2, ip, r0
 8018af4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018af6:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018afa:	041f      	lsls	r7, r3, #16
 8018afc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8018b00:	10d2      	asrs	r2, r2, #3
 8018b02:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8018b06:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8018b0a:	431f      	orrs	r7, r3
 8018b0c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8018b10:	9317      	str	r3, [sp, #92]	@ 0x5c
 8018b12:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8018b14:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8018b16:	041b      	lsls	r3, r3, #16
 8018b18:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8018b1c:	ea43 030b 	orr.w	r3, r3, fp
 8018b20:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018b24:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8018b28:	4353      	muls	r3, r2
 8018b2a:	fb04 3707 	mla	r7, r4, r7, r3
 8018b2e:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8018b32:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018b34:	ea43 0b01 	orr.w	fp, r3, r1
 8018b38:	f1c0 0110 	rsb	r1, r0, #16
 8018b3c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018b3e:	eba1 0c0c 	sub.w	ip, r1, ip
 8018b42:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018b46:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8018b4a:	fb0c 770b 	mla	r7, ip, fp, r7
 8018b4e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018b52:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 8018b56:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8018b5a:	ea4c 0c0b 	orr.w	ip, ip, fp
 8018b5e:	fb02 770c 	mla	r7, r2, ip, r7
 8018b62:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8018b64:	0d79      	lsrs	r1, r7, #21
 8018b66:	8812      	ldrh	r2, [r2, #0]
 8018b68:	097f      	lsrs	r7, r7, #5
 8018b6a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018b6e:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8018b72:	430f      	orrs	r7, r1
 8018b74:	1211      	asrs	r1, r2, #8
 8018b76:	b2bb      	uxth	r3, r7
 8018b78:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018b7c:	10d7      	asrs	r7, r2, #3
 8018b7e:	fb11 f104 	smulbb	r1, r1, r4
 8018b82:	1218      	asrs	r0, r3, #8
 8018b84:	00d2      	lsls	r2, r2, #3
 8018b86:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018b8a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8018b8e:	fb17 f704 	smulbb	r7, r7, r4
 8018b92:	b2d2      	uxtb	r2, r2
 8018b94:	fb00 1009 	mla	r0, r0, r9, r1
 8018b98:	10d9      	asrs	r1, r3, #3
 8018b9a:	fb12 f204 	smulbb	r2, r2, r4
 8018b9e:	00db      	lsls	r3, r3, #3
 8018ba0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018ba4:	b280      	uxth	r0, r0
 8018ba6:	b2db      	uxtb	r3, r3
 8018ba8:	fb01 7109 	mla	r1, r1, r9, r7
 8018bac:	fb03 2309 	mla	r3, r3, r9, r2
 8018bb0:	1c42      	adds	r2, r0, #1
 8018bb2:	b289      	uxth	r1, r1
 8018bb4:	b29b      	uxth	r3, r3
 8018bb6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018bba:	1c4f      	adds	r7, r1, #1
 8018bbc:	1c5a      	adds	r2, r3, #1
 8018bbe:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8018bc2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8018bc6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018bca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018bcc:	0949      	lsrs	r1, r1, #5
 8018bce:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018bd2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018bd6:	4310      	orrs	r0, r2
 8018bd8:	4308      	orrs	r0, r1
 8018bda:	f823 0b02 	strh.w	r0, [r3], #2
 8018bde:	930e      	str	r3, [sp, #56]	@ 0x38
 8018be0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8018be2:	449a      	add	sl, r3
 8018be4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8018be6:	441d      	add	r5, r3
 8018be8:	e6ed      	b.n	80189c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8018bea:	2800      	cmp	r0, #0
 8018bec:	f43f af7f 	beq.w	8018aee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018bf0:	5cd3      	ldrb	r3, [r2, r3]
 8018bf2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018bf6:	9310      	str	r3, [sp, #64]	@ 0x40
 8018bf8:	e779      	b.n	8018aee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018bfa:	b019      	add	sp, #100	@ 0x64
 8018bfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018c00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8018c00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018c04:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 8018c08:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8018c0c:	f1b8 0f00 	cmp.w	r8, #0
 8018c10:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 8018c14:	fb08 470e 	mla	r7, r8, lr, r4
 8018c18:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8018c1c:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8018c20:	eb02 0907 	add.w	r9, r2, r7
 8018c24:	8808      	ldrh	r0, [r1, #0]
 8018c26:	db67      	blt.n	8018cf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8018c28:	45c2      	cmp	sl, r8
 8018c2a:	dd65      	ble.n	8018cf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8018c2c:	2c00      	cmp	r4, #0
 8018c2e:	db61      	blt.n	8018cf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8018c30:	45a6      	cmp	lr, r4
 8018c32:	dd5f      	ble.n	8018cf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8018c34:	5dd2      	ldrb	r2, [r2, r7]
 8018c36:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8018c3a:	1c62      	adds	r2, r4, #1
 8018c3c:	d45f      	bmi.n	8018cfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8018c3e:	4596      	cmp	lr, r2
 8018c40:	dd5d      	ble.n	8018cfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8018c42:	2d00      	cmp	r5, #0
 8018c44:	d05b      	beq.n	8018cfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8018c46:	f899 2001 	ldrb.w	r2, [r9, #1]
 8018c4a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8018c4e:	f118 0801 	adds.w	r8, r8, #1
 8018c52:	d458      	bmi.n	8018d06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8018c54:	45c2      	cmp	sl, r8
 8018c56:	dd56      	ble.n	8018d06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8018c58:	2e00      	cmp	r6, #0
 8018c5a:	d054      	beq.n	8018d06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8018c5c:	2c00      	cmp	r4, #0
 8018c5e:	db50      	blt.n	8018d02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8018c60:	45a6      	cmp	lr, r4
 8018c62:	dd4e      	ble.n	8018d02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8018c64:	f819 200e 	ldrb.w	r2, [r9, lr]
 8018c68:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8018c6c:	3401      	adds	r4, #1
 8018c6e:	d407      	bmi.n	8018c80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8018c70:	45a6      	cmp	lr, r4
 8018c72:	dd05      	ble.n	8018c80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8018c74:	b125      	cbz	r5, 8018c80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8018c76:	44ce      	add	lr, r9
 8018c78:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8018c7c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8018c80:	fb15 f406 	smulbb	r4, r5, r6
 8018c84:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8018c88:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8018c8c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8018c90:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8018c94:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8018c98:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8018c9c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8018ca0:	ea43 0c0c 	orr.w	ip, r3, ip
 8018ca4:	f1c6 0310 	rsb	r3, r6, #16
 8018ca8:	ea4e 0707 	orr.w	r7, lr, r7
 8018cac:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8018cb0:	1b5b      	subs	r3, r3, r5
 8018cb2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8018cb6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018cba:	437d      	muls	r5, r7
 8018cbc:	fb03 5c0c 	mla	ip, r3, ip, r5
 8018cc0:	0403      	lsls	r3, r0, #16
 8018cc2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8018cc6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8018cca:	4318      	orrs	r0, r3
 8018ccc:	0413      	lsls	r3, r2, #16
 8018cce:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8018cd2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8018cd6:	fb04 c000 	mla	r0, r4, r0, ip
 8018cda:	4313      	orrs	r3, r2
 8018cdc:	fb06 0003 	mla	r0, r6, r3, r0
 8018ce0:	0d43      	lsrs	r3, r0, #21
 8018ce2:	0940      	lsrs	r0, r0, #5
 8018ce4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018ce8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8018cec:	4318      	orrs	r0, r3
 8018cee:	8008      	strh	r0, [r1, #0]
 8018cf0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018cf4:	4684      	mov	ip, r0
 8018cf6:	e7a0      	b.n	8018c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8018cf8:	4607      	mov	r7, r0
 8018cfa:	4684      	mov	ip, r0
 8018cfc:	e7a7      	b.n	8018c4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8018cfe:	4607      	mov	r7, r0
 8018d00:	e7a5      	b.n	8018c4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8018d02:	4602      	mov	r2, r0
 8018d04:	e7b2      	b.n	8018c6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8018d06:	4602      	mov	r2, r0
 8018d08:	e7ba      	b.n	8018c80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08018d0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018d0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d0e:	b093      	sub	sp, #76	@ 0x4c
 8018d10:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018d14:	920f      	str	r2, [sp, #60]	@ 0x3c
 8018d16:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8018d18:	9010      	str	r0, [sp, #64]	@ 0x40
 8018d1a:	9108      	str	r1, [sp, #32]
 8018d1c:	6850      	ldr	r0, [r2, #4]
 8018d1e:	9306      	str	r3, [sp, #24]
 8018d20:	6812      	ldr	r2, [r2, #0]
 8018d22:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8018d26:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8018d2a:	fb00 1303 	mla	r3, r0, r3, r1
 8018d2e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8018d32:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018d34:	681b      	ldr	r3, [r3, #0]
 8018d36:	9307      	str	r3, [sp, #28]
 8018d38:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018d3a:	685f      	ldr	r7, [r3, #4]
 8018d3c:	3704      	adds	r7, #4
 8018d3e:	9b08      	ldr	r3, [sp, #32]
 8018d40:	2b00      	cmp	r3, #0
 8018d42:	dc03      	bgt.n	8018d4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8018d44:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018d46:	2b00      	cmp	r3, #0
 8018d48:	f340 81b2 	ble.w	80190b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8018d4c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018d4e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018d52:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018d56:	1e48      	subs	r0, r1, #1
 8018d58:	f102 3cff 	add.w	ip, r2, #4294967295
 8018d5c:	9b06      	ldr	r3, [sp, #24]
 8018d5e:	2b00      	cmp	r3, #0
 8018d60:	f340 80a9 	ble.w	8018eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8018d64:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018d68:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018d6c:	d406      	bmi.n	8018d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018d6e:	4586      	cmp	lr, r0
 8018d70:	da04      	bge.n	8018d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018d72:	2b00      	cmp	r3, #0
 8018d74:	db02      	blt.n	8018d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018d76:	4563      	cmp	r3, ip
 8018d78:	f2c0 809e 	blt.w	8018eb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8018d7c:	f11e 0e01 	adds.w	lr, lr, #1
 8018d80:	f100 808f 	bmi.w	8018ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8018d84:	4571      	cmp	r1, lr
 8018d86:	f2c0 808c 	blt.w	8018ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8018d8a:	3301      	adds	r3, #1
 8018d8c:	f100 8089 	bmi.w	8018ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8018d90:	429a      	cmp	r2, r3
 8018d92:	f2c0 8086 	blt.w	8018ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8018d96:	f8dd b018 	ldr.w	fp, [sp, #24]
 8018d9a:	46c8      	mov	r8, r9
 8018d9c:	f1bb 0f00 	cmp.w	fp, #0
 8018da0:	f340 80a6 	ble.w	8018ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018da4:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8018da6:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8018daa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018dac:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8018db0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018db4:	1422      	asrs	r2, r4, #16
 8018db6:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018dba:	689b      	ldr	r3, [r3, #8]
 8018dbc:	f100 80e3 	bmi.w	8018f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8018dc0:	f103 3aff 	add.w	sl, r3, #4294967295
 8018dc4:	4552      	cmp	r2, sl
 8018dc6:	f280 80de 	bge.w	8018f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8018dca:	f1bc 0f00 	cmp.w	ip, #0
 8018dce:	f2c0 80da 	blt.w	8018f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8018dd2:	f10e 3aff 	add.w	sl, lr, #4294967295
 8018dd6:	45d4      	cmp	ip, sl
 8018dd8:	f280 80d5 	bge.w	8018f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8018ddc:	b21b      	sxth	r3, r3
 8018dde:	9d07      	ldr	r5, [sp, #28]
 8018de0:	fb0c 2203 	mla	r2, ip, r3, r2
 8018de4:	eb05 0a02 	add.w	sl, r5, r2
 8018de8:	5caa      	ldrb	r2, [r5, r2]
 8018dea:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8018dee:	2800      	cmp	r0, #0
 8018df0:	f000 80c0 	beq.w	8018f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8018df4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8018df8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8018dfc:	920b      	str	r2, [sp, #44]	@ 0x2c
 8018dfe:	b151      	cbz	r1, 8018e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8018e00:	eb0a 0203 	add.w	r2, sl, r3
 8018e04:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8018e08:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018e0c:	9309      	str	r3, [sp, #36]	@ 0x24
 8018e0e:	7853      	ldrb	r3, [r2, #1]
 8018e10:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018e14:	930c      	str	r3, [sp, #48]	@ 0x30
 8018e16:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018e18:	fb10 f201 	smulbb	r2, r0, r1
 8018e1c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8018e1e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018e22:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8018e26:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8018e2a:	10d2      	asrs	r2, r2, #3
 8018e2c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8018e30:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8018e34:	ea4c 0c03 	orr.w	ip, ip, r3
 8018e38:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018e3a:	041b      	lsls	r3, r3, #16
 8018e3c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8018e40:	432b      	orrs	r3, r5
 8018e42:	4353      	muls	r3, r2
 8018e44:	fb0a 330c 	mla	r3, sl, ip, r3
 8018e48:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8018e4c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8018e50:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8018e54:	ea4c 0e0e 	orr.w	lr, ip, lr
 8018e58:	f1c1 0c10 	rsb	ip, r1, #16
 8018e5c:	ebac 0c00 	sub.w	ip, ip, r0
 8018e60:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018e64:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8018e68:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8018e6c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018e6e:	0418      	lsls	r0, r3, #16
 8018e70:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8018e74:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8018e78:	4318      	orrs	r0, r3
 8018e7a:	fb02 c200 	mla	r2, r2, r0, ip
 8018e7e:	0d53      	lsrs	r3, r2, #21
 8018e80:	0952      	lsrs	r2, r2, #5
 8018e82:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018e86:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8018e8a:	431a      	orrs	r2, r3
 8018e8c:	f8a8 2000 	strh.w	r2, [r8]
 8018e90:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8018e92:	f108 0802 	add.w	r8, r8, #2
 8018e96:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018e9a:	441c      	add	r4, r3
 8018e9c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018e9e:	441e      	add	r6, r3
 8018ea0:	e77c      	b.n	8018d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018ea2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8018ea4:	f109 0902 	add.w	r9, r9, #2
 8018ea8:	441c      	add	r4, r3
 8018eaa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018eac:	441e      	add	r6, r3
 8018eae:	9b06      	ldr	r3, [sp, #24]
 8018eb0:	3b01      	subs	r3, #1
 8018eb2:	9306      	str	r3, [sp, #24]
 8018eb4:	e752      	b.n	8018d5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018eb6:	d020      	beq.n	8018efa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018eb8:	9b06      	ldr	r3, [sp, #24]
 8018eba:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8018ebc:	3b01      	subs	r3, #1
 8018ebe:	fb00 4003 	mla	r0, r0, r3, r4
 8018ec2:	1400      	asrs	r0, r0, #16
 8018ec4:	f53f af67 	bmi.w	8018d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018ec8:	3901      	subs	r1, #1
 8018eca:	4288      	cmp	r0, r1
 8018ecc:	f6bf af63 	bge.w	8018d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018ed0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8018ed2:	fb01 6303 	mla	r3, r1, r3, r6
 8018ed6:	141b      	asrs	r3, r3, #16
 8018ed8:	f53f af5d 	bmi.w	8018d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018edc:	3a01      	subs	r2, #1
 8018ede:	4293      	cmp	r3, r2
 8018ee0:	f6bf af59 	bge.w	8018d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018ee4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8018ee8:	46ca      	mov	sl, r9
 8018eea:	f1b8 0f00 	cmp.w	r8, #0
 8018eee:	dc67      	bgt.n	8018fc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018ef0:	9b06      	ldr	r3, [sp, #24]
 8018ef2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018ef6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8018efa:	9b08      	ldr	r3, [sp, #32]
 8018efc:	2b00      	cmp	r3, #0
 8018efe:	f340 80d7 	ble.w	80190b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8018f02:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018f06:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8018f08:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018f0c:	eeb0 6a62 	vmov.f32	s12, s5
 8018f10:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018f14:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018f18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018f1c:	ee16 4a10 	vmov	r4, s12
 8018f20:	eeb0 6a43 	vmov.f32	s12, s6
 8018f24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018f28:	ee16 6a10 	vmov	r6, s12
 8018f2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018f30:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018f34:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018f38:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018f3c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018f40:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018f44:	ee12 2a90 	vmov	r2, s5
 8018f48:	eef0 2a47 	vmov.f32	s5, s14
 8018f4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f50:	ee13 2a10 	vmov	r2, s6
 8018f54:	931f      	str	r3, [sp, #124]	@ 0x7c
 8018f56:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8018f58:	eeb0 3a67 	vmov.f32	s6, s15
 8018f5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f60:	9320      	str	r3, [sp, #128]	@ 0x80
 8018f62:	9b08      	ldr	r3, [sp, #32]
 8018f64:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018f66:	3b01      	subs	r3, #1
 8018f68:	9308      	str	r3, [sp, #32]
 8018f6a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8018f6c:	bf08      	it	eq
 8018f6e:	4613      	moveq	r3, r2
 8018f70:	9306      	str	r3, [sp, #24]
 8018f72:	e6e4      	b.n	8018d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8018f74:	2900      	cmp	r1, #0
 8018f76:	f43f af4e 	beq.w	8018e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8018f7a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8018f7e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018f82:	9309      	str	r3, [sp, #36]	@ 0x24
 8018f84:	e747      	b.n	8018e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8018f86:	f112 0a01 	adds.w	sl, r2, #1
 8018f8a:	d481      	bmi.n	8018e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018f8c:	4553      	cmp	r3, sl
 8018f8e:	f6ff af7f 	blt.w	8018e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018f92:	f11c 0a01 	adds.w	sl, ip, #1
 8018f96:	f53f af7b 	bmi.w	8018e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018f9a:	45d6      	cmp	lr, sl
 8018f9c:	f6ff af78 	blt.w	8018e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018fa0:	b21b      	sxth	r3, r3
 8018fa2:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8018fa6:	fa0f f28e 	sxth.w	r2, lr
 8018faa:	9300      	str	r3, [sp, #0]
 8018fac:	463b      	mov	r3, r7
 8018fae:	9201      	str	r2, [sp, #4]
 8018fb0:	9a07      	ldr	r2, [sp, #28]
 8018fb2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8018fb6:	4641      	mov	r1, r8
 8018fb8:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8018fba:	f7ff fe21 	bl	8018c00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8018fbe:	e767      	b.n	8018e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018fc0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018fc2:	1422      	asrs	r2, r4, #16
 8018fc4:	1431      	asrs	r1, r6, #16
 8018fc6:	9d07      	ldr	r5, [sp, #28]
 8018fc8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018fcc:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8018fd0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018fd4:	fb03 2101 	mla	r1, r3, r1, r2
 8018fd8:	9a07      	ldr	r2, [sp, #28]
 8018fda:	440a      	add	r2, r1
 8018fdc:	5c69      	ldrb	r1, [r5, r1]
 8018fde:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8018fe2:	f1be 0f00 	cmp.w	lr, #0
 8018fe6:	d05c      	beq.n	80190a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8018fe8:	f892 c001 	ldrb.w	ip, [r2, #1]
 8018fec:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8018ff0:	950d      	str	r5, [sp, #52]	@ 0x34
 8018ff2:	b150      	cbz	r0, 801900a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8018ff4:	eb02 0c03 	add.w	ip, r2, r3
 8018ff8:	5cd3      	ldrb	r3, [r2, r3]
 8018ffa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018ffe:	930a      	str	r3, [sp, #40]	@ 0x28
 8019000:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019004:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019008:	930e      	str	r3, [sp, #56]	@ 0x38
 801900a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801900c:	fb1e f200 	smulbb	r2, lr, r0
 8019010:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8019012:	f108 38ff 	add.w	r8, r8, #4294967295
 8019016:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801901a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801901e:	10d2      	asrs	r2, r2, #3
 8019020:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 8019024:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019028:	ea4c 0c03 	orr.w	ip, ip, r3
 801902c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019030:	9311      	str	r3, [sp, #68]	@ 0x44
 8019032:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019034:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019036:	041b      	lsls	r3, r3, #16
 8019038:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801903c:	ea43 030b 	orr.w	r3, r3, fp
 8019040:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019044:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8019048:	4353      	muls	r3, r2
 801904a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801904e:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8019052:	ea43 0b01 	orr.w	fp, r3, r1
 8019056:	f1c0 0110 	rsb	r1, r0, #16
 801905a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801905c:	eba1 0e0e 	sub.w	lr, r1, lr
 8019060:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019064:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019068:	fb0e cc0b 	mla	ip, lr, fp, ip
 801906c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019070:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 8019074:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8019078:	ea4b 0e0e 	orr.w	lr, fp, lr
 801907c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019080:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019084:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019088:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801908c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019090:	ea43 0c0c 	orr.w	ip, r3, ip
 8019094:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019096:	441c      	add	r4, r3
 8019098:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801909a:	f82a cb02 	strh.w	ip, [sl], #2
 801909e:	441e      	add	r6, r3
 80190a0:	e723      	b.n	8018eea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80190a2:	2800      	cmp	r0, #0
 80190a4:	d0b1      	beq.n	801900a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80190a6:	5cd3      	ldrb	r3, [r2, r3]
 80190a8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80190ac:	930a      	str	r3, [sp, #40]	@ 0x28
 80190ae:	e7ac      	b.n	801900a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80190b0:	b013      	add	sp, #76	@ 0x4c
 80190b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080190b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80190b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190ba:	880d      	ldrh	r5, [r1, #0]
 80190bc:	b087      	sub	sp, #28
 80190be:	10ef      	asrs	r7, r5, #3
 80190c0:	9103      	str	r1, [sp, #12]
 80190c2:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80190c6:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 80190ca:	00ed      	lsls	r5, r5, #3
 80190cc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80190d0:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 80190d4:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 80190d8:	b2ed      	uxtb	r5, r5
 80190da:	9701      	str	r7, [sp, #4]
 80190dc:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 80190e0:	9502      	str	r5, [sp, #8]
 80190e2:	9d01      	ldr	r5, [sp, #4]
 80190e4:	9902      	ldr	r1, [sp, #8]
 80190e6:	022d      	lsls	r5, r5, #8
 80190e8:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 80190ec:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 80190f0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80190f4:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 80190f8:	430d      	orrs	r5, r1
 80190fa:	fb06 0709 	mla	r7, r6, r9, r0
 80190fe:	2e00      	cmp	r6, #0
 8019100:	9505      	str	r5, [sp, #20]
 8019102:	eb02 0c07 	add.w	ip, r2, r7
 8019106:	f2c0 80b6 	blt.w	8019276 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801910a:	45b3      	cmp	fp, r6
 801910c:	f340 80b3 	ble.w	8019276 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019110:	2800      	cmp	r0, #0
 8019112:	f2c0 80ae 	blt.w	8019272 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019116:	4581      	cmp	r9, r0
 8019118:	f340 80ab 	ble.w	8019272 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801911c:	5dd7      	ldrb	r7, [r2, r7]
 801911e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019122:	441f      	add	r7, r3
 8019124:	1c42      	adds	r2, r0, #1
 8019126:	f100 80a9 	bmi.w	801927c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801912a:	4591      	cmp	r9, r2
 801912c:	f340 80a6 	ble.w	801927c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019130:	2c00      	cmp	r4, #0
 8019132:	f000 80a3 	beq.w	801927c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019136:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801913a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801913e:	441d      	add	r5, r3
 8019140:	3601      	adds	r6, #1
 8019142:	f100 809f 	bmi.w	8019284 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019146:	45b3      	cmp	fp, r6
 8019148:	f340 809c 	ble.w	8019284 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801914c:	f1be 0f00 	cmp.w	lr, #0
 8019150:	f000 8098 	beq.w	8019284 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019154:	2800      	cmp	r0, #0
 8019156:	f2c0 8093 	blt.w	8019280 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801915a:	4581      	cmp	r9, r0
 801915c:	f340 8090 	ble.w	8019280 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019160:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019164:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019168:	441e      	add	r6, r3
 801916a:	3001      	adds	r0, #1
 801916c:	f100 808d 	bmi.w	801928a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019170:	4581      	cmp	r9, r0
 8019172:	f340 808a 	ble.w	801928a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019176:	2c00      	cmp	r4, #0
 8019178:	f000 8087 	beq.w	801928a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801917c:	44e1      	add	r9, ip
 801917e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019182:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019186:	4413      	add	r3, r2
 8019188:	b2a4      	uxth	r4, r4
 801918a:	f897 c002 	ldrb.w	ip, [r7, #2]
 801918e:	fa1f fe8e 	uxth.w	lr, lr
 8019192:	9901      	ldr	r1, [sp, #4]
 8019194:	fb04 fb0e 	mul.w	fp, r4, lr
 8019198:	0124      	lsls	r4, r4, #4
 801919a:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801919e:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 80191a2:	eba4 040b 	sub.w	r4, r4, fp
 80191a6:	fa1f f08e 	uxth.w	r0, lr
 80191aa:	b2a2      	uxth	r2, r4
 80191ac:	78ac      	ldrb	r4, [r5, #2]
 80191ae:	eba9 0900 	sub.w	r9, r9, r0
 80191b2:	fa1f fe88 	uxth.w	lr, r8
 80191b6:	4354      	muls	r4, r2
 80191b8:	ea6f 0808 	mvn.w	r8, r8
 80191bc:	fa1f f989 	uxth.w	r9, r9
 80191c0:	fa5f f888 	uxtb.w	r8, r8
 80191c4:	fb09 440c 	mla	r4, r9, ip, r4
 80191c8:	f896 c002 	ldrb.w	ip, [r6, #2]
 80191cc:	fb1a fa08 	smulbb	sl, sl, r8
 80191d0:	fb00 440c 	mla	r4, r0, ip, r4
 80191d4:	f893 c002 	ldrb.w	ip, [r3, #2]
 80191d8:	fb0b 4c0c 	mla	ip, fp, ip, r4
 80191dc:	787c      	ldrb	r4, [r7, #1]
 80191de:	783f      	ldrb	r7, [r7, #0]
 80191e0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80191e4:	fb0c ac0e 	mla	ip, ip, lr, sl
 80191e8:	f895 a001 	ldrb.w	sl, [r5, #1]
 80191ec:	782d      	ldrb	r5, [r5, #0]
 80191ee:	fb02 fa0a 	mul.w	sl, r2, sl
 80191f2:	fa1f fc8c 	uxth.w	ip, ip
 80191f6:	436a      	muls	r2, r5
 80191f8:	7835      	ldrb	r5, [r6, #0]
 80191fa:	fb09 aa04 	mla	sl, r9, r4, sl
 80191fe:	7874      	ldrb	r4, [r6, #1]
 8019200:	fb09 2207 	mla	r2, r9, r7, r2
 8019204:	fb00 aa04 	mla	sl, r0, r4, sl
 8019208:	785c      	ldrb	r4, [r3, #1]
 801920a:	fb00 2005 	mla	r0, r0, r5, r2
 801920e:	781b      	ldrb	r3, [r3, #0]
 8019210:	fb0b a404 	mla	r4, fp, r4, sl
 8019214:	fb11 fa08 	smulbb	sl, r1, r8
 8019218:	fb0b 0b03 	mla	fp, fp, r3, r0
 801921c:	9b02      	ldr	r3, [sp, #8]
 801921e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019222:	fb13 f808 	smulbb	r8, r3, r8
 8019226:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801922a:	fb04 a40e 	mla	r4, r4, lr, sl
 801922e:	f10c 0301 	add.w	r3, ip, #1
 8019232:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019236:	b2a4      	uxth	r4, r4
 8019238:	fa1f fe8e 	uxth.w	lr, lr
 801923c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019240:	f104 0a01 	add.w	sl, r4, #1
 8019244:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 8019248:	f10e 0c01 	add.w	ip, lr, #1
 801924c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019250:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019254:	0964      	lsrs	r4, r4, #5
 8019256:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801925a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801925e:	ea4c 0c03 	orr.w	ip, ip, r3
 8019262:	9b03      	ldr	r3, [sp, #12]
 8019264:	ea4c 0c04 	orr.w	ip, ip, r4
 8019268:	f8a3 c000 	strh.w	ip, [r3]
 801926c:	b007      	add	sp, #28
 801926e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019272:	af05      	add	r7, sp, #20
 8019274:	e756      	b.n	8019124 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019276:	ad05      	add	r5, sp, #20
 8019278:	462f      	mov	r7, r5
 801927a:	e761      	b.n	8019140 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801927c:	ad05      	add	r5, sp, #20
 801927e:	e75f      	b.n	8019140 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019280:	ae05      	add	r6, sp, #20
 8019282:	e772      	b.n	801916a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019284:	ab05      	add	r3, sp, #20
 8019286:	461e      	mov	r6, r3
 8019288:	e77e      	b.n	8019188 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801928a:	ab05      	add	r3, sp, #20
 801928c:	e77c      	b.n	8019188 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801928e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801928e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019292:	b095      	sub	sp, #84	@ 0x54
 8019294:	9212      	str	r2, [sp, #72]	@ 0x48
 8019296:	9309      	str	r3, [sp, #36]	@ 0x24
 8019298:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801929a:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801929e:	9013      	str	r0, [sp, #76]	@ 0x4c
 80192a0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80192a2:	6850      	ldr	r0, [r2, #4]
 80192a4:	910e      	str	r1, [sp, #56]	@ 0x38
 80192a6:	6812      	ldr	r2, [r2, #0]
 80192a8:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 80192ac:	fb00 1303 	mla	r3, r0, r3, r1
 80192b0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80192b4:	930a      	str	r3, [sp, #40]	@ 0x28
 80192b6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80192b8:	681b      	ldr	r3, [r3, #0]
 80192ba:	930d      	str	r3, [sp, #52]	@ 0x34
 80192bc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80192be:	685c      	ldr	r4, [r3, #4]
 80192c0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80192c2:	3404      	adds	r4, #4
 80192c4:	43db      	mvns	r3, r3
 80192c6:	b2db      	uxtb	r3, r3
 80192c8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80192ca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80192cc:	2b00      	cmp	r3, #0
 80192ce:	dc03      	bgt.n	80192d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80192d0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80192d2:	2b00      	cmp	r3, #0
 80192d4:	f340 8255 	ble.w	8019782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80192d8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80192da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80192de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80192e2:	1e48      	subs	r0, r1, #1
 80192e4:	1e55      	subs	r5, r2, #1
 80192e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80192e8:	2b00      	cmp	r3, #0
 80192ea:	f340 80f9 	ble.w	80194e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80192ee:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 80192f0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80192f2:	1436      	asrs	r6, r6, #16
 80192f4:	ea4f 4323 	mov.w	r3, r3, asr #16
 80192f8:	d406      	bmi.n	8019308 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80192fa:	4286      	cmp	r6, r0
 80192fc:	da04      	bge.n	8019308 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80192fe:	2b00      	cmp	r3, #0
 8019300:	db02      	blt.n	8019308 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019302:	42ab      	cmp	r3, r5
 8019304:	f2c0 80ed 	blt.w	80194e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8019308:	3601      	adds	r6, #1
 801930a:	f100 80da 	bmi.w	80194c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801930e:	42b1      	cmp	r1, r6
 8019310:	f2c0 80d7 	blt.w	80194c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019314:	3301      	adds	r3, #1
 8019316:	f100 80d4 	bmi.w	80194c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801931a:	429a      	cmp	r2, r3
 801931c:	f2c0 80d1 	blt.w	80194c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019320:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019322:	9311      	str	r3, [sp, #68]	@ 0x44
 8019324:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019326:	930c      	str	r3, [sp, #48]	@ 0x30
 8019328:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801932a:	2b00      	cmp	r3, #0
 801932c:	f340 80fa 	ble.w	8019524 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8019330:	9826      	ldr	r0, [sp, #152]	@ 0x98
 8019332:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019334:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8019336:	68c6      	ldr	r6, [r0, #12]
 8019338:	141d      	asrs	r5, r3, #16
 801933a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801933c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019340:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019342:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8019344:	1400      	asrs	r0, r0, #16
 8019346:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801934a:	6892      	ldr	r2, [r2, #8]
 801934c:	f100 813e 	bmi.w	80195cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019350:	1e57      	subs	r7, r2, #1
 8019352:	42b8      	cmp	r0, r7
 8019354:	f280 813a 	bge.w	80195cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019358:	2d00      	cmp	r5, #0
 801935a:	f2c0 8137 	blt.w	80195cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801935e:	1e77      	subs	r7, r6, #1
 8019360:	42bd      	cmp	r5, r7
 8019362:	f280 8133 	bge.w	80195cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019366:	b212      	sxth	r2, r2
 8019368:	fb05 0002 	mla	r0, r5, r2, r0
 801936c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801936e:	f815 a000 	ldrb.w	sl, [r5, r0]
 8019372:	182e      	adds	r6, r5, r0
 8019374:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8019378:	eb04 050a 	add.w	r5, r4, sl
 801937c:	2b00      	cmp	r3, #0
 801937e:	f000 8117 	beq.w	80195b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019382:	f896 c001 	ldrb.w	ip, [r6, #1]
 8019386:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801938a:	44a4      	add	ip, r4
 801938c:	2900      	cmp	r1, #0
 801938e:	f000 8117 	beq.w	80195c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8019392:	18b0      	adds	r0, r6, r2
 8019394:	5cb2      	ldrb	r2, [r6, r2]
 8019396:	7840      	ldrb	r0, [r0, #1]
 8019398:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801939c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80193a0:	4422      	add	r2, r4
 80193a2:	4420      	add	r0, r4
 80193a4:	b29b      	uxth	r3, r3
 80193a6:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80193aa:	b289      	uxth	r1, r1
 80193ac:	f895 b002 	ldrb.w	fp, [r5, #2]
 80193b0:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80193b2:	fb03 f901 	mul.w	r9, r3, r1
 80193b6:	011b      	lsls	r3, r3, #4
 80193b8:	f8b6 e000 	ldrh.w	lr, [r6]
 80193bc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80193c0:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 80193c4:	eba3 0309 	sub.w	r3, r3, r9
 80193c8:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 80193cc:	b289      	uxth	r1, r1
 80193ce:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80193d2:	b29b      	uxth	r3, r3
 80193d4:	eba8 0801 	sub.w	r8, r8, r1
 80193d8:	435f      	muls	r7, r3
 80193da:	fa1f f888 	uxth.w	r8, r8
 80193de:	9310      	str	r3, [sp, #64]	@ 0x40
 80193e0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80193e2:	fb08 770b 	mla	r7, r8, fp, r7
 80193e6:	f892 b002 	ldrb.w	fp, [r2, #2]
 80193ea:	fb01 770b 	mla	r7, r1, fp, r7
 80193ee:	f890 b002 	ldrb.w	fp, [r0, #2]
 80193f2:	fb09 770b 	mla	r7, r9, fp, r7
 80193f6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80193fa:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 80193fe:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8019402:	fb1b fb03 	smulbb	fp, fp, r3
 8019406:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019408:	fb07 b706 	mla	r7, r7, r6, fp
 801940c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8019410:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019414:	f89c c000 	ldrb.w	ip, [ip]
 8019418:	b2bf      	uxth	r7, r7
 801941a:	435d      	muls	r5, r3
 801941c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801941e:	fb08 550b 	mla	r5, r8, fp, r5
 8019422:	f892 b001 	ldrb.w	fp, [r2, #1]
 8019426:	fb01 550b 	mla	r5, r1, fp, r5
 801942a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801942e:	fb09 550b 	mla	r5, r9, fp, r5
 8019432:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8019436:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801943a:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801943e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8019442:	fa5f fe8e 	uxtb.w	lr, lr
 8019446:	fb1b fb03 	smulbb	fp, fp, r3
 801944a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801944c:	fb03 f30c 	mul.w	r3, r3, ip
 8019450:	f892 c000 	ldrb.w	ip, [r2]
 8019454:	fb05 b506 	mla	r5, r5, r6, fp
 8019458:	fb08 330a 	mla	r3, r8, sl, r3
 801945c:	b2ad      	uxth	r5, r5
 801945e:	fb01 330c 	mla	r3, r1, ip, r3
 8019462:	f890 c000 	ldrb.w	ip, [r0]
 8019466:	f105 0b01 	add.w	fp, r5, #1
 801946a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801946e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019470:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8019474:	fb1e fe03 	smulbb	lr, lr, r3
 8019478:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801947c:	1c7b      	adds	r3, r7, #1
 801947e:	096d      	lsrs	r5, r5, #5
 8019480:	fb0c e606 	mla	r6, ip, r6, lr
 8019484:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8019488:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801948c:	b2b6      	uxth	r6, r6
 801948e:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 8019492:	1c77      	adds	r7, r6, #1
 8019494:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8019498:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801949c:	431f      	orrs	r7, r3
 801949e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80194a0:	433d      	orrs	r5, r7
 80194a2:	801d      	strh	r5, [r3, #0]
 80194a4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80194a6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80194a8:	3302      	adds	r3, #2
 80194aa:	930c      	str	r3, [sp, #48]	@ 0x30
 80194ac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80194ae:	4413      	add	r3, r2
 80194b0:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80194b2:	931f      	str	r3, [sp, #124]	@ 0x7c
 80194b4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80194b6:	4413      	add	r3, r2
 80194b8:	9320      	str	r3, [sp, #128]	@ 0x80
 80194ba:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80194bc:	3b01      	subs	r3, #1
 80194be:	9311      	str	r3, [sp, #68]	@ 0x44
 80194c0:	e732      	b.n	8019328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80194c2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80194c4:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 80194c6:	4433      	add	r3, r6
 80194c8:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 80194ca:	931f      	str	r3, [sp, #124]	@ 0x7c
 80194cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80194ce:	4433      	add	r3, r6
 80194d0:	9320      	str	r3, [sp, #128]	@ 0x80
 80194d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80194d4:	3b01      	subs	r3, #1
 80194d6:	9309      	str	r3, [sp, #36]	@ 0x24
 80194d8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80194da:	3302      	adds	r3, #2
 80194dc:	930a      	str	r3, [sp, #40]	@ 0x28
 80194de:	e702      	b.n	80192e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80194e0:	d027      	beq.n	8019532 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80194e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80194e4:	9821      	ldr	r0, [sp, #132]	@ 0x84
 80194e6:	3b01      	subs	r3, #1
 80194e8:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 80194ea:	fb00 5003 	mla	r0, r0, r3, r5
 80194ee:	1400      	asrs	r0, r0, #16
 80194f0:	f53f af16 	bmi.w	8019320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80194f4:	3901      	subs	r1, #1
 80194f6:	4288      	cmp	r0, r1
 80194f8:	f6bf af12 	bge.w	8019320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80194fc:	9922      	ldr	r1, [sp, #136]	@ 0x88
 80194fe:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8019500:	fb01 0303 	mla	r3, r1, r3, r0
 8019504:	141b      	asrs	r3, r3, #16
 8019506:	f53f af0b 	bmi.w	8019320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801950a:	3a01      	subs	r2, #1
 801950c:	4293      	cmp	r3, r2
 801950e:	f6bf af07 	bge.w	8019320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019512:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019514:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 8019518:	9311      	str	r3, [sp, #68]	@ 0x44
 801951a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801951c:	930c      	str	r3, [sp, #48]	@ 0x30
 801951e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019520:	2b00      	cmp	r3, #0
 8019522:	dc70      	bgt.n	8019606 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8019524:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019526:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019528:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801952c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019530:	930a      	str	r3, [sp, #40]	@ 0x28
 8019532:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019534:	2b00      	cmp	r3, #0
 8019536:	f340 8124 	ble.w	8019782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801953a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801953e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8019540:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019544:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019548:	eef0 6a62 	vmov.f32	s13, s5
 801954c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019550:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019554:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019558:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801955c:	eef0 6a43 	vmov.f32	s13, s6
 8019560:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019564:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 8019568:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801956c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019570:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019574:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019578:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801957c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019580:	ee12 2a90 	vmov	r2, s5
 8019584:	eef0 2a47 	vmov.f32	s5, s14
 8019588:	fb92 f3f3 	sdiv	r3, r2, r3
 801958c:	ee13 2a10 	vmov	r2, s6
 8019590:	9321      	str	r3, [sp, #132]	@ 0x84
 8019592:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8019594:	eeb0 3a67 	vmov.f32	s6, s15
 8019598:	fb92 f3f3 	sdiv	r3, r2, r3
 801959c:	9322      	str	r3, [sp, #136]	@ 0x88
 801959e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80195a0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80195a2:	3b01      	subs	r3, #1
 80195a4:	930e      	str	r3, [sp, #56]	@ 0x38
 80195a6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80195a8:	bf08      	it	eq
 80195aa:	4613      	moveq	r3, r2
 80195ac:	9309      	str	r3, [sp, #36]	@ 0x24
 80195ae:	e68c      	b.n	80192ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80195b0:	b149      	cbz	r1, 80195c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80195b2:	5cb2      	ldrb	r2, [r6, r2]
 80195b4:	4628      	mov	r0, r5
 80195b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80195ba:	4422      	add	r2, r4
 80195bc:	46ac      	mov	ip, r5
 80195be:	e6f1      	b.n	80193a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80195c0:	4628      	mov	r0, r5
 80195c2:	462a      	mov	r2, r5
 80195c4:	e6ee      	b.n	80193a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80195c6:	4628      	mov	r0, r5
 80195c8:	462a      	mov	r2, r5
 80195ca:	e7f7      	b.n	80195bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80195cc:	1c47      	adds	r7, r0, #1
 80195ce:	f53f af69 	bmi.w	80194a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80195d2:	42ba      	cmp	r2, r7
 80195d4:	f6ff af66 	blt.w	80194a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80195d8:	1c6f      	adds	r7, r5, #1
 80195da:	f53f af63 	bmi.w	80194a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80195de:	42be      	cmp	r6, r7
 80195e0:	f6ff af60 	blt.w	80194a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80195e4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80195e6:	b236      	sxth	r6, r6
 80195e8:	b212      	sxth	r2, r2
 80195ea:	9002      	str	r0, [sp, #8]
 80195ec:	9601      	str	r6, [sp, #4]
 80195ee:	9200      	str	r2, [sp, #0]
 80195f0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80195f2:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80195f6:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80195fa:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 80195fe:	4623      	mov	r3, r4
 8019600:	f7ff fd59 	bl	80190b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8019604:	e74e      	b.n	80194a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019606:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8019608:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801960a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801960e:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8019610:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8019612:	1400      	asrs	r0, r0, #16
 8019614:	142d      	asrs	r5, r5, #16
 8019616:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019618:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801961c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8019620:	fb02 5000 	mla	r0, r2, r0, r5
 8019624:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8019626:	f815 9000 	ldrb.w	r9, [r5, r0]
 801962a:	182e      	adds	r6, r5, r0
 801962c:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8019630:	eb04 0509 	add.w	r5, r4, r9
 8019634:	2b00      	cmp	r3, #0
 8019636:	f000 8096 	beq.w	8019766 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801963a:	7877      	ldrb	r7, [r6, #1]
 801963c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019640:	4427      	add	r7, r4
 8019642:	2900      	cmp	r1, #0
 8019644:	f000 8097 	beq.w	8019776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8019648:	18b0      	adds	r0, r6, r2
 801964a:	5cb2      	ldrb	r2, [r6, r2]
 801964c:	7840      	ldrb	r0, [r0, #1]
 801964e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019652:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019656:	4422      	add	r2, r4
 8019658:	4420      	add	r0, r4
 801965a:	b29b      	uxth	r3, r3
 801965c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801965e:	b289      	uxth	r1, r1
 8019660:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019664:	f8b6 c000 	ldrh.w	ip, [r6]
 8019668:	fb03 f801 	mul.w	r8, r3, r1
 801966c:	011b      	lsls	r3, r3, #4
 801966e:	78be      	ldrb	r6, [r7, #2]
 8019670:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8019674:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8019678:	eba3 0308 	sub.w	r3, r3, r8
 801967c:	f814 9009 	ldrb.w	r9, [r4, r9]
 8019680:	b289      	uxth	r1, r1
 8019682:	b29b      	uxth	r3, r3
 8019684:	ebae 0e01 	sub.w	lr, lr, r1
 8019688:	435e      	muls	r6, r3
 801968a:	fa1f fe8e 	uxth.w	lr, lr
 801968e:	9310      	str	r3, [sp, #64]	@ 0x40
 8019690:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019692:	fb0e 660b 	mla	r6, lr, fp, r6
 8019696:	f892 b002 	ldrb.w	fp, [r2, #2]
 801969a:	fb01 660b 	mla	r6, r1, fp, r6
 801969e:	f890 b002 	ldrb.w	fp, [r0, #2]
 80196a2:	fb08 660b 	mla	r6, r8, fp, r6
 80196a6:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80196aa:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 80196ae:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80196b2:	fb1b fb03 	smulbb	fp, fp, r3
 80196b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80196b8:	fb06 b60a 	mla	r6, r6, sl, fp
 80196bc:	f895 b001 	ldrb.w	fp, [r5, #1]
 80196c0:	787d      	ldrb	r5, [r7, #1]
 80196c2:	783f      	ldrb	r7, [r7, #0]
 80196c4:	b2b6      	uxth	r6, r6
 80196c6:	435d      	muls	r5, r3
 80196c8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80196ca:	fb0e 550b 	mla	r5, lr, fp, r5
 80196ce:	f892 b001 	ldrb.w	fp, [r2, #1]
 80196d2:	fb01 550b 	mla	r5, r1, fp, r5
 80196d6:	f890 b001 	ldrb.w	fp, [r0, #1]
 80196da:	fb08 550b 	mla	r5, r8, fp, r5
 80196de:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80196e2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80196e6:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80196ea:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80196ee:	fa5f fc8c 	uxtb.w	ip, ip
 80196f2:	fb1b fb03 	smulbb	fp, fp, r3
 80196f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80196f8:	437b      	muls	r3, r7
 80196fa:	7817      	ldrb	r7, [r2, #0]
 80196fc:	fb05 b50a 	mla	r5, r5, sl, fp
 8019700:	fb0e 3309 	mla	r3, lr, r9, r3
 8019704:	b2ad      	uxth	r5, r5
 8019706:	fb01 3307 	mla	r3, r1, r7, r3
 801970a:	7807      	ldrb	r7, [r0, #0]
 801970c:	f105 0b01 	add.w	fp, r5, #1
 8019710:	fb08 3707 	mla	r7, r8, r7, r3
 8019714:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019716:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801971a:	fb1c fc03 	smulbb	ip, ip, r3
 801971e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8019722:	1c73      	adds	r3, r6, #1
 8019724:	096d      	lsrs	r5, r5, #5
 8019726:	fb07 c70a 	mla	r7, r7, sl, ip
 801972a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801972e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019732:	b2bf      	uxth	r7, r7
 8019734:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019736:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801973a:	1c7a      	adds	r2, r7, #1
 801973c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8019740:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019744:	4316      	orrs	r6, r2
 8019746:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8019748:	432e      	orrs	r6, r5
 801974a:	f823 6b02 	strh.w	r6, [r3], #2
 801974e:	930c      	str	r3, [sp, #48]	@ 0x30
 8019750:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019752:	4413      	add	r3, r2
 8019754:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8019756:	931f      	str	r3, [sp, #124]	@ 0x7c
 8019758:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801975a:	4413      	add	r3, r2
 801975c:	9320      	str	r3, [sp, #128]	@ 0x80
 801975e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019760:	3b01      	subs	r3, #1
 8019762:	9311      	str	r3, [sp, #68]	@ 0x44
 8019764:	e6db      	b.n	801951e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8019766:	b149      	cbz	r1, 801977c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8019768:	5cb2      	ldrb	r2, [r6, r2]
 801976a:	4628      	mov	r0, r5
 801976c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019770:	4422      	add	r2, r4
 8019772:	462f      	mov	r7, r5
 8019774:	e771      	b.n	801965a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8019776:	4628      	mov	r0, r5
 8019778:	462a      	mov	r2, r5
 801977a:	e76e      	b.n	801965a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801977c:	4628      	mov	r0, r5
 801977e:	462a      	mov	r2, r5
 8019780:	e7f7      	b.n	8019772 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8019782:	b015      	add	sp, #84	@ 0x54
 8019784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019788 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8019788:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801978c:	880f      	ldrh	r7, [r1, #0]
 801978e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 8019792:	023c      	lsls	r4, r7, #8
 8019794:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8019798:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801979c:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 80197a0:	017c      	lsls	r4, r7, #5
 80197a2:	00ff      	lsls	r7, r7, #3
 80197a4:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80197a8:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 80197ac:	b2ff      	uxtb	r7, r7
 80197ae:	ea4b 0404 	orr.w	r4, fp, r4
 80197b2:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 80197b6:	4327      	orrs	r7, r4
 80197b8:	fb05 ca0e 	mla	sl, r5, lr, ip
 80197bc:	2d00      	cmp	r5, #0
 80197be:	9701      	str	r7, [sp, #4]
 80197c0:	eb02 080a 	add.w	r8, r2, sl
 80197c4:	db7e      	blt.n	80198c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80197c6:	45a9      	cmp	r9, r5
 80197c8:	dd7c      	ble.n	80198c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80197ca:	f1bc 0f00 	cmp.w	ip, #0
 80197ce:	db77      	blt.n	80198c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80197d0:	45e6      	cmp	lr, ip
 80197d2:	dd75      	ble.n	80198c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80197d4:	f812 700a 	ldrb.w	r7, [r2, sl]
 80197d8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80197dc:	441f      	add	r7, r3
 80197de:	f11c 0201 	adds.w	r2, ip, #1
 80197e2:	d472      	bmi.n	80198ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80197e4:	4596      	cmp	lr, r2
 80197e6:	dd70      	ble.n	80198ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80197e8:	2800      	cmp	r0, #0
 80197ea:	d06e      	beq.n	80198ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80197ec:	f898 4001 	ldrb.w	r4, [r8, #1]
 80197f0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80197f4:	441c      	add	r4, r3
 80197f6:	3501      	adds	r5, #1
 80197f8:	d46b      	bmi.n	80198d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80197fa:	45a9      	cmp	r9, r5
 80197fc:	dd69      	ble.n	80198d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80197fe:	2e00      	cmp	r6, #0
 8019800:	d067      	beq.n	80198d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8019802:	f1bc 0f00 	cmp.w	ip, #0
 8019806:	db62      	blt.n	80198ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8019808:	45e6      	cmp	lr, ip
 801980a:	dd60      	ble.n	80198ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801980c:	f818 500e 	ldrb.w	r5, [r8, lr]
 8019810:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019814:	441d      	add	r5, r3
 8019816:	f11c 0201 	adds.w	r2, ip, #1
 801981a:	d45d      	bmi.n	80198d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801981c:	4596      	cmp	lr, r2
 801981e:	dd5b      	ble.n	80198d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8019820:	2800      	cmp	r0, #0
 8019822:	d059      	beq.n	80198d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8019824:	44c6      	add	lr, r8
 8019826:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801982a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801982e:	4413      	add	r3, r2
 8019830:	b280      	uxth	r0, r0
 8019832:	f897 e002 	ldrb.w	lr, [r7, #2]
 8019836:	b2b2      	uxth	r2, r6
 8019838:	f897 9000 	ldrb.w	r9, [r7]
 801983c:	787f      	ldrb	r7, [r7, #1]
 801983e:	fb00 f602 	mul.w	r6, r0, r2
 8019842:	0100      	lsls	r0, r0, #4
 8019844:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8019848:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801984c:	1b80      	subs	r0, r0, r6
 801984e:	fa1f fc82 	uxth.w	ip, r2
 8019852:	b282      	uxth	r2, r0
 8019854:	78a0      	ldrb	r0, [r4, #2]
 8019856:	eba8 080c 	sub.w	r8, r8, ip
 801985a:	4350      	muls	r0, r2
 801985c:	fa1f f888 	uxth.w	r8, r8
 8019860:	fb08 0e0e 	mla	lr, r8, lr, r0
 8019864:	78a8      	ldrb	r0, [r5, #2]
 8019866:	fb0c e000 	mla	r0, ip, r0, lr
 801986a:	f893 e002 	ldrb.w	lr, [r3, #2]
 801986e:	fb06 0e0e 	mla	lr, r6, lr, r0
 8019872:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 8019876:	f894 e000 	ldrb.w	lr, [r4]
 801987a:	fb02 fe0e 	mul.w	lr, r2, lr
 801987e:	fb08 e909 	mla	r9, r8, r9, lr
 8019882:	f895 e000 	ldrb.w	lr, [r5]
 8019886:	fb0c 990e 	mla	r9, ip, lr, r9
 801988a:	f893 e000 	ldrb.w	lr, [r3]
 801988e:	785b      	ldrb	r3, [r3, #1]
 8019890:	fb06 9e0e 	mla	lr, r6, lr, r9
 8019894:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019898:	ea4e 0e00 	orr.w	lr, lr, r0
 801989c:	7860      	ldrb	r0, [r4, #1]
 801989e:	4350      	muls	r0, r2
 80198a0:	786a      	ldrb	r2, [r5, #1]
 80198a2:	fb08 0007 	mla	r0, r8, r7, r0
 80198a6:	fb0c 0202 	mla	r2, ip, r2, r0
 80198aa:	fb06 2303 	mla	r3, r6, r3, r2
 80198ae:	095b      	lsrs	r3, r3, #5
 80198b0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80198b4:	ea4e 0303 	orr.w	r3, lr, r3
 80198b8:	800b      	strh	r3, [r1, #0]
 80198ba:	b003      	add	sp, #12
 80198bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80198c0:	af01      	add	r7, sp, #4
 80198c2:	e78c      	b.n	80197de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 80198c4:	ac01      	add	r4, sp, #4
 80198c6:	4627      	mov	r7, r4
 80198c8:	e795      	b.n	80197f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80198ca:	ac01      	add	r4, sp, #4
 80198cc:	e793      	b.n	80197f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80198ce:	ad01      	add	r5, sp, #4
 80198d0:	e7a1      	b.n	8019816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 80198d2:	ab01      	add	r3, sp, #4
 80198d4:	461d      	mov	r5, r3
 80198d6:	e7ab      	b.n	8019830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 80198d8:	ab01      	add	r3, sp, #4
 80198da:	e7a9      	b.n	8019830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

080198dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80198dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80198e0:	b08f      	sub	sp, #60	@ 0x3c
 80198e2:	920c      	str	r2, [sp, #48]	@ 0x30
 80198e4:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 80198e6:	900d      	str	r0, [sp, #52]	@ 0x34
 80198e8:	910a      	str	r1, [sp, #40]	@ 0x28
 80198ea:	6850      	ldr	r0, [r2, #4]
 80198ec:	9306      	str	r3, [sp, #24]
 80198ee:	6812      	ldr	r2, [r2, #0]
 80198f0:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 80198f4:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 80198f8:	fb00 1303 	mla	r3, r0, r3, r1
 80198fc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019900:	9307      	str	r3, [sp, #28]
 8019902:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019904:	681b      	ldr	r3, [r3, #0]
 8019906:	9308      	str	r3, [sp, #32]
 8019908:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801990a:	685c      	ldr	r4, [r3, #4]
 801990c:	3404      	adds	r4, #4
 801990e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019910:	2b00      	cmp	r3, #0
 8019912:	dc03      	bgt.n	801991c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019914:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019916:	2b00      	cmp	r3, #0
 8019918:	f340 81d5 	ble.w	8019cc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801991c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801991e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019922:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019926:	1e48      	subs	r0, r1, #1
 8019928:	1e56      	subs	r6, r2, #1
 801992a:	9b06      	ldr	r3, [sp, #24]
 801992c:	2b00      	cmp	r3, #0
 801992e:	f340 80b6 	ble.w	8019a9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8019932:	ea5f 472b 	movs.w	r7, fp, asr #16
 8019936:	ea4f 4325 	mov.w	r3, r5, asr #16
 801993a:	d406      	bmi.n	801994a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801993c:	4287      	cmp	r7, r0
 801993e:	da04      	bge.n	801994a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019940:	2b00      	cmp	r3, #0
 8019942:	db02      	blt.n	801994a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019944:	42b3      	cmp	r3, r6
 8019946:	f2c0 80ab 	blt.w	8019aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801994a:	3701      	adds	r7, #1
 801994c:	f100 809c 	bmi.w	8019a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019950:	42b9      	cmp	r1, r7
 8019952:	f2c0 8099 	blt.w	8019a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019956:	3301      	adds	r3, #1
 8019958:	f100 8096 	bmi.w	8019a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801995c:	429a      	cmp	r2, r3
 801995e:	f2c0 8093 	blt.w	8019a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019962:	9b06      	ldr	r3, [sp, #24]
 8019964:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019966:	9b07      	ldr	r3, [sp, #28]
 8019968:	9309      	str	r3, [sp, #36]	@ 0x24
 801996a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801996c:	2b00      	cmp	r3, #0
 801996e:	f340 80b4 	ble.w	8019ada <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019972:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8019974:	142e      	asrs	r6, r5, #16
 8019976:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8019978:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801997c:	68c7      	ldr	r7, [r0, #12]
 801997e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8019982:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019986:	6892      	ldr	r2, [r2, #8]
 8019988:	f100 80fb 	bmi.w	8019b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801998c:	f102 3cff 	add.w	ip, r2, #4294967295
 8019990:	4560      	cmp	r0, ip
 8019992:	f280 80f6 	bge.w	8019b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8019996:	2e00      	cmp	r6, #0
 8019998:	f2c0 80f3 	blt.w	8019b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801999c:	f107 3cff 	add.w	ip, r7, #4294967295
 80199a0:	4566      	cmp	r6, ip
 80199a2:	f280 80ee 	bge.w	8019b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80199a6:	b212      	sxth	r2, r2
 80199a8:	fb06 0002 	mla	r0, r6, r2, r0
 80199ac:	9e08      	ldr	r6, [sp, #32]
 80199ae:	1837      	adds	r7, r6, r0
 80199b0:	5c30      	ldrb	r0, [r6, r0]
 80199b2:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80199b6:	eb04 0c08 	add.w	ip, r4, r8
 80199ba:	2b00      	cmp	r3, #0
 80199bc:	f000 80d3 	beq.w	8019b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80199c0:	787e      	ldrb	r6, [r7, #1]
 80199c2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80199c6:	4426      	add	r6, r4
 80199c8:	2900      	cmp	r1, #0
 80199ca:	f000 80d4 	beq.w	8019b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80199ce:	18b8      	adds	r0, r7, r2
 80199d0:	5cba      	ldrb	r2, [r7, r2]
 80199d2:	7840      	ldrb	r0, [r0, #1]
 80199d4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80199d8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80199dc:	4422      	add	r2, r4
 80199de:	4420      	add	r0, r4
 80199e0:	b29b      	uxth	r3, r3
 80199e2:	78b7      	ldrb	r7, [r6, #2]
 80199e4:	b289      	uxth	r1, r1
 80199e6:	f89c a002 	ldrb.w	sl, [ip, #2]
 80199ea:	f89c c001 	ldrb.w	ip, [ip, #1]
 80199ee:	fb03 f901 	mul.w	r9, r3, r1
 80199f2:	011b      	lsls	r3, r3, #4
 80199f4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80199f8:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80199fc:	eba3 0309 	sub.w	r3, r3, r9
 8019a00:	b289      	uxth	r1, r1
 8019a02:	b29b      	uxth	r3, r3
 8019a04:	ebae 0e01 	sub.w	lr, lr, r1
 8019a08:	435f      	muls	r7, r3
 8019a0a:	fa1f fe8e 	uxth.w	lr, lr
 8019a0e:	fb0e 770a 	mla	r7, lr, sl, r7
 8019a12:	f892 a002 	ldrb.w	sl, [r2, #2]
 8019a16:	fb01 770a 	mla	r7, r1, sl, r7
 8019a1a:	f890 a002 	ldrb.w	sl, [r0, #2]
 8019a1e:	fb09 7a0a 	mla	sl, r9, sl, r7
 8019a22:	f814 7008 	ldrb.w	r7, [r4, r8]
 8019a26:	f896 8000 	ldrb.w	r8, [r6]
 8019a2a:	7876      	ldrb	r6, [r6, #1]
 8019a2c:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8019a30:	fb03 f808 	mul.w	r8, r3, r8
 8019a34:	4373      	muls	r3, r6
 8019a36:	fb0e 8807 	mla	r8, lr, r7, r8
 8019a3a:	7817      	ldrb	r7, [r2, #0]
 8019a3c:	fb0e 330c 	mla	r3, lr, ip, r3
 8019a40:	fb01 8807 	mla	r8, r1, r7, r8
 8019a44:	7807      	ldrb	r7, [r0, #0]
 8019a46:	fb09 8707 	mla	r7, r9, r7, r8
 8019a4a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019a4e:	ea47 070a 	orr.w	r7, r7, sl
 8019a52:	f892 a001 	ldrb.w	sl, [r2, #1]
 8019a56:	fb01 310a 	mla	r1, r1, sl, r3
 8019a5a:	f890 a001 	ldrb.w	sl, [r0, #1]
 8019a5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019a60:	fb09 1a0a 	mla	sl, r9, sl, r1
 8019a64:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019a68:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019a6c:	ea47 070a 	orr.w	r7, r7, sl
 8019a70:	801f      	strh	r7, [r3, #0]
 8019a72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019a74:	3302      	adds	r3, #2
 8019a76:	9309      	str	r3, [sp, #36]	@ 0x24
 8019a78:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8019a7a:	449b      	add	fp, r3
 8019a7c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019a7e:	441d      	add	r5, r3
 8019a80:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019a82:	3b01      	subs	r3, #1
 8019a84:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019a86:	e770      	b.n	801996a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019a88:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8019a8a:	449b      	add	fp, r3
 8019a8c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019a8e:	441d      	add	r5, r3
 8019a90:	9b06      	ldr	r3, [sp, #24]
 8019a92:	3b01      	subs	r3, #1
 8019a94:	9306      	str	r3, [sp, #24]
 8019a96:	9b07      	ldr	r3, [sp, #28]
 8019a98:	3302      	adds	r3, #2
 8019a9a:	9307      	str	r3, [sp, #28]
 8019a9c:	e745      	b.n	801992a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8019a9e:	d023      	beq.n	8019ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8019aa0:	9b06      	ldr	r3, [sp, #24]
 8019aa2:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8019aa4:	3b01      	subs	r3, #1
 8019aa6:	fb00 b003 	mla	r0, r0, r3, fp
 8019aaa:	1400      	asrs	r0, r0, #16
 8019aac:	f53f af59 	bmi.w	8019962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019ab0:	3901      	subs	r1, #1
 8019ab2:	4288      	cmp	r0, r1
 8019ab4:	f6bf af55 	bge.w	8019962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019ab8:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8019aba:	fb01 5303 	mla	r3, r1, r3, r5
 8019abe:	141b      	asrs	r3, r3, #16
 8019ac0:	f53f af4f 	bmi.w	8019962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019ac4:	3a01      	subs	r2, #1
 8019ac6:	4293      	cmp	r3, r2
 8019ac8:	f6bf af4b 	bge.w	8019962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019acc:	9b06      	ldr	r3, [sp, #24]
 8019ace:	9309      	str	r3, [sp, #36]	@ 0x24
 8019ad0:	9b07      	ldr	r3, [sp, #28]
 8019ad2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019ad4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019ad6:	2b00      	cmp	r3, #0
 8019ad8:	dc70      	bgt.n	8019bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019ada:	9b06      	ldr	r3, [sp, #24]
 8019adc:	9a07      	ldr	r2, [sp, #28]
 8019ade:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019ae2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019ae6:	9307      	str	r3, [sp, #28]
 8019ae8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019aea:	2b00      	cmp	r3, #0
 8019aec:	f340 80eb 	ble.w	8019cc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8019af0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019af4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8019af6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019afa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019afe:	eef0 6a62 	vmov.f32	s13, s5
 8019b02:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019b06:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b0e:	ee16 ba90 	vmov	fp, s13
 8019b12:	eef0 6a43 	vmov.f32	s13, s6
 8019b16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b1a:	ee16 5a90 	vmov	r5, s13
 8019b1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b26:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b36:	ee12 2a90 	vmov	r2, s5
 8019b3a:	eef0 2a47 	vmov.f32	s5, s14
 8019b3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b42:	ee13 2a10 	vmov	r2, s6
 8019b46:	931b      	str	r3, [sp, #108]	@ 0x6c
 8019b48:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8019b4a:	eeb0 3a67 	vmov.f32	s6, s15
 8019b4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b52:	931c      	str	r3, [sp, #112]	@ 0x70
 8019b54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019b56:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8019b58:	3b01      	subs	r3, #1
 8019b5a:	930a      	str	r3, [sp, #40]	@ 0x28
 8019b5c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8019b5e:	bf08      	it	eq
 8019b60:	4613      	moveq	r3, r2
 8019b62:	9306      	str	r3, [sp, #24]
 8019b64:	e6d3      	b.n	801990e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019b66:	b149      	cbz	r1, 8019b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8019b68:	5cba      	ldrb	r2, [r7, r2]
 8019b6a:	4660      	mov	r0, ip
 8019b6c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019b70:	4422      	add	r2, r4
 8019b72:	4666      	mov	r6, ip
 8019b74:	e734      	b.n	80199e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 8019b76:	4660      	mov	r0, ip
 8019b78:	4662      	mov	r2, ip
 8019b7a:	e731      	b.n	80199e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 8019b7c:	4660      	mov	r0, ip
 8019b7e:	4662      	mov	r2, ip
 8019b80:	e7f7      	b.n	8019b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8019b82:	f110 0c01 	adds.w	ip, r0, #1
 8019b86:	f53f af74 	bmi.w	8019a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8019b8a:	4562      	cmp	r2, ip
 8019b8c:	f6ff af71 	blt.w	8019a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8019b90:	f116 0c01 	adds.w	ip, r6, #1
 8019b94:	f53f af6d 	bmi.w	8019a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8019b98:	4567      	cmp	r7, ip
 8019b9a:	f6ff af6a 	blt.w	8019a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8019b9e:	b23f      	sxth	r7, r7
 8019ba0:	b212      	sxth	r2, r2
 8019ba2:	9701      	str	r7, [sp, #4]
 8019ba4:	9200      	str	r2, [sp, #0]
 8019ba6:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8019baa:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8019bae:	4623      	mov	r3, r4
 8019bb0:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8019bb2:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019bb6:	f7ff fde7 	bl	8019788 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8019bba:	e75a      	b.n	8019a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8019bbc:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8019bbe:	ea4f 462b 	mov.w	r6, fp, asr #16
 8019bc2:	1428      	asrs	r0, r5, #16
 8019bc4:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8019bc8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8019bcc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019bd0:	fb02 6000 	mla	r0, r2, r0, r6
 8019bd4:	9e08      	ldr	r6, [sp, #32]
 8019bd6:	f816 8000 	ldrb.w	r8, [r6, r0]
 8019bda:	1837      	adds	r7, r6, r0
 8019bdc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019be0:	eb04 0c08 	add.w	ip, r4, r8
 8019be4:	2b00      	cmp	r3, #0
 8019be6:	d060      	beq.n	8019caa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 8019be8:	787e      	ldrb	r6, [r7, #1]
 8019bea:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019bee:	4426      	add	r6, r4
 8019bf0:	2900      	cmp	r1, #0
 8019bf2:	d062      	beq.n	8019cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 8019bf4:	18b8      	adds	r0, r7, r2
 8019bf6:	5cba      	ldrb	r2, [r7, r2]
 8019bf8:	7840      	ldrb	r0, [r0, #1]
 8019bfa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019bfe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019c02:	4422      	add	r2, r4
 8019c04:	4420      	add	r0, r4
 8019c06:	b29b      	uxth	r3, r3
 8019c08:	78b7      	ldrb	r7, [r6, #2]
 8019c0a:	b289      	uxth	r1, r1
 8019c0c:	f89c a002 	ldrb.w	sl, [ip, #2]
 8019c10:	f89c c001 	ldrb.w	ip, [ip, #1]
 8019c14:	fb03 f901 	mul.w	r9, r3, r1
 8019c18:	011b      	lsls	r3, r3, #4
 8019c1a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019c1e:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8019c22:	eba3 0309 	sub.w	r3, r3, r9
 8019c26:	b289      	uxth	r1, r1
 8019c28:	b29b      	uxth	r3, r3
 8019c2a:	ebae 0e01 	sub.w	lr, lr, r1
 8019c2e:	435f      	muls	r7, r3
 8019c30:	fa1f fe8e 	uxth.w	lr, lr
 8019c34:	fb0e 770a 	mla	r7, lr, sl, r7
 8019c38:	f892 a002 	ldrb.w	sl, [r2, #2]
 8019c3c:	fb01 770a 	mla	r7, r1, sl, r7
 8019c40:	f890 a002 	ldrb.w	sl, [r0, #2]
 8019c44:	fb09 7a0a 	mla	sl, r9, sl, r7
 8019c48:	f814 7008 	ldrb.w	r7, [r4, r8]
 8019c4c:	f896 8000 	ldrb.w	r8, [r6]
 8019c50:	7876      	ldrb	r6, [r6, #1]
 8019c52:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8019c56:	fb03 f808 	mul.w	r8, r3, r8
 8019c5a:	4373      	muls	r3, r6
 8019c5c:	7856      	ldrb	r6, [r2, #1]
 8019c5e:	fb0e 8807 	mla	r8, lr, r7, r8
 8019c62:	7817      	ldrb	r7, [r2, #0]
 8019c64:	fb0e 330c 	mla	r3, lr, ip, r3
 8019c68:	fb01 8807 	mla	r8, r1, r7, r8
 8019c6c:	7807      	ldrb	r7, [r0, #0]
 8019c6e:	fb01 3306 	mla	r3, r1, r6, r3
 8019c72:	fb09 8707 	mla	r7, r9, r7, r8
 8019c76:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019c7a:	ea47 070a 	orr.w	r7, r7, sl
 8019c7e:	f890 a001 	ldrb.w	sl, [r0, #1]
 8019c82:	fb09 3a0a 	mla	sl, r9, sl, r3
 8019c86:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019c88:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019c8c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019c90:	ea47 070a 	orr.w	r7, r7, sl
 8019c94:	f823 7b02 	strh.w	r7, [r3], #2
 8019c98:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019c9a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8019c9c:	449b      	add	fp, r3
 8019c9e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019ca0:	441d      	add	r5, r3
 8019ca2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019ca4:	3b01      	subs	r3, #1
 8019ca6:	9309      	str	r3, [sp, #36]	@ 0x24
 8019ca8:	e714      	b.n	8019ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8019caa:	b149      	cbz	r1, 8019cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8019cac:	5cba      	ldrb	r2, [r7, r2]
 8019cae:	4660      	mov	r0, ip
 8019cb0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019cb4:	4422      	add	r2, r4
 8019cb6:	4666      	mov	r6, ip
 8019cb8:	e7a5      	b.n	8019c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8019cba:	4660      	mov	r0, ip
 8019cbc:	4662      	mov	r2, ip
 8019cbe:	e7a2      	b.n	8019c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8019cc0:	4660      	mov	r0, ip
 8019cc2:	4662      	mov	r2, ip
 8019cc4:	e7f7      	b.n	8019cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 8019cc6:	b00f      	add	sp, #60	@ 0x3c
 8019cc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019ccc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8019ccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cd0:	b085      	sub	sp, #20
 8019cd2:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 8019cd6:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 8019cda:	9102      	str	r1, [sp, #8]
 8019cdc:	2c00      	cmp	r4, #0
 8019cde:	fb04 710c 	mla	r1, r4, ip, r7
 8019ce2:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 8019ce6:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 8019cea:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8019cee:	eb02 0e01 	add.w	lr, r2, r1
 8019cf2:	f2c0 8122 	blt.w	8019f3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8019cf6:	45a0      	cmp	r8, r4
 8019cf8:	f340 811f 	ble.w	8019f3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8019cfc:	2f00      	cmp	r7, #0
 8019cfe:	f2c0 811a 	blt.w	8019f36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8019d02:	45bc      	cmp	ip, r7
 8019d04:	f340 8117 	ble.w	8019f36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8019d08:	5c52      	ldrb	r2, [r2, r1]
 8019d0a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8019d0e:	1c7a      	adds	r2, r7, #1
 8019d10:	f100 8116 	bmi.w	8019f40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8019d14:	4594      	cmp	ip, r2
 8019d16:	f340 8113 	ble.w	8019f40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8019d1a:	2e00      	cmp	r6, #0
 8019d1c:	f000 8112 	beq.w	8019f44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8019d20:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019d24:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8019d28:	3401      	adds	r4, #1
 8019d2a:	f100 810f 	bmi.w	8019f4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8019d2e:	45a0      	cmp	r8, r4
 8019d30:	f340 810c 	ble.w	8019f4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8019d34:	2800      	cmp	r0, #0
 8019d36:	f000 810c 	beq.w	8019f52 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8019d3a:	2f00      	cmp	r7, #0
 8019d3c:	f2c0 8104 	blt.w	8019f48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8019d40:	45bc      	cmp	ip, r7
 8019d42:	f340 8101 	ble.w	8019f48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8019d46:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8019d4a:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8019d4e:	3701      	adds	r7, #1
 8019d50:	f100 8102 	bmi.w	8019f58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8019d54:	45bc      	cmp	ip, r7
 8019d56:	f340 80ff 	ble.w	8019f58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8019d5a:	2e00      	cmp	r6, #0
 8019d5c:	f000 80fe 	beq.w	8019f5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8019d60:	44f4      	add	ip, lr
 8019d62:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8019d66:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8019d6a:	b2b6      	uxth	r6, r6
 8019d6c:	b280      	uxth	r0, r0
 8019d6e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8019d72:	fb00 fe06 	mul.w	lr, r0, r6
 8019d76:	0136      	lsls	r6, r6, #4
 8019d78:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8019d7c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8019d80:	eba6 070e 	sub.w	r7, r6, lr
 8019d84:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8019d88:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019d8c:	b280      	uxth	r0, r0
 8019d8e:	b2bf      	uxth	r7, r7
 8019d90:	1a1b      	subs	r3, r3, r0
 8019d92:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8019d96:	fb0a f607 	mul.w	r6, sl, r7
 8019d9a:	b29b      	uxth	r3, r3
 8019d9c:	fb0b 6603 	mla	r6, fp, r3, r6
 8019da0:	fb00 6609 	mla	r6, r0, r9, r6
 8019da4:	fb0e 6608 	mla	r6, lr, r8, r6
 8019da8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8019dac:	9600      	str	r6, [sp, #0]
 8019dae:	2e00      	cmp	r6, #0
 8019db0:	f000 80be 	beq.w	8019f30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8019db4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8019db8:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8019dbc:	9e02      	ldr	r6, [sp, #8]
 8019dbe:	fb0b fc0c 	mul.w	ip, fp, ip
 8019dc2:	fb0b f505 	mul.w	r5, fp, r5
 8019dc6:	8836      	ldrh	r6, [r6, #0]
 8019dc8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8019dcc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8019dd0:	9501      	str	r5, [sp, #4]
 8019dd2:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8019dd6:	44dc      	add	ip, fp
 8019dd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ddc:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8019de0:	9503      	str	r5, [sp, #12]
 8019de2:	9d01      	ldr	r5, [sp, #4]
 8019de4:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8019de8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8019dec:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8019df0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8019df4:	fb0a fc0c 	mul.w	ip, sl, ip
 8019df8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8019dfc:	fb0a fa01 	mul.w	sl, sl, r1
 8019e00:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8019e04:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8019e08:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8019e0c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8019e10:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8019e14:	4465      	add	r5, ip
 8019e16:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8019e1a:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8019e1e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019e22:	fb09 fc0c 	mul.w	ip, r9, ip
 8019e26:	0a2d      	lsrs	r5, r5, #8
 8019e28:	fb09 f904 	mul.w	r9, r9, r4
 8019e2c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8019e30:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8019e34:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8019e38:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8019e3c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8019e40:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8019e44:	437d      	muls	r5, r7
 8019e46:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8019e4a:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8019e4e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8019e52:	4461      	add	r1, ip
 8019e54:	fb08 f404 	mul.w	r4, r8, r4
 8019e58:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019e5c:	fb08 f802 	mul.w	r8, r8, r2
 8019e60:	0a09      	lsrs	r1, r1, #8
 8019e62:	0a22      	lsrs	r2, r4, #8
 8019e64:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8019e68:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8019e6c:	fb07 f70a 	mul.w	r7, r7, sl
 8019e70:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8019e74:	4414      	add	r4, r2
 8019e76:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8019e7a:	0a24      	lsrs	r4, r4, #8
 8019e7c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8019e80:	9a03      	ldr	r2, [sp, #12]
 8019e82:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8019e86:	fb02 5503 	mla	r5, r2, r3, r5
 8019e8a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019e8e:	9a00      	ldr	r2, [sp, #0]
 8019e90:	fb04 540e 	mla	r4, r4, lr, r5
 8019e94:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8019e98:	1235      	asrs	r5, r6, #8
 8019e9a:	fb01 4100 	mla	r1, r1, r0, r4
 8019e9e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019ea2:	0a09      	lsrs	r1, r1, #8
 8019ea4:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8019ea8:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8019eac:	fb03 7101 	mla	r1, r3, r1, r7
 8019eb0:	fb0e 1e08 	mla	lr, lr, r8, r1
 8019eb4:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8019eb8:	fb00 e101 	mla	r1, r0, r1, lr
 8019ebc:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8019ec0:	b287      	uxth	r7, r0
 8019ec2:	0a09      	lsrs	r1, r1, #8
 8019ec4:	437a      	muls	r2, r7
 8019ec6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8019eca:	1c53      	adds	r3, r2, #1
 8019ecc:	4321      	orrs	r1, r4
 8019ece:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019ed2:	0c0a      	lsrs	r2, r1, #16
 8019ed4:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8019ed8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8019edc:	b2c8      	uxtb	r0, r1
 8019ede:	fb12 f207 	smulbb	r2, r2, r7
 8019ee2:	fb14 f407 	smulbb	r4, r4, r7
 8019ee6:	b2db      	uxtb	r3, r3
 8019ee8:	fb10 f007 	smulbb	r0, r0, r7
 8019eec:	fb05 2503 	mla	r5, r5, r3, r2
 8019ef0:	10f2      	asrs	r2, r6, #3
 8019ef2:	00f6      	lsls	r6, r6, #3
 8019ef4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019ef8:	b2ad      	uxth	r5, r5
 8019efa:	b2f6      	uxtb	r6, r6
 8019efc:	fb02 4203 	mla	r2, r2, r3, r4
 8019f00:	fb06 0303 	mla	r3, r6, r3, r0
 8019f04:	b294      	uxth	r4, r2
 8019f06:	b299      	uxth	r1, r3
 8019f08:	1c6b      	adds	r3, r5, #1
 8019f0a:	1c62      	adds	r2, r4, #1
 8019f0c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019f10:	1c4b      	adds	r3, r1, #1
 8019f12:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019f16:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8019f1a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019f1e:	0952      	lsrs	r2, r2, #5
 8019f20:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019f24:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019f28:	432b      	orrs	r3, r5
 8019f2a:	4313      	orrs	r3, r2
 8019f2c:	9a02      	ldr	r2, [sp, #8]
 8019f2e:	8013      	strh	r3, [r2, #0]
 8019f30:	b005      	add	sp, #20
 8019f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019f36:	2500      	movs	r5, #0
 8019f38:	e6e9      	b.n	8019d0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8019f3a:	2100      	movs	r1, #0
 8019f3c:	460d      	mov	r5, r1
 8019f3e:	e6f3      	b.n	8019d28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8019f40:	2100      	movs	r1, #0
 8019f42:	e6f1      	b.n	8019d28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8019f44:	4631      	mov	r1, r6
 8019f46:	e6ef      	b.n	8019d28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8019f48:	2400      	movs	r4, #0
 8019f4a:	e700      	b.n	8019d4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8019f4c:	2200      	movs	r2, #0
 8019f4e:	4614      	mov	r4, r2
 8019f50:	e70b      	b.n	8019d6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8019f52:	4602      	mov	r2, r0
 8019f54:	4604      	mov	r4, r0
 8019f56:	e708      	b.n	8019d6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8019f58:	2200      	movs	r2, #0
 8019f5a:	e706      	b.n	8019d6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8019f5c:	4632      	mov	r2, r6
 8019f5e:	e704      	b.n	8019d6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08019f60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f64:	b09f      	sub	sp, #124	@ 0x7c
 8019f66:	921b      	str	r2, [sp, #108]	@ 0x6c
 8019f68:	9309      	str	r3, [sp, #36]	@ 0x24
 8019f6a:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8019f6c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 8019f70:	901d      	str	r0, [sp, #116]	@ 0x74
 8019f72:	931c      	str	r3, [sp, #112]	@ 0x70
 8019f74:	6850      	ldr	r0, [r2, #4]
 8019f76:	9119      	str	r1, [sp, #100]	@ 0x64
 8019f78:	6812      	ldr	r2, [r2, #0]
 8019f7a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8019f7c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 8019f80:	fb00 1303 	mla	r3, r0, r3, r1
 8019f84:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019f88:	930c      	str	r3, [sp, #48]	@ 0x30
 8019f8a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8019f8c:	681b      	ldr	r3, [r3, #0]
 8019f8e:	9312      	str	r3, [sp, #72]	@ 0x48
 8019f90:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8019f92:	685e      	ldr	r6, [r3, #4]
 8019f94:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8019f98:	3604      	adds	r6, #4
 8019f9a:	930d      	str	r3, [sp, #52]	@ 0x34
 8019f9c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8019f9e:	2b00      	cmp	r3, #0
 8019fa0:	dc03      	bgt.n	8019faa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019fa2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8019fa4:	2b00      	cmp	r3, #0
 8019fa6:	f340 8387 	ble.w	801a6b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 8019faa:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8019fac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019fb0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019fb4:	1e48      	subs	r0, r1, #1
 8019fb6:	1e57      	subs	r7, r2, #1
 8019fb8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019fba:	2b00      	cmp	r3, #0
 8019fbc:	f340 8194 	ble.w	801a2e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8019fc0:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8019fc2:	142b      	asrs	r3, r5, #16
 8019fc4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019fc8:	d406      	bmi.n	8019fd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019fca:	4584      	cmp	ip, r0
 8019fcc:	da04      	bge.n	8019fd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019fce:	2b00      	cmp	r3, #0
 8019fd0:	db02      	blt.n	8019fd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019fd2:	42bb      	cmp	r3, r7
 8019fd4:	f2c0 8189 	blt.w	801a2ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019fd8:	f11c 0c01 	adds.w	ip, ip, #1
 8019fdc:	f100 8177 	bmi.w	801a2ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019fe0:	4561      	cmp	r1, ip
 8019fe2:	f2c0 8174 	blt.w	801a2ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019fe6:	3301      	adds	r3, #1
 8019fe8:	f100 8171 	bmi.w	801a2ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019fec:	429a      	cmp	r2, r3
 8019fee:	f2c0 816e 	blt.w	801a2ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019ff2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019ff4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8019ff6:	931a      	str	r3, [sp, #104]	@ 0x68
 8019ff8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8019ffa:	2b00      	cmp	r3, #0
 8019ffc:	f340 8193 	ble.w	801a326 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801a000:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801a002:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a006:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a00a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a00e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801a010:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801a014:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801a016:	141b      	asrs	r3, r3, #16
 801a018:	f100 81d6 	bmi.w	801a3c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801a01c:	f100 38ff 	add.w	r8, r0, #4294967295
 801a020:	4543      	cmp	r3, r8
 801a022:	f280 81d1 	bge.w	801a3c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801a026:	f1bc 0f00 	cmp.w	ip, #0
 801a02a:	f2c0 81cd 	blt.w	801a3c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801a02e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a032:	45c4      	cmp	ip, r8
 801a034:	f280 81c8 	bge.w	801a3c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801a038:	b200      	sxth	r0, r0
 801a03a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a03c:	fb0c 3300 	mla	r3, ip, r0, r3
 801a040:	eb04 0803 	add.w	r8, r4, r3
 801a044:	5ce3      	ldrb	r3, [r4, r3]
 801a046:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a04a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801a04e:	2a00      	cmp	r2, #0
 801a050:	f000 81af 	beq.w	801a3b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801a054:	f898 c001 	ldrb.w	ip, [r8, #1]
 801a058:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801a05c:	940e      	str	r4, [sp, #56]	@ 0x38
 801a05e:	0e24      	lsrs	r4, r4, #24
 801a060:	9415      	str	r4, [sp, #84]	@ 0x54
 801a062:	b179      	cbz	r1, 801a084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801a064:	eb08 0c00 	add.w	ip, r8, r0
 801a068:	f818 0000 	ldrb.w	r0, [r8, r0]
 801a06c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801a070:	900a      	str	r0, [sp, #40]	@ 0x28
 801a072:	0e00      	lsrs	r0, r0, #24
 801a074:	9013      	str	r0, [sp, #76]	@ 0x4c
 801a076:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801a07a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801a07e:	900f      	str	r0, [sp, #60]	@ 0x3c
 801a080:	0e00      	lsrs	r0, r0, #24
 801a082:	9016      	str	r0, [sp, #88]	@ 0x58
 801a084:	b292      	uxth	r2, r2
 801a086:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801a088:	b289      	uxth	r1, r1
 801a08a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801a08c:	fb02 f901 	mul.w	r9, r2, r1
 801a090:	0112      	lsls	r2, r2, #4
 801a092:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a096:	eba2 0809 	sub.w	r8, r2, r9
 801a09a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801a09e:	b289      	uxth	r1, r1
 801a0a0:	fa1f f888 	uxth.w	r8, r8
 801a0a4:	1a52      	subs	r2, r2, r1
 801a0a6:	fb08 f000 	mul.w	r0, r8, r0
 801a0aa:	b292      	uxth	r2, r2
 801a0ac:	fb02 000e 	mla	r0, r2, lr, r0
 801a0b0:	fb01 0004 	mla	r0, r1, r4, r0
 801a0b4:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801a0b6:	fb09 0004 	mla	r0, r9, r4, r0
 801a0ba:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a0be:	2800      	cmp	r0, #0
 801a0c0:	f000 80fa 	beq.w	801a2b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801a0c4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801a0c8:	d01b      	beq.n	801a102 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801a0ca:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801a0ce:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801a0d2:	fb0e fa0a 	mul.w	sl, lr, sl
 801a0d6:	fb0e fe03 	mul.w	lr, lr, r3
 801a0da:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a0de:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801a0e2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801a0e6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801a0ea:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a0ee:	4453      	add	r3, sl
 801a0f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a0f4:	0a1b      	lsrs	r3, r3, #8
 801a0f6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801a0fa:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801a0fe:	ea43 030c 	orr.w	r3, r3, ip
 801a102:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801a104:	2cff      	cmp	r4, #255	@ 0xff
 801a106:	d021      	beq.n	801a14c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801a108:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801a10a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801a10e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801a110:	fb04 fb0b 	mul.w	fp, r4, fp
 801a114:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801a116:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801a11a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801a11c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a120:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801a124:	fb04 fa0a 	mul.w	sl, r4, sl
 801a128:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a12c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801a130:	44de      	add	lr, fp
 801a132:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a136:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a13a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a13e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a142:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a146:	ea4e 040a 	orr.w	r4, lr, sl
 801a14a:	940e      	str	r4, [sp, #56]	@ 0x38
 801a14c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801a14e:	2cff      	cmp	r4, #255	@ 0xff
 801a150:	d021      	beq.n	801a196 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801a152:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a154:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801a158:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801a15a:	fb04 fb0b 	mul.w	fp, r4, fp
 801a15e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a160:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801a164:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801a166:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a16a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801a16e:	fb04 fa0a 	mul.w	sl, r4, sl
 801a172:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a176:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801a17a:	44de      	add	lr, fp
 801a17c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a180:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a184:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a188:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a18c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a190:	ea4e 040a 	orr.w	r4, lr, sl
 801a194:	940a      	str	r4, [sp, #40]	@ 0x28
 801a196:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801a198:	2cff      	cmp	r4, #255	@ 0xff
 801a19a:	d021      	beq.n	801a1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801a19c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801a19e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801a1a2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801a1a4:	fb04 fb0b 	mul.w	fp, r4, fp
 801a1a8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801a1aa:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801a1ae:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801a1b0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a1b4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801a1b8:	fb04 fa0a 	mul.w	sl, r4, sl
 801a1bc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a1c0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801a1c4:	44de      	add	lr, fp
 801a1c6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a1ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a1ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a1d2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a1d6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a1da:	ea4e 040a 	orr.w	r4, lr, sl
 801a1de:	940f      	str	r4, [sp, #60]	@ 0x3c
 801a1e0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801a1e2:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801a1e6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801a1ea:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801a1ee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a1f0:	fb08 fc0c 	mul.w	ip, r8, ip
 801a1f4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a1f8:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801a1fc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801a1fe:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a202:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801a206:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801a208:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a20c:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801a210:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a212:	fb08 f80e 	mul.w	r8, r8, lr
 801a216:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a21a:	fb02 8303 	mla	r3, r2, r3, r8
 801a21e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a220:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a224:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801a228:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a22a:	fb01 330a 	mla	r3, r1, sl, r3
 801a22e:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801a232:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801a234:	fb09 3901 	mla	r9, r9, r1, r3
 801a238:	883b      	ldrh	r3, [r7, #0]
 801a23a:	4342      	muls	r2, r0
 801a23c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a240:	1c50      	adds	r0, r2, #1
 801a242:	1219      	asrs	r1, r3, #8
 801a244:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801a248:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801a24c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a250:	ea4c 0c09 	orr.w	ip, ip, r9
 801a254:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801a258:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801a25c:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801a260:	b2c0      	uxtb	r0, r0
 801a262:	fb12 f204 	smulbb	r2, r2, r4
 801a266:	fa5f fc8c 	uxtb.w	ip, ip
 801a26a:	fb1e fe04 	smulbb	lr, lr, r4
 801a26e:	fb01 2100 	mla	r1, r1, r0, r2
 801a272:	10da      	asrs	r2, r3, #3
 801a274:	fb1c fc04 	smulbb	ip, ip, r4
 801a278:	00db      	lsls	r3, r3, #3
 801a27a:	b289      	uxth	r1, r1
 801a27c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801a280:	b2db      	uxtb	r3, r3
 801a282:	fb02 e200 	mla	r2, r2, r0, lr
 801a286:	fb03 c300 	mla	r3, r3, r0, ip
 801a28a:	b292      	uxth	r2, r2
 801a28c:	fa1f fc83 	uxth.w	ip, r3
 801a290:	1c4b      	adds	r3, r1, #1
 801a292:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a296:	f10c 0301 	add.w	r3, ip, #1
 801a29a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801a29e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801a2a2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a2a6:	430b      	orrs	r3, r1
 801a2a8:	1c51      	adds	r1, r2, #1
 801a2aa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a2ae:	0952      	lsrs	r2, r2, #5
 801a2b0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a2b4:	4313      	orrs	r3, r2
 801a2b6:	803b      	strh	r3, [r7, #0]
 801a2b8:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801a2ba:	3702      	adds	r7, #2
 801a2bc:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801a2be:	441a      	add	r2, r3
 801a2c0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801a2c2:	441d      	add	r5, r3
 801a2c4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801a2c6:	9229      	str	r2, [sp, #164]	@ 0xa4
 801a2c8:	3b01      	subs	r3, #1
 801a2ca:	931a      	str	r3, [sp, #104]	@ 0x68
 801a2cc:	e694      	b.n	8019ff8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a2ce:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801a2d0:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801a2d2:	441c      	add	r4, r3
 801a2d4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801a2d6:	441d      	add	r5, r3
 801a2d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a2da:	9429      	str	r4, [sp, #164]	@ 0xa4
 801a2dc:	3b01      	subs	r3, #1
 801a2de:	9309      	str	r3, [sp, #36]	@ 0x24
 801a2e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a2e2:	3302      	adds	r3, #2
 801a2e4:	930c      	str	r3, [sp, #48]	@ 0x30
 801a2e6:	e667      	b.n	8019fb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a2e8:	d024      	beq.n	801a334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801a2ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a2ec:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801a2ee:	3b01      	subs	r3, #1
 801a2f0:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801a2f2:	fb00 4003 	mla	r0, r0, r3, r4
 801a2f6:	1400      	asrs	r0, r0, #16
 801a2f8:	f53f ae7b 	bmi.w	8019ff2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a2fc:	3901      	subs	r1, #1
 801a2fe:	4288      	cmp	r0, r1
 801a300:	f6bf ae77 	bge.w	8019ff2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a304:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801a306:	fb01 5303 	mla	r3, r1, r3, r5
 801a30a:	141b      	asrs	r3, r3, #16
 801a30c:	f53f ae71 	bmi.w	8019ff2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a310:	3a01      	subs	r2, #1
 801a312:	4293      	cmp	r3, r2
 801a314:	f6bf ae6d 	bge.w	8019ff2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a318:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801a31c:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801a320:	f1bb 0f00 	cmp.w	fp, #0
 801a324:	dc70      	bgt.n	801a408 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801a326:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a328:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a32c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a32e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a332:	930c      	str	r3, [sp, #48]	@ 0x30
 801a334:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801a336:	2b00      	cmp	r3, #0
 801a338:	f340 81be 	ble.w	801a6b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801a33c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a340:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a342:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a346:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a34a:	eef0 6a62 	vmov.f32	s13, s5
 801a34e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a352:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a356:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a35a:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801a35e:	eef0 6a43 	vmov.f32	s13, s6
 801a362:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a366:	ee16 5a90 	vmov	r5, s13
 801a36a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a36e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a372:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a376:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a37a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a37e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a382:	ee12 2a90 	vmov	r2, s5
 801a386:	eef0 2a47 	vmov.f32	s5, s14
 801a38a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a38e:	ee13 2a10 	vmov	r2, s6
 801a392:	932b      	str	r3, [sp, #172]	@ 0xac
 801a394:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a396:	eeb0 3a67 	vmov.f32	s6, s15
 801a39a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a39e:	932c      	str	r3, [sp, #176]	@ 0xb0
 801a3a0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801a3a2:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801a3a4:	3b01      	subs	r3, #1
 801a3a6:	9319      	str	r3, [sp, #100]	@ 0x64
 801a3a8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a3aa:	bf08      	it	eq
 801a3ac:	4613      	moveq	r3, r2
 801a3ae:	9309      	str	r3, [sp, #36]	@ 0x24
 801a3b0:	e5f4      	b.n	8019f9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a3b2:	2900      	cmp	r1, #0
 801a3b4:	f43f ae66 	beq.w	801a084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801a3b8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801a3bc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801a3c0:	900a      	str	r0, [sp, #40]	@ 0x28
 801a3c2:	0e00      	lsrs	r0, r0, #24
 801a3c4:	9013      	str	r0, [sp, #76]	@ 0x4c
 801a3c6:	e65d      	b.n	801a084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801a3c8:	f113 0801 	adds.w	r8, r3, #1
 801a3cc:	f53f af74 	bmi.w	801a2b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801a3d0:	4540      	cmp	r0, r8
 801a3d2:	f6ff af71 	blt.w	801a2b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801a3d6:	f11c 0801 	adds.w	r8, ip, #1
 801a3da:	f53f af6d 	bmi.w	801a2b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801a3de:	45c6      	cmp	lr, r8
 801a3e0:	f6ff af6a 	blt.w	801a2b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801a3e4:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801a3e6:	b200      	sxth	r0, r0
 801a3e8:	9302      	str	r3, [sp, #8]
 801a3ea:	fa0f f38e 	sxth.w	r3, lr
 801a3ee:	9000      	str	r0, [sp, #0]
 801a3f0:	9301      	str	r3, [sp, #4]
 801a3f2:	4633      	mov	r3, r6
 801a3f4:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801a3f6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a3fa:	e9cd c203 	strd	ip, r2, [sp, #12]
 801a3fe:	4639      	mov	r1, r7
 801a400:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a402:	f7ff fc63 	bl	8019ccc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801a406:	e757      	b.n	801a2b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801a408:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801a40a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a40e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801a410:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a414:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801a416:	1427      	asrs	r7, r4, #16
 801a418:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a41a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a41e:	142b      	asrs	r3, r5, #16
 801a420:	fb01 7303 	mla	r3, r1, r3, r7
 801a424:	18e7      	adds	r7, r4, r3
 801a426:	5ce3      	ldrb	r3, [r4, r3]
 801a428:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a42c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a430:	2a00      	cmp	r2, #0
 801a432:	f000 8137 	beq.w	801a6a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801a436:	f897 e001 	ldrb.w	lr, [r7, #1]
 801a43a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801a43e:	9410      	str	r4, [sp, #64]	@ 0x40
 801a440:	0e24      	lsrs	r4, r4, #24
 801a442:	9417      	str	r4, [sp, #92]	@ 0x5c
 801a444:	b170      	cbz	r0, 801a464 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801a446:	eb07 0e01 	add.w	lr, r7, r1
 801a44a:	5c79      	ldrb	r1, [r7, r1]
 801a44c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a450:	910b      	str	r1, [sp, #44]	@ 0x2c
 801a452:	0e09      	lsrs	r1, r1, #24
 801a454:	9114      	str	r1, [sp, #80]	@ 0x50
 801a456:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801a45a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a45e:	9111      	str	r1, [sp, #68]	@ 0x44
 801a460:	0e09      	lsrs	r1, r1, #24
 801a462:	9118      	str	r1, [sp, #96]	@ 0x60
 801a464:	b292      	uxth	r2, r2
 801a466:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801a468:	b280      	uxth	r0, r0
 801a46a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a46c:	fb02 f800 	mul.w	r8, r2, r0
 801a470:	0112      	lsls	r2, r2, #4
 801a472:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801a476:	eba2 0e08 	sub.w	lr, r2, r8
 801a47a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801a47e:	b280      	uxth	r0, r0
 801a480:	fa1f fe8e 	uxth.w	lr, lr
 801a484:	1a12      	subs	r2, r2, r0
 801a486:	fb0e f101 	mul.w	r1, lr, r1
 801a48a:	b292      	uxth	r2, r2
 801a48c:	fb02 110c 	mla	r1, r2, ip, r1
 801a490:	fb00 1104 	mla	r1, r0, r4, r1
 801a494:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801a496:	fb08 1104 	mla	r1, r8, r4, r1
 801a49a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a49e:	2900      	cmp	r1, #0
 801a4a0:	f000 80f5 	beq.w	801a68e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801a4a4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801a4a8:	d019      	beq.n	801a4de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801a4aa:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801a4ae:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801a4b2:	fb0c fa0a 	mul.w	sl, ip, sl
 801a4b6:	fb0c fc03 	mul.w	ip, ip, r3
 801a4ba:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a4be:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801a4c2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801a4c6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801a4ca:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a4ce:	4453      	add	r3, sl
 801a4d0:	0a3f      	lsrs	r7, r7, #8
 801a4d2:	0a1b      	lsrs	r3, r3, #8
 801a4d4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801a4d8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801a4dc:	433b      	orrs	r3, r7
 801a4de:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801a4e0:	2cff      	cmp	r4, #255	@ 0xff
 801a4e2:	d020      	beq.n	801a526 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801a4e4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801a4e6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801a4ea:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801a4ec:	4367      	muls	r7, r4
 801a4ee:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801a4f0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a4f4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801a4f8:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801a4fa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801a4fe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a502:	fb04 fa0a 	mul.w	sl, r4, sl
 801a506:	44bc      	add	ip, r7
 801a508:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801a50c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a510:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a514:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a518:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a51c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a520:	ea4c 040a 	orr.w	r4, ip, sl
 801a524:	9410      	str	r4, [sp, #64]	@ 0x40
 801a526:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a528:	2cff      	cmp	r4, #255	@ 0xff
 801a52a:	d020      	beq.n	801a56e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801a52c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a52e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801a532:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a534:	4367      	muls	r7, r4
 801a536:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a538:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a53c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801a540:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a542:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801a546:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a54a:	fb04 fa0a 	mul.w	sl, r4, sl
 801a54e:	44bc      	add	ip, r7
 801a550:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801a554:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a558:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a55c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a560:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a564:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a568:	ea4c 040a 	orr.w	r4, ip, sl
 801a56c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801a56e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801a570:	2cff      	cmp	r4, #255	@ 0xff
 801a572:	d020      	beq.n	801a5b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801a574:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801a576:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801a57a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801a57c:	4367      	muls	r7, r4
 801a57e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801a580:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a584:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801a588:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801a58a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801a58e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a592:	fb04 fa0a 	mul.w	sl, r4, sl
 801a596:	44bc      	add	ip, r7
 801a598:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801a59c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a5a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a5a4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a5a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a5ac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a5b0:	ea4c 040a 	orr.w	r4, ip, sl
 801a5b4:	9411      	str	r4, [sp, #68]	@ 0x44
 801a5b6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801a5b8:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801a5bc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801a5c0:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801a5c4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a5c6:	fb0e f707 	mul.w	r7, lr, r7
 801a5ca:	fb02 770c 	mla	r7, r2, ip, r7
 801a5ce:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801a5d2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801a5d4:	fb00 770c 	mla	r7, r0, ip, r7
 801a5d8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801a5dc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801a5de:	fb08 770c 	mla	r7, r8, ip, r7
 801a5e2:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801a5e6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a5e8:	fb0e fe0c 	mul.w	lr, lr, ip
 801a5ec:	0a3f      	lsrs	r7, r7, #8
 801a5ee:	fb02 e303 	mla	r3, r2, r3, lr
 801a5f2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a5f4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801a5f8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801a5fc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801a5fe:	fb00 330a 	mla	r3, r0, sl, r3
 801a602:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801a606:	f8b9 0000 	ldrh.w	r0, [r9]
 801a60a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801a60e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a610:	1202      	asrs	r2, r0, #8
 801a612:	434b      	muls	r3, r1
 801a614:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a618:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801a61c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801a620:	1c59      	adds	r1, r3, #1
 801a622:	ea47 070c 	orr.w	r7, r7, ip
 801a626:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a62a:	0c3b      	lsrs	r3, r7, #16
 801a62c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801a630:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801a634:	b2ff      	uxtb	r7, r7
 801a636:	fb13 f304 	smulbb	r3, r3, r4
 801a63a:	b2c9      	uxtb	r1, r1
 801a63c:	fb1c fc04 	smulbb	ip, ip, r4
 801a640:	fb02 3201 	mla	r2, r2, r1, r3
 801a644:	10c3      	asrs	r3, r0, #3
 801a646:	fb17 f704 	smulbb	r7, r7, r4
 801a64a:	00c0      	lsls	r0, r0, #3
 801a64c:	b292      	uxth	r2, r2
 801a64e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801a652:	b2c0      	uxtb	r0, r0
 801a654:	fb03 c301 	mla	r3, r3, r1, ip
 801a658:	f102 0c01 	add.w	ip, r2, #1
 801a65c:	fb00 7001 	mla	r0, r0, r1, r7
 801a660:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801a664:	b280      	uxth	r0, r0
 801a666:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801a66a:	b29b      	uxth	r3, r3
 801a66c:	1c42      	adds	r2, r0, #1
 801a66e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a672:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a676:	ea42 020c 	orr.w	r2, r2, ip
 801a67a:	f103 0c01 	add.w	ip, r3, #1
 801a67e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801a682:	095b      	lsrs	r3, r3, #5
 801a684:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a688:	431a      	orrs	r2, r3
 801a68a:	f8a9 2000 	strh.w	r2, [r9]
 801a68e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801a690:	f109 0902 	add.w	r9, r9, #2
 801a694:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801a696:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a69a:	441a      	add	r2, r3
 801a69c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801a69e:	9229      	str	r2, [sp, #164]	@ 0xa4
 801a6a0:	441d      	add	r5, r3
 801a6a2:	e63d      	b.n	801a320 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801a6a4:	2800      	cmp	r0, #0
 801a6a6:	f43f aedd 	beq.w	801a464 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801a6aa:	5c79      	ldrb	r1, [r7, r1]
 801a6ac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a6b0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801a6b2:	0e09      	lsrs	r1, r1, #24
 801a6b4:	9114      	str	r1, [sp, #80]	@ 0x50
 801a6b6:	e6d5      	b.n	801a464 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801a6b8:	b01f      	add	sp, #124	@ 0x7c
 801a6ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a6be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801a6be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6c2:	b089      	sub	sp, #36	@ 0x24
 801a6c4:	9101      	str	r1, [sp, #4]
 801a6c6:	9801      	ldr	r0, [sp, #4]
 801a6c8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801a6cc:	8800      	ldrh	r0, [r0, #0]
 801a6ce:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801a6d2:	1206      	asrs	r6, r0, #8
 801a6d4:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801a6d8:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801a6dc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a6e0:	9602      	str	r6, [sp, #8]
 801a6e2:	10c6      	asrs	r6, r0, #3
 801a6e4:	00c0      	lsls	r0, r0, #3
 801a6e6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a6ea:	b2c0      	uxtb	r0, r0
 801a6ec:	9603      	str	r6, [sp, #12]
 801a6ee:	9004      	str	r0, [sp, #16]
 801a6f0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801a6f4:	fb07 100c 	mla	r0, r7, ip, r1
 801a6f8:	2f00      	cmp	r7, #0
 801a6fa:	eb02 0e00 	add.w	lr, r2, r0
 801a6fe:	f2c0 810a 	blt.w	801a916 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801a702:	45b8      	cmp	r8, r7
 801a704:	f340 8107 	ble.w	801a916 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801a708:	2900      	cmp	r1, #0
 801a70a:	f2c0 8102 	blt.w	801a912 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801a70e:	458c      	cmp	ip, r1
 801a710:	f340 80ff 	ble.w	801a912 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801a714:	5c12      	ldrb	r2, [r2, r0]
 801a716:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801a71a:	1c4a      	adds	r2, r1, #1
 801a71c:	f100 80fe 	bmi.w	801a91c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801a720:	4594      	cmp	ip, r2
 801a722:	f340 80fb 	ble.w	801a91c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801a726:	2d00      	cmp	r5, #0
 801a728:	f000 80fa 	beq.w	801a920 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801a72c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a730:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801a734:	3701      	adds	r7, #1
 801a736:	f100 80f7 	bmi.w	801a928 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801a73a:	45b8      	cmp	r8, r7
 801a73c:	f340 80f4 	ble.w	801a928 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801a740:	2c00      	cmp	r4, #0
 801a742:	f000 80f4 	beq.w	801a92e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801a746:	2900      	cmp	r1, #0
 801a748:	eb0e 020c 	add.w	r2, lr, ip
 801a74c:	f2c0 80ea 	blt.w	801a924 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801a750:	458c      	cmp	ip, r1
 801a752:	f340 80e7 	ble.w	801a924 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801a756:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801a75a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801a75e:	3101      	adds	r1, #1
 801a760:	f100 80e8 	bmi.w	801a934 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801a764:	458c      	cmp	ip, r1
 801a766:	f340 80e5 	ble.w	801a934 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801a76a:	2d00      	cmp	r5, #0
 801a76c:	f000 80e4 	beq.w	801a938 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801a770:	7852      	ldrb	r2, [r2, #1]
 801a772:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801a776:	0e0b      	lsrs	r3, r1, #24
 801a778:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801a77c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801a780:	9300      	str	r3, [sp, #0]
 801a782:	b2a4      	uxth	r4, r4
 801a784:	b2ab      	uxth	r3, r5
 801a786:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801a78a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801a78e:	fb03 f904 	mul.w	r9, r3, r4
 801a792:	011b      	lsls	r3, r3, #4
 801a794:	fb0a f505 	mul.w	r5, sl, r5
 801a798:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801a79c:	eba3 0e09 	sub.w	lr, r3, r9
 801a7a0:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801a7a4:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801a7a8:	0a28      	lsrs	r0, r5, #8
 801a7aa:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801a7ae:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801a7b2:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801a7b6:	fb0a f303 	mul.w	r3, sl, r3
 801a7ba:	fb08 f707 	mul.w	r7, r8, r7
 801a7be:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801a7c2:	4405      	add	r5, r0
 801a7c4:	fb08 fc0c 	mul.w	ip, r8, ip
 801a7c8:	b2a4      	uxth	r4, r4
 801a7ca:	0a2d      	lsrs	r5, r5, #8
 801a7cc:	fa1f fe8e 	uxth.w	lr, lr
 801a7d0:	1b12      	subs	r2, r2, r4
 801a7d2:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801a7d6:	b292      	uxth	r2, r2
 801a7d8:	9005      	str	r0, [sp, #20]
 801a7da:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801a7de:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801a7e2:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801a7e6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801a7ea:	0a1b      	lsrs	r3, r3, #8
 801a7ec:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801a7f0:	9306      	str	r3, [sp, #24]
 801a7f2:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801a7f6:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801a7fa:	4460      	add	r0, ip
 801a7fc:	fb0b f303 	mul.w	r3, fp, r3
 801a800:	fb0b f606 	mul.w	r6, fp, r6
 801a804:	0a00      	lsrs	r0, r0, #8
 801a806:	0a1d      	lsrs	r5, r3, #8
 801a808:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801a80c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801a810:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801a814:	441d      	add	r5, r3
 801a816:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801a81a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a81e:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801a822:	0a2d      	lsrs	r5, r5, #8
 801a824:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801a828:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801a82c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801a830:	0a36      	lsrs	r6, r6, #8
 801a832:	0a1b      	lsrs	r3, r3, #8
 801a834:	fb05 f50e 	mul.w	r5, r5, lr
 801a838:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801a83c:	9307      	str	r3, [sp, #28]
 801a83e:	0e0b      	lsrs	r3, r1, #24
 801a840:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801a844:	fb0e f606 	mul.w	r6, lr, r6
 801a848:	435f      	muls	r7, r3
 801a84a:	4359      	muls	r1, r3
 801a84c:	9b05      	ldr	r3, [sp, #20]
 801a84e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a852:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801a856:	fb03 5502 	mla	r5, r3, r2, r5
 801a85a:	9b06      	ldr	r3, [sp, #24]
 801a85c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a860:	fb0e fe0b 	mul.w	lr, lr, fp
 801a864:	44bc      	add	ip, r7
 801a866:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801a86a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a86e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801a872:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a876:	0a09      	lsrs	r1, r1, #8
 801a878:	fb0c 5509 	mla	r5, ip, r9, r5
 801a87c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801a880:	fb00 5504 	mla	r5, r0, r4, r5
 801a884:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801a888:	9b07      	ldr	r3, [sp, #28]
 801a88a:	fb02 6000 	mla	r0, r2, r0, r6
 801a88e:	0a2d      	lsrs	r5, r5, #8
 801a890:	fb02 e20a 	mla	r2, r2, sl, lr
 801a894:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801a898:	fb09 0001 	mla	r0, r9, r1, r0
 801a89c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801a8a0:	fb04 0003 	mla	r0, r4, r3, r0
 801a8a4:	9b00      	ldr	r3, [sp, #0]
 801a8a6:	fb04 2408 	mla	r4, r4, r8, r2
 801a8aa:	9a04      	ldr	r2, [sp, #16]
 801a8ac:	0a00      	lsrs	r0, r0, #8
 801a8ae:	fb09 4903 	mla	r9, r9, r3, r4
 801a8b2:	9b02      	ldr	r3, [sp, #8]
 801a8b4:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801a8b8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801a8bc:	4305      	orrs	r5, r0
 801a8be:	fa5f f989 	uxtb.w	r9, r9
 801a8c2:	fb03 f109 	mul.w	r1, r3, r9
 801a8c6:	9b03      	ldr	r3, [sp, #12]
 801a8c8:	fb03 f309 	mul.w	r3, r3, r9
 801a8cc:	fb02 f909 	mul.w	r9, r2, r9
 801a8d0:	1c4a      	adds	r2, r1, #1
 801a8d2:	1c58      	adds	r0, r3, #1
 801a8d4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a8d8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801a8dc:	0c2a      	lsrs	r2, r5, #16
 801a8de:	0a2b      	lsrs	r3, r5, #8
 801a8e0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801a8e4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a8e8:	0212      	lsls	r2, r2, #8
 801a8ea:	00db      	lsls	r3, r3, #3
 801a8ec:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801a8f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a8f4:	4313      	orrs	r3, r2
 801a8f6:	f109 0201 	add.w	r2, r9, #1
 801a8fa:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801a8fe:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801a902:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a906:	431d      	orrs	r5, r3
 801a908:	9b01      	ldr	r3, [sp, #4]
 801a90a:	801d      	strh	r5, [r3, #0]
 801a90c:	b009      	add	sp, #36	@ 0x24
 801a90e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a912:	2000      	movs	r0, #0
 801a914:	e701      	b.n	801a71a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801a916:	2600      	movs	r6, #0
 801a918:	4630      	mov	r0, r6
 801a91a:	e70b      	b.n	801a734 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801a91c:	2600      	movs	r6, #0
 801a91e:	e709      	b.n	801a734 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801a920:	462e      	mov	r6, r5
 801a922:	e707      	b.n	801a734 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801a924:	2700      	movs	r7, #0
 801a926:	e71a      	b.n	801a75e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801a928:	2100      	movs	r1, #0
 801a92a:	460f      	mov	r7, r1
 801a92c:	e723      	b.n	801a776 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801a92e:	4621      	mov	r1, r4
 801a930:	4627      	mov	r7, r4
 801a932:	e720      	b.n	801a776 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801a934:	2100      	movs	r1, #0
 801a936:	e71e      	b.n	801a776 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801a938:	4629      	mov	r1, r5
 801a93a:	e71c      	b.n	801a776 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801a93c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a93c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a940:	b09b      	sub	sp, #108	@ 0x6c
 801a942:	9218      	str	r2, [sp, #96]	@ 0x60
 801a944:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801a946:	9019      	str	r0, [sp, #100]	@ 0x64
 801a948:	9116      	str	r1, [sp, #88]	@ 0x58
 801a94a:	6850      	ldr	r0, [r2, #4]
 801a94c:	9307      	str	r3, [sp, #28]
 801a94e:	6812      	ldr	r2, [r2, #0]
 801a950:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801a952:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801a956:	fb00 1303 	mla	r3, r0, r3, r1
 801a95a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a95e:	930a      	str	r3, [sp, #40]	@ 0x28
 801a960:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801a962:	681b      	ldr	r3, [r3, #0]
 801a964:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a966:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801a968:	685e      	ldr	r6, [r3, #4]
 801a96a:	3604      	adds	r6, #4
 801a96c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801a96e:	2b00      	cmp	r3, #0
 801a970:	dc03      	bgt.n	801a97a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a972:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a974:	2b00      	cmp	r3, #0
 801a976:	f340 8373 	ble.w	801b060 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801a97a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801a97c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a980:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a984:	1e48      	subs	r0, r1, #1
 801a986:	1e57      	subs	r7, r2, #1
 801a988:	9b07      	ldr	r3, [sp, #28]
 801a98a:	2b00      	cmp	r3, #0
 801a98c:	f340 818f 	ble.w	801acae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801a990:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801a992:	142b      	asrs	r3, r5, #16
 801a994:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a998:	d406      	bmi.n	801a9a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a99a:	4584      	cmp	ip, r0
 801a99c:	da04      	bge.n	801a9a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a99e:	2b00      	cmp	r3, #0
 801a9a0:	db02      	blt.n	801a9a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a9a2:	42bb      	cmp	r3, r7
 801a9a4:	f2c0 8184 	blt.w	801acb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801a9a8:	f11c 0c01 	adds.w	ip, ip, #1
 801a9ac:	f100 8172 	bmi.w	801ac94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801a9b0:	4561      	cmp	r1, ip
 801a9b2:	f2c0 816f 	blt.w	801ac94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801a9b6:	3301      	adds	r3, #1
 801a9b8:	f100 816c 	bmi.w	801ac94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801a9bc:	429a      	cmp	r2, r3
 801a9be:	f2c0 8169 	blt.w	801ac94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801a9c2:	9b07      	ldr	r3, [sp, #28]
 801a9c4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801a9c6:	9317      	str	r3, [sp, #92]	@ 0x5c
 801a9c8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801a9ca:	2b00      	cmp	r3, #0
 801a9cc:	f340 818e 	ble.w	801acec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801a9d0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a9d2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a9d6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a9da:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a9de:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801a9e0:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801a9e4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a9e6:	141b      	asrs	r3, r3, #16
 801a9e8:	f100 81d1 	bmi.w	801ad8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801a9ec:	f101 38ff 	add.w	r8, r1, #4294967295
 801a9f0:	4543      	cmp	r3, r8
 801a9f2:	f280 81cc 	bge.w	801ad8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801a9f6:	f1bc 0f00 	cmp.w	ip, #0
 801a9fa:	f2c0 81c8 	blt.w	801ad8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801a9fe:	f10e 38ff 	add.w	r8, lr, #4294967295
 801aa02:	45c4      	cmp	ip, r8
 801aa04:	f280 81c3 	bge.w	801ad8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801aa08:	b209      	sxth	r1, r1
 801aa0a:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801aa0c:	fb0c 3301 	mla	r3, ip, r1, r3
 801aa10:	eb04 0803 	add.w	r8, r4, r3
 801aa14:	5ce3      	ldrb	r3, [r4, r3]
 801aa16:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801aa1a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801aa1e:	2a00      	cmp	r2, #0
 801aa20:	f000 81aa 	beq.w	801ad78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801aa24:	f898 c001 	ldrb.w	ip, [r8, #1]
 801aa28:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801aa2c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801aa2e:	0e24      	lsrs	r4, r4, #24
 801aa30:	9412      	str	r4, [sp, #72]	@ 0x48
 801aa32:	b178      	cbz	r0, 801aa54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801aa34:	eb08 0c01 	add.w	ip, r8, r1
 801aa38:	f818 1001 	ldrb.w	r1, [r8, r1]
 801aa3c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801aa40:	9108      	str	r1, [sp, #32]
 801aa42:	0e09      	lsrs	r1, r1, #24
 801aa44:	9110      	str	r1, [sp, #64]	@ 0x40
 801aa46:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801aa4a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801aa4e:	910c      	str	r1, [sp, #48]	@ 0x30
 801aa50:	0e09      	lsrs	r1, r1, #24
 801aa52:	9113      	str	r1, [sp, #76]	@ 0x4c
 801aa54:	b292      	uxth	r2, r2
 801aa56:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801aa58:	b280      	uxth	r0, r0
 801aa5a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801aa5c:	fb02 f900 	mul.w	r9, r2, r0
 801aa60:	0112      	lsls	r2, r2, #4
 801aa62:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801aa66:	eba2 0809 	sub.w	r8, r2, r9
 801aa6a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801aa6e:	b280      	uxth	r0, r0
 801aa70:	fa1f f888 	uxth.w	r8, r8
 801aa74:	1a12      	subs	r2, r2, r0
 801aa76:	fb08 f101 	mul.w	r1, r8, r1
 801aa7a:	b292      	uxth	r2, r2
 801aa7c:	fb02 110e 	mla	r1, r2, lr, r1
 801aa80:	fb00 1104 	mla	r1, r0, r4, r1
 801aa84:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801aa86:	fb09 1104 	mla	r1, r9, r4, r1
 801aa8a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801aa8e:	2900      	cmp	r1, #0
 801aa90:	f000 80f5 	beq.w	801ac7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801aa94:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801aa98:	d01b      	beq.n	801aad2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801aa9a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801aa9e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801aaa2:	fb0e fa0a 	mul.w	sl, lr, sl
 801aaa6:	fb0e fe03 	mul.w	lr, lr, r3
 801aaaa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801aaae:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801aab2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801aab6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801aaba:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801aabe:	4453      	add	r3, sl
 801aac0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aac4:	0a1b      	lsrs	r3, r3, #8
 801aac6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801aaca:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801aace:	ea43 030c 	orr.w	r3, r3, ip
 801aad2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801aad4:	2cff      	cmp	r4, #255	@ 0xff
 801aad6:	d021      	beq.n	801ab1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801aad8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801aada:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801aade:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801aae0:	fb04 fb0b 	mul.w	fp, r4, fp
 801aae4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801aae6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801aaea:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801aaec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801aaf0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801aaf4:	fb04 fa0a 	mul.w	sl, r4, sl
 801aaf8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801aafc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ab00:	44de      	add	lr, fp
 801ab02:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ab06:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ab0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ab0e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ab12:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ab16:	ea4e 040a 	orr.w	r4, lr, sl
 801ab1a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801ab1c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ab1e:	2cff      	cmp	r4, #255	@ 0xff
 801ab20:	d021      	beq.n	801ab66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ab22:	9c08      	ldr	r4, [sp, #32]
 801ab24:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ab28:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ab2a:	fb04 fb0b 	mul.w	fp, r4, fp
 801ab2e:	9c08      	ldr	r4, [sp, #32]
 801ab30:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ab34:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ab36:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ab3a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ab3e:	fb04 fa0a 	mul.w	sl, r4, sl
 801ab42:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ab46:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ab4a:	44de      	add	lr, fp
 801ab4c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ab50:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ab54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ab58:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ab5c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ab60:	ea4e 040a 	orr.w	r4, lr, sl
 801ab64:	9408      	str	r4, [sp, #32]
 801ab66:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ab68:	2cff      	cmp	r4, #255	@ 0xff
 801ab6a:	d021      	beq.n	801abb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801ab6c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ab6e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ab72:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ab74:	fb04 fb0b 	mul.w	fp, r4, fp
 801ab78:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ab7a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ab7e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ab80:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ab84:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ab88:	fb04 fa0a 	mul.w	sl, r4, sl
 801ab8c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ab90:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ab94:	44de      	add	lr, fp
 801ab96:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ab9a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ab9e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aba2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801aba6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801abaa:	ea4e 040a 	orr.w	r4, lr, sl
 801abae:	940c      	str	r4, [sp, #48]	@ 0x30
 801abb0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801abb2:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801abb6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801abba:	43c9      	mvns	r1, r1
 801abbc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801abc0:	9c08      	ldr	r4, [sp, #32]
 801abc2:	fb08 fc0c 	mul.w	ip, r8, ip
 801abc6:	fb02 cc0e 	mla	ip, r2, lr, ip
 801abca:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801abce:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801abd0:	fb00 cc0e 	mla	ip, r0, lr, ip
 801abd4:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801abd8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801abda:	fb09 cc0e 	mla	ip, r9, lr, ip
 801abde:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801abe2:	fb08 f80e 	mul.w	r8, r8, lr
 801abe6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801abea:	fa5f fe81 	uxtb.w	lr, r1
 801abee:	fb02 8303 	mla	r3, r2, r3, r8
 801abf2:	9a08      	ldr	r2, [sp, #32]
 801abf4:	f8b7 8000 	ldrh.w	r8, [r7]
 801abf8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801abfc:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ac00:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ac02:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801ac06:	fb00 330a 	mla	r3, r0, sl, r3
 801ac0a:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801ac0e:	ea4f 2228 	mov.w	r2, r8, asr #8
 801ac12:	fb09 3900 	mla	r9, r9, r0, r3
 801ac16:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801ac1a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ac1e:	b2c9      	uxtb	r1, r1
 801ac20:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ac24:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ac28:	fb02 f20e 	mul.w	r2, r2, lr
 801ac2c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801ac30:	fb00 f00e 	mul.w	r0, r0, lr
 801ac34:	1c53      	adds	r3, r2, #1
 801ac36:	fb01 f10e 	mul.w	r1, r1, lr
 801ac3a:	ea4c 0c09 	orr.w	ip, ip, r9
 801ac3e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801ac42:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801ac46:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ac4a:	4a60      	ldr	r2, [pc, #384]	@ (801adcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801ac4c:	b2db      	uxtb	r3, r3
 801ac4e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801ac52:	1c43      	adds	r3, r0, #1
 801ac54:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ac58:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801ac5c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ac60:	00db      	lsls	r3, r3, #3
 801ac62:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ac66:	4313      	orrs	r3, r2
 801ac68:	1c4a      	adds	r2, r1, #1
 801ac6a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ac6e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ac72:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ac76:	ea4c 0c03 	orr.w	ip, ip, r3
 801ac7a:	f8a7 c000 	strh.w	ip, [r7]
 801ac7e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ac80:	3702      	adds	r7, #2
 801ac82:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801ac84:	441a      	add	r2, r3
 801ac86:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ac88:	441d      	add	r5, r3
 801ac8a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ac8c:	9225      	str	r2, [sp, #148]	@ 0x94
 801ac8e:	3b01      	subs	r3, #1
 801ac90:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ac92:	e699      	b.n	801a9c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ac94:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ac96:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ac98:	441c      	add	r4, r3
 801ac9a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ac9c:	441d      	add	r5, r3
 801ac9e:	9b07      	ldr	r3, [sp, #28]
 801aca0:	9425      	str	r4, [sp, #148]	@ 0x94
 801aca2:	3b01      	subs	r3, #1
 801aca4:	9307      	str	r3, [sp, #28]
 801aca6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801aca8:	3302      	adds	r3, #2
 801acaa:	930a      	str	r3, [sp, #40]	@ 0x28
 801acac:	e66c      	b.n	801a988 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801acae:	d024      	beq.n	801acfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801acb0:	9b07      	ldr	r3, [sp, #28]
 801acb2:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801acb4:	3b01      	subs	r3, #1
 801acb6:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801acb8:	fb00 4003 	mla	r0, r0, r3, r4
 801acbc:	1400      	asrs	r0, r0, #16
 801acbe:	f53f ae80 	bmi.w	801a9c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801acc2:	3901      	subs	r1, #1
 801acc4:	4288      	cmp	r0, r1
 801acc6:	f6bf ae7c 	bge.w	801a9c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801acca:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801accc:	fb01 5303 	mla	r3, r1, r3, r5
 801acd0:	141b      	asrs	r3, r3, #16
 801acd2:	f53f ae76 	bmi.w	801a9c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801acd6:	3a01      	subs	r2, #1
 801acd8:	4293      	cmp	r3, r2
 801acda:	f6bf ae72 	bge.w	801a9c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801acde:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ace2:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801ace6:	f1bb 0f00 	cmp.w	fp, #0
 801acea:	dc71      	bgt.n	801add0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801acec:	9b07      	ldr	r3, [sp, #28]
 801acee:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801acf2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801acf4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801acf8:	930a      	str	r3, [sp, #40]	@ 0x28
 801acfa:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801acfc:	2b00      	cmp	r3, #0
 801acfe:	f340 81af 	ble.w	801b060 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801ad02:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ad06:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ad08:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad0c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad10:	eef0 6a62 	vmov.f32	s13, s5
 801ad14:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ad18:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad20:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801ad24:	eef0 6a43 	vmov.f32	s13, s6
 801ad28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad2c:	ee16 5a90 	vmov	r5, s13
 801ad30:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad34:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad38:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad3c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad44:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad48:	ee12 2a90 	vmov	r2, s5
 801ad4c:	eef0 2a47 	vmov.f32	s5, s14
 801ad50:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad54:	ee13 2a10 	vmov	r2, s6
 801ad58:	9327      	str	r3, [sp, #156]	@ 0x9c
 801ad5a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ad5c:	eeb0 3a67 	vmov.f32	s6, s15
 801ad60:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad64:	9328      	str	r3, [sp, #160]	@ 0xa0
 801ad66:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ad68:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801ad6a:	3b01      	subs	r3, #1
 801ad6c:	9316      	str	r3, [sp, #88]	@ 0x58
 801ad6e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ad70:	bf08      	it	eq
 801ad72:	4613      	moveq	r3, r2
 801ad74:	9307      	str	r3, [sp, #28]
 801ad76:	e5f9      	b.n	801a96c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ad78:	2800      	cmp	r0, #0
 801ad7a:	f43f ae6b 	beq.w	801aa54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801ad7e:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ad82:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ad86:	9108      	str	r1, [sp, #32]
 801ad88:	0e09      	lsrs	r1, r1, #24
 801ad8a:	9110      	str	r1, [sp, #64]	@ 0x40
 801ad8c:	e662      	b.n	801aa54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801ad8e:	f113 0801 	adds.w	r8, r3, #1
 801ad92:	f53f af74 	bmi.w	801ac7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ad96:	4541      	cmp	r1, r8
 801ad98:	f6ff af71 	blt.w	801ac7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ad9c:	f11c 0801 	adds.w	r8, ip, #1
 801ada0:	f53f af6d 	bmi.w	801ac7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ada4:	45c6      	cmp	lr, r8
 801ada6:	f6ff af6a 	blt.w	801ac7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801adaa:	b209      	sxth	r1, r1
 801adac:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801adb0:	fa0f f38e 	sxth.w	r3, lr
 801adb4:	9100      	str	r1, [sp, #0]
 801adb6:	4639      	mov	r1, r7
 801adb8:	9301      	str	r3, [sp, #4]
 801adba:	4633      	mov	r3, r6
 801adbc:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801adc0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801adc2:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801adc4:	f7ff fc7b 	bl	801a6be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801adc8:	e759      	b.n	801ac7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801adca:	bf00      	nop
 801adcc:	fffff800 	.word	0xfffff800
 801add0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801add2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801add6:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801add8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801addc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801adde:	1427      	asrs	r7, r4, #16
 801ade0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801ade2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ade6:	142b      	asrs	r3, r5, #16
 801ade8:	fb01 7303 	mla	r3, r1, r3, r7
 801adec:	18e7      	adds	r7, r4, r3
 801adee:	5ce3      	ldrb	r3, [r4, r3]
 801adf0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801adf4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801adf8:	2a00      	cmp	r2, #0
 801adfa:	f000 8127 	beq.w	801b04c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801adfe:	f897 e001 	ldrb.w	lr, [r7, #1]
 801ae02:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801ae06:	940d      	str	r4, [sp, #52]	@ 0x34
 801ae08:	0e24      	lsrs	r4, r4, #24
 801ae0a:	9414      	str	r4, [sp, #80]	@ 0x50
 801ae0c:	b170      	cbz	r0, 801ae2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ae0e:	eb07 0e01 	add.w	lr, r7, r1
 801ae12:	5c79      	ldrb	r1, [r7, r1]
 801ae14:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ae18:	9109      	str	r1, [sp, #36]	@ 0x24
 801ae1a:	0e09      	lsrs	r1, r1, #24
 801ae1c:	9111      	str	r1, [sp, #68]	@ 0x44
 801ae1e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801ae22:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ae26:	910e      	str	r1, [sp, #56]	@ 0x38
 801ae28:	0e09      	lsrs	r1, r1, #24
 801ae2a:	9115      	str	r1, [sp, #84]	@ 0x54
 801ae2c:	b292      	uxth	r2, r2
 801ae2e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ae30:	b280      	uxth	r0, r0
 801ae32:	fb02 f800 	mul.w	r8, r2, r0
 801ae36:	0112      	lsls	r2, r2, #4
 801ae38:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ae3c:	eba2 0e08 	sub.w	lr, r2, r8
 801ae40:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801ae44:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ae46:	b280      	uxth	r0, r0
 801ae48:	fa1f fe8e 	uxth.w	lr, lr
 801ae4c:	1a09      	subs	r1, r1, r0
 801ae4e:	fb0e f202 	mul.w	r2, lr, r2
 801ae52:	b289      	uxth	r1, r1
 801ae54:	fb01 220c 	mla	r2, r1, ip, r2
 801ae58:	fb00 2204 	mla	r2, r0, r4, r2
 801ae5c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ae5e:	fb08 2204 	mla	r2, r8, r4, r2
 801ae62:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ae66:	2a00      	cmp	r2, #0
 801ae68:	f000 80e5 	beq.w	801b036 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801ae6c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ae70:	d019      	beq.n	801aea6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801ae72:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ae76:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ae7a:	fb0c fa0a 	mul.w	sl, ip, sl
 801ae7e:	fb0c fc03 	mul.w	ip, ip, r3
 801ae82:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ae86:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ae8a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ae8e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ae92:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ae96:	4453      	add	r3, sl
 801ae98:	0a3f      	lsrs	r7, r7, #8
 801ae9a:	0a1b      	lsrs	r3, r3, #8
 801ae9c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801aea0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801aea4:	433b      	orrs	r3, r7
 801aea6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801aea8:	2cff      	cmp	r4, #255	@ 0xff
 801aeaa:	d020      	beq.n	801aeee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801aeac:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801aeae:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801aeb2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801aeb4:	4367      	muls	r7, r4
 801aeb6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801aeb8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801aebc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801aec0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801aec2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801aec6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801aeca:	fb04 fa0a 	mul.w	sl, r4, sl
 801aece:	44bc      	add	ip, r7
 801aed0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801aed4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aed8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801aedc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801aee0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aee4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801aee8:	ea4c 040a 	orr.w	r4, ip, sl
 801aeec:	940d      	str	r4, [sp, #52]	@ 0x34
 801aeee:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801aef0:	2cff      	cmp	r4, #255	@ 0xff
 801aef2:	d020      	beq.n	801af36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801aef4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801aef6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801aefa:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801aefc:	4367      	muls	r7, r4
 801aefe:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801af00:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801af04:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801af08:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801af0a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801af0e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801af12:	fb04 fa0a 	mul.w	sl, r4, sl
 801af16:	44bc      	add	ip, r7
 801af18:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801af1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af20:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801af24:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801af28:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801af2c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801af30:	ea4c 040a 	orr.w	r4, ip, sl
 801af34:	9409      	str	r4, [sp, #36]	@ 0x24
 801af36:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801af38:	2cff      	cmp	r4, #255	@ 0xff
 801af3a:	d020      	beq.n	801af7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801af3c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801af3e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801af42:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801af44:	4367      	muls	r7, r4
 801af46:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801af48:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801af4c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801af50:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801af52:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801af56:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801af5a:	fb04 fa0a 	mul.w	sl, r4, sl
 801af5e:	44bc      	add	ip, r7
 801af60:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801af64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af68:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801af6c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801af70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801af74:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801af78:	ea4c 040a 	orr.w	r4, ip, sl
 801af7c:	940e      	str	r4, [sp, #56]	@ 0x38
 801af7e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801af80:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801af84:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801af88:	43d2      	mvns	r2, r2
 801af8a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801af8e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801af90:	b2d2      	uxtb	r2, r2
 801af92:	fb0e f707 	mul.w	r7, lr, r7
 801af96:	fb01 770c 	mla	r7, r1, ip, r7
 801af9a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801af9e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801afa0:	fb00 770c 	mla	r7, r0, ip, r7
 801afa4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801afa8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801afaa:	fb08 770c 	mla	r7, r8, ip, r7
 801afae:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801afb2:	fb0e fe0c 	mul.w	lr, lr, ip
 801afb6:	0a3f      	lsrs	r7, r7, #8
 801afb8:	fb01 e303 	mla	r3, r1, r3, lr
 801afbc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801afbe:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801afc2:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801afc6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801afc8:	fb00 330a 	mla	r3, r0, sl, r3
 801afcc:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801afd0:	fb08 3c0c 	mla	ip, r8, ip, r3
 801afd4:	f8b9 3000 	ldrh.w	r3, [r9]
 801afd8:	1218      	asrs	r0, r3, #8
 801afda:	10d9      	asrs	r1, r3, #3
 801afdc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801afe0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801afe4:	00db      	lsls	r3, r3, #3
 801afe6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801afea:	4350      	muls	r0, r2
 801afec:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801aff0:	b2db      	uxtb	r3, r3
 801aff2:	4351      	muls	r1, r2
 801aff4:	ea47 070c 	orr.w	r7, r7, ip
 801aff8:	4353      	muls	r3, r2
 801affa:	1c42      	adds	r2, r0, #1
 801affc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b000:	0c3a      	lsrs	r2, r7, #16
 801b002:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b006:	4a18      	ldr	r2, [pc, #96]	@ (801b068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801b008:	b2c0      	uxtb	r0, r0
 801b00a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801b00e:	1c4a      	adds	r2, r1, #1
 801b010:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b014:	0a3a      	lsrs	r2, r7, #8
 801b016:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b01a:	00c9      	lsls	r1, r1, #3
 801b01c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b020:	4301      	orrs	r1, r0
 801b022:	1c58      	adds	r0, r3, #1
 801b024:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b028:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801b02c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801b030:	4308      	orrs	r0, r1
 801b032:	f8a9 0000 	strh.w	r0, [r9]
 801b036:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801b038:	f109 0902 	add.w	r9, r9, #2
 801b03c:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801b03e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b042:	441a      	add	r2, r3
 801b044:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b046:	9225      	str	r2, [sp, #148]	@ 0x94
 801b048:	441d      	add	r5, r3
 801b04a:	e64c      	b.n	801ace6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801b04c:	2800      	cmp	r0, #0
 801b04e:	f43f aeed 	beq.w	801ae2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b052:	5c79      	ldrb	r1, [r7, r1]
 801b054:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b058:	9109      	str	r1, [sp, #36]	@ 0x24
 801b05a:	0e09      	lsrs	r1, r1, #24
 801b05c:	9111      	str	r1, [sp, #68]	@ 0x44
 801b05e:	e6e5      	b.n	801ae2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b060:	b01b      	add	sp, #108	@ 0x6c
 801b062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b066:	bf00      	nop
 801b068:	fffff800 	.word	0xfffff800

0801b06c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801b06c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b070:	b085      	sub	sp, #20
 801b072:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801b076:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801b07a:	2800      	cmp	r0, #0
 801b07c:	9103      	str	r1, [sp, #12]
 801b07e:	fb00 7406 	mla	r4, r0, r6, r7
 801b082:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801b086:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801b08a:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801b08e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801b092:	eb03 0904 	add.w	r9, r3, r4
 801b096:	9501      	str	r5, [sp, #4]
 801b098:	f2c0 8150 	blt.w	801b33c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801b09c:	4583      	cmp	fp, r0
 801b09e:	f340 814d 	ble.w	801b33c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801b0a2:	2f00      	cmp	r7, #0
 801b0a4:	f2c0 8146 	blt.w	801b334 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801b0a8:	42be      	cmp	r6, r7
 801b0aa:	f340 8143 	ble.w	801b334 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801b0ae:	f813 c004 	ldrb.w	ip, [r3, r4]
 801b0b2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801b0b6:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801b0ba:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b0be:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801b0c2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b0c6:	4355      	muls	r5, r2
 801b0c8:	fb0c f203 	mul.w	r2, ip, r3
 801b0cc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801b0d0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801b0d4:	441d      	add	r5, r3
 801b0d6:	f102 0320 	add.w	r3, r2, #32
 801b0da:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b0de:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801b0e2:	0a1b      	lsrs	r3, r3, #8
 801b0e4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b0e8:	431c      	orrs	r4, r3
 801b0ea:	1c7b      	adds	r3, r7, #1
 801b0ec:	f100 812b 	bmi.w	801b346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801b0f0:	429e      	cmp	r6, r3
 801b0f2:	f340 8128 	ble.w	801b346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801b0f6:	2900      	cmp	r1, #0
 801b0f8:	f000 8128 	beq.w	801b34c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801b0fc:	9a01      	ldr	r2, [sp, #4]
 801b0fe:	f899 3001 	ldrb.w	r3, [r9, #1]
 801b102:	8855      	ldrh	r5, [r2, #2]
 801b104:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801b108:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801b10c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b110:	fb08 f802 	mul.w	r8, r8, r2
 801b114:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801b118:	435d      	muls	r5, r3
 801b11a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801b11e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801b122:	44d0      	add	r8, sl
 801b124:	f105 0a20 	add.w	sl, r5, #32
 801b128:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801b12c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801b130:	0a2d      	lsrs	r5, r5, #8
 801b132:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b136:	432a      	orrs	r2, r5
 801b138:	3001      	adds	r0, #1
 801b13a:	f100 810d 	bmi.w	801b358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801b13e:	4583      	cmp	fp, r0
 801b140:	f340 810a 	ble.w	801b358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801b144:	f1be 0f00 	cmp.w	lr, #0
 801b148:	f000 810b 	beq.w	801b362 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801b14c:	2f00      	cmp	r7, #0
 801b14e:	f2c0 8100 	blt.w	801b352 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801b152:	42be      	cmp	r6, r7
 801b154:	f340 80fd 	ble.w	801b352 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801b158:	9801      	ldr	r0, [sp, #4]
 801b15a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801b15e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801b162:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801b166:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b16a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801b16e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801b172:	fb0a fa00 	mul.w	sl, sl, r0
 801b176:	fb05 f808 	mul.w	r8, r5, r8
 801b17a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801b17e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801b182:	4482      	add	sl, r0
 801b184:	f108 0020 	add.w	r0, r8, #32
 801b188:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801b18c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801b190:	0a00      	lsrs	r0, r0, #8
 801b192:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b196:	ea4b 0b00 	orr.w	fp, fp, r0
 801b19a:	3701      	adds	r7, #1
 801b19c:	f100 80e6 	bmi.w	801b36c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801b1a0:	42be      	cmp	r6, r7
 801b1a2:	f340 80e3 	ble.w	801b36c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801b1a6:	2900      	cmp	r1, #0
 801b1a8:	f000 80e3 	beq.w	801b372 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801b1ac:	3601      	adds	r6, #1
 801b1ae:	9801      	ldr	r0, [sp, #4]
 801b1b0:	f819 7006 	ldrb.w	r7, [r9, r6]
 801b1b4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801b1b8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801b1bc:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801b1c0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b1c4:	fb09 f906 	mul.w	r9, r9, r6
 801b1c8:	fb07 f800 	mul.w	r8, r7, r0
 801b1cc:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801b1d0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801b1d4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801b1d8:	44d1      	add	r9, sl
 801b1da:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801b1de:	f108 0020 	add.w	r0, r8, #32
 801b1e2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801b1e6:	0a00      	lsrs	r0, r0, #8
 801b1e8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b1ec:	4330      	orrs	r0, r6
 801b1ee:	b28e      	uxth	r6, r1
 801b1f0:	fa1f f98e 	uxth.w	r9, lr
 801b1f4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801b1f8:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801b1fc:	fb06 f809 	mul.w	r8, r6, r9
 801b200:	0136      	lsls	r6, r6, #4
 801b202:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b206:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801b20a:	9601      	str	r6, [sp, #4]
 801b20c:	ea4a 0404 	orr.w	r4, sl, r4
 801b210:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b214:	fa1f f689 	uxth.w	r6, r9
 801b218:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b21c:	fb11 f90e 	smulbb	r9, r1, lr
 801b220:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b224:	9602      	str	r6, [sp, #8]
 801b226:	4626      	mov	r6, r4
 801b228:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801b22c:	f1ce 0410 	rsb	r4, lr, #16
 801b230:	ea4a 0202 	orr.w	r2, sl, r2
 801b234:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801b238:	1a64      	subs	r4, r4, r1
 801b23a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801b23e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b242:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b246:	434a      	muls	r2, r1
 801b248:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801b24c:	ea4a 0000 	orr.w	r0, sl, r0
 801b250:	9903      	ldr	r1, [sp, #12]
 801b252:	fb04 2406 	mla	r4, r4, r6, r2
 801b256:	9e02      	ldr	r6, [sp, #8]
 801b258:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801b25c:	fb09 4200 	mla	r2, r9, r0, r4
 801b260:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801b264:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801b268:	8808      	ldrh	r0, [r1, #0]
 801b26a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801b26e:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801b272:	ea44 0b0b 	orr.w	fp, r4, fp
 801b276:	9c01      	ldr	r4, [sp, #4]
 801b278:	b289      	uxth	r1, r1
 801b27a:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801b27e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801b282:	1ba4      	subs	r4, r4, r6
 801b284:	9e01      	ldr	r6, [sp, #4]
 801b286:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801b28a:	eba6 0608 	sub.w	r6, r6, r8
 801b28e:	b2a4      	uxth	r4, r4
 801b290:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b294:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b298:	b2b6      	uxth	r6, r6
 801b29a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801b29e:	4373      	muls	r3, r6
 801b2a0:	ea42 0e0e 	orr.w	lr, r2, lr
 801b2a4:	fb0c 3304 	mla	r3, ip, r4, r3
 801b2a8:	9c02      	ldr	r4, [sp, #8]
 801b2aa:	fa1f f28e 	uxth.w	r2, lr
 801b2ae:	fb04 3505 	mla	r5, r4, r5, r3
 801b2b2:	10d4      	asrs	r4, r2, #3
 801b2b4:	fb08 5707 	mla	r7, r8, r7, r5
 801b2b8:	1215      	asrs	r5, r2, #8
 801b2ba:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801b2be:	00d2      	lsls	r2, r2, #3
 801b2c0:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b2c4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b2c8:	b2d2      	uxtb	r2, r2
 801b2ca:	434f      	muls	r7, r1
 801b2cc:	1c7b      	adds	r3, r7, #1
 801b2ce:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801b2d2:	1203      	asrs	r3, r0, #8
 801b2d4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801b2d8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801b2dc:	b2ff      	uxtb	r7, r7
 801b2de:	fb13 f307 	smulbb	r3, r3, r7
 801b2e2:	fb05 3501 	mla	r5, r5, r1, r3
 801b2e6:	10c3      	asrs	r3, r0, #3
 801b2e8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801b2ec:	b2ad      	uxth	r5, r5
 801b2ee:	fb13 f307 	smulbb	r3, r3, r7
 801b2f2:	fb04 3401 	mla	r4, r4, r1, r3
 801b2f6:	00c3      	lsls	r3, r0, #3
 801b2f8:	b2db      	uxtb	r3, r3
 801b2fa:	b2a4      	uxth	r4, r4
 801b2fc:	fb13 f307 	smulbb	r3, r3, r7
 801b300:	fb02 3101 	mla	r1, r2, r1, r3
 801b304:	1c6b      	adds	r3, r5, #1
 801b306:	1c62      	adds	r2, r4, #1
 801b308:	b289      	uxth	r1, r1
 801b30a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b30e:	1c4b      	adds	r3, r1, #1
 801b310:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801b314:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b318:	9a03      	ldr	r2, [sp, #12]
 801b31a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b31e:	0964      	lsrs	r4, r4, #5
 801b320:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b324:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801b328:	432b      	orrs	r3, r5
 801b32a:	4323      	orrs	r3, r4
 801b32c:	8013      	strh	r3, [r2, #0]
 801b32e:	b005      	add	sp, #20
 801b330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b334:	f04f 0c00 	mov.w	ip, #0
 801b338:	4664      	mov	r4, ip
 801b33a:	e6d6      	b.n	801b0ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801b33c:	2300      	movs	r3, #0
 801b33e:	469c      	mov	ip, r3
 801b340:	461a      	mov	r2, r3
 801b342:	461c      	mov	r4, r3
 801b344:	e6f8      	b.n	801b138 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801b346:	2300      	movs	r3, #0
 801b348:	461a      	mov	r2, r3
 801b34a:	e6f5      	b.n	801b138 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801b34c:	460b      	mov	r3, r1
 801b34e:	460a      	mov	r2, r1
 801b350:	e6f2      	b.n	801b138 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801b352:	2500      	movs	r5, #0
 801b354:	46ab      	mov	fp, r5
 801b356:	e720      	b.n	801b19a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801b358:	2700      	movs	r7, #0
 801b35a:	463d      	mov	r5, r7
 801b35c:	4638      	mov	r0, r7
 801b35e:	46bb      	mov	fp, r7
 801b360:	e745      	b.n	801b1ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801b362:	4677      	mov	r7, lr
 801b364:	4675      	mov	r5, lr
 801b366:	4670      	mov	r0, lr
 801b368:	46f3      	mov	fp, lr
 801b36a:	e740      	b.n	801b1ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801b36c:	2700      	movs	r7, #0
 801b36e:	4638      	mov	r0, r7
 801b370:	e73d      	b.n	801b1ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801b372:	460f      	mov	r7, r1
 801b374:	4608      	mov	r0, r1
 801b376:	e73a      	b.n	801b1ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801b378 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b37c:	b097      	sub	sp, #92	@ 0x5c
 801b37e:	9214      	str	r2, [sp, #80]	@ 0x50
 801b380:	9308      	str	r3, [sp, #32]
 801b382:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801b384:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801b388:	9015      	str	r0, [sp, #84]	@ 0x54
 801b38a:	9312      	str	r3, [sp, #72]	@ 0x48
 801b38c:	6850      	ldr	r0, [r2, #4]
 801b38e:	9111      	str	r1, [sp, #68]	@ 0x44
 801b390:	6812      	ldr	r2, [r2, #0]
 801b392:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801b396:	fb00 1303 	mla	r3, r0, r3, r1
 801b39a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b39e:	9309      	str	r3, [sp, #36]	@ 0x24
 801b3a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b3a2:	681b      	ldr	r3, [r3, #0]
 801b3a4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b3a6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b3a8:	685b      	ldr	r3, [r3, #4]
 801b3aa:	930c      	str	r3, [sp, #48]	@ 0x30
 801b3ac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801b3b0:	930a      	str	r3, [sp, #40]	@ 0x28
 801b3b2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b3b4:	2b00      	cmp	r3, #0
 801b3b6:	dc03      	bgt.n	801b3c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b3b8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801b3ba:	2b00      	cmp	r3, #0
 801b3bc:	f340 83cd 	ble.w	801bb5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801b3c0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b3c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b3c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b3ca:	1e48      	subs	r0, r1, #1
 801b3cc:	1e55      	subs	r5, r2, #1
 801b3ce:	9b08      	ldr	r3, [sp, #32]
 801b3d0:	2b00      	cmp	r3, #0
 801b3d2:	f340 81a5 	ble.w	801b720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801b3d6:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801b3d8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b3da:	1436      	asrs	r6, r6, #16
 801b3dc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801b3e0:	d406      	bmi.n	801b3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b3e2:	4286      	cmp	r6, r0
 801b3e4:	da04      	bge.n	801b3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b3e6:	2b00      	cmp	r3, #0
 801b3e8:	db02      	blt.n	801b3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b3ea:	42ab      	cmp	r3, r5
 801b3ec:	f2c0 8199 	blt.w	801b722 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801b3f0:	3601      	adds	r6, #1
 801b3f2:	f100 8186 	bmi.w	801b702 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b3f6:	42b1      	cmp	r1, r6
 801b3f8:	f2c0 8183 	blt.w	801b702 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b3fc:	3301      	adds	r3, #1
 801b3fe:	f100 8180 	bmi.w	801b702 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b402:	429a      	cmp	r2, r3
 801b404:	f2c0 817d 	blt.w	801b702 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b408:	9b08      	ldr	r3, [sp, #32]
 801b40a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801b40e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801b410:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b412:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801b414:	2b00      	cmp	r3, #0
 801b416:	f340 81a6 	ble.w	801b766 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801b41a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b41c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801b41e:	1418      	asrs	r0, r3, #16
 801b420:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801b422:	142d      	asrs	r5, r5, #16
 801b424:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801b428:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b42a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801b42e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b430:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801b434:	f100 81fa 	bmi.w	801b82c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801b438:	f102 3eff 	add.w	lr, r2, #4294967295
 801b43c:	4575      	cmp	r5, lr
 801b43e:	f280 81f5 	bge.w	801b82c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801b442:	2800      	cmp	r0, #0
 801b444:	f2c0 81f2 	blt.w	801b82c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801b448:	f103 3eff 	add.w	lr, r3, #4294967295
 801b44c:	4570      	cmp	r0, lr
 801b44e:	f280 81ed 	bge.w	801b82c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801b452:	b212      	sxth	r2, r2
 801b454:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b456:	fa1f fe81 	uxth.w	lr, r1
 801b45a:	fb00 5002 	mla	r0, r0, r2, r5
 801b45e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801b462:	eb03 0a00 	add.w	sl, r3, r0
 801b466:	f813 9000 	ldrb.w	r9, [r3, r0]
 801b46a:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801b46e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b472:	b29b      	uxth	r3, r3
 801b474:	f1bc 0f00 	cmp.w	ip, #0
 801b478:	f000 81bb 	beq.w	801b7f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801b47c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801b480:	eb0a 0b02 	add.w	fp, sl, r2
 801b484:	fa1f fa8c 	uxth.w	sl, ip
 801b488:	940d      	str	r4, [sp, #52]	@ 0x34
 801b48a:	fb0a fe0e 	mul.w	lr, sl, lr
 801b48e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b492:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801b496:	eba5 050e 	sub.w	r5, r5, lr
 801b49a:	940e      	str	r4, [sp, #56]	@ 0x38
 801b49c:	fa1f fa8a 	uxth.w	sl, sl
 801b4a0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b4a2:	b2ad      	uxth	r5, r5
 801b4a4:	eba3 030a 	sub.w	r3, r3, sl
 801b4a8:	fb08 f505 	mul.w	r5, r8, r5
 801b4ac:	b29b      	uxth	r3, r3
 801b4ae:	fb09 5303 	mla	r3, r9, r3, r5
 801b4b2:	fb0a 3304 	mla	r3, sl, r4, r3
 801b4b6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b4b8:	fb0e 3304 	mla	r3, lr, r4, r3
 801b4bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b4c0:	2b00      	cmp	r3, #0
 801b4c2:	f000 8111 	beq.w	801b6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b4c6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b4c8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801b4cc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801b4d0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801b4d4:	f000 8192 	beq.w	801b7fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801b4d8:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801b4dc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b4e0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b4e4:	fb0a fe0e 	mul.w	lr, sl, lr
 801b4e8:	fb09 f000 	mul.w	r0, r9, r0
 801b4ec:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801b4f0:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801b4f4:	f100 0b20 	add.w	fp, r0, #32
 801b4f8:	44ce      	add	lr, r9
 801b4fa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801b4fe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b502:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b506:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801b50a:	ea4e 0909 	orr.w	r9, lr, r9
 801b50e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801b512:	8868      	ldrh	r0, [r5, #2]
 801b514:	d019      	beq.n	801b54a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b516:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801b51a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b51e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b522:	fb0a fe0e 	mul.w	lr, sl, lr
 801b526:	fb08 f800 	mul.w	r8, r8, r0
 801b52a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801b52e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801b532:	f108 0b20 	add.w	fp, r8, #32
 801b536:	4486      	add	lr, r0
 801b538:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801b53c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b540:	0a00      	lsrs	r0, r0, #8
 801b542:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b546:	ea4e 0000 	orr.w	r0, lr, r0
 801b54a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801b54e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801b552:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801b556:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b55a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801b55e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b562:	ea4e 0909 	orr.w	r9, lr, r9
 801b566:	ea4a 0000 	orr.w	r0, sl, r0
 801b56a:	f1bc 0f00 	cmp.w	ip, #0
 801b56e:	f000 8147 	beq.w	801b800 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801b572:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801b576:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b578:	3a01      	subs	r2, #1
 801b57a:	2cff      	cmp	r4, #255	@ 0xff
 801b57c:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801b580:	f102 0202 	add.w	r2, r2, #2
 801b584:	eb05 0e02 	add.w	lr, r5, r2
 801b588:	5aaa      	ldrh	r2, [r5, r2]
 801b58a:	d018      	beq.n	801b5be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801b58c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801b590:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b594:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b598:	fb04 fa02 	mul.w	sl, r4, r2
 801b59c:	fb08 f805 	mul.w	r8, r8, r5
 801b5a0:	f10a 0520 	add.w	r5, sl, #32
 801b5a4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801b5a8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801b5ac:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801b5b0:	4442      	add	r2, r8
 801b5b2:	0a2d      	lsrs	r5, r5, #8
 801b5b4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801b5b8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b5bc:	432a      	orrs	r2, r5
 801b5be:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b5c0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801b5c4:	2cff      	cmp	r4, #255	@ 0xff
 801b5c6:	d01a      	beq.n	801b5fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801b5c8:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801b5cc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b5d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b5d4:	fb04 fa05 	mul.w	sl, r4, r5
 801b5d8:	fb08 f80e 	mul.w	r8, r8, lr
 801b5dc:	f10a 0e20 	add.w	lr, sl, #32
 801b5e0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801b5e4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801b5e8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801b5ec:	4445      	add	r5, r8
 801b5ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b5f2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801b5f6:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801b5fa:	ea45 050e 	orr.w	r5, r5, lr
 801b5fe:	fb1c fe01 	smulbb	lr, ip, r1
 801b602:	f1cc 0810 	rsb	r8, ip, #16
 801b606:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b60a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b60e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801b612:	eba8 0801 	sub.w	r8, r8, r1
 801b616:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801b61a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b61e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801b622:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801b626:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801b62a:	ea4a 0202 	orr.w	r2, sl, r2
 801b62e:	4341      	muls	r1, r0
 801b630:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801b634:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b638:	fb09 1108 	mla	r1, r9, r8, r1
 801b63c:	ea4b 0505 	orr.w	r5, fp, r5
 801b640:	fb0c 1102 	mla	r1, ip, r2, r1
 801b644:	fb0e 1e05 	mla	lr, lr, r5, r1
 801b648:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801b64c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b650:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b654:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801b658:	ea42 0e0e 	orr.w	lr, r2, lr
 801b65c:	fa1f f28e 	uxth.w	r2, lr
 801b660:	2bff      	cmp	r3, #255	@ 0xff
 801b662:	d103      	bne.n	801b66c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b664:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801b666:	29ff      	cmp	r1, #255	@ 0xff
 801b668:	f000 80de 	beq.w	801b828 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b66c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801b66e:	1215      	asrs	r5, r2, #8
 801b670:	8838      	ldrh	r0, [r7, #0]
 801b672:	434b      	muls	r3, r1
 801b674:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b678:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b67a:	f103 0c01 	add.w	ip, r3, #1
 801b67e:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801b682:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801b686:	fa5f fc83 	uxtb.w	ip, r3
 801b68a:	1203      	asrs	r3, r0, #8
 801b68c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801b690:	fb13 f30c 	smulbb	r3, r3, ip
 801b694:	fb05 3501 	mla	r5, r5, r1, r3
 801b698:	10c3      	asrs	r3, r0, #3
 801b69a:	10d1      	asrs	r1, r2, #3
 801b69c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801b6a0:	00d2      	lsls	r2, r2, #3
 801b6a2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b6a6:	b2ad      	uxth	r5, r5
 801b6a8:	fb13 f30c 	smulbb	r3, r3, ip
 801b6ac:	b2d2      	uxtb	r2, r2
 801b6ae:	fb01 3104 	mla	r1, r1, r4, r3
 801b6b2:	00c3      	lsls	r3, r0, #3
 801b6b4:	b2db      	uxtb	r3, r3
 801b6b6:	b289      	uxth	r1, r1
 801b6b8:	fb13 f30c 	smulbb	r3, r3, ip
 801b6bc:	fb02 3304 	mla	r3, r2, r4, r3
 801b6c0:	b29a      	uxth	r2, r3
 801b6c2:	1c6b      	adds	r3, r5, #1
 801b6c4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b6c8:	1c53      	adds	r3, r2, #1
 801b6ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b6ce:	1c4a      	adds	r2, r1, #1
 801b6d0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b6d4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b6d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b6dc:	0949      	lsrs	r1, r1, #5
 801b6de:	432b      	orrs	r3, r5
 801b6e0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b6e4:	430b      	orrs	r3, r1
 801b6e6:	803b      	strh	r3, [r7, #0]
 801b6e8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801b6ea:	3702      	adds	r7, #2
 801b6ec:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801b6ee:	4413      	add	r3, r2
 801b6f0:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801b6f2:	9321      	str	r3, [sp, #132]	@ 0x84
 801b6f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b6f6:	441a      	add	r2, r3
 801b6f8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801b6fa:	3b01      	subs	r3, #1
 801b6fc:	9222      	str	r2, [sp, #136]	@ 0x88
 801b6fe:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b700:	e687      	b.n	801b412 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b702:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801b704:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801b706:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801b708:	4433      	add	r3, r6
 801b70a:	9321      	str	r3, [sp, #132]	@ 0x84
 801b70c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b70e:	441c      	add	r4, r3
 801b710:	9b08      	ldr	r3, [sp, #32]
 801b712:	3b01      	subs	r3, #1
 801b714:	9422      	str	r4, [sp, #136]	@ 0x88
 801b716:	9308      	str	r3, [sp, #32]
 801b718:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b71a:	3302      	adds	r3, #2
 801b71c:	9309      	str	r3, [sp, #36]	@ 0x24
 801b71e:	e656      	b.n	801b3ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801b720:	d028      	beq.n	801b774 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801b722:	9b08      	ldr	r3, [sp, #32]
 801b724:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801b726:	3b01      	subs	r3, #1
 801b728:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801b72a:	fb00 5003 	mla	r0, r0, r3, r5
 801b72e:	1400      	asrs	r0, r0, #16
 801b730:	f53f ae6a 	bmi.w	801b408 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b734:	3901      	subs	r1, #1
 801b736:	4288      	cmp	r0, r1
 801b738:	f6bf ae66 	bge.w	801b408 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b73c:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801b73e:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801b740:	fb01 0303 	mla	r3, r1, r3, r0
 801b744:	141b      	asrs	r3, r3, #16
 801b746:	f53f ae5f 	bmi.w	801b408 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b74a:	3a01      	subs	r2, #1
 801b74c:	4293      	cmp	r3, r2
 801b74e:	f6bf ae5b 	bge.w	801b408 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b752:	9b08      	ldr	r3, [sp, #32]
 801b754:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801b758:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801b75c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b75e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801b760:	2b00      	cmp	r3, #0
 801b762:	f300 8082 	bgt.w	801b86a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801b766:	9b08      	ldr	r3, [sp, #32]
 801b768:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b76c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b76e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b772:	9309      	str	r3, [sp, #36]	@ 0x24
 801b774:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b776:	2b00      	cmp	r3, #0
 801b778:	f340 81ef 	ble.w	801bb5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801b77c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b780:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b782:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b786:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b78a:	eef0 6a62 	vmov.f32	s13, s5
 801b78e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b792:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b796:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b79a:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801b79e:	eef0 6a43 	vmov.f32	s13, s6
 801b7a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b7a6:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801b7aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b7ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b7b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b7b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b7ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b7be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b7c2:	ee12 2a90 	vmov	r2, s5
 801b7c6:	eef0 2a47 	vmov.f32	s5, s14
 801b7ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7ce:	ee13 2a10 	vmov	r2, s6
 801b7d2:	9323      	str	r3, [sp, #140]	@ 0x8c
 801b7d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b7d6:	eeb0 3a67 	vmov.f32	s6, s15
 801b7da:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7de:	9324      	str	r3, [sp, #144]	@ 0x90
 801b7e0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b7e2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b7e4:	3b01      	subs	r3, #1
 801b7e6:	9311      	str	r3, [sp, #68]	@ 0x44
 801b7e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b7ea:	bf08      	it	eq
 801b7ec:	4613      	moveq	r3, r2
 801b7ee:	9308      	str	r3, [sp, #32]
 801b7f0:	e5df      	b.n	801b3b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b7f2:	fb08 f505 	mul.w	r5, r8, r5
 801b7f6:	fb09 5303 	mla	r3, r9, r3, r5
 801b7fa:	e65f      	b.n	801b4bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801b7fc:	4681      	mov	r9, r0
 801b7fe:	e686      	b.n	801b50e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b800:	f1c1 0210 	rsb	r2, r1, #16
 801b804:	4341      	muls	r1, r0
 801b806:	fb09 1902 	mla	r9, r9, r2, r1
 801b80a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b80e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801b812:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b816:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b81a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801b81e:	ea42 0909 	orr.w	r9, r2, r9
 801b822:	fa1f f289 	uxth.w	r2, r9
 801b826:	e71b      	b.n	801b660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801b828:	803a      	strh	r2, [r7, #0]
 801b82a:	e75d      	b.n	801b6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b82c:	f115 0e01 	adds.w	lr, r5, #1
 801b830:	f53f af5a 	bmi.w	801b6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b834:	4572      	cmp	r2, lr
 801b836:	f6ff af57 	blt.w	801b6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b83a:	f110 0e01 	adds.w	lr, r0, #1
 801b83e:	f53f af53 	bmi.w	801b6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b842:	4573      	cmp	r3, lr
 801b844:	f6ff af50 	blt.w	801b6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b848:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b84a:	b21b      	sxth	r3, r3
 801b84c:	b212      	sxth	r2, r2
 801b84e:	9502      	str	r5, [sp, #8]
 801b850:	9301      	str	r3, [sp, #4]
 801b852:	9200      	str	r2, [sp, #0]
 801b854:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801b858:	e9cd c405 	strd	ip, r4, [sp, #20]
 801b85c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801b860:	4639      	mov	r1, r7
 801b862:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b864:	f7ff fc02 	bl	801b06c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801b868:	e73e      	b.n	801b6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b86a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801b86c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b870:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b872:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801b876:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b878:	fa1f fc82 	uxth.w	ip, r2
 801b87c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b880:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b882:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801b886:	141f      	asrs	r7, r3, #16
 801b888:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801b88a:	141b      	asrs	r3, r3, #16
 801b88c:	fb01 3707 	mla	r7, r1, r7, r3
 801b890:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b892:	eb03 0a07 	add.w	sl, r3, r7
 801b896:	f813 9007 	ldrb.w	r9, [r3, r7]
 801b89a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801b89e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b8a2:	b29b      	uxth	r3, r3
 801b8a4:	2d00      	cmp	r5, #0
 801b8a6:	f000 813d 	beq.w	801bb24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801b8aa:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801b8ae:	eb0a 0b01 	add.w	fp, sl, r1
 801b8b2:	fa1f fa85 	uxth.w	sl, r5
 801b8b6:	940f      	str	r4, [sp, #60]	@ 0x3c
 801b8b8:	fb0a fc0c 	mul.w	ip, sl, ip
 801b8bc:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b8c0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801b8c4:	eba0 000c 	sub.w	r0, r0, ip
 801b8c8:	9410      	str	r4, [sp, #64]	@ 0x40
 801b8ca:	fa1f fa8a 	uxth.w	sl, sl
 801b8ce:	b280      	uxth	r0, r0
 801b8d0:	eba3 030a 	sub.w	r3, r3, sl
 801b8d4:	fb08 f000 	mul.w	r0, r8, r0
 801b8d8:	b29b      	uxth	r3, r3
 801b8da:	fb09 0303 	mla	r3, r9, r3, r0
 801b8de:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801b8e0:	fb0a 3300 	mla	r3, sl, r0, r3
 801b8e4:	fb0c 3304 	mla	r3, ip, r4, r3
 801b8e8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b8ec:	2b00      	cmp	r3, #0
 801b8ee:	f000 810b 	beq.w	801bb08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801b8f2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801b8f4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801b8f8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b8fa:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801b8fe:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801b902:	f000 8114 	beq.w	801bb2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801b906:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801b90a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b90e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b912:	fb0a fc0c 	mul.w	ip, sl, ip
 801b916:	fb09 f707 	mul.w	r7, r9, r7
 801b91a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801b91e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801b922:	f107 0b20 	add.w	fp, r7, #32
 801b926:	44cc      	add	ip, r9
 801b928:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801b92c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b930:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b934:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801b938:	ea4c 0909 	orr.w	r9, ip, r9
 801b93c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801b940:	8847      	ldrh	r7, [r0, #2]
 801b942:	d019      	beq.n	801b978 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801b944:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801b948:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b94c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b950:	fb0a fc0c 	mul.w	ip, sl, ip
 801b954:	fb08 f807 	mul.w	r8, r8, r7
 801b958:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801b95c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801b960:	f108 0b20 	add.w	fp, r8, #32
 801b964:	44bc      	add	ip, r7
 801b966:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801b96a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b96e:	0a3f      	lsrs	r7, r7, #8
 801b970:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b974:	ea4c 0707 	orr.w	r7, ip, r7
 801b978:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801b97c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801b980:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801b984:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801b988:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b98c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b990:	ea4c 0909 	orr.w	r9, ip, r9
 801b994:	ea4a 0707 	orr.w	r7, sl, r7
 801b998:	2d00      	cmp	r5, #0
 801b99a:	f000 80ca 	beq.w	801bb32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801b99e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801b9a2:	3901      	subs	r1, #1
 801b9a4:	0049      	lsls	r1, r1, #1
 801b9a6:	3102      	adds	r1, #2
 801b9a8:	eb00 0c01 	add.w	ip, r0, r1
 801b9ac:	5a41      	ldrh	r1, [r0, r1]
 801b9ae:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801b9b0:	28ff      	cmp	r0, #255	@ 0xff
 801b9b2:	d019      	beq.n	801b9e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801b9b4:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801b9b8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b9ba:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b9be:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b9c2:	fb04 fa01 	mul.w	sl, r4, r1
 801b9c6:	fb08 f800 	mul.w	r8, r8, r0
 801b9ca:	f10a 0020 	add.w	r0, sl, #32
 801b9ce:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801b9d2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801b9d6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801b9da:	4441      	add	r1, r8
 801b9dc:	0a00      	lsrs	r0, r0, #8
 801b9de:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801b9e2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b9e6:	4301      	orrs	r1, r0
 801b9e8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b9ea:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801b9ee:	2cff      	cmp	r4, #255	@ 0xff
 801b9f0:	d01a      	beq.n	801ba28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801b9f2:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801b9f6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b9fa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b9fe:	fb04 fa00 	mul.w	sl, r4, r0
 801ba02:	fb08 f80c 	mul.w	r8, r8, ip
 801ba06:	f10a 0c20 	add.w	ip, sl, #32
 801ba0a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801ba0e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ba12:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801ba16:	4440      	add	r0, r8
 801ba18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba1c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801ba20:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ba24:	ea40 000c 	orr.w	r0, r0, ip
 801ba28:	fb15 fc02 	smulbb	ip, r5, r2
 801ba2c:	f1c5 0810 	rsb	r8, r5, #16
 801ba30:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801ba34:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ba38:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801ba3c:	eba8 0802 	sub.w	r8, r8, r2
 801ba40:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801ba44:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ba48:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801ba4c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ba50:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801ba54:	ea4a 0101 	orr.w	r1, sl, r1
 801ba58:	437a      	muls	r2, r7
 801ba5a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801ba5e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ba62:	fb09 2208 	mla	r2, r9, r8, r2
 801ba66:	ea4b 0000 	orr.w	r0, fp, r0
 801ba6a:	fb05 2201 	mla	r2, r5, r1, r2
 801ba6e:	fb0c 2200 	mla	r2, ip, r0, r2
 801ba72:	0d57      	lsrs	r7, r2, #21
 801ba74:	0952      	lsrs	r2, r2, #5
 801ba76:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ba7a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ba7e:	433a      	orrs	r2, r7
 801ba80:	2bff      	cmp	r3, #255	@ 0xff
 801ba82:	b292      	uxth	r2, r2
 801ba84:	d102      	bne.n	801ba8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801ba86:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801ba88:	29ff      	cmp	r1, #255	@ 0xff
 801ba8a:	d063      	beq.n	801bb54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801ba8c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801ba8e:	1215      	asrs	r5, r2, #8
 801ba90:	f8be 1000 	ldrh.w	r1, [lr]
 801ba94:	4343      	muls	r3, r0
 801ba96:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ba98:	10cf      	asrs	r7, r1, #3
 801ba9a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ba9e:	1c58      	adds	r0, r3, #1
 801baa0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801baa4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801baa8:	1208      	asrs	r0, r1, #8
 801baaa:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801baae:	00c9      	lsls	r1, r1, #3
 801bab0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801bab4:	b2db      	uxtb	r3, r3
 801bab6:	b2c9      	uxtb	r1, r1
 801bab8:	fb10 f003 	smulbb	r0, r0, r3
 801babc:	fb11 f103 	smulbb	r1, r1, r3
 801bac0:	fb05 0504 	mla	r5, r5, r4, r0
 801bac4:	10d0      	asrs	r0, r2, #3
 801bac6:	fb17 f703 	smulbb	r7, r7, r3
 801baca:	00d2      	lsls	r2, r2, #3
 801bacc:	b2ad      	uxth	r5, r5
 801bace:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801bad2:	b2d2      	uxtb	r2, r2
 801bad4:	fb00 7004 	mla	r0, r0, r4, r7
 801bad8:	1c6b      	adds	r3, r5, #1
 801bada:	fb02 1204 	mla	r2, r2, r4, r1
 801bade:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bae2:	b292      	uxth	r2, r2
 801bae4:	b280      	uxth	r0, r0
 801bae6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801baea:	1c57      	adds	r7, r2, #1
 801baec:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801baf0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801baf4:	433d      	orrs	r5, r7
 801baf6:	1c47      	adds	r7, r0, #1
 801baf8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801bafc:	097f      	lsrs	r7, r7, #5
 801bafe:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801bb02:	433d      	orrs	r5, r7
 801bb04:	f8ae 5000 	strh.w	r5, [lr]
 801bb08:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801bb0a:	f10e 0e02 	add.w	lr, lr, #2
 801bb0e:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801bb10:	4413      	add	r3, r2
 801bb12:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801bb14:	9321      	str	r3, [sp, #132]	@ 0x84
 801bb16:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bb18:	441a      	add	r2, r3
 801bb1a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801bb1c:	3b01      	subs	r3, #1
 801bb1e:	9222      	str	r2, [sp, #136]	@ 0x88
 801bb20:	9313      	str	r3, [sp, #76]	@ 0x4c
 801bb22:	e61c      	b.n	801b75e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801bb24:	fb08 f000 	mul.w	r0, r8, r0
 801bb28:	fb09 0303 	mla	r3, r9, r3, r0
 801bb2c:	e6dc      	b.n	801b8e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801bb2e:	46b9      	mov	r9, r7
 801bb30:	e704      	b.n	801b93c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801bb32:	f1c2 0110 	rsb	r1, r2, #16
 801bb36:	437a      	muls	r2, r7
 801bb38:	fb09 2901 	mla	r9, r9, r1, r2
 801bb3c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801bb40:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801bb44:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801bb48:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bb4c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801bb50:	4302      	orrs	r2, r0
 801bb52:	e795      	b.n	801ba80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801bb54:	f8ae 2000 	strh.w	r2, [lr]
 801bb58:	e7d6      	b.n	801bb08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801bb5a:	b017      	add	sp, #92	@ 0x5c
 801bb5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bb60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801bb60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb64:	b085      	sub	sp, #20
 801bb66:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801bb6a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801bb6e:	2800      	cmp	r0, #0
 801bb70:	9103      	str	r1, [sp, #12]
 801bb72:	fb00 7406 	mla	r4, r0, r6, r7
 801bb76:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801bb7a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801bb7e:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801bb82:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801bb86:	eb02 0904 	add.w	r9, r2, r4
 801bb8a:	9501      	str	r5, [sp, #4]
 801bb8c:	f2c0 8141 	blt.w	801be12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801bb90:	4583      	cmp	fp, r0
 801bb92:	f340 813e 	ble.w	801be12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801bb96:	2f00      	cmp	r7, #0
 801bb98:	f2c0 8137 	blt.w	801be0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801bb9c:	42be      	cmp	r6, r7
 801bb9e:	f340 8134 	ble.w	801be0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801bba2:	f812 c004 	ldrb.w	ip, [r2, r4]
 801bba6:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801bbaa:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801bbae:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bbb2:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801bbb6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bbba:	4355      	muls	r5, r2
 801bbbc:	fb0c f203 	mul.w	r2, ip, r3
 801bbc0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801bbc4:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801bbc8:	441d      	add	r5, r3
 801bbca:	f102 0320 	add.w	r3, r2, #32
 801bbce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bbd2:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801bbd6:	0a1b      	lsrs	r3, r3, #8
 801bbd8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bbdc:	431c      	orrs	r4, r3
 801bbde:	1c7b      	adds	r3, r7, #1
 801bbe0:	f100 811c 	bmi.w	801be1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801bbe4:	429e      	cmp	r6, r3
 801bbe6:	f340 8119 	ble.w	801be1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801bbea:	2900      	cmp	r1, #0
 801bbec:	f000 8119 	beq.w	801be22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801bbf0:	9a01      	ldr	r2, [sp, #4]
 801bbf2:	f899 3001 	ldrb.w	r3, [r9, #1]
 801bbf6:	8855      	ldrh	r5, [r2, #2]
 801bbf8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801bbfc:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801bc00:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801bc04:	fb08 f802 	mul.w	r8, r8, r2
 801bc08:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801bc0c:	435d      	muls	r5, r3
 801bc0e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801bc12:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801bc16:	44d0      	add	r8, sl
 801bc18:	f105 0a20 	add.w	sl, r5, #32
 801bc1c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801bc20:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bc24:	0a2d      	lsrs	r5, r5, #8
 801bc26:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801bc2a:	432a      	orrs	r2, r5
 801bc2c:	3001      	adds	r0, #1
 801bc2e:	f100 80fe 	bmi.w	801be2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801bc32:	4583      	cmp	fp, r0
 801bc34:	f340 80fb 	ble.w	801be2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801bc38:	f1be 0f00 	cmp.w	lr, #0
 801bc3c:	f000 80fc 	beq.w	801be38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801bc40:	2f00      	cmp	r7, #0
 801bc42:	f2c0 80f1 	blt.w	801be28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801bc46:	42be      	cmp	r6, r7
 801bc48:	f340 80ee 	ble.w	801be28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801bc4c:	9801      	ldr	r0, [sp, #4]
 801bc4e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801bc52:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bc56:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801bc5a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bc5e:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801bc62:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801bc66:	fb0a fa00 	mul.w	sl, sl, r0
 801bc6a:	fb05 f808 	mul.w	r8, r5, r8
 801bc6e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801bc72:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801bc76:	4482      	add	sl, r0
 801bc78:	f108 0020 	add.w	r0, r8, #32
 801bc7c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bc80:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801bc84:	0a00      	lsrs	r0, r0, #8
 801bc86:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bc8a:	ea4b 0b00 	orr.w	fp, fp, r0
 801bc8e:	3701      	adds	r7, #1
 801bc90:	f100 80d7 	bmi.w	801be42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801bc94:	42be      	cmp	r6, r7
 801bc96:	f340 80d4 	ble.w	801be42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801bc9a:	2900      	cmp	r1, #0
 801bc9c:	f000 80d4 	beq.w	801be48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801bca0:	3601      	adds	r6, #1
 801bca2:	9801      	ldr	r0, [sp, #4]
 801bca4:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bca8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bcac:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bcb0:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801bcb4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bcb8:	fb09 f906 	mul.w	r9, r9, r6
 801bcbc:	fb07 f800 	mul.w	r8, r7, r0
 801bcc0:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801bcc4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801bcc8:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801bccc:	44d1      	add	r9, sl
 801bcce:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bcd2:	f108 0020 	add.w	r0, r8, #32
 801bcd6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bcda:	0a00      	lsrs	r0, r0, #8
 801bcdc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bce0:	4330      	orrs	r0, r6
 801bce2:	b28e      	uxth	r6, r1
 801bce4:	fa1f f98e 	uxth.w	r9, lr
 801bce8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801bcec:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801bcf0:	fb06 f809 	mul.w	r8, r6, r9
 801bcf4:	0136      	lsls	r6, r6, #4
 801bcf6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801bcfa:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bcfe:	9601      	str	r6, [sp, #4]
 801bd00:	ea4a 0404 	orr.w	r4, sl, r4
 801bd04:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bd08:	fa1f f689 	uxth.w	r6, r9
 801bd0c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801bd10:	fb11 f90e 	smulbb	r9, r1, lr
 801bd14:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801bd18:	9602      	str	r6, [sp, #8]
 801bd1a:	4626      	mov	r6, r4
 801bd1c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801bd20:	f1ce 0410 	rsb	r4, lr, #16
 801bd24:	ea4a 0202 	orr.w	r2, sl, r2
 801bd28:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bd2c:	1a64      	subs	r4, r4, r1
 801bd2e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801bd32:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801bd36:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801bd3a:	434a      	muls	r2, r1
 801bd3c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801bd40:	ea4a 0000 	orr.w	r0, sl, r0
 801bd44:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801bd48:	fb04 2406 	mla	r4, r4, r6, r2
 801bd4c:	9903      	ldr	r1, [sp, #12]
 801bd4e:	fb09 4200 	mla	r2, r9, r0, r4
 801bd52:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801bd56:	9801      	ldr	r0, [sp, #4]
 801bd58:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801bd5c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801bd60:	8809      	ldrh	r1, [r1, #0]
 801bd62:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801bd66:	ea44 0b0b 	orr.w	fp, r4, fp
 801bd6a:	9c02      	ldr	r4, [sp, #8]
 801bd6c:	1b00      	subs	r0, r0, r4
 801bd6e:	9c01      	ldr	r4, [sp, #4]
 801bd70:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801bd74:	eba4 0608 	sub.w	r6, r4, r8
 801bd78:	b280      	uxth	r0, r0
 801bd7a:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bd7e:	b2b6      	uxth	r6, r6
 801bd80:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bd84:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bd88:	4373      	muls	r3, r6
 801bd8a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801bd8e:	fb0c 3300 	mla	r3, ip, r0, r3
 801bd92:	9802      	ldr	r0, [sp, #8]
 801bd94:	ea42 0e0e 	orr.w	lr, r2, lr
 801bd98:	fb00 3505 	mla	r5, r0, r5, r3
 801bd9c:	120b      	asrs	r3, r1, #8
 801bd9e:	10c8      	asrs	r0, r1, #3
 801bda0:	fb08 5707 	mla	r7, r8, r7, r5
 801bda4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801bda8:	00c9      	lsls	r1, r1, #3
 801bdaa:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801bdae:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801bdb2:	fa1f f28e 	uxth.w	r2, lr
 801bdb6:	b2c9      	uxtb	r1, r1
 801bdb8:	b2ff      	uxtb	r7, r7
 801bdba:	437b      	muls	r3, r7
 801bdbc:	4378      	muls	r0, r7
 801bdbe:	434f      	muls	r7, r1
 801bdc0:	1c59      	adds	r1, r3, #1
 801bdc2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801bdc6:	1213      	asrs	r3, r2, #8
 801bdc8:	f023 0307 	bic.w	r3, r3, #7
 801bdcc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bdd0:	1c41      	adds	r1, r0, #1
 801bdd2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801bdd6:	10d1      	asrs	r1, r2, #3
 801bdd8:	021b      	lsls	r3, r3, #8
 801bdda:	f021 0103 	bic.w	r1, r1, #3
 801bdde:	00d2      	lsls	r2, r2, #3
 801bde0:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801bde4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801bde8:	00c9      	lsls	r1, r1, #3
 801bdea:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801bdee:	430b      	orrs	r3, r1
 801bdf0:	1c79      	adds	r1, r7, #1
 801bdf2:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801bdf6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801bdfa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bdfe:	431a      	orrs	r2, r3
 801be00:	9b03      	ldr	r3, [sp, #12]
 801be02:	801a      	strh	r2, [r3, #0]
 801be04:	b005      	add	sp, #20
 801be06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be0a:	f04f 0c00 	mov.w	ip, #0
 801be0e:	4664      	mov	r4, ip
 801be10:	e6e5      	b.n	801bbde <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801be12:	2300      	movs	r3, #0
 801be14:	469c      	mov	ip, r3
 801be16:	461a      	mov	r2, r3
 801be18:	461c      	mov	r4, r3
 801be1a:	e707      	b.n	801bc2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801be1c:	2300      	movs	r3, #0
 801be1e:	461a      	mov	r2, r3
 801be20:	e704      	b.n	801bc2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801be22:	460b      	mov	r3, r1
 801be24:	460a      	mov	r2, r1
 801be26:	e701      	b.n	801bc2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801be28:	2500      	movs	r5, #0
 801be2a:	46ab      	mov	fp, r5
 801be2c:	e72f      	b.n	801bc8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801be2e:	2700      	movs	r7, #0
 801be30:	463d      	mov	r5, r7
 801be32:	4638      	mov	r0, r7
 801be34:	46bb      	mov	fp, r7
 801be36:	e754      	b.n	801bce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801be38:	4677      	mov	r7, lr
 801be3a:	4675      	mov	r5, lr
 801be3c:	4670      	mov	r0, lr
 801be3e:	46f3      	mov	fp, lr
 801be40:	e74f      	b.n	801bce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801be42:	2700      	movs	r7, #0
 801be44:	4638      	mov	r0, r7
 801be46:	e74c      	b.n	801bce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801be48:	460f      	mov	r7, r1
 801be4a:	4608      	mov	r0, r1
 801be4c:	e749      	b.n	801bce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801be50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801be50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be54:	b093      	sub	sp, #76	@ 0x4c
 801be56:	9210      	str	r2, [sp, #64]	@ 0x40
 801be58:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801be5a:	9011      	str	r0, [sp, #68]	@ 0x44
 801be5c:	910e      	str	r1, [sp, #56]	@ 0x38
 801be5e:	6850      	ldr	r0, [r2, #4]
 801be60:	9306      	str	r3, [sp, #24]
 801be62:	6812      	ldr	r2, [r2, #0]
 801be64:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801be68:	fb00 1303 	mla	r3, r0, r3, r1
 801be6c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801be70:	9307      	str	r3, [sp, #28]
 801be72:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801be74:	681b      	ldr	r3, [r3, #0]
 801be76:	9308      	str	r3, [sp, #32]
 801be78:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801be7a:	685b      	ldr	r3, [r3, #4]
 801be7c:	9309      	str	r3, [sp, #36]	@ 0x24
 801be7e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801be80:	2b00      	cmp	r3, #0
 801be82:	dc03      	bgt.n	801be8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801be84:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801be86:	2b00      	cmp	r3, #0
 801be88:	f340 83b6 	ble.w	801c5f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801be8c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801be8e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801be92:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801be96:	1e48      	subs	r0, r1, #1
 801be98:	1e55      	subs	r5, r2, #1
 801be9a:	9b06      	ldr	r3, [sp, #24]
 801be9c:	2b00      	cmp	r3, #0
 801be9e:	f340 8165 	ble.w	801c16c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801bea2:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801bea4:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801bea6:	1436      	asrs	r6, r6, #16
 801bea8:	ea4f 4323 	mov.w	r3, r3, asr #16
 801beac:	d406      	bmi.n	801bebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801beae:	4286      	cmp	r6, r0
 801beb0:	da04      	bge.n	801bebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801beb2:	2b00      	cmp	r3, #0
 801beb4:	db02      	blt.n	801bebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801beb6:	42ab      	cmp	r3, r5
 801beb8:	f2c0 8159 	blt.w	801c16e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801bebc:	3601      	adds	r6, #1
 801bebe:	f100 8146 	bmi.w	801c14e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801bec2:	42b1      	cmp	r1, r6
 801bec4:	f2c0 8143 	blt.w	801c14e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801bec8:	3301      	adds	r3, #1
 801beca:	f100 8140 	bmi.w	801c14e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801bece:	429a      	cmp	r2, r3
 801bed0:	f2c0 813d 	blt.w	801c14e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801bed4:	9b06      	ldr	r3, [sp, #24]
 801bed6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801beda:	9f07      	ldr	r7, [sp, #28]
 801bedc:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bede:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801bee0:	2b00      	cmp	r3, #0
 801bee2:	f340 8166 	ble.w	801c1b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801bee6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801bee8:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801beea:	1418      	asrs	r0, r3, #16
 801beec:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801beee:	142d      	asrs	r5, r5, #16
 801bef0:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801bef4:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801bef6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801befa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801befc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801bf00:	f100 81f0 	bmi.w	801c2e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801bf04:	f102 3eff 	add.w	lr, r2, #4294967295
 801bf08:	4575      	cmp	r5, lr
 801bf0a:	f280 81eb 	bge.w	801c2e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801bf0e:	2800      	cmp	r0, #0
 801bf10:	f2c0 81e8 	blt.w	801c2e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801bf14:	f103 3eff 	add.w	lr, r3, #4294967295
 801bf18:	4570      	cmp	r0, lr
 801bf1a:	f280 81e3 	bge.w	801c2e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801bf1e:	b212      	sxth	r2, r2
 801bf20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bf22:	fa1f fe81 	uxth.w	lr, r1
 801bf26:	fb00 5002 	mla	r0, r0, r2, r5
 801bf2a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801bf2e:	eb03 0a00 	add.w	sl, r3, r0
 801bf32:	f813 9000 	ldrb.w	r9, [r3, r0]
 801bf36:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801bf3a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801bf3e:	b29b      	uxth	r3, r3
 801bf40:	f1bc 0f00 	cmp.w	ip, #0
 801bf44:	f000 817b 	beq.w	801c23e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801bf48:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801bf4c:	eb0a 0b02 	add.w	fp, sl, r2
 801bf50:	fa1f fa8c 	uxth.w	sl, ip
 801bf54:	940a      	str	r4, [sp, #40]	@ 0x28
 801bf56:	fb0a fe0e 	mul.w	lr, sl, lr
 801bf5a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801bf5e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801bf62:	eba5 050e 	sub.w	r5, r5, lr
 801bf66:	940b      	str	r4, [sp, #44]	@ 0x2c
 801bf68:	fa1f fa8a 	uxth.w	sl, sl
 801bf6c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801bf6e:	b2ad      	uxth	r5, r5
 801bf70:	eba3 030a 	sub.w	r3, r3, sl
 801bf74:	fb08 f505 	mul.w	r5, r8, r5
 801bf78:	b29b      	uxth	r3, r3
 801bf7a:	fb09 5303 	mla	r3, r9, r3, r5
 801bf7e:	fb0a 3304 	mla	r3, sl, r4, r3
 801bf82:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bf84:	fb0e 3304 	mla	r3, lr, r4, r3
 801bf88:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bf8c:	2b00      	cmp	r3, #0
 801bf8e:	f000 80d1 	beq.w	801c134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801bf92:	9c08      	ldr	r4, [sp, #32]
 801bf94:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801bf98:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801bf9c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801bfa0:	f000 8152 	beq.w	801c248 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801bfa4:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801bfa8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801bfac:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bfb0:	fb0a fe0e 	mul.w	lr, sl, lr
 801bfb4:	fb09 f000 	mul.w	r0, r9, r0
 801bfb8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801bfbc:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801bfc0:	f100 0b20 	add.w	fp, r0, #32
 801bfc4:	44ce      	add	lr, r9
 801bfc6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801bfca:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801bfce:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bfd2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801bfd6:	ea4e 0909 	orr.w	r9, lr, r9
 801bfda:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801bfde:	8868      	ldrh	r0, [r5, #2]
 801bfe0:	d019      	beq.n	801c016 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801bfe2:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801bfe6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801bfea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bfee:	fb0a fe0e 	mul.w	lr, sl, lr
 801bff2:	fb08 f800 	mul.w	r8, r8, r0
 801bff6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801bffa:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801bffe:	f108 0b20 	add.w	fp, r8, #32
 801c002:	4486      	add	lr, r0
 801c004:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c008:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c00c:	0a00      	lsrs	r0, r0, #8
 801c00e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c012:	ea4e 0000 	orr.w	r0, lr, r0
 801c016:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c01a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c01e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c022:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c026:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801c02a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c02e:	ea4e 0909 	orr.w	r9, lr, r9
 801c032:	ea4a 0000 	orr.w	r0, sl, r0
 801c036:	f1bc 0f00 	cmp.w	ip, #0
 801c03a:	f000 8107 	beq.w	801c24c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801c03e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801c042:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c044:	3a01      	subs	r2, #1
 801c046:	2cff      	cmp	r4, #255	@ 0xff
 801c048:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801c04c:	f102 0202 	add.w	r2, r2, #2
 801c050:	eb05 0e02 	add.w	lr, r5, r2
 801c054:	5aaa      	ldrh	r2, [r5, r2]
 801c056:	d018      	beq.n	801c08a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801c058:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801c05c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c060:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c064:	fb04 fa02 	mul.w	sl, r4, r2
 801c068:	fb08 f805 	mul.w	r8, r8, r5
 801c06c:	f10a 0520 	add.w	r5, sl, #32
 801c070:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c074:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c078:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c07c:	4442      	add	r2, r8
 801c07e:	0a2d      	lsrs	r5, r5, #8
 801c080:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c084:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c088:	432a      	orrs	r2, r5
 801c08a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c08c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c090:	2cff      	cmp	r4, #255	@ 0xff
 801c092:	d01a      	beq.n	801c0ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c094:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801c098:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c09c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c0a0:	fb04 fa05 	mul.w	sl, r4, r5
 801c0a4:	fb08 f80e 	mul.w	r8, r8, lr
 801c0a8:	f10a 0e20 	add.w	lr, sl, #32
 801c0ac:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c0b0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c0b4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c0b8:	4445      	add	r5, r8
 801c0ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c0be:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c0c2:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801c0c6:	ea45 050e 	orr.w	r5, r5, lr
 801c0ca:	fb1c fe01 	smulbb	lr, ip, r1
 801c0ce:	f1cc 0810 	rsb	r8, ip, #16
 801c0d2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c0d6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c0da:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c0de:	eba8 0801 	sub.w	r8, r8, r1
 801c0e2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c0e6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c0ea:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c0ee:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801c0f2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c0f6:	ea4a 0202 	orr.w	r2, sl, r2
 801c0fa:	4341      	muls	r1, r0
 801c0fc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c100:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801c104:	fb09 1108 	mla	r1, r9, r8, r1
 801c108:	ea4b 0505 	orr.w	r5, fp, r5
 801c10c:	fb0c 1102 	mla	r1, ip, r2, r1
 801c110:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c114:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c118:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c11c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c120:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c124:	ea42 0e0e 	orr.w	lr, r2, lr
 801c128:	fa1f f28e 	uxth.w	r2, lr
 801c12c:	2bff      	cmp	r3, #255	@ 0xff
 801c12e:	f040 80a1 	bne.w	801c274 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801c132:	803a      	strh	r2, [r7, #0]
 801c134:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801c136:	3702      	adds	r7, #2
 801c138:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801c13a:	4413      	add	r3, r2
 801c13c:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801c13e:	931d      	str	r3, [sp, #116]	@ 0x74
 801c140:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c142:	441a      	add	r2, r3
 801c144:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c146:	3b01      	subs	r3, #1
 801c148:	921e      	str	r2, [sp, #120]	@ 0x78
 801c14a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c14c:	e6c7      	b.n	801bede <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c14e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801c150:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801c152:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801c154:	4433      	add	r3, r6
 801c156:	931d      	str	r3, [sp, #116]	@ 0x74
 801c158:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c15a:	441c      	add	r4, r3
 801c15c:	9b06      	ldr	r3, [sp, #24]
 801c15e:	3b01      	subs	r3, #1
 801c160:	941e      	str	r4, [sp, #120]	@ 0x78
 801c162:	9306      	str	r3, [sp, #24]
 801c164:	9b07      	ldr	r3, [sp, #28]
 801c166:	3302      	adds	r3, #2
 801c168:	9307      	str	r3, [sp, #28]
 801c16a:	e696      	b.n	801be9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c16c:	d028      	beq.n	801c1c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c16e:	9b06      	ldr	r3, [sp, #24]
 801c170:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801c172:	3b01      	subs	r3, #1
 801c174:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801c176:	fb00 5003 	mla	r0, r0, r3, r5
 801c17a:	1400      	asrs	r0, r0, #16
 801c17c:	f53f aeaa 	bmi.w	801bed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c180:	3901      	subs	r1, #1
 801c182:	4288      	cmp	r0, r1
 801c184:	f6bf aea6 	bge.w	801bed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c188:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801c18a:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801c18c:	fb01 0303 	mla	r3, r1, r3, r0
 801c190:	141b      	asrs	r3, r3, #16
 801c192:	f53f ae9f 	bmi.w	801bed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c196:	3a01      	subs	r2, #1
 801c198:	4293      	cmp	r3, r2
 801c19a:	f6bf ae9b 	bge.w	801bed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c19e:	9b06      	ldr	r3, [sp, #24]
 801c1a0:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801c1a4:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801c1a8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c1aa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c1ac:	2b00      	cmp	r3, #0
 801c1ae:	f300 80b6 	bgt.w	801c31e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801c1b2:	9b06      	ldr	r3, [sp, #24]
 801c1b4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c1b8:	9b07      	ldr	r3, [sp, #28]
 801c1ba:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c1be:	9307      	str	r3, [sp, #28]
 801c1c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c1c2:	2b00      	cmp	r3, #0
 801c1c4:	f340 8218 	ble.w	801c5f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c1c8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c1cc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c1ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c1d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c1d6:	eef0 6a62 	vmov.f32	s13, s5
 801c1da:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c1de:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c1e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1e6:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801c1ea:	eef0 6a43 	vmov.f32	s13, s6
 801c1ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1f2:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801c1f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c1fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c1fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c202:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c206:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c20a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c20e:	ee12 2a90 	vmov	r2, s5
 801c212:	eef0 2a47 	vmov.f32	s5, s14
 801c216:	fb92 f3f3 	sdiv	r3, r2, r3
 801c21a:	ee13 2a10 	vmov	r2, s6
 801c21e:	931f      	str	r3, [sp, #124]	@ 0x7c
 801c220:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c222:	eeb0 3a67 	vmov.f32	s6, s15
 801c226:	fb92 f3f3 	sdiv	r3, r2, r3
 801c22a:	9320      	str	r3, [sp, #128]	@ 0x80
 801c22c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c22e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c230:	3b01      	subs	r3, #1
 801c232:	930e      	str	r3, [sp, #56]	@ 0x38
 801c234:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c236:	bf08      	it	eq
 801c238:	4613      	moveq	r3, r2
 801c23a:	9306      	str	r3, [sp, #24]
 801c23c:	e61f      	b.n	801be7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801c23e:	fb08 f505 	mul.w	r5, r8, r5
 801c242:	fb09 5303 	mla	r3, r9, r3, r5
 801c246:	e69f      	b.n	801bf88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801c248:	4681      	mov	r9, r0
 801c24a:	e6c6      	b.n	801bfda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801c24c:	f1c1 0210 	rsb	r2, r1, #16
 801c250:	4341      	muls	r1, r0
 801c252:	fb09 1902 	mla	r9, r9, r2, r1
 801c256:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c25a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c25e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c262:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c266:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c26a:	ea42 0909 	orr.w	r9, r2, r9
 801c26e:	fa1f f289 	uxth.w	r2, r9
 801c272:	e75b      	b.n	801c12c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 801c274:	f8b7 c000 	ldrh.w	ip, [r7]
 801c278:	43db      	mvns	r3, r3
 801c27a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801c27e:	fa5f fe83 	uxtb.w	lr, r3
 801c282:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c286:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c28a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801c28e:	fb00 f00e 	mul.w	r0, r0, lr
 801c292:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c296:	b2db      	uxtb	r3, r3
 801c298:	1c41      	adds	r1, r0, #1
 801c29a:	fb05 f50e 	mul.w	r5, r5, lr
 801c29e:	fb03 f30e 	mul.w	r3, r3, lr
 801c2a2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c2a6:	1211      	asrs	r1, r2, #8
 801c2a8:	f021 0107 	bic.w	r1, r1, #7
 801c2ac:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801c2b0:	48d3      	ldr	r0, [pc, #844]	@ (801c600 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801c2b2:	b2c9      	uxtb	r1, r1
 801c2b4:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801c2b8:	1c69      	adds	r1, r5, #1
 801c2ba:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801c2be:	10d1      	asrs	r1, r2, #3
 801c2c0:	00d2      	lsls	r2, r2, #3
 801c2c2:	f021 0103 	bic.w	r1, r1, #3
 801c2c6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801c2ca:	00c9      	lsls	r1, r1, #3
 801c2cc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c2d0:	4301      	orrs	r1, r0
 801c2d2:	1c58      	adds	r0, r3, #1
 801c2d4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801c2d8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c2dc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c2e0:	430a      	orrs	r2, r1
 801c2e2:	e726      	b.n	801c132 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801c2e4:	f115 0e01 	adds.w	lr, r5, #1
 801c2e8:	f53f af24 	bmi.w	801c134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c2ec:	4572      	cmp	r2, lr
 801c2ee:	f6ff af21 	blt.w	801c134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c2f2:	f110 0e01 	adds.w	lr, r0, #1
 801c2f6:	f53f af1d 	bmi.w	801c134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c2fa:	4573      	cmp	r3, lr
 801c2fc:	f6ff af1a 	blt.w	801c134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c300:	b21b      	sxth	r3, r3
 801c302:	b212      	sxth	r2, r2
 801c304:	9301      	str	r3, [sp, #4]
 801c306:	9200      	str	r2, [sp, #0]
 801c308:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801c30c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801c310:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801c314:	4639      	mov	r1, r7
 801c316:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801c318:	f7ff fc22 	bl	801bb60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801c31c:	e70a      	b.n	801c134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c31e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801c320:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c324:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c326:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c32a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c32c:	fa1f fc82 	uxth.w	ip, r2
 801c330:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c334:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c336:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c33a:	141f      	asrs	r7, r3, #16
 801c33c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801c33e:	141b      	asrs	r3, r3, #16
 801c340:	fb01 3707 	mla	r7, r1, r7, r3
 801c344:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c346:	eb03 0a07 	add.w	sl, r3, r7
 801c34a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c34e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801c352:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c356:	b29b      	uxth	r3, r3
 801c358:	2d00      	cmp	r5, #0
 801c35a:	f000 80fe 	beq.w	801c55a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801c35e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c362:	eb0a 0b01 	add.w	fp, sl, r1
 801c366:	fa1f fa85 	uxth.w	sl, r5
 801c36a:	940c      	str	r4, [sp, #48]	@ 0x30
 801c36c:	fb0a fc0c 	mul.w	ip, sl, ip
 801c370:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c374:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c378:	eba0 000c 	sub.w	r0, r0, ip
 801c37c:	940d      	str	r4, [sp, #52]	@ 0x34
 801c37e:	fa1f fa8a 	uxth.w	sl, sl
 801c382:	b280      	uxth	r0, r0
 801c384:	eba3 030a 	sub.w	r3, r3, sl
 801c388:	fb08 f000 	mul.w	r0, r8, r0
 801c38c:	b29b      	uxth	r3, r3
 801c38e:	fb09 0303 	mla	r3, r9, r3, r0
 801c392:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801c394:	fb0a 3300 	mla	r3, sl, r0, r3
 801c398:	fb0c 3304 	mla	r3, ip, r4, r3
 801c39c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c3a0:	2b00      	cmp	r3, #0
 801c3a2:	f000 80cc 	beq.w	801c53e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801c3a6:	9808      	ldr	r0, [sp, #32]
 801c3a8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c3ac:	9c08      	ldr	r4, [sp, #32]
 801c3ae:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c3b2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c3b6:	f000 80d5 	beq.w	801c564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801c3ba:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801c3be:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c3c2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c3c6:	fb0a fc0c 	mul.w	ip, sl, ip
 801c3ca:	fb09 f707 	mul.w	r7, r9, r7
 801c3ce:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c3d2:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801c3d6:	f107 0b20 	add.w	fp, r7, #32
 801c3da:	44cc      	add	ip, r9
 801c3dc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c3e0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c3e4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c3e8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c3ec:	ea4c 0909 	orr.w	r9, ip, r9
 801c3f0:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801c3f4:	8847      	ldrh	r7, [r0, #2]
 801c3f6:	d019      	beq.n	801c42c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 801c3f8:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801c3fc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c400:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c404:	fb0a fc0c 	mul.w	ip, sl, ip
 801c408:	fb08 f807 	mul.w	r8, r8, r7
 801c40c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c410:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801c414:	f108 0b20 	add.w	fp, r8, #32
 801c418:	44bc      	add	ip, r7
 801c41a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c41e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c422:	0a3f      	lsrs	r7, r7, #8
 801c424:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c428:	ea4c 0707 	orr.w	r7, ip, r7
 801c42c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c430:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c434:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c438:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801c43c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801c440:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c444:	ea4c 0909 	orr.w	r9, ip, r9
 801c448:	ea4a 0707 	orr.w	r7, sl, r7
 801c44c:	2d00      	cmp	r5, #0
 801c44e:	f000 808b 	beq.w	801c568 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801c452:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801c456:	3901      	subs	r1, #1
 801c458:	0049      	lsls	r1, r1, #1
 801c45a:	3102      	adds	r1, #2
 801c45c:	eb00 0c01 	add.w	ip, r0, r1
 801c460:	5a41      	ldrh	r1, [r0, r1]
 801c462:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801c464:	28ff      	cmp	r0, #255	@ 0xff
 801c466:	d019      	beq.n	801c49c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 801c468:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801c46c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c46e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c472:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c476:	fb04 fa01 	mul.w	sl, r4, r1
 801c47a:	fb08 f800 	mul.w	r8, r8, r0
 801c47e:	f10a 0020 	add.w	r0, sl, #32
 801c482:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c486:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c48a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c48e:	4441      	add	r1, r8
 801c490:	0a00      	lsrs	r0, r0, #8
 801c492:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c496:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c49a:	4301      	orrs	r1, r0
 801c49c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c49e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c4a2:	2cff      	cmp	r4, #255	@ 0xff
 801c4a4:	d01a      	beq.n	801c4dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 801c4a6:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801c4aa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c4ae:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c4b2:	fb04 fa00 	mul.w	sl, r4, r0
 801c4b6:	fb08 f80c 	mul.w	r8, r8, ip
 801c4ba:	f10a 0c20 	add.w	ip, sl, #32
 801c4be:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c4c2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c4c6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c4ca:	4440      	add	r0, r8
 801c4cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c4d0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c4d4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801c4d8:	ea40 000c 	orr.w	r0, r0, ip
 801c4dc:	fb15 fc02 	smulbb	ip, r5, r2
 801c4e0:	f1c5 0810 	rsb	r8, r5, #16
 801c4e4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c4e8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801c4ec:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c4f0:	eba8 0802 	sub.w	r8, r8, r2
 801c4f4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c4f8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c4fc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c500:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c504:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c508:	ea4a 0101 	orr.w	r1, sl, r1
 801c50c:	437a      	muls	r2, r7
 801c50e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c512:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801c516:	fb09 2208 	mla	r2, r9, r8, r2
 801c51a:	ea4b 0000 	orr.w	r0, fp, r0
 801c51e:	fb05 2201 	mla	r2, r5, r1, r2
 801c522:	fb0c 2200 	mla	r2, ip, r0, r2
 801c526:	0d57      	lsrs	r7, r2, #21
 801c528:	0952      	lsrs	r2, r2, #5
 801c52a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c52e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c532:	433a      	orrs	r2, r7
 801c534:	2bff      	cmp	r3, #255	@ 0xff
 801c536:	b292      	uxth	r2, r2
 801c538:	d127      	bne.n	801c58a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 801c53a:	f8ae 2000 	strh.w	r2, [lr]
 801c53e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801c540:	f10e 0e02 	add.w	lr, lr, #2
 801c544:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801c546:	4413      	add	r3, r2
 801c548:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801c54a:	931d      	str	r3, [sp, #116]	@ 0x74
 801c54c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c54e:	441a      	add	r2, r3
 801c550:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c552:	3b01      	subs	r3, #1
 801c554:	921e      	str	r2, [sp, #120]	@ 0x78
 801c556:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c558:	e627      	b.n	801c1aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c55a:	fb08 f000 	mul.w	r0, r8, r0
 801c55e:	fb09 0303 	mla	r3, r9, r3, r0
 801c562:	e71b      	b.n	801c39c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 801c564:	46b9      	mov	r9, r7
 801c566:	e743      	b.n	801c3f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 801c568:	f1c2 0110 	rsb	r1, r2, #16
 801c56c:	437a      	muls	r2, r7
 801c56e:	fb09 2901 	mla	r9, r9, r1, r2
 801c572:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c576:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c57a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c57e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c582:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c586:	4302      	orrs	r2, r0
 801c588:	e7d4      	b.n	801c534 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 801c58a:	f8be 7000 	ldrh.w	r7, [lr]
 801c58e:	43db      	mvns	r3, r3
 801c590:	4c1b      	ldr	r4, [pc, #108]	@ (801c600 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801c592:	1238      	asrs	r0, r7, #8
 801c594:	fa5f fc83 	uxtb.w	ip, r3
 801c598:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c59c:	10fd      	asrs	r5, r7, #3
 801c59e:	00fb      	lsls	r3, r7, #3
 801c5a0:	fb00 f00c 	mul.w	r0, r0, ip
 801c5a4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c5a8:	b2db      	uxtb	r3, r3
 801c5aa:	fb05 f10c 	mul.w	r1, r5, ip
 801c5ae:	1c45      	adds	r5, r0, #1
 801c5b0:	fb03 f30c 	mul.w	r3, r3, ip
 801c5b4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c5b8:	1215      	asrs	r5, r2, #8
 801c5ba:	f025 0507 	bic.w	r5, r5, #7
 801c5be:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c5c2:	1c4d      	adds	r5, r1, #1
 801c5c4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801c5c8:	10d1      	asrs	r1, r2, #3
 801c5ca:	b2c0      	uxtb	r0, r0
 801c5cc:	f021 0103 	bic.w	r1, r1, #3
 801c5d0:	00d2      	lsls	r2, r2, #3
 801c5d2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801c5d6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801c5da:	00c9      	lsls	r1, r1, #3
 801c5dc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c5e0:	4308      	orrs	r0, r1
 801c5e2:	1c59      	adds	r1, r3, #1
 801c5e4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c5e8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c5ec:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801c5f0:	4318      	orrs	r0, r3
 801c5f2:	f8ae 0000 	strh.w	r0, [lr]
 801c5f6:	e7a2      	b.n	801c53e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801c5f8:	b013      	add	sp, #76	@ 0x4c
 801c5fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c5fe:	bf00      	nop
 801c600:	fffff800 	.word	0xfffff800

0801c604 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801c604:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c608:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801c60c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801c610:	fb05 4c03 	mla	ip, r5, r3, r4
 801c614:	2d00      	cmp	r5, #0
 801c616:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801c61a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801c61e:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801c622:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801c626:	8808      	ldrh	r0, [r1, #0]
 801c628:	f2c0 80a7 	blt.w	801c77a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801c62c:	45aa      	cmp	sl, r5
 801c62e:	f340 80a4 	ble.w	801c77a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801c632:	2c00      	cmp	r4, #0
 801c634:	f2c0 809f 	blt.w	801c776 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801c638:	42a3      	cmp	r3, r4
 801c63a:	f340 809c 	ble.w	801c776 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801c63e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801c642:	1c62      	adds	r2, r4, #1
 801c644:	f100 809c 	bmi.w	801c780 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c648:	4293      	cmp	r3, r2
 801c64a:	f340 8099 	ble.w	801c780 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c64e:	f1b9 0f00 	cmp.w	r9, #0
 801c652:	f000 8095 	beq.w	801c780 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c656:	f8be c002 	ldrh.w	ip, [lr, #2]
 801c65a:	3501      	adds	r5, #1
 801c65c:	f100 8094 	bmi.w	801c788 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c660:	45aa      	cmp	sl, r5
 801c662:	f340 8091 	ble.w	801c788 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c666:	2f00      	cmp	r7, #0
 801c668:	f000 808e 	beq.w	801c788 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c66c:	2c00      	cmp	r4, #0
 801c66e:	f2c0 8089 	blt.w	801c784 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801c672:	42a3      	cmp	r3, r4
 801c674:	f340 8086 	ble.w	801c784 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801c678:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801c67c:	3401      	adds	r4, #1
 801c67e:	f100 8086 	bmi.w	801c78e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c682:	42a3      	cmp	r3, r4
 801c684:	f340 8083 	ble.w	801c78e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c688:	f1b9 0f00 	cmp.w	r9, #0
 801c68c:	d07f      	beq.n	801c78e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c68e:	3301      	adds	r3, #1
 801c690:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801c694:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801c698:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801c69c:	fb19 fe07 	smulbb	lr, r9, r7
 801c6a0:	f1c7 0210 	rsb	r2, r7, #16
 801c6a4:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c6a8:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801c6ac:	eba2 0209 	sub.w	r2, r2, r9
 801c6b0:	ea44 0808 	orr.w	r8, r4, r8
 801c6b4:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801c6b8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801c6bc:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801c6c0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c6c4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801c6c8:	ea44 0c0c 	orr.w	ip, r4, ip
 801c6cc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801c6d0:	fb04 f40c 	mul.w	r4, r4, ip
 801c6d4:	fb02 4808 	mla	r8, r2, r8, r4
 801c6d8:	041a      	lsls	r2, r3, #16
 801c6da:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c6de:	b2b4      	uxth	r4, r6
 801c6e0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801c6e4:	43f6      	mvns	r6, r6
 801c6e6:	4313      	orrs	r3, r2
 801c6e8:	042a      	lsls	r2, r5, #16
 801c6ea:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801c6ee:	b2f6      	uxtb	r6, r6
 801c6f0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801c6f4:	fb0e 8303 	mla	r3, lr, r3, r8
 801c6f8:	432a      	orrs	r2, r5
 801c6fa:	fb07 3202 	mla	r2, r7, r2, r3
 801c6fe:	10c7      	asrs	r7, r0, #3
 801c700:	0d53      	lsrs	r3, r2, #21
 801c702:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c706:	0952      	lsrs	r2, r2, #5
 801c708:	fb17 f706 	smulbb	r7, r7, r6
 801c70c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c710:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c714:	431a      	orrs	r2, r3
 801c716:	b293      	uxth	r3, r2
 801c718:	1202      	asrs	r2, r0, #8
 801c71a:	121d      	asrs	r5, r3, #8
 801c71c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c720:	00c0      	lsls	r0, r0, #3
 801c722:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c726:	fb12 f206 	smulbb	r2, r2, r6
 801c72a:	b2c0      	uxtb	r0, r0
 801c72c:	fb05 2504 	mla	r5, r5, r4, r2
 801c730:	10da      	asrs	r2, r3, #3
 801c732:	fb10 f006 	smulbb	r0, r0, r6
 801c736:	00db      	lsls	r3, r3, #3
 801c738:	b2ad      	uxth	r5, r5
 801c73a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c73e:	b2db      	uxtb	r3, r3
 801c740:	fb02 7204 	mla	r2, r2, r4, r7
 801c744:	fb03 0004 	mla	r0, r3, r4, r0
 801c748:	1c6b      	adds	r3, r5, #1
 801c74a:	b292      	uxth	r2, r2
 801c74c:	b280      	uxth	r0, r0
 801c74e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c752:	1c43      	adds	r3, r0, #1
 801c754:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c758:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c75c:	1c50      	adds	r0, r2, #1
 801c75e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801c762:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c766:	0952      	lsrs	r2, r2, #5
 801c768:	432b      	orrs	r3, r5
 801c76a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c76e:	4313      	orrs	r3, r2
 801c770:	800b      	strh	r3, [r1, #0]
 801c772:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c776:	4680      	mov	r8, r0
 801c778:	e763      	b.n	801c642 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801c77a:	4684      	mov	ip, r0
 801c77c:	4680      	mov	r8, r0
 801c77e:	e76c      	b.n	801c65a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801c780:	4684      	mov	ip, r0
 801c782:	e76a      	b.n	801c65a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801c784:	4605      	mov	r5, r0
 801c786:	e779      	b.n	801c67c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801c788:	4603      	mov	r3, r0
 801c78a:	4605      	mov	r5, r0
 801c78c:	e782      	b.n	801c694 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801c78e:	4603      	mov	r3, r0
 801c790:	e780      	b.n	801c694 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801c792 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c792:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c796:	b093      	sub	sp, #76	@ 0x4c
 801c798:	461d      	mov	r5, r3
 801c79a:	9210      	str	r2, [sp, #64]	@ 0x40
 801c79c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c79e:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801c7a2:	910a      	str	r1, [sp, #40]	@ 0x28
 801c7a4:	920b      	str	r2, [sp, #44]	@ 0x2c
 801c7a6:	6859      	ldr	r1, [r3, #4]
 801c7a8:	681b      	ldr	r3, [r3, #0]
 801c7aa:	9011      	str	r0, [sp, #68]	@ 0x44
 801c7ac:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801c7b0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801c7b4:	fb01 2707 	mla	r7, r1, r7, r2
 801c7b8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801c7bc:	9307      	str	r3, [sp, #28]
 801c7be:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c7c0:	681b      	ldr	r3, [r3, #0]
 801c7c2:	9309      	str	r3, [sp, #36]	@ 0x24
 801c7c4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c7c6:	43db      	mvns	r3, r3
 801c7c8:	b2db      	uxtb	r3, r3
 801c7ca:	9308      	str	r3, [sp, #32]
 801c7cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c7ce:	2b00      	cmp	r3, #0
 801c7d0:	dc03      	bgt.n	801c7da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c7d2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c7d4:	2b00      	cmp	r3, #0
 801c7d6:	f340 8205 	ble.w	801cbe4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c7da:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c7dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c7e0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c7e4:	1e48      	subs	r0, r1, #1
 801c7e6:	f102 3cff 	add.w	ip, r2, #4294967295
 801c7ea:	2d00      	cmp	r5, #0
 801c7ec:	f340 80da 	ble.w	801c9a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801c7f0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c7f4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c7f8:	d406      	bmi.n	801c808 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c7fa:	4586      	cmp	lr, r0
 801c7fc:	da04      	bge.n	801c808 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c7fe:	2b00      	cmp	r3, #0
 801c800:	db02      	blt.n	801c808 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c802:	4563      	cmp	r3, ip
 801c804:	f2c0 80cf 	blt.w	801c9a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c808:	f11e 0e01 	adds.w	lr, lr, #1
 801c80c:	f100 80c1 	bmi.w	801c992 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c810:	4571      	cmp	r1, lr
 801c812:	f2c0 80be 	blt.w	801c992 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c816:	3301      	adds	r3, #1
 801c818:	f100 80bb 	bmi.w	801c992 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c81c:	429a      	cmp	r2, r3
 801c81e:	f2c0 80b8 	blt.w	801c992 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c822:	46a9      	mov	r9, r5
 801c824:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801c828:	f1b9 0f00 	cmp.w	r9, #0
 801c82c:	f340 80d8 	ble.w	801c9e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801c830:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c832:	1421      	asrs	r1, r4, #16
 801c834:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c838:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c83c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c840:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801c844:	f100 8112 	bmi.w	801ca6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801c848:	f10e 3aff 	add.w	sl, lr, #4294967295
 801c84c:	4551      	cmp	r1, sl
 801c84e:	f280 810d 	bge.w	801ca6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801c852:	2800      	cmp	r0, #0
 801c854:	f2c0 810a 	blt.w	801ca6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801c858:	f103 3aff 	add.w	sl, r3, #4294967295
 801c85c:	4550      	cmp	r0, sl
 801c85e:	f280 8105 	bge.w	801ca6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801c862:	fa0f f38e 	sxth.w	r3, lr
 801c866:	fb00 1103 	mla	r1, r0, r3, r1
 801c86a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801c86c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801c870:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801c874:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801c878:	f1bc 0f00 	cmp.w	ip, #0
 801c87c:	d007      	beq.n	801c88e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801c87e:	005b      	lsls	r3, r3, #1
 801c880:	eb0a 0003 	add.w	r0, sl, r3
 801c884:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801c888:	930c      	str	r3, [sp, #48]	@ 0x30
 801c88a:	8843      	ldrh	r3, [r0, #2]
 801c88c:	930d      	str	r3, [sp, #52]	@ 0x34
 801c88e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801c892:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c896:	fb12 f30c 	smulbb	r3, r2, ip
 801c89a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c89e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801c8a2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801c8a6:	10db      	asrs	r3, r3, #3
 801c8a8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c8ac:	ea40 000e 	orr.w	r0, r0, lr
 801c8b0:	f1cc 0e10 	rsb	lr, ip, #16
 801c8b4:	ea4a 0101 	orr.w	r1, sl, r1
 801c8b8:	9f08      	ldr	r7, [sp, #32]
 801c8ba:	ebae 0e02 	sub.w	lr, lr, r2
 801c8be:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801c8c2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801c8c6:	4351      	muls	r1, r2
 801c8c8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c8ca:	fb0e 1e00 	mla	lr, lr, r0, r1
 801c8ce:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801c8d0:	0410      	lsls	r0, r2, #16
 801c8d2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c8d6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801c8da:	4310      	orrs	r0, r2
 801c8dc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c8de:	0412      	lsls	r2, r2, #16
 801c8e0:	fb03 e000 	mla	r0, r3, r0, lr
 801c8e4:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801c8e8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801c8ec:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801c8f0:	ea42 020e 	orr.w	r2, r2, lr
 801c8f4:	fb03 0302 	mla	r3, r3, r2, r0
 801c8f8:	f8b8 0000 	ldrh.w	r0, [r8]
 801c8fc:	0d5a      	lsrs	r2, r3, #21
 801c8fe:	095b      	lsrs	r3, r3, #5
 801c900:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c904:	1201      	asrs	r1, r0, #8
 801c906:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c90a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801c90e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801c912:	00c0      	lsls	r0, r0, #3
 801c914:	4313      	orrs	r3, r2
 801c916:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801c91a:	fb11 f107 	smulbb	r1, r1, r7
 801c91e:	b2c0      	uxtb	r0, r0
 801c920:	b29b      	uxth	r3, r3
 801c922:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801c926:	fb10 f007 	smulbb	r0, r0, r7
 801c92a:	fb1e fe07 	smulbb	lr, lr, r7
 801c92e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c932:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c936:	fb0c 1c02 	mla	ip, ip, r2, r1
 801c93a:	10d9      	asrs	r1, r3, #3
 801c93c:	00db      	lsls	r3, r3, #3
 801c93e:	fa1f fc8c 	uxth.w	ip, ip
 801c942:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c946:	b2db      	uxtb	r3, r3
 801c948:	fb01 e102 	mla	r1, r1, r2, lr
 801c94c:	fb03 0302 	mla	r3, r3, r2, r0
 801c950:	b289      	uxth	r1, r1
 801c952:	b29a      	uxth	r2, r3
 801c954:	f10c 0301 	add.w	r3, ip, #1
 801c958:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801c95c:	1c53      	adds	r3, r2, #1
 801c95e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c962:	1c4a      	adds	r2, r1, #1
 801c964:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801c968:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c96c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c970:	0949      	lsrs	r1, r1, #5
 801c972:	ea43 030c 	orr.w	r3, r3, ip
 801c976:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c97a:	430b      	orrs	r3, r1
 801c97c:	f8a8 3000 	strh.w	r3, [r8]
 801c980:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c982:	f108 0802 	add.w	r8, r8, #2
 801c986:	f109 39ff 	add.w	r9, r9, #4294967295
 801c98a:	441c      	add	r4, r3
 801c98c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c98e:	441e      	add	r6, r3
 801c990:	e74a      	b.n	801c828 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c992:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c994:	3d01      	subs	r5, #1
 801c996:	441c      	add	r4, r3
 801c998:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c99a:	441e      	add	r6, r3
 801c99c:	9b07      	ldr	r3, [sp, #28]
 801c99e:	3302      	adds	r3, #2
 801c9a0:	9307      	str	r3, [sp, #28]
 801c9a2:	e722      	b.n	801c7ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c9a4:	d022      	beq.n	801c9ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801c9a6:	1e6b      	subs	r3, r5, #1
 801c9a8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801c9aa:	fb00 4003 	mla	r0, r0, r3, r4
 801c9ae:	1400      	asrs	r0, r0, #16
 801c9b0:	f53f af37 	bmi.w	801c822 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c9b4:	3901      	subs	r1, #1
 801c9b6:	4288      	cmp	r0, r1
 801c9b8:	f6bf af33 	bge.w	801c822 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c9bc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801c9be:	fb01 6303 	mla	r3, r1, r3, r6
 801c9c2:	141b      	asrs	r3, r3, #16
 801c9c4:	f53f af2d 	bmi.w	801c822 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c9c8:	3a01      	subs	r2, #1
 801c9ca:	4293      	cmp	r3, r2
 801c9cc:	f6bf af29 	bge.w	801c822 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c9d0:	46a8      	mov	r8, r5
 801c9d2:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801c9d6:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801c9da:	f1b8 0f00 	cmp.w	r8, #0
 801c9de:	dc60      	bgt.n	801caa2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801c9e0:	9b07      	ldr	r3, [sp, #28]
 801c9e2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c9e6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801c9ea:	9307      	str	r3, [sp, #28]
 801c9ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c9ee:	2b00      	cmp	r3, #0
 801c9f0:	f340 80f8 	ble.w	801cbe4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c9f4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c9f8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c9fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c9fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ca02:	eef0 6a62 	vmov.f32	s13, s5
 801ca06:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ca0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ca0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ca12:	ee16 4a90 	vmov	r4, s13
 801ca16:	eef0 6a43 	vmov.f32	s13, s6
 801ca1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ca1e:	ee16 6a90 	vmov	r6, s13
 801ca22:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ca26:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ca2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ca2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ca32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ca36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ca3a:	ee12 2a90 	vmov	r2, s5
 801ca3e:	eef0 2a47 	vmov.f32	s5, s14
 801ca42:	fb92 f3f3 	sdiv	r3, r2, r3
 801ca46:	ee13 2a10 	vmov	r2, s6
 801ca4a:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ca4c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ca4e:	eeb0 3a67 	vmov.f32	s6, s15
 801ca52:	fb92 f3f3 	sdiv	r3, r2, r3
 801ca56:	9320      	str	r3, [sp, #128]	@ 0x80
 801ca58:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ca5a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801ca5c:	3b01      	subs	r3, #1
 801ca5e:	930a      	str	r3, [sp, #40]	@ 0x28
 801ca60:	bf08      	it	eq
 801ca62:	4615      	moveq	r5, r2
 801ca64:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ca66:	bf18      	it	ne
 801ca68:	461d      	movne	r5, r3
 801ca6a:	e6af      	b.n	801c7cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ca6c:	f111 0a01 	adds.w	sl, r1, #1
 801ca70:	d486      	bmi.n	801c980 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ca72:	45d6      	cmp	lr, sl
 801ca74:	db84      	blt.n	801c980 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ca76:	f110 0a01 	adds.w	sl, r0, #1
 801ca7a:	d481      	bmi.n	801c980 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ca7c:	4553      	cmp	r3, sl
 801ca7e:	f6ff af7f 	blt.w	801c980 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ca82:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801ca84:	b21b      	sxth	r3, r3
 801ca86:	9101      	str	r1, [sp, #4]
 801ca88:	4641      	mov	r1, r8
 801ca8a:	9300      	str	r3, [sp, #0]
 801ca8c:	fa0f f38e 	sxth.w	r3, lr
 801ca90:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801ca94:	e9cd c704 	strd	ip, r7, [sp, #16]
 801ca98:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ca9a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801ca9c:	f7ff fdb2 	bl	801c604 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801caa0:	e76e      	b.n	801c980 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801caa2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801caa4:	1430      	asrs	r0, r6, #16
 801caa6:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801caa8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801caac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cab0:	1423      	asrs	r3, r4, #16
 801cab2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cab6:	fb01 3000 	mla	r0, r1, r0, r3
 801caba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cabc:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801cac0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801cac4:	8858      	ldrh	r0, [r3, #2]
 801cac6:	f1be 0f00 	cmp.w	lr, #0
 801caca:	d00b      	beq.n	801cae4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801cacc:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801cad0:	3901      	subs	r1, #1
 801cad2:	0049      	lsls	r1, r1, #1
 801cad4:	3102      	adds	r1, #2
 801cad6:	eb03 0b01 	add.w	fp, r3, r1
 801cada:	5a5b      	ldrh	r3, [r3, r1]
 801cadc:	930e      	str	r3, [sp, #56]	@ 0x38
 801cade:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801cae2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cae4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801cae8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801caec:	fb12 f30e 	smulbb	r3, r2, lr
 801caf0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801caf4:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801caf8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cafc:	10db      	asrs	r3, r3, #3
 801cafe:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801cb02:	ea41 010c 	orr.w	r1, r1, ip
 801cb06:	f1ce 0c10 	rsb	ip, lr, #16
 801cb0a:	ea4b 0000 	orr.w	r0, fp, r0
 801cb0e:	9f08      	ldr	r7, [sp, #32]
 801cb10:	ebac 0c02 	sub.w	ip, ip, r2
 801cb14:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801cb18:	f108 38ff 	add.w	r8, r8, #4294967295
 801cb1c:	4350      	muls	r0, r2
 801cb1e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801cb22:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801cb24:	fb0c 0c01 	mla	ip, ip, r1, r0
 801cb28:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801cb2a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801cb2e:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801cb32:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801cb34:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cb38:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801cb3c:	0412      	lsls	r2, r2, #16
 801cb3e:	ea4b 0101 	orr.w	r1, fp, r1
 801cb42:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801cb46:	fb03 c101 	mla	r1, r3, r1, ip
 801cb4a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801cb4e:	4302      	orrs	r2, r0
 801cb50:	fb03 1202 	mla	r2, r3, r2, r1
 801cb54:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801cb58:	0952      	lsrs	r2, r2, #5
 801cb5a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801cb5e:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801cb62:	f8b9 2000 	ldrh.w	r2, [r9]
 801cb66:	ea4b 0303 	orr.w	r3, fp, r3
 801cb6a:	1211      	asrs	r1, r2, #8
 801cb6c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801cb70:	b29b      	uxth	r3, r3
 801cb72:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801cb76:	00d2      	lsls	r2, r2, #3
 801cb78:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801cb7c:	fb11 f107 	smulbb	r1, r1, r7
 801cb80:	1218      	asrs	r0, r3, #8
 801cb82:	fb1c fc07 	smulbb	ip, ip, r7
 801cb86:	b2d2      	uxtb	r2, r2
 801cb88:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801cb8c:	fb12 f207 	smulbb	r2, r2, r7
 801cb90:	fb00 100a 	mla	r0, r0, sl, r1
 801cb94:	10d9      	asrs	r1, r3, #3
 801cb96:	00db      	lsls	r3, r3, #3
 801cb98:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801cb9c:	b280      	uxth	r0, r0
 801cb9e:	b2db      	uxtb	r3, r3
 801cba0:	fb01 c10a 	mla	r1, r1, sl, ip
 801cba4:	fb03 230a 	mla	r3, r3, sl, r2
 801cba8:	1c42      	adds	r2, r0, #1
 801cbaa:	b289      	uxth	r1, r1
 801cbac:	b29b      	uxth	r3, r3
 801cbae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cbb2:	f101 0c01 	add.w	ip, r1, #1
 801cbb6:	1c5a      	adds	r2, r3, #1
 801cbb8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801cbbc:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801cbc0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cbc4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801cbc6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801cbca:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cbce:	441c      	add	r4, r3
 801cbd0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801cbd4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cbd6:	4310      	orrs	r0, r2
 801cbd8:	441e      	add	r6, r3
 801cbda:	ea40 000c 	orr.w	r0, r0, ip
 801cbde:	f829 0b02 	strh.w	r0, [r9], #2
 801cbe2:	e6fa      	b.n	801c9da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801cbe4:	b013      	add	sp, #76	@ 0x4c
 801cbe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cbea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801cbea:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801cbee:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801cbf2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801cbf6:	fb0e 4703 	mla	r7, lr, r3, r4
 801cbfa:	f1be 0f00 	cmp.w	lr, #0
 801cbfe:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801cc02:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801cc06:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801cc0a:	8808      	ldrh	r0, [r1, #0]
 801cc0c:	db60      	blt.n	801ccd0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801cc0e:	45f1      	cmp	r9, lr
 801cc10:	dd5e      	ble.n	801ccd0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801cc12:	2c00      	cmp	r4, #0
 801cc14:	db5a      	blt.n	801cccc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801cc16:	42a3      	cmp	r3, r4
 801cc18:	dd58      	ble.n	801cccc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801cc1a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801cc1e:	1c62      	adds	r2, r4, #1
 801cc20:	d459      	bmi.n	801ccd6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801cc22:	4293      	cmp	r3, r2
 801cc24:	dd57      	ble.n	801ccd6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801cc26:	2d00      	cmp	r5, #0
 801cc28:	d055      	beq.n	801ccd6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801cc2a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801cc2e:	f11e 0e01 	adds.w	lr, lr, #1
 801cc32:	d454      	bmi.n	801ccde <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801cc34:	45f1      	cmp	r9, lr
 801cc36:	dd52      	ble.n	801ccde <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801cc38:	2e00      	cmp	r6, #0
 801cc3a:	d050      	beq.n	801ccde <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801cc3c:	2c00      	cmp	r4, #0
 801cc3e:	db4c      	blt.n	801ccda <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801cc40:	42a3      	cmp	r3, r4
 801cc42:	dd4a      	ble.n	801ccda <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801cc44:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801cc48:	3401      	adds	r4, #1
 801cc4a:	d405      	bmi.n	801cc58 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801cc4c:	42a3      	cmp	r3, r4
 801cc4e:	dd03      	ble.n	801cc58 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801cc50:	b115      	cbz	r5, 801cc58 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801cc52:	3301      	adds	r3, #1
 801cc54:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801cc58:	fb15 f406 	smulbb	r4, r5, r6
 801cc5c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801cc60:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801cc64:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801cc68:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cc6c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801cc70:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801cc74:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801cc78:	ea43 0c0c 	orr.w	ip, r3, ip
 801cc7c:	f1c6 0310 	rsb	r3, r6, #16
 801cc80:	ea4e 0707 	orr.w	r7, lr, r7
 801cc84:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801cc88:	1b5b      	subs	r3, r3, r5
 801cc8a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801cc8e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801cc92:	437d      	muls	r5, r7
 801cc94:	fb03 5c0c 	mla	ip, r3, ip, r5
 801cc98:	0403      	lsls	r3, r0, #16
 801cc9a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cc9e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cca2:	4318      	orrs	r0, r3
 801cca4:	0413      	lsls	r3, r2, #16
 801cca6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ccaa:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ccae:	fb04 c000 	mla	r0, r4, r0, ip
 801ccb2:	4313      	orrs	r3, r2
 801ccb4:	fb06 0003 	mla	r0, r6, r3, r0
 801ccb8:	0d43      	lsrs	r3, r0, #21
 801ccba:	0940      	lsrs	r0, r0, #5
 801ccbc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ccc0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ccc4:	4318      	orrs	r0, r3
 801ccc6:	8008      	strh	r0, [r1, #0]
 801ccc8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cccc:	4684      	mov	ip, r0
 801ccce:	e7a6      	b.n	801cc1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801ccd0:	4607      	mov	r7, r0
 801ccd2:	4684      	mov	ip, r0
 801ccd4:	e7ab      	b.n	801cc2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801ccd6:	4607      	mov	r7, r0
 801ccd8:	e7a9      	b.n	801cc2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801ccda:	4602      	mov	r2, r0
 801ccdc:	e7b4      	b.n	801cc48 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801ccde:	4602      	mov	r2, r0
 801cce0:	e7ba      	b.n	801cc58 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801cce2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cce2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cce6:	b08f      	sub	sp, #60	@ 0x3c
 801cce8:	461d      	mov	r5, r3
 801ccea:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ccec:	9107      	str	r1, [sp, #28]
 801ccee:	920c      	str	r2, [sp, #48]	@ 0x30
 801ccf0:	6859      	ldr	r1, [r3, #4]
 801ccf2:	681b      	ldr	r3, [r3, #0]
 801ccf4:	900d      	str	r0, [sp, #52]	@ 0x34
 801ccf6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801ccfa:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801ccfe:	fb01 2707 	mla	r7, r1, r7, r2
 801cd02:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801cd06:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cd08:	f8d3 8000 	ldr.w	r8, [r3]
 801cd0c:	9b07      	ldr	r3, [sp, #28]
 801cd0e:	2b00      	cmp	r3, #0
 801cd10:	dc03      	bgt.n	801cd1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801cd12:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cd14:	2b00      	cmp	r3, #0
 801cd16:	f340 8182 	ble.w	801d01e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801cd1a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cd1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cd20:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cd24:	1e48      	subs	r0, r1, #1
 801cd26:	f102 3cff 	add.w	ip, r2, #4294967295
 801cd2a:	2d00      	cmp	r5, #0
 801cd2c:	f340 809b 	ble.w	801ce66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801cd30:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801cd34:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cd38:	d406      	bmi.n	801cd48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cd3a:	4586      	cmp	lr, r0
 801cd3c:	da04      	bge.n	801cd48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cd3e:	2b00      	cmp	r3, #0
 801cd40:	db02      	blt.n	801cd48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cd42:	4563      	cmp	r3, ip
 801cd44:	f2c0 8090 	blt.w	801ce68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd48:	f11e 0e01 	adds.w	lr, lr, #1
 801cd4c:	f100 8084 	bmi.w	801ce58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801cd50:	4571      	cmp	r1, lr
 801cd52:	f2c0 8081 	blt.w	801ce58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801cd56:	3301      	adds	r3, #1
 801cd58:	d47e      	bmi.n	801ce58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801cd5a:	429a      	cmp	r2, r3
 801cd5c:	db7c      	blt.n	801ce58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801cd5e:	46aa      	mov	sl, r5
 801cd60:	46b9      	mov	r9, r7
 801cd62:	f1ba 0f00 	cmp.w	sl, #0
 801cd66:	f340 8099 	ble.w	801ce9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801cd6a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cd6c:	1421      	asrs	r1, r4, #16
 801cd6e:	ea4f 4026 	mov.w	r0, r6, asr #16
 801cd72:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cd76:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801cd7a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801cd7e:	f100 80d1 	bmi.w	801cf24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801cd82:	f10e 3bff 	add.w	fp, lr, #4294967295
 801cd86:	4559      	cmp	r1, fp
 801cd88:	f280 80cc 	bge.w	801cf24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801cd8c:	2800      	cmp	r0, #0
 801cd8e:	f2c0 80c9 	blt.w	801cf24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801cd92:	f103 3bff 	add.w	fp, r3, #4294967295
 801cd96:	4558      	cmp	r0, fp
 801cd98:	f280 80c4 	bge.w	801cf24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801cd9c:	fa0f fe8e 	sxth.w	lr, lr
 801cda0:	fb00 110e 	mla	r1, r0, lr, r1
 801cda4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801cda8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801cdac:	8841      	ldrh	r1, [r0, #2]
 801cdae:	f1bc 0f00 	cmp.w	ip, #0
 801cdb2:	d00b      	beq.n	801cdcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801cdb4:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801cdb8:	3b01      	subs	r3, #1
 801cdba:	005b      	lsls	r3, r3, #1
 801cdbc:	3302      	adds	r3, #2
 801cdbe:	eb00 0e03 	add.w	lr, r0, r3
 801cdc2:	5ac3      	ldrh	r3, [r0, r3]
 801cdc4:	9308      	str	r3, [sp, #32]
 801cdc6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801cdca:	9309      	str	r3, [sp, #36]	@ 0x24
 801cdcc:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801cdd0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801cdd4:	fb12 f30c 	smulbb	r3, r2, ip
 801cdd8:	f1cc 0e10 	rsb	lr, ip, #16
 801cddc:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801cde0:	10db      	asrs	r3, r3, #3
 801cde2:	ebae 0e02 	sub.w	lr, lr, r2
 801cde6:	ea40 000b 	orr.w	r0, r0, fp
 801cdea:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801cdee:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801cdf2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801cdf6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801cdfa:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801cdfe:	ea4b 0101 	orr.w	r1, fp, r1
 801ce02:	4351      	muls	r1, r2
 801ce04:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ce06:	fb0e 1e00 	mla	lr, lr, r0, r1
 801ce0a:	0410      	lsls	r0, r2, #16
 801ce0c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ce10:	9908      	ldr	r1, [sp, #32]
 801ce12:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ce16:	4310      	orrs	r0, r2
 801ce18:	9a08      	ldr	r2, [sp, #32]
 801ce1a:	0412      	lsls	r2, r2, #16
 801ce1c:	fb03 e000 	mla	r0, r3, r0, lr
 801ce20:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801ce24:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801ce28:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ce2c:	ea42 020e 	orr.w	r2, r2, lr
 801ce30:	fb03 0302 	mla	r3, r3, r2, r0
 801ce34:	0d5a      	lsrs	r2, r3, #21
 801ce36:	095b      	lsrs	r3, r3, #5
 801ce38:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ce3c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ce40:	4313      	orrs	r3, r2
 801ce42:	f8a9 3000 	strh.w	r3, [r9]
 801ce46:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ce48:	f109 0902 	add.w	r9, r9, #2
 801ce4c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ce50:	441c      	add	r4, r3
 801ce52:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ce54:	441e      	add	r6, r3
 801ce56:	e784      	b.n	801cd62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ce58:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ce5a:	3d01      	subs	r5, #1
 801ce5c:	3702      	adds	r7, #2
 801ce5e:	441c      	add	r4, r3
 801ce60:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ce62:	441e      	add	r6, r3
 801ce64:	e761      	b.n	801cd2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ce66:	d01d      	beq.n	801cea4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801ce68:	1e6b      	subs	r3, r5, #1
 801ce6a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801ce6c:	fb00 4003 	mla	r0, r0, r3, r4
 801ce70:	1400      	asrs	r0, r0, #16
 801ce72:	f53f af74 	bmi.w	801cd5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ce76:	3901      	subs	r1, #1
 801ce78:	4288      	cmp	r0, r1
 801ce7a:	f6bf af70 	bge.w	801cd5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ce7e:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801ce80:	fb01 6303 	mla	r3, r1, r3, r6
 801ce84:	141b      	asrs	r3, r3, #16
 801ce86:	f53f af6a 	bmi.w	801cd5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ce8a:	3a01      	subs	r2, #1
 801ce8c:	4293      	cmp	r3, r2
 801ce8e:	f6bf af66 	bge.w	801cd5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ce92:	46a9      	mov	r9, r5
 801ce94:	46ba      	mov	sl, r7
 801ce96:	f1b9 0f00 	cmp.w	r9, #0
 801ce9a:	dc5b      	bgt.n	801cf54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ce9c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801cea0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801cea4:	9b07      	ldr	r3, [sp, #28]
 801cea6:	2b00      	cmp	r3, #0
 801cea8:	f340 80b9 	ble.w	801d01e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801ceac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ceb0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ceb2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ceb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ceba:	eef0 6a62 	vmov.f32	s13, s5
 801cebe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cec2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cec6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ceca:	ee16 4a90 	vmov	r4, s13
 801cece:	eef0 6a43 	vmov.f32	s13, s6
 801ced2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ced6:	ee16 6a90 	vmov	r6, s13
 801ceda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cede:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cee2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cee6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ceea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ceee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cef2:	ee12 2a90 	vmov	r2, s5
 801cef6:	eef0 2a47 	vmov.f32	s5, s14
 801cefa:	fb92 f3f3 	sdiv	r3, r2, r3
 801cefe:	ee13 2a10 	vmov	r2, s6
 801cf02:	931b      	str	r3, [sp, #108]	@ 0x6c
 801cf04:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801cf06:	eeb0 3a67 	vmov.f32	s6, s15
 801cf0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf0e:	931c      	str	r3, [sp, #112]	@ 0x70
 801cf10:	9b07      	ldr	r3, [sp, #28]
 801cf12:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801cf14:	3b01      	subs	r3, #1
 801cf16:	9307      	str	r3, [sp, #28]
 801cf18:	bf08      	it	eq
 801cf1a:	4615      	moveq	r5, r2
 801cf1c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801cf1e:	bf18      	it	ne
 801cf20:	461d      	movne	r5, r3
 801cf22:	e6f3      	b.n	801cd0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801cf24:	f111 0b01 	adds.w	fp, r1, #1
 801cf28:	d48d      	bmi.n	801ce46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801cf2a:	45de      	cmp	lr, fp
 801cf2c:	db8b      	blt.n	801ce46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801cf2e:	f110 0b01 	adds.w	fp, r0, #1
 801cf32:	d488      	bmi.n	801ce46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801cf34:	455b      	cmp	r3, fp
 801cf36:	db86      	blt.n	801ce46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801cf38:	b21b      	sxth	r3, r3
 801cf3a:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801cf3e:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801cf42:	9300      	str	r3, [sp, #0]
 801cf44:	4642      	mov	r2, r8
 801cf46:	fa0f f38e 	sxth.w	r3, lr
 801cf4a:	4649      	mov	r1, r9
 801cf4c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801cf4e:	f7ff fe4c 	bl	801cbea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801cf52:	e778      	b.n	801ce46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801cf54:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cf56:	1420      	asrs	r0, r4, #16
 801cf58:	1431      	asrs	r1, r6, #16
 801cf5a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801cf5e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801cf62:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cf66:	fb03 0101 	mla	r1, r3, r1, r0
 801cf6a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801cf6e:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801cf72:	8841      	ldrh	r1, [r0, #2]
 801cf74:	f1be 0f00 	cmp.w	lr, #0
 801cf78:	d00b      	beq.n	801cf92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801cf7a:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801cf7e:	3b01      	subs	r3, #1
 801cf80:	005b      	lsls	r3, r3, #1
 801cf82:	3302      	adds	r3, #2
 801cf84:	eb00 0b03 	add.w	fp, r0, r3
 801cf88:	5ac3      	ldrh	r3, [r0, r3]
 801cf8a:	930a      	str	r3, [sp, #40]	@ 0x28
 801cf8c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801cf90:	930b      	str	r3, [sp, #44]	@ 0x2c
 801cf92:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801cf96:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801cf9a:	fb12 f30e 	smulbb	r3, r2, lr
 801cf9e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801cfa2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801cfa6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801cfaa:	10db      	asrs	r3, r3, #3
 801cfac:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801cfb0:	ea40 000c 	orr.w	r0, r0, ip
 801cfb4:	f1ce 0c10 	rsb	ip, lr, #16
 801cfb8:	ea4b 0101 	orr.w	r1, fp, r1
 801cfbc:	f109 39ff 	add.w	r9, r9, #4294967295
 801cfc0:	ebac 0c02 	sub.w	ip, ip, r2
 801cfc4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801cfc8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801cfcc:	4351      	muls	r1, r2
 801cfce:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801cfd0:	fb0c 1c00 	mla	ip, ip, r0, r1
 801cfd4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801cfd6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801cfda:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801cfde:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801cfe0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801cfe4:	0412      	lsls	r2, r2, #16
 801cfe6:	ea4b 0000 	orr.w	r0, fp, r0
 801cfea:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801cfee:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801cff2:	fb03 c000 	mla	r0, r3, r0, ip
 801cff6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801cffa:	ea42 0b0b 	orr.w	fp, r2, fp
 801cffe:	fb03 000b 	mla	r0, r3, fp, r0
 801d002:	0d43      	lsrs	r3, r0, #21
 801d004:	0940      	lsrs	r0, r0, #5
 801d006:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d00a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d00e:	4318      	orrs	r0, r3
 801d010:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801d012:	441c      	add	r4, r3
 801d014:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d016:	f82a 0b02 	strh.w	r0, [sl], #2
 801d01a:	441e      	add	r6, r3
 801d01c:	e73b      	b.n	801ce96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801d01e:	b00f      	add	sp, #60	@ 0x3c
 801d020:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d024 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801d024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d028:	b085      	sub	sp, #20
 801d02a:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801d02e:	9102      	str	r1, [sp, #8]
 801d030:	2c00      	cmp	r4, #0
 801d032:	fb04 7103 	mla	r1, r4, r3, r7
 801d036:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801d03a:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801d03e:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801d042:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801d046:	f2c0 811b 	blt.w	801d280 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801d04a:	45a6      	cmp	lr, r4
 801d04c:	f340 8118 	ble.w	801d280 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801d050:	2f00      	cmp	r7, #0
 801d052:	f2c0 8113 	blt.w	801d27c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801d056:	42bb      	cmp	r3, r7
 801d058:	f340 8110 	ble.w	801d27c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801d05c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801d060:	1c7a      	adds	r2, r7, #1
 801d062:	f100 8110 	bmi.w	801d286 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801d066:	4293      	cmp	r3, r2
 801d068:	f340 810d 	ble.w	801d286 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801d06c:	2e00      	cmp	r6, #0
 801d06e:	f000 810c 	beq.w	801d28a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801d072:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801d076:	3401      	adds	r4, #1
 801d078:	f100 810b 	bmi.w	801d292 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801d07c:	45a6      	cmp	lr, r4
 801d07e:	f340 8108 	ble.w	801d292 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801d082:	2800      	cmp	r0, #0
 801d084:	f000 8108 	beq.w	801d298 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801d088:	2f00      	cmp	r7, #0
 801d08a:	f2c0 8100 	blt.w	801d28e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801d08e:	42bb      	cmp	r3, r7
 801d090:	f340 80fd 	ble.w	801d28e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801d094:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801d098:	3701      	adds	r7, #1
 801d09a:	f100 8100 	bmi.w	801d29e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801d09e:	42bb      	cmp	r3, r7
 801d0a0:	f340 80fd 	ble.w	801d29e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801d0a4:	2e00      	cmp	r6, #0
 801d0a6:	f000 80fc 	beq.w	801d2a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801d0aa:	3301      	adds	r3, #1
 801d0ac:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801d0b0:	b2b6      	uxth	r6, r6
 801d0b2:	b280      	uxth	r0, r0
 801d0b4:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801d0b8:	fb00 fe06 	mul.w	lr, r0, r6
 801d0bc:	0136      	lsls	r6, r6, #4
 801d0be:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801d0c2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801d0c6:	eba6 070e 	sub.w	r7, r6, lr
 801d0ca:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801d0ce:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801d0d2:	b280      	uxth	r0, r0
 801d0d4:	b2bf      	uxth	r7, r7
 801d0d6:	1a1b      	subs	r3, r3, r0
 801d0d8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801d0dc:	fb0a f607 	mul.w	r6, sl, r7
 801d0e0:	b29b      	uxth	r3, r3
 801d0e2:	fb0b 6603 	mla	r6, fp, r3, r6
 801d0e6:	fb00 6609 	mla	r6, r0, r9, r6
 801d0ea:	fb0e 6608 	mla	r6, lr, r8, r6
 801d0ee:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801d0f2:	9600      	str	r6, [sp, #0]
 801d0f4:	2e00      	cmp	r6, #0
 801d0f6:	f000 80be 	beq.w	801d276 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801d0fa:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801d0fe:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801d102:	9e02      	ldr	r6, [sp, #8]
 801d104:	fb0b fc0c 	mul.w	ip, fp, ip
 801d108:	fb0b f505 	mul.w	r5, fp, r5
 801d10c:	8836      	ldrh	r6, [r6, #0]
 801d10e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801d112:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801d116:	9501      	str	r5, [sp, #4]
 801d118:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801d11c:	44dc      	add	ip, fp
 801d11e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d122:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801d126:	9503      	str	r5, [sp, #12]
 801d128:	9d01      	ldr	r5, [sp, #4]
 801d12a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801d12e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d132:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801d136:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801d13a:	fb0a fc0c 	mul.w	ip, sl, ip
 801d13e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801d142:	fb0a fa01 	mul.w	sl, sl, r1
 801d146:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801d14a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801d14e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801d152:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801d156:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801d15a:	4465      	add	r5, ip
 801d15c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d160:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801d164:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d168:	fb09 fc0c 	mul.w	ip, r9, ip
 801d16c:	0a2d      	lsrs	r5, r5, #8
 801d16e:	fb09 f904 	mul.w	r9, r9, r4
 801d172:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d176:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801d17a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801d17e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801d182:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801d186:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801d18a:	437d      	muls	r5, r7
 801d18c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801d190:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801d194:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801d198:	4461      	add	r1, ip
 801d19a:	fb08 f404 	mul.w	r4, r8, r4
 801d19e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d1a2:	fb08 f802 	mul.w	r8, r8, r2
 801d1a6:	0a09      	lsrs	r1, r1, #8
 801d1a8:	0a22      	lsrs	r2, r4, #8
 801d1aa:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801d1ae:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801d1b2:	fb07 f70a 	mul.w	r7, r7, sl
 801d1b6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801d1ba:	4414      	add	r4, r2
 801d1bc:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801d1c0:	0a24      	lsrs	r4, r4, #8
 801d1c2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801d1c6:	9a03      	ldr	r2, [sp, #12]
 801d1c8:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801d1cc:	fb02 5503 	mla	r5, r2, r3, r5
 801d1d0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801d1d4:	9a00      	ldr	r2, [sp, #0]
 801d1d6:	fb04 540e 	mla	r4, r4, lr, r5
 801d1da:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801d1de:	1235      	asrs	r5, r6, #8
 801d1e0:	fb01 4100 	mla	r1, r1, r0, r4
 801d1e4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d1e8:	0a09      	lsrs	r1, r1, #8
 801d1ea:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801d1ee:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801d1f2:	fb03 7101 	mla	r1, r3, r1, r7
 801d1f6:	fb0e 1e08 	mla	lr, lr, r8, r1
 801d1fa:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801d1fe:	fb00 e101 	mla	r1, r0, r1, lr
 801d202:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801d206:	b287      	uxth	r7, r0
 801d208:	0a09      	lsrs	r1, r1, #8
 801d20a:	437a      	muls	r2, r7
 801d20c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801d210:	1c53      	adds	r3, r2, #1
 801d212:	4321      	orrs	r1, r4
 801d214:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d218:	0c0a      	lsrs	r2, r1, #16
 801d21a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801d21e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801d222:	b2c8      	uxtb	r0, r1
 801d224:	fb12 f207 	smulbb	r2, r2, r7
 801d228:	fb14 f407 	smulbb	r4, r4, r7
 801d22c:	b2db      	uxtb	r3, r3
 801d22e:	fb10 f007 	smulbb	r0, r0, r7
 801d232:	fb05 2503 	mla	r5, r5, r3, r2
 801d236:	10f2      	asrs	r2, r6, #3
 801d238:	00f6      	lsls	r6, r6, #3
 801d23a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801d23e:	b2ad      	uxth	r5, r5
 801d240:	b2f6      	uxtb	r6, r6
 801d242:	fb02 4203 	mla	r2, r2, r3, r4
 801d246:	fb06 0303 	mla	r3, r6, r3, r0
 801d24a:	b294      	uxth	r4, r2
 801d24c:	b299      	uxth	r1, r3
 801d24e:	1c6b      	adds	r3, r5, #1
 801d250:	1c62      	adds	r2, r4, #1
 801d252:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d256:	1c4b      	adds	r3, r1, #1
 801d258:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801d25c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d260:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d264:	0952      	lsrs	r2, r2, #5
 801d266:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d26a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d26e:	432b      	orrs	r3, r5
 801d270:	4313      	orrs	r3, r2
 801d272:	9a02      	ldr	r2, [sp, #8]
 801d274:	8013      	strh	r3, [r2, #0]
 801d276:	b005      	add	sp, #20
 801d278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d27c:	2500      	movs	r5, #0
 801d27e:	e6ef      	b.n	801d060 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801d280:	2100      	movs	r1, #0
 801d282:	460d      	mov	r5, r1
 801d284:	e6f7      	b.n	801d076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801d286:	2100      	movs	r1, #0
 801d288:	e6f5      	b.n	801d076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801d28a:	4631      	mov	r1, r6
 801d28c:	e6f3      	b.n	801d076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801d28e:	2400      	movs	r4, #0
 801d290:	e702      	b.n	801d098 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801d292:	2200      	movs	r2, #0
 801d294:	4614      	mov	r4, r2
 801d296:	e70b      	b.n	801d0b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801d298:	4602      	mov	r2, r0
 801d29a:	4604      	mov	r4, r0
 801d29c:	e708      	b.n	801d0b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801d29e:	2200      	movs	r2, #0
 801d2a0:	e706      	b.n	801d0b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801d2a2:	4632      	mov	r2, r6
 801d2a4:	e704      	b.n	801d0b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801d2a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d2a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d2aa:	b09d      	sub	sp, #116	@ 0x74
 801d2ac:	9219      	str	r2, [sp, #100]	@ 0x64
 801d2ae:	9307      	str	r3, [sp, #28]
 801d2b0:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801d2b2:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801d2b6:	901b      	str	r0, [sp, #108]	@ 0x6c
 801d2b8:	931a      	str	r3, [sp, #104]	@ 0x68
 801d2ba:	6850      	ldr	r0, [r2, #4]
 801d2bc:	9117      	str	r1, [sp, #92]	@ 0x5c
 801d2be:	6812      	ldr	r2, [r2, #0]
 801d2c0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801d2c4:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801d2c8:	fb00 1303 	mla	r3, r0, r3, r1
 801d2cc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d2d0:	930a      	str	r3, [sp, #40]	@ 0x28
 801d2d2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801d2d4:	681b      	ldr	r3, [r3, #0]
 801d2d6:	9310      	str	r3, [sp, #64]	@ 0x40
 801d2d8:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801d2dc:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d2de:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801d2e0:	2b00      	cmp	r3, #0
 801d2e2:	dc03      	bgt.n	801d2ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801d2e4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801d2e6:	2b00      	cmp	r3, #0
 801d2e8:	f340 8375 	ble.w	801d9d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801d2ec:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801d2ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d2f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d2f6:	1e48      	subs	r0, r1, #1
 801d2f8:	1e57      	subs	r7, r2, #1
 801d2fa:	9b07      	ldr	r3, [sp, #28]
 801d2fc:	2b00      	cmp	r3, #0
 801d2fe:	f340 818e 	ble.w	801d61e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801d302:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d306:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d30a:	d406      	bmi.n	801d31a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d30c:	4584      	cmp	ip, r0
 801d30e:	da04      	bge.n	801d31a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d310:	2b00      	cmp	r3, #0
 801d312:	db02      	blt.n	801d31a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d314:	42bb      	cmp	r3, r7
 801d316:	f2c0 8183 	blt.w	801d620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801d31a:	f11c 0c01 	adds.w	ip, ip, #1
 801d31e:	f100 8173 	bmi.w	801d608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d322:	4561      	cmp	r1, ip
 801d324:	f2c0 8170 	blt.w	801d608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d328:	3301      	adds	r3, #1
 801d32a:	f100 816d 	bmi.w	801d608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d32e:	429a      	cmp	r2, r3
 801d330:	f2c0 816a 	blt.w	801d608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d334:	9b07      	ldr	r3, [sp, #28]
 801d336:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801d338:	9318      	str	r3, [sp, #96]	@ 0x60
 801d33a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d33c:	2b00      	cmp	r3, #0
 801d33e:	f340 818c 	ble.w	801d65a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801d342:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801d344:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801d348:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801d34a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801d34e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d352:	1422      	asrs	r2, r4, #16
 801d354:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d358:	689b      	ldr	r3, [r3, #8]
 801d35a:	f100 81cd 	bmi.w	801d6f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d35e:	f103 38ff 	add.w	r8, r3, #4294967295
 801d362:	4542      	cmp	r2, r8
 801d364:	f280 81c8 	bge.w	801d6f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d368:	f1bc 0f00 	cmp.w	ip, #0
 801d36c:	f2c0 81c4 	blt.w	801d6f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d370:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d374:	45c4      	cmp	ip, r8
 801d376:	f280 81bf 	bge.w	801d6f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d37a:	b21b      	sxth	r3, r3
 801d37c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801d37e:	fb0c 2203 	mla	r2, ip, r3, r2
 801d382:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801d386:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801d38a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801d38e:	2800      	cmp	r0, #0
 801d390:	f000 81a9 	beq.w	801d6e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801d394:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801d398:	950c      	str	r5, [sp, #48]	@ 0x30
 801d39a:	0e2d      	lsrs	r5, r5, #24
 801d39c:	9513      	str	r5, [sp, #76]	@ 0x4c
 801d39e:	b181      	cbz	r1, 801d3c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d3a0:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801d3a4:	3b01      	subs	r3, #1
 801d3a6:	009b      	lsls	r3, r3, #2
 801d3a8:	3304      	adds	r3, #4
 801d3aa:	eb08 0c03 	add.w	ip, r8, r3
 801d3ae:	f858 3003 	ldr.w	r3, [r8, r3]
 801d3b2:	9308      	str	r3, [sp, #32]
 801d3b4:	0e1b      	lsrs	r3, r3, #24
 801d3b6:	9311      	str	r3, [sp, #68]	@ 0x44
 801d3b8:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801d3bc:	930d      	str	r3, [sp, #52]	@ 0x34
 801d3be:	0e1b      	lsrs	r3, r3, #24
 801d3c0:	9314      	str	r3, [sp, #80]	@ 0x50
 801d3c2:	b280      	uxth	r0, r0
 801d3c4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d3c6:	b289      	uxth	r1, r1
 801d3c8:	fb00 f901 	mul.w	r9, r0, r1
 801d3cc:	0100      	lsls	r0, r0, #4
 801d3ce:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d3d2:	eba0 0809 	sub.w	r8, r0, r9
 801d3d6:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801d3da:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801d3dc:	b289      	uxth	r1, r1
 801d3de:	fa1f f888 	uxth.w	r8, r8
 801d3e2:	1a5b      	subs	r3, r3, r1
 801d3e4:	fb08 f000 	mul.w	r0, r8, r0
 801d3e8:	b29b      	uxth	r3, r3
 801d3ea:	fb03 000e 	mla	r0, r3, lr, r0
 801d3ee:	fb01 0005 	mla	r0, r1, r5, r0
 801d3f2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801d3f4:	fb09 0005 	mla	r0, r9, r5, r0
 801d3f8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d3fc:	2800      	cmp	r0, #0
 801d3fe:	f000 80fa 	beq.w	801d5f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d402:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801d406:	d01b      	beq.n	801d440 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801d408:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801d40c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801d410:	fb0e fa0a 	mul.w	sl, lr, sl
 801d414:	fb0e fe02 	mul.w	lr, lr, r2
 801d418:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801d41c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801d420:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801d424:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801d428:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d42c:	4452      	add	r2, sl
 801d42e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d432:	0a12      	lsrs	r2, r2, #8
 801d434:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801d438:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801d43c:	ea42 020c 	orr.w	r2, r2, ip
 801d440:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801d442:	2dff      	cmp	r5, #255	@ 0xff
 801d444:	d021      	beq.n	801d48a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801d446:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801d448:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801d44c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801d44e:	fb05 fb0b 	mul.w	fp, r5, fp
 801d452:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801d454:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801d458:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801d45a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d45e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d462:	fb05 fa0a 	mul.w	sl, r5, sl
 801d466:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d46a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d46e:	44de      	add	lr, fp
 801d470:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d474:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d478:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d47c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d480:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d484:	ea4e 050a 	orr.w	r5, lr, sl
 801d488:	950c      	str	r5, [sp, #48]	@ 0x30
 801d48a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d48c:	2dff      	cmp	r5, #255	@ 0xff
 801d48e:	d021      	beq.n	801d4d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801d490:	9d08      	ldr	r5, [sp, #32]
 801d492:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801d496:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d498:	fb05 fb0b 	mul.w	fp, r5, fp
 801d49c:	9d08      	ldr	r5, [sp, #32]
 801d49e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801d4a2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d4a4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d4a8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d4ac:	fb05 fa0a 	mul.w	sl, r5, sl
 801d4b0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d4b4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d4b8:	44de      	add	lr, fp
 801d4ba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d4be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d4c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d4c6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d4ca:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d4ce:	ea4e 050a 	orr.w	r5, lr, sl
 801d4d2:	9508      	str	r5, [sp, #32]
 801d4d4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801d4d6:	2dff      	cmp	r5, #255	@ 0xff
 801d4d8:	d021      	beq.n	801d51e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801d4da:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d4dc:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801d4e0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801d4e2:	fb05 fb0b 	mul.w	fp, r5, fp
 801d4e6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d4e8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801d4ec:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801d4ee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d4f2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d4f6:	fb05 fa0a 	mul.w	sl, r5, sl
 801d4fa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d4fe:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d502:	44de      	add	lr, fp
 801d504:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d508:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d50c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d510:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d514:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d518:	ea4e 050a 	orr.w	r5, lr, sl
 801d51c:	950d      	str	r5, [sp, #52]	@ 0x34
 801d51e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801d520:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801d524:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801d528:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801d52c:	9d08      	ldr	r5, [sp, #32]
 801d52e:	fb08 fc0c 	mul.w	ip, r8, ip
 801d532:	fb03 cc0e 	mla	ip, r3, lr, ip
 801d536:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801d53a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d53c:	fb01 cc0e 	mla	ip, r1, lr, ip
 801d540:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801d544:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801d546:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d54a:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801d54e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801d550:	fb08 f80e 	mul.w	r8, r8, lr
 801d554:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d558:	fb03 8202 	mla	r2, r3, r2, r8
 801d55c:	9b08      	ldr	r3, [sp, #32]
 801d55e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d562:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801d566:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d568:	fb01 220a 	mla	r2, r1, sl, r2
 801d56c:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801d570:	883b      	ldrh	r3, [r7, #0]
 801d572:	fb09 2901 	mla	r9, r9, r1, r2
 801d576:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801d578:	1219      	asrs	r1, r3, #8
 801d57a:	4342      	muls	r2, r0
 801d57c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d580:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801d584:	1c50      	adds	r0, r2, #1
 801d586:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801d58a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801d58e:	ea4c 0c09 	orr.w	ip, ip, r9
 801d592:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801d596:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801d59a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801d59e:	fa5f fc8c 	uxtb.w	ip, ip
 801d5a2:	fb12 f205 	smulbb	r2, r2, r5
 801d5a6:	b2c0      	uxtb	r0, r0
 801d5a8:	fb1c fc05 	smulbb	ip, ip, r5
 801d5ac:	fb01 2100 	mla	r1, r1, r0, r2
 801d5b0:	10da      	asrs	r2, r3, #3
 801d5b2:	fb1e fe05 	smulbb	lr, lr, r5
 801d5b6:	00db      	lsls	r3, r3, #3
 801d5b8:	b289      	uxth	r1, r1
 801d5ba:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801d5be:	b2db      	uxtb	r3, r3
 801d5c0:	fb02 e200 	mla	r2, r2, r0, lr
 801d5c4:	fb03 c300 	mla	r3, r3, r0, ip
 801d5c8:	b292      	uxth	r2, r2
 801d5ca:	fa1f fc83 	uxth.w	ip, r3
 801d5ce:	1c4b      	adds	r3, r1, #1
 801d5d0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d5d4:	f10c 0301 	add.w	r3, ip, #1
 801d5d8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801d5dc:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801d5e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d5e4:	430b      	orrs	r3, r1
 801d5e6:	1c51      	adds	r1, r2, #1
 801d5e8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d5ec:	0952      	lsrs	r2, r2, #5
 801d5ee:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d5f2:	4313      	orrs	r3, r2
 801d5f4:	803b      	strh	r3, [r7, #0]
 801d5f6:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801d5f8:	3702      	adds	r7, #2
 801d5fa:	441c      	add	r4, r3
 801d5fc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801d5fe:	441e      	add	r6, r3
 801d600:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d602:	3b01      	subs	r3, #1
 801d604:	9318      	str	r3, [sp, #96]	@ 0x60
 801d606:	e698      	b.n	801d33a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d608:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801d60a:	441c      	add	r4, r3
 801d60c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801d60e:	441e      	add	r6, r3
 801d610:	9b07      	ldr	r3, [sp, #28]
 801d612:	3b01      	subs	r3, #1
 801d614:	9307      	str	r3, [sp, #28]
 801d616:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d618:	3302      	adds	r3, #2
 801d61a:	930a      	str	r3, [sp, #40]	@ 0x28
 801d61c:	e66d      	b.n	801d2fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d61e:	d023      	beq.n	801d668 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801d620:	9b07      	ldr	r3, [sp, #28]
 801d622:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801d624:	3b01      	subs	r3, #1
 801d626:	fb00 4003 	mla	r0, r0, r3, r4
 801d62a:	1400      	asrs	r0, r0, #16
 801d62c:	f53f ae82 	bmi.w	801d334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d630:	3901      	subs	r1, #1
 801d632:	4288      	cmp	r0, r1
 801d634:	f6bf ae7e 	bge.w	801d334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d638:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801d63a:	fb01 6303 	mla	r3, r1, r3, r6
 801d63e:	141b      	asrs	r3, r3, #16
 801d640:	f53f ae78 	bmi.w	801d334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d644:	3a01      	subs	r2, #1
 801d646:	4293      	cmp	r3, r2
 801d648:	f6bf ae74 	bge.w	801d334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d64c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801d650:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801d654:	f1bb 0f00 	cmp.w	fp, #0
 801d658:	dc6c      	bgt.n	801d734 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801d65a:	9b07      	ldr	r3, [sp, #28]
 801d65c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801d660:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d662:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d666:	930a      	str	r3, [sp, #40]	@ 0x28
 801d668:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801d66a:	2b00      	cmp	r3, #0
 801d66c:	f340 81b3 	ble.w	801d9d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801d670:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d674:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d676:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d67a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d67e:	eef0 6a62 	vmov.f32	s13, s5
 801d682:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d686:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d68a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d68e:	ee16 4a90 	vmov	r4, s13
 801d692:	eef0 6a43 	vmov.f32	s13, s6
 801d696:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d69a:	ee16 6a90 	vmov	r6, s13
 801d69e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d6a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d6a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d6aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d6ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d6b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d6b6:	ee12 2a90 	vmov	r2, s5
 801d6ba:	eef0 2a47 	vmov.f32	s5, s14
 801d6be:	fb92 f3f3 	sdiv	r3, r2, r3
 801d6c2:	ee13 2a10 	vmov	r2, s6
 801d6c6:	9329      	str	r3, [sp, #164]	@ 0xa4
 801d6c8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d6ca:	eeb0 3a67 	vmov.f32	s6, s15
 801d6ce:	fb92 f3f3 	sdiv	r3, r2, r3
 801d6d2:	932a      	str	r3, [sp, #168]	@ 0xa8
 801d6d4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801d6d6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801d6d8:	3b01      	subs	r3, #1
 801d6da:	9317      	str	r3, [sp, #92]	@ 0x5c
 801d6dc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d6de:	bf08      	it	eq
 801d6e0:	4613      	moveq	r3, r2
 801d6e2:	9307      	str	r3, [sp, #28]
 801d6e4:	e5fb      	b.n	801d2de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d6e6:	2900      	cmp	r1, #0
 801d6e8:	f43f ae6b 	beq.w	801d3c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d6ec:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801d6f0:	9308      	str	r3, [sp, #32]
 801d6f2:	0e1b      	lsrs	r3, r3, #24
 801d6f4:	9311      	str	r3, [sp, #68]	@ 0x44
 801d6f6:	e664      	b.n	801d3c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d6f8:	f112 0801 	adds.w	r8, r2, #1
 801d6fc:	f53f af7b 	bmi.w	801d5f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d700:	4543      	cmp	r3, r8
 801d702:	f6ff af78 	blt.w	801d5f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d706:	f11c 0801 	adds.w	r8, ip, #1
 801d70a:	f53f af74 	bmi.w	801d5f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d70e:	45c6      	cmp	lr, r8
 801d710:	f6ff af71 	blt.w	801d5f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d714:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801d716:	b21b      	sxth	r3, r3
 801d718:	9201      	str	r2, [sp, #4]
 801d71a:	fa0f f28e 	sxth.w	r2, lr
 801d71e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801d722:	e9cd c002 	strd	ip, r0, [sp, #8]
 801d726:	9200      	str	r2, [sp, #0]
 801d728:	4639      	mov	r1, r7
 801d72a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801d72c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801d72e:	f7ff fc79 	bl	801d024 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801d732:	e760      	b.n	801d5f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d734:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801d736:	1427      	asrs	r7, r4, #16
 801d738:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801d73a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d73e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d742:	1433      	asrs	r3, r6, #16
 801d744:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d748:	fb01 7303 	mla	r3, r1, r3, r7
 801d74c:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801d750:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801d754:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d758:	2a00      	cmp	r2, #0
 801d75a:	f000 8133 	beq.w	801d9c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801d75e:	687d      	ldr	r5, [r7, #4]
 801d760:	950e      	str	r5, [sp, #56]	@ 0x38
 801d762:	0e2d      	lsrs	r5, r5, #24
 801d764:	9515      	str	r5, [sp, #84]	@ 0x54
 801d766:	b178      	cbz	r0, 801d788 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801d768:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801d76c:	3901      	subs	r1, #1
 801d76e:	0089      	lsls	r1, r1, #2
 801d770:	3104      	adds	r1, #4
 801d772:	eb07 0e01 	add.w	lr, r7, r1
 801d776:	5879      	ldr	r1, [r7, r1]
 801d778:	9109      	str	r1, [sp, #36]	@ 0x24
 801d77a:	0e09      	lsrs	r1, r1, #24
 801d77c:	9112      	str	r1, [sp, #72]	@ 0x48
 801d77e:	f8de 1004 	ldr.w	r1, [lr, #4]
 801d782:	910f      	str	r1, [sp, #60]	@ 0x3c
 801d784:	0e09      	lsrs	r1, r1, #24
 801d786:	9116      	str	r1, [sp, #88]	@ 0x58
 801d788:	b292      	uxth	r2, r2
 801d78a:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801d78c:	b280      	uxth	r0, r0
 801d78e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801d790:	fb02 f800 	mul.w	r8, r2, r0
 801d794:	0112      	lsls	r2, r2, #4
 801d796:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801d79a:	eba2 0e08 	sub.w	lr, r2, r8
 801d79e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801d7a2:	b280      	uxth	r0, r0
 801d7a4:	fa1f fe8e 	uxth.w	lr, lr
 801d7a8:	1a12      	subs	r2, r2, r0
 801d7aa:	fb0e f101 	mul.w	r1, lr, r1
 801d7ae:	b292      	uxth	r2, r2
 801d7b0:	fb02 110c 	mla	r1, r2, ip, r1
 801d7b4:	fb00 1105 	mla	r1, r0, r5, r1
 801d7b8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801d7ba:	fb08 1105 	mla	r1, r8, r5, r1
 801d7be:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d7c2:	2900      	cmp	r1, #0
 801d7c4:	f000 80f5 	beq.w	801d9b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801d7c8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801d7cc:	d019      	beq.n	801d802 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801d7ce:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801d7d2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d7d6:	fb0c fa0a 	mul.w	sl, ip, sl
 801d7da:	fb0c fc03 	mul.w	ip, ip, r3
 801d7de:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d7e2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801d7e6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801d7ea:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d7ee:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d7f2:	4453      	add	r3, sl
 801d7f4:	0a3f      	lsrs	r7, r7, #8
 801d7f6:	0a1b      	lsrs	r3, r3, #8
 801d7f8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801d7fc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d800:	433b      	orrs	r3, r7
 801d802:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801d804:	2dff      	cmp	r5, #255	@ 0xff
 801d806:	d020      	beq.n	801d84a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801d808:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d80a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801d80e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801d810:	436f      	muls	r7, r5
 801d812:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d814:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d818:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801d81c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801d81e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d822:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d826:	fb05 fa0a 	mul.w	sl, r5, sl
 801d82a:	44bc      	add	ip, r7
 801d82c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d830:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d834:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d838:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d83c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d840:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d844:	ea4c 050a 	orr.w	r5, ip, sl
 801d848:	950e      	str	r5, [sp, #56]	@ 0x38
 801d84a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801d84c:	2dff      	cmp	r5, #255	@ 0xff
 801d84e:	d020      	beq.n	801d892 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801d850:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801d852:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801d856:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801d858:	436f      	muls	r7, r5
 801d85a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801d85c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d860:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801d864:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801d866:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d86a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d86e:	fb05 fa0a 	mul.w	sl, r5, sl
 801d872:	44bc      	add	ip, r7
 801d874:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d878:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d87c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d880:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d884:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d888:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d88c:	ea4c 050a 	orr.w	r5, ip, sl
 801d890:	9509      	str	r5, [sp, #36]	@ 0x24
 801d892:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801d894:	2dff      	cmp	r5, #255	@ 0xff
 801d896:	d020      	beq.n	801d8da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801d898:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801d89a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801d89e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801d8a0:	436f      	muls	r7, r5
 801d8a2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801d8a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d8a8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801d8ac:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801d8ae:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d8b2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d8b6:	fb05 fa0a 	mul.w	sl, r5, sl
 801d8ba:	44bc      	add	ip, r7
 801d8bc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d8c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d8c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d8c8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d8cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d8d0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d8d4:	ea4c 050a 	orr.w	r5, ip, sl
 801d8d8:	950f      	str	r5, [sp, #60]	@ 0x3c
 801d8da:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d8dc:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801d8e0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d8e4:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801d8e8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801d8ea:	fb0e f707 	mul.w	r7, lr, r7
 801d8ee:	fb02 770c 	mla	r7, r2, ip, r7
 801d8f2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801d8f6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801d8f8:	fb00 770c 	mla	r7, r0, ip, r7
 801d8fc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801d900:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d902:	fb08 770c 	mla	r7, r8, ip, r7
 801d906:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801d90a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801d90c:	fb0e fe0c 	mul.w	lr, lr, ip
 801d910:	0a3f      	lsrs	r7, r7, #8
 801d912:	fb02 e303 	mla	r3, r2, r3, lr
 801d916:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d918:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801d91c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801d920:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d922:	fb00 330a 	mla	r3, r0, sl, r3
 801d926:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801d92a:	f8b9 0000 	ldrh.w	r0, [r9]
 801d92e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801d932:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d934:	1202      	asrs	r2, r0, #8
 801d936:	4359      	muls	r1, r3
 801d938:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d93c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801d940:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801d944:	1c4b      	adds	r3, r1, #1
 801d946:	ea47 070c 	orr.w	r7, r7, ip
 801d94a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d94e:	0c3b      	lsrs	r3, r7, #16
 801d950:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801d954:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801d958:	b2ff      	uxtb	r7, r7
 801d95a:	fb13 f305 	smulbb	r3, r3, r5
 801d95e:	b2c9      	uxtb	r1, r1
 801d960:	fb17 f705 	smulbb	r7, r7, r5
 801d964:	fb02 3201 	mla	r2, r2, r1, r3
 801d968:	10c3      	asrs	r3, r0, #3
 801d96a:	fb1c fc05 	smulbb	ip, ip, r5
 801d96e:	00c0      	lsls	r0, r0, #3
 801d970:	b292      	uxth	r2, r2
 801d972:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801d976:	b2c0      	uxtb	r0, r0
 801d978:	fb03 c301 	mla	r3, r3, r1, ip
 801d97c:	fb00 7001 	mla	r0, r0, r1, r7
 801d980:	1c51      	adds	r1, r2, #1
 801d982:	b29b      	uxth	r3, r3
 801d984:	b280      	uxth	r0, r0
 801d986:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d98a:	f100 0c01 	add.w	ip, r0, #1
 801d98e:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801d992:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801d996:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d99a:	ea4c 0202 	orr.w	r2, ip, r2
 801d99e:	f103 0c01 	add.w	ip, r3, #1
 801d9a2:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801d9a6:	095b      	lsrs	r3, r3, #5
 801d9a8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d9ac:	431a      	orrs	r2, r3
 801d9ae:	f8a9 2000 	strh.w	r2, [r9]
 801d9b2:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801d9b4:	f109 0902 	add.w	r9, r9, #2
 801d9b8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d9bc:	441c      	add	r4, r3
 801d9be:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801d9c0:	441e      	add	r6, r3
 801d9c2:	e647      	b.n	801d654 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801d9c4:	2800      	cmp	r0, #0
 801d9c6:	f43f aedf 	beq.w	801d788 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801d9ca:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801d9ce:	9109      	str	r1, [sp, #36]	@ 0x24
 801d9d0:	0e09      	lsrs	r1, r1, #24
 801d9d2:	9112      	str	r1, [sp, #72]	@ 0x48
 801d9d4:	e6d8      	b.n	801d788 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801d9d6:	b01d      	add	sp, #116	@ 0x74
 801d9d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d9dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801d9dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9e0:	b085      	sub	sp, #20
 801d9e2:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801d9e6:	9102      	str	r1, [sp, #8]
 801d9e8:	2c00      	cmp	r4, #0
 801d9ea:	fb04 7103 	mla	r1, r4, r3, r7
 801d9ee:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801d9f2:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801d9f6:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801d9fa:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801d9fe:	f2c0 810c 	blt.w	801dc1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801da02:	45a6      	cmp	lr, r4
 801da04:	f340 8109 	ble.w	801dc1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801da08:	2f00      	cmp	r7, #0
 801da0a:	f2c0 8104 	blt.w	801dc16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801da0e:	42bb      	cmp	r3, r7
 801da10:	f340 8101 	ble.w	801dc16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801da14:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801da18:	1c7a      	adds	r2, r7, #1
 801da1a:	f100 8101 	bmi.w	801dc20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801da1e:	4293      	cmp	r3, r2
 801da20:	f340 80fe 	ble.w	801dc20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801da24:	2e00      	cmp	r6, #0
 801da26:	f000 80fd 	beq.w	801dc24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801da2a:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801da2e:	3401      	adds	r4, #1
 801da30:	f100 80fc 	bmi.w	801dc2c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801da34:	45a6      	cmp	lr, r4
 801da36:	f340 80f9 	ble.w	801dc2c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801da3a:	2800      	cmp	r0, #0
 801da3c:	f000 80f9 	beq.w	801dc32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801da40:	2f00      	cmp	r7, #0
 801da42:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801da46:	f2c0 80ef 	blt.w	801dc28 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801da4a:	42bb      	cmp	r3, r7
 801da4c:	f340 80ec 	ble.w	801dc28 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801da50:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801da54:	3701      	adds	r7, #1
 801da56:	f100 80ef 	bmi.w	801dc38 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801da5a:	42bb      	cmp	r3, r7
 801da5c:	f340 80ec 	ble.w	801dc38 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801da60:	2e00      	cmp	r6, #0
 801da62:	f000 80eb 	beq.w	801dc3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801da66:	6852      	ldr	r2, [r2, #4]
 801da68:	b2b6      	uxth	r6, r6
 801da6a:	b280      	uxth	r0, r0
 801da6c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801da70:	fb00 fe06 	mul.w	lr, r0, r6
 801da74:	0136      	lsls	r6, r6, #4
 801da76:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801da7a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801da7e:	eba6 070e 	sub.w	r7, r6, lr
 801da82:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801da86:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801da8a:	b280      	uxth	r0, r0
 801da8c:	b2bf      	uxth	r7, r7
 801da8e:	1a1b      	subs	r3, r3, r0
 801da90:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801da94:	fb07 f60a 	mul.w	r6, r7, sl
 801da98:	b29b      	uxth	r3, r3
 801da9a:	fb0b 6603 	mla	r6, fp, r3, r6
 801da9e:	fb00 6609 	mla	r6, r0, r9, r6
 801daa2:	fb0e 6608 	mla	r6, lr, r8, r6
 801daa6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801daaa:	9600      	str	r6, [sp, #0]
 801daac:	2e00      	cmp	r6, #0
 801daae:	f000 80af 	beq.w	801dc10 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801dab2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801dab6:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801daba:	9e02      	ldr	r6, [sp, #8]
 801dabc:	fb0b fc0c 	mul.w	ip, fp, ip
 801dac0:	fb0b f505 	mul.w	r5, fp, r5
 801dac4:	8836      	ldrh	r6, [r6, #0]
 801dac6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801daca:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801dace:	9501      	str	r5, [sp, #4]
 801dad0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801dad4:	44dc      	add	ip, fp
 801dad6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dada:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801dade:	9503      	str	r5, [sp, #12]
 801dae0:	9d01      	ldr	r5, [sp, #4]
 801dae2:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801dae6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801daea:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801daee:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801daf2:	fb0a fc0c 	mul.w	ip, sl, ip
 801daf6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801dafa:	fb0a fa01 	mul.w	sl, sl, r1
 801dafe:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801db02:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801db06:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801db0a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801db0e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801db12:	4465      	add	r5, ip
 801db14:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801db18:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801db1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801db20:	fb09 fc0c 	mul.w	ip, r9, ip
 801db24:	0a2d      	lsrs	r5, r5, #8
 801db26:	fb09 f904 	mul.w	r9, r9, r4
 801db2a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801db2e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801db32:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801db36:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801db3a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801db3e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801db42:	437d      	muls	r5, r7
 801db44:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801db48:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801db4c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801db50:	4461      	add	r1, ip
 801db52:	fb08 f404 	mul.w	r4, r8, r4
 801db56:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801db5a:	fb08 f802 	mul.w	r8, r8, r2
 801db5e:	0a09      	lsrs	r1, r1, #8
 801db60:	0a22      	lsrs	r2, r4, #8
 801db62:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801db66:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801db6a:	fb07 f70a 	mul.w	r7, r7, sl
 801db6e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801db72:	4414      	add	r4, r2
 801db74:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801db78:	0a24      	lsrs	r4, r4, #8
 801db7a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801db7e:	9a03      	ldr	r2, [sp, #12]
 801db80:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801db84:	fb02 5503 	mla	r5, r2, r3, r5
 801db88:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801db8c:	fb04 540e 	mla	r4, r4, lr, r5
 801db90:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801db94:	fb01 4100 	mla	r1, r1, r0, r4
 801db98:	0a09      	lsrs	r1, r1, #8
 801db9a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801db9e:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801dba2:	fb03 7101 	mla	r1, r3, r1, r7
 801dba6:	9b00      	ldr	r3, [sp, #0]
 801dba8:	fb0e 1e08 	mla	lr, lr, r8, r1
 801dbac:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801dbb0:	43da      	mvns	r2, r3
 801dbb2:	1233      	asrs	r3, r6, #8
 801dbb4:	fb00 e101 	mla	r1, r0, r1, lr
 801dbb8:	10f0      	asrs	r0, r6, #3
 801dbba:	b2d2      	uxtb	r2, r2
 801dbbc:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801dbc0:	0a09      	lsrs	r1, r1, #8
 801dbc2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801dbc6:	00f6      	lsls	r6, r6, #3
 801dbc8:	4353      	muls	r3, r2
 801dbca:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801dbce:	4350      	muls	r0, r2
 801dbd0:	b2f6      	uxtb	r6, r6
 801dbd2:	4321      	orrs	r1, r4
 801dbd4:	4356      	muls	r6, r2
 801dbd6:	1c5a      	adds	r2, r3, #1
 801dbd8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801dbdc:	0c0b      	lsrs	r3, r1, #16
 801dbde:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dbe2:	1c42      	adds	r2, r0, #1
 801dbe4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801dbe8:	0a0a      	lsrs	r2, r1, #8
 801dbea:	021b      	lsls	r3, r3, #8
 801dbec:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801dbf0:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801dbf4:	00d2      	lsls	r2, r2, #3
 801dbf6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dbfa:	4313      	orrs	r3, r2
 801dbfc:	1c72      	adds	r2, r6, #1
 801dbfe:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801dc02:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801dc06:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801dc0a:	4319      	orrs	r1, r3
 801dc0c:	9b02      	ldr	r3, [sp, #8]
 801dc0e:	8019      	strh	r1, [r3, #0]
 801dc10:	b005      	add	sp, #20
 801dc12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc16:	2500      	movs	r5, #0
 801dc18:	e6fe      	b.n	801da18 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801dc1a:	2100      	movs	r1, #0
 801dc1c:	460d      	mov	r5, r1
 801dc1e:	e706      	b.n	801da2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801dc20:	2100      	movs	r1, #0
 801dc22:	e704      	b.n	801da2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801dc24:	4631      	mov	r1, r6
 801dc26:	e702      	b.n	801da2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801dc28:	2400      	movs	r4, #0
 801dc2a:	e713      	b.n	801da54 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801dc2c:	2200      	movs	r2, #0
 801dc2e:	4614      	mov	r4, r2
 801dc30:	e71a      	b.n	801da68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801dc32:	4602      	mov	r2, r0
 801dc34:	4604      	mov	r4, r0
 801dc36:	e717      	b.n	801da68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801dc38:	2200      	movs	r2, #0
 801dc3a:	e715      	b.n	801da68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801dc3c:	4632      	mov	r2, r6
 801dc3e:	e713      	b.n	801da68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

0801dc40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dc40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc44:	b09b      	sub	sp, #108	@ 0x6c
 801dc46:	9218      	str	r2, [sp, #96]	@ 0x60
 801dc48:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801dc4a:	9019      	str	r0, [sp, #100]	@ 0x64
 801dc4c:	9116      	str	r1, [sp, #88]	@ 0x58
 801dc4e:	6850      	ldr	r0, [r2, #4]
 801dc50:	9307      	str	r3, [sp, #28]
 801dc52:	6812      	ldr	r2, [r2, #0]
 801dc54:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801dc58:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801dc5c:	fb00 1303 	mla	r3, r0, r3, r1
 801dc60:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dc64:	930a      	str	r3, [sp, #40]	@ 0x28
 801dc66:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801dc68:	681b      	ldr	r3, [r3, #0]
 801dc6a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801dc6c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801dc6e:	2b00      	cmp	r3, #0
 801dc70:	dc03      	bgt.n	801dc7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801dc72:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801dc74:	2b00      	cmp	r3, #0
 801dc76:	f340 8387 	ble.w	801e388 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801dc7a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801dc7c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dc80:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dc84:	1e48      	subs	r0, r1, #1
 801dc86:	1e57      	subs	r7, r2, #1
 801dc88:	9b07      	ldr	r3, [sp, #28]
 801dc8a:	2b00      	cmp	r3, #0
 801dc8c:	f340 8166 	ble.w	801df5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801dc90:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801dc94:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dc98:	d406      	bmi.n	801dca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dc9a:	4584      	cmp	ip, r0
 801dc9c:	da04      	bge.n	801dca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dc9e:	2b00      	cmp	r3, #0
 801dca0:	db02      	blt.n	801dca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dca2:	42bb      	cmp	r3, r7
 801dca4:	f2c0 815b 	blt.w	801df5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801dca8:	f11c 0c01 	adds.w	ip, ip, #1
 801dcac:	f100 814b 	bmi.w	801df46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801dcb0:	4561      	cmp	r1, ip
 801dcb2:	f2c0 8148 	blt.w	801df46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801dcb6:	3301      	adds	r3, #1
 801dcb8:	f100 8145 	bmi.w	801df46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801dcbc:	429a      	cmp	r2, r3
 801dcbe:	f2c0 8142 	blt.w	801df46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801dcc2:	9b07      	ldr	r3, [sp, #28]
 801dcc4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801dcc6:	9317      	str	r3, [sp, #92]	@ 0x5c
 801dcc8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801dcca:	2b00      	cmp	r3, #0
 801dccc:	f340 8165 	ble.w	801df9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801dcd0:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801dcd2:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801dcd6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801dcd8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801dcdc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801dce0:	1422      	asrs	r2, r4, #16
 801dce2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801dce6:	689b      	ldr	r3, [r3, #8]
 801dce8:	f100 81d5 	bmi.w	801e096 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801dcec:	f103 38ff 	add.w	r8, r3, #4294967295
 801dcf0:	4542      	cmp	r2, r8
 801dcf2:	f280 81d0 	bge.w	801e096 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801dcf6:	f1bc 0f00 	cmp.w	ip, #0
 801dcfa:	f2c0 81cc 	blt.w	801e096 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801dcfe:	f10e 38ff 	add.w	r8, lr, #4294967295
 801dd02:	45c4      	cmp	ip, r8
 801dd04:	f280 81c7 	bge.w	801e096 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801dd08:	b21b      	sxth	r3, r3
 801dd0a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801dd0c:	fb0c 2203 	mla	r2, ip, r3, r2
 801dd10:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801dd14:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801dd18:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801dd1c:	2900      	cmp	r1, #0
 801dd1e:	f000 8182 	beq.w	801e026 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801dd22:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801dd26:	950b      	str	r5, [sp, #44]	@ 0x2c
 801dd28:	0e2d      	lsrs	r5, r5, #24
 801dd2a:	9512      	str	r5, [sp, #72]	@ 0x48
 801dd2c:	b180      	cbz	r0, 801dd50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801dd2e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801dd32:	3b01      	subs	r3, #1
 801dd34:	009b      	lsls	r3, r3, #2
 801dd36:	3304      	adds	r3, #4
 801dd38:	eb08 0c03 	add.w	ip, r8, r3
 801dd3c:	f858 3003 	ldr.w	r3, [r8, r3]
 801dd40:	9308      	str	r3, [sp, #32]
 801dd42:	0e1b      	lsrs	r3, r3, #24
 801dd44:	9310      	str	r3, [sp, #64]	@ 0x40
 801dd46:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801dd4a:	930c      	str	r3, [sp, #48]	@ 0x30
 801dd4c:	0e1b      	lsrs	r3, r3, #24
 801dd4e:	9313      	str	r3, [sp, #76]	@ 0x4c
 801dd50:	b289      	uxth	r1, r1
 801dd52:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801dd54:	b280      	uxth	r0, r0
 801dd56:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801dd58:	fb01 f900 	mul.w	r9, r1, r0
 801dd5c:	0109      	lsls	r1, r1, #4
 801dd5e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801dd62:	eba1 0809 	sub.w	r8, r1, r9
 801dd66:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801dd6a:	b280      	uxth	r0, r0
 801dd6c:	fa1f f888 	uxth.w	r8, r8
 801dd70:	1a09      	subs	r1, r1, r0
 801dd72:	fb08 f303 	mul.w	r3, r8, r3
 801dd76:	b289      	uxth	r1, r1
 801dd78:	fb01 330e 	mla	r3, r1, lr, r3
 801dd7c:	fb00 3305 	mla	r3, r0, r5, r3
 801dd80:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801dd82:	fb09 3305 	mla	r3, r9, r5, r3
 801dd86:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dd8a:	2b00      	cmp	r3, #0
 801dd8c:	f000 80d2 	beq.w	801df34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801dd90:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801dd94:	d01b      	beq.n	801ddce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801dd96:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801dd9a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801dd9e:	fb0e fa0a 	mul.w	sl, lr, sl
 801dda2:	fb0e fe02 	mul.w	lr, lr, r2
 801dda6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ddaa:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ddae:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801ddb2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801ddb6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ddba:	4452      	add	r2, sl
 801ddbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ddc0:	0a12      	lsrs	r2, r2, #8
 801ddc2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ddc6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801ddca:	ea42 020c 	orr.w	r2, r2, ip
 801ddce:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ddd0:	2dff      	cmp	r5, #255	@ 0xff
 801ddd2:	d021      	beq.n	801de18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801ddd4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ddd6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801ddda:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801dddc:	fb05 fb0b 	mul.w	fp, r5, fp
 801dde0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801dde2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801dde6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801dde8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ddec:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ddf0:	fb05 fa0a 	mul.w	sl, r5, sl
 801ddf4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ddf8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ddfc:	44de      	add	lr, fp
 801ddfe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801de02:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801de06:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801de0a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801de0e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801de12:	ea4e 050a 	orr.w	r5, lr, sl
 801de16:	950b      	str	r5, [sp, #44]	@ 0x2c
 801de18:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801de1a:	2dff      	cmp	r5, #255	@ 0xff
 801de1c:	d021      	beq.n	801de62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801de1e:	9d08      	ldr	r5, [sp, #32]
 801de20:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801de24:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801de26:	fb05 fb0b 	mul.w	fp, r5, fp
 801de2a:	9d08      	ldr	r5, [sp, #32]
 801de2c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801de30:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801de32:	fb05 fa0e 	mul.w	sl, r5, lr
 801de36:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801de3a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801de3e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801de42:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801de46:	44de      	add	lr, fp
 801de48:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801de4c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801de50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801de54:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801de58:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801de5c:	ea4e 050a 	orr.w	r5, lr, sl
 801de60:	9508      	str	r5, [sp, #32]
 801de62:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801de64:	2dff      	cmp	r5, #255	@ 0xff
 801de66:	d021      	beq.n	801deac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801de68:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801de6a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801de6e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801de70:	fb05 fb0b 	mul.w	fp, r5, fp
 801de74:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801de76:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801de7a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801de7c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801de80:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801de84:	fb05 fa0a 	mul.w	sl, r5, sl
 801de88:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801de8c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801de90:	44de      	add	lr, fp
 801de92:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801de96:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801de9a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801de9e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801dea2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801dea6:	ea4e 050a 	orr.w	r5, lr, sl
 801deaa:	950c      	str	r5, [sp, #48]	@ 0x30
 801deac:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801deae:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801deb2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801deb6:	2bff      	cmp	r3, #255	@ 0xff
 801deb8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801debc:	9d08      	ldr	r5, [sp, #32]
 801debe:	fb08 fc0c 	mul.w	ip, r8, ip
 801dec2:	fb01 cc0e 	mla	ip, r1, lr, ip
 801dec6:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801deca:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801decc:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ded0:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ded4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ded6:	fb09 cc0e 	mla	ip, r9, lr, ip
 801deda:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801dede:	fb08 f80e 	mul.w	r8, r8, lr
 801dee2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dee6:	fb01 8202 	mla	r2, r1, r2, r8
 801deea:	9908      	ldr	r1, [sp, #32]
 801deec:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801def0:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801def4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801def6:	fb00 220a 	mla	r2, r0, sl, r2
 801defa:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801defe:	fb09 2900 	mla	r9, r9, r0, r2
 801df02:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801df06:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801df0a:	ea4c 0c09 	orr.w	ip, ip, r9
 801df0e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801df12:	f040 8091 	bne.w	801e038 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801df16:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801df1a:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801df1e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801df22:	f022 0207 	bic.w	r2, r2, #7
 801df26:	431a      	orrs	r2, r3
 801df28:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801df2c:	ea4c 0c02 	orr.w	ip, ip, r2
 801df30:	f8a7 c000 	strh.w	ip, [r7]
 801df34:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801df36:	3702      	adds	r7, #2
 801df38:	441c      	add	r4, r3
 801df3a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801df3c:	441e      	add	r6, r3
 801df3e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801df40:	3b01      	subs	r3, #1
 801df42:	9317      	str	r3, [sp, #92]	@ 0x5c
 801df44:	e6c0      	b.n	801dcc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801df46:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801df48:	441c      	add	r4, r3
 801df4a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801df4c:	441e      	add	r6, r3
 801df4e:	9b07      	ldr	r3, [sp, #28]
 801df50:	3b01      	subs	r3, #1
 801df52:	9307      	str	r3, [sp, #28]
 801df54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801df56:	3302      	adds	r3, #2
 801df58:	930a      	str	r3, [sp, #40]	@ 0x28
 801df5a:	e695      	b.n	801dc88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801df5c:	d024      	beq.n	801dfa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801df5e:	9b07      	ldr	r3, [sp, #28]
 801df60:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801df62:	3b01      	subs	r3, #1
 801df64:	fb00 4003 	mla	r0, r0, r3, r4
 801df68:	1400      	asrs	r0, r0, #16
 801df6a:	f53f aeaa 	bmi.w	801dcc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801df6e:	3901      	subs	r1, #1
 801df70:	4288      	cmp	r0, r1
 801df72:	f6bf aea6 	bge.w	801dcc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801df76:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801df78:	fb01 6303 	mla	r3, r1, r3, r6
 801df7c:	141b      	asrs	r3, r3, #16
 801df7e:	f53f aea0 	bmi.w	801dcc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801df82:	3a01      	subs	r2, #1
 801df84:	4293      	cmp	r3, r2
 801df86:	f6bf ae9c 	bge.w	801dcc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801df8a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801df8e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801df92:	f1bb 0f00 	cmp.w	fp, #0
 801df96:	f300 809a 	bgt.w	801e0ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801df9a:	9b07      	ldr	r3, [sp, #28]
 801df9c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801dfa0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dfa2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801dfa6:	930a      	str	r3, [sp, #40]	@ 0x28
 801dfa8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801dfaa:	2b00      	cmp	r3, #0
 801dfac:	f340 81ec 	ble.w	801e388 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801dfb0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801dfb4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dfb6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dfba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dfbe:	eef0 6a62 	vmov.f32	s13, s5
 801dfc2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dfc6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dfca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dfce:	ee16 4a90 	vmov	r4, s13
 801dfd2:	eef0 6a43 	vmov.f32	s13, s6
 801dfd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dfda:	ee16 6a90 	vmov	r6, s13
 801dfde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dfe2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dfe6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dfea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dfee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dff2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dff6:	ee12 2a90 	vmov	r2, s5
 801dffa:	eef0 2a47 	vmov.f32	s5, s14
 801dffe:	fb92 f3f3 	sdiv	r3, r2, r3
 801e002:	ee13 2a10 	vmov	r2, s6
 801e006:	9327      	str	r3, [sp, #156]	@ 0x9c
 801e008:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e00a:	eeb0 3a67 	vmov.f32	s6, s15
 801e00e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e012:	9328      	str	r3, [sp, #160]	@ 0xa0
 801e014:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801e016:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801e018:	3b01      	subs	r3, #1
 801e01a:	9316      	str	r3, [sp, #88]	@ 0x58
 801e01c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e01e:	bf08      	it	eq
 801e020:	4613      	moveq	r3, r2
 801e022:	9307      	str	r3, [sp, #28]
 801e024:	e622      	b.n	801dc6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801e026:	2800      	cmp	r0, #0
 801e028:	f43f ae92 	beq.w	801dd50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e02c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e030:	9308      	str	r3, [sp, #32]
 801e032:	0e1b      	lsrs	r3, r3, #24
 801e034:	9310      	str	r3, [sp, #64]	@ 0x40
 801e036:	e68b      	b.n	801dd50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e038:	8839      	ldrh	r1, [r7, #0]
 801e03a:	43db      	mvns	r3, r3
 801e03c:	4dd4      	ldr	r5, [pc, #848]	@ (801e390 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801e03e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801e042:	fa5f f883 	uxtb.w	r8, r3
 801e046:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801e04a:	10c8      	asrs	r0, r1, #3
 801e04c:	00cb      	lsls	r3, r1, #3
 801e04e:	fb0e fe08 	mul.w	lr, lr, r8
 801e052:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e056:	b2db      	uxtb	r3, r3
 801e058:	f10e 0101 	add.w	r1, lr, #1
 801e05c:	fb00 f008 	mul.w	r0, r0, r8
 801e060:	fb03 f308 	mul.w	r3, r3, r8
 801e064:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801e068:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801e06c:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801e070:	f100 0e01 	add.w	lr, r0, #1
 801e074:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801e078:	b2c9      	uxtb	r1, r1
 801e07a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e07e:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801e082:	00d2      	lsls	r2, r2, #3
 801e084:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e088:	430a      	orrs	r2, r1
 801e08a:	1c59      	adds	r1, r3, #1
 801e08c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e090:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e094:	e748      	b.n	801df28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801e096:	f112 0801 	adds.w	r8, r2, #1
 801e09a:	f53f af4b 	bmi.w	801df34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e09e:	4543      	cmp	r3, r8
 801e0a0:	f6ff af48 	blt.w	801df34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e0a4:	f11c 0801 	adds.w	r8, ip, #1
 801e0a8:	f53f af44 	bmi.w	801df34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e0ac:	45c6      	cmp	lr, r8
 801e0ae:	f6ff af41 	blt.w	801df34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e0b2:	b21b      	sxth	r3, r3
 801e0b4:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801e0b8:	fa0f f28e 	sxth.w	r2, lr
 801e0bc:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801e0c0:	9200      	str	r2, [sp, #0]
 801e0c2:	4639      	mov	r1, r7
 801e0c4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e0c6:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801e0c8:	f7ff fc88 	bl	801d9dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801e0cc:	e732      	b.n	801df34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e0ce:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e0d0:	1421      	asrs	r1, r4, #16
 801e0d2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e0d4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e0d8:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801e0dc:	1433      	asrs	r3, r6, #16
 801e0de:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e0e2:	fb07 1303 	mla	r3, r7, r3, r1
 801e0e6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801e0e8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801e0ec:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e0f0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e0f4:	2a00      	cmp	r2, #0
 801e0f6:	f000 8108 	beq.w	801e30a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 801e0fa:	684d      	ldr	r5, [r1, #4]
 801e0fc:	950d      	str	r5, [sp, #52]	@ 0x34
 801e0fe:	0e2d      	lsrs	r5, r5, #24
 801e100:	9514      	str	r5, [sp, #80]	@ 0x50
 801e102:	b178      	cbz	r0, 801e124 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e104:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801e108:	3f01      	subs	r7, #1
 801e10a:	00bf      	lsls	r7, r7, #2
 801e10c:	3704      	adds	r7, #4
 801e10e:	eb01 0e07 	add.w	lr, r1, r7
 801e112:	59c9      	ldr	r1, [r1, r7]
 801e114:	9109      	str	r1, [sp, #36]	@ 0x24
 801e116:	0e09      	lsrs	r1, r1, #24
 801e118:	9111      	str	r1, [sp, #68]	@ 0x44
 801e11a:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e11e:	910e      	str	r1, [sp, #56]	@ 0x38
 801e120:	0e09      	lsrs	r1, r1, #24
 801e122:	9115      	str	r1, [sp, #84]	@ 0x54
 801e124:	b292      	uxth	r2, r2
 801e126:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e128:	b280      	uxth	r0, r0
 801e12a:	fb02 f900 	mul.w	r9, r2, r0
 801e12e:	0112      	lsls	r2, r2, #4
 801e130:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e134:	eba2 0e09 	sub.w	lr, r2, r9
 801e138:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801e13c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801e13e:	b280      	uxth	r0, r0
 801e140:	fa1f fe8e 	uxth.w	lr, lr
 801e144:	1a09      	subs	r1, r1, r0
 801e146:	fb0e f202 	mul.w	r2, lr, r2
 801e14a:	b289      	uxth	r1, r1
 801e14c:	fb01 220c 	mla	r2, r1, ip, r2
 801e150:	fb00 2205 	mla	r2, r0, r5, r2
 801e154:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e156:	fb09 2205 	mla	r2, r9, r5, r2
 801e15a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801e15e:	2a00      	cmp	r2, #0
 801e160:	f000 80ca 	beq.w	801e2f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801e164:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801e168:	d019      	beq.n	801e19e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801e16a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801e16e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e172:	fb0c fa0a 	mul.w	sl, ip, sl
 801e176:	fb0c fc03 	mul.w	ip, ip, r3
 801e17a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e17e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e182:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801e186:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e18a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e18e:	4453      	add	r3, sl
 801e190:	0a3f      	lsrs	r7, r7, #8
 801e192:	0a1b      	lsrs	r3, r3, #8
 801e194:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801e198:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e19c:	433b      	orrs	r3, r7
 801e19e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e1a0:	2dff      	cmp	r5, #255	@ 0xff
 801e1a2:	d020      	beq.n	801e1e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801e1a4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e1a6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e1aa:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e1ac:	436f      	muls	r7, r5
 801e1ae:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e1b0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e1b4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e1b8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e1ba:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e1be:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e1c2:	fb05 fa0a 	mul.w	sl, r5, sl
 801e1c6:	44bc      	add	ip, r7
 801e1c8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e1cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e1d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e1d4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e1d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e1dc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e1e0:	ea4c 050a 	orr.w	r5, ip, sl
 801e1e4:	950d      	str	r5, [sp, #52]	@ 0x34
 801e1e6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e1e8:	2dff      	cmp	r5, #255	@ 0xff
 801e1ea:	d020      	beq.n	801e22e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801e1ec:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e1ee:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e1f2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e1f4:	436f      	muls	r7, r5
 801e1f6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e1f8:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801e1fc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e1fe:	fb05 fa0c 	mul.w	sl, r5, ip
 801e202:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e206:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e20a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e20e:	44bc      	add	ip, r7
 801e210:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e214:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e218:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e21c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e220:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e224:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e228:	ea4c 050a 	orr.w	r5, ip, sl
 801e22c:	9509      	str	r5, [sp, #36]	@ 0x24
 801e22e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e230:	2dff      	cmp	r5, #255	@ 0xff
 801e232:	d020      	beq.n	801e276 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801e234:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e236:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e23a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e23c:	436f      	muls	r7, r5
 801e23e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e240:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e244:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e248:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e24a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e24e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e252:	fb05 fa0a 	mul.w	sl, r5, sl
 801e256:	44bc      	add	ip, r7
 801e258:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e25c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e260:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e264:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e268:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e26c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e270:	ea4c 050a 	orr.w	r5, ip, sl
 801e274:	950e      	str	r5, [sp, #56]	@ 0x38
 801e276:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e278:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801e27c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e280:	2aff      	cmp	r2, #255	@ 0xff
 801e282:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e286:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e288:	fb0e f707 	mul.w	r7, lr, r7
 801e28c:	fb01 770c 	mla	r7, r1, ip, r7
 801e290:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e294:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e296:	fb00 770c 	mla	r7, r0, ip, r7
 801e29a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e29e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e2a0:	fb09 770c 	mla	r7, r9, ip, r7
 801e2a4:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801e2a8:	fb0e fe0c 	mul.w	lr, lr, ip
 801e2ac:	ea4f 2717 	mov.w	r7, r7, lsr #8
 801e2b0:	fb01 e303 	mla	r3, r1, r3, lr
 801e2b4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801e2b6:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801e2ba:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801e2be:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801e2c0:	fb00 330a 	mla	r3, r0, sl, r3
 801e2c4:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801e2c8:	fb09 3c0c 	mla	ip, r9, ip, r3
 801e2cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e2d0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e2d4:	ea47 070c 	orr.w	r7, r7, ip
 801e2d8:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801e2dc:	d11e      	bne.n	801e31c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 801e2de:	097a      	lsrs	r2, r7, #5
 801e2e0:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801e2e4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801e2e8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e2ec:	f023 0307 	bic.w	r3, r3, #7
 801e2f0:	4313      	orrs	r3, r2
 801e2f2:	431f      	orrs	r7, r3
 801e2f4:	f8a8 7000 	strh.w	r7, [r8]
 801e2f8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801e2fa:	f108 0802 	add.w	r8, r8, #2
 801e2fe:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e302:	441c      	add	r4, r3
 801e304:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e306:	441e      	add	r6, r3
 801e308:	e643      	b.n	801df92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801e30a:	2800      	cmp	r0, #0
 801e30c:	f43f af0a 	beq.w	801e124 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e310:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801e314:	9109      	str	r1, [sp, #36]	@ 0x24
 801e316:	0e09      	lsrs	r1, r1, #24
 801e318:	9111      	str	r1, [sp, #68]	@ 0x44
 801e31a:	e703      	b.n	801e124 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e31c:	f8b8 1000 	ldrh.w	r1, [r8]
 801e320:	43d2      	mvns	r2, r2
 801e322:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801e326:	fa5f fe82 	uxtb.w	lr, r2
 801e32a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801e32e:	10c8      	asrs	r0, r1, #3
 801e330:	00ca      	lsls	r2, r1, #3
 801e332:	fb0c fc0e 	mul.w	ip, ip, lr
 801e336:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e33a:	b2d2      	uxtb	r2, r2
 801e33c:	f10c 0101 	add.w	r1, ip, #1
 801e340:	fb00 f00e 	mul.w	r0, r0, lr
 801e344:	fb02 f20e 	mul.w	r2, r2, lr
 801e348:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801e34c:	0c39      	lsrs	r1, r7, #16
 801e34e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801e352:	490f      	ldr	r1, [pc, #60]	@ (801e390 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801e354:	fa5f fc8c 	uxtb.w	ip, ip
 801e358:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801e35c:	1c41      	adds	r1, r0, #1
 801e35e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801e362:	1c51      	adds	r1, r2, #1
 801e364:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e368:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e36c:	00c0      	lsls	r0, r0, #3
 801e36e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e372:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e376:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801e37a:	ea4c 0c00 	orr.w	ip, ip, r0
 801e37e:	ea47 0c0c 	orr.w	ip, r7, ip
 801e382:	f8a8 c000 	strh.w	ip, [r8]
 801e386:	e7b7      	b.n	801e2f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801e388:	b01b      	add	sp, #108	@ 0x6c
 801e38a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e38e:	bf00      	nop
 801e390:	fffff800 	.word	0xfffff800

0801e394 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801e394:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e398:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801e39c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801e3a0:	2d00      	cmp	r5, #0
 801e3a2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801e3a6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801e3aa:	fb05 0e03 	mla	lr, r5, r3, r0
 801e3ae:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801e3b2:	f2c0 808c 	blt.w	801e4ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801e3b6:	45a9      	cmp	r9, r5
 801e3b8:	f340 8089 	ble.w	801e4ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801e3bc:	2800      	cmp	r0, #0
 801e3be:	f2c0 8084 	blt.w	801e4ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801e3c2:	4580      	cmp	r8, r0
 801e3c4:	f340 8081 	ble.w	801e4ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801e3c8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801e3cc:	f01e 0f01 	tst.w	lr, #1
 801e3d0:	5d16      	ldrb	r6, [r2, r4]
 801e3d2:	bf0c      	ite	eq
 801e3d4:	f006 060f 	andeq.w	r6, r6, #15
 801e3d8:	1136      	asrne	r6, r6, #4
 801e3da:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801e3de:	b2f6      	uxtb	r6, r6
 801e3e0:	1c44      	adds	r4, r0, #1
 801e3e2:	d477      	bmi.n	801e4d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801e3e4:	45a0      	cmp	r8, r4
 801e3e6:	dd75      	ble.n	801e4d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801e3e8:	2f00      	cmp	r7, #0
 801e3ea:	d075      	beq.n	801e4d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801e3ec:	f10e 0a01 	add.w	sl, lr, #1
 801e3f0:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801e3f4:	f01a 0f01 	tst.w	sl, #1
 801e3f8:	5d14      	ldrb	r4, [r2, r4]
 801e3fa:	bf0c      	ite	eq
 801e3fc:	f004 040f 	andeq.w	r4, r4, #15
 801e400:	1124      	asrne	r4, r4, #4
 801e402:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801e406:	b2e4      	uxtb	r4, r4
 801e408:	3501      	adds	r5, #1
 801e40a:	d469      	bmi.n	801e4e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801e40c:	45a9      	cmp	r9, r5
 801e40e:	dd67      	ble.n	801e4e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801e410:	f1bc 0f00 	cmp.w	ip, #0
 801e414:	d067      	beq.n	801e4e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801e416:	2800      	cmp	r0, #0
 801e418:	db60      	blt.n	801e4dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801e41a:	4580      	cmp	r8, r0
 801e41c:	dd5e      	ble.n	801e4dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801e41e:	eb03 090e 	add.w	r9, r3, lr
 801e422:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801e426:	f019 0f01 	tst.w	r9, #1
 801e42a:	5d55      	ldrb	r5, [r2, r5]
 801e42c:	bf0c      	ite	eq
 801e42e:	f005 050f 	andeq.w	r5, r5, #15
 801e432:	112d      	asrne	r5, r5, #4
 801e434:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801e438:	b2ed      	uxtb	r5, r5
 801e43a:	3001      	adds	r0, #1
 801e43c:	d456      	bmi.n	801e4ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801e43e:	4580      	cmp	r8, r0
 801e440:	dd54      	ble.n	801e4ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801e442:	2f00      	cmp	r7, #0
 801e444:	d054      	beq.n	801e4f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801e446:	3301      	adds	r3, #1
 801e448:	449e      	add	lr, r3
 801e44a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801e44e:	f01e 0f01 	tst.w	lr, #1
 801e452:	5cd0      	ldrb	r0, [r2, r3]
 801e454:	bf0c      	ite	eq
 801e456:	f000 000f 	andeq.w	r0, r0, #15
 801e45a:	1100      	asrne	r0, r0, #4
 801e45c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e460:	b2c3      	uxtb	r3, r0
 801e462:	b2ba      	uxth	r2, r7
 801e464:	fa1f fc8c 	uxth.w	ip, ip
 801e468:	fb02 f00c 	mul.w	r0, r2, ip
 801e46c:	0112      	lsls	r2, r2, #4
 801e46e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801e472:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801e476:	1a12      	subs	r2, r2, r0
 801e478:	fa1f fc8c 	uxth.w	ip, ip
 801e47c:	b292      	uxth	r2, r2
 801e47e:	eba7 070c 	sub.w	r7, r7, ip
 801e482:	4362      	muls	r2, r4
 801e484:	b2bf      	uxth	r7, r7
 801e486:	fb06 2207 	mla	r2, r6, r7, r2
 801e48a:	fb0c 2505 	mla	r5, ip, r5, r2
 801e48e:	fb00 5303 	mla	r3, r0, r3, r5
 801e492:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e496:	b1b3      	cbz	r3, 801e4c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801e498:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801e49c:	435a      	muls	r2, r3
 801e49e:	1c53      	adds	r3, r2, #1
 801e4a0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e4a4:	4a2d      	ldr	r2, [pc, #180]	@ (801e55c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801e4a6:	121b      	asrs	r3, r3, #8
 801e4a8:	6812      	ldr	r2, [r2, #0]
 801e4aa:	2bff      	cmp	r3, #255	@ 0xff
 801e4ac:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801e4b0:	d120      	bne.n	801e4f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801e4b2:	0950      	lsrs	r0, r2, #5
 801e4b4:	4b2a      	ldr	r3, [pc, #168]	@ (801e560 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801e4b6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e4ba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e4be:	4033      	ands	r3, r6
 801e4c0:	4318      	orrs	r0, r3
 801e4c2:	4302      	orrs	r2, r0
 801e4c4:	800a      	strh	r2, [r1, #0]
 801e4c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e4ca:	2600      	movs	r6, #0
 801e4cc:	e788      	b.n	801e3e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801e4ce:	2400      	movs	r4, #0
 801e4d0:	4626      	mov	r6, r4
 801e4d2:	e799      	b.n	801e408 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801e4d4:	2400      	movs	r4, #0
 801e4d6:	e797      	b.n	801e408 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801e4d8:	463c      	mov	r4, r7
 801e4da:	e795      	b.n	801e408 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801e4dc:	2500      	movs	r5, #0
 801e4de:	e7ac      	b.n	801e43a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801e4e0:	2300      	movs	r3, #0
 801e4e2:	461d      	mov	r5, r3
 801e4e4:	e7bd      	b.n	801e462 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e4e6:	4663      	mov	r3, ip
 801e4e8:	4665      	mov	r5, ip
 801e4ea:	e7ba      	b.n	801e462 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e4ec:	2300      	movs	r3, #0
 801e4ee:	e7b8      	b.n	801e462 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e4f0:	463b      	mov	r3, r7
 801e4f2:	e7b6      	b.n	801e462 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e4f4:	880d      	ldrh	r5, [r1, #0]
 801e4f6:	b29f      	uxth	r7, r3
 801e4f8:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801e4fc:	43db      	mvns	r3, r3
 801e4fe:	122c      	asrs	r4, r5, #8
 801e500:	fb10 f007 	smulbb	r0, r0, r7
 801e504:	b2db      	uxtb	r3, r3
 801e506:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801e50a:	b2f6      	uxtb	r6, r6
 801e50c:	b2d2      	uxtb	r2, r2
 801e50e:	fb04 0403 	mla	r4, r4, r3, r0
 801e512:	10e8      	asrs	r0, r5, #3
 801e514:	fb12 f207 	smulbb	r2, r2, r7
 801e518:	00ed      	lsls	r5, r5, #3
 801e51a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e51e:	b2a4      	uxth	r4, r4
 801e520:	fb16 f607 	smulbb	r6, r6, r7
 801e524:	b2ed      	uxtb	r5, r5
 801e526:	fb00 6603 	mla	r6, r0, r3, r6
 801e52a:	fb05 2303 	mla	r3, r5, r3, r2
 801e52e:	b2b0      	uxth	r0, r6
 801e530:	b29a      	uxth	r2, r3
 801e532:	1c63      	adds	r3, r4, #1
 801e534:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801e538:	1c53      	adds	r3, r2, #1
 801e53a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e53e:	1c42      	adds	r2, r0, #1
 801e540:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801e544:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e548:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e54c:	0940      	lsrs	r0, r0, #5
 801e54e:	4323      	orrs	r3, r4
 801e550:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e554:	4303      	orrs	r3, r0
 801e556:	800b      	strh	r3, [r1, #0]
 801e558:	e7b5      	b.n	801e4c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801e55a:	bf00      	nop
 801e55c:	20016a10 	.word	0x20016a10
 801e560:	00fff800 	.word	0x00fff800

0801e564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e568:	b097      	sub	sp, #92	@ 0x5c
 801e56a:	9214      	str	r2, [sp, #80]	@ 0x50
 801e56c:	9309      	str	r3, [sp, #36]	@ 0x24
 801e56e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801e570:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801e574:	9015      	str	r0, [sp, #84]	@ 0x54
 801e576:	910d      	str	r1, [sp, #52]	@ 0x34
 801e578:	6850      	ldr	r0, [r2, #4]
 801e57a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e57c:	6812      	ldr	r2, [r2, #0]
 801e57e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801e582:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801e586:	fb00 1303 	mla	r3, r0, r3, r1
 801e58a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801e58e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e590:	689b      	ldr	r3, [r3, #8]
 801e592:	3301      	adds	r3, #1
 801e594:	f023 0301 	bic.w	r3, r3, #1
 801e598:	930a      	str	r3, [sp, #40]	@ 0x28
 801e59a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e59c:	681f      	ldr	r7, [r3, #0]
 801e59e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e5a0:	2b00      	cmp	r3, #0
 801e5a2:	dc03      	bgt.n	801e5ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e5a4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801e5a6:	2b00      	cmp	r3, #0
 801e5a8:	f340 8289 	ble.w	801eabe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801e5ac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e5ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e5b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e5b6:	1e48      	subs	r0, r1, #1
 801e5b8:	f102 3cff 	add.w	ip, r2, #4294967295
 801e5bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e5be:	2b00      	cmp	r3, #0
 801e5c0:	f340 80c5 	ble.w	801e74e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801e5c4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e5c8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e5cc:	d406      	bmi.n	801e5dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e5ce:	4586      	cmp	lr, r0
 801e5d0:	da04      	bge.n	801e5dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e5d2:	2b00      	cmp	r3, #0
 801e5d4:	db02      	blt.n	801e5dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e5d6:	4563      	cmp	r3, ip
 801e5d8:	f2c0 80ba 	blt.w	801e750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801e5dc:	f11e 0e01 	adds.w	lr, lr, #1
 801e5e0:	f100 80ab 	bmi.w	801e73a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801e5e4:	4571      	cmp	r1, lr
 801e5e6:	f2c0 80a8 	blt.w	801e73a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801e5ea:	3301      	adds	r3, #1
 801e5ec:	f100 80a5 	bmi.w	801e73a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801e5f0:	429a      	cmp	r2, r3
 801e5f2:	f2c0 80a2 	blt.w	801e73a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801e5f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e5f8:	46c8      	mov	r8, r9
 801e5fa:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801e5fe:	930e      	str	r3, [sp, #56]	@ 0x38
 801e600:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e602:	2b00      	cmp	r3, #0
 801e604:	f340 80c4 	ble.w	801e790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801e608:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e60a:	1430      	asrs	r0, r6, #16
 801e60c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e610:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e614:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801e618:	1423      	asrs	r3, r4, #16
 801e61a:	f100 814f 	bmi.w	801e8bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e61e:	f10c 3bff 	add.w	fp, ip, #4294967295
 801e622:	455b      	cmp	r3, fp
 801e624:	f280 814a 	bge.w	801e8bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e628:	2800      	cmp	r0, #0
 801e62a:	f2c0 8147 	blt.w	801e8bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e62e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e632:	4558      	cmp	r0, fp
 801e634:	f280 8142 	bge.w	801e8bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e638:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801e63a:	fb00 3305 	mla	r3, r0, r5, r3
 801e63e:	0858      	lsrs	r0, r3, #1
 801e640:	07dd      	lsls	r5, r3, #31
 801e642:	f817 c000 	ldrb.w	ip, [r7, r0]
 801e646:	bf54      	ite	pl
 801e648:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e64c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e650:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e654:	fa5f fc8c 	uxtb.w	ip, ip
 801e658:	2a00      	cmp	r2, #0
 801e65a:	f000 80dd 	beq.w	801e818 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801e65e:	1c58      	adds	r0, r3, #1
 801e660:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801e664:	07c0      	lsls	r0, r0, #31
 801e666:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e66a:	bf54      	ite	pl
 801e66c:	f00e 0e0f 	andpl.w	lr, lr, #15
 801e670:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801e674:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801e678:	fa5f f08e 	uxtb.w	r0, lr
 801e67c:	9010      	str	r0, [sp, #64]	@ 0x40
 801e67e:	b1d9      	cbz	r1, 801e6b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801e680:	4453      	add	r3, sl
 801e682:	0858      	lsrs	r0, r3, #1
 801e684:	07dd      	lsls	r5, r3, #31
 801e686:	f103 0301 	add.w	r3, r3, #1
 801e68a:	5c38      	ldrb	r0, [r7, r0]
 801e68c:	bf54      	ite	pl
 801e68e:	f000 000f 	andpl.w	r0, r0, #15
 801e692:	1100      	asrmi	r0, r0, #4
 801e694:	07dd      	lsls	r5, r3, #31
 801e696:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e69a:	b2c0      	uxtb	r0, r0
 801e69c:	900b      	str	r0, [sp, #44]	@ 0x2c
 801e69e:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801e6a2:	f817 e000 	ldrb.w	lr, [r7, r0]
 801e6a6:	bf54      	ite	pl
 801e6a8:	f00e 030f 	andpl.w	r3, lr, #15
 801e6ac:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801e6b0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e6b4:	b2db      	uxtb	r3, r3
 801e6b6:	9311      	str	r3, [sp, #68]	@ 0x44
 801e6b8:	b292      	uxth	r2, r2
 801e6ba:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e6bc:	b289      	uxth	r1, r1
 801e6be:	fb02 f301 	mul.w	r3, r2, r1
 801e6c2:	0112      	lsls	r2, r2, #4
 801e6c4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801e6c8:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801e6cc:	1ad2      	subs	r2, r2, r3
 801e6ce:	b289      	uxth	r1, r1
 801e6d0:	b292      	uxth	r2, r2
 801e6d2:	1a40      	subs	r0, r0, r1
 801e6d4:	436a      	muls	r2, r5
 801e6d6:	b280      	uxth	r0, r0
 801e6d8:	fb0c 2c00 	mla	ip, ip, r0, r2
 801e6dc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e6de:	fb01 c102 	mla	r1, r1, r2, ip
 801e6e2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801e6e4:	fb03 1302 	mla	r3, r3, r2, r1
 801e6e8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e6ec:	b1db      	cbz	r3, 801e726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e6ee:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e6f0:	4353      	muls	r3, r2
 801e6f2:	1c5a      	adds	r2, r3, #1
 801e6f4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e6f8:	4ac6      	ldr	r2, [pc, #792]	@ (801ea14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801e6fa:	121b      	asrs	r3, r3, #8
 801e6fc:	6812      	ldr	r2, [r2, #0]
 801e6fe:	2bff      	cmp	r3, #255	@ 0xff
 801e700:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801e704:	f040 8099 	bne.w	801e83a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e708:	0953      	lsrs	r3, r2, #5
 801e70a:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801e70e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e712:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e716:	f02c 0c07 	bic.w	ip, ip, #7
 801e71a:	ea43 0c0c 	orr.w	ip, r3, ip
 801e71e:	ea4c 0202 	orr.w	r2, ip, r2
 801e722:	f8a8 2000 	strh.w	r2, [r8]
 801e726:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801e728:	f108 0802 	add.w	r8, r8, #2
 801e72c:	441c      	add	r4, r3
 801e72e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e730:	441e      	add	r6, r3
 801e732:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e734:	3b01      	subs	r3, #1
 801e736:	930e      	str	r3, [sp, #56]	@ 0x38
 801e738:	e762      	b.n	801e600 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801e73a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801e73c:	f109 0902 	add.w	r9, r9, #2
 801e740:	441c      	add	r4, r3
 801e742:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e744:	441e      	add	r6, r3
 801e746:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e748:	3b01      	subs	r3, #1
 801e74a:	9309      	str	r3, [sp, #36]	@ 0x24
 801e74c:	e736      	b.n	801e5bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e74e:	d024      	beq.n	801e79a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801e750:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e752:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801e754:	3b01      	subs	r3, #1
 801e756:	fb00 4003 	mla	r0, r0, r3, r4
 801e75a:	1400      	asrs	r0, r0, #16
 801e75c:	f53f af4b 	bmi.w	801e5f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e760:	3901      	subs	r1, #1
 801e762:	4288      	cmp	r0, r1
 801e764:	f6bf af47 	bge.w	801e5f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e768:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801e76a:	fb01 6303 	mla	r3, r1, r3, r6
 801e76e:	141b      	asrs	r3, r3, #16
 801e770:	f53f af41 	bmi.w	801e5f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e774:	3a01      	subs	r2, #1
 801e776:	4293      	cmp	r3, r2
 801e778:	f6bf af3d 	bge.w	801e5f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e77c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801e780:	46c8      	mov	r8, r9
 801e782:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801e786:	930e      	str	r3, [sp, #56]	@ 0x38
 801e788:	f1bb 0f00 	cmp.w	fp, #0
 801e78c:	f300 80b7 	bgt.w	801e8fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 801e790:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e792:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e796:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801e79a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e79c:	2b00      	cmp	r3, #0
 801e79e:	f340 818e 	ble.w	801eabe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801e7a2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e7a6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e7a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e7ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e7b0:	eef0 6a62 	vmov.f32	s13, s5
 801e7b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e7b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e7bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e7c0:	ee16 4a90 	vmov	r4, s13
 801e7c4:	eef0 6a43 	vmov.f32	s13, s6
 801e7c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e7cc:	ee16 6a90 	vmov	r6, s13
 801e7d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e7d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e7d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e7dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e7e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e7e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e7e8:	ee12 2a90 	vmov	r2, s5
 801e7ec:	eef0 2a47 	vmov.f32	s5, s14
 801e7f0:	fb92 f3f3 	sdiv	r3, r2, r3
 801e7f4:	ee13 2a10 	vmov	r2, s6
 801e7f8:	9323      	str	r3, [sp, #140]	@ 0x8c
 801e7fa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e7fc:	eeb0 3a67 	vmov.f32	s6, s15
 801e800:	fb92 f3f3 	sdiv	r3, r2, r3
 801e804:	9324      	str	r3, [sp, #144]	@ 0x90
 801e806:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e808:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801e80a:	3b01      	subs	r3, #1
 801e80c:	930d      	str	r3, [sp, #52]	@ 0x34
 801e80e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e810:	bf08      	it	eq
 801e812:	4613      	moveq	r3, r2
 801e814:	9309      	str	r3, [sp, #36]	@ 0x24
 801e816:	e6c2      	b.n	801e59e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e818:	2900      	cmp	r1, #0
 801e81a:	f43f af4d 	beq.w	801e6b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801e81e:	eb0a 0003 	add.w	r0, sl, r3
 801e822:	0843      	lsrs	r3, r0, #1
 801e824:	07c0      	lsls	r0, r0, #31
 801e826:	5cfb      	ldrb	r3, [r7, r3]
 801e828:	bf54      	ite	pl
 801e82a:	f003 030f 	andpl.w	r3, r3, #15
 801e82e:	111b      	asrmi	r3, r3, #4
 801e830:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e834:	b2db      	uxtb	r3, r3
 801e836:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e838:	e73e      	b.n	801e6b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801e83a:	f8b8 e000 	ldrh.w	lr, [r8]
 801e83e:	fa1f fb83 	uxth.w	fp, r3
 801e842:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801e846:	43db      	mvns	r3, r3
 801e848:	ea4f 202e 	mov.w	r0, lr, asr #8
 801e84c:	fb11 f10b 	smulbb	r1, r1, fp
 801e850:	b2db      	uxtb	r3, r3
 801e852:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e856:	fa5f fc8c 	uxtb.w	ip, ip
 801e85a:	b2d2      	uxtb	r2, r2
 801e85c:	fb00 1003 	mla	r0, r0, r3, r1
 801e860:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801e864:	fb1c fc0b 	smulbb	ip, ip, fp
 801e868:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e86c:	b280      	uxth	r0, r0
 801e86e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e872:	fb12 fb0b 	smulbb	fp, r2, fp
 801e876:	fa5f fe8e 	uxtb.w	lr, lr
 801e87a:	fb01 cc03 	mla	ip, r1, r3, ip
 801e87e:	fb0e bb03 	mla	fp, lr, r3, fp
 801e882:	1c43      	adds	r3, r0, #1
 801e884:	fa1f fc8c 	uxth.w	ip, ip
 801e888:	fa1f fb8b 	uxth.w	fp, fp
 801e88c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e890:	f10c 0101 	add.w	r1, ip, #1
 801e894:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801e898:	f10b 0001 	add.w	r0, fp, #1
 801e89c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801e8a0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801e8a4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e8a8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801e8ac:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801e8b0:	4318      	orrs	r0, r3
 801e8b2:	ea40 000c 	orr.w	r0, r0, ip
 801e8b6:	f8a8 0000 	strh.w	r0, [r8]
 801e8ba:	e734      	b.n	801e726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e8bc:	f113 0b01 	adds.w	fp, r3, #1
 801e8c0:	f53f af31 	bmi.w	801e726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e8c4:	45dc      	cmp	ip, fp
 801e8c6:	f6ff af2e 	blt.w	801e726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e8ca:	f110 0b01 	adds.w	fp, r0, #1
 801e8ce:	f53f af2a 	bmi.w	801e726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e8d2:	45de      	cmp	lr, fp
 801e8d4:	f6ff af27 	blt.w	801e726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e8d8:	9302      	str	r3, [sp, #8]
 801e8da:	fa0f f38e 	sxth.w	r3, lr
 801e8de:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e8e0:	9301      	str	r3, [sp, #4]
 801e8e2:	fa0f f38c 	sxth.w	r3, ip
 801e8e6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801e8ea:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e8ee:	9300      	str	r3, [sp, #0]
 801e8f0:	463a      	mov	r2, r7
 801e8f2:	4653      	mov	r3, sl
 801e8f4:	4641      	mov	r1, r8
 801e8f6:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801e8f8:	f7ff fd4c 	bl	801e394 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801e8fc:	e713      	b.n	801e726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e8fe:	1422      	asrs	r2, r4, #16
 801e900:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801e902:	1433      	asrs	r3, r6, #16
 801e904:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e908:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e90c:	fb05 2303 	mla	r3, r5, r3, r2
 801e910:	085a      	lsrs	r2, r3, #1
 801e912:	07dd      	lsls	r5, r3, #31
 801e914:	5cba      	ldrb	r2, [r7, r2]
 801e916:	bf54      	ite	pl
 801e918:	f002 020f 	andpl.w	r2, r2, #15
 801e91c:	1112      	asrmi	r2, r2, #4
 801e91e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e922:	b2d2      	uxtb	r2, r2
 801e924:	2900      	cmp	r1, #0
 801e926:	d077      	beq.n	801ea18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801e928:	f103 0e01 	add.w	lr, r3, #1
 801e92c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801e930:	f01e 0f01 	tst.w	lr, #1
 801e934:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e938:	bf0c      	ite	eq
 801e93a:	f00c 0c0f 	andeq.w	ip, ip, #15
 801e93e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801e942:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e946:	fa5f f58c 	uxtb.w	r5, ip
 801e94a:	9512      	str	r5, [sp, #72]	@ 0x48
 801e94c:	b308      	cbz	r0, 801e992 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801e94e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e950:	442b      	add	r3, r5
 801e952:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801e956:	07dd      	lsls	r5, r3, #31
 801e958:	f103 0301 	add.w	r3, r3, #1
 801e95c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e960:	bf54      	ite	pl
 801e962:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e966:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e96a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e96e:	fa5f f58c 	uxtb.w	r5, ip
 801e972:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801e976:	950c      	str	r5, [sp, #48]	@ 0x30
 801e978:	07dd      	lsls	r5, r3, #31
 801e97a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e97e:	bf54      	ite	pl
 801e980:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e984:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e988:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e98c:	fa5f f38c 	uxtb.w	r3, ip
 801e990:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e992:	b289      	uxth	r1, r1
 801e994:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e996:	b280      	uxth	r0, r0
 801e998:	fb01 f300 	mul.w	r3, r1, r0
 801e99c:	0109      	lsls	r1, r1, #4
 801e99e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801e9a2:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801e9a6:	1ac9      	subs	r1, r1, r3
 801e9a8:	b280      	uxth	r0, r0
 801e9aa:	b289      	uxth	r1, r1
 801e9ac:	ebac 0c00 	sub.w	ip, ip, r0
 801e9b0:	4369      	muls	r1, r5
 801e9b2:	fa1f fc8c 	uxth.w	ip, ip
 801e9b6:	fb02 120c 	mla	r2, r2, ip, r1
 801e9ba:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801e9bc:	fb00 2001 	mla	r0, r0, r1, r2
 801e9c0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801e9c2:	fb03 0302 	mla	r3, r3, r2, r0
 801e9c6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e9ca:	b1d3      	cbz	r3, 801ea02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801e9cc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e9ce:	4353      	muls	r3, r2
 801e9d0:	1c5a      	adds	r2, r3, #1
 801e9d2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e9d6:	4a0f      	ldr	r2, [pc, #60]	@ (801ea14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801e9d8:	121b      	asrs	r3, r3, #8
 801e9da:	6812      	ldr	r2, [r2, #0]
 801e9dc:	2bff      	cmp	r3, #255	@ 0xff
 801e9de:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801e9e2:	d12d      	bne.n	801ea40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 801e9e4:	0953      	lsrs	r3, r2, #5
 801e9e6:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801e9ea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e9ee:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e9f2:	f02c 0c07 	bic.w	ip, ip, #7
 801e9f6:	ea43 0c0c 	orr.w	ip, r3, ip
 801e9fa:	ea4c 0202 	orr.w	r2, ip, r2
 801e9fe:	f8a8 2000 	strh.w	r2, [r8]
 801ea02:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801ea04:	f108 0802 	add.w	r8, r8, #2
 801ea08:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ea0c:	441c      	add	r4, r3
 801ea0e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ea10:	441e      	add	r6, r3
 801ea12:	e6b9      	b.n	801e788 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801ea14:	20016a10 	.word	0x20016a10
 801ea18:	2800      	cmp	r0, #0
 801ea1a:	d0ba      	beq.n	801e992 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801ea1c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ea1e:	442b      	add	r3, r5
 801ea20:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ea24:	07db      	lsls	r3, r3, #31
 801ea26:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ea2a:	bf54      	ite	pl
 801ea2c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ea30:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ea34:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ea38:	fa5f f38c 	uxtb.w	r3, ip
 801ea3c:	930c      	str	r3, [sp, #48]	@ 0x30
 801ea3e:	e7a8      	b.n	801e992 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801ea40:	f8b8 e000 	ldrh.w	lr, [r8]
 801ea44:	fa1f fa83 	uxth.w	sl, r3
 801ea48:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ea4c:	43db      	mvns	r3, r3
 801ea4e:	ea4f 202e 	mov.w	r0, lr, asr #8
 801ea52:	fb11 f10a 	smulbb	r1, r1, sl
 801ea56:	b2db      	uxtb	r3, r3
 801ea58:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ea5c:	b2d2      	uxtb	r2, r2
 801ea5e:	fa5f fc8c 	uxtb.w	ip, ip
 801ea62:	fb00 1003 	mla	r0, r0, r3, r1
 801ea66:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801ea6a:	fb12 f20a 	smulbb	r2, r2, sl
 801ea6e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ea72:	b280      	uxth	r0, r0
 801ea74:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ea78:	fb1c fc0a 	smulbb	ip, ip, sl
 801ea7c:	fa5f fe8e 	uxtb.w	lr, lr
 801ea80:	fb0e 2203 	mla	r2, lr, r3, r2
 801ea84:	fb01 cc03 	mla	ip, r1, r3, ip
 801ea88:	1c43      	adds	r3, r0, #1
 801ea8a:	b292      	uxth	r2, r2
 801ea8c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ea90:	1c51      	adds	r1, r2, #1
 801ea92:	fa1f fc8c 	uxth.w	ip, ip
 801ea96:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801ea9a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801ea9e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801eaa2:	4308      	orrs	r0, r1
 801eaa4:	f10c 0101 	add.w	r1, ip, #1
 801eaa8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801eaac:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801eab0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801eab4:	ea40 000c 	orr.w	r0, r0, ip
 801eab8:	f8a8 0000 	strh.w	r0, [r8]
 801eabc:	e7a1      	b.n	801ea02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801eabe:	b017      	add	sp, #92	@ 0x5c
 801eac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801eac4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801eac4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eac8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801eacc:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ead0:	2d00      	cmp	r5, #0
 801ead2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801ead6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801eada:	fb05 0e03 	mla	lr, r5, r3, r0
 801eade:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801eae2:	f2c0 80b0 	blt.w	801ec46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801eae6:	45a9      	cmp	r9, r5
 801eae8:	f340 80ad 	ble.w	801ec46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801eaec:	2800      	cmp	r0, #0
 801eaee:	f2c0 80a8 	blt.w	801ec42 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801eaf2:	4580      	cmp	r8, r0
 801eaf4:	f340 80a5 	ble.w	801ec42 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801eaf8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801eafc:	f01e 0f01 	tst.w	lr, #1
 801eb00:	5d16      	ldrb	r6, [r2, r4]
 801eb02:	bf0c      	ite	eq
 801eb04:	f006 060f 	andeq.w	r6, r6, #15
 801eb08:	1136      	asrne	r6, r6, #4
 801eb0a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801eb0e:	b2f6      	uxtb	r6, r6
 801eb10:	1c44      	adds	r4, r0, #1
 801eb12:	f100 809b 	bmi.w	801ec4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801eb16:	45a0      	cmp	r8, r4
 801eb18:	f340 8098 	ble.w	801ec4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801eb1c:	2f00      	cmp	r7, #0
 801eb1e:	f000 8097 	beq.w	801ec50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801eb22:	f10e 0a01 	add.w	sl, lr, #1
 801eb26:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801eb2a:	f01a 0f01 	tst.w	sl, #1
 801eb2e:	5d14      	ldrb	r4, [r2, r4]
 801eb30:	bf0c      	ite	eq
 801eb32:	f004 040f 	andeq.w	r4, r4, #15
 801eb36:	1124      	asrne	r4, r4, #4
 801eb38:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801eb3c:	b2e4      	uxtb	r4, r4
 801eb3e:	3501      	adds	r5, #1
 801eb40:	f100 808a 	bmi.w	801ec58 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801eb44:	45a9      	cmp	r9, r5
 801eb46:	f340 8087 	ble.w	801ec58 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801eb4a:	f1bc 0f00 	cmp.w	ip, #0
 801eb4e:	f000 8086 	beq.w	801ec5e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801eb52:	2800      	cmp	r0, #0
 801eb54:	db7e      	blt.n	801ec54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801eb56:	4580      	cmp	r8, r0
 801eb58:	dd7c      	ble.n	801ec54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801eb5a:	eb03 090e 	add.w	r9, r3, lr
 801eb5e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801eb62:	f019 0f01 	tst.w	r9, #1
 801eb66:	5d55      	ldrb	r5, [r2, r5]
 801eb68:	bf0c      	ite	eq
 801eb6a:	f005 050f 	andeq.w	r5, r5, #15
 801eb6e:	112d      	asrne	r5, r5, #4
 801eb70:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801eb74:	b2ed      	uxtb	r5, r5
 801eb76:	3001      	adds	r0, #1
 801eb78:	d474      	bmi.n	801ec64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801eb7a:	4580      	cmp	r8, r0
 801eb7c:	dd72      	ble.n	801ec64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801eb7e:	2f00      	cmp	r7, #0
 801eb80:	d072      	beq.n	801ec68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801eb82:	3301      	adds	r3, #1
 801eb84:	449e      	add	lr, r3
 801eb86:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801eb8a:	f01e 0f01 	tst.w	lr, #1
 801eb8e:	5cd0      	ldrb	r0, [r2, r3]
 801eb90:	bf0c      	ite	eq
 801eb92:	f000 000f 	andeq.w	r0, r0, #15
 801eb96:	1100      	asrne	r0, r0, #4
 801eb98:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801eb9c:	b2c3      	uxtb	r3, r0
 801eb9e:	b2ba      	uxth	r2, r7
 801eba0:	fa1f fc8c 	uxth.w	ip, ip
 801eba4:	fb02 f00c 	mul.w	r0, r2, ip
 801eba8:	0112      	lsls	r2, r2, #4
 801ebaa:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801ebae:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801ebb2:	1a12      	subs	r2, r2, r0
 801ebb4:	fa1f fc8c 	uxth.w	ip, ip
 801ebb8:	b292      	uxth	r2, r2
 801ebba:	eba7 070c 	sub.w	r7, r7, ip
 801ebbe:	4362      	muls	r2, r4
 801ebc0:	b2bf      	uxth	r7, r7
 801ebc2:	fb06 2207 	mla	r2, r6, r7, r2
 801ebc6:	fb0c 2505 	mla	r5, ip, r5, r2
 801ebca:	fb00 5303 	mla	r3, r0, r3, r5
 801ebce:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ebd2:	b3a3      	cbz	r3, 801ec3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801ebd4:	4a25      	ldr	r2, [pc, #148]	@ (801ec6c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801ebd6:	880e      	ldrh	r6, [r1, #0]
 801ebd8:	6815      	ldr	r5, [r2, #0]
 801ebda:	b29a      	uxth	r2, r3
 801ebdc:	1234      	asrs	r4, r6, #8
 801ebde:	43db      	mvns	r3, r3
 801ebe0:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801ebe4:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801ebe8:	b2db      	uxtb	r3, r3
 801ebea:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801ebee:	fb10 f002 	smulbb	r0, r0, r2
 801ebf2:	b2ed      	uxtb	r5, r5
 801ebf4:	fb17 f702 	smulbb	r7, r7, r2
 801ebf8:	fb04 0403 	mla	r4, r4, r3, r0
 801ebfc:	10f0      	asrs	r0, r6, #3
 801ebfe:	fb15 f202 	smulbb	r2, r5, r2
 801ec02:	00f6      	lsls	r6, r6, #3
 801ec04:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ec08:	b2a4      	uxth	r4, r4
 801ec0a:	b2f6      	uxtb	r6, r6
 801ec0c:	fb00 7003 	mla	r0, r0, r3, r7
 801ec10:	fb06 2303 	mla	r3, r6, r3, r2
 801ec14:	b280      	uxth	r0, r0
 801ec16:	b29a      	uxth	r2, r3
 801ec18:	1c63      	adds	r3, r4, #1
 801ec1a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801ec1e:	1c53      	adds	r3, r2, #1
 801ec20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ec24:	1c42      	adds	r2, r0, #1
 801ec26:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801ec2a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ec2e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ec32:	0940      	lsrs	r0, r0, #5
 801ec34:	4323      	orrs	r3, r4
 801ec36:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ec3a:	4303      	orrs	r3, r0
 801ec3c:	800b      	strh	r3, [r1, #0]
 801ec3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ec42:	2600      	movs	r6, #0
 801ec44:	e764      	b.n	801eb10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801ec46:	2400      	movs	r4, #0
 801ec48:	4626      	mov	r6, r4
 801ec4a:	e778      	b.n	801eb3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801ec4c:	2400      	movs	r4, #0
 801ec4e:	e776      	b.n	801eb3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801ec50:	463c      	mov	r4, r7
 801ec52:	e774      	b.n	801eb3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801ec54:	2500      	movs	r5, #0
 801ec56:	e78e      	b.n	801eb76 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801ec58:	2300      	movs	r3, #0
 801ec5a:	461d      	mov	r5, r3
 801ec5c:	e79f      	b.n	801eb9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801ec5e:	4663      	mov	r3, ip
 801ec60:	4665      	mov	r5, ip
 801ec62:	e79c      	b.n	801eb9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801ec64:	2300      	movs	r3, #0
 801ec66:	e79a      	b.n	801eb9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801ec68:	463b      	mov	r3, r7
 801ec6a:	e798      	b.n	801eb9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801ec6c:	20016a10 	.word	0x20016a10

0801ec70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ec70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec74:	b093      	sub	sp, #76	@ 0x4c
 801ec76:	461d      	mov	r5, r3
 801ec78:	920c      	str	r2, [sp, #48]	@ 0x30
 801ec7a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ec7c:	9011      	str	r0, [sp, #68]	@ 0x44
 801ec7e:	9107      	str	r1, [sp, #28]
 801ec80:	6850      	ldr	r0, [r2, #4]
 801ec82:	6812      	ldr	r2, [r2, #0]
 801ec84:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801ec88:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801ec8c:	fb00 1303 	mla	r3, r0, r3, r1
 801ec90:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ec94:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ec96:	689b      	ldr	r3, [r3, #8]
 801ec98:	3301      	adds	r3, #1
 801ec9a:	f023 0301 	bic.w	r3, r3, #1
 801ec9e:	9306      	str	r3, [sp, #24]
 801eca0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801eca2:	681f      	ldr	r7, [r3, #0]
 801eca4:	9b07      	ldr	r3, [sp, #28]
 801eca6:	2b00      	cmp	r3, #0
 801eca8:	dc03      	bgt.n	801ecb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ecaa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ecac:	2b00      	cmp	r3, #0
 801ecae:	f340 8267 	ble.w	801f180 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801ecb2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ecb4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ecb8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ecbc:	1e48      	subs	r0, r1, #1
 801ecbe:	f102 3cff 	add.w	ip, r2, #4294967295
 801ecc2:	2d00      	cmp	r5, #0
 801ecc4:	f340 80b7 	ble.w	801ee36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ecc8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801eccc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ecd0:	d406      	bmi.n	801ece0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ecd2:	4586      	cmp	lr, r0
 801ecd4:	da04      	bge.n	801ece0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ecd6:	2b00      	cmp	r3, #0
 801ecd8:	db02      	blt.n	801ece0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ecda:	4563      	cmp	r3, ip
 801ecdc:	f2c0 80ac 	blt.w	801ee38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ece0:	f11e 0e01 	adds.w	lr, lr, #1
 801ece4:	f100 809f 	bmi.w	801ee26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801ece8:	4571      	cmp	r1, lr
 801ecea:	f2c0 809c 	blt.w	801ee26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801ecee:	3301      	adds	r3, #1
 801ecf0:	f100 8099 	bmi.w	801ee26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801ecf4:	429a      	cmp	r2, r3
 801ecf6:	f2c0 8096 	blt.w	801ee26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801ecfa:	46c8      	mov	r8, r9
 801ecfc:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801ed00:	9509      	str	r5, [sp, #36]	@ 0x24
 801ed02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ed04:	2b00      	cmp	r3, #0
 801ed06:	f340 80b5 	ble.w	801ee74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ed0a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801ed0e:	1430      	asrs	r0, r6, #16
 801ed10:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ed14:	9308      	str	r3, [sp, #32]
 801ed16:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ed18:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801ed1c:	1423      	asrs	r3, r4, #16
 801ed1e:	f100 813f 	bmi.w	801efa0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ed22:	f10c 3bff 	add.w	fp, ip, #4294967295
 801ed26:	455b      	cmp	r3, fp
 801ed28:	f280 813a 	bge.w	801efa0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ed2c:	2800      	cmp	r0, #0
 801ed2e:	f2c0 8137 	blt.w	801efa0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ed32:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ed36:	4558      	cmp	r0, fp
 801ed38:	f280 8132 	bge.w	801efa0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ed3c:	9a06      	ldr	r2, [sp, #24]
 801ed3e:	fb00 3302 	mla	r3, r0, r2, r3
 801ed42:	0858      	lsrs	r0, r3, #1
 801ed44:	07da      	lsls	r2, r3, #31
 801ed46:	9a08      	ldr	r2, [sp, #32]
 801ed48:	f817 c000 	ldrb.w	ip, [r7, r0]
 801ed4c:	bf54      	ite	pl
 801ed4e:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ed52:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ed56:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ed5a:	fa5f fc8c 	uxtb.w	ip, ip
 801ed5e:	2a00      	cmp	r2, #0
 801ed60:	f000 80cc 	beq.w	801eefc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ed64:	1c58      	adds	r0, r3, #1
 801ed66:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801ed6a:	07c0      	lsls	r0, r0, #31
 801ed6c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ed70:	bf54      	ite	pl
 801ed72:	f00e 0e0f 	andpl.w	lr, lr, #15
 801ed76:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ed7a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ed7e:	fa5f fe8e 	uxtb.w	lr, lr
 801ed82:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 801ed86:	b1b9      	cbz	r1, 801edb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801ed88:	4453      	add	r3, sl
 801ed8a:	0858      	lsrs	r0, r3, #1
 801ed8c:	07da      	lsls	r2, r3, #31
 801ed8e:	5c38      	ldrb	r0, [r7, r0]
 801ed90:	bf54      	ite	pl
 801ed92:	f000 000f 	andpl.w	r0, r0, #15
 801ed96:	1100      	asrmi	r0, r0, #4
 801ed98:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ed9c:	b2c0      	uxtb	r0, r0
 801ed9e:	900a      	str	r0, [sp, #40]	@ 0x28
 801eda0:	1c58      	adds	r0, r3, #1
 801eda2:	0843      	lsrs	r3, r0, #1
 801eda4:	07c2      	lsls	r2, r0, #31
 801eda6:	5cfb      	ldrb	r3, [r7, r3]
 801eda8:	bf54      	ite	pl
 801edaa:	f003 030f 	andpl.w	r3, r3, #15
 801edae:	111b      	asrmi	r3, r3, #4
 801edb0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801edb4:	b2db      	uxtb	r3, r3
 801edb6:	930e      	str	r3, [sp, #56]	@ 0x38
 801edb8:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801edbc:	b289      	uxth	r1, r1
 801edbe:	fb02 f301 	mul.w	r3, r2, r1
 801edc2:	0112      	lsls	r2, r2, #4
 801edc4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801edc8:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801edcc:	1ad2      	subs	r2, r2, r3
 801edce:	b289      	uxth	r1, r1
 801edd0:	b292      	uxth	r2, r2
 801edd2:	1a40      	subs	r0, r0, r1
 801edd4:	fa1f fe80 	uxth.w	lr, r0
 801edd8:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801edda:	4342      	muls	r2, r0
 801eddc:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801ede0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ede2:	fb01 c102 	mla	r1, r1, r2, ip
 801ede6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801ede8:	fb03 1302 	mla	r3, r3, r2, r1
 801edec:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801edf0:	2bff      	cmp	r3, #255	@ 0xff
 801edf2:	f040 8094 	bne.w	801ef1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801edf6:	4bbf      	ldr	r3, [pc, #764]	@ (801f0f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801edf8:	681a      	ldr	r2, [r3, #0]
 801edfa:	4bbf      	ldr	r3, [pc, #764]	@ (801f0f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801edfc:	0951      	lsrs	r1, r2, #5
 801edfe:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801ee02:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ee06:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ee0a:	430b      	orrs	r3, r1
 801ee0c:	4313      	orrs	r3, r2
 801ee0e:	f8a8 3000 	strh.w	r3, [r8]
 801ee12:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ee14:	f108 0802 	add.w	r8, r8, #2
 801ee18:	441c      	add	r4, r3
 801ee1a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ee1c:	441e      	add	r6, r3
 801ee1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ee20:	3b01      	subs	r3, #1
 801ee22:	9309      	str	r3, [sp, #36]	@ 0x24
 801ee24:	e76d      	b.n	801ed02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ee26:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ee28:	3d01      	subs	r5, #1
 801ee2a:	f109 0902 	add.w	r9, r9, #2
 801ee2e:	441c      	add	r4, r3
 801ee30:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ee32:	441e      	add	r6, r3
 801ee34:	e745      	b.n	801ecc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ee36:	d021      	beq.n	801ee7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801ee38:	1e6b      	subs	r3, r5, #1
 801ee3a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801ee3c:	fb00 4003 	mla	r0, r0, r3, r4
 801ee40:	1400      	asrs	r0, r0, #16
 801ee42:	f53f af5a 	bmi.w	801ecfa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ee46:	3901      	subs	r1, #1
 801ee48:	4288      	cmp	r0, r1
 801ee4a:	f6bf af56 	bge.w	801ecfa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ee4e:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801ee50:	fb01 6303 	mla	r3, r1, r3, r6
 801ee54:	141b      	asrs	r3, r3, #16
 801ee56:	f53f af50 	bmi.w	801ecfa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ee5a:	3a01      	subs	r2, #1
 801ee5c:	4293      	cmp	r3, r2
 801ee5e:	f6bf af4c 	bge.w	801ecfa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ee62:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801ee66:	46a8      	mov	r8, r5
 801ee68:	46ce      	mov	lr, r9
 801ee6a:	9308      	str	r3, [sp, #32]
 801ee6c:	f1b8 0f00 	cmp.w	r8, #0
 801ee70:	f300 80b6 	bgt.w	801efe0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ee74:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ee78:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ee7c:	9b07      	ldr	r3, [sp, #28]
 801ee7e:	2b00      	cmp	r3, #0
 801ee80:	f340 817e 	ble.w	801f180 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801ee84:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ee88:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ee8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ee8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ee92:	eef0 6a62 	vmov.f32	s13, s5
 801ee96:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ee9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ee9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eea2:	ee16 4a90 	vmov	r4, s13
 801eea6:	eef0 6a43 	vmov.f32	s13, s6
 801eeaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eeae:	ee16 6a90 	vmov	r6, s13
 801eeb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eeb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eeba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eebe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eec2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eec6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eeca:	ee12 2a90 	vmov	r2, s5
 801eece:	eef0 2a47 	vmov.f32	s5, s14
 801eed2:	fb92 f3f3 	sdiv	r3, r2, r3
 801eed6:	ee13 2a10 	vmov	r2, s6
 801eeda:	931f      	str	r3, [sp, #124]	@ 0x7c
 801eedc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801eede:	eeb0 3a67 	vmov.f32	s6, s15
 801eee2:	fb92 f3f3 	sdiv	r3, r2, r3
 801eee6:	9320      	str	r3, [sp, #128]	@ 0x80
 801eee8:	9b07      	ldr	r3, [sp, #28]
 801eeea:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801eeec:	3b01      	subs	r3, #1
 801eeee:	9307      	str	r3, [sp, #28]
 801eef0:	bf08      	it	eq
 801eef2:	4615      	moveq	r5, r2
 801eef4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801eef6:	bf18      	it	ne
 801eef8:	461d      	movne	r5, r3
 801eefa:	e6d3      	b.n	801eca4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801eefc:	2900      	cmp	r1, #0
 801eefe:	f43f af5b 	beq.w	801edb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801ef02:	eb0a 0003 	add.w	r0, sl, r3
 801ef06:	0843      	lsrs	r3, r0, #1
 801ef08:	07c0      	lsls	r0, r0, #31
 801ef0a:	5cfb      	ldrb	r3, [r7, r3]
 801ef0c:	bf54      	ite	pl
 801ef0e:	f003 030f 	andpl.w	r3, r3, #15
 801ef12:	111b      	asrmi	r3, r3, #4
 801ef14:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ef18:	b2db      	uxtb	r3, r3
 801ef1a:	930a      	str	r3, [sp, #40]	@ 0x28
 801ef1c:	e74c      	b.n	801edb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801ef1e:	2b00      	cmp	r3, #0
 801ef20:	f43f af77 	beq.w	801ee12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801ef24:	4a73      	ldr	r2, [pc, #460]	@ (801f0f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801ef26:	fa1f fe83 	uxth.w	lr, r3
 801ef2a:	f8b8 c000 	ldrh.w	ip, [r8]
 801ef2e:	43db      	mvns	r3, r3
 801ef30:	6810      	ldr	r0, [r2, #0]
 801ef32:	ea4f 212c 	mov.w	r1, ip, asr #8
 801ef36:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801ef3a:	b2db      	uxtb	r3, r3
 801ef3c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ef40:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801ef44:	fb12 f20e 	smulbb	r2, r2, lr
 801ef48:	b2c0      	uxtb	r0, r0
 801ef4a:	fb1b fb0e 	smulbb	fp, fp, lr
 801ef4e:	fb01 2103 	mla	r1, r1, r3, r2
 801ef52:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ef56:	fb10 fe0e 	smulbb	lr, r0, lr
 801ef5a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ef5e:	b289      	uxth	r1, r1
 801ef60:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ef64:	fa5f fc8c 	uxtb.w	ip, ip
 801ef68:	fb02 b203 	mla	r2, r2, r3, fp
 801ef6c:	1c48      	adds	r0, r1, #1
 801ef6e:	fb0c e303 	mla	r3, ip, r3, lr
 801ef72:	b292      	uxth	r2, r2
 801ef74:	b29b      	uxth	r3, r3
 801ef76:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801ef7a:	f102 0b01 	add.w	fp, r2, #1
 801ef7e:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 801ef82:	1c59      	adds	r1, r3, #1
 801ef84:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801ef88:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ef8c:	0952      	lsrs	r2, r2, #5
 801ef8e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ef92:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ef96:	4301      	orrs	r1, r0
 801ef98:	4311      	orrs	r1, r2
 801ef9a:	f8a8 1000 	strh.w	r1, [r8]
 801ef9e:	e738      	b.n	801ee12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801efa0:	f113 0b01 	adds.w	fp, r3, #1
 801efa4:	f53f af35 	bmi.w	801ee12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801efa8:	45dc      	cmp	ip, fp
 801efaa:	f6ff af32 	blt.w	801ee12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801efae:	f110 0b01 	adds.w	fp, r0, #1
 801efb2:	f53f af2e 	bmi.w	801ee12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801efb6:	45de      	cmp	lr, fp
 801efb8:	f6ff af2b 	blt.w	801ee12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801efbc:	9302      	str	r3, [sp, #8]
 801efbe:	fa0f f38e 	sxth.w	r3, lr
 801efc2:	9a08      	ldr	r2, [sp, #32]
 801efc4:	9301      	str	r3, [sp, #4]
 801efc6:	fa0f f38c 	sxth.w	r3, ip
 801efca:	9105      	str	r1, [sp, #20]
 801efcc:	4641      	mov	r1, r8
 801efce:	9300      	str	r3, [sp, #0]
 801efd0:	4653      	mov	r3, sl
 801efd2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801efd6:	463a      	mov	r2, r7
 801efd8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801efda:	f7ff fd73 	bl	801eac4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801efde:	e718      	b.n	801ee12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801efe0:	1422      	asrs	r2, r4, #16
 801efe2:	9906      	ldr	r1, [sp, #24]
 801efe4:	1433      	asrs	r3, r6, #16
 801efe6:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801efea:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801efee:	fb01 2303 	mla	r3, r1, r3, r2
 801eff2:	085a      	lsrs	r2, r3, #1
 801eff4:	07d9      	lsls	r1, r3, #31
 801eff6:	5cba      	ldrb	r2, [r7, r2]
 801eff8:	bf54      	ite	pl
 801effa:	f002 020f 	andpl.w	r2, r2, #15
 801effe:	1112      	asrmi	r2, r2, #4
 801f000:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f004:	b2d2      	uxtb	r2, r2
 801f006:	2800      	cmp	r0, #0
 801f008:	d063      	beq.n	801f0d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 801f00a:	f103 0a01 	add.w	sl, r3, #1
 801f00e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801f012:	f01a 0f01 	tst.w	sl, #1
 801f016:	5c79      	ldrb	r1, [r7, r1]
 801f018:	bf0c      	ite	eq
 801f01a:	f001 010f 	andeq.w	r1, r1, #15
 801f01e:	1109      	asrne	r1, r1, #4
 801f020:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f024:	b2c9      	uxtb	r1, r1
 801f026:	910f      	str	r1, [sp, #60]	@ 0x3c
 801f028:	f1bc 0f00 	cmp.w	ip, #0
 801f02c:	d01a      	beq.n	801f064 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801f02e:	9908      	ldr	r1, [sp, #32]
 801f030:	440b      	add	r3, r1
 801f032:	0859      	lsrs	r1, r3, #1
 801f034:	f013 0f01 	tst.w	r3, #1
 801f038:	f103 0301 	add.w	r3, r3, #1
 801f03c:	5c79      	ldrb	r1, [r7, r1]
 801f03e:	bf0c      	ite	eq
 801f040:	f001 010f 	andeq.w	r1, r1, #15
 801f044:	1109      	asrne	r1, r1, #4
 801f046:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f04a:	b2c9      	uxtb	r1, r1
 801f04c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801f04e:	0859      	lsrs	r1, r3, #1
 801f050:	07db      	lsls	r3, r3, #31
 801f052:	5c79      	ldrb	r1, [r7, r1]
 801f054:	bf54      	ite	pl
 801f056:	f001 010f 	andpl.w	r1, r1, #15
 801f05a:	1109      	asrmi	r1, r1, #4
 801f05c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f060:	b2c9      	uxtb	r1, r1
 801f062:	9110      	str	r1, [sp, #64]	@ 0x40
 801f064:	b280      	uxth	r0, r0
 801f066:	fa1f fc8c 	uxth.w	ip, ip
 801f06a:	fb00 f30c 	mul.w	r3, r0, ip
 801f06e:	0100      	lsls	r0, r0, #4
 801f070:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801f074:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 801f078:	1ac0      	subs	r0, r0, r3
 801f07a:	fa1f fc8c 	uxth.w	ip, ip
 801f07e:	b280      	uxth	r0, r0
 801f080:	eba1 010c 	sub.w	r1, r1, ip
 801f084:	fa1f fa81 	uxth.w	sl, r1
 801f088:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801f08a:	4348      	muls	r0, r1
 801f08c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801f08e:	fb02 020a 	mla	r2, r2, sl, r0
 801f092:	fb0c 2c01 	mla	ip, ip, r1, r2
 801f096:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f098:	fb03 c302 	mla	r3, r3, r2, ip
 801f09c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f0a0:	2bff      	cmp	r3, #255	@ 0xff
 801f0a2:	d12b      	bne.n	801f0fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801f0a4:	4b13      	ldr	r3, [pc, #76]	@ (801f0f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f0a6:	681a      	ldr	r2, [r3, #0]
 801f0a8:	4b13      	ldr	r3, [pc, #76]	@ (801f0f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801f0aa:	0951      	lsrs	r1, r2, #5
 801f0ac:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801f0b0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f0b4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f0b8:	430b      	orrs	r3, r1
 801f0ba:	4313      	orrs	r3, r2
 801f0bc:	f8ae 3000 	strh.w	r3, [lr]
 801f0c0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f0c2:	f10e 0e02 	add.w	lr, lr, #2
 801f0c6:	f108 38ff 	add.w	r8, r8, #4294967295
 801f0ca:	441c      	add	r4, r3
 801f0cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f0ce:	441e      	add	r6, r3
 801f0d0:	e6cc      	b.n	801ee6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801f0d2:	f1bc 0f00 	cmp.w	ip, #0
 801f0d6:	d0c5      	beq.n	801f064 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801f0d8:	9908      	ldr	r1, [sp, #32]
 801f0da:	440b      	add	r3, r1
 801f0dc:	0859      	lsrs	r1, r3, #1
 801f0de:	07db      	lsls	r3, r3, #31
 801f0e0:	5c79      	ldrb	r1, [r7, r1]
 801f0e2:	bf54      	ite	pl
 801f0e4:	f001 010f 	andpl.w	r1, r1, #15
 801f0e8:	1109      	asrmi	r1, r1, #4
 801f0ea:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f0ee:	b2c9      	uxtb	r1, r1
 801f0f0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801f0f2:	e7b7      	b.n	801f064 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801f0f4:	20016a10 	.word	0x20016a10
 801f0f8:	fffff800 	.word	0xfffff800
 801f0fc:	2b00      	cmp	r3, #0
 801f0fe:	d0df      	beq.n	801f0c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801f100:	4a21      	ldr	r2, [pc, #132]	@ (801f188 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801f102:	fa1f fa83 	uxth.w	sl, r3
 801f106:	f8be c000 	ldrh.w	ip, [lr]
 801f10a:	43db      	mvns	r3, r3
 801f10c:	6810      	ldr	r0, [r2, #0]
 801f10e:	ea4f 212c 	mov.w	r1, ip, asr #8
 801f112:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801f116:	b2db      	uxtb	r3, r3
 801f118:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f11c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801f120:	fb12 f20a 	smulbb	r2, r2, sl
 801f124:	b2c0      	uxtb	r0, r0
 801f126:	fb1b fb0a 	smulbb	fp, fp, sl
 801f12a:	fb01 2103 	mla	r1, r1, r3, r2
 801f12e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f132:	fb10 f00a 	smulbb	r0, r0, sl
 801f136:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f13a:	b289      	uxth	r1, r1
 801f13c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f140:	fa5f fc8c 	uxtb.w	ip, ip
 801f144:	fb02 b203 	mla	r2, r2, r3, fp
 801f148:	fb0c 0003 	mla	r0, ip, r3, r0
 801f14c:	1c4b      	adds	r3, r1, #1
 801f14e:	b292      	uxth	r2, r2
 801f150:	b280      	uxth	r0, r0
 801f152:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f156:	f100 0b01 	add.w	fp, r0, #1
 801f15a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801f15e:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801f162:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801f166:	ea4b 0101 	orr.w	r1, fp, r1
 801f16a:	f102 0b01 	add.w	fp, r2, #1
 801f16e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801f172:	0952      	lsrs	r2, r2, #5
 801f174:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f178:	4311      	orrs	r1, r2
 801f17a:	f8ae 1000 	strh.w	r1, [lr]
 801f17e:	e79f      	b.n	801f0c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801f180:	b013      	add	sp, #76	@ 0x4c
 801f182:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f186:	bf00      	nop
 801f188:	20016a10 	.word	0x20016a10

0801f18c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801f18c:	b570      	push	{r4, r5, r6, lr}
 801f18e:	1208      	asrs	r0, r1, #8
 801f190:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801f194:	b29e      	uxth	r6, r3
 801f196:	1213      	asrs	r3, r2, #8
 801f198:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f19c:	10cc      	asrs	r4, r1, #3
 801f19e:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f1a2:	00c9      	lsls	r1, r1, #3
 801f1a4:	fb10 f006 	smulbb	r0, r0, r6
 801f1a8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801f1ac:	fb13 f305 	smulbb	r3, r3, r5
 801f1b0:	fb14 f406 	smulbb	r4, r4, r6
 801f1b4:	4418      	add	r0, r3
 801f1b6:	10d3      	asrs	r3, r2, #3
 801f1b8:	00d2      	lsls	r2, r2, #3
 801f1ba:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f1be:	b280      	uxth	r0, r0
 801f1c0:	b2d2      	uxtb	r2, r2
 801f1c2:	fb13 f305 	smulbb	r3, r3, r5
 801f1c6:	fb12 f205 	smulbb	r2, r2, r5
 801f1ca:	441c      	add	r4, r3
 801f1cc:	b2cb      	uxtb	r3, r1
 801f1ce:	fb13 f306 	smulbb	r3, r3, r6
 801f1d2:	b2a4      	uxth	r4, r4
 801f1d4:	4413      	add	r3, r2
 801f1d6:	1c42      	adds	r2, r0, #1
 801f1d8:	b29b      	uxth	r3, r3
 801f1da:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f1de:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 801f1e2:	1c58      	adds	r0, r3, #1
 801f1e4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801f1e8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f1ec:	4310      	orrs	r0, r2
 801f1ee:	1c62      	adds	r2, r4, #1
 801f1f0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801f1f4:	0964      	lsrs	r4, r4, #5
 801f1f6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801f1fa:	4320      	orrs	r0, r4
 801f1fc:	bd70      	pop	{r4, r5, r6, pc}
	...

0801f200 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f204:	b08f      	sub	sp, #60	@ 0x3c
 801f206:	461c      	mov	r4, r3
 801f208:	460d      	mov	r5, r1
 801f20a:	4616      	mov	r6, r2
 801f20c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801f210:	9004      	str	r0, [sp, #16]
 801f212:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f214:	2f00      	cmp	r7, #0
 801f216:	f000 80f6 	beq.w	801f406 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801f21a:	6820      	ldr	r0, [r4, #0]
 801f21c:	aa0a      	add	r2, sp, #40	@ 0x28
 801f21e:	6861      	ldr	r1, [r4, #4]
 801f220:	f04f 0802 	mov.w	r8, #2
 801f224:	3604      	adds	r6, #4
 801f226:	c203      	stmia	r2!, {r0, r1}
 801f228:	6818      	ldr	r0, [r3, #0]
 801f22a:	aa0c      	add	r2, sp, #48	@ 0x30
 801f22c:	6859      	ldr	r1, [r3, #4]
 801f22e:	c203      	stmia	r2!, {r0, r1}
 801f230:	a80a      	add	r0, sp, #40	@ 0x28
 801f232:	f7ef fde1 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f236:	4621      	mov	r1, r4
 801f238:	a80c      	add	r0, sp, #48	@ 0x30
 801f23a:	f7ef fe05 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f23e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801f242:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801f246:	f002 0301 	and.w	r3, r2, #1
 801f24a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801f24e:	9306      	str	r3, [sp, #24]
 801f250:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801f254:	f003 0101 	and.w	r1, r3, #1
 801f258:	9105      	str	r1, [sp, #20]
 801f25a:	9805      	ldr	r0, [sp, #20]
 801f25c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801f260:	4403      	add	r3, r0
 801f262:	fb01 2303 	mla	r3, r1, r3, r2
 801f266:	fb93 f3f8 	sdiv	r3, r3, r8
 801f26a:	441d      	add	r5, r3
 801f26c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801f270:	441a      	add	r2, r3
 801f272:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801f276:	4419      	add	r1, r3
 801f278:	4b64      	ldr	r3, [pc, #400]	@ (801f40c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801f27a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801f27e:	6818      	ldr	r0, [r3, #0]
 801f280:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801f284:	6803      	ldr	r3, [r0, #0]
 801f286:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f288:	4798      	blx	r3
 801f28a:	4a61      	ldr	r2, [pc, #388]	@ (801f410 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801f28c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801f290:	2fff      	cmp	r7, #255	@ 0xff
 801f292:	8813      	ldrh	r3, [r2, #0]
 801f294:	4611      	mov	r1, r2
 801f296:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 801f29a:	fb03 fb0b 	mul.w	fp, r3, fp
 801f29e:	fb03 a404 	mla	r4, r3, r4, sl
 801f2a2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f2a6:	d06b      	beq.n	801f380 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 801f2a8:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 801f2ac:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801f2b0:	9303      	str	r3, [sp, #12]
 801f2b2:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801f2b6:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801f2ba:	9b07      	ldr	r3, [sp, #28]
 801f2bc:	42a3      	cmp	r3, r4
 801f2be:	f240 809d 	bls.w	801f3fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801f2c2:	9b06      	ldr	r3, [sp, #24]
 801f2c4:	2b00      	cmp	r3, #0
 801f2c6:	d039      	beq.n	801f33c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 801f2c8:	782b      	ldrb	r3, [r5, #0]
 801f2ca:	f105 0801 	add.w	r8, r5, #1
 801f2ce:	f109 3bff 	add.w	fp, r9, #4294967295
 801f2d2:	8822      	ldrh	r2, [r4, #0]
 801f2d4:	f003 030f 	and.w	r3, r3, #15
 801f2d8:	9804      	ldr	r0, [sp, #16]
 801f2da:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801f2de:	9b03      	ldr	r3, [sp, #12]
 801f2e0:	9300      	str	r3, [sp, #0]
 801f2e2:	463b      	mov	r3, r7
 801f2e4:	f7ff ff52 	bl	801f18c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801f2e8:	f824 0b02 	strh.w	r0, [r4], #2
 801f2ec:	f1bb 0f01 	cmp.w	fp, #1
 801f2f0:	46a2      	mov	sl, r4
 801f2f2:	f104 0404 	add.w	r4, r4, #4
 801f2f6:	dd24      	ble.n	801f342 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 801f2f8:	f898 3000 	ldrb.w	r3, [r8]
 801f2fc:	f1ab 0b02 	sub.w	fp, fp, #2
 801f300:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801f304:	091b      	lsrs	r3, r3, #4
 801f306:	9804      	ldr	r0, [sp, #16]
 801f308:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801f30c:	9b03      	ldr	r3, [sp, #12]
 801f30e:	9300      	str	r3, [sp, #0]
 801f310:	463b      	mov	r3, r7
 801f312:	f7ff ff3b 	bl	801f18c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801f316:	f824 0c04 	strh.w	r0, [r4, #-4]
 801f31a:	f818 3b01 	ldrb.w	r3, [r8], #1
 801f31e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801f322:	f003 030f 	and.w	r3, r3, #15
 801f326:	9804      	ldr	r0, [sp, #16]
 801f328:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801f32c:	9b03      	ldr	r3, [sp, #12]
 801f32e:	9300      	str	r3, [sp, #0]
 801f330:	463b      	mov	r3, r7
 801f332:	f7ff ff2b 	bl	801f18c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801f336:	f824 0c02 	strh.w	r0, [r4, #-2]
 801f33a:	e7d7      	b.n	801f2ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 801f33c:	46a8      	mov	r8, r5
 801f33e:	46cb      	mov	fp, r9
 801f340:	e7d4      	b.n	801f2ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 801f342:	d10e      	bne.n	801f362 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 801f344:	f898 3000 	ldrb.w	r3, [r8]
 801f348:	f8ba 2000 	ldrh.w	r2, [sl]
 801f34c:	091b      	lsrs	r3, r3, #4
 801f34e:	9804      	ldr	r0, [sp, #16]
 801f350:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801f354:	9b03      	ldr	r3, [sp, #12]
 801f356:	9300      	str	r3, [sp, #0]
 801f358:	463b      	mov	r3, r7
 801f35a:	f7ff ff17 	bl	801f18c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801f35e:	f82a 0b02 	strh.w	r0, [sl], #2
 801f362:	9b08      	ldr	r3, [sp, #32]
 801f364:	9a05      	ldr	r2, [sp, #20]
 801f366:	881c      	ldrh	r4, [r3, #0]
 801f368:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801f36c:	eba4 0409 	sub.w	r4, r4, r9
 801f370:	4413      	add	r3, r2
 801f372:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f374:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801f378:	fb93 f3f2 	sdiv	r3, r3, r2
 801f37c:	441d      	add	r5, r3
 801f37e:	e79c      	b.n	801f2ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 801f380:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801f384:	45a3      	cmp	fp, r4
 801f386:	d939      	bls.n	801f3fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801f388:	9b06      	ldr	r3, [sp, #24]
 801f38a:	b1fb      	cbz	r3, 801f3cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801f38c:	782b      	ldrb	r3, [r5, #0]
 801f38e:	1c6a      	adds	r2, r5, #1
 801f390:	f109 30ff 	add.w	r0, r9, #4294967295
 801f394:	3402      	adds	r4, #2
 801f396:	f003 030f 	and.w	r3, r3, #15
 801f39a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f39e:	f824 3c02 	strh.w	r3, [r4, #-2]
 801f3a2:	2801      	cmp	r0, #1
 801f3a4:	4623      	mov	r3, r4
 801f3a6:	f104 0404 	add.w	r4, r4, #4
 801f3aa:	dd12      	ble.n	801f3d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 801f3ac:	7813      	ldrb	r3, [r2, #0]
 801f3ae:	3802      	subs	r0, #2
 801f3b0:	091b      	lsrs	r3, r3, #4
 801f3b2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f3b6:	f824 3c04 	strh.w	r3, [r4, #-4]
 801f3ba:	f812 3b01 	ldrb.w	r3, [r2], #1
 801f3be:	f003 030f 	and.w	r3, r3, #15
 801f3c2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f3c6:	f824 3c02 	strh.w	r3, [r4, #-2]
 801f3ca:	e7ea      	b.n	801f3a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801f3cc:	462a      	mov	r2, r5
 801f3ce:	4648      	mov	r0, r9
 801f3d0:	e7e7      	b.n	801f3a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801f3d2:	d106      	bne.n	801f3e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 801f3d4:	7812      	ldrb	r2, [r2, #0]
 801f3d6:	3302      	adds	r3, #2
 801f3d8:	0912      	lsrs	r2, r2, #4
 801f3da:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801f3de:	f823 2c02 	strh.w	r2, [r3, #-2]
 801f3e2:	880c      	ldrh	r4, [r1, #0]
 801f3e4:	9a05      	ldr	r2, [sp, #20]
 801f3e6:	eba4 0409 	sub.w	r4, r4, r9
 801f3ea:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801f3ee:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801f3f2:	4413      	add	r3, r2
 801f3f4:	fb93 f3f8 	sdiv	r3, r3, r8
 801f3f8:	441d      	add	r5, r3
 801f3fa:	e7c3      	b.n	801f384 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 801f3fc:	4b03      	ldr	r3, [pc, #12]	@ (801f40c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801f3fe:	6818      	ldr	r0, [r3, #0]
 801f400:	6803      	ldr	r3, [r0, #0]
 801f402:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f404:	4798      	blx	r3
 801f406:	b00f      	add	sp, #60	@ 0x3c
 801f408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f40c:	20016a00 	.word	0x20016a00
 801f410:	200169fa 	.word	0x200169fa

0801f414 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 801f414:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f416:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801f41a:	0a0f      	lsrs	r7, r1, #8
 801f41c:	2dff      	cmp	r5, #255	@ 0xff
 801f41e:	d10c      	bne.n	801f43a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801f420:	2bff      	cmp	r3, #255	@ 0xff
 801f422:	d10a      	bne.n	801f43a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801f424:	0948      	lsrs	r0, r1, #5
 801f426:	4b25      	ldr	r3, [pc, #148]	@ (801f4bc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 801f428:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f42c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f430:	403b      	ands	r3, r7
 801f432:	4318      	orrs	r0, r3
 801f434:	4308      	orrs	r0, r1
 801f436:	b280      	uxth	r0, r0
 801f438:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f43a:	fb15 f503 	smulbb	r5, r5, r3
 801f43e:	1214      	asrs	r4, r2, #8
 801f440:	10d6      	asrs	r6, r2, #3
 801f442:	b2ab      	uxth	r3, r5
 801f444:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f448:	00d0      	lsls	r0, r2, #3
 801f44a:	f3c1 4207 	ubfx	r2, r1, #16, #8
 801f44e:	1c5d      	adds	r5, r3, #1
 801f450:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f454:	b2c0      	uxtb	r0, r0
 801f456:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f45a:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 801f45e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801f462:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f466:	fa1f fc85 	uxth.w	ip, r5
 801f46a:	43ed      	mvns	r5, r5
 801f46c:	fb12 f20c 	smulbb	r2, r2, ip
 801f470:	b2eb      	uxtb	r3, r5
 801f472:	b2fd      	uxtb	r5, r7
 801f474:	fb04 2403 	mla	r4, r4, r3, r2
 801f478:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 801f47c:	fb15 f50c 	smulbb	r5, r5, ip
 801f480:	b2c8      	uxtb	r0, r1
 801f482:	b2a4      	uxth	r4, r4
 801f484:	fb10 f00c 	smulbb	r0, r0, ip
 801f488:	fb06 5503 	mla	r5, r6, r3, r5
 801f48c:	fb02 0003 	mla	r0, r2, r3, r0
 801f490:	b2ad      	uxth	r5, r5
 801f492:	b283      	uxth	r3, r0
 801f494:	1c60      	adds	r0, r4, #1
 801f496:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 801f49a:	1c58      	adds	r0, r3, #1
 801f49c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801f4a0:	1c6b      	adds	r3, r5, #1
 801f4a2:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801f4a6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f4aa:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f4ae:	096d      	lsrs	r5, r5, #5
 801f4b0:	4320      	orrs	r0, r4
 801f4b2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f4b6:	4328      	orrs	r0, r5
 801f4b8:	e7be      	b.n	801f438 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 801f4ba:	bf00      	nop
 801f4bc:	00fff800 	.word	0x00fff800

0801f4c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801f4c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f4c4:	461c      	mov	r4, r3
 801f4c6:	b08d      	sub	sp, #52	@ 0x34
 801f4c8:	460d      	mov	r5, r1
 801f4ca:	4616      	mov	r6, r2
 801f4cc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f4ce:	4680      	mov	r8, r0
 801f4d0:	6861      	ldr	r1, [r4, #4]
 801f4d2:	aa08      	add	r2, sp, #32
 801f4d4:	6820      	ldr	r0, [r4, #0]
 801f4d6:	f04f 0a02 	mov.w	sl, #2
 801f4da:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 801f4de:	3604      	adds	r6, #4
 801f4e0:	c203      	stmia	r2!, {r0, r1}
 801f4e2:	6818      	ldr	r0, [r3, #0]
 801f4e4:	aa0a      	add	r2, sp, #40	@ 0x28
 801f4e6:	6859      	ldr	r1, [r3, #4]
 801f4e8:	c203      	stmia	r2!, {r0, r1}
 801f4ea:	a808      	add	r0, sp, #32
 801f4ec:	f7ef fc84 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f4f0:	4621      	mov	r1, r4
 801f4f2:	a80a      	add	r0, sp, #40	@ 0x28
 801f4f4:	f7ef fca8 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f4f8:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801f4fc:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 801f500:	f002 0301 	and.w	r3, r2, #1
 801f504:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 801f508:	9303      	str	r3, [sp, #12]
 801f50a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801f50e:	f003 0101 	and.w	r1, r3, #1
 801f512:	9102      	str	r1, [sp, #8]
 801f514:	9802      	ldr	r0, [sp, #8]
 801f516:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801f51a:	4403      	add	r3, r0
 801f51c:	fb01 2303 	mla	r3, r1, r3, r2
 801f520:	fb93 f3fa 	sdiv	r3, r3, sl
 801f524:	441d      	add	r5, r3
 801f526:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801f52a:	441a      	add	r2, r3
 801f52c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801f530:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801f534:	4419      	add	r1, r3
 801f536:	4a3e      	ldr	r2, [pc, #248]	@ (801f630 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 801f538:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 801f53c:	6810      	ldr	r0, [r2, #0]
 801f53e:	9205      	str	r2, [sp, #20]
 801f540:	6803      	ldr	r3, [r0, #0]
 801f542:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f544:	4798      	blx	r3
 801f546:	4b3b      	ldr	r3, [pc, #236]	@ (801f634 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 801f548:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 801f54c:	8819      	ldrh	r1, [r3, #0]
 801f54e:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 801f552:	434f      	muls	r7, r1
 801f554:	fb01 c404 	mla	r4, r1, r4, ip
 801f558:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f55c:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 801f560:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 801f564:	9204      	str	r2, [sp, #16]
 801f566:	9b04      	ldr	r3, [sp, #16]
 801f568:	429c      	cmp	r4, r3
 801f56a:	d258      	bcs.n	801f61e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 801f56c:	9b03      	ldr	r3, [sp, #12]
 801f56e:	2b00      	cmp	r3, #0
 801f570:	d034      	beq.n	801f5dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 801f572:	782b      	ldrb	r3, [r5, #0]
 801f574:	1c6f      	adds	r7, r5, #1
 801f576:	f003 030f 	and.w	r3, r3, #15
 801f57a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801f57e:	0e0b      	lsrs	r3, r1, #24
 801f580:	d006      	beq.n	801f590 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 801f582:	8822      	ldrh	r2, [r4, #0]
 801f584:	4640      	mov	r0, r8
 801f586:	9300      	str	r3, [sp, #0]
 801f588:	464b      	mov	r3, r9
 801f58a:	f7ff ff43 	bl	801f414 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801f58e:	8020      	strh	r0, [r4, #0]
 801f590:	3402      	adds	r4, #2
 801f592:	f10b 3aff 	add.w	sl, fp, #4294967295
 801f596:	f1ba 0f01 	cmp.w	sl, #1
 801f59a:	dd22      	ble.n	801f5e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801f59c:	783b      	ldrb	r3, [r7, #0]
 801f59e:	091b      	lsrs	r3, r3, #4
 801f5a0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801f5a4:	0e0b      	lsrs	r3, r1, #24
 801f5a6:	d006      	beq.n	801f5b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 801f5a8:	8822      	ldrh	r2, [r4, #0]
 801f5aa:	4640      	mov	r0, r8
 801f5ac:	9300      	str	r3, [sp, #0]
 801f5ae:	464b      	mov	r3, r9
 801f5b0:	f7ff ff30 	bl	801f414 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801f5b4:	8020      	strh	r0, [r4, #0]
 801f5b6:	f817 3b01 	ldrb.w	r3, [r7], #1
 801f5ba:	f003 030f 	and.w	r3, r3, #15
 801f5be:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801f5c2:	0e0b      	lsrs	r3, r1, #24
 801f5c4:	d006      	beq.n	801f5d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 801f5c6:	8862      	ldrh	r2, [r4, #2]
 801f5c8:	4640      	mov	r0, r8
 801f5ca:	9300      	str	r3, [sp, #0]
 801f5cc:	464b      	mov	r3, r9
 801f5ce:	f7ff ff21 	bl	801f414 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801f5d2:	8060      	strh	r0, [r4, #2]
 801f5d4:	3404      	adds	r4, #4
 801f5d6:	f1aa 0a02 	sub.w	sl, sl, #2
 801f5da:	e7dc      	b.n	801f596 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801f5dc:	462f      	mov	r7, r5
 801f5de:	46da      	mov	sl, fp
 801f5e0:	e7d9      	b.n	801f596 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801f5e2:	d10d      	bne.n	801f600 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 801f5e4:	783b      	ldrb	r3, [r7, #0]
 801f5e6:	091b      	lsrs	r3, r3, #4
 801f5e8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801f5ec:	0e0b      	lsrs	r3, r1, #24
 801f5ee:	d006      	beq.n	801f5fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 801f5f0:	8822      	ldrh	r2, [r4, #0]
 801f5f2:	4640      	mov	r0, r8
 801f5f4:	9300      	str	r3, [sp, #0]
 801f5f6:	464b      	mov	r3, r9
 801f5f8:	f7ff ff0c 	bl	801f414 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801f5fc:	8020      	strh	r0, [r4, #0]
 801f5fe:	3402      	adds	r4, #2
 801f600:	9b06      	ldr	r3, [sp, #24]
 801f602:	9a02      	ldr	r2, [sp, #8]
 801f604:	881b      	ldrh	r3, [r3, #0]
 801f606:	eba3 030b 	sub.w	r3, r3, fp
 801f60a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f60e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801f612:	4413      	add	r3, r2
 801f614:	9a07      	ldr	r2, [sp, #28]
 801f616:	fb93 f3f2 	sdiv	r3, r3, r2
 801f61a:	441d      	add	r5, r3
 801f61c:	e7a3      	b.n	801f566 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 801f61e:	9b05      	ldr	r3, [sp, #20]
 801f620:	6818      	ldr	r0, [r3, #0]
 801f622:	6803      	ldr	r3, [r0, #0]
 801f624:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f626:	4798      	blx	r3
 801f628:	b00d      	add	sp, #52	@ 0x34
 801f62a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f62e:	bf00      	nop
 801f630:	20016a00 	.word	0x20016a00
 801f634:	200169fa 	.word	0x200169fa

0801f638 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 801f638:	b570      	push	{r4, r5, r6, lr}
 801f63a:	1214      	asrs	r4, r2, #8
 801f63c:	788d      	ldrb	r5, [r1, #2]
 801f63e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801f642:	10d0      	asrs	r0, r2, #3
 801f644:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f648:	00d2      	lsls	r2, r2, #3
 801f64a:	fb15 f503 	smulbb	r5, r5, r3
 801f64e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f652:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f656:	b2d2      	uxtb	r2, r2
 801f658:	fb04 5506 	mla	r5, r4, r6, r5
 801f65c:	784c      	ldrb	r4, [r1, #1]
 801f65e:	7809      	ldrb	r1, [r1, #0]
 801f660:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 801f664:	fb14 f403 	smulbb	r4, r4, r3
 801f668:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f66c:	fb11 f303 	smulbb	r3, r1, r3
 801f670:	b2ad      	uxth	r5, r5
 801f672:	fb00 4406 	mla	r4, r0, r6, r4
 801f676:	fb02 3306 	mla	r3, r2, r6, r3
 801f67a:	1c68      	adds	r0, r5, #1
 801f67c:	b2a4      	uxth	r4, r4
 801f67e:	b29b      	uxth	r3, r3
 801f680:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801f684:	1c62      	adds	r2, r4, #1
 801f686:	1c58      	adds	r0, r3, #1
 801f688:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801f68c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f690:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801f694:	0964      	lsrs	r4, r4, #5
 801f696:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f69a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801f69e:	4328      	orrs	r0, r5
 801f6a0:	4320      	orrs	r0, r4
 801f6a2:	bd70      	pop	{r4, r5, r6, pc}

0801f6a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801f6a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f6a8:	b08f      	sub	sp, #60	@ 0x3c
 801f6aa:	461c      	mov	r4, r3
 801f6ac:	4682      	mov	sl, r0
 801f6ae:	460e      	mov	r6, r1
 801f6b0:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801f6b4:	4615      	mov	r5, r2
 801f6b6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f6b8:	2f00      	cmp	r7, #0
 801f6ba:	f000 8141 	beq.w	801f940 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 801f6be:	6820      	ldr	r0, [r4, #0]
 801f6c0:	aa0a      	add	r2, sp, #40	@ 0x28
 801f6c2:	6861      	ldr	r1, [r4, #4]
 801f6c4:	f04f 0802 	mov.w	r8, #2
 801f6c8:	3504      	adds	r5, #4
 801f6ca:	c203      	stmia	r2!, {r0, r1}
 801f6cc:	6818      	ldr	r0, [r3, #0]
 801f6ce:	aa0c      	add	r2, sp, #48	@ 0x30
 801f6d0:	6859      	ldr	r1, [r3, #4]
 801f6d2:	c203      	stmia	r2!, {r0, r1}
 801f6d4:	a80a      	add	r0, sp, #40	@ 0x28
 801f6d6:	f7ef fb8f 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f6da:	4621      	mov	r1, r4
 801f6dc:	a80c      	add	r0, sp, #48	@ 0x30
 801f6de:	f7ef fbb3 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f6e2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801f6e6:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801f6ea:	f002 0301 	and.w	r3, r2, #1
 801f6ee:	9306      	str	r3, [sp, #24]
 801f6f0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801f6f4:	f003 0101 	and.w	r1, r3, #1
 801f6f8:	9105      	str	r1, [sp, #20]
 801f6fa:	9805      	ldr	r0, [sp, #20]
 801f6fc:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801f700:	4403      	add	r3, r0
 801f702:	fb01 2303 	mla	r3, r1, r3, r2
 801f706:	fb93 f3f8 	sdiv	r3, r3, r8
 801f70a:	441e      	add	r6, r3
 801f70c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801f710:	441a      	add	r2, r3
 801f712:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801f716:	4419      	add	r1, r3
 801f718:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801f71c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801f720:	9303      	str	r3, [sp, #12]
 801f722:	4b89      	ldr	r3, [pc, #548]	@ (801f948 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801f724:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801f728:	6818      	ldr	r0, [r3, #0]
 801f72a:	6803      	ldr	r3, [r0, #0]
 801f72c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f72e:	4798      	blx	r3
 801f730:	4a86      	ldr	r2, [pc, #536]	@ (801f94c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 801f732:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801f736:	2fff      	cmp	r7, #255	@ 0xff
 801f738:	8813      	ldrh	r3, [r2, #0]
 801f73a:	4694      	mov	ip, r2
 801f73c:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 801f740:	fb03 9404 	mla	r4, r3, r4, r9
 801f744:	fb03 f30b 	mul.w	r3, r3, fp
 801f748:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f74c:	d071      	beq.n	801f832 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 801f74e:	43f9      	mvns	r1, r7
 801f750:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f754:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801f758:	b2c9      	uxtb	r1, r1
 801f75a:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801f75e:	9104      	str	r1, [sp, #16]
 801f760:	9b07      	ldr	r3, [sp, #28]
 801f762:	42a3      	cmp	r3, r4
 801f764:	f240 80e7 	bls.w	801f936 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 801f768:	9b06      	ldr	r3, [sp, #24]
 801f76a:	2b00      	cmp	r3, #0
 801f76c:	d03d      	beq.n	801f7ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 801f76e:	7831      	ldrb	r1, [r6, #0]
 801f770:	4650      	mov	r0, sl
 801f772:	9b04      	ldr	r3, [sp, #16]
 801f774:	f106 0801 	add.w	r8, r6, #1
 801f778:	f001 010f 	and.w	r1, r1, #15
 801f77c:	8822      	ldrh	r2, [r4, #0]
 801f77e:	9300      	str	r3, [sp, #0]
 801f780:	463b      	mov	r3, r7
 801f782:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801f786:	4429      	add	r1, r5
 801f788:	f7ff ff56 	bl	801f638 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801f78c:	9b03      	ldr	r3, [sp, #12]
 801f78e:	f824 0b02 	strh.w	r0, [r4], #2
 801f792:	f103 3bff 	add.w	fp, r3, #4294967295
 801f796:	f1bb 0f01 	cmp.w	fp, #1
 801f79a:	46a1      	mov	r9, r4
 801f79c:	f104 0404 	add.w	r4, r4, #4
 801f7a0:	dd27      	ble.n	801f7f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 801f7a2:	f898 1000 	ldrb.w	r1, [r8]
 801f7a6:	4650      	mov	r0, sl
 801f7a8:	9b04      	ldr	r3, [sp, #16]
 801f7aa:	f1ab 0b02 	sub.w	fp, fp, #2
 801f7ae:	0909      	lsrs	r1, r1, #4
 801f7b0:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801f7b4:	9300      	str	r3, [sp, #0]
 801f7b6:	463b      	mov	r3, r7
 801f7b8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801f7bc:	4429      	add	r1, r5
 801f7be:	f7ff ff3b 	bl	801f638 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801f7c2:	f824 0c04 	strh.w	r0, [r4, #-4]
 801f7c6:	f818 1b01 	ldrb.w	r1, [r8], #1
 801f7ca:	4650      	mov	r0, sl
 801f7cc:	9b04      	ldr	r3, [sp, #16]
 801f7ce:	f001 010f 	and.w	r1, r1, #15
 801f7d2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801f7d6:	9300      	str	r3, [sp, #0]
 801f7d8:	463b      	mov	r3, r7
 801f7da:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801f7de:	4429      	add	r1, r5
 801f7e0:	f7ff ff2a 	bl	801f638 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801f7e4:	f824 0c02 	strh.w	r0, [r4, #-2]
 801f7e8:	e7d5      	b.n	801f796 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 801f7ea:	46b0      	mov	r8, r6
 801f7ec:	f8dd b00c 	ldr.w	fp, [sp, #12]
 801f7f0:	e7d1      	b.n	801f796 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 801f7f2:	d10f      	bne.n	801f814 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 801f7f4:	f898 1000 	ldrb.w	r1, [r8]
 801f7f8:	4650      	mov	r0, sl
 801f7fa:	9b04      	ldr	r3, [sp, #16]
 801f7fc:	0909      	lsrs	r1, r1, #4
 801f7fe:	f8b9 2000 	ldrh.w	r2, [r9]
 801f802:	9300      	str	r3, [sp, #0]
 801f804:	463b      	mov	r3, r7
 801f806:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801f80a:	4429      	add	r1, r5
 801f80c:	f7ff ff14 	bl	801f638 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801f810:	f829 0b02 	strh.w	r0, [r9], #2
 801f814:	9b08      	ldr	r3, [sp, #32]
 801f816:	9a05      	ldr	r2, [sp, #20]
 801f818:	881c      	ldrh	r4, [r3, #0]
 801f81a:	9b03      	ldr	r3, [sp, #12]
 801f81c:	1ae4      	subs	r4, r4, r3
 801f81e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801f822:	4413      	add	r3, r2
 801f824:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f826:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801f82a:	fb93 f3f2 	sdiv	r3, r3, r2
 801f82e:	441e      	add	r6, r3
 801f830:	e796      	b.n	801f760 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 801f832:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f836:	4f46      	ldr	r7, [pc, #280]	@ (801f950 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 801f838:	42a3      	cmp	r3, r4
 801f83a:	d97c      	bls.n	801f936 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 801f83c:	9a06      	ldr	r2, [sp, #24]
 801f83e:	2a00      	cmp	r2, #0
 801f840:	d054      	beq.n	801f8ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 801f842:	7830      	ldrb	r0, [r6, #0]
 801f844:	1c71      	adds	r1, r6, #1
 801f846:	f000 000f 	and.w	r0, r0, #15
 801f84a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f84e:	eb05 0e00 	add.w	lr, r5, r0
 801f852:	5c28      	ldrb	r0, [r5, r0]
 801f854:	f89e 2002 	ldrb.w	r2, [lr, #2]
 801f858:	f89e e001 	ldrb.w	lr, [lr, #1]
 801f85c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801f860:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f864:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801f868:	ea42 020e 	orr.w	r2, r2, lr
 801f86c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 801f870:	f824 2b02 	strh.w	r2, [r4], #2
 801f874:	9a03      	ldr	r2, [sp, #12]
 801f876:	f102 3eff 	add.w	lr, r2, #4294967295
 801f87a:	f1be 0f01 	cmp.w	lr, #1
 801f87e:	4620      	mov	r0, r4
 801f880:	f104 0404 	add.w	r4, r4, #4
 801f884:	dd36      	ble.n	801f8f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 801f886:	7808      	ldrb	r0, [r1, #0]
 801f888:	f1ae 0e02 	sub.w	lr, lr, #2
 801f88c:	0900      	lsrs	r0, r0, #4
 801f88e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f892:	eb05 0a00 	add.w	sl, r5, r0
 801f896:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f89a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801f89e:	00d2      	lsls	r2, r2, #3
 801f8a0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801f8a4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f8a8:	ea49 0202 	orr.w	r2, r9, r2
 801f8ac:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f8b0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801f8b4:	f824 2c04 	strh.w	r2, [r4, #-4]
 801f8b8:	f811 0b01 	ldrb.w	r0, [r1], #1
 801f8bc:	f000 000f 	and.w	r0, r0, #15
 801f8c0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f8c4:	eb05 0a00 	add.w	sl, r5, r0
 801f8c8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f8cc:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801f8d0:	00d2      	lsls	r2, r2, #3
 801f8d2:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801f8d6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f8da:	ea49 0202 	orr.w	r2, r9, r2
 801f8de:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f8e2:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801f8e6:	f824 2c02 	strh.w	r2, [r4, #-2]
 801f8ea:	e7c6      	b.n	801f87a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801f8ec:	4631      	mov	r1, r6
 801f8ee:	f8dd e00c 	ldr.w	lr, [sp, #12]
 801f8f2:	e7c2      	b.n	801f87a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801f8f4:	d111      	bne.n	801f91a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801f8f6:	7809      	ldrb	r1, [r1, #0]
 801f8f8:	0909      	lsrs	r1, r1, #4
 801f8fa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801f8fe:	186c      	adds	r4, r5, r1
 801f900:	5c69      	ldrb	r1, [r5, r1]
 801f902:	78a2      	ldrb	r2, [r4, #2]
 801f904:	7864      	ldrb	r4, [r4, #1]
 801f906:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801f90a:	00e4      	lsls	r4, r4, #3
 801f90c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801f910:	4322      	orrs	r2, r4
 801f912:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 801f916:	f820 2b02 	strh.w	r2, [r0], #2
 801f91a:	9a03      	ldr	r2, [sp, #12]
 801f91c:	f8bc 4000 	ldrh.w	r4, [ip]
 801f920:	9905      	ldr	r1, [sp, #20]
 801f922:	1aa4      	subs	r4, r4, r2
 801f924:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801f928:	440a      	add	r2, r1
 801f92a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f92e:	fb92 f2f8 	sdiv	r2, r2, r8
 801f932:	4416      	add	r6, r2
 801f934:	e780      	b.n	801f838 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 801f936:	4b04      	ldr	r3, [pc, #16]	@ (801f948 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801f938:	6818      	ldr	r0, [r3, #0]
 801f93a:	6803      	ldr	r3, [r0, #0]
 801f93c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f93e:	4798      	blx	r3
 801f940:	b00f      	add	sp, #60	@ 0x3c
 801f942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f946:	bf00      	nop
 801f948:	20016a00 	.word	0x20016a00
 801f94c:	200169fa 	.word	0x200169fa
 801f950:	fffff800 	.word	0xfffff800

0801f954 <CRC_Lock>:
 801f954:	4a20      	ldr	r2, [pc, #128]	@ (801f9d8 <CRC_Lock+0x84>)
 801f956:	b530      	push	{r4, r5, lr}
 801f958:	6813      	ldr	r3, [r2, #0]
 801f95a:	f64f 74f0 	movw	r4, #65520	@ 0xfff0
 801f95e:	f24c 2540 	movw	r5, #49728	@ 0xc240
 801f962:	f023 0301 	bic.w	r3, r3, #1
 801f966:	6013      	str	r3, [r2, #0]
 801f968:	4b1c      	ldr	r3, [pc, #112]	@ (801f9dc <CRC_Lock+0x88>)
 801f96a:	681a      	ldr	r2, [r3, #0]
 801f96c:	4022      	ands	r2, r4
 801f96e:	42aa      	cmp	r2, r5
 801f970:	d005      	beq.n	801f97e <CRC_Lock+0x2a>
 801f972:	681b      	ldr	r3, [r3, #0]
 801f974:	f24c 2270 	movw	r2, #49776	@ 0xc270
 801f978:	4023      	ands	r3, r4
 801f97a:	4293      	cmp	r3, r2
 801f97c:	d124      	bne.n	801f9c8 <CRC_Lock+0x74>
 801f97e:	4b18      	ldr	r3, [pc, #96]	@ (801f9e0 <CRC_Lock+0x8c>)
 801f980:	681b      	ldr	r3, [r3, #0]
 801f982:	bb0b      	cbnz	r3, 801f9c8 <CRC_Lock+0x74>
 801f984:	4b17      	ldr	r3, [pc, #92]	@ (801f9e4 <CRC_Lock+0x90>)
 801f986:	681a      	ldr	r2, [r3, #0]
 801f988:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801f98c:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 801f990:	d00d      	beq.n	801f9ae <CRC_Lock+0x5a>
 801f992:	681a      	ldr	r2, [r3, #0]
 801f994:	f240 4483 	movw	r4, #1155	@ 0x483
 801f998:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801f99c:	42a2      	cmp	r2, r4
 801f99e:	d006      	beq.n	801f9ae <CRC_Lock+0x5a>
 801f9a0:	681b      	ldr	r3, [r3, #0]
 801f9a2:	f240 4285 	movw	r2, #1157	@ 0x485
 801f9a6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801f9aa:	4293      	cmp	r3, r2
 801f9ac:	d10c      	bne.n	801f9c8 <CRC_Lock+0x74>
 801f9ae:	4b0e      	ldr	r3, [pc, #56]	@ (801f9e8 <CRC_Lock+0x94>)
 801f9b0:	2201      	movs	r2, #1
 801f9b2:	601a      	str	r2, [r3, #0]
 801f9b4:	681a      	ldr	r2, [r3, #0]
 801f9b6:	2a00      	cmp	r2, #0
 801f9b8:	d1fc      	bne.n	801f9b4 <CRC_Lock+0x60>
 801f9ba:	4b0c      	ldr	r3, [pc, #48]	@ (801f9ec <CRC_Lock+0x98>)
 801f9bc:	6018      	str	r0, [r3, #0]
 801f9be:	6818      	ldr	r0, [r3, #0]
 801f9c0:	1a43      	subs	r3, r0, r1
 801f9c2:	4258      	negs	r0, r3
 801f9c4:	4158      	adcs	r0, r3
 801f9c6:	bd30      	pop	{r4, r5, pc}
 801f9c8:	4b09      	ldr	r3, [pc, #36]	@ (801f9f0 <CRC_Lock+0x9c>)
 801f9ca:	2201      	movs	r2, #1
 801f9cc:	601a      	str	r2, [r3, #0]
 801f9ce:	681a      	ldr	r2, [r3, #0]
 801f9d0:	2a00      	cmp	r2, #0
 801f9d2:	d1fc      	bne.n	801f9ce <CRC_Lock+0x7a>
 801f9d4:	4b07      	ldr	r3, [pc, #28]	@ (801f9f4 <CRC_Lock+0xa0>)
 801f9d6:	e7f1      	b.n	801f9bc <CRC_Lock+0x68>
 801f9d8:	e0002000 	.word	0xe0002000
 801f9dc:	e000ed00 	.word	0xe000ed00
 801f9e0:	e0042000 	.word	0xe0042000
 801f9e4:	5c001000 	.word	0x5c001000
 801f9e8:	58024c08 	.word	0x58024c08
 801f9ec:	58024c00 	.word	0x58024c00
 801f9f0:	40023008 	.word	0x40023008
 801f9f4:	40023000 	.word	0x40023000

0801f9f8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801f9f8:	6101      	str	r1, [r0, #16]
 801f9fa:	4770      	bx	lr

0801f9fc <_ZN8touchgfx8Gestures4tickEv>:
 801f9fc:	7b83      	ldrb	r3, [r0, #14]
 801f9fe:	b14b      	cbz	r3, 801fa14 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801fa00:	8903      	ldrh	r3, [r0, #8]
 801fa02:	3301      	adds	r3, #1
 801fa04:	b29b      	uxth	r3, r3
 801fa06:	2b07      	cmp	r3, #7
 801fa08:	8103      	strh	r3, [r0, #8]
 801fa0a:	bf81      	itttt	hi
 801fa0c:	2300      	movhi	r3, #0
 801fa0e:	8143      	strhhi	r3, [r0, #10]
 801fa10:	8183      	strhhi	r3, [r0, #12]
 801fa12:	7383      	strbhi	r3, [r0, #14]
 801fa14:	4770      	bx	lr
	...

0801fa18 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801fa18:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801fa1c:	4698      	mov	r8, r3
 801fa1e:	8883      	ldrh	r3, [r0, #4]
 801fa20:	4604      	mov	r4, r0
 801fa22:	4617      	mov	r7, r2
 801fa24:	f8ad 3006 	strh.w	r3, [sp, #6]
 801fa28:	eba8 0303 	sub.w	r3, r8, r3
 801fa2c:	4a19      	ldr	r2, [pc, #100]	@ (801fa94 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801fa2e:	460e      	mov	r6, r1
 801fa30:	b21b      	sxth	r3, r3
 801fa32:	88c1      	ldrh	r1, [r0, #6]
 801fa34:	9200      	str	r2, [sp, #0]
 801fa36:	2000      	movs	r0, #0
 801fa38:	2b00      	cmp	r3, #0
 801fa3a:	8aa2      	ldrh	r2, [r4, #20]
 801fa3c:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 801fa40:	bfb8      	it	lt
 801fa42:	425b      	neglt	r3, r3
 801fa44:	f88d 0004 	strb.w	r0, [sp, #4]
 801fa48:	f8ad 1008 	strh.w	r1, [sp, #8]
 801fa4c:	b21b      	sxth	r3, r3
 801fa4e:	f8ad 800a 	strh.w	r8, [sp, #10]
 801fa52:	f8ad 500c 	strh.w	r5, [sp, #12]
 801fa56:	4293      	cmp	r3, r2
 801fa58:	dc07      	bgt.n	801fa6a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 801fa5a:	1a69      	subs	r1, r5, r1
 801fa5c:	b209      	sxth	r1, r1
 801fa5e:	2900      	cmp	r1, #0
 801fa60:	bfb8      	it	lt
 801fa62:	4249      	neglt	r1, r1
 801fa64:	b209      	sxth	r1, r1
 801fa66:	428a      	cmp	r2, r1
 801fa68:	da10      	bge.n	801fa8c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 801fa6a:	6920      	ldr	r0, [r4, #16]
 801fa6c:	4669      	mov	r1, sp
 801fa6e:	eba8 0606 	sub.w	r6, r8, r6
 801fa72:	1bef      	subs	r7, r5, r7
 801fa74:	6803      	ldr	r3, [r0, #0]
 801fa76:	685b      	ldr	r3, [r3, #4]
 801fa78:	4798      	blx	r3
 801fa7a:	2300      	movs	r3, #0
 801fa7c:	2001      	movs	r0, #1
 801fa7e:	8166      	strh	r6, [r4, #10]
 801fa80:	8123      	strh	r3, [r4, #8]
 801fa82:	81a7      	strh	r7, [r4, #12]
 801fa84:	f8a4 8004 	strh.w	r8, [r4, #4]
 801fa88:	80e5      	strh	r5, [r4, #6]
 801fa8a:	73a0      	strb	r0, [r4, #14]
 801fa8c:	b004      	add	sp, #16
 801fa8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fa92:	bf00      	nop
 801fa94:	08023994 	.word	0x08023994

0801fa98 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801fa98:	b5f0      	push	{r4, r5, r6, r7, lr}
 801fa9a:	461e      	mov	r6, r3
 801fa9c:	1e4b      	subs	r3, r1, #1
 801fa9e:	b085      	sub	sp, #20
 801faa0:	4604      	mov	r4, r0
 801faa2:	2b01      	cmp	r3, #1
 801faa4:	460d      	mov	r5, r1
 801faa6:	4617      	mov	r7, r2
 801faa8:	d84b      	bhi.n	801fb42 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801faaa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801faae:	1cd3      	adds	r3, r2, #3
 801fab0:	b29b      	uxth	r3, r3
 801fab2:	2b06      	cmp	r3, #6
 801fab4:	d916      	bls.n	801fae4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801fab6:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 801fb58 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801faba:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fabe:	f8cd c004 	str.w	ip, [sp, #4]
 801fac2:	f04f 0c00 	mov.w	ip, #0
 801fac6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801faca:	6900      	ldr	r0, [r0, #16]
 801facc:	f8ad 100c 	strh.w	r1, [sp, #12]
 801fad0:	a901      	add	r1, sp, #4
 801fad2:	f88d c008 	strb.w	ip, [sp, #8]
 801fad6:	f8ad 200a 	strh.w	r2, [sp, #10]
 801fada:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fade:	6803      	ldr	r3, [r0, #0]
 801fae0:	689b      	ldr	r3, [r3, #8]
 801fae2:	4798      	blx	r3
 801fae4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801fae8:	1cd3      	adds	r3, r2, #3
 801faea:	b29b      	uxth	r3, r3
 801faec:	2b06      	cmp	r3, #6
 801faee:	d916      	bls.n	801fb1e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801faf0:	f8df c064 	ldr.w	ip, [pc, #100]	@ 801fb58 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801faf4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801faf8:	f8cd c004 	str.w	ip, [sp, #4]
 801fafc:	f04f 0c01 	mov.w	ip, #1
 801fb00:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801fb04:	6920      	ldr	r0, [r4, #16]
 801fb06:	f8ad 100c 	strh.w	r1, [sp, #12]
 801fb0a:	a901      	add	r1, sp, #4
 801fb0c:	f88d c008 	strb.w	ip, [sp, #8]
 801fb10:	f8ad 200a 	strh.w	r2, [sp, #10]
 801fb14:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fb18:	6803      	ldr	r3, [r0, #0]
 801fb1a:	689b      	ldr	r3, [r3, #8]
 801fb1c:	4798      	blx	r3
 801fb1e:	4b0d      	ldr	r3, [pc, #52]	@ (801fb54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801fb20:	a901      	add	r1, sp, #4
 801fb22:	6920      	ldr	r0, [r4, #16]
 801fb24:	9301      	str	r3, [sp, #4]
 801fb26:	2300      	movs	r3, #0
 801fb28:	f88d 5008 	strb.w	r5, [sp, #8]
 801fb2c:	f8ad 700a 	strh.w	r7, [sp, #10]
 801fb30:	f8ad 600c 	strh.w	r6, [sp, #12]
 801fb34:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fb38:	6803      	ldr	r3, [r0, #0]
 801fb3a:	681b      	ldr	r3, [r3, #0]
 801fb3c:	4798      	blx	r3
 801fb3e:	b005      	add	sp, #20
 801fb40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801fb42:	2900      	cmp	r1, #0
 801fb44:	d1eb      	bne.n	801fb1e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fb46:	80a2      	strh	r2, [r4, #4]
 801fb48:	80c6      	strh	r6, [r0, #6]
 801fb4a:	60a1      	str	r1, [r4, #8]
 801fb4c:	81a1      	strh	r1, [r4, #12]
 801fb4e:	73a1      	strb	r1, [r4, #14]
 801fb50:	e7e5      	b.n	801fb1e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fb52:	bf00      	nop
 801fb54:	08023980 	.word	0x08023980
 801fb58:	080239a8 	.word	0x080239a8

0801fb5c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 801fb5c:	10c9      	asrs	r1, r1, #3
 801fb5e:	2900      	cmp	r1, #0
 801fb60:	bfb8      	it	lt
 801fb62:	4249      	neglt	r1, r1
 801fb64:	2801      	cmp	r0, #1
 801fb66:	d108      	bne.n	801fb7a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 801fb68:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801fb6c:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 801fb70:	4601      	mov	r1, r0
 801fb72:	dd02      	ble.n	801fb7a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 801fb74:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 801fb78:	4770      	bx	lr
 801fb7a:	29ff      	cmp	r1, #255	@ 0xff
 801fb7c:	bfa8      	it	ge
 801fb7e:	21ff      	movge	r1, #255	@ 0xff
 801fb80:	4608      	mov	r0, r1
 801fb82:	4770      	bx	lr

0801fb84 <_ZN8touchgfx10Rasterizer6lineToEii>:
 801fb84:	b410      	push	{r4}
 801fb86:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801fb8a:	429c      	cmp	r4, r3
 801fb8c:	d803      	bhi.n	801fb96 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 801fb8e:	f85d 4b04 	ldr.w	r4, [sp], #4
 801fb92:	f7ed bc57 	b.w	800d444 <_ZN8touchgfx7Outline6lineToEii>
 801fb96:	f85d 4b04 	ldr.w	r4, [sp], #4
 801fb9a:	4770      	bx	lr

0801fb9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 801fb9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fba0:	b08b      	sub	sp, #44	@ 0x2c
 801fba2:	4606      	mov	r6, r0
 801fba4:	468a      	mov	sl, r1
 801fba6:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801fbaa:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 801fbae:	9308      	str	r3, [sp, #32]
 801fbb0:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 801fbb4:	9309      	str	r3, [sp, #36]	@ 0x24
 801fbb6:	f7ed fdb0 	bl	800d71a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 801fbba:	68b5      	ldr	r5, [r6, #8]
 801fbbc:	4604      	mov	r4, r0
 801fbbe:	2d00      	cmp	r5, #0
 801fbc0:	d044      	beq.n	801fc4c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801fbc2:	6873      	ldr	r3, [r6, #4]
 801fbc4:	42ab      	cmp	r3, r5
 801fbc6:	d33d      	bcc.n	801fc44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 801fbc8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801fbcc:	f04f 0800 	mov.w	r8, #0
 801fbd0:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 801fbd4:	eb02 0b03 	add.w	fp, r2, r3
 801fbd8:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801fbdc:	fb02 1203 	mla	r2, r2, r3, r1
 801fbe0:	9205      	str	r2, [sp, #20]
 801fbe2:	1e6a      	subs	r2, r5, #1
 801fbe4:	9204      	str	r2, [sp, #16]
 801fbe6:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 801fbea:	f9b4 7000 	ldrsh.w	r7, [r4]
 801fbee:	454b      	cmp	r3, r9
 801fbf0:	463a      	mov	r2, r7
 801fbf2:	d008      	beq.n	801fc06 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 801fbf4:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 801fbf8:	eb03 0b09 	add.w	fp, r3, r9
 801fbfc:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801fc00:	fb03 1309 	mla	r3, r3, r9, r1
 801fc04:	9305      	str	r3, [sp, #20]
 801fc06:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801fc0a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801fc0e:	4498      	add	r8, r3
 801fc10:	9b04      	ldr	r3, [sp, #16]
 801fc12:	3b01      	subs	r3, #1
 801fc14:	9304      	str	r3, [sp, #16]
 801fc16:	9b04      	ldr	r3, [sp, #16]
 801fc18:	3301      	adds	r3, #1
 801fc1a:	d015      	beq.n	801fc48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 801fc1c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 801fc20:	42bb      	cmp	r3, r7
 801fc22:	d117      	bne.n	801fc54 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 801fc24:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 801fc28:	9b04      	ldr	r3, [sp, #16]
 801fc2a:	4548      	cmp	r0, r9
 801fc2c:	f103 33ff 	add.w	r3, r3, #4294967295
 801fc30:	d17d      	bne.n	801fd2e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
 801fc32:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 801fc36:	4401      	add	r1, r0
 801fc38:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fc3c:	4480      	add	r8, r0
 801fc3e:	e7e9      	b.n	801fc14 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 801fc40:	461f      	mov	r7, r3
 801fc42:	e042      	b.n	801fcca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
 801fc44:	2000      	movs	r0, #0
 801fc46:	e002      	b.n	801fc4e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 801fc48:	2900      	cmp	r1, #0
 801fc4a:	d16d      	bne.n	801fd28 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801fc4c:	2001      	movs	r0, #1
 801fc4e:	b00b      	add	sp, #44	@ 0x2c
 801fc50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc54:	b379      	cbz	r1, 801fcb6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
 801fc56:	2f00      	cmp	r7, #0
 801fc58:	db29      	blt.n	801fcae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 801fc5a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 801fc5e:	42bb      	cmp	r3, r7
 801fc60:	dd25      	ble.n	801fcae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 801fc62:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 801fc66:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 801fc6a:	f7ff ff77 	bl	801fb5c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 801fc6e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fc70:	fb10 f003 	smulbb	r0, r0, r3
 801fc74:	b280      	uxth	r0, r0
 801fc76:	1c41      	adds	r1, r0, #1
 801fc78:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801fc7c:	1209      	asrs	r1, r1, #8
 801fc7e:	f011 0fff 	tst.w	r1, #255	@ 0xff
 801fc82:	d014      	beq.n	801fcae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 801fc84:	b2c9      	uxtb	r1, r1
 801fc86:	9808      	ldr	r0, [sp, #32]
 801fc88:	b2ba      	uxth	r2, r7
 801fc8a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 801fc8c:	9102      	str	r1, [sp, #8]
 801fc8e:	2101      	movs	r1, #1
 801fc90:	4413      	add	r3, r2
 801fc92:	4402      	add	r2, r0
 801fc94:	9101      	str	r1, [sp, #4]
 801fc96:	fa0f f18b 	sxth.w	r1, fp
 801fc9a:	f8da 0000 	ldr.w	r0, [sl]
 801fc9e:	b21b      	sxth	r3, r3
 801fca0:	9100      	str	r1, [sp, #0]
 801fca2:	b212      	sxth	r2, r2
 801fca4:	6941      	ldr	r1, [r0, #20]
 801fca6:	4650      	mov	r0, sl
 801fca8:	460d      	mov	r5, r1
 801fcaa:	9905      	ldr	r1, [sp, #20]
 801fcac:	47a8      	blx	r5
 801fcae:	9b04      	ldr	r3, [sp, #16]
 801fcb0:	1c7a      	adds	r2, r7, #1
 801fcb2:	3301      	adds	r3, #1
 801fcb4:	d0ca      	beq.n	801fc4c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801fcb6:	f9b4 7000 	ldrsh.w	r7, [r4]
 801fcba:	1abb      	subs	r3, r7, r2
 801fcbc:	2b00      	cmp	r3, #0
 801fcbe:	dd31      	ble.n	801fd24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 801fcc0:	2a00      	cmp	r2, #0
 801fcc2:	dabd      	bge.n	801fc40 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 801fcc4:	2f00      	cmp	r7, #0
 801fcc6:	dd2d      	ble.n	801fd24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 801fcc8:	2200      	movs	r2, #0
 801fcca:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 801fcce:	19d1      	adds	r1, r2, r7
 801fcd0:	4299      	cmp	r1, r3
 801fcd2:	db02      	blt.n	801fcda <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
 801fcd4:	1a9f      	subs	r7, r3, r2
 801fcd6:	2f00      	cmp	r7, #0
 801fcd8:	dd24      	ble.n	801fd24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 801fcda:	ea4f 1188 	mov.w	r1, r8, lsl #6
 801fcde:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 801fce2:	f7ff ff3b 	bl	801fb5c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 801fce6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fce8:	fb10 f003 	smulbb	r0, r0, r3
 801fcec:	b280      	uxth	r0, r0
 801fcee:	1c41      	adds	r1, r0, #1
 801fcf0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801fcf4:	1209      	asrs	r1, r1, #8
 801fcf6:	f011 0fff 	tst.w	r1, #255	@ 0xff
 801fcfa:	d013      	beq.n	801fd24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 801fcfc:	b292      	uxth	r2, r2
 801fcfe:	9808      	ldr	r0, [sp, #32]
 801fd00:	b2c9      	uxtb	r1, r1
 801fd02:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 801fd04:	b23f      	sxth	r7, r7
 801fd06:	4413      	add	r3, r2
 801fd08:	9102      	str	r1, [sp, #8]
 801fd0a:	4402      	add	r2, r0
 801fd0c:	fa0f f18b 	sxth.w	r1, fp
 801fd10:	f8da 0000 	ldr.w	r0, [sl]
 801fd14:	b21b      	sxth	r3, r3
 801fd16:	9100      	str	r1, [sp, #0]
 801fd18:	b212      	sxth	r2, r2
 801fd1a:	9701      	str	r7, [sp, #4]
 801fd1c:	9905      	ldr	r1, [sp, #20]
 801fd1e:	6947      	ldr	r7, [r0, #20]
 801fd20:	4650      	mov	r0, sl
 801fd22:	47b8      	blx	r7
 801fd24:	464b      	mov	r3, r9
 801fd26:	e75e      	b.n	801fbe6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 801fd28:	2f00      	cmp	r7, #0
 801fd2a:	da96      	bge.n	801fc5a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
 801fd2c:	e78e      	b.n	801fc4c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801fd2e:	2900      	cmp	r1, #0
 801fd30:	d0f8      	beq.n	801fd24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 801fd32:	e790      	b.n	801fc56 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

0801fd34 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 801fd34:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801fd38:	461e      	mov	r6, r3
 801fd3a:	4b36      	ldr	r3, [pc, #216]	@ (801fe14 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 801fd3c:	2500      	movs	r5, #0
 801fd3e:	f100 0814 	add.w	r8, r0, #20
 801fd42:	4604      	mov	r4, r0
 801fd44:	4617      	mov	r7, r2
 801fd46:	e9c0 3100 	strd	r3, r1, [r0]
 801fd4a:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801fd4e:	8185      	strh	r5, [r0, #12]
 801fd50:	8103      	strh	r3, [r0, #8]
 801fd52:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801fd56:	81c5      	strh	r5, [r0, #14]
 801fd58:	7283      	strb	r3, [r0, #10]
 801fd5a:	8205      	strh	r5, [r0, #16]
 801fd5c:	8245      	strh	r5, [r0, #18]
 801fd5e:	4640      	mov	r0, r8
 801fd60:	f7ec feb6 	bl	800cad0 <_ZN8touchgfx7OutlineC1Ev>
 801fd64:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 801fd68:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 801fd6c:	466b      	mov	r3, sp
 801fd6e:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 801fd72:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 801fd76:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 801fd7a:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 801fd7e:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 801fd82:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 801fd86:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 801fd8a:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 801fd8e:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 801fd92:	6830      	ldr	r0, [r6, #0]
 801fd94:	6871      	ldr	r1, [r6, #4]
 801fd96:	8872      	ldrh	r2, [r6, #2]
 801fd98:	8835      	ldrh	r5, [r6, #0]
 801fd9a:	c303      	stmia	r3!, {r0, r1}
 801fd9c:	887b      	ldrh	r3, [r7, #2]
 801fd9e:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 801fda2:	4413      	add	r3, r2
 801fda4:	883a      	ldrh	r2, [r7, #0]
 801fda6:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 801fdaa:	442a      	add	r2, r5
 801fdac:	81e3      	strh	r3, [r4, #14]
 801fdae:	8220      	strh	r0, [r4, #16]
 801fdb0:	4668      	mov	r0, sp
 801fdb2:	81a2      	strh	r2, [r4, #12]
 801fdb4:	8261      	strh	r1, [r4, #18]
 801fdb6:	4639      	mov	r1, r7
 801fdb8:	f7ef f846 	bl	800ee48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fdbc:	f104 000c 	add.w	r0, r4, #12
 801fdc0:	f7ef f81a 	bl	800edf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fdc4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801fdc8:	f8bd 2000 	ldrh.w	r2, [sp]
 801fdcc:	4640      	mov	r0, r8
 801fdce:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 801fdd2:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 801fdd6:	f7ec fe5f 	bl	800ca98 <_ZN8touchgfx7Outline5resetEv>
 801fdda:	f9bd 3000 	ldrsh.w	r3, [sp]
 801fdde:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 801fde2:	4620      	mov	r0, r4
 801fde4:	015b      	lsls	r3, r3, #5
 801fde6:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801fde8:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801fdec:	015b      	lsls	r3, r3, #5
 801fdee:	6523      	str	r3, [r4, #80]	@ 0x50
 801fdf0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801fdf4:	015b      	lsls	r3, r3, #5
 801fdf6:	6563      	str	r3, [r4, #84]	@ 0x54
 801fdf8:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801fdfc:	015b      	lsls	r3, r3, #5
 801fdfe:	65a3      	str	r3, [r4, #88]	@ 0x58
 801fe00:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 801fe04:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 801fe08:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 801fe0c:	b002      	add	sp, #8
 801fe0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fe12:	bf00      	nop
 801fe14:	08023ccc 	.word	0x08023ccc

0801fe18 <_ZN8touchgfx6Canvas5closeEv>:
 801fe18:	b538      	push	{r3, r4, r5, lr}
 801fe1a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 801fe1e:	4604      	mov	r4, r0
 801fe20:	b193      	cbz	r3, 801fe48 <_ZN8touchgfx6Canvas5closeEv+0x30>
 801fe22:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 801fe26:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 801fe2a:	4213      	tst	r3, r2
 801fe2c:	d10c      	bne.n	801fe48 <_ZN8touchgfx6Canvas5closeEv+0x30>
 801fe2e:	f100 0514 	add.w	r5, r0, #20
 801fe32:	b123      	cbz	r3, 801fe3e <_ZN8touchgfx6Canvas5closeEv+0x26>
 801fe34:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 801fe38:	4628      	mov	r0, r5
 801fe3a:	f7ff fea3 	bl	801fb84 <_ZN8touchgfx10Rasterizer6lineToEii>
 801fe3e:	4628      	mov	r0, r5
 801fe40:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 801fe44:	f7ff fe9e 	bl	801fb84 <_ZN8touchgfx10Rasterizer6lineToEii>
 801fe48:	2300      	movs	r3, #0
 801fe4a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 801fe4e:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 801fe52:	4298      	cmp	r0, r3
 801fe54:	bf34      	ite	cc
 801fe56:	2000      	movcc	r0, #0
 801fe58:	2001      	movcs	r0, #1
 801fe5a:	bd38      	pop	{r3, r4, r5, pc}

0801fe5c <_ZN8touchgfx6Canvas6renderEh>:
 801fe5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801fe60:	7a85      	ldrb	r5, [r0, #10]
 801fe62:	4604      	mov	r4, r0
 801fe64:	4369      	muls	r1, r5
 801fe66:	1c4d      	adds	r5, r1, #1
 801fe68:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801fe6c:	122d      	asrs	r5, r5, #8
 801fe6e:	f000 8098 	beq.w	801ffa2 <_ZN8touchgfx6Canvas6renderEh+0x146>
 801fe72:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 801fe76:	2b00      	cmp	r3, #0
 801fe78:	f000 8093 	beq.w	801ffa2 <_ZN8touchgfx6Canvas6renderEh+0x146>
 801fe7c:	f7ff ffcc 	bl	801fe18 <_ZN8touchgfx6Canvas5closeEv>
 801fe80:	4607      	mov	r7, r0
 801fe82:	2800      	cmp	r0, #0
 801fe84:	d045      	beq.n	801ff12 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 801fe86:	6860      	ldr	r0, [r4, #4]
 801fe88:	4e47      	ldr	r6, [pc, #284]	@ (801ffa8 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 801fe8a:	6803      	ldr	r3, [r0, #0]
 801fe8c:	6837      	ldr	r7, [r6, #0]
 801fe8e:	689b      	ldr	r3, [r3, #8]
 801fe90:	4798      	blx	r3
 801fe92:	4601      	mov	r1, r0
 801fe94:	4638      	mov	r0, r7
 801fe96:	f7ea fd0b 	bl	800a8b0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 801fe9a:	4607      	mov	r7, r0
 801fe9c:	f7e2 faee 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 801fea0:	6803      	ldr	r3, [r0, #0]
 801fea2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801fea4:	4798      	blx	r3
 801fea6:	4680      	mov	r8, r0
 801fea8:	f7e2 fae8 	bl	800247c <_ZN8touchgfx3HAL3lcdEv>
 801feac:	6803      	ldr	r3, [r0, #0]
 801feae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801feb0:	4798      	blx	r3
 801feb2:	280b      	cmp	r0, #11
 801feb4:	d85a      	bhi.n	801ff6c <_ZN8touchgfx6Canvas6renderEh+0x110>
 801feb6:	e8df f000 	tbb	[pc, r0]
 801feba:	5b50      	.short	0x5b50
 801febc:	3059066b 	.word	0x3059066b
 801fec0:	64646440 	.word	0x64646440
 801fec4:	6464      	.short	0x6464
 801fec6:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 801feca:	2208      	movs	r2, #8
 801fecc:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 801fed0:	fb91 f2f2 	sdiv	r2, r1, r2
 801fed4:	fb08 2303 	mla	r3, r8, r3, r2
 801fed8:	441f      	add	r7, r3
 801feda:	424b      	negs	r3, r1
 801fedc:	f001 0107 	and.w	r1, r1, #7
 801fee0:	f003 0307 	and.w	r3, r3, #7
 801fee4:	bf58      	it	pl
 801fee6:	4259      	negpl	r1, r3
 801fee8:	b2c9      	uxtb	r1, r1
 801feea:	b2ed      	uxtb	r5, r5
 801feec:	463a      	mov	r2, r7
 801feee:	fa0f f388 	sxth.w	r3, r8
 801fef2:	f104 0014 	add.w	r0, r4, #20
 801fef6:	e9cd 1500 	strd	r1, r5, [sp]
 801fefa:	6861      	ldr	r1, [r4, #4]
 801fefc:	f7ff fe4e 	bl	801fb9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 801ff00:	4607      	mov	r7, r0
 801ff02:	6860      	ldr	r0, [r4, #4]
 801ff04:	6803      	ldr	r3, [r0, #0]
 801ff06:	691b      	ldr	r3, [r3, #16]
 801ff08:	4798      	blx	r3
 801ff0a:	6830      	ldr	r0, [r6, #0]
 801ff0c:	6803      	ldr	r3, [r0, #0]
 801ff0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ff10:	4798      	blx	r3
 801ff12:	4638      	mov	r0, r7
 801ff14:	b002      	add	sp, #8
 801ff16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ff1a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 801ff1e:	2204      	movs	r2, #4
 801ff20:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 801ff24:	fb91 f2f2 	sdiv	r2, r1, r2
 801ff28:	fb08 2303 	mla	r3, r8, r3, r2
 801ff2c:	441f      	add	r7, r3
 801ff2e:	424b      	negs	r3, r1
 801ff30:	f001 0103 	and.w	r1, r1, #3
 801ff34:	f003 0303 	and.w	r3, r3, #3
 801ff38:	e7d4      	b.n	801fee4 <_ZN8touchgfx6Canvas6renderEh+0x88>
 801ff3a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 801ff3e:	2202      	movs	r2, #2
 801ff40:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 801ff44:	2900      	cmp	r1, #0
 801ff46:	fb91 f2f2 	sdiv	r2, r1, r2
 801ff4a:	f001 0101 	and.w	r1, r1, #1
 801ff4e:	fb08 2303 	mla	r3, r8, r3, r2
 801ff52:	bfb8      	it	lt
 801ff54:	4249      	neglt	r1, r1
 801ff56:	441f      	add	r7, r3
 801ff58:	e7c6      	b.n	801fee8 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 801ff5a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 801ff5e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ff62:	fb08 f303 	mul.w	r3, r8, r3
 801ff66:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801ff6a:	441f      	add	r7, r3
 801ff6c:	2100      	movs	r1, #0
 801ff6e:	e7bc      	b.n	801feea <_ZN8touchgfx6Canvas6renderEh+0x8e>
 801ff70:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 801ff74:	2103      	movs	r1, #3
 801ff76:	fb08 f203 	mul.w	r2, r8, r3
 801ff7a:	89a3      	ldrh	r3, [r4, #12]
 801ff7c:	fb13 2301 	smlabb	r3, r3, r1, r2
 801ff80:	e7f3      	b.n	801ff6a <_ZN8touchgfx6Canvas6renderEh+0x10e>
 801ff82:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 801ff86:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ff8a:	fb08 2303 	mla	r3, r8, r3, r2
 801ff8e:	e7ec      	b.n	801ff6a <_ZN8touchgfx6Canvas6renderEh+0x10e>
 801ff90:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 801ff94:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ff98:	fb08 f303 	mul.w	r3, r8, r3
 801ff9c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801ffa0:	e7e3      	b.n	801ff6a <_ZN8touchgfx6Canvas6renderEh+0x10e>
 801ffa2:	2701      	movs	r7, #1
 801ffa4:	e7b5      	b.n	801ff12 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 801ffa6:	bf00      	nop
 801ffa8:	20016a00 	.word	0x20016a00

0801ffac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 801ffac:	4b06      	ldr	r3, [pc, #24]	@ (801ffc8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 801ffae:	b510      	push	{r4, lr}
 801ffb0:	781b      	ldrb	r3, [r3, #0]
 801ffb2:	2b01      	cmp	r3, #1
 801ffb4:	d107      	bne.n	801ffc6 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 801ffb6:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 801ffba:	680b      	ldr	r3, [r1, #0]
 801ffbc:	6814      	ldr	r4, [r2, #0]
 801ffbe:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 801ffc2:	6013      	str	r3, [r2, #0]
 801ffc4:	600c      	str	r4, [r1, #0]
 801ffc6:	bd10      	pop	{r4, pc}
 801ffc8:	200169f8 	.word	0x200169f8

0801ffcc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 801ffcc:	b513      	push	{r0, r1, r4, lr}
 801ffce:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 801ffd2:	4604      	mov	r4, r0
 801ffd4:	e9cd 2100 	strd	r2, r1, [sp]
 801ffd8:	b9a3      	cbnz	r3, 8020004 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 801ffda:	466a      	mov	r2, sp
 801ffdc:	a901      	add	r1, sp, #4
 801ffde:	4620      	mov	r0, r4
 801ffe0:	f7ff ffe4 	bl	801ffac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801ffe4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 801ffe6:	9901      	ldr	r1, [sp, #4]
 801ffe8:	9a00      	ldr	r2, [sp, #0]
 801ffea:	1ac9      	subs	r1, r1, r3
 801ffec:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 801ffee:	1ad2      	subs	r2, r2, r3
 801fff0:	9101      	str	r1, [sp, #4]
 801fff2:	2a00      	cmp	r2, #0
 801fff4:	9200      	str	r2, [sp, #0]
 801fff6:	da0b      	bge.n	8020010 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 801fff8:	2301      	movs	r3, #1
 801fffa:	2900      	cmp	r1, #0
 801fffc:	da0e      	bge.n	802001c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 801fffe:	f043 0304 	orr.w	r3, r3, #4
 8020002:	e013      	b.n	802002c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8020004:	f7ff ff08 	bl	801fe18 <_ZN8touchgfx6Canvas5closeEv>
 8020008:	2800      	cmp	r0, #0
 802000a:	d1e6      	bne.n	801ffda <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802000c:	b002      	add	sp, #8
 802000e:	bd10      	pop	{r4, pc}
 8020010:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8020012:	429a      	cmp	r2, r3
 8020014:	bfac      	ite	ge
 8020016:	2302      	movge	r3, #2
 8020018:	2300      	movlt	r3, #0
 802001a:	e7ee      	b.n	801fffa <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802001c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 802001e:	4281      	cmp	r1, r0
 8020020:	bfac      	ite	ge
 8020022:	2008      	movge	r0, #8
 8020024:	2000      	movlt	r0, #0
 8020026:	4318      	orrs	r0, r3
 8020028:	b2c3      	uxtb	r3, r0
 802002a:	b158      	cbz	r0, 8020044 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802002c:	2200      	movs	r2, #0
 802002e:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 8020032:	9901      	ldr	r1, [sp, #4]
 8020034:	9a00      	ldr	r2, [sp, #0]
 8020036:	66e1      	str	r1, [r4, #108]	@ 0x6c
 8020038:	6722      	str	r2, [r4, #112]	@ 0x70
 802003a:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 802003e:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 8020042:	e7e3      	b.n	802000c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8020044:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8020048:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802004c:	4298      	cmp	r0, r3
 802004e:	d803      	bhi.n	8020058 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8020050:	f104 0014 	add.w	r0, r4, #20
 8020054:	f7ed fa10 	bl	800d478 <_ZN8touchgfx7Outline6moveToEii>
 8020058:	2301      	movs	r3, #1
 802005a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802005e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8020062:	2300      	movs	r3, #0
 8020064:	e7e5      	b.n	8020032 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08020066 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8020066:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8020068:	ab02      	add	r3, sp, #8
 802006a:	4604      	mov	r4, r0
 802006c:	9101      	str	r1, [sp, #4]
 802006e:	a901      	add	r1, sp, #4
 8020070:	f843 2d08 	str.w	r2, [r3, #-8]!
 8020074:	461a      	mov	r2, r3
 8020076:	f7ff ff99 	bl	801ffac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802007a:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802007c:	9901      	ldr	r1, [sp, #4]
 802007e:	9a00      	ldr	r2, [sp, #0]
 8020080:	1ac9      	subs	r1, r1, r3
 8020082:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8020084:	1ad2      	subs	r2, r2, r3
 8020086:	9101      	str	r1, [sp, #4]
 8020088:	2a00      	cmp	r2, #0
 802008a:	9200      	str	r2, [sp, #0]
 802008c:	db1c      	blt.n	80200c8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802008e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8020090:	429a      	cmp	r2, r3
 8020092:	bfac      	ite	ge
 8020094:	2002      	movge	r0, #2
 8020096:	2000      	movlt	r0, #0
 8020098:	2900      	cmp	r1, #0
 802009a:	db17      	blt.n	80200cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802009c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 802009e:	4299      	cmp	r1, r3
 80200a0:	bfac      	ite	ge
 80200a2:	2308      	movge	r3, #8
 80200a4:	2300      	movlt	r3, #0
 80200a6:	4303      	orrs	r3, r0
 80200a8:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 80200ac:	b2dd      	uxtb	r5, r3
 80200ae:	b978      	cbnz	r0, 80200d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80200b0:	f104 0014 	add.w	r0, r4, #20
 80200b4:	f7ff fd66 	bl	801fb84 <_ZN8touchgfx10Rasterizer6lineToEii>
 80200b8:	9b01      	ldr	r3, [sp, #4]
 80200ba:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 80200be:	6623      	str	r3, [r4, #96]	@ 0x60
 80200c0:	9b00      	ldr	r3, [sp, #0]
 80200c2:	6663      	str	r3, [r4, #100]	@ 0x64
 80200c4:	b002      	add	sp, #8
 80200c6:	bd70      	pop	{r4, r5, r6, pc}
 80200c8:	2001      	movs	r0, #1
 80200ca:	e7e5      	b.n	8020098 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80200cc:	2304      	movs	r3, #4
 80200ce:	e7ea      	b.n	80200a6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80200d0:	b113      	cbz	r3, 80200d8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80200d2:	ea10 0305 	ands.w	r3, r0, r5
 80200d6:	d11c      	bne.n	8020112 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80200d8:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 80200dc:	f104 0614 	add.w	r6, r4, #20
 80200e0:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 80200e4:	b98b      	cbnz	r3, 802010a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80200e6:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 80200ea:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 80200ee:	4298      	cmp	r0, r3
 80200f0:	d802      	bhi.n	80200f8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80200f2:	4630      	mov	r0, r6
 80200f4:	f7ed f9c0 	bl	800d478 <_ZN8touchgfx7Outline6moveToEii>
 80200f8:	2301      	movs	r3, #1
 80200fa:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80200fe:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8020102:	4630      	mov	r0, r6
 8020104:	e9dd 2100 	ldrd	r2, r1, [sp]
 8020108:	e7d4      	b.n	80200b4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802010a:	4630      	mov	r0, r6
 802010c:	f7ff fd3a 	bl	801fb84 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020110:	e7f7      	b.n	8020102 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8020112:	461d      	mov	r5, r3
 8020114:	e7d0      	b.n	80200b8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08020118 <_ZN8touchgfx6CanvasD1Ev>:
 8020118:	4b04      	ldr	r3, [pc, #16]	@ (802012c <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802011a:	b510      	push	{r4, lr}
 802011c:	4604      	mov	r4, r0
 802011e:	f840 3b14 	str.w	r3, [r0], #20
 8020122:	f7ec fcb1 	bl	800ca88 <_ZN8touchgfx7OutlineD1Ev>
 8020126:	4620      	mov	r0, r4
 8020128:	bd10      	pop	{r4, pc}
 802012a:	bf00      	nop
 802012c:	08023ccc 	.word	0x08023ccc

08020130 <_ZN8touchgfx6CanvasD0Ev>:
 8020130:	b510      	push	{r4, lr}
 8020132:	4604      	mov	r4, r0
 8020134:	f7ff fff0 	bl	8020118 <_ZN8touchgfx6CanvasD1Ev>
 8020138:	2174      	movs	r1, #116	@ 0x74
 802013a:	4620      	mov	r0, r4
 802013c:	f000 f807 	bl	802014e <_ZdlPvj>
 8020140:	4620      	mov	r0, r4
 8020142:	bd10      	pop	{r4, pc}

08020144 <__aeabi_atexit>:
 8020144:	460b      	mov	r3, r1
 8020146:	4601      	mov	r1, r0
 8020148:	4618      	mov	r0, r3
 802014a:	f000 be4d 	b.w	8020de8 <__cxa_atexit>

0802014e <_ZdlPvj>:
 802014e:	f000 b812 	b.w	8020176 <_ZdlPv>

08020152 <__cxa_guard_acquire>:
 8020152:	6802      	ldr	r2, [r0, #0]
 8020154:	07d2      	lsls	r2, r2, #31
 8020156:	4603      	mov	r3, r0
 8020158:	d405      	bmi.n	8020166 <__cxa_guard_acquire+0x14>
 802015a:	7842      	ldrb	r2, [r0, #1]
 802015c:	b102      	cbz	r2, 8020160 <__cxa_guard_acquire+0xe>
 802015e:	deff      	udf	#255	@ 0xff
 8020160:	2001      	movs	r0, #1
 8020162:	7058      	strb	r0, [r3, #1]
 8020164:	4770      	bx	lr
 8020166:	2000      	movs	r0, #0
 8020168:	4770      	bx	lr

0802016a <__cxa_guard_release>:
 802016a:	2301      	movs	r3, #1
 802016c:	6003      	str	r3, [r0, #0]
 802016e:	4770      	bx	lr

08020170 <__cxa_pure_virtual>:
 8020170:	b508      	push	{r3, lr}
 8020172:	f000 f80f 	bl	8020194 <_ZSt9terminatev>

08020176 <_ZdlPv>:
 8020176:	f000 bd81 	b.w	8020c7c <free>

0802017a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802017a:	b508      	push	{r3, lr}
 802017c:	4780      	blx	r0
 802017e:	f000 fd49 	bl	8020c14 <abort>
	...

08020184 <_ZSt13get_terminatev>:
 8020184:	4b02      	ldr	r3, [pc, #8]	@ (8020190 <_ZSt13get_terminatev+0xc>)
 8020186:	6818      	ldr	r0, [r3, #0]
 8020188:	f3bf 8f5b 	dmb	ish
 802018c:	4770      	bx	lr
 802018e:	bf00      	nop
 8020190:	200000c0 	.word	0x200000c0

08020194 <_ZSt9terminatev>:
 8020194:	b508      	push	{r3, lr}
 8020196:	f7ff fff5 	bl	8020184 <_ZSt13get_terminatev>
 802019a:	f7ff ffee 	bl	802017a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

080201a0 <sinf>:
 80201a0:	ee10 3a10 	vmov	r3, s0
 80201a4:	b507      	push	{r0, r1, r2, lr}
 80201a6:	4a1f      	ldr	r2, [pc, #124]	@ (8020224 <sinf+0x84>)
 80201a8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80201ac:	4293      	cmp	r3, r2
 80201ae:	d807      	bhi.n	80201c0 <sinf+0x20>
 80201b0:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8020228 <sinf+0x88>
 80201b4:	2000      	movs	r0, #0
 80201b6:	b003      	add	sp, #12
 80201b8:	f85d eb04 	ldr.w	lr, [sp], #4
 80201bc:	f000 b88e 	b.w	80202dc <__kernel_sinf>
 80201c0:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80201c4:	d304      	bcc.n	80201d0 <sinf+0x30>
 80201c6:	ee30 0a40 	vsub.f32	s0, s0, s0
 80201ca:	b003      	add	sp, #12
 80201cc:	f85d fb04 	ldr.w	pc, [sp], #4
 80201d0:	4668      	mov	r0, sp
 80201d2:	f000 f8cb 	bl	802036c <__ieee754_rem_pio2f>
 80201d6:	f000 0003 	and.w	r0, r0, #3
 80201da:	2801      	cmp	r0, #1
 80201dc:	d00a      	beq.n	80201f4 <sinf+0x54>
 80201de:	2802      	cmp	r0, #2
 80201e0:	d00f      	beq.n	8020202 <sinf+0x62>
 80201e2:	b9c0      	cbnz	r0, 8020216 <sinf+0x76>
 80201e4:	eddd 0a01 	vldr	s1, [sp, #4]
 80201e8:	ed9d 0a00 	vldr	s0, [sp]
 80201ec:	2001      	movs	r0, #1
 80201ee:	f000 f875 	bl	80202dc <__kernel_sinf>
 80201f2:	e7ea      	b.n	80201ca <sinf+0x2a>
 80201f4:	eddd 0a01 	vldr	s1, [sp, #4]
 80201f8:	ed9d 0a00 	vldr	s0, [sp]
 80201fc:	f000 f816 	bl	802022c <__kernel_cosf>
 8020200:	e7e3      	b.n	80201ca <sinf+0x2a>
 8020202:	eddd 0a01 	vldr	s1, [sp, #4]
 8020206:	ed9d 0a00 	vldr	s0, [sp]
 802020a:	2001      	movs	r0, #1
 802020c:	f000 f866 	bl	80202dc <__kernel_sinf>
 8020210:	eeb1 0a40 	vneg.f32	s0, s0
 8020214:	e7d9      	b.n	80201ca <sinf+0x2a>
 8020216:	eddd 0a01 	vldr	s1, [sp, #4]
 802021a:	ed9d 0a00 	vldr	s0, [sp]
 802021e:	f000 f805 	bl	802022c <__kernel_cosf>
 8020222:	e7f5      	b.n	8020210 <sinf+0x70>
 8020224:	3f490fd8 	.word	0x3f490fd8
 8020228:	00000000 	.word	0x00000000

0802022c <__kernel_cosf>:
 802022c:	ee10 3a10 	vmov	r3, s0
 8020230:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8020234:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8020238:	eef0 6a40 	vmov.f32	s13, s0
 802023c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8020240:	d204      	bcs.n	802024c <__kernel_cosf+0x20>
 8020242:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8020246:	ee17 2a90 	vmov	r2, s15
 802024a:	b342      	cbz	r2, 802029e <__kernel_cosf+0x72>
 802024c:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8020250:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 80202bc <__kernel_cosf+0x90>
 8020254:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 80202c0 <__kernel_cosf+0x94>
 8020258:	4a1a      	ldr	r2, [pc, #104]	@ (80202c4 <__kernel_cosf+0x98>)
 802025a:	eea7 6a27 	vfma.f32	s12, s14, s15
 802025e:	4293      	cmp	r3, r2
 8020260:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80202c8 <__kernel_cosf+0x9c>
 8020264:	eee6 7a07 	vfma.f32	s15, s12, s14
 8020268:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 80202cc <__kernel_cosf+0xa0>
 802026c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8020270:	eddf 7a17 	vldr	s15, [pc, #92]	@ 80202d0 <__kernel_cosf+0xa4>
 8020274:	eee6 7a07 	vfma.f32	s15, s12, s14
 8020278:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 80202d4 <__kernel_cosf+0xa8>
 802027c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8020280:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8020284:	ee26 6a07 	vmul.f32	s12, s12, s14
 8020288:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802028c:	eee7 0a06 	vfma.f32	s1, s14, s12
 8020290:	ee67 7a27 	vmul.f32	s15, s14, s15
 8020294:	d804      	bhi.n	80202a0 <__kernel_cosf+0x74>
 8020296:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802029a:	ee30 0a67 	vsub.f32	s0, s0, s15
 802029e:	4770      	bx	lr
 80202a0:	4a0d      	ldr	r2, [pc, #52]	@ (80202d8 <__kernel_cosf+0xac>)
 80202a2:	4293      	cmp	r3, r2
 80202a4:	bf9a      	itte	ls
 80202a6:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 80202aa:	ee07 3a10 	vmovls	s14, r3
 80202ae:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 80202b2:	ee30 0a47 	vsub.f32	s0, s0, s14
 80202b6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80202ba:	e7ec      	b.n	8020296 <__kernel_cosf+0x6a>
 80202bc:	ad47d74e 	.word	0xad47d74e
 80202c0:	310f74f6 	.word	0x310f74f6
 80202c4:	3e999999 	.word	0x3e999999
 80202c8:	b493f27c 	.word	0xb493f27c
 80202cc:	37d00d01 	.word	0x37d00d01
 80202d0:	bab60b61 	.word	0xbab60b61
 80202d4:	3d2aaaab 	.word	0x3d2aaaab
 80202d8:	3f480000 	.word	0x3f480000

080202dc <__kernel_sinf>:
 80202dc:	ee10 3a10 	vmov	r3, s0
 80202e0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80202e4:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80202e8:	d204      	bcs.n	80202f4 <__kernel_sinf+0x18>
 80202ea:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80202ee:	ee17 3a90 	vmov	r3, s15
 80202f2:	b35b      	cbz	r3, 802034c <__kernel_sinf+0x70>
 80202f4:	ee20 7a00 	vmul.f32	s14, s0, s0
 80202f8:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8020350 <__kernel_sinf+0x74>
 80202fc:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8020354 <__kernel_sinf+0x78>
 8020300:	eea7 6a27 	vfma.f32	s12, s14, s15
 8020304:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8020358 <__kernel_sinf+0x7c>
 8020308:	eee6 7a07 	vfma.f32	s15, s12, s14
 802030c:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 802035c <__kernel_sinf+0x80>
 8020310:	eea7 6a87 	vfma.f32	s12, s15, s14
 8020314:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8020360 <__kernel_sinf+0x84>
 8020318:	ee60 6a07 	vmul.f32	s13, s0, s14
 802031c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8020320:	b930      	cbnz	r0, 8020330 <__kernel_sinf+0x54>
 8020322:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8020364 <__kernel_sinf+0x88>
 8020326:	eea7 6a27 	vfma.f32	s12, s14, s15
 802032a:	eea6 0a26 	vfma.f32	s0, s12, s13
 802032e:	4770      	bx	lr
 8020330:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8020334:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8020338:	eee0 7a86 	vfma.f32	s15, s1, s12
 802033c:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8020340:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8020368 <__kernel_sinf+0x8c>
 8020344:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8020348:	ee30 0a60 	vsub.f32	s0, s0, s1
 802034c:	4770      	bx	lr
 802034e:	bf00      	nop
 8020350:	2f2ec9d3 	.word	0x2f2ec9d3
 8020354:	b2d72f34 	.word	0xb2d72f34
 8020358:	3638ef1b 	.word	0x3638ef1b
 802035c:	b9500d01 	.word	0xb9500d01
 8020360:	3c088889 	.word	0x3c088889
 8020364:	be2aaaab 	.word	0xbe2aaaab
 8020368:	3e2aaaab 	.word	0x3e2aaaab

0802036c <__ieee754_rem_pio2f>:
 802036c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802036e:	ee10 6a10 	vmov	r6, s0
 8020372:	4b88      	ldr	r3, [pc, #544]	@ (8020594 <__ieee754_rem_pio2f+0x228>)
 8020374:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8020378:	429d      	cmp	r5, r3
 802037a:	b087      	sub	sp, #28
 802037c:	4604      	mov	r4, r0
 802037e:	d805      	bhi.n	802038c <__ieee754_rem_pio2f+0x20>
 8020380:	2300      	movs	r3, #0
 8020382:	ed80 0a00 	vstr	s0, [r0]
 8020386:	6043      	str	r3, [r0, #4]
 8020388:	2000      	movs	r0, #0
 802038a:	e022      	b.n	80203d2 <__ieee754_rem_pio2f+0x66>
 802038c:	4b82      	ldr	r3, [pc, #520]	@ (8020598 <__ieee754_rem_pio2f+0x22c>)
 802038e:	429d      	cmp	r5, r3
 8020390:	d83a      	bhi.n	8020408 <__ieee754_rem_pio2f+0x9c>
 8020392:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8020396:	2e00      	cmp	r6, #0
 8020398:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 802059c <__ieee754_rem_pio2f+0x230>
 802039c:	4a80      	ldr	r2, [pc, #512]	@ (80205a0 <__ieee754_rem_pio2f+0x234>)
 802039e:	f023 030f 	bic.w	r3, r3, #15
 80203a2:	dd18      	ble.n	80203d6 <__ieee754_rem_pio2f+0x6a>
 80203a4:	4293      	cmp	r3, r2
 80203a6:	ee70 7a47 	vsub.f32	s15, s0, s14
 80203aa:	bf09      	itett	eq
 80203ac:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 80205a4 <__ieee754_rem_pio2f+0x238>
 80203b0:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 80205a8 <__ieee754_rem_pio2f+0x23c>
 80203b4:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 80205ac <__ieee754_rem_pio2f+0x240>
 80203b8:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 80203bc:	ee37 7ae6 	vsub.f32	s14, s15, s13
 80203c0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80203c4:	ed80 7a00 	vstr	s14, [r0]
 80203c8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80203cc:	edc0 7a01 	vstr	s15, [r0, #4]
 80203d0:	2001      	movs	r0, #1
 80203d2:	b007      	add	sp, #28
 80203d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80203d6:	4293      	cmp	r3, r2
 80203d8:	ee70 7a07 	vadd.f32	s15, s0, s14
 80203dc:	bf09      	itett	eq
 80203de:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 80205a4 <__ieee754_rem_pio2f+0x238>
 80203e2:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 80205a8 <__ieee754_rem_pio2f+0x23c>
 80203e6:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 80205ac <__ieee754_rem_pio2f+0x240>
 80203ea:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80203ee:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80203f2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80203f6:	ed80 7a00 	vstr	s14, [r0]
 80203fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80203fe:	edc0 7a01 	vstr	s15, [r0, #4]
 8020402:	f04f 30ff 	mov.w	r0, #4294967295
 8020406:	e7e4      	b.n	80203d2 <__ieee754_rem_pio2f+0x66>
 8020408:	4b69      	ldr	r3, [pc, #420]	@ (80205b0 <__ieee754_rem_pio2f+0x244>)
 802040a:	429d      	cmp	r5, r3
 802040c:	d873      	bhi.n	80204f6 <__ieee754_rem_pio2f+0x18a>
 802040e:	f000 f8dd 	bl	80205cc <fabsf>
 8020412:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 80205b4 <__ieee754_rem_pio2f+0x248>
 8020416:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802041a:	eee0 7a07 	vfma.f32	s15, s0, s14
 802041e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8020422:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8020426:	ee17 0a90 	vmov	r0, s15
 802042a:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802059c <__ieee754_rem_pio2f+0x230>
 802042e:	eea7 0a67 	vfms.f32	s0, s14, s15
 8020432:	281f      	cmp	r0, #31
 8020434:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 80205a8 <__ieee754_rem_pio2f+0x23c>
 8020438:	ee67 7a27 	vmul.f32	s15, s14, s15
 802043c:	eeb1 6a47 	vneg.f32	s12, s14
 8020440:	ee70 6a67 	vsub.f32	s13, s0, s15
 8020444:	ee16 1a90 	vmov	r1, s13
 8020448:	dc09      	bgt.n	802045e <__ieee754_rem_pio2f+0xf2>
 802044a:	4a5b      	ldr	r2, [pc, #364]	@ (80205b8 <__ieee754_rem_pio2f+0x24c>)
 802044c:	1e47      	subs	r7, r0, #1
 802044e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8020452:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8020456:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 802045a:	4293      	cmp	r3, r2
 802045c:	d107      	bne.n	802046e <__ieee754_rem_pio2f+0x102>
 802045e:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8020462:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8020466:	2a08      	cmp	r2, #8
 8020468:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802046c:	dc14      	bgt.n	8020498 <__ieee754_rem_pio2f+0x12c>
 802046e:	6021      	str	r1, [r4, #0]
 8020470:	ed94 7a00 	vldr	s14, [r4]
 8020474:	ee30 0a47 	vsub.f32	s0, s0, s14
 8020478:	2e00      	cmp	r6, #0
 802047a:	ee30 0a67 	vsub.f32	s0, s0, s15
 802047e:	ed84 0a01 	vstr	s0, [r4, #4]
 8020482:	daa6      	bge.n	80203d2 <__ieee754_rem_pio2f+0x66>
 8020484:	eeb1 7a47 	vneg.f32	s14, s14
 8020488:	eeb1 0a40 	vneg.f32	s0, s0
 802048c:	ed84 7a00 	vstr	s14, [r4]
 8020490:	ed84 0a01 	vstr	s0, [r4, #4]
 8020494:	4240      	negs	r0, r0
 8020496:	e79c      	b.n	80203d2 <__ieee754_rem_pio2f+0x66>
 8020498:	eddf 5a42 	vldr	s11, [pc, #264]	@ 80205a4 <__ieee754_rem_pio2f+0x238>
 802049c:	eef0 6a40 	vmov.f32	s13, s0
 80204a0:	eee6 6a25 	vfma.f32	s13, s12, s11
 80204a4:	ee70 7a66 	vsub.f32	s15, s0, s13
 80204a8:	eee6 7a25 	vfma.f32	s15, s12, s11
 80204ac:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 80205ac <__ieee754_rem_pio2f+0x240>
 80204b0:	eed7 7a25 	vfnms.f32	s15, s14, s11
 80204b4:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80204b8:	ee15 2a90 	vmov	r2, s11
 80204bc:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80204c0:	1a5b      	subs	r3, r3, r1
 80204c2:	2b19      	cmp	r3, #25
 80204c4:	dc04      	bgt.n	80204d0 <__ieee754_rem_pio2f+0x164>
 80204c6:	edc4 5a00 	vstr	s11, [r4]
 80204ca:	eeb0 0a66 	vmov.f32	s0, s13
 80204ce:	e7cf      	b.n	8020470 <__ieee754_rem_pio2f+0x104>
 80204d0:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 80205bc <__ieee754_rem_pio2f+0x250>
 80204d4:	eeb0 0a66 	vmov.f32	s0, s13
 80204d8:	eea6 0a25 	vfma.f32	s0, s12, s11
 80204dc:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80204e0:	eddf 6a37 	vldr	s13, [pc, #220]	@ 80205c0 <__ieee754_rem_pio2f+0x254>
 80204e4:	eee6 7a25 	vfma.f32	s15, s12, s11
 80204e8:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80204ec:	ee30 7a67 	vsub.f32	s14, s0, s15
 80204f0:	ed84 7a00 	vstr	s14, [r4]
 80204f4:	e7bc      	b.n	8020470 <__ieee754_rem_pio2f+0x104>
 80204f6:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 80204fa:	d306      	bcc.n	802050a <__ieee754_rem_pio2f+0x19e>
 80204fc:	ee70 7a40 	vsub.f32	s15, s0, s0
 8020500:	edc0 7a01 	vstr	s15, [r0, #4]
 8020504:	edc0 7a00 	vstr	s15, [r0]
 8020508:	e73e      	b.n	8020388 <__ieee754_rem_pio2f+0x1c>
 802050a:	15ea      	asrs	r2, r5, #23
 802050c:	3a86      	subs	r2, #134	@ 0x86
 802050e:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8020512:	ee07 3a90 	vmov	s15, r3
 8020516:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802051a:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 80205c4 <__ieee754_rem_pio2f+0x258>
 802051e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8020522:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8020526:	ed8d 7a03 	vstr	s14, [sp, #12]
 802052a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802052e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8020532:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8020536:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802053a:	ed8d 7a04 	vstr	s14, [sp, #16]
 802053e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8020542:	eef5 7a40 	vcmp.f32	s15, #0.0
 8020546:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802054a:	edcd 7a05 	vstr	s15, [sp, #20]
 802054e:	d11e      	bne.n	802058e <__ieee754_rem_pio2f+0x222>
 8020550:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8020554:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020558:	bf0c      	ite	eq
 802055a:	2301      	moveq	r3, #1
 802055c:	2302      	movne	r3, #2
 802055e:	491a      	ldr	r1, [pc, #104]	@ (80205c8 <__ieee754_rem_pio2f+0x25c>)
 8020560:	9101      	str	r1, [sp, #4]
 8020562:	2102      	movs	r1, #2
 8020564:	9100      	str	r1, [sp, #0]
 8020566:	a803      	add	r0, sp, #12
 8020568:	4621      	mov	r1, r4
 802056a:	f000 f837 	bl	80205dc <__kernel_rem_pio2f>
 802056e:	2e00      	cmp	r6, #0
 8020570:	f6bf af2f 	bge.w	80203d2 <__ieee754_rem_pio2f+0x66>
 8020574:	edd4 7a00 	vldr	s15, [r4]
 8020578:	eef1 7a67 	vneg.f32	s15, s15
 802057c:	edc4 7a00 	vstr	s15, [r4]
 8020580:	edd4 7a01 	vldr	s15, [r4, #4]
 8020584:	eef1 7a67 	vneg.f32	s15, s15
 8020588:	edc4 7a01 	vstr	s15, [r4, #4]
 802058c:	e782      	b.n	8020494 <__ieee754_rem_pio2f+0x128>
 802058e:	2303      	movs	r3, #3
 8020590:	e7e5      	b.n	802055e <__ieee754_rem_pio2f+0x1f2>
 8020592:	bf00      	nop
 8020594:	3f490fd8 	.word	0x3f490fd8
 8020598:	4016cbe3 	.word	0x4016cbe3
 802059c:	3fc90f80 	.word	0x3fc90f80
 80205a0:	3fc90fd0 	.word	0x3fc90fd0
 80205a4:	37354400 	.word	0x37354400
 80205a8:	37354443 	.word	0x37354443
 80205ac:	2e85a308 	.word	0x2e85a308
 80205b0:	43490f80 	.word	0x43490f80
 80205b4:	3f22f984 	.word	0x3f22f984
 80205b8:	08023cd8 	.word	0x08023cd8
 80205bc:	2e85a300 	.word	0x2e85a300
 80205c0:	248d3132 	.word	0x248d3132
 80205c4:	43800000 	.word	0x43800000
 80205c8:	08023d58 	.word	0x08023d58

080205cc <fabsf>:
 80205cc:	ee10 3a10 	vmov	r3, s0
 80205d0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80205d4:	ee00 3a10 	vmov	s0, r3
 80205d8:	4770      	bx	lr
	...

080205dc <__kernel_rem_pio2f>:
 80205dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80205e0:	ed2d 8b04 	vpush	{d8-d9}
 80205e4:	b0d9      	sub	sp, #356	@ 0x164
 80205e6:	4690      	mov	r8, r2
 80205e8:	9001      	str	r0, [sp, #4]
 80205ea:	4ab9      	ldr	r2, [pc, #740]	@ (80208d0 <__kernel_rem_pio2f+0x2f4>)
 80205ec:	9866      	ldr	r0, [sp, #408]	@ 0x198
 80205ee:	f118 0f04 	cmn.w	r8, #4
 80205f2:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 80205f6:	460f      	mov	r7, r1
 80205f8:	f103 3bff 	add.w	fp, r3, #4294967295
 80205fc:	db27      	blt.n	802064e <__kernel_rem_pio2f+0x72>
 80205fe:	f1b8 0203 	subs.w	r2, r8, #3
 8020602:	bf48      	it	mi
 8020604:	f108 0204 	addmi.w	r2, r8, #4
 8020608:	10d2      	asrs	r2, r2, #3
 802060a:	1c55      	adds	r5, r2, #1
 802060c:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802060e:	ed9f 7ab4 	vldr	s14, [pc, #720]	@ 80208e0 <__kernel_rem_pio2f+0x304>
 8020612:	00e8      	lsls	r0, r5, #3
 8020614:	eba2 060b 	sub.w	r6, r2, fp
 8020618:	9002      	str	r0, [sp, #8]
 802061a:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 802061e:	eb0a 0c0b 	add.w	ip, sl, fp
 8020622:	ac1c      	add	r4, sp, #112	@ 0x70
 8020624:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8020628:	2000      	movs	r0, #0
 802062a:	4560      	cmp	r0, ip
 802062c:	dd11      	ble.n	8020652 <__kernel_rem_pio2f+0x76>
 802062e:	a91c      	add	r1, sp, #112	@ 0x70
 8020630:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8020634:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8020638:	f04f 0c00 	mov.w	ip, #0
 802063c:	45d4      	cmp	ip, sl
 802063e:	dc27      	bgt.n	8020690 <__kernel_rem_pio2f+0xb4>
 8020640:	f8dd e004 	ldr.w	lr, [sp, #4]
 8020644:	eddf 7aa6 	vldr	s15, [pc, #664]	@ 80208e0 <__kernel_rem_pio2f+0x304>
 8020648:	4606      	mov	r6, r0
 802064a:	2400      	movs	r4, #0
 802064c:	e016      	b.n	802067c <__kernel_rem_pio2f+0xa0>
 802064e:	2200      	movs	r2, #0
 8020650:	e7db      	b.n	802060a <__kernel_rem_pio2f+0x2e>
 8020652:	42c6      	cmn	r6, r0
 8020654:	bf5d      	ittte	pl
 8020656:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 802065a:	ee07 1a90 	vmovpl	s15, r1
 802065e:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8020662:	eef0 7a47 	vmovmi.f32	s15, s14
 8020666:	ece4 7a01 	vstmia	r4!, {s15}
 802066a:	3001      	adds	r0, #1
 802066c:	e7dd      	b.n	802062a <__kernel_rem_pio2f+0x4e>
 802066e:	ecfe 6a01 	vldmia	lr!, {s13}
 8020672:	ed96 7a00 	vldr	s14, [r6]
 8020676:	eee6 7a87 	vfma.f32	s15, s13, s14
 802067a:	3401      	adds	r4, #1
 802067c:	455c      	cmp	r4, fp
 802067e:	f1a6 0604 	sub.w	r6, r6, #4
 8020682:	ddf4      	ble.n	802066e <__kernel_rem_pio2f+0x92>
 8020684:	ece9 7a01 	vstmia	r9!, {s15}
 8020688:	f10c 0c01 	add.w	ip, ip, #1
 802068c:	3004      	adds	r0, #4
 802068e:	e7d5      	b.n	802063c <__kernel_rem_pio2f+0x60>
 8020690:	a908      	add	r1, sp, #32
 8020692:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8020696:	9104      	str	r1, [sp, #16]
 8020698:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802069a:	eddf 8a90 	vldr	s17, [pc, #576]	@ 80208dc <__kernel_rem_pio2f+0x300>
 802069e:	ed9f 9a8e 	vldr	s18, [pc, #568]	@ 80208d8 <__kernel_rem_pio2f+0x2fc>
 80206a2:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80206a6:	9203      	str	r2, [sp, #12]
 80206a8:	4654      	mov	r4, sl
 80206aa:	00a2      	lsls	r2, r4, #2
 80206ac:	9205      	str	r2, [sp, #20]
 80206ae:	aa58      	add	r2, sp, #352	@ 0x160
 80206b0:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 80206b4:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 80206b8:	a944      	add	r1, sp, #272	@ 0x110
 80206ba:	aa08      	add	r2, sp, #32
 80206bc:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 80206c0:	4694      	mov	ip, r2
 80206c2:	4626      	mov	r6, r4
 80206c4:	2e00      	cmp	r6, #0
 80206c6:	f1a0 0004 	sub.w	r0, r0, #4
 80206ca:	dc4c      	bgt.n	8020766 <__kernel_rem_pio2f+0x18a>
 80206cc:	4628      	mov	r0, r5
 80206ce:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80206d2:	f000 f9f5 	bl	8020ac0 <scalbnf>
 80206d6:	eeb0 8a40 	vmov.f32	s16, s0
 80206da:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 80206de:	ee28 0a00 	vmul.f32	s0, s16, s0
 80206e2:	f000 fa53 	bl	8020b8c <floorf>
 80206e6:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 80206ea:	eea0 8a67 	vfms.f32	s16, s0, s15
 80206ee:	2d00      	cmp	r5, #0
 80206f0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80206f4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80206f8:	ee17 9a90 	vmov	r9, s15
 80206fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8020700:	ee38 8a67 	vsub.f32	s16, s16, s15
 8020704:	dd41      	ble.n	802078a <__kernel_rem_pio2f+0x1ae>
 8020706:	f104 3cff 	add.w	ip, r4, #4294967295
 802070a:	a908      	add	r1, sp, #32
 802070c:	f1c5 0e08 	rsb	lr, r5, #8
 8020710:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8020714:	fa46 f00e 	asr.w	r0, r6, lr
 8020718:	4481      	add	r9, r0
 802071a:	fa00 f00e 	lsl.w	r0, r0, lr
 802071e:	1a36      	subs	r6, r6, r0
 8020720:	f1c5 0007 	rsb	r0, r5, #7
 8020724:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8020728:	4106      	asrs	r6, r0
 802072a:	2e00      	cmp	r6, #0
 802072c:	dd3c      	ble.n	80207a8 <__kernel_rem_pio2f+0x1cc>
 802072e:	f04f 0e00 	mov.w	lr, #0
 8020732:	f109 0901 	add.w	r9, r9, #1
 8020736:	4670      	mov	r0, lr
 8020738:	4574      	cmp	r4, lr
 802073a:	dc68      	bgt.n	802080e <__kernel_rem_pio2f+0x232>
 802073c:	2d00      	cmp	r5, #0
 802073e:	dd03      	ble.n	8020748 <__kernel_rem_pio2f+0x16c>
 8020740:	2d01      	cmp	r5, #1
 8020742:	d074      	beq.n	802082e <__kernel_rem_pio2f+0x252>
 8020744:	2d02      	cmp	r5, #2
 8020746:	d07d      	beq.n	8020844 <__kernel_rem_pio2f+0x268>
 8020748:	2e02      	cmp	r6, #2
 802074a:	d12d      	bne.n	80207a8 <__kernel_rem_pio2f+0x1cc>
 802074c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8020750:	ee30 8a48 	vsub.f32	s16, s0, s16
 8020754:	b340      	cbz	r0, 80207a8 <__kernel_rem_pio2f+0x1cc>
 8020756:	4628      	mov	r0, r5
 8020758:	9306      	str	r3, [sp, #24]
 802075a:	f000 f9b1 	bl	8020ac0 <scalbnf>
 802075e:	9b06      	ldr	r3, [sp, #24]
 8020760:	ee38 8a40 	vsub.f32	s16, s16, s0
 8020764:	e020      	b.n	80207a8 <__kernel_rem_pio2f+0x1cc>
 8020766:	ee60 7a28 	vmul.f32	s15, s0, s17
 802076a:	3e01      	subs	r6, #1
 802076c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8020770:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8020774:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8020778:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802077c:	ecac 0a01 	vstmia	ip!, {s0}
 8020780:	ed90 0a00 	vldr	s0, [r0]
 8020784:	ee37 0a80 	vadd.f32	s0, s15, s0
 8020788:	e79c      	b.n	80206c4 <__kernel_rem_pio2f+0xe8>
 802078a:	d105      	bne.n	8020798 <__kernel_rem_pio2f+0x1bc>
 802078c:	1e60      	subs	r0, r4, #1
 802078e:	a908      	add	r1, sp, #32
 8020790:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8020794:	11f6      	asrs	r6, r6, #7
 8020796:	e7c8      	b.n	802072a <__kernel_rem_pio2f+0x14e>
 8020798:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802079c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80207a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207a4:	da31      	bge.n	802080a <__kernel_rem_pio2f+0x22e>
 80207a6:	2600      	movs	r6, #0
 80207a8:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80207ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207b0:	f040 8098 	bne.w	80208e4 <__kernel_rem_pio2f+0x308>
 80207b4:	1e60      	subs	r0, r4, #1
 80207b6:	2200      	movs	r2, #0
 80207b8:	4550      	cmp	r0, sl
 80207ba:	da4b      	bge.n	8020854 <__kernel_rem_pio2f+0x278>
 80207bc:	2a00      	cmp	r2, #0
 80207be:	d065      	beq.n	802088c <__kernel_rem_pio2f+0x2b0>
 80207c0:	3c01      	subs	r4, #1
 80207c2:	ab08      	add	r3, sp, #32
 80207c4:	3d08      	subs	r5, #8
 80207c6:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80207ca:	2b00      	cmp	r3, #0
 80207cc:	d0f8      	beq.n	80207c0 <__kernel_rem_pio2f+0x1e4>
 80207ce:	4628      	mov	r0, r5
 80207d0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80207d4:	f000 f974 	bl	8020ac0 <scalbnf>
 80207d8:	1c63      	adds	r3, r4, #1
 80207da:	aa44      	add	r2, sp, #272	@ 0x110
 80207dc:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 80208dc <__kernel_rem_pio2f+0x300>
 80207e0:	0099      	lsls	r1, r3, #2
 80207e2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80207e6:	4623      	mov	r3, r4
 80207e8:	2b00      	cmp	r3, #0
 80207ea:	f280 80a9 	bge.w	8020940 <__kernel_rem_pio2f+0x364>
 80207ee:	4623      	mov	r3, r4
 80207f0:	2b00      	cmp	r3, #0
 80207f2:	f2c0 80c7 	blt.w	8020984 <__kernel_rem_pio2f+0x3a8>
 80207f6:	aa44      	add	r2, sp, #272	@ 0x110
 80207f8:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80207fc:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 80208d4 <__kernel_rem_pio2f+0x2f8>
 8020800:	eddf 7a37 	vldr	s15, [pc, #220]	@ 80208e0 <__kernel_rem_pio2f+0x304>
 8020804:	2000      	movs	r0, #0
 8020806:	1ae2      	subs	r2, r4, r3
 8020808:	e0b1      	b.n	802096e <__kernel_rem_pio2f+0x392>
 802080a:	2602      	movs	r6, #2
 802080c:	e78f      	b.n	802072e <__kernel_rem_pio2f+0x152>
 802080e:	f852 1b04 	ldr.w	r1, [r2], #4
 8020812:	b948      	cbnz	r0, 8020828 <__kernel_rem_pio2f+0x24c>
 8020814:	b121      	cbz	r1, 8020820 <__kernel_rem_pio2f+0x244>
 8020816:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802081a:	f842 1c04 	str.w	r1, [r2, #-4]
 802081e:	2101      	movs	r1, #1
 8020820:	f10e 0e01 	add.w	lr, lr, #1
 8020824:	4608      	mov	r0, r1
 8020826:	e787      	b.n	8020738 <__kernel_rem_pio2f+0x15c>
 8020828:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 802082c:	e7f5      	b.n	802081a <__kernel_rem_pio2f+0x23e>
 802082e:	f104 3cff 	add.w	ip, r4, #4294967295
 8020832:	aa08      	add	r2, sp, #32
 8020834:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8020838:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 802083c:	a908      	add	r1, sp, #32
 802083e:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 8020842:	e781      	b.n	8020748 <__kernel_rem_pio2f+0x16c>
 8020844:	f104 3cff 	add.w	ip, r4, #4294967295
 8020848:	aa08      	add	r2, sp, #32
 802084a:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802084e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8020852:	e7f3      	b.n	802083c <__kernel_rem_pio2f+0x260>
 8020854:	a908      	add	r1, sp, #32
 8020856:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 802085a:	3801      	subs	r0, #1
 802085c:	430a      	orrs	r2, r1
 802085e:	e7ab      	b.n	80207b8 <__kernel_rem_pio2f+0x1dc>
 8020860:	3201      	adds	r2, #1
 8020862:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 8020866:	2e00      	cmp	r6, #0
 8020868:	d0fa      	beq.n	8020860 <__kernel_rem_pio2f+0x284>
 802086a:	9905      	ldr	r1, [sp, #20]
 802086c:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 8020870:	eb0d 0001 	add.w	r0, sp, r1
 8020874:	18e6      	adds	r6, r4, r3
 8020876:	a91c      	add	r1, sp, #112	@ 0x70
 8020878:	f104 0c01 	add.w	ip, r4, #1
 802087c:	384c      	subs	r0, #76	@ 0x4c
 802087e:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8020882:	4422      	add	r2, r4
 8020884:	4562      	cmp	r2, ip
 8020886:	da04      	bge.n	8020892 <__kernel_rem_pio2f+0x2b6>
 8020888:	4614      	mov	r4, r2
 802088a:	e70e      	b.n	80206aa <__kernel_rem_pio2f+0xce>
 802088c:	9804      	ldr	r0, [sp, #16]
 802088e:	2201      	movs	r2, #1
 8020890:	e7e7      	b.n	8020862 <__kernel_rem_pio2f+0x286>
 8020892:	9903      	ldr	r1, [sp, #12]
 8020894:	f8dd e004 	ldr.w	lr, [sp, #4]
 8020898:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 802089c:	9105      	str	r1, [sp, #20]
 802089e:	ee07 1a90 	vmov	s15, r1
 80208a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80208a6:	2400      	movs	r4, #0
 80208a8:	ece6 7a01 	vstmia	r6!, {s15}
 80208ac:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 80208e0 <__kernel_rem_pio2f+0x304>
 80208b0:	46b1      	mov	r9, r6
 80208b2:	455c      	cmp	r4, fp
 80208b4:	dd04      	ble.n	80208c0 <__kernel_rem_pio2f+0x2e4>
 80208b6:	ece0 7a01 	vstmia	r0!, {s15}
 80208ba:	f10c 0c01 	add.w	ip, ip, #1
 80208be:	e7e1      	b.n	8020884 <__kernel_rem_pio2f+0x2a8>
 80208c0:	ecfe 6a01 	vldmia	lr!, {s13}
 80208c4:	ed39 7a01 	vldmdb	r9!, {s14}
 80208c8:	3401      	adds	r4, #1
 80208ca:	eee6 7a87 	vfma.f32	s15, s13, s14
 80208ce:	e7f0      	b.n	80208b2 <__kernel_rem_pio2f+0x2d6>
 80208d0:	0802409c 	.word	0x0802409c
 80208d4:	08024070 	.word	0x08024070
 80208d8:	43800000 	.word	0x43800000
 80208dc:	3b800000 	.word	0x3b800000
 80208e0:	00000000 	.word	0x00000000
 80208e4:	9b02      	ldr	r3, [sp, #8]
 80208e6:	eeb0 0a48 	vmov.f32	s0, s16
 80208ea:	eba3 0008 	sub.w	r0, r3, r8
 80208ee:	f000 f8e7 	bl	8020ac0 <scalbnf>
 80208f2:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 80208d8 <__kernel_rem_pio2f+0x2fc>
 80208f6:	eeb4 0ac7 	vcmpe.f32	s0, s14
 80208fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80208fe:	db19      	blt.n	8020934 <__kernel_rem_pio2f+0x358>
 8020900:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 80208dc <__kernel_rem_pio2f+0x300>
 8020904:	ee60 7a27 	vmul.f32	s15, s0, s15
 8020908:	aa08      	add	r2, sp, #32
 802090a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802090e:	3508      	adds	r5, #8
 8020910:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8020914:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8020918:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802091c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8020920:	ee10 3a10 	vmov	r3, s0
 8020924:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8020928:	ee17 3a90 	vmov	r3, s15
 802092c:	3401      	adds	r4, #1
 802092e:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8020932:	e74c      	b.n	80207ce <__kernel_rem_pio2f+0x1f2>
 8020934:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8020938:	aa08      	add	r2, sp, #32
 802093a:	ee10 3a10 	vmov	r3, s0
 802093e:	e7f6      	b.n	802092e <__kernel_rem_pio2f+0x352>
 8020940:	a808      	add	r0, sp, #32
 8020942:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8020946:	9001      	str	r0, [sp, #4]
 8020948:	ee07 0a90 	vmov	s15, r0
 802094c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8020950:	3b01      	subs	r3, #1
 8020952:	ee67 7a80 	vmul.f32	s15, s15, s0
 8020956:	ee20 0a07 	vmul.f32	s0, s0, s14
 802095a:	ed62 7a01 	vstmdb	r2!, {s15}
 802095e:	e743      	b.n	80207e8 <__kernel_rem_pio2f+0x20c>
 8020960:	ecfc 6a01 	vldmia	ip!, {s13}
 8020964:	ecb5 7a01 	vldmia	r5!, {s14}
 8020968:	eee6 7a87 	vfma.f32	s15, s13, s14
 802096c:	3001      	adds	r0, #1
 802096e:	4550      	cmp	r0, sl
 8020970:	dc01      	bgt.n	8020976 <__kernel_rem_pio2f+0x39a>
 8020972:	4282      	cmp	r2, r0
 8020974:	daf4      	bge.n	8020960 <__kernel_rem_pio2f+0x384>
 8020976:	a858      	add	r0, sp, #352	@ 0x160
 8020978:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802097c:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 8020980:	3b01      	subs	r3, #1
 8020982:	e735      	b.n	80207f0 <__kernel_rem_pio2f+0x214>
 8020984:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8020986:	2b02      	cmp	r3, #2
 8020988:	dc09      	bgt.n	802099e <__kernel_rem_pio2f+0x3c2>
 802098a:	2b00      	cmp	r3, #0
 802098c:	dc2b      	bgt.n	80209e6 <__kernel_rem_pio2f+0x40a>
 802098e:	d044      	beq.n	8020a1a <__kernel_rem_pio2f+0x43e>
 8020990:	f009 0007 	and.w	r0, r9, #7
 8020994:	b059      	add	sp, #356	@ 0x164
 8020996:	ecbd 8b04 	vpop	{d8-d9}
 802099a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802099e:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80209a0:	2b03      	cmp	r3, #3
 80209a2:	d1f5      	bne.n	8020990 <__kernel_rem_pio2f+0x3b4>
 80209a4:	aa30      	add	r2, sp, #192	@ 0xc0
 80209a6:	1f0b      	subs	r3, r1, #4
 80209a8:	4413      	add	r3, r2
 80209aa:	461a      	mov	r2, r3
 80209ac:	4620      	mov	r0, r4
 80209ae:	2800      	cmp	r0, #0
 80209b0:	f1a2 0204 	sub.w	r2, r2, #4
 80209b4:	dc52      	bgt.n	8020a5c <__kernel_rem_pio2f+0x480>
 80209b6:	4622      	mov	r2, r4
 80209b8:	2a01      	cmp	r2, #1
 80209ba:	f1a3 0304 	sub.w	r3, r3, #4
 80209be:	dc5d      	bgt.n	8020a7c <__kernel_rem_pio2f+0x4a0>
 80209c0:	ab30      	add	r3, sp, #192	@ 0xc0
 80209c2:	ed5f 7a39 	vldr	s15, [pc, #-228]	@ 80208e0 <__kernel_rem_pio2f+0x304>
 80209c6:	440b      	add	r3, r1
 80209c8:	2c01      	cmp	r4, #1
 80209ca:	dc67      	bgt.n	8020a9c <__kernel_rem_pio2f+0x4c0>
 80209cc:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 80209d0:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 80209d4:	2e00      	cmp	r6, #0
 80209d6:	d167      	bne.n	8020aa8 <__kernel_rem_pio2f+0x4cc>
 80209d8:	edc7 6a00 	vstr	s13, [r7]
 80209dc:	ed87 7a01 	vstr	s14, [r7, #4]
 80209e0:	edc7 7a02 	vstr	s15, [r7, #8]
 80209e4:	e7d4      	b.n	8020990 <__kernel_rem_pio2f+0x3b4>
 80209e6:	ab30      	add	r3, sp, #192	@ 0xc0
 80209e8:	ed1f 7a43 	vldr	s14, [pc, #-268]	@ 80208e0 <__kernel_rem_pio2f+0x304>
 80209ec:	440b      	add	r3, r1
 80209ee:	4622      	mov	r2, r4
 80209f0:	2a00      	cmp	r2, #0
 80209f2:	da24      	bge.n	8020a3e <__kernel_rem_pio2f+0x462>
 80209f4:	b34e      	cbz	r6, 8020a4a <__kernel_rem_pio2f+0x46e>
 80209f6:	eef1 7a47 	vneg.f32	s15, s14
 80209fa:	edc7 7a00 	vstr	s15, [r7]
 80209fe:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8020a02:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8020a06:	aa31      	add	r2, sp, #196	@ 0xc4
 8020a08:	2301      	movs	r3, #1
 8020a0a:	429c      	cmp	r4, r3
 8020a0c:	da20      	bge.n	8020a50 <__kernel_rem_pio2f+0x474>
 8020a0e:	b10e      	cbz	r6, 8020a14 <__kernel_rem_pio2f+0x438>
 8020a10:	eef1 7a67 	vneg.f32	s15, s15
 8020a14:	edc7 7a01 	vstr	s15, [r7, #4]
 8020a18:	e7ba      	b.n	8020990 <__kernel_rem_pio2f+0x3b4>
 8020a1a:	ab30      	add	r3, sp, #192	@ 0xc0
 8020a1c:	ed5f 7a50 	vldr	s15, [pc, #-320]	@ 80208e0 <__kernel_rem_pio2f+0x304>
 8020a20:	440b      	add	r3, r1
 8020a22:	2c00      	cmp	r4, #0
 8020a24:	da05      	bge.n	8020a32 <__kernel_rem_pio2f+0x456>
 8020a26:	b10e      	cbz	r6, 8020a2c <__kernel_rem_pio2f+0x450>
 8020a28:	eef1 7a67 	vneg.f32	s15, s15
 8020a2c:	edc7 7a00 	vstr	s15, [r7]
 8020a30:	e7ae      	b.n	8020990 <__kernel_rem_pio2f+0x3b4>
 8020a32:	ed33 7a01 	vldmdb	r3!, {s14}
 8020a36:	3c01      	subs	r4, #1
 8020a38:	ee77 7a87 	vadd.f32	s15, s15, s14
 8020a3c:	e7f1      	b.n	8020a22 <__kernel_rem_pio2f+0x446>
 8020a3e:	ed73 7a01 	vldmdb	r3!, {s15}
 8020a42:	3a01      	subs	r2, #1
 8020a44:	ee37 7a27 	vadd.f32	s14, s14, s15
 8020a48:	e7d2      	b.n	80209f0 <__kernel_rem_pio2f+0x414>
 8020a4a:	eef0 7a47 	vmov.f32	s15, s14
 8020a4e:	e7d4      	b.n	80209fa <__kernel_rem_pio2f+0x41e>
 8020a50:	ecb2 7a01 	vldmia	r2!, {s14}
 8020a54:	3301      	adds	r3, #1
 8020a56:	ee77 7a87 	vadd.f32	s15, s15, s14
 8020a5a:	e7d6      	b.n	8020a0a <__kernel_rem_pio2f+0x42e>
 8020a5c:	edd2 7a00 	vldr	s15, [r2]
 8020a60:	edd2 6a01 	vldr	s13, [r2, #4]
 8020a64:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8020a68:	3801      	subs	r0, #1
 8020a6a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8020a6e:	ed82 7a00 	vstr	s14, [r2]
 8020a72:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8020a76:	edc2 7a01 	vstr	s15, [r2, #4]
 8020a7a:	e798      	b.n	80209ae <__kernel_rem_pio2f+0x3d2>
 8020a7c:	edd3 7a00 	vldr	s15, [r3]
 8020a80:	edd3 6a01 	vldr	s13, [r3, #4]
 8020a84:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8020a88:	3a01      	subs	r2, #1
 8020a8a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8020a8e:	ed83 7a00 	vstr	s14, [r3]
 8020a92:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8020a96:	edc3 7a01 	vstr	s15, [r3, #4]
 8020a9a:	e78d      	b.n	80209b8 <__kernel_rem_pio2f+0x3dc>
 8020a9c:	ed33 7a01 	vldmdb	r3!, {s14}
 8020aa0:	3c01      	subs	r4, #1
 8020aa2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8020aa6:	e78f      	b.n	80209c8 <__kernel_rem_pio2f+0x3ec>
 8020aa8:	eef1 6a66 	vneg.f32	s13, s13
 8020aac:	eeb1 7a47 	vneg.f32	s14, s14
 8020ab0:	edc7 6a00 	vstr	s13, [r7]
 8020ab4:	ed87 7a01 	vstr	s14, [r7, #4]
 8020ab8:	eef1 7a67 	vneg.f32	s15, s15
 8020abc:	e790      	b.n	80209e0 <__kernel_rem_pio2f+0x404>
 8020abe:	bf00      	nop

08020ac0 <scalbnf>:
 8020ac0:	ee10 3a10 	vmov	r3, s0
 8020ac4:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8020ac8:	d02b      	beq.n	8020b22 <scalbnf+0x62>
 8020aca:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8020ace:	d302      	bcc.n	8020ad6 <scalbnf+0x16>
 8020ad0:	ee30 0a00 	vadd.f32	s0, s0, s0
 8020ad4:	4770      	bx	lr
 8020ad6:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8020ada:	d123      	bne.n	8020b24 <scalbnf+0x64>
 8020adc:	4b24      	ldr	r3, [pc, #144]	@ (8020b70 <scalbnf+0xb0>)
 8020ade:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8020b74 <scalbnf+0xb4>
 8020ae2:	4298      	cmp	r0, r3
 8020ae4:	ee20 0a27 	vmul.f32	s0, s0, s15
 8020ae8:	db17      	blt.n	8020b1a <scalbnf+0x5a>
 8020aea:	ee10 3a10 	vmov	r3, s0
 8020aee:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020af2:	3a19      	subs	r2, #25
 8020af4:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8020af8:	4288      	cmp	r0, r1
 8020afa:	dd15      	ble.n	8020b28 <scalbnf+0x68>
 8020afc:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8020b78 <scalbnf+0xb8>
 8020b00:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8020b7c <scalbnf+0xbc>
 8020b04:	ee10 3a10 	vmov	r3, s0
 8020b08:	eeb0 7a67 	vmov.f32	s14, s15
 8020b0c:	2b00      	cmp	r3, #0
 8020b0e:	bfb8      	it	lt
 8020b10:	eef0 7a66 	vmovlt.f32	s15, s13
 8020b14:	ee27 0a87 	vmul.f32	s0, s15, s14
 8020b18:	4770      	bx	lr
 8020b1a:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8020b80 <scalbnf+0xc0>
 8020b1e:	ee27 0a80 	vmul.f32	s0, s15, s0
 8020b22:	4770      	bx	lr
 8020b24:	0dd2      	lsrs	r2, r2, #23
 8020b26:	e7e5      	b.n	8020af4 <scalbnf+0x34>
 8020b28:	4410      	add	r0, r2
 8020b2a:	28fe      	cmp	r0, #254	@ 0xfe
 8020b2c:	dce6      	bgt.n	8020afc <scalbnf+0x3c>
 8020b2e:	2800      	cmp	r0, #0
 8020b30:	dd06      	ble.n	8020b40 <scalbnf+0x80>
 8020b32:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8020b36:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8020b3a:	ee00 3a10 	vmov	s0, r3
 8020b3e:	4770      	bx	lr
 8020b40:	f110 0f16 	cmn.w	r0, #22
 8020b44:	da09      	bge.n	8020b5a <scalbnf+0x9a>
 8020b46:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8020b80 <scalbnf+0xc0>
 8020b4a:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8020b84 <scalbnf+0xc4>
 8020b4e:	ee10 3a10 	vmov	r3, s0
 8020b52:	eeb0 7a67 	vmov.f32	s14, s15
 8020b56:	2b00      	cmp	r3, #0
 8020b58:	e7d9      	b.n	8020b0e <scalbnf+0x4e>
 8020b5a:	3019      	adds	r0, #25
 8020b5c:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8020b60:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8020b64:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8020b88 <scalbnf+0xc8>
 8020b68:	ee07 3a90 	vmov	s15, r3
 8020b6c:	e7d7      	b.n	8020b1e <scalbnf+0x5e>
 8020b6e:	bf00      	nop
 8020b70:	ffff3cb0 	.word	0xffff3cb0
 8020b74:	4c000000 	.word	0x4c000000
 8020b78:	7149f2ca 	.word	0x7149f2ca
 8020b7c:	f149f2ca 	.word	0xf149f2ca
 8020b80:	0da24260 	.word	0x0da24260
 8020b84:	8da24260 	.word	0x8da24260
 8020b88:	33000000 	.word	0x33000000

08020b8c <floorf>:
 8020b8c:	ee10 3a10 	vmov	r3, s0
 8020b90:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020b94:	3a7f      	subs	r2, #127	@ 0x7f
 8020b96:	2a16      	cmp	r2, #22
 8020b98:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8020b9c:	dc2b      	bgt.n	8020bf6 <floorf+0x6a>
 8020b9e:	2a00      	cmp	r2, #0
 8020ba0:	da12      	bge.n	8020bc8 <floorf+0x3c>
 8020ba2:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8020c08 <floorf+0x7c>
 8020ba6:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020baa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020bae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020bb2:	dd06      	ble.n	8020bc2 <floorf+0x36>
 8020bb4:	2b00      	cmp	r3, #0
 8020bb6:	da24      	bge.n	8020c02 <floorf+0x76>
 8020bb8:	2900      	cmp	r1, #0
 8020bba:	4b14      	ldr	r3, [pc, #80]	@ (8020c0c <floorf+0x80>)
 8020bbc:	bf08      	it	eq
 8020bbe:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 8020bc2:	ee00 3a10 	vmov	s0, r3
 8020bc6:	4770      	bx	lr
 8020bc8:	4911      	ldr	r1, [pc, #68]	@ (8020c10 <floorf+0x84>)
 8020bca:	4111      	asrs	r1, r2
 8020bcc:	420b      	tst	r3, r1
 8020bce:	d0fa      	beq.n	8020bc6 <floorf+0x3a>
 8020bd0:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8020c08 <floorf+0x7c>
 8020bd4:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020bd8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020bdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020be0:	ddef      	ble.n	8020bc2 <floorf+0x36>
 8020be2:	2b00      	cmp	r3, #0
 8020be4:	bfbe      	ittt	lt
 8020be6:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 8020bea:	fa40 f202 	asrlt.w	r2, r0, r2
 8020bee:	189b      	addlt	r3, r3, r2
 8020bf0:	ea23 0301 	bic.w	r3, r3, r1
 8020bf4:	e7e5      	b.n	8020bc2 <floorf+0x36>
 8020bf6:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8020bfa:	d3e4      	bcc.n	8020bc6 <floorf+0x3a>
 8020bfc:	ee30 0a00 	vadd.f32	s0, s0, s0
 8020c00:	4770      	bx	lr
 8020c02:	2300      	movs	r3, #0
 8020c04:	e7dd      	b.n	8020bc2 <floorf+0x36>
 8020c06:	bf00      	nop
 8020c08:	7149f2ca 	.word	0x7149f2ca
 8020c0c:	bf800000 	.word	0xbf800000
 8020c10:	007fffff 	.word	0x007fffff

08020c14 <abort>:
 8020c14:	b508      	push	{r3, lr}
 8020c16:	2006      	movs	r0, #6
 8020c18:	f000 fad0 	bl	80211bc <raise>
 8020c1c:	2001      	movs	r0, #1
 8020c1e:	f7e0 fb81 	bl	8001324 <_exit>
	...

08020c24 <__assert_func>:
 8020c24:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020c26:	4614      	mov	r4, r2
 8020c28:	461a      	mov	r2, r3
 8020c2a:	4b09      	ldr	r3, [pc, #36]	@ (8020c50 <__assert_func+0x2c>)
 8020c2c:	681b      	ldr	r3, [r3, #0]
 8020c2e:	4605      	mov	r5, r0
 8020c30:	68d8      	ldr	r0, [r3, #12]
 8020c32:	b954      	cbnz	r4, 8020c4a <__assert_func+0x26>
 8020c34:	4b07      	ldr	r3, [pc, #28]	@ (8020c54 <__assert_func+0x30>)
 8020c36:	461c      	mov	r4, r3
 8020c38:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020c3c:	9100      	str	r1, [sp, #0]
 8020c3e:	462b      	mov	r3, r5
 8020c40:	4905      	ldr	r1, [pc, #20]	@ (8020c58 <__assert_func+0x34>)
 8020c42:	f000 f983 	bl	8020f4c <fiprintf>
 8020c46:	f7ff ffe5 	bl	8020c14 <abort>
 8020c4a:	4b04      	ldr	r3, [pc, #16]	@ (8020c5c <__assert_func+0x38>)
 8020c4c:	e7f4      	b.n	8020c38 <__assert_func+0x14>
 8020c4e:	bf00      	nop
 8020c50:	200000d0 	.word	0x200000d0
 8020c54:	080240e3 	.word	0x080240e3
 8020c58:	080240b5 	.word	0x080240b5
 8020c5c:	080240a8 	.word	0x080240a8

08020c60 <atexit>:
 8020c60:	2300      	movs	r3, #0
 8020c62:	4601      	mov	r1, r0
 8020c64:	461a      	mov	r2, r3
 8020c66:	4618      	mov	r0, r3
 8020c68:	f000 bb56 	b.w	8021318 <__register_exitproc>

08020c6c <malloc>:
 8020c6c:	4b02      	ldr	r3, [pc, #8]	@ (8020c78 <malloc+0xc>)
 8020c6e:	4601      	mov	r1, r0
 8020c70:	6818      	ldr	r0, [r3, #0]
 8020c72:	f000 b82d 	b.w	8020cd0 <_malloc_r>
 8020c76:	bf00      	nop
 8020c78:	200000d0 	.word	0x200000d0

08020c7c <free>:
 8020c7c:	4b02      	ldr	r3, [pc, #8]	@ (8020c88 <free+0xc>)
 8020c7e:	4601      	mov	r1, r0
 8020c80:	6818      	ldr	r0, [r3, #0]
 8020c82:	f000 bba5 	b.w	80213d0 <_free_r>
 8020c86:	bf00      	nop
 8020c88:	200000d0 	.word	0x200000d0

08020c8c <sbrk_aligned>:
 8020c8c:	b570      	push	{r4, r5, r6, lr}
 8020c8e:	4e0f      	ldr	r6, [pc, #60]	@ (8020ccc <sbrk_aligned+0x40>)
 8020c90:	460c      	mov	r4, r1
 8020c92:	6831      	ldr	r1, [r6, #0]
 8020c94:	4605      	mov	r5, r0
 8020c96:	b911      	cbnz	r1, 8020c9e <sbrk_aligned+0x12>
 8020c98:	f000 fae0 	bl	802125c <_sbrk_r>
 8020c9c:	6030      	str	r0, [r6, #0]
 8020c9e:	4621      	mov	r1, r4
 8020ca0:	4628      	mov	r0, r5
 8020ca2:	f000 fadb 	bl	802125c <_sbrk_r>
 8020ca6:	1c43      	adds	r3, r0, #1
 8020ca8:	d103      	bne.n	8020cb2 <sbrk_aligned+0x26>
 8020caa:	f04f 34ff 	mov.w	r4, #4294967295
 8020cae:	4620      	mov	r0, r4
 8020cb0:	bd70      	pop	{r4, r5, r6, pc}
 8020cb2:	1cc4      	adds	r4, r0, #3
 8020cb4:	f024 0403 	bic.w	r4, r4, #3
 8020cb8:	42a0      	cmp	r0, r4
 8020cba:	d0f8      	beq.n	8020cae <sbrk_aligned+0x22>
 8020cbc:	1a21      	subs	r1, r4, r0
 8020cbe:	4628      	mov	r0, r5
 8020cc0:	f000 facc 	bl	802125c <_sbrk_r>
 8020cc4:	3001      	adds	r0, #1
 8020cc6:	d1f2      	bne.n	8020cae <sbrk_aligned+0x22>
 8020cc8:	e7ef      	b.n	8020caa <sbrk_aligned+0x1e>
 8020cca:	bf00      	nop
 8020ccc:	20017354 	.word	0x20017354

08020cd0 <_malloc_r>:
 8020cd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020cd4:	1ccd      	adds	r5, r1, #3
 8020cd6:	f025 0503 	bic.w	r5, r5, #3
 8020cda:	3508      	adds	r5, #8
 8020cdc:	2d0c      	cmp	r5, #12
 8020cde:	bf38      	it	cc
 8020ce0:	250c      	movcc	r5, #12
 8020ce2:	2d00      	cmp	r5, #0
 8020ce4:	4606      	mov	r6, r0
 8020ce6:	db01      	blt.n	8020cec <_malloc_r+0x1c>
 8020ce8:	42a9      	cmp	r1, r5
 8020cea:	d904      	bls.n	8020cf6 <_malloc_r+0x26>
 8020cec:	230c      	movs	r3, #12
 8020cee:	6033      	str	r3, [r6, #0]
 8020cf0:	2000      	movs	r0, #0
 8020cf2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020cf6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8020dcc <_malloc_r+0xfc>
 8020cfa:	f000 f869 	bl	8020dd0 <__malloc_lock>
 8020cfe:	f8d8 3000 	ldr.w	r3, [r8]
 8020d02:	461c      	mov	r4, r3
 8020d04:	bb44      	cbnz	r4, 8020d58 <_malloc_r+0x88>
 8020d06:	4629      	mov	r1, r5
 8020d08:	4630      	mov	r0, r6
 8020d0a:	f7ff ffbf 	bl	8020c8c <sbrk_aligned>
 8020d0e:	1c43      	adds	r3, r0, #1
 8020d10:	4604      	mov	r4, r0
 8020d12:	d158      	bne.n	8020dc6 <_malloc_r+0xf6>
 8020d14:	f8d8 4000 	ldr.w	r4, [r8]
 8020d18:	4627      	mov	r7, r4
 8020d1a:	2f00      	cmp	r7, #0
 8020d1c:	d143      	bne.n	8020da6 <_malloc_r+0xd6>
 8020d1e:	2c00      	cmp	r4, #0
 8020d20:	d04b      	beq.n	8020dba <_malloc_r+0xea>
 8020d22:	6823      	ldr	r3, [r4, #0]
 8020d24:	4639      	mov	r1, r7
 8020d26:	4630      	mov	r0, r6
 8020d28:	eb04 0903 	add.w	r9, r4, r3
 8020d2c:	f000 fa96 	bl	802125c <_sbrk_r>
 8020d30:	4581      	cmp	r9, r0
 8020d32:	d142      	bne.n	8020dba <_malloc_r+0xea>
 8020d34:	6821      	ldr	r1, [r4, #0]
 8020d36:	1a6d      	subs	r5, r5, r1
 8020d38:	4629      	mov	r1, r5
 8020d3a:	4630      	mov	r0, r6
 8020d3c:	f7ff ffa6 	bl	8020c8c <sbrk_aligned>
 8020d40:	3001      	adds	r0, #1
 8020d42:	d03a      	beq.n	8020dba <_malloc_r+0xea>
 8020d44:	6823      	ldr	r3, [r4, #0]
 8020d46:	442b      	add	r3, r5
 8020d48:	6023      	str	r3, [r4, #0]
 8020d4a:	f8d8 3000 	ldr.w	r3, [r8]
 8020d4e:	685a      	ldr	r2, [r3, #4]
 8020d50:	bb62      	cbnz	r2, 8020dac <_malloc_r+0xdc>
 8020d52:	f8c8 7000 	str.w	r7, [r8]
 8020d56:	e00f      	b.n	8020d78 <_malloc_r+0xa8>
 8020d58:	6822      	ldr	r2, [r4, #0]
 8020d5a:	1b52      	subs	r2, r2, r5
 8020d5c:	d420      	bmi.n	8020da0 <_malloc_r+0xd0>
 8020d5e:	2a0b      	cmp	r2, #11
 8020d60:	d917      	bls.n	8020d92 <_malloc_r+0xc2>
 8020d62:	1961      	adds	r1, r4, r5
 8020d64:	42a3      	cmp	r3, r4
 8020d66:	6025      	str	r5, [r4, #0]
 8020d68:	bf18      	it	ne
 8020d6a:	6059      	strne	r1, [r3, #4]
 8020d6c:	6863      	ldr	r3, [r4, #4]
 8020d6e:	bf08      	it	eq
 8020d70:	f8c8 1000 	streq.w	r1, [r8]
 8020d74:	5162      	str	r2, [r4, r5]
 8020d76:	604b      	str	r3, [r1, #4]
 8020d78:	4630      	mov	r0, r6
 8020d7a:	f000 f82f 	bl	8020ddc <__malloc_unlock>
 8020d7e:	f104 000b 	add.w	r0, r4, #11
 8020d82:	1d23      	adds	r3, r4, #4
 8020d84:	f020 0007 	bic.w	r0, r0, #7
 8020d88:	1ac2      	subs	r2, r0, r3
 8020d8a:	bf1c      	itt	ne
 8020d8c:	1a1b      	subne	r3, r3, r0
 8020d8e:	50a3      	strne	r3, [r4, r2]
 8020d90:	e7af      	b.n	8020cf2 <_malloc_r+0x22>
 8020d92:	6862      	ldr	r2, [r4, #4]
 8020d94:	42a3      	cmp	r3, r4
 8020d96:	bf0c      	ite	eq
 8020d98:	f8c8 2000 	streq.w	r2, [r8]
 8020d9c:	605a      	strne	r2, [r3, #4]
 8020d9e:	e7eb      	b.n	8020d78 <_malloc_r+0xa8>
 8020da0:	4623      	mov	r3, r4
 8020da2:	6864      	ldr	r4, [r4, #4]
 8020da4:	e7ae      	b.n	8020d04 <_malloc_r+0x34>
 8020da6:	463c      	mov	r4, r7
 8020da8:	687f      	ldr	r7, [r7, #4]
 8020daa:	e7b6      	b.n	8020d1a <_malloc_r+0x4a>
 8020dac:	461a      	mov	r2, r3
 8020dae:	685b      	ldr	r3, [r3, #4]
 8020db0:	42a3      	cmp	r3, r4
 8020db2:	d1fb      	bne.n	8020dac <_malloc_r+0xdc>
 8020db4:	2300      	movs	r3, #0
 8020db6:	6053      	str	r3, [r2, #4]
 8020db8:	e7de      	b.n	8020d78 <_malloc_r+0xa8>
 8020dba:	230c      	movs	r3, #12
 8020dbc:	6033      	str	r3, [r6, #0]
 8020dbe:	4630      	mov	r0, r6
 8020dc0:	f000 f80c 	bl	8020ddc <__malloc_unlock>
 8020dc4:	e794      	b.n	8020cf0 <_malloc_r+0x20>
 8020dc6:	6005      	str	r5, [r0, #0]
 8020dc8:	e7d6      	b.n	8020d78 <_malloc_r+0xa8>
 8020dca:	bf00      	nop
 8020dcc:	20017358 	.word	0x20017358

08020dd0 <__malloc_lock>:
 8020dd0:	4801      	ldr	r0, [pc, #4]	@ (8020dd8 <__malloc_lock+0x8>)
 8020dd2:	f000 ba90 	b.w	80212f6 <__retarget_lock_acquire_recursive>
 8020dd6:	bf00      	nop
 8020dd8:	2001749c 	.word	0x2001749c

08020ddc <__malloc_unlock>:
 8020ddc:	4801      	ldr	r0, [pc, #4]	@ (8020de4 <__malloc_unlock+0x8>)
 8020dde:	f000 ba8b 	b.w	80212f8 <__retarget_lock_release_recursive>
 8020de2:	bf00      	nop
 8020de4:	2001749c 	.word	0x2001749c

08020de8 <__cxa_atexit>:
 8020de8:	b510      	push	{r4, lr}
 8020dea:	4604      	mov	r4, r0
 8020dec:	4804      	ldr	r0, [pc, #16]	@ (8020e00 <__cxa_atexit+0x18>)
 8020dee:	4613      	mov	r3, r2
 8020df0:	b120      	cbz	r0, 8020dfc <__cxa_atexit+0x14>
 8020df2:	460a      	mov	r2, r1
 8020df4:	2002      	movs	r0, #2
 8020df6:	4621      	mov	r1, r4
 8020df8:	f000 fa8e 	bl	8021318 <__register_exitproc>
 8020dfc:	bd10      	pop	{r4, pc}
 8020dfe:	bf00      	nop
 8020e00:	08021319 	.word	0x08021319

08020e04 <std>:
 8020e04:	2300      	movs	r3, #0
 8020e06:	b510      	push	{r4, lr}
 8020e08:	4604      	mov	r4, r0
 8020e0a:	e9c0 3300 	strd	r3, r3, [r0]
 8020e0e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8020e12:	6083      	str	r3, [r0, #8]
 8020e14:	8181      	strh	r1, [r0, #12]
 8020e16:	6643      	str	r3, [r0, #100]	@ 0x64
 8020e18:	81c2      	strh	r2, [r0, #14]
 8020e1a:	6183      	str	r3, [r0, #24]
 8020e1c:	4619      	mov	r1, r3
 8020e1e:	2208      	movs	r2, #8
 8020e20:	305c      	adds	r0, #92	@ 0x5c
 8020e22:	f000 f99b 	bl	802115c <memset>
 8020e26:	4b0d      	ldr	r3, [pc, #52]	@ (8020e5c <std+0x58>)
 8020e28:	6263      	str	r3, [r4, #36]	@ 0x24
 8020e2a:	4b0d      	ldr	r3, [pc, #52]	@ (8020e60 <std+0x5c>)
 8020e2c:	62a3      	str	r3, [r4, #40]	@ 0x28
 8020e2e:	4b0d      	ldr	r3, [pc, #52]	@ (8020e64 <std+0x60>)
 8020e30:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8020e32:	4b0d      	ldr	r3, [pc, #52]	@ (8020e68 <std+0x64>)
 8020e34:	6323      	str	r3, [r4, #48]	@ 0x30
 8020e36:	4b0d      	ldr	r3, [pc, #52]	@ (8020e6c <std+0x68>)
 8020e38:	6224      	str	r4, [r4, #32]
 8020e3a:	429c      	cmp	r4, r3
 8020e3c:	d006      	beq.n	8020e4c <std+0x48>
 8020e3e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8020e42:	4294      	cmp	r4, r2
 8020e44:	d002      	beq.n	8020e4c <std+0x48>
 8020e46:	33d0      	adds	r3, #208	@ 0xd0
 8020e48:	429c      	cmp	r4, r3
 8020e4a:	d105      	bne.n	8020e58 <std+0x54>
 8020e4c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8020e50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020e54:	f000 ba4e 	b.w	80212f4 <__retarget_lock_init_recursive>
 8020e58:	bd10      	pop	{r4, pc}
 8020e5a:	bf00      	nop
 8020e5c:	08020fad 	.word	0x08020fad
 8020e60:	08020fcf 	.word	0x08020fcf
 8020e64:	08021007 	.word	0x08021007
 8020e68:	0802102b 	.word	0x0802102b
 8020e6c:	2001735c 	.word	0x2001735c

08020e70 <stdio_exit_handler>:
 8020e70:	4a02      	ldr	r2, [pc, #8]	@ (8020e7c <stdio_exit_handler+0xc>)
 8020e72:	4903      	ldr	r1, [pc, #12]	@ (8020e80 <stdio_exit_handler+0x10>)
 8020e74:	4803      	ldr	r0, [pc, #12]	@ (8020e84 <stdio_exit_handler+0x14>)
 8020e76:	f000 b87b 	b.w	8020f70 <_fwalk_sglue>
 8020e7a:	bf00      	nop
 8020e7c:	200000c4 	.word	0x200000c4
 8020e80:	08021b0d 	.word	0x08021b0d
 8020e84:	200000d4 	.word	0x200000d4

08020e88 <cleanup_stdio>:
 8020e88:	6841      	ldr	r1, [r0, #4]
 8020e8a:	4b0c      	ldr	r3, [pc, #48]	@ (8020ebc <cleanup_stdio+0x34>)
 8020e8c:	4299      	cmp	r1, r3
 8020e8e:	b510      	push	{r4, lr}
 8020e90:	4604      	mov	r4, r0
 8020e92:	d001      	beq.n	8020e98 <cleanup_stdio+0x10>
 8020e94:	f000 fe3a 	bl	8021b0c <_fflush_r>
 8020e98:	68a1      	ldr	r1, [r4, #8]
 8020e9a:	4b09      	ldr	r3, [pc, #36]	@ (8020ec0 <cleanup_stdio+0x38>)
 8020e9c:	4299      	cmp	r1, r3
 8020e9e:	d002      	beq.n	8020ea6 <cleanup_stdio+0x1e>
 8020ea0:	4620      	mov	r0, r4
 8020ea2:	f000 fe33 	bl	8021b0c <_fflush_r>
 8020ea6:	68e1      	ldr	r1, [r4, #12]
 8020ea8:	4b06      	ldr	r3, [pc, #24]	@ (8020ec4 <cleanup_stdio+0x3c>)
 8020eaa:	4299      	cmp	r1, r3
 8020eac:	d004      	beq.n	8020eb8 <cleanup_stdio+0x30>
 8020eae:	4620      	mov	r0, r4
 8020eb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020eb4:	f000 be2a 	b.w	8021b0c <_fflush_r>
 8020eb8:	bd10      	pop	{r4, pc}
 8020eba:	bf00      	nop
 8020ebc:	2001735c 	.word	0x2001735c
 8020ec0:	200173c4 	.word	0x200173c4
 8020ec4:	2001742c 	.word	0x2001742c

08020ec8 <global_stdio_init.part.0>:
 8020ec8:	b510      	push	{r4, lr}
 8020eca:	4b0b      	ldr	r3, [pc, #44]	@ (8020ef8 <global_stdio_init.part.0+0x30>)
 8020ecc:	4c0b      	ldr	r4, [pc, #44]	@ (8020efc <global_stdio_init.part.0+0x34>)
 8020ece:	4a0c      	ldr	r2, [pc, #48]	@ (8020f00 <global_stdio_init.part.0+0x38>)
 8020ed0:	601a      	str	r2, [r3, #0]
 8020ed2:	4620      	mov	r0, r4
 8020ed4:	2200      	movs	r2, #0
 8020ed6:	2104      	movs	r1, #4
 8020ed8:	f7ff ff94 	bl	8020e04 <std>
 8020edc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8020ee0:	2201      	movs	r2, #1
 8020ee2:	2109      	movs	r1, #9
 8020ee4:	f7ff ff8e 	bl	8020e04 <std>
 8020ee8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8020eec:	2202      	movs	r2, #2
 8020eee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020ef2:	2112      	movs	r1, #18
 8020ef4:	f7ff bf86 	b.w	8020e04 <std>
 8020ef8:	20017494 	.word	0x20017494
 8020efc:	2001735c 	.word	0x2001735c
 8020f00:	08020e71 	.word	0x08020e71

08020f04 <__sfp_lock_acquire>:
 8020f04:	4801      	ldr	r0, [pc, #4]	@ (8020f0c <__sfp_lock_acquire+0x8>)
 8020f06:	f000 b9f6 	b.w	80212f6 <__retarget_lock_acquire_recursive>
 8020f0a:	bf00      	nop
 8020f0c:	2001749e 	.word	0x2001749e

08020f10 <__sfp_lock_release>:
 8020f10:	4801      	ldr	r0, [pc, #4]	@ (8020f18 <__sfp_lock_release+0x8>)
 8020f12:	f000 b9f1 	b.w	80212f8 <__retarget_lock_release_recursive>
 8020f16:	bf00      	nop
 8020f18:	2001749e 	.word	0x2001749e

08020f1c <__sinit>:
 8020f1c:	b510      	push	{r4, lr}
 8020f1e:	4604      	mov	r4, r0
 8020f20:	f7ff fff0 	bl	8020f04 <__sfp_lock_acquire>
 8020f24:	6a23      	ldr	r3, [r4, #32]
 8020f26:	b11b      	cbz	r3, 8020f30 <__sinit+0x14>
 8020f28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020f2c:	f7ff bff0 	b.w	8020f10 <__sfp_lock_release>
 8020f30:	4b04      	ldr	r3, [pc, #16]	@ (8020f44 <__sinit+0x28>)
 8020f32:	6223      	str	r3, [r4, #32]
 8020f34:	4b04      	ldr	r3, [pc, #16]	@ (8020f48 <__sinit+0x2c>)
 8020f36:	681b      	ldr	r3, [r3, #0]
 8020f38:	2b00      	cmp	r3, #0
 8020f3a:	d1f5      	bne.n	8020f28 <__sinit+0xc>
 8020f3c:	f7ff ffc4 	bl	8020ec8 <global_stdio_init.part.0>
 8020f40:	e7f2      	b.n	8020f28 <__sinit+0xc>
 8020f42:	bf00      	nop
 8020f44:	08020e89 	.word	0x08020e89
 8020f48:	20017494 	.word	0x20017494

08020f4c <fiprintf>:
 8020f4c:	b40e      	push	{r1, r2, r3}
 8020f4e:	b503      	push	{r0, r1, lr}
 8020f50:	4601      	mov	r1, r0
 8020f52:	ab03      	add	r3, sp, #12
 8020f54:	4805      	ldr	r0, [pc, #20]	@ (8020f6c <fiprintf+0x20>)
 8020f56:	f853 2b04 	ldr.w	r2, [r3], #4
 8020f5a:	6800      	ldr	r0, [r0, #0]
 8020f5c:	9301      	str	r3, [sp, #4]
 8020f5e:	f000 faab 	bl	80214b8 <_vfiprintf_r>
 8020f62:	b002      	add	sp, #8
 8020f64:	f85d eb04 	ldr.w	lr, [sp], #4
 8020f68:	b003      	add	sp, #12
 8020f6a:	4770      	bx	lr
 8020f6c:	200000d0 	.word	0x200000d0

08020f70 <_fwalk_sglue>:
 8020f70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020f74:	4607      	mov	r7, r0
 8020f76:	4688      	mov	r8, r1
 8020f78:	4614      	mov	r4, r2
 8020f7a:	2600      	movs	r6, #0
 8020f7c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020f80:	f1b9 0901 	subs.w	r9, r9, #1
 8020f84:	d505      	bpl.n	8020f92 <_fwalk_sglue+0x22>
 8020f86:	6824      	ldr	r4, [r4, #0]
 8020f88:	2c00      	cmp	r4, #0
 8020f8a:	d1f7      	bne.n	8020f7c <_fwalk_sglue+0xc>
 8020f8c:	4630      	mov	r0, r6
 8020f8e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020f92:	89ab      	ldrh	r3, [r5, #12]
 8020f94:	2b01      	cmp	r3, #1
 8020f96:	d907      	bls.n	8020fa8 <_fwalk_sglue+0x38>
 8020f98:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020f9c:	3301      	adds	r3, #1
 8020f9e:	d003      	beq.n	8020fa8 <_fwalk_sglue+0x38>
 8020fa0:	4629      	mov	r1, r5
 8020fa2:	4638      	mov	r0, r7
 8020fa4:	47c0      	blx	r8
 8020fa6:	4306      	orrs	r6, r0
 8020fa8:	3568      	adds	r5, #104	@ 0x68
 8020faa:	e7e9      	b.n	8020f80 <_fwalk_sglue+0x10>

08020fac <__sread>:
 8020fac:	b510      	push	{r4, lr}
 8020fae:	460c      	mov	r4, r1
 8020fb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020fb4:	f000 f92c 	bl	8021210 <_read_r>
 8020fb8:	2800      	cmp	r0, #0
 8020fba:	bfab      	itete	ge
 8020fbc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8020fbe:	89a3      	ldrhlt	r3, [r4, #12]
 8020fc0:	181b      	addge	r3, r3, r0
 8020fc2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8020fc6:	bfac      	ite	ge
 8020fc8:	6563      	strge	r3, [r4, #84]	@ 0x54
 8020fca:	81a3      	strhlt	r3, [r4, #12]
 8020fcc:	bd10      	pop	{r4, pc}

08020fce <__swrite>:
 8020fce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020fd2:	461f      	mov	r7, r3
 8020fd4:	898b      	ldrh	r3, [r1, #12]
 8020fd6:	05db      	lsls	r3, r3, #23
 8020fd8:	4605      	mov	r5, r0
 8020fda:	460c      	mov	r4, r1
 8020fdc:	4616      	mov	r6, r2
 8020fde:	d505      	bpl.n	8020fec <__swrite+0x1e>
 8020fe0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020fe4:	2302      	movs	r3, #2
 8020fe6:	2200      	movs	r2, #0
 8020fe8:	f000 f900 	bl	80211ec <_lseek_r>
 8020fec:	89a3      	ldrh	r3, [r4, #12]
 8020fee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8020ff2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8020ff6:	81a3      	strh	r3, [r4, #12]
 8020ff8:	4632      	mov	r2, r6
 8020ffa:	463b      	mov	r3, r7
 8020ffc:	4628      	mov	r0, r5
 8020ffe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021002:	f000 b93b 	b.w	802127c <_write_r>

08021006 <__sseek>:
 8021006:	b510      	push	{r4, lr}
 8021008:	460c      	mov	r4, r1
 802100a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802100e:	f000 f8ed 	bl	80211ec <_lseek_r>
 8021012:	1c43      	adds	r3, r0, #1
 8021014:	89a3      	ldrh	r3, [r4, #12]
 8021016:	bf15      	itete	ne
 8021018:	6560      	strne	r0, [r4, #84]	@ 0x54
 802101a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802101e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8021022:	81a3      	strheq	r3, [r4, #12]
 8021024:	bf18      	it	ne
 8021026:	81a3      	strhne	r3, [r4, #12]
 8021028:	bd10      	pop	{r4, pc}

0802102a <__sclose>:
 802102a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802102e:	f000 b8cd 	b.w	80211cc <_close_r>

08021032 <__swbuf_r>:
 8021032:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021034:	460e      	mov	r6, r1
 8021036:	4614      	mov	r4, r2
 8021038:	4605      	mov	r5, r0
 802103a:	b118      	cbz	r0, 8021044 <__swbuf_r+0x12>
 802103c:	6a03      	ldr	r3, [r0, #32]
 802103e:	b90b      	cbnz	r3, 8021044 <__swbuf_r+0x12>
 8021040:	f7ff ff6c 	bl	8020f1c <__sinit>
 8021044:	69a3      	ldr	r3, [r4, #24]
 8021046:	60a3      	str	r3, [r4, #8]
 8021048:	89a3      	ldrh	r3, [r4, #12]
 802104a:	071a      	lsls	r2, r3, #28
 802104c:	d501      	bpl.n	8021052 <__swbuf_r+0x20>
 802104e:	6923      	ldr	r3, [r4, #16]
 8021050:	b943      	cbnz	r3, 8021064 <__swbuf_r+0x32>
 8021052:	4621      	mov	r1, r4
 8021054:	4628      	mov	r0, r5
 8021056:	f000 f82b 	bl	80210b0 <__swsetup_r>
 802105a:	b118      	cbz	r0, 8021064 <__swbuf_r+0x32>
 802105c:	f04f 37ff 	mov.w	r7, #4294967295
 8021060:	4638      	mov	r0, r7
 8021062:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021064:	6823      	ldr	r3, [r4, #0]
 8021066:	6922      	ldr	r2, [r4, #16]
 8021068:	1a98      	subs	r0, r3, r2
 802106a:	6963      	ldr	r3, [r4, #20]
 802106c:	b2f6      	uxtb	r6, r6
 802106e:	4283      	cmp	r3, r0
 8021070:	4637      	mov	r7, r6
 8021072:	dc05      	bgt.n	8021080 <__swbuf_r+0x4e>
 8021074:	4621      	mov	r1, r4
 8021076:	4628      	mov	r0, r5
 8021078:	f000 fd48 	bl	8021b0c <_fflush_r>
 802107c:	2800      	cmp	r0, #0
 802107e:	d1ed      	bne.n	802105c <__swbuf_r+0x2a>
 8021080:	68a3      	ldr	r3, [r4, #8]
 8021082:	3b01      	subs	r3, #1
 8021084:	60a3      	str	r3, [r4, #8]
 8021086:	6823      	ldr	r3, [r4, #0]
 8021088:	1c5a      	adds	r2, r3, #1
 802108a:	6022      	str	r2, [r4, #0]
 802108c:	701e      	strb	r6, [r3, #0]
 802108e:	6962      	ldr	r2, [r4, #20]
 8021090:	1c43      	adds	r3, r0, #1
 8021092:	429a      	cmp	r2, r3
 8021094:	d004      	beq.n	80210a0 <__swbuf_r+0x6e>
 8021096:	89a3      	ldrh	r3, [r4, #12]
 8021098:	07db      	lsls	r3, r3, #31
 802109a:	d5e1      	bpl.n	8021060 <__swbuf_r+0x2e>
 802109c:	2e0a      	cmp	r6, #10
 802109e:	d1df      	bne.n	8021060 <__swbuf_r+0x2e>
 80210a0:	4621      	mov	r1, r4
 80210a2:	4628      	mov	r0, r5
 80210a4:	f000 fd32 	bl	8021b0c <_fflush_r>
 80210a8:	2800      	cmp	r0, #0
 80210aa:	d0d9      	beq.n	8021060 <__swbuf_r+0x2e>
 80210ac:	e7d6      	b.n	802105c <__swbuf_r+0x2a>
	...

080210b0 <__swsetup_r>:
 80210b0:	b538      	push	{r3, r4, r5, lr}
 80210b2:	4b29      	ldr	r3, [pc, #164]	@ (8021158 <__swsetup_r+0xa8>)
 80210b4:	4605      	mov	r5, r0
 80210b6:	6818      	ldr	r0, [r3, #0]
 80210b8:	460c      	mov	r4, r1
 80210ba:	b118      	cbz	r0, 80210c4 <__swsetup_r+0x14>
 80210bc:	6a03      	ldr	r3, [r0, #32]
 80210be:	b90b      	cbnz	r3, 80210c4 <__swsetup_r+0x14>
 80210c0:	f7ff ff2c 	bl	8020f1c <__sinit>
 80210c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80210c8:	0719      	lsls	r1, r3, #28
 80210ca:	d422      	bmi.n	8021112 <__swsetup_r+0x62>
 80210cc:	06da      	lsls	r2, r3, #27
 80210ce:	d407      	bmi.n	80210e0 <__swsetup_r+0x30>
 80210d0:	2209      	movs	r2, #9
 80210d2:	602a      	str	r2, [r5, #0]
 80210d4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80210d8:	81a3      	strh	r3, [r4, #12]
 80210da:	f04f 30ff 	mov.w	r0, #4294967295
 80210de:	e033      	b.n	8021148 <__swsetup_r+0x98>
 80210e0:	0758      	lsls	r0, r3, #29
 80210e2:	d512      	bpl.n	802110a <__swsetup_r+0x5a>
 80210e4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80210e6:	b141      	cbz	r1, 80210fa <__swsetup_r+0x4a>
 80210e8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80210ec:	4299      	cmp	r1, r3
 80210ee:	d002      	beq.n	80210f6 <__swsetup_r+0x46>
 80210f0:	4628      	mov	r0, r5
 80210f2:	f000 f96d 	bl	80213d0 <_free_r>
 80210f6:	2300      	movs	r3, #0
 80210f8:	6363      	str	r3, [r4, #52]	@ 0x34
 80210fa:	89a3      	ldrh	r3, [r4, #12]
 80210fc:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8021100:	81a3      	strh	r3, [r4, #12]
 8021102:	2300      	movs	r3, #0
 8021104:	6063      	str	r3, [r4, #4]
 8021106:	6923      	ldr	r3, [r4, #16]
 8021108:	6023      	str	r3, [r4, #0]
 802110a:	89a3      	ldrh	r3, [r4, #12]
 802110c:	f043 0308 	orr.w	r3, r3, #8
 8021110:	81a3      	strh	r3, [r4, #12]
 8021112:	6923      	ldr	r3, [r4, #16]
 8021114:	b94b      	cbnz	r3, 802112a <__swsetup_r+0x7a>
 8021116:	89a3      	ldrh	r3, [r4, #12]
 8021118:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802111c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8021120:	d003      	beq.n	802112a <__swsetup_r+0x7a>
 8021122:	4621      	mov	r1, r4
 8021124:	4628      	mov	r0, r5
 8021126:	f000 fd3f 	bl	8021ba8 <__smakebuf_r>
 802112a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802112e:	f013 0201 	ands.w	r2, r3, #1
 8021132:	d00a      	beq.n	802114a <__swsetup_r+0x9a>
 8021134:	2200      	movs	r2, #0
 8021136:	60a2      	str	r2, [r4, #8]
 8021138:	6962      	ldr	r2, [r4, #20]
 802113a:	4252      	negs	r2, r2
 802113c:	61a2      	str	r2, [r4, #24]
 802113e:	6922      	ldr	r2, [r4, #16]
 8021140:	b942      	cbnz	r2, 8021154 <__swsetup_r+0xa4>
 8021142:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8021146:	d1c5      	bne.n	80210d4 <__swsetup_r+0x24>
 8021148:	bd38      	pop	{r3, r4, r5, pc}
 802114a:	0799      	lsls	r1, r3, #30
 802114c:	bf58      	it	pl
 802114e:	6962      	ldrpl	r2, [r4, #20]
 8021150:	60a2      	str	r2, [r4, #8]
 8021152:	e7f4      	b.n	802113e <__swsetup_r+0x8e>
 8021154:	2000      	movs	r0, #0
 8021156:	e7f7      	b.n	8021148 <__swsetup_r+0x98>
 8021158:	200000d0 	.word	0x200000d0

0802115c <memset>:
 802115c:	4402      	add	r2, r0
 802115e:	4603      	mov	r3, r0
 8021160:	4293      	cmp	r3, r2
 8021162:	d100      	bne.n	8021166 <memset+0xa>
 8021164:	4770      	bx	lr
 8021166:	f803 1b01 	strb.w	r1, [r3], #1
 802116a:	e7f9      	b.n	8021160 <memset+0x4>

0802116c <_raise_r>:
 802116c:	291f      	cmp	r1, #31
 802116e:	b538      	push	{r3, r4, r5, lr}
 8021170:	4605      	mov	r5, r0
 8021172:	460c      	mov	r4, r1
 8021174:	d904      	bls.n	8021180 <_raise_r+0x14>
 8021176:	2316      	movs	r3, #22
 8021178:	6003      	str	r3, [r0, #0]
 802117a:	f04f 30ff 	mov.w	r0, #4294967295
 802117e:	bd38      	pop	{r3, r4, r5, pc}
 8021180:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8021182:	b112      	cbz	r2, 802118a <_raise_r+0x1e>
 8021184:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8021188:	b94b      	cbnz	r3, 802119e <_raise_r+0x32>
 802118a:	4628      	mov	r0, r5
 802118c:	f000 f864 	bl	8021258 <_getpid_r>
 8021190:	4622      	mov	r2, r4
 8021192:	4601      	mov	r1, r0
 8021194:	4628      	mov	r0, r5
 8021196:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802119a:	f000 b84b 	b.w	8021234 <_kill_r>
 802119e:	2b01      	cmp	r3, #1
 80211a0:	d00a      	beq.n	80211b8 <_raise_r+0x4c>
 80211a2:	1c59      	adds	r1, r3, #1
 80211a4:	d103      	bne.n	80211ae <_raise_r+0x42>
 80211a6:	2316      	movs	r3, #22
 80211a8:	6003      	str	r3, [r0, #0]
 80211aa:	2001      	movs	r0, #1
 80211ac:	e7e7      	b.n	802117e <_raise_r+0x12>
 80211ae:	2100      	movs	r1, #0
 80211b0:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80211b4:	4620      	mov	r0, r4
 80211b6:	4798      	blx	r3
 80211b8:	2000      	movs	r0, #0
 80211ba:	e7e0      	b.n	802117e <_raise_r+0x12>

080211bc <raise>:
 80211bc:	4b02      	ldr	r3, [pc, #8]	@ (80211c8 <raise+0xc>)
 80211be:	4601      	mov	r1, r0
 80211c0:	6818      	ldr	r0, [r3, #0]
 80211c2:	f7ff bfd3 	b.w	802116c <_raise_r>
 80211c6:	bf00      	nop
 80211c8:	200000d0 	.word	0x200000d0

080211cc <_close_r>:
 80211cc:	b538      	push	{r3, r4, r5, lr}
 80211ce:	4d06      	ldr	r5, [pc, #24]	@ (80211e8 <_close_r+0x1c>)
 80211d0:	2300      	movs	r3, #0
 80211d2:	4604      	mov	r4, r0
 80211d4:	4608      	mov	r0, r1
 80211d6:	602b      	str	r3, [r5, #0]
 80211d8:	f7e0 f8c6 	bl	8001368 <_close>
 80211dc:	1c43      	adds	r3, r0, #1
 80211de:	d102      	bne.n	80211e6 <_close_r+0x1a>
 80211e0:	682b      	ldr	r3, [r5, #0]
 80211e2:	b103      	cbz	r3, 80211e6 <_close_r+0x1a>
 80211e4:	6023      	str	r3, [r4, #0]
 80211e6:	bd38      	pop	{r3, r4, r5, pc}
 80211e8:	20017498 	.word	0x20017498

080211ec <_lseek_r>:
 80211ec:	b538      	push	{r3, r4, r5, lr}
 80211ee:	4d07      	ldr	r5, [pc, #28]	@ (802120c <_lseek_r+0x20>)
 80211f0:	4604      	mov	r4, r0
 80211f2:	4608      	mov	r0, r1
 80211f4:	4611      	mov	r1, r2
 80211f6:	2200      	movs	r2, #0
 80211f8:	602a      	str	r2, [r5, #0]
 80211fa:	461a      	mov	r2, r3
 80211fc:	f7e0 f8be 	bl	800137c <_lseek>
 8021200:	1c43      	adds	r3, r0, #1
 8021202:	d102      	bne.n	802120a <_lseek_r+0x1e>
 8021204:	682b      	ldr	r3, [r5, #0]
 8021206:	b103      	cbz	r3, 802120a <_lseek_r+0x1e>
 8021208:	6023      	str	r3, [r4, #0]
 802120a:	bd38      	pop	{r3, r4, r5, pc}
 802120c:	20017498 	.word	0x20017498

08021210 <_read_r>:
 8021210:	b538      	push	{r3, r4, r5, lr}
 8021212:	4d07      	ldr	r5, [pc, #28]	@ (8021230 <_read_r+0x20>)
 8021214:	4604      	mov	r4, r0
 8021216:	4608      	mov	r0, r1
 8021218:	4611      	mov	r1, r2
 802121a:	2200      	movs	r2, #0
 802121c:	602a      	str	r2, [r5, #0]
 802121e:	461a      	mov	r2, r3
 8021220:	f7e0 f886 	bl	8001330 <_read>
 8021224:	1c43      	adds	r3, r0, #1
 8021226:	d102      	bne.n	802122e <_read_r+0x1e>
 8021228:	682b      	ldr	r3, [r5, #0]
 802122a:	b103      	cbz	r3, 802122e <_read_r+0x1e>
 802122c:	6023      	str	r3, [r4, #0]
 802122e:	bd38      	pop	{r3, r4, r5, pc}
 8021230:	20017498 	.word	0x20017498

08021234 <_kill_r>:
 8021234:	b538      	push	{r3, r4, r5, lr}
 8021236:	4d07      	ldr	r5, [pc, #28]	@ (8021254 <_kill_r+0x20>)
 8021238:	2300      	movs	r3, #0
 802123a:	4604      	mov	r4, r0
 802123c:	4608      	mov	r0, r1
 802123e:	4611      	mov	r1, r2
 8021240:	602b      	str	r3, [r5, #0]
 8021242:	f7e0 f867 	bl	8001314 <_kill>
 8021246:	1c43      	adds	r3, r0, #1
 8021248:	d102      	bne.n	8021250 <_kill_r+0x1c>
 802124a:	682b      	ldr	r3, [r5, #0]
 802124c:	b103      	cbz	r3, 8021250 <_kill_r+0x1c>
 802124e:	6023      	str	r3, [r4, #0]
 8021250:	bd38      	pop	{r3, r4, r5, pc}
 8021252:	bf00      	nop
 8021254:	20017498 	.word	0x20017498

08021258 <_getpid_r>:
 8021258:	f7e0 b85a 	b.w	8001310 <_getpid>

0802125c <_sbrk_r>:
 802125c:	b538      	push	{r3, r4, r5, lr}
 802125e:	4d06      	ldr	r5, [pc, #24]	@ (8021278 <_sbrk_r+0x1c>)
 8021260:	2300      	movs	r3, #0
 8021262:	4604      	mov	r4, r0
 8021264:	4608      	mov	r0, r1
 8021266:	602b      	str	r3, [r5, #0]
 8021268:	f7e0 f88a 	bl	8001380 <_sbrk>
 802126c:	1c43      	adds	r3, r0, #1
 802126e:	d102      	bne.n	8021276 <_sbrk_r+0x1a>
 8021270:	682b      	ldr	r3, [r5, #0]
 8021272:	b103      	cbz	r3, 8021276 <_sbrk_r+0x1a>
 8021274:	6023      	str	r3, [r4, #0]
 8021276:	bd38      	pop	{r3, r4, r5, pc}
 8021278:	20017498 	.word	0x20017498

0802127c <_write_r>:
 802127c:	b538      	push	{r3, r4, r5, lr}
 802127e:	4d07      	ldr	r5, [pc, #28]	@ (802129c <_write_r+0x20>)
 8021280:	4604      	mov	r4, r0
 8021282:	4608      	mov	r0, r1
 8021284:	4611      	mov	r1, r2
 8021286:	2200      	movs	r2, #0
 8021288:	602a      	str	r2, [r5, #0]
 802128a:	461a      	mov	r2, r3
 802128c:	f7e0 f85e 	bl	800134c <_write>
 8021290:	1c43      	adds	r3, r0, #1
 8021292:	d102      	bne.n	802129a <_write_r+0x1e>
 8021294:	682b      	ldr	r3, [r5, #0]
 8021296:	b103      	cbz	r3, 802129a <_write_r+0x1e>
 8021298:	6023      	str	r3, [r4, #0]
 802129a:	bd38      	pop	{r3, r4, r5, pc}
 802129c:	20017498 	.word	0x20017498

080212a0 <__errno>:
 80212a0:	4b01      	ldr	r3, [pc, #4]	@ (80212a8 <__errno+0x8>)
 80212a2:	6818      	ldr	r0, [r3, #0]
 80212a4:	4770      	bx	lr
 80212a6:	bf00      	nop
 80212a8:	200000d0 	.word	0x200000d0

080212ac <__libc_init_array>:
 80212ac:	b570      	push	{r4, r5, r6, lr}
 80212ae:	4d0d      	ldr	r5, [pc, #52]	@ (80212e4 <__libc_init_array+0x38>)
 80212b0:	4c0d      	ldr	r4, [pc, #52]	@ (80212e8 <__libc_init_array+0x3c>)
 80212b2:	1b64      	subs	r4, r4, r5
 80212b4:	10a4      	asrs	r4, r4, #2
 80212b6:	2600      	movs	r6, #0
 80212b8:	42a6      	cmp	r6, r4
 80212ba:	d109      	bne.n	80212d0 <__libc_init_array+0x24>
 80212bc:	4d0b      	ldr	r5, [pc, #44]	@ (80212ec <__libc_init_array+0x40>)
 80212be:	4c0c      	ldr	r4, [pc, #48]	@ (80212f0 <__libc_init_array+0x44>)
 80212c0:	f000 fcd0 	bl	8021c64 <_init>
 80212c4:	1b64      	subs	r4, r4, r5
 80212c6:	10a4      	asrs	r4, r4, #2
 80212c8:	2600      	movs	r6, #0
 80212ca:	42a6      	cmp	r6, r4
 80212cc:	d105      	bne.n	80212da <__libc_init_array+0x2e>
 80212ce:	bd70      	pop	{r4, r5, r6, pc}
 80212d0:	f855 3b04 	ldr.w	r3, [r5], #4
 80212d4:	4798      	blx	r3
 80212d6:	3601      	adds	r6, #1
 80212d8:	e7ee      	b.n	80212b8 <__libc_init_array+0xc>
 80212da:	f855 3b04 	ldr.w	r3, [r5], #4
 80212de:	4798      	blx	r3
 80212e0:	3601      	adds	r6, #1
 80212e2:	e7f2      	b.n	80212ca <__libc_init_array+0x1e>
 80212e4:	0802412c 	.word	0x0802412c
 80212e8:	0802412c 	.word	0x0802412c
 80212ec:	0802412c 	.word	0x0802412c
 80212f0:	08024144 	.word	0x08024144

080212f4 <__retarget_lock_init_recursive>:
 80212f4:	4770      	bx	lr

080212f6 <__retarget_lock_acquire_recursive>:
 80212f6:	4770      	bx	lr

080212f8 <__retarget_lock_release_recursive>:
 80212f8:	4770      	bx	lr

080212fa <memcpy>:
 80212fa:	440a      	add	r2, r1
 80212fc:	4291      	cmp	r1, r2
 80212fe:	f100 33ff 	add.w	r3, r0, #4294967295
 8021302:	d100      	bne.n	8021306 <memcpy+0xc>
 8021304:	4770      	bx	lr
 8021306:	b510      	push	{r4, lr}
 8021308:	f811 4b01 	ldrb.w	r4, [r1], #1
 802130c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8021310:	4291      	cmp	r1, r2
 8021312:	d1f9      	bne.n	8021308 <memcpy+0xe>
 8021314:	bd10      	pop	{r4, pc}
	...

08021318 <__register_exitproc>:
 8021318:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802131c:	4d27      	ldr	r5, [pc, #156]	@ (80213bc <__register_exitproc+0xa4>)
 802131e:	4607      	mov	r7, r0
 8021320:	6828      	ldr	r0, [r5, #0]
 8021322:	4691      	mov	r9, r2
 8021324:	460e      	mov	r6, r1
 8021326:	4698      	mov	r8, r3
 8021328:	f7ff ffe5 	bl	80212f6 <__retarget_lock_acquire_recursive>
 802132c:	4a24      	ldr	r2, [pc, #144]	@ (80213c0 <__register_exitproc+0xa8>)
 802132e:	6814      	ldr	r4, [r2, #0]
 8021330:	b93c      	cbnz	r4, 8021342 <__register_exitproc+0x2a>
 8021332:	4b24      	ldr	r3, [pc, #144]	@ (80213c4 <__register_exitproc+0xac>)
 8021334:	6013      	str	r3, [r2, #0]
 8021336:	4a24      	ldr	r2, [pc, #144]	@ (80213c8 <__register_exitproc+0xb0>)
 8021338:	b112      	cbz	r2, 8021340 <__register_exitproc+0x28>
 802133a:	6812      	ldr	r2, [r2, #0]
 802133c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8021340:	4c20      	ldr	r4, [pc, #128]	@ (80213c4 <__register_exitproc+0xac>)
 8021342:	6863      	ldr	r3, [r4, #4]
 8021344:	2b1f      	cmp	r3, #31
 8021346:	dd06      	ble.n	8021356 <__register_exitproc+0x3e>
 8021348:	6828      	ldr	r0, [r5, #0]
 802134a:	f7ff ffd5 	bl	80212f8 <__retarget_lock_release_recursive>
 802134e:	f04f 30ff 	mov.w	r0, #4294967295
 8021352:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021356:	b32f      	cbz	r7, 80213a4 <__register_exitproc+0x8c>
 8021358:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 802135c:	b968      	cbnz	r0, 802137a <__register_exitproc+0x62>
 802135e:	4b1b      	ldr	r3, [pc, #108]	@ (80213cc <__register_exitproc+0xb4>)
 8021360:	2b00      	cmp	r3, #0
 8021362:	d0f1      	beq.n	8021348 <__register_exitproc+0x30>
 8021364:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8021368:	f7ff fc80 	bl	8020c6c <malloc>
 802136c:	2800      	cmp	r0, #0
 802136e:	d0eb      	beq.n	8021348 <__register_exitproc+0x30>
 8021370:	2300      	movs	r3, #0
 8021372:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8021376:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 802137a:	6863      	ldr	r3, [r4, #4]
 802137c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8021380:	2201      	movs	r2, #1
 8021382:	409a      	lsls	r2, r3
 8021384:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8021388:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 802138c:	4313      	orrs	r3, r2
 802138e:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8021392:	2f02      	cmp	r7, #2
 8021394:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8021398:	bf02      	ittt	eq
 802139a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 802139e:	4313      	orreq	r3, r2
 80213a0:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 80213a4:	6863      	ldr	r3, [r4, #4]
 80213a6:	6828      	ldr	r0, [r5, #0]
 80213a8:	1c5a      	adds	r2, r3, #1
 80213aa:	3302      	adds	r3, #2
 80213ac:	6062      	str	r2, [r4, #4]
 80213ae:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 80213b2:	f7ff ffa1 	bl	80212f8 <__retarget_lock_release_recursive>
 80213b6:	2000      	movs	r0, #0
 80213b8:	e7cb      	b.n	8021352 <__register_exitproc+0x3a>
 80213ba:	bf00      	nop
 80213bc:	20000120 	.word	0x20000120
 80213c0:	2001752c 	.word	0x2001752c
 80213c4:	200174a0 	.word	0x200174a0
 80213c8:	080240e4 	.word	0x080240e4
 80213cc:	08020c6d 	.word	0x08020c6d

080213d0 <_free_r>:
 80213d0:	b538      	push	{r3, r4, r5, lr}
 80213d2:	4605      	mov	r5, r0
 80213d4:	2900      	cmp	r1, #0
 80213d6:	d041      	beq.n	802145c <_free_r+0x8c>
 80213d8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80213dc:	1f0c      	subs	r4, r1, #4
 80213de:	2b00      	cmp	r3, #0
 80213e0:	bfb8      	it	lt
 80213e2:	18e4      	addlt	r4, r4, r3
 80213e4:	f7ff fcf4 	bl	8020dd0 <__malloc_lock>
 80213e8:	4a1d      	ldr	r2, [pc, #116]	@ (8021460 <_free_r+0x90>)
 80213ea:	6813      	ldr	r3, [r2, #0]
 80213ec:	b933      	cbnz	r3, 80213fc <_free_r+0x2c>
 80213ee:	6063      	str	r3, [r4, #4]
 80213f0:	6014      	str	r4, [r2, #0]
 80213f2:	4628      	mov	r0, r5
 80213f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80213f8:	f7ff bcf0 	b.w	8020ddc <__malloc_unlock>
 80213fc:	42a3      	cmp	r3, r4
 80213fe:	d908      	bls.n	8021412 <_free_r+0x42>
 8021400:	6820      	ldr	r0, [r4, #0]
 8021402:	1821      	adds	r1, r4, r0
 8021404:	428b      	cmp	r3, r1
 8021406:	bf01      	itttt	eq
 8021408:	6819      	ldreq	r1, [r3, #0]
 802140a:	685b      	ldreq	r3, [r3, #4]
 802140c:	1809      	addeq	r1, r1, r0
 802140e:	6021      	streq	r1, [r4, #0]
 8021410:	e7ed      	b.n	80213ee <_free_r+0x1e>
 8021412:	461a      	mov	r2, r3
 8021414:	685b      	ldr	r3, [r3, #4]
 8021416:	b10b      	cbz	r3, 802141c <_free_r+0x4c>
 8021418:	42a3      	cmp	r3, r4
 802141a:	d9fa      	bls.n	8021412 <_free_r+0x42>
 802141c:	6811      	ldr	r1, [r2, #0]
 802141e:	1850      	adds	r0, r2, r1
 8021420:	42a0      	cmp	r0, r4
 8021422:	d10b      	bne.n	802143c <_free_r+0x6c>
 8021424:	6820      	ldr	r0, [r4, #0]
 8021426:	4401      	add	r1, r0
 8021428:	1850      	adds	r0, r2, r1
 802142a:	4283      	cmp	r3, r0
 802142c:	6011      	str	r1, [r2, #0]
 802142e:	d1e0      	bne.n	80213f2 <_free_r+0x22>
 8021430:	6818      	ldr	r0, [r3, #0]
 8021432:	685b      	ldr	r3, [r3, #4]
 8021434:	6053      	str	r3, [r2, #4]
 8021436:	4408      	add	r0, r1
 8021438:	6010      	str	r0, [r2, #0]
 802143a:	e7da      	b.n	80213f2 <_free_r+0x22>
 802143c:	d902      	bls.n	8021444 <_free_r+0x74>
 802143e:	230c      	movs	r3, #12
 8021440:	602b      	str	r3, [r5, #0]
 8021442:	e7d6      	b.n	80213f2 <_free_r+0x22>
 8021444:	6820      	ldr	r0, [r4, #0]
 8021446:	1821      	adds	r1, r4, r0
 8021448:	428b      	cmp	r3, r1
 802144a:	bf04      	itt	eq
 802144c:	6819      	ldreq	r1, [r3, #0]
 802144e:	685b      	ldreq	r3, [r3, #4]
 8021450:	6063      	str	r3, [r4, #4]
 8021452:	bf04      	itt	eq
 8021454:	1809      	addeq	r1, r1, r0
 8021456:	6021      	streq	r1, [r4, #0]
 8021458:	6054      	str	r4, [r2, #4]
 802145a:	e7ca      	b.n	80213f2 <_free_r+0x22>
 802145c:	bd38      	pop	{r3, r4, r5, pc}
 802145e:	bf00      	nop
 8021460:	20017358 	.word	0x20017358

08021464 <__sfputc_r>:
 8021464:	6893      	ldr	r3, [r2, #8]
 8021466:	3b01      	subs	r3, #1
 8021468:	2b00      	cmp	r3, #0
 802146a:	b410      	push	{r4}
 802146c:	6093      	str	r3, [r2, #8]
 802146e:	da08      	bge.n	8021482 <__sfputc_r+0x1e>
 8021470:	6994      	ldr	r4, [r2, #24]
 8021472:	42a3      	cmp	r3, r4
 8021474:	db01      	blt.n	802147a <__sfputc_r+0x16>
 8021476:	290a      	cmp	r1, #10
 8021478:	d103      	bne.n	8021482 <__sfputc_r+0x1e>
 802147a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802147e:	f7ff bdd8 	b.w	8021032 <__swbuf_r>
 8021482:	6813      	ldr	r3, [r2, #0]
 8021484:	1c58      	adds	r0, r3, #1
 8021486:	6010      	str	r0, [r2, #0]
 8021488:	7019      	strb	r1, [r3, #0]
 802148a:	4608      	mov	r0, r1
 802148c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021490:	4770      	bx	lr

08021492 <__sfputs_r>:
 8021492:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021494:	4606      	mov	r6, r0
 8021496:	460f      	mov	r7, r1
 8021498:	4614      	mov	r4, r2
 802149a:	18d5      	adds	r5, r2, r3
 802149c:	42ac      	cmp	r4, r5
 802149e:	d101      	bne.n	80214a4 <__sfputs_r+0x12>
 80214a0:	2000      	movs	r0, #0
 80214a2:	e007      	b.n	80214b4 <__sfputs_r+0x22>
 80214a4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80214a8:	463a      	mov	r2, r7
 80214aa:	4630      	mov	r0, r6
 80214ac:	f7ff ffda 	bl	8021464 <__sfputc_r>
 80214b0:	1c43      	adds	r3, r0, #1
 80214b2:	d1f3      	bne.n	802149c <__sfputs_r+0xa>
 80214b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080214b8 <_vfiprintf_r>:
 80214b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80214bc:	460d      	mov	r5, r1
 80214be:	b09d      	sub	sp, #116	@ 0x74
 80214c0:	4614      	mov	r4, r2
 80214c2:	4698      	mov	r8, r3
 80214c4:	4606      	mov	r6, r0
 80214c6:	b118      	cbz	r0, 80214d0 <_vfiprintf_r+0x18>
 80214c8:	6a03      	ldr	r3, [r0, #32]
 80214ca:	b90b      	cbnz	r3, 80214d0 <_vfiprintf_r+0x18>
 80214cc:	f7ff fd26 	bl	8020f1c <__sinit>
 80214d0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80214d2:	07d9      	lsls	r1, r3, #31
 80214d4:	d405      	bmi.n	80214e2 <_vfiprintf_r+0x2a>
 80214d6:	89ab      	ldrh	r3, [r5, #12]
 80214d8:	059a      	lsls	r2, r3, #22
 80214da:	d402      	bmi.n	80214e2 <_vfiprintf_r+0x2a>
 80214dc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80214de:	f7ff ff0a 	bl	80212f6 <__retarget_lock_acquire_recursive>
 80214e2:	89ab      	ldrh	r3, [r5, #12]
 80214e4:	071b      	lsls	r3, r3, #28
 80214e6:	d501      	bpl.n	80214ec <_vfiprintf_r+0x34>
 80214e8:	692b      	ldr	r3, [r5, #16]
 80214ea:	b99b      	cbnz	r3, 8021514 <_vfiprintf_r+0x5c>
 80214ec:	4629      	mov	r1, r5
 80214ee:	4630      	mov	r0, r6
 80214f0:	f7ff fdde 	bl	80210b0 <__swsetup_r>
 80214f4:	b170      	cbz	r0, 8021514 <_vfiprintf_r+0x5c>
 80214f6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80214f8:	07dc      	lsls	r4, r3, #31
 80214fa:	d504      	bpl.n	8021506 <_vfiprintf_r+0x4e>
 80214fc:	f04f 30ff 	mov.w	r0, #4294967295
 8021500:	b01d      	add	sp, #116	@ 0x74
 8021502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021506:	89ab      	ldrh	r3, [r5, #12]
 8021508:	0598      	lsls	r0, r3, #22
 802150a:	d4f7      	bmi.n	80214fc <_vfiprintf_r+0x44>
 802150c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802150e:	f7ff fef3 	bl	80212f8 <__retarget_lock_release_recursive>
 8021512:	e7f3      	b.n	80214fc <_vfiprintf_r+0x44>
 8021514:	2300      	movs	r3, #0
 8021516:	9309      	str	r3, [sp, #36]	@ 0x24
 8021518:	2320      	movs	r3, #32
 802151a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 802151e:	f8cd 800c 	str.w	r8, [sp, #12]
 8021522:	2330      	movs	r3, #48	@ 0x30
 8021524:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80216d4 <_vfiprintf_r+0x21c>
 8021528:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 802152c:	f04f 0901 	mov.w	r9, #1
 8021530:	4623      	mov	r3, r4
 8021532:	469a      	mov	sl, r3
 8021534:	f813 2b01 	ldrb.w	r2, [r3], #1
 8021538:	b10a      	cbz	r2, 802153e <_vfiprintf_r+0x86>
 802153a:	2a25      	cmp	r2, #37	@ 0x25
 802153c:	d1f9      	bne.n	8021532 <_vfiprintf_r+0x7a>
 802153e:	ebba 0b04 	subs.w	fp, sl, r4
 8021542:	d00b      	beq.n	802155c <_vfiprintf_r+0xa4>
 8021544:	465b      	mov	r3, fp
 8021546:	4622      	mov	r2, r4
 8021548:	4629      	mov	r1, r5
 802154a:	4630      	mov	r0, r6
 802154c:	f7ff ffa1 	bl	8021492 <__sfputs_r>
 8021550:	3001      	adds	r0, #1
 8021552:	f000 80a7 	beq.w	80216a4 <_vfiprintf_r+0x1ec>
 8021556:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021558:	445a      	add	r2, fp
 802155a:	9209      	str	r2, [sp, #36]	@ 0x24
 802155c:	f89a 3000 	ldrb.w	r3, [sl]
 8021560:	2b00      	cmp	r3, #0
 8021562:	f000 809f 	beq.w	80216a4 <_vfiprintf_r+0x1ec>
 8021566:	2300      	movs	r3, #0
 8021568:	f04f 32ff 	mov.w	r2, #4294967295
 802156c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8021570:	f10a 0a01 	add.w	sl, sl, #1
 8021574:	9304      	str	r3, [sp, #16]
 8021576:	9307      	str	r3, [sp, #28]
 8021578:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 802157c:	931a      	str	r3, [sp, #104]	@ 0x68
 802157e:	4654      	mov	r4, sl
 8021580:	2205      	movs	r2, #5
 8021582:	f814 1b01 	ldrb.w	r1, [r4], #1
 8021586:	4853      	ldr	r0, [pc, #332]	@ (80216d4 <_vfiprintf_r+0x21c>)
 8021588:	f7de fe42 	bl	8000210 <memchr>
 802158c:	9a04      	ldr	r2, [sp, #16]
 802158e:	b9d8      	cbnz	r0, 80215c8 <_vfiprintf_r+0x110>
 8021590:	06d1      	lsls	r1, r2, #27
 8021592:	bf44      	itt	mi
 8021594:	2320      	movmi	r3, #32
 8021596:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802159a:	0713      	lsls	r3, r2, #28
 802159c:	bf44      	itt	mi
 802159e:	232b      	movmi	r3, #43	@ 0x2b
 80215a0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80215a4:	f89a 3000 	ldrb.w	r3, [sl]
 80215a8:	2b2a      	cmp	r3, #42	@ 0x2a
 80215aa:	d015      	beq.n	80215d8 <_vfiprintf_r+0x120>
 80215ac:	9a07      	ldr	r2, [sp, #28]
 80215ae:	4654      	mov	r4, sl
 80215b0:	2000      	movs	r0, #0
 80215b2:	f04f 0c0a 	mov.w	ip, #10
 80215b6:	4621      	mov	r1, r4
 80215b8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80215bc:	3b30      	subs	r3, #48	@ 0x30
 80215be:	2b09      	cmp	r3, #9
 80215c0:	d94b      	bls.n	802165a <_vfiprintf_r+0x1a2>
 80215c2:	b1b0      	cbz	r0, 80215f2 <_vfiprintf_r+0x13a>
 80215c4:	9207      	str	r2, [sp, #28]
 80215c6:	e014      	b.n	80215f2 <_vfiprintf_r+0x13a>
 80215c8:	eba0 0308 	sub.w	r3, r0, r8
 80215cc:	fa09 f303 	lsl.w	r3, r9, r3
 80215d0:	4313      	orrs	r3, r2
 80215d2:	9304      	str	r3, [sp, #16]
 80215d4:	46a2      	mov	sl, r4
 80215d6:	e7d2      	b.n	802157e <_vfiprintf_r+0xc6>
 80215d8:	9b03      	ldr	r3, [sp, #12]
 80215da:	1d19      	adds	r1, r3, #4
 80215dc:	681b      	ldr	r3, [r3, #0]
 80215de:	9103      	str	r1, [sp, #12]
 80215e0:	2b00      	cmp	r3, #0
 80215e2:	bfbb      	ittet	lt
 80215e4:	425b      	neglt	r3, r3
 80215e6:	f042 0202 	orrlt.w	r2, r2, #2
 80215ea:	9307      	strge	r3, [sp, #28]
 80215ec:	9307      	strlt	r3, [sp, #28]
 80215ee:	bfb8      	it	lt
 80215f0:	9204      	strlt	r2, [sp, #16]
 80215f2:	7823      	ldrb	r3, [r4, #0]
 80215f4:	2b2e      	cmp	r3, #46	@ 0x2e
 80215f6:	d10a      	bne.n	802160e <_vfiprintf_r+0x156>
 80215f8:	7863      	ldrb	r3, [r4, #1]
 80215fa:	2b2a      	cmp	r3, #42	@ 0x2a
 80215fc:	d132      	bne.n	8021664 <_vfiprintf_r+0x1ac>
 80215fe:	9b03      	ldr	r3, [sp, #12]
 8021600:	1d1a      	adds	r2, r3, #4
 8021602:	681b      	ldr	r3, [r3, #0]
 8021604:	9203      	str	r2, [sp, #12]
 8021606:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802160a:	3402      	adds	r4, #2
 802160c:	9305      	str	r3, [sp, #20]
 802160e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80216e4 <_vfiprintf_r+0x22c>
 8021612:	7821      	ldrb	r1, [r4, #0]
 8021614:	2203      	movs	r2, #3
 8021616:	4650      	mov	r0, sl
 8021618:	f7de fdfa 	bl	8000210 <memchr>
 802161c:	b138      	cbz	r0, 802162e <_vfiprintf_r+0x176>
 802161e:	9b04      	ldr	r3, [sp, #16]
 8021620:	eba0 000a 	sub.w	r0, r0, sl
 8021624:	2240      	movs	r2, #64	@ 0x40
 8021626:	4082      	lsls	r2, r0
 8021628:	4313      	orrs	r3, r2
 802162a:	3401      	adds	r4, #1
 802162c:	9304      	str	r3, [sp, #16]
 802162e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8021632:	4829      	ldr	r0, [pc, #164]	@ (80216d8 <_vfiprintf_r+0x220>)
 8021634:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8021638:	2206      	movs	r2, #6
 802163a:	f7de fde9 	bl	8000210 <memchr>
 802163e:	2800      	cmp	r0, #0
 8021640:	d03f      	beq.n	80216c2 <_vfiprintf_r+0x20a>
 8021642:	4b26      	ldr	r3, [pc, #152]	@ (80216dc <_vfiprintf_r+0x224>)
 8021644:	bb1b      	cbnz	r3, 802168e <_vfiprintf_r+0x1d6>
 8021646:	9b03      	ldr	r3, [sp, #12]
 8021648:	3307      	adds	r3, #7
 802164a:	f023 0307 	bic.w	r3, r3, #7
 802164e:	3308      	adds	r3, #8
 8021650:	9303      	str	r3, [sp, #12]
 8021652:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021654:	443b      	add	r3, r7
 8021656:	9309      	str	r3, [sp, #36]	@ 0x24
 8021658:	e76a      	b.n	8021530 <_vfiprintf_r+0x78>
 802165a:	fb0c 3202 	mla	r2, ip, r2, r3
 802165e:	460c      	mov	r4, r1
 8021660:	2001      	movs	r0, #1
 8021662:	e7a8      	b.n	80215b6 <_vfiprintf_r+0xfe>
 8021664:	2300      	movs	r3, #0
 8021666:	3401      	adds	r4, #1
 8021668:	9305      	str	r3, [sp, #20]
 802166a:	4619      	mov	r1, r3
 802166c:	f04f 0c0a 	mov.w	ip, #10
 8021670:	4620      	mov	r0, r4
 8021672:	f810 2b01 	ldrb.w	r2, [r0], #1
 8021676:	3a30      	subs	r2, #48	@ 0x30
 8021678:	2a09      	cmp	r2, #9
 802167a:	d903      	bls.n	8021684 <_vfiprintf_r+0x1cc>
 802167c:	2b00      	cmp	r3, #0
 802167e:	d0c6      	beq.n	802160e <_vfiprintf_r+0x156>
 8021680:	9105      	str	r1, [sp, #20]
 8021682:	e7c4      	b.n	802160e <_vfiprintf_r+0x156>
 8021684:	fb0c 2101 	mla	r1, ip, r1, r2
 8021688:	4604      	mov	r4, r0
 802168a:	2301      	movs	r3, #1
 802168c:	e7f0      	b.n	8021670 <_vfiprintf_r+0x1b8>
 802168e:	ab03      	add	r3, sp, #12
 8021690:	9300      	str	r3, [sp, #0]
 8021692:	462a      	mov	r2, r5
 8021694:	4b12      	ldr	r3, [pc, #72]	@ (80216e0 <_vfiprintf_r+0x228>)
 8021696:	a904      	add	r1, sp, #16
 8021698:	4630      	mov	r0, r6
 802169a:	f3af 8000 	nop.w
 802169e:	4607      	mov	r7, r0
 80216a0:	1c78      	adds	r0, r7, #1
 80216a2:	d1d6      	bne.n	8021652 <_vfiprintf_r+0x19a>
 80216a4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80216a6:	07d9      	lsls	r1, r3, #31
 80216a8:	d405      	bmi.n	80216b6 <_vfiprintf_r+0x1fe>
 80216aa:	89ab      	ldrh	r3, [r5, #12]
 80216ac:	059a      	lsls	r2, r3, #22
 80216ae:	d402      	bmi.n	80216b6 <_vfiprintf_r+0x1fe>
 80216b0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80216b2:	f7ff fe21 	bl	80212f8 <__retarget_lock_release_recursive>
 80216b6:	89ab      	ldrh	r3, [r5, #12]
 80216b8:	065b      	lsls	r3, r3, #25
 80216ba:	f53f af1f 	bmi.w	80214fc <_vfiprintf_r+0x44>
 80216be:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80216c0:	e71e      	b.n	8021500 <_vfiprintf_r+0x48>
 80216c2:	ab03      	add	r3, sp, #12
 80216c4:	9300      	str	r3, [sp, #0]
 80216c6:	462a      	mov	r2, r5
 80216c8:	4b05      	ldr	r3, [pc, #20]	@ (80216e0 <_vfiprintf_r+0x228>)
 80216ca:	a904      	add	r1, sp, #16
 80216cc:	4630      	mov	r0, r6
 80216ce:	f000 f879 	bl	80217c4 <_printf_i>
 80216d2:	e7e4      	b.n	802169e <_vfiprintf_r+0x1e6>
 80216d4:	080240e8 	.word	0x080240e8
 80216d8:	080240f2 	.word	0x080240f2
 80216dc:	00000000 	.word	0x00000000
 80216e0:	08021493 	.word	0x08021493
 80216e4:	080240ee 	.word	0x080240ee

080216e8 <_printf_common>:
 80216e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80216ec:	4616      	mov	r6, r2
 80216ee:	4698      	mov	r8, r3
 80216f0:	688a      	ldr	r2, [r1, #8]
 80216f2:	690b      	ldr	r3, [r1, #16]
 80216f4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80216f8:	4293      	cmp	r3, r2
 80216fa:	bfb8      	it	lt
 80216fc:	4613      	movlt	r3, r2
 80216fe:	6033      	str	r3, [r6, #0]
 8021700:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8021704:	4607      	mov	r7, r0
 8021706:	460c      	mov	r4, r1
 8021708:	b10a      	cbz	r2, 802170e <_printf_common+0x26>
 802170a:	3301      	adds	r3, #1
 802170c:	6033      	str	r3, [r6, #0]
 802170e:	6823      	ldr	r3, [r4, #0]
 8021710:	0699      	lsls	r1, r3, #26
 8021712:	bf42      	ittt	mi
 8021714:	6833      	ldrmi	r3, [r6, #0]
 8021716:	3302      	addmi	r3, #2
 8021718:	6033      	strmi	r3, [r6, #0]
 802171a:	6825      	ldr	r5, [r4, #0]
 802171c:	f015 0506 	ands.w	r5, r5, #6
 8021720:	d106      	bne.n	8021730 <_printf_common+0x48>
 8021722:	f104 0a19 	add.w	sl, r4, #25
 8021726:	68e3      	ldr	r3, [r4, #12]
 8021728:	6832      	ldr	r2, [r6, #0]
 802172a:	1a9b      	subs	r3, r3, r2
 802172c:	42ab      	cmp	r3, r5
 802172e:	dc26      	bgt.n	802177e <_printf_common+0x96>
 8021730:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8021734:	6822      	ldr	r2, [r4, #0]
 8021736:	3b00      	subs	r3, #0
 8021738:	bf18      	it	ne
 802173a:	2301      	movne	r3, #1
 802173c:	0692      	lsls	r2, r2, #26
 802173e:	d42b      	bmi.n	8021798 <_printf_common+0xb0>
 8021740:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8021744:	4641      	mov	r1, r8
 8021746:	4638      	mov	r0, r7
 8021748:	47c8      	blx	r9
 802174a:	3001      	adds	r0, #1
 802174c:	d01e      	beq.n	802178c <_printf_common+0xa4>
 802174e:	6823      	ldr	r3, [r4, #0]
 8021750:	6922      	ldr	r2, [r4, #16]
 8021752:	f003 0306 	and.w	r3, r3, #6
 8021756:	2b04      	cmp	r3, #4
 8021758:	bf02      	ittt	eq
 802175a:	68e5      	ldreq	r5, [r4, #12]
 802175c:	6833      	ldreq	r3, [r6, #0]
 802175e:	1aed      	subeq	r5, r5, r3
 8021760:	68a3      	ldr	r3, [r4, #8]
 8021762:	bf0c      	ite	eq
 8021764:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8021768:	2500      	movne	r5, #0
 802176a:	4293      	cmp	r3, r2
 802176c:	bfc4      	itt	gt
 802176e:	1a9b      	subgt	r3, r3, r2
 8021770:	18ed      	addgt	r5, r5, r3
 8021772:	2600      	movs	r6, #0
 8021774:	341a      	adds	r4, #26
 8021776:	42b5      	cmp	r5, r6
 8021778:	d11a      	bne.n	80217b0 <_printf_common+0xc8>
 802177a:	2000      	movs	r0, #0
 802177c:	e008      	b.n	8021790 <_printf_common+0xa8>
 802177e:	2301      	movs	r3, #1
 8021780:	4652      	mov	r2, sl
 8021782:	4641      	mov	r1, r8
 8021784:	4638      	mov	r0, r7
 8021786:	47c8      	blx	r9
 8021788:	3001      	adds	r0, #1
 802178a:	d103      	bne.n	8021794 <_printf_common+0xac>
 802178c:	f04f 30ff 	mov.w	r0, #4294967295
 8021790:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021794:	3501      	adds	r5, #1
 8021796:	e7c6      	b.n	8021726 <_printf_common+0x3e>
 8021798:	18e1      	adds	r1, r4, r3
 802179a:	1c5a      	adds	r2, r3, #1
 802179c:	2030      	movs	r0, #48	@ 0x30
 802179e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80217a2:	4422      	add	r2, r4
 80217a4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80217a8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80217ac:	3302      	adds	r3, #2
 80217ae:	e7c7      	b.n	8021740 <_printf_common+0x58>
 80217b0:	2301      	movs	r3, #1
 80217b2:	4622      	mov	r2, r4
 80217b4:	4641      	mov	r1, r8
 80217b6:	4638      	mov	r0, r7
 80217b8:	47c8      	blx	r9
 80217ba:	3001      	adds	r0, #1
 80217bc:	d0e6      	beq.n	802178c <_printf_common+0xa4>
 80217be:	3601      	adds	r6, #1
 80217c0:	e7d9      	b.n	8021776 <_printf_common+0x8e>
	...

080217c4 <_printf_i>:
 80217c4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80217c8:	7e0f      	ldrb	r7, [r1, #24]
 80217ca:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80217cc:	2f78      	cmp	r7, #120	@ 0x78
 80217ce:	4691      	mov	r9, r2
 80217d0:	4680      	mov	r8, r0
 80217d2:	460c      	mov	r4, r1
 80217d4:	469a      	mov	sl, r3
 80217d6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80217da:	d807      	bhi.n	80217ec <_printf_i+0x28>
 80217dc:	2f62      	cmp	r7, #98	@ 0x62
 80217de:	d80a      	bhi.n	80217f6 <_printf_i+0x32>
 80217e0:	2f00      	cmp	r7, #0
 80217e2:	f000 80d2 	beq.w	802198a <_printf_i+0x1c6>
 80217e6:	2f58      	cmp	r7, #88	@ 0x58
 80217e8:	f000 80b9 	beq.w	802195e <_printf_i+0x19a>
 80217ec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80217f0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80217f4:	e03a      	b.n	802186c <_printf_i+0xa8>
 80217f6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80217fa:	2b15      	cmp	r3, #21
 80217fc:	d8f6      	bhi.n	80217ec <_printf_i+0x28>
 80217fe:	a101      	add	r1, pc, #4	@ (adr r1, 8021804 <_printf_i+0x40>)
 8021800:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8021804:	0802185d 	.word	0x0802185d
 8021808:	08021871 	.word	0x08021871
 802180c:	080217ed 	.word	0x080217ed
 8021810:	080217ed 	.word	0x080217ed
 8021814:	080217ed 	.word	0x080217ed
 8021818:	080217ed 	.word	0x080217ed
 802181c:	08021871 	.word	0x08021871
 8021820:	080217ed 	.word	0x080217ed
 8021824:	080217ed 	.word	0x080217ed
 8021828:	080217ed 	.word	0x080217ed
 802182c:	080217ed 	.word	0x080217ed
 8021830:	08021971 	.word	0x08021971
 8021834:	0802189b 	.word	0x0802189b
 8021838:	0802192b 	.word	0x0802192b
 802183c:	080217ed 	.word	0x080217ed
 8021840:	080217ed 	.word	0x080217ed
 8021844:	08021993 	.word	0x08021993
 8021848:	080217ed 	.word	0x080217ed
 802184c:	0802189b 	.word	0x0802189b
 8021850:	080217ed 	.word	0x080217ed
 8021854:	080217ed 	.word	0x080217ed
 8021858:	08021933 	.word	0x08021933
 802185c:	6833      	ldr	r3, [r6, #0]
 802185e:	1d1a      	adds	r2, r3, #4
 8021860:	681b      	ldr	r3, [r3, #0]
 8021862:	6032      	str	r2, [r6, #0]
 8021864:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8021868:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 802186c:	2301      	movs	r3, #1
 802186e:	e09d      	b.n	80219ac <_printf_i+0x1e8>
 8021870:	6833      	ldr	r3, [r6, #0]
 8021872:	6820      	ldr	r0, [r4, #0]
 8021874:	1d19      	adds	r1, r3, #4
 8021876:	6031      	str	r1, [r6, #0]
 8021878:	0606      	lsls	r6, r0, #24
 802187a:	d501      	bpl.n	8021880 <_printf_i+0xbc>
 802187c:	681d      	ldr	r5, [r3, #0]
 802187e:	e003      	b.n	8021888 <_printf_i+0xc4>
 8021880:	0645      	lsls	r5, r0, #25
 8021882:	d5fb      	bpl.n	802187c <_printf_i+0xb8>
 8021884:	f9b3 5000 	ldrsh.w	r5, [r3]
 8021888:	2d00      	cmp	r5, #0
 802188a:	da03      	bge.n	8021894 <_printf_i+0xd0>
 802188c:	232d      	movs	r3, #45	@ 0x2d
 802188e:	426d      	negs	r5, r5
 8021890:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8021894:	4859      	ldr	r0, [pc, #356]	@ (80219fc <_printf_i+0x238>)
 8021896:	230a      	movs	r3, #10
 8021898:	e011      	b.n	80218be <_printf_i+0xfa>
 802189a:	6821      	ldr	r1, [r4, #0]
 802189c:	6833      	ldr	r3, [r6, #0]
 802189e:	0608      	lsls	r0, r1, #24
 80218a0:	f853 5b04 	ldr.w	r5, [r3], #4
 80218a4:	d402      	bmi.n	80218ac <_printf_i+0xe8>
 80218a6:	0649      	lsls	r1, r1, #25
 80218a8:	bf48      	it	mi
 80218aa:	b2ad      	uxthmi	r5, r5
 80218ac:	2f6f      	cmp	r7, #111	@ 0x6f
 80218ae:	4853      	ldr	r0, [pc, #332]	@ (80219fc <_printf_i+0x238>)
 80218b0:	6033      	str	r3, [r6, #0]
 80218b2:	bf14      	ite	ne
 80218b4:	230a      	movne	r3, #10
 80218b6:	2308      	moveq	r3, #8
 80218b8:	2100      	movs	r1, #0
 80218ba:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80218be:	6866      	ldr	r6, [r4, #4]
 80218c0:	60a6      	str	r6, [r4, #8]
 80218c2:	2e00      	cmp	r6, #0
 80218c4:	bfa2      	ittt	ge
 80218c6:	6821      	ldrge	r1, [r4, #0]
 80218c8:	f021 0104 	bicge.w	r1, r1, #4
 80218cc:	6021      	strge	r1, [r4, #0]
 80218ce:	b90d      	cbnz	r5, 80218d4 <_printf_i+0x110>
 80218d0:	2e00      	cmp	r6, #0
 80218d2:	d04b      	beq.n	802196c <_printf_i+0x1a8>
 80218d4:	4616      	mov	r6, r2
 80218d6:	fbb5 f1f3 	udiv	r1, r5, r3
 80218da:	fb03 5711 	mls	r7, r3, r1, r5
 80218de:	5dc7      	ldrb	r7, [r0, r7]
 80218e0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80218e4:	462f      	mov	r7, r5
 80218e6:	42bb      	cmp	r3, r7
 80218e8:	460d      	mov	r5, r1
 80218ea:	d9f4      	bls.n	80218d6 <_printf_i+0x112>
 80218ec:	2b08      	cmp	r3, #8
 80218ee:	d10b      	bne.n	8021908 <_printf_i+0x144>
 80218f0:	6823      	ldr	r3, [r4, #0]
 80218f2:	07df      	lsls	r7, r3, #31
 80218f4:	d508      	bpl.n	8021908 <_printf_i+0x144>
 80218f6:	6923      	ldr	r3, [r4, #16]
 80218f8:	6861      	ldr	r1, [r4, #4]
 80218fa:	4299      	cmp	r1, r3
 80218fc:	bfde      	ittt	le
 80218fe:	2330      	movle	r3, #48	@ 0x30
 8021900:	f806 3c01 	strble.w	r3, [r6, #-1]
 8021904:	f106 36ff 	addle.w	r6, r6, #4294967295
 8021908:	1b92      	subs	r2, r2, r6
 802190a:	6122      	str	r2, [r4, #16]
 802190c:	f8cd a000 	str.w	sl, [sp]
 8021910:	464b      	mov	r3, r9
 8021912:	aa03      	add	r2, sp, #12
 8021914:	4621      	mov	r1, r4
 8021916:	4640      	mov	r0, r8
 8021918:	f7ff fee6 	bl	80216e8 <_printf_common>
 802191c:	3001      	adds	r0, #1
 802191e:	d14a      	bne.n	80219b6 <_printf_i+0x1f2>
 8021920:	f04f 30ff 	mov.w	r0, #4294967295
 8021924:	b004      	add	sp, #16
 8021926:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802192a:	6823      	ldr	r3, [r4, #0]
 802192c:	f043 0320 	orr.w	r3, r3, #32
 8021930:	6023      	str	r3, [r4, #0]
 8021932:	4833      	ldr	r0, [pc, #204]	@ (8021a00 <_printf_i+0x23c>)
 8021934:	2778      	movs	r7, #120	@ 0x78
 8021936:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 802193a:	6823      	ldr	r3, [r4, #0]
 802193c:	6831      	ldr	r1, [r6, #0]
 802193e:	061f      	lsls	r7, r3, #24
 8021940:	f851 5b04 	ldr.w	r5, [r1], #4
 8021944:	d402      	bmi.n	802194c <_printf_i+0x188>
 8021946:	065f      	lsls	r7, r3, #25
 8021948:	bf48      	it	mi
 802194a:	b2ad      	uxthmi	r5, r5
 802194c:	6031      	str	r1, [r6, #0]
 802194e:	07d9      	lsls	r1, r3, #31
 8021950:	bf44      	itt	mi
 8021952:	f043 0320 	orrmi.w	r3, r3, #32
 8021956:	6023      	strmi	r3, [r4, #0]
 8021958:	b11d      	cbz	r5, 8021962 <_printf_i+0x19e>
 802195a:	2310      	movs	r3, #16
 802195c:	e7ac      	b.n	80218b8 <_printf_i+0xf4>
 802195e:	4827      	ldr	r0, [pc, #156]	@ (80219fc <_printf_i+0x238>)
 8021960:	e7e9      	b.n	8021936 <_printf_i+0x172>
 8021962:	6823      	ldr	r3, [r4, #0]
 8021964:	f023 0320 	bic.w	r3, r3, #32
 8021968:	6023      	str	r3, [r4, #0]
 802196a:	e7f6      	b.n	802195a <_printf_i+0x196>
 802196c:	4616      	mov	r6, r2
 802196e:	e7bd      	b.n	80218ec <_printf_i+0x128>
 8021970:	6833      	ldr	r3, [r6, #0]
 8021972:	6825      	ldr	r5, [r4, #0]
 8021974:	6961      	ldr	r1, [r4, #20]
 8021976:	1d18      	adds	r0, r3, #4
 8021978:	6030      	str	r0, [r6, #0]
 802197a:	062e      	lsls	r6, r5, #24
 802197c:	681b      	ldr	r3, [r3, #0]
 802197e:	d501      	bpl.n	8021984 <_printf_i+0x1c0>
 8021980:	6019      	str	r1, [r3, #0]
 8021982:	e002      	b.n	802198a <_printf_i+0x1c6>
 8021984:	0668      	lsls	r0, r5, #25
 8021986:	d5fb      	bpl.n	8021980 <_printf_i+0x1bc>
 8021988:	8019      	strh	r1, [r3, #0]
 802198a:	2300      	movs	r3, #0
 802198c:	6123      	str	r3, [r4, #16]
 802198e:	4616      	mov	r6, r2
 8021990:	e7bc      	b.n	802190c <_printf_i+0x148>
 8021992:	6833      	ldr	r3, [r6, #0]
 8021994:	1d1a      	adds	r2, r3, #4
 8021996:	6032      	str	r2, [r6, #0]
 8021998:	681e      	ldr	r6, [r3, #0]
 802199a:	6862      	ldr	r2, [r4, #4]
 802199c:	2100      	movs	r1, #0
 802199e:	4630      	mov	r0, r6
 80219a0:	f7de fc36 	bl	8000210 <memchr>
 80219a4:	b108      	cbz	r0, 80219aa <_printf_i+0x1e6>
 80219a6:	1b80      	subs	r0, r0, r6
 80219a8:	6060      	str	r0, [r4, #4]
 80219aa:	6863      	ldr	r3, [r4, #4]
 80219ac:	6123      	str	r3, [r4, #16]
 80219ae:	2300      	movs	r3, #0
 80219b0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80219b4:	e7aa      	b.n	802190c <_printf_i+0x148>
 80219b6:	6923      	ldr	r3, [r4, #16]
 80219b8:	4632      	mov	r2, r6
 80219ba:	4649      	mov	r1, r9
 80219bc:	4640      	mov	r0, r8
 80219be:	47d0      	blx	sl
 80219c0:	3001      	adds	r0, #1
 80219c2:	d0ad      	beq.n	8021920 <_printf_i+0x15c>
 80219c4:	6823      	ldr	r3, [r4, #0]
 80219c6:	079b      	lsls	r3, r3, #30
 80219c8:	d413      	bmi.n	80219f2 <_printf_i+0x22e>
 80219ca:	68e0      	ldr	r0, [r4, #12]
 80219cc:	9b03      	ldr	r3, [sp, #12]
 80219ce:	4298      	cmp	r0, r3
 80219d0:	bfb8      	it	lt
 80219d2:	4618      	movlt	r0, r3
 80219d4:	e7a6      	b.n	8021924 <_printf_i+0x160>
 80219d6:	2301      	movs	r3, #1
 80219d8:	4632      	mov	r2, r6
 80219da:	4649      	mov	r1, r9
 80219dc:	4640      	mov	r0, r8
 80219de:	47d0      	blx	sl
 80219e0:	3001      	adds	r0, #1
 80219e2:	d09d      	beq.n	8021920 <_printf_i+0x15c>
 80219e4:	3501      	adds	r5, #1
 80219e6:	68e3      	ldr	r3, [r4, #12]
 80219e8:	9903      	ldr	r1, [sp, #12]
 80219ea:	1a5b      	subs	r3, r3, r1
 80219ec:	42ab      	cmp	r3, r5
 80219ee:	dcf2      	bgt.n	80219d6 <_printf_i+0x212>
 80219f0:	e7eb      	b.n	80219ca <_printf_i+0x206>
 80219f2:	2500      	movs	r5, #0
 80219f4:	f104 0619 	add.w	r6, r4, #25
 80219f8:	e7f5      	b.n	80219e6 <_printf_i+0x222>
 80219fa:	bf00      	nop
 80219fc:	080240f9 	.word	0x080240f9
 8021a00:	0802410a 	.word	0x0802410a

08021a04 <__sflush_r>:
 8021a04:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8021a08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021a0c:	0716      	lsls	r6, r2, #28
 8021a0e:	4605      	mov	r5, r0
 8021a10:	460c      	mov	r4, r1
 8021a12:	d454      	bmi.n	8021abe <__sflush_r+0xba>
 8021a14:	684b      	ldr	r3, [r1, #4]
 8021a16:	2b00      	cmp	r3, #0
 8021a18:	dc02      	bgt.n	8021a20 <__sflush_r+0x1c>
 8021a1a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8021a1c:	2b00      	cmp	r3, #0
 8021a1e:	dd48      	ble.n	8021ab2 <__sflush_r+0xae>
 8021a20:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8021a22:	2e00      	cmp	r6, #0
 8021a24:	d045      	beq.n	8021ab2 <__sflush_r+0xae>
 8021a26:	2300      	movs	r3, #0
 8021a28:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8021a2c:	682f      	ldr	r7, [r5, #0]
 8021a2e:	6a21      	ldr	r1, [r4, #32]
 8021a30:	602b      	str	r3, [r5, #0]
 8021a32:	d030      	beq.n	8021a96 <__sflush_r+0x92>
 8021a34:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8021a36:	89a3      	ldrh	r3, [r4, #12]
 8021a38:	0759      	lsls	r1, r3, #29
 8021a3a:	d505      	bpl.n	8021a48 <__sflush_r+0x44>
 8021a3c:	6863      	ldr	r3, [r4, #4]
 8021a3e:	1ad2      	subs	r2, r2, r3
 8021a40:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8021a42:	b10b      	cbz	r3, 8021a48 <__sflush_r+0x44>
 8021a44:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8021a46:	1ad2      	subs	r2, r2, r3
 8021a48:	2300      	movs	r3, #0
 8021a4a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8021a4c:	6a21      	ldr	r1, [r4, #32]
 8021a4e:	4628      	mov	r0, r5
 8021a50:	47b0      	blx	r6
 8021a52:	1c43      	adds	r3, r0, #1
 8021a54:	89a3      	ldrh	r3, [r4, #12]
 8021a56:	d106      	bne.n	8021a66 <__sflush_r+0x62>
 8021a58:	6829      	ldr	r1, [r5, #0]
 8021a5a:	291d      	cmp	r1, #29
 8021a5c:	d82b      	bhi.n	8021ab6 <__sflush_r+0xb2>
 8021a5e:	4a2a      	ldr	r2, [pc, #168]	@ (8021b08 <__sflush_r+0x104>)
 8021a60:	410a      	asrs	r2, r1
 8021a62:	07d6      	lsls	r6, r2, #31
 8021a64:	d427      	bmi.n	8021ab6 <__sflush_r+0xb2>
 8021a66:	2200      	movs	r2, #0
 8021a68:	6062      	str	r2, [r4, #4]
 8021a6a:	04d9      	lsls	r1, r3, #19
 8021a6c:	6922      	ldr	r2, [r4, #16]
 8021a6e:	6022      	str	r2, [r4, #0]
 8021a70:	d504      	bpl.n	8021a7c <__sflush_r+0x78>
 8021a72:	1c42      	adds	r2, r0, #1
 8021a74:	d101      	bne.n	8021a7a <__sflush_r+0x76>
 8021a76:	682b      	ldr	r3, [r5, #0]
 8021a78:	b903      	cbnz	r3, 8021a7c <__sflush_r+0x78>
 8021a7a:	6560      	str	r0, [r4, #84]	@ 0x54
 8021a7c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8021a7e:	602f      	str	r7, [r5, #0]
 8021a80:	b1b9      	cbz	r1, 8021ab2 <__sflush_r+0xae>
 8021a82:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8021a86:	4299      	cmp	r1, r3
 8021a88:	d002      	beq.n	8021a90 <__sflush_r+0x8c>
 8021a8a:	4628      	mov	r0, r5
 8021a8c:	f7ff fca0 	bl	80213d0 <_free_r>
 8021a90:	2300      	movs	r3, #0
 8021a92:	6363      	str	r3, [r4, #52]	@ 0x34
 8021a94:	e00d      	b.n	8021ab2 <__sflush_r+0xae>
 8021a96:	2301      	movs	r3, #1
 8021a98:	4628      	mov	r0, r5
 8021a9a:	47b0      	blx	r6
 8021a9c:	4602      	mov	r2, r0
 8021a9e:	1c50      	adds	r0, r2, #1
 8021aa0:	d1c9      	bne.n	8021a36 <__sflush_r+0x32>
 8021aa2:	682b      	ldr	r3, [r5, #0]
 8021aa4:	2b00      	cmp	r3, #0
 8021aa6:	d0c6      	beq.n	8021a36 <__sflush_r+0x32>
 8021aa8:	2b1d      	cmp	r3, #29
 8021aaa:	d001      	beq.n	8021ab0 <__sflush_r+0xac>
 8021aac:	2b16      	cmp	r3, #22
 8021aae:	d11e      	bne.n	8021aee <__sflush_r+0xea>
 8021ab0:	602f      	str	r7, [r5, #0]
 8021ab2:	2000      	movs	r0, #0
 8021ab4:	e022      	b.n	8021afc <__sflush_r+0xf8>
 8021ab6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8021aba:	b21b      	sxth	r3, r3
 8021abc:	e01b      	b.n	8021af6 <__sflush_r+0xf2>
 8021abe:	690f      	ldr	r7, [r1, #16]
 8021ac0:	2f00      	cmp	r7, #0
 8021ac2:	d0f6      	beq.n	8021ab2 <__sflush_r+0xae>
 8021ac4:	0793      	lsls	r3, r2, #30
 8021ac6:	680e      	ldr	r6, [r1, #0]
 8021ac8:	bf08      	it	eq
 8021aca:	694b      	ldreq	r3, [r1, #20]
 8021acc:	600f      	str	r7, [r1, #0]
 8021ace:	bf18      	it	ne
 8021ad0:	2300      	movne	r3, #0
 8021ad2:	eba6 0807 	sub.w	r8, r6, r7
 8021ad6:	608b      	str	r3, [r1, #8]
 8021ad8:	f1b8 0f00 	cmp.w	r8, #0
 8021adc:	dde9      	ble.n	8021ab2 <__sflush_r+0xae>
 8021ade:	6a21      	ldr	r1, [r4, #32]
 8021ae0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8021ae2:	4643      	mov	r3, r8
 8021ae4:	463a      	mov	r2, r7
 8021ae6:	4628      	mov	r0, r5
 8021ae8:	47b0      	blx	r6
 8021aea:	2800      	cmp	r0, #0
 8021aec:	dc08      	bgt.n	8021b00 <__sflush_r+0xfc>
 8021aee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021af2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8021af6:	81a3      	strh	r3, [r4, #12]
 8021af8:	f04f 30ff 	mov.w	r0, #4294967295
 8021afc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021b00:	4407      	add	r7, r0
 8021b02:	eba8 0800 	sub.w	r8, r8, r0
 8021b06:	e7e7      	b.n	8021ad8 <__sflush_r+0xd4>
 8021b08:	dfbffffe 	.word	0xdfbffffe

08021b0c <_fflush_r>:
 8021b0c:	b538      	push	{r3, r4, r5, lr}
 8021b0e:	690b      	ldr	r3, [r1, #16]
 8021b10:	4605      	mov	r5, r0
 8021b12:	460c      	mov	r4, r1
 8021b14:	b913      	cbnz	r3, 8021b1c <_fflush_r+0x10>
 8021b16:	2500      	movs	r5, #0
 8021b18:	4628      	mov	r0, r5
 8021b1a:	bd38      	pop	{r3, r4, r5, pc}
 8021b1c:	b118      	cbz	r0, 8021b26 <_fflush_r+0x1a>
 8021b1e:	6a03      	ldr	r3, [r0, #32]
 8021b20:	b90b      	cbnz	r3, 8021b26 <_fflush_r+0x1a>
 8021b22:	f7ff f9fb 	bl	8020f1c <__sinit>
 8021b26:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021b2a:	2b00      	cmp	r3, #0
 8021b2c:	d0f3      	beq.n	8021b16 <_fflush_r+0xa>
 8021b2e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8021b30:	07d0      	lsls	r0, r2, #31
 8021b32:	d404      	bmi.n	8021b3e <_fflush_r+0x32>
 8021b34:	0599      	lsls	r1, r3, #22
 8021b36:	d402      	bmi.n	8021b3e <_fflush_r+0x32>
 8021b38:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8021b3a:	f7ff fbdc 	bl	80212f6 <__retarget_lock_acquire_recursive>
 8021b3e:	4628      	mov	r0, r5
 8021b40:	4621      	mov	r1, r4
 8021b42:	f7ff ff5f 	bl	8021a04 <__sflush_r>
 8021b46:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8021b48:	07da      	lsls	r2, r3, #31
 8021b4a:	4605      	mov	r5, r0
 8021b4c:	d4e4      	bmi.n	8021b18 <_fflush_r+0xc>
 8021b4e:	89a3      	ldrh	r3, [r4, #12]
 8021b50:	059b      	lsls	r3, r3, #22
 8021b52:	d4e1      	bmi.n	8021b18 <_fflush_r+0xc>
 8021b54:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8021b56:	f7ff fbcf 	bl	80212f8 <__retarget_lock_release_recursive>
 8021b5a:	e7dd      	b.n	8021b18 <_fflush_r+0xc>

08021b5c <__swhatbuf_r>:
 8021b5c:	b570      	push	{r4, r5, r6, lr}
 8021b5e:	460c      	mov	r4, r1
 8021b60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021b64:	2900      	cmp	r1, #0
 8021b66:	b096      	sub	sp, #88	@ 0x58
 8021b68:	4615      	mov	r5, r2
 8021b6a:	461e      	mov	r6, r3
 8021b6c:	da0d      	bge.n	8021b8a <__swhatbuf_r+0x2e>
 8021b6e:	89a3      	ldrh	r3, [r4, #12]
 8021b70:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8021b74:	f04f 0100 	mov.w	r1, #0
 8021b78:	bf14      	ite	ne
 8021b7a:	2340      	movne	r3, #64	@ 0x40
 8021b7c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8021b80:	2000      	movs	r0, #0
 8021b82:	6031      	str	r1, [r6, #0]
 8021b84:	602b      	str	r3, [r5, #0]
 8021b86:	b016      	add	sp, #88	@ 0x58
 8021b88:	bd70      	pop	{r4, r5, r6, pc}
 8021b8a:	466a      	mov	r2, sp
 8021b8c:	f000 f848 	bl	8021c20 <_fstat_r>
 8021b90:	2800      	cmp	r0, #0
 8021b92:	dbec      	blt.n	8021b6e <__swhatbuf_r+0x12>
 8021b94:	9901      	ldr	r1, [sp, #4]
 8021b96:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8021b9a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8021b9e:	4259      	negs	r1, r3
 8021ba0:	4159      	adcs	r1, r3
 8021ba2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8021ba6:	e7eb      	b.n	8021b80 <__swhatbuf_r+0x24>

08021ba8 <__smakebuf_r>:
 8021ba8:	898b      	ldrh	r3, [r1, #12]
 8021baa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8021bac:	079d      	lsls	r5, r3, #30
 8021bae:	4606      	mov	r6, r0
 8021bb0:	460c      	mov	r4, r1
 8021bb2:	d507      	bpl.n	8021bc4 <__smakebuf_r+0x1c>
 8021bb4:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8021bb8:	6023      	str	r3, [r4, #0]
 8021bba:	6123      	str	r3, [r4, #16]
 8021bbc:	2301      	movs	r3, #1
 8021bbe:	6163      	str	r3, [r4, #20]
 8021bc0:	b003      	add	sp, #12
 8021bc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021bc4:	ab01      	add	r3, sp, #4
 8021bc6:	466a      	mov	r2, sp
 8021bc8:	f7ff ffc8 	bl	8021b5c <__swhatbuf_r>
 8021bcc:	9f00      	ldr	r7, [sp, #0]
 8021bce:	4605      	mov	r5, r0
 8021bd0:	4639      	mov	r1, r7
 8021bd2:	4630      	mov	r0, r6
 8021bd4:	f7ff f87c 	bl	8020cd0 <_malloc_r>
 8021bd8:	b948      	cbnz	r0, 8021bee <__smakebuf_r+0x46>
 8021bda:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021bde:	059a      	lsls	r2, r3, #22
 8021be0:	d4ee      	bmi.n	8021bc0 <__smakebuf_r+0x18>
 8021be2:	f023 0303 	bic.w	r3, r3, #3
 8021be6:	f043 0302 	orr.w	r3, r3, #2
 8021bea:	81a3      	strh	r3, [r4, #12]
 8021bec:	e7e2      	b.n	8021bb4 <__smakebuf_r+0xc>
 8021bee:	89a3      	ldrh	r3, [r4, #12]
 8021bf0:	6020      	str	r0, [r4, #0]
 8021bf2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8021bf6:	81a3      	strh	r3, [r4, #12]
 8021bf8:	9b01      	ldr	r3, [sp, #4]
 8021bfa:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8021bfe:	b15b      	cbz	r3, 8021c18 <__smakebuf_r+0x70>
 8021c00:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021c04:	4630      	mov	r0, r6
 8021c06:	f000 f81d 	bl	8021c44 <_isatty_r>
 8021c0a:	b128      	cbz	r0, 8021c18 <__smakebuf_r+0x70>
 8021c0c:	89a3      	ldrh	r3, [r4, #12]
 8021c0e:	f023 0303 	bic.w	r3, r3, #3
 8021c12:	f043 0301 	orr.w	r3, r3, #1
 8021c16:	81a3      	strh	r3, [r4, #12]
 8021c18:	89a3      	ldrh	r3, [r4, #12]
 8021c1a:	431d      	orrs	r5, r3
 8021c1c:	81a5      	strh	r5, [r4, #12]
 8021c1e:	e7cf      	b.n	8021bc0 <__smakebuf_r+0x18>

08021c20 <_fstat_r>:
 8021c20:	b538      	push	{r3, r4, r5, lr}
 8021c22:	4d07      	ldr	r5, [pc, #28]	@ (8021c40 <_fstat_r+0x20>)
 8021c24:	2300      	movs	r3, #0
 8021c26:	4604      	mov	r4, r0
 8021c28:	4608      	mov	r0, r1
 8021c2a:	4611      	mov	r1, r2
 8021c2c:	602b      	str	r3, [r5, #0]
 8021c2e:	f7df fb9e 	bl	800136e <_fstat>
 8021c32:	1c43      	adds	r3, r0, #1
 8021c34:	d102      	bne.n	8021c3c <_fstat_r+0x1c>
 8021c36:	682b      	ldr	r3, [r5, #0]
 8021c38:	b103      	cbz	r3, 8021c3c <_fstat_r+0x1c>
 8021c3a:	6023      	str	r3, [r4, #0]
 8021c3c:	bd38      	pop	{r3, r4, r5, pc}
 8021c3e:	bf00      	nop
 8021c40:	20017498 	.word	0x20017498

08021c44 <_isatty_r>:
 8021c44:	b538      	push	{r3, r4, r5, lr}
 8021c46:	4d06      	ldr	r5, [pc, #24]	@ (8021c60 <_isatty_r+0x1c>)
 8021c48:	2300      	movs	r3, #0
 8021c4a:	4604      	mov	r4, r0
 8021c4c:	4608      	mov	r0, r1
 8021c4e:	602b      	str	r3, [r5, #0]
 8021c50:	f7df fb92 	bl	8001378 <_isatty>
 8021c54:	1c43      	adds	r3, r0, #1
 8021c56:	d102      	bne.n	8021c5e <_isatty_r+0x1a>
 8021c58:	682b      	ldr	r3, [r5, #0]
 8021c5a:	b103      	cbz	r3, 8021c5e <_isatty_r+0x1a>
 8021c5c:	6023      	str	r3, [r4, #0]
 8021c5e:	bd38      	pop	{r3, r4, r5, pc}
 8021c60:	20017498 	.word	0x20017498

08021c64 <_init>:
 8021c64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021c66:	bf00      	nop
 8021c68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021c6a:	bc08      	pop	{r3}
 8021c6c:	469e      	mov	lr, r3
 8021c6e:	4770      	bx	lr

08021c70 <_fini>:
 8021c70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021c72:	bf00      	nop
 8021c74:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021c76:	bc08      	pop	{r3}
 8021c78:	469e      	mov	lr, r3
 8021c7a:	4770      	bx	lr
