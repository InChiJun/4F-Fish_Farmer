/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SENSORVIEWBASE_HPP
#define SENSORVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/sensor_screen/sensorPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <gui/containers/CustomContainer1.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Button.hpp>

class sensorViewBase : public touchgfx::View<sensorPresenter>
{
public:
    sensorViewBase();
    virtual ~sensorViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    CustomContainer1 ex1;
    CustomContainer1 ex2;
    CustomContainer1 ex3;
    CustomContainer1 ex4;
    CustomContainer1 ex5;
    touchgfx::TextArea temperature;
    touchgfx::TextArea humidity;
    touchgfx::TextArea ph;
    touchgfx::TextArea tds;
    touchgfx::TextArea level;
    touchgfx::TextAreaWithOneWildcard text_temperature;
    touchgfx::TextAreaWithOneWildcard text_humidity;
    touchgfx::TextAreaWithOneWildcard text_ph;
    touchgfx::TextAreaWithOneWildcard text_tds;
    touchgfx::TextAreaWithOneWildcard text_level;
    touchgfx::Button back_main_btn;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXT_TEMPERATURE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar text_temperatureBuffer[TEXT_TEMPERATURE_SIZE];
    static const uint16_t TEXT_HUMIDITY_SIZE = 10;
    touchgfx::Unicode::UnicodeChar text_humidityBuffer[TEXT_HUMIDITY_SIZE];
    static const uint16_t TEXT_PH_SIZE = 10;
    touchgfx::Unicode::UnicodeChar text_phBuffer[TEXT_PH_SIZE];
    static const uint16_t TEXT_TDS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar text_tdsBuffer[TEXT_TDS_SIZE];
    static const uint16_t TEXT_LEVEL_SIZE = 10;
    touchgfx::Unicode::UnicodeChar text_levelBuffer[TEXT_LEVEL_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<sensorViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SENSORVIEWBASE_HPP
