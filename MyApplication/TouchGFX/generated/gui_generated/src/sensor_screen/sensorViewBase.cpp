/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/sensor_screen/sensorViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

sensorViewBase::sensorViewBase() :
    buttonCallback(this, &sensorViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_GRADIENT_DARK_ID));
    add(background);

    ex1.setXY(100, 15);
    add(ex1);

    ex2.setXY(250, 15);
    add(ex2);

    ex3.setXY(25, 145);
    add(ex3);

    ex4.setXY(175, 145);
    add(ex4);

    ex5.setXY(325, 145);
    add(ex5);

    temperature.setPosition(106, 19, 120, 40);
    temperature.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    temperature.setLinespacing(0);
    temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NNZ2));
    temperature.setAlpha(150);
    add(temperature);

    humidity.setPosition(256, 19, 120, 40);
    humidity.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    humidity.setLinespacing(0);
    humidity.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JSNQ));
    humidity.setAlpha(150);
    add(humidity);

    ph.setPosition(29, 149, 120, 40);
    ph.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ph.setLinespacing(0);
    ph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HHCR));
    ph.setAlpha(150);
    add(ph);

    tds.setPosition(181, 149, 120, 40);
    tds.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tds.setLinespacing(0);
    tds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_44AS));
    tds.setAlpha(150);
    add(tds);

    level.setPosition(331, 149, 120, 40);
    level.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    level.setLinespacing(0);
    level.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1AZS));
    level.setAlpha(150);
    add(level);

    text_temperature.setPosition(104, 85, 122, 25);
    text_temperature.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_temperature.setLinespacing(0);
    Unicode::snprintf(text_temperatureBuffer, TEXT_TEMPERATURE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7798).getText());
    text_temperature.setWildcard(text_temperatureBuffer);
    text_temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MTPN));
    add(text_temperature);

    text_humidity.setPosition(250, 85, 126, 25);
    text_humidity.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_humidity.setLinespacing(0);
    Unicode::snprintf(text_humidityBuffer, TEXT_HUMIDITY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_F69V).getText());
    text_humidity.setWildcard(text_humidityBuffer);
    text_humidity.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D9RX));
    add(text_humidity);

    text_ph.setPosition(29, 215, 126, 25);
    text_ph.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_ph.setLinespacing(0);
    Unicode::snprintf(text_phBuffer, TEXT_PH_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LXQ5).getText());
    text_ph.setWildcard(text_phBuffer);
    text_ph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WQQ5));
    add(text_ph);

    text_tds.setPosition(181, 215, 120, 25);
    text_tds.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_tds.setLinespacing(0);
    Unicode::snprintf(text_tdsBuffer, TEXT_TDS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PYMH).getText());
    text_tds.setWildcard(text_tdsBuffer);
    text_tds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EHW8));
    add(text_tds);

    text_level.setPosition(331, 215, 119, 25);
    text_level.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_level.setLinespacing(0);
    Unicode::snprintf(text_levelBuffer, TEXT_LEVEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Z25Q).getText());
    text_level.setWildcard(text_levelBuffer);
    text_level.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I690));
    add(text_level);

    back_main_btn.setXY(425, 5);
    back_main_btn.setBitmaps(touchgfx::Bitmap(BITMAP_BACK50_ID), touchgfx::Bitmap(BITMAP_BACK50_ID));
    back_main_btn.setAlpha(150);
    back_main_btn.setAction(buttonCallback);
    add(back_main_btn);
}

sensorViewBase::~sensorViewBase()
{

}

void sensorViewBase::setupScreen()
{
    ex1.initialize();
    ex2.initialize();
    ex3.initialize();
    ex4.initialize();
    ex5.initialize();
}

void sensorViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back_main_btn)
    {
        //back_main
        //When back_main_btn clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    }
}
